[
  structure_item (ast/import.ml[9,229+0]..[9,229+30])
    Pstr_module
    "Js" (ast/import.ml[9,229+7]..[9,229+9])
      module_expr (ast/import.ml[9,229+12]..[9,229+30])
        Pmod_ident "Versions.OCaml_500" (ast/import.ml[9,229+12]..[9,229+30])
  structure_item (ast/import.ml[10,260+0]..[10,260+37])
    Pstr_module
    "Ocaml" (ast/import.ml[10,260+7]..[10,260+12])
      module_expr (ast/import.ml[10,260+15]..[10,260+37])
        Pmod_ident "Versions.OCaml_current" (ast/import.ml[10,260+15]..[10,260+37])
  structure_item (ast/import.ml[12,299+0]..[185,6054+3])
    Pstr_module
    "Select_ast" (ast/import.ml[12,299+7]..[12,299+17])
      module_expr (ast/import.ml[12,299+18]..[185,6054+3])
        Pmod_functor "Ocaml" (ast/import.ml[12,299+19]..[12,299+24])
        module_type (ast/import.ml[12,299+27]..[12,299+49])
          Pmty_ident "Versions.OCaml_version" (ast/import.ml[12,299+27]..[12,299+49])
        module_expr (ast/import.ml[12,299+53]..[185,6054+3])
          Pmod_structure
          [
            structure_item (ast/import.ml[13,359+2]..[13,359+12])
              Pstr_include              module_expr (ast/import.ml[13,359+10]..[13,359+12])
                Pmod_ident "Js" (ast/import.ml[13,359+10]..[13,359+12])
            structure_item (ast/import.ml[15,373+2]..[105,3272+5])
              Pstr_module
              "Type" (ast/import.ml[15,373+9]..[15,373+13])
                module_expr (ast/import.ml[15,373+16]..[105,3272+5])
                  Pmod_structure
                  [
                    structure_item (ast/import.ml[16,396+4]..[104,3209+62])
                      Pstr_type Rec
                      [
                        type_declaration "t" (ast/import.ml[16,396+23]..[16,396+24]) (ast/import.ml[16,396+4]..[104,3209+62])
                          ptype_params =
                            [
                              core_type (ast/import.ml[16,396+10]..[16,396+13])
                                Ptyp_var js
                              core_type (ast/import.ml[16,396+15]..[16,396+21])
                                Ptyp_var ocaml
                            ]
                          ptype_cstrs =
                            []
                          ptype_kind =
                            Ptype_variant
                              [
                                (ast/import.ml[26,708+6]..[29,814+13])
                                  "Structure" (ast/import.ml[26,708+8]..[26,708+17])
                                  []
                                  Some
                                    core_type (ast/import.ml[27,726+12]..[29,814+13])
                                      Ptyp_constr "t" (ast/import.ml[29,814+12]..[29,814+13])
                                      [
                                        core_type (ast/import.ml[27,726+14]..[27,726+40])
                                          Ptyp_constr "Js.Ast.Parsetree.structure" (ast/import.ml[27,726+14]..[27,726+40])
                                          []
                                        core_type (ast/import.ml[28,768+14]..[28,768+43])
                                          Ptyp_constr "Ocaml.Ast.Parsetree.structure" (ast/import.ml[28,768+14]..[28,768+43])
                                          []
                                      ]
                                (ast/import.ml[30,828+6]..[33,934+13])
                                  "Signature" (ast/import.ml[30,828+8]..[30,828+17])
                                  []
                                  Some
                                    core_type (ast/import.ml[31,846+12]..[33,934+13])
                                      Ptyp_constr "t" (ast/import.ml[33,934+12]..[33,934+13])
                                      [
                                        core_type (ast/import.ml[31,846+14]..[31,846+40])
                                          Ptyp_constr "Js.Ast.Parsetree.signature" (ast/import.ml[31,846+14]..[31,846+40])
                                          []
                                        core_type (ast/import.ml[32,888+14]..[32,888+43])
                                          Ptyp_constr "Ocaml.Ast.Parsetree.signature" (ast/import.ml[32,888+14]..[32,888+43])
                                          []
                                      ]
                                (ast/import.ml[34,948+6]..[37,1072+13])
                                  "Toplevel_phrase" (ast/import.ml[34,948+8]..[34,948+23])
                                  []
                                  Some
                                    core_type (ast/import.ml[35,972+12]..[37,1072+13])
                                      Ptyp_constr "t" (ast/import.ml[37,1072+12]..[37,1072+13])
                                      [
                                        core_type (ast/import.ml[35,972+14]..[35,972+46])
                                          Ptyp_constr "Js.Ast.Parsetree.toplevel_phrase" (ast/import.ml[35,972+14]..[35,972+46])
                                          []
                                        core_type (ast/import.ml[36,1020+14]..[36,1020+49])
                                          Ptyp_constr "Ocaml.Ast.Parsetree.toplevel_phrase" (ast/import.ml[36,1020+14]..[36,1020+49])
                                          []
                                      ]
                                (ast/import.ml[38,1086+6]..[41,1192+13])
                                  "Core_type" (ast/import.ml[38,1086+8]..[38,1086+17])
                                  []
                                  Some
                                    core_type (ast/import.ml[39,1104+12]..[41,1192+13])
                                      Ptyp_constr "t" (ast/import.ml[41,1192+12]..[41,1192+13])
                                      [
                                        core_type (ast/import.ml[39,1104+14]..[39,1104+40])
                                          Ptyp_constr "Js.Ast.Parsetree.core_type" (ast/import.ml[39,1104+14]..[39,1104+40])
                                          []
                                        core_type (ast/import.ml[40,1146+14]..[40,1146+43])
                                          Ptyp_constr "Ocaml.Ast.Parsetree.core_type" (ast/import.ml[40,1146+14]..[40,1146+43])
                                          []
                                      ]
                                (ast/import.ml[42,1206+6]..[45,1315+13])
                                  "Expression" (ast/import.ml[42,1206+8]..[42,1206+18])
                                  []
                                  Some
                                    core_type (ast/import.ml[43,1225+12]..[45,1315+13])
                                      Ptyp_constr "t" (ast/import.ml[45,1315+12]..[45,1315+13])
                                      [
                                        core_type (ast/import.ml[43,1225+14]..[43,1225+41])
                                          Ptyp_constr "Js.Ast.Parsetree.expression" (ast/import.ml[43,1225+14]..[43,1225+41])
                                          []
                                        core_type (ast/import.ml[44,1268+14]..[44,1268+44])
                                          Ptyp_constr "Ocaml.Ast.Parsetree.expression" (ast/import.ml[44,1268+14]..[44,1268+44])
                                          []
                                      ]
                                (ast/import.ml[46,1329+6]..[49,1429+13])
                                  "Pattern" (ast/import.ml[46,1329+8]..[46,1329+15])
                                  []
                                  Some
                                    core_type (ast/import.ml[47,1345+12]..[49,1429+13])
                                      Ptyp_constr "t" (ast/import.ml[49,1429+12]..[49,1429+13])
                                      [
                                        core_type (ast/import.ml[47,1345+14]..[47,1345+38])
                                          Ptyp_constr "Js.Ast.Parsetree.pattern" (ast/import.ml[47,1345+14]..[47,1345+38])
                                          []
                                        core_type (ast/import.ml[48,1385+14]..[48,1385+41])
                                          Ptyp_constr "Ocaml.Ast.Parsetree.pattern" (ast/import.ml[48,1385+14]..[48,1385+41])
                                          []
                                      ]
                                (ast/import.ml[50,1443+6]..[53,1534+13])
                                  "Case" (ast/import.ml[50,1443+8]..[50,1443+12])
                                  []
                                  Some
                                    core_type (ast/import.ml[51,1456+12]..[53,1534+13])
                                      Ptyp_constr "t" (ast/import.ml[53,1534+12]..[53,1534+13])
                                      [
                                        core_type (ast/import.ml[51,1456+14]..[51,1456+35])
                                          Ptyp_constr "Js.Ast.Parsetree.case" (ast/import.ml[51,1456+14]..[51,1456+35])
                                          []
                                        core_type (ast/import.ml[52,1493+14]..[52,1493+38])
                                          Ptyp_constr "Ocaml.Ast.Parsetree.case" (ast/import.ml[52,1493+14]..[52,1493+38])
                                          []
                                      ]
                                (ast/import.ml[54,1548+6]..[57,1675+13])
                                  "Type_declaration" (ast/import.ml[54,1548+8]..[54,1548+24])
                                  []
                                  Some
                                    core_type (ast/import.ml[55,1573+12]..[57,1675+13])
                                      Ptyp_constr "t" (ast/import.ml[57,1675+12]..[57,1675+13])
                                      [
                                        core_type (ast/import.ml[55,1573+14]..[55,1573+47])
                                          Ptyp_constr "Js.Ast.Parsetree.type_declaration" (ast/import.ml[55,1573+14]..[55,1573+47])
                                          []
                                        core_type (ast/import.ml[56,1622+14]..[56,1622+50])
                                          Ptyp_constr "Ocaml.Ast.Parsetree.type_declaration" (ast/import.ml[56,1622+14]..[56,1622+50])
                                          []
                                      ]
                                (ast/import.ml[58,1689+6]..[61,1810+13])
                                  "Type_extension" (ast/import.ml[58,1689+8]..[58,1689+22])
                                  []
                                  Some
                                    core_type (ast/import.ml[59,1712+12]..[61,1810+13])
                                      Ptyp_constr "t" (ast/import.ml[61,1810+12]..[61,1810+13])
                                      [
                                        core_type (ast/import.ml[59,1712+14]..[59,1712+45])
                                          Ptyp_constr "Js.Ast.Parsetree.type_extension" (ast/import.ml[59,1712+14]..[59,1712+45])
                                          []
                                        core_type (ast/import.ml[60,1759+14]..[60,1759+48])
                                          Ptyp_constr "Ocaml.Ast.Parsetree.type_extension" (ast/import.ml[60,1759+14]..[60,1759+48])
                                          []
                                      ]
                                (ast/import.ml[62,1824+6]..[65,1966+13])
                                  "Extension_constructor" (ast/import.ml[62,1824+8]..[62,1824+29])
                                  []
                                  Some
                                    core_type (ast/import.ml[63,1854+12]..[65,1966+13])
                                      Ptyp_constr "t" (ast/import.ml[65,1966+12]..[65,1966+13])
                                      [
                                        core_type (ast/import.ml[63,1854+14]..[63,1854+52])
                                          Ptyp_constr "Js.Ast.Parsetree.extension_constructor" (ast/import.ml[63,1854+14]..[63,1854+52])
                                          []
                                        core_type (ast/import.ml[64,1908+14]..[64,1908+55])
                                          Ptyp_constr "Ocaml.Ast.Parsetree.extension_constructor" (ast/import.ml[64,1908+14]..[64,1908+55])
                                          []
                                      ]
                                (ast/import.ml[66,1980+6]..[69,2089+13])
                                  "Class_expr" (ast/import.ml[66,1980+8]..[66,1980+18])
                                  []
                                  Some
                                    core_type (ast/import.ml[67,1999+12]..[69,2089+13])
                                      Ptyp_constr "t" (ast/import.ml[69,2089+12]..[69,2089+13])
                                      [
                                        core_type (ast/import.ml[67,1999+14]..[67,1999+41])
                                          Ptyp_constr "Js.Ast.Parsetree.class_expr" (ast/import.ml[67,1999+14]..[67,1999+41])
                                          []
                                        core_type (ast/import.ml[68,2042+14]..[68,2042+44])
                                          Ptyp_constr "Ocaml.Ast.Parsetree.class_expr" (ast/import.ml[68,2042+14]..[68,2042+44])
                                          []
                                      ]
                                (ast/import.ml[70,2103+6]..[73,2215+13])
                                  "Class_field" (ast/import.ml[70,2103+8]..[70,2103+19])
                                  []
                                  Some
                                    core_type (ast/import.ml[71,2123+12]..[73,2215+13])
                                      Ptyp_constr "t" (ast/import.ml[73,2215+12]..[73,2215+13])
                                      [
                                        core_type (ast/import.ml[71,2123+14]..[71,2123+42])
                                          Ptyp_constr "Js.Ast.Parsetree.class_field" (ast/import.ml[71,2123+14]..[71,2123+42])
                                          []
                                        core_type (ast/import.ml[72,2167+14]..[72,2167+45])
                                          Ptyp_constr "Ocaml.Ast.Parsetree.class_field" (ast/import.ml[72,2167+14]..[72,2167+45])
                                          []
                                      ]
                                (ast/import.ml[74,2229+6]..[77,2338+13])
                                  "Class_type" (ast/import.ml[74,2229+8]..[74,2229+18])
                                  []
                                  Some
                                    core_type (ast/import.ml[75,2248+12]..[77,2338+13])
                                      Ptyp_constr "t" (ast/import.ml[77,2338+12]..[77,2338+13])
                                      [
                                        core_type (ast/import.ml[75,2248+14]..[75,2248+41])
                                          Ptyp_constr "Js.Ast.Parsetree.class_type" (ast/import.ml[75,2248+14]..[75,2248+41])
                                          []
                                        core_type (ast/import.ml[76,2291+14]..[76,2291+44])
                                          Ptyp_constr "Ocaml.Ast.Parsetree.class_type" (ast/import.ml[76,2291+14]..[76,2291+44])
                                          []
                                      ]
                                (ast/import.ml[78,2352+6]..[81,2476+13])
                                  "Class_signature" (ast/import.ml[78,2352+8]..[78,2352+23])
                                  []
                                  Some
                                    core_type (ast/import.ml[79,2376+12]..[81,2476+13])
                                      Ptyp_constr "t" (ast/import.ml[81,2476+12]..[81,2476+13])
                                      [
                                        core_type (ast/import.ml[79,2376+14]..[79,2376+46])
                                          Ptyp_constr "Js.Ast.Parsetree.class_signature" (ast/import.ml[79,2376+14]..[79,2376+46])
                                          []
                                        core_type (ast/import.ml[80,2424+14]..[80,2424+49])
                                          Ptyp_constr "Ocaml.Ast.Parsetree.class_signature" (ast/import.ml[80,2424+14]..[80,2424+49])
                                          []
                                      ]
                                (ast/import.ml[82,2490+6]..[85,2617+13])
                                  "Class_type_field" (ast/import.ml[82,2490+8]..[82,2490+24])
                                  []
                                  Some
                                    core_type (ast/import.ml[83,2515+12]..[85,2617+13])
                                      Ptyp_constr "t" (ast/import.ml[85,2617+12]..[85,2617+13])
                                      [
                                        core_type (ast/import.ml[83,2515+14]..[83,2515+47])
                                          Ptyp_constr "Js.Ast.Parsetree.class_type_field" (ast/import.ml[83,2515+14]..[83,2515+47])
                                          []
                                        core_type (ast/import.ml[84,2564+14]..[84,2564+50])
                                          Ptyp_constr "Ocaml.Ast.Parsetree.class_type_field" (ast/import.ml[84,2564+14]..[84,2564+50])
                                          []
                                      ]
                                (ast/import.ml[86,2631+6]..[89,2743+13])
                                  "Module_expr" (ast/import.ml[86,2631+8]..[86,2631+19])
                                  []
                                  Some
                                    core_type (ast/import.ml[87,2651+12]..[89,2743+13])
                                      Ptyp_constr "t" (ast/import.ml[89,2743+12]..[89,2743+13])
                                      [
                                        core_type (ast/import.ml[87,2651+14]..[87,2651+42])
                                          Ptyp_constr "Js.Ast.Parsetree.module_expr" (ast/import.ml[87,2651+14]..[87,2651+42])
                                          []
                                        core_type (ast/import.ml[88,2695+14]..[88,2695+45])
                                          Ptyp_constr "Ocaml.Ast.Parsetree.module_expr" (ast/import.ml[88,2695+14]..[88,2695+45])
                                          []
                                      ]
                                (ast/import.ml[90,2757+6]..[93,2869+13])
                                  "Module_type" (ast/import.ml[90,2757+8]..[90,2757+19])
                                  []
                                  Some
                                    core_type (ast/import.ml[91,2777+12]..[93,2869+13])
                                      Ptyp_constr "t" (ast/import.ml[93,2869+12]..[93,2869+13])
                                      [
                                        core_type (ast/import.ml[91,2777+14]..[91,2777+42])
                                          Ptyp_constr "Js.Ast.Parsetree.module_type" (ast/import.ml[91,2777+14]..[91,2777+42])
                                          []
                                        core_type (ast/import.ml[92,2821+14]..[92,2821+45])
                                          Ptyp_constr "Ocaml.Ast.Parsetree.module_type" (ast/import.ml[92,2821+14]..[92,2821+45])
                                          []
                                      ]
                                (ast/import.ml[94,2883+6]..[97,3004+13])
                                  "Signature_item" (ast/import.ml[94,2883+8]..[94,2883+22])
                                  []
                                  Some
                                    core_type (ast/import.ml[95,2906+12]..[97,3004+13])
                                      Ptyp_constr "t" (ast/import.ml[97,3004+12]..[97,3004+13])
                                      [
                                        core_type (ast/import.ml[95,2906+14]..[95,2906+45])
                                          Ptyp_constr "Js.Ast.Parsetree.signature_item" (ast/import.ml[95,2906+14]..[95,2906+45])
                                          []
                                        core_type (ast/import.ml[96,2953+14]..[96,2953+48])
                                          Ptyp_constr "Ocaml.Ast.Parsetree.signature_item" (ast/import.ml[96,2953+14]..[96,2953+48])
                                          []
                                      ]
                                (ast/import.ml[98,3018+6]..[101,3139+13])
                                  "Structure_item" (ast/import.ml[98,3018+8]..[98,3018+22])
                                  []
                                  Some
                                    core_type (ast/import.ml[99,3041+12]..[101,3139+13])
                                      Ptyp_constr "t" (ast/import.ml[101,3139+12]..[101,3139+13])
                                      [
                                        core_type (ast/import.ml[99,3041+14]..[99,3041+45])
                                          Ptyp_constr "Js.Ast.Parsetree.structure_item" (ast/import.ml[99,3041+14]..[99,3041+45])
                                          []
                                        core_type (ast/import.ml[100,3088+14]..[100,3088+48])
                                          Ptyp_constr "Ocaml.Ast.Parsetree.structure_item" (ast/import.ml[100,3088+14]..[100,3088+48])
                                          []
                                      ]
                                (ast/import.ml[103,3159+6]..[103,3159+49])
                                  "List" (ast/import.ml[103,3159+8]..[103,3159+12])
                                  [
                                    core_type (ast/import.ml[103,3159+15]..[103,3159+25])
                                      Ptyp_constr "t" (ast/import.ml[103,3159+24]..[103,3159+25])
                                      [
                                        core_type (ast/import.ml[103,3159+16]..[103,3159+18])
                                          Ptyp_var a
                                        core_type (ast/import.ml[103,3159+20]..[103,3159+22])
                                          Ptyp_var b
                                      ]
                                  ]
                                  Some
                                    core_type (ast/import.ml[103,3159+29]..[103,3159+49])
                                      Ptyp_constr "t" (ast/import.ml[103,3159+48]..[103,3159+49])
                                      [
                                        core_type (ast/import.ml[103,3159+30]..[103,3159+37])
                                          Ptyp_constr "list" (ast/import.ml[103,3159+33]..[103,3159+37])
                                          [
                                            core_type (ast/import.ml[103,3159+30]..[103,3159+32])
                                              Ptyp_var a
                                          ]
                                        core_type (ast/import.ml[103,3159+39]..[103,3159+46])
                                          Ptyp_constr "list" (ast/import.ml[103,3159+42]..[103,3159+46])
                                          [
                                            core_type (ast/import.ml[103,3159+39]..[103,3159+41])
                                              Ptyp_var b
                                          ]
                                      ]
                                (ast/import.ml[104,3209+6]..[104,3209+62])
                                  "Pair" (ast/import.ml[104,3209+8]..[104,3209+12])
                                  [
                                    core_type (ast/import.ml[104,3209+15]..[104,3209+25])
                                      Ptyp_constr "t" (ast/import.ml[104,3209+24]..[104,3209+25])
                                      [
                                        core_type (ast/import.ml[104,3209+16]..[104,3209+18])
                                          Ptyp_var a
                                        core_type (ast/import.ml[104,3209+20]..[104,3209+22])
                                          Ptyp_var b
                                      ]
                                    core_type (ast/import.ml[104,3209+28]..[104,3209+38])
                                      Ptyp_constr "t" (ast/import.ml[104,3209+37]..[104,3209+38])
                                      [
                                        core_type (ast/import.ml[104,3209+29]..[104,3209+31])
                                          Ptyp_var c
                                        core_type (ast/import.ml[104,3209+33]..[104,3209+35])
                                          Ptyp_var d
                                      ]
                                  ]
                                  Some
                                    core_type (ast/import.ml[104,3209+42]..[104,3209+62])
                                      Ptyp_constr "t" (ast/import.ml[104,3209+61]..[104,3209+62])
                                      [
                                        core_type (ast/import.ml[104,3209+43]..[104,3209+50])
                                          Ptyp_tuple
                                          [
                                            core_type (ast/import.ml[104,3209+43]..[104,3209+45])
                                              Ptyp_var a
                                            core_type (ast/import.ml[104,3209+48]..[104,3209+50])
                                              Ptyp_var c
                                          ]
                                        core_type (ast/import.ml[104,3209+52]..[104,3209+59])
                                          Ptyp_tuple
                                          [
                                            core_type (ast/import.ml[104,3209+52]..[104,3209+54])
                                              Ptyp_var b
                                            core_type (ast/import.ml[104,3209+57]..[104,3209+59])
                                              Ptyp_var d
                                          ]
                                      ]
                              ]
                          ptype_private = Public
                          ptype_manifest =
                            None
                      ]
                  ]
            structure_item (ast/import.ml[107,3279+2]..[107,3279+11])
              Pstr_open Fresh
              module_expr (ast/import.ml[107,3279+7]..[107,3279+11])
                Pmod_ident "Type" (ast/import.ml[107,3279+7]..[107,3279+11])
            structure_item (ast/import.ml[108,3291+2]..[108,3291+49])
              Pstr_module
              "Of_ocaml" (ast/import.ml[108,3291+9]..[108,3291+17])
                module_expr (ast/import.ml[108,3291+20]..[108,3291+49])
                  Pmod_apply
                  module_expr (ast/import.ml[108,3291+20]..[108,3291+44])
                    Pmod_apply
                    module_expr (ast/import.ml[108,3291+20]..[108,3291+36])
                      Pmod_ident "Versions.Convert" (ast/import.ml[108,3291+20]..[108,3291+36])
                    module_expr (ast/import.ml[108,3291+38]..[108,3291+43])
                      Pmod_ident "Ocaml" (ast/import.ml[108,3291+38]..[108,3291+43])
                  module_expr (ast/import.ml[108,3291+46]..[108,3291+48])
                    Pmod_ident "Js" (ast/import.ml[108,3291+46]..[108,3291+48])
            structure_item (ast/import.ml[109,3341+2]..[109,3341+49])
              Pstr_module
              "To_ocaml" (ast/import.ml[109,3341+9]..[109,3341+17])
                module_expr (ast/import.ml[109,3341+20]..[109,3341+49])
                  Pmod_apply
                  module_expr (ast/import.ml[109,3341+20]..[109,3341+41])
                    Pmod_apply
                    module_expr (ast/import.ml[109,3341+20]..[109,3341+36])
                      Pmod_ident "Versions.Convert" (ast/import.ml[109,3341+20]..[109,3341+36])
                    module_expr (ast/import.ml[109,3341+38]..[109,3341+40])
                      Pmod_ident "Js" (ast/import.ml[109,3341+38]..[109,3341+40])
                  module_expr (ast/import.ml[109,3341+43]..[109,3341+48])
                    Pmod_ident "Ocaml" (ast/import.ml[109,3341+43]..[109,3341+48])
            structure_item (ast/import.ml[111,3392+2]..[145,4606+34])
              Pstr_value Rec
              [
                <def>
                  pattern (ast/import.ml[111,3392+10]..[111,3392+69]) ghost
                    Ppat_constraint
                    pattern (ast/import.ml[111,3392+10]..[111,3392+18])
                      Ppat_var "of_ocaml" (ast/import.ml[111,3392+10]..[111,3392+18])
                    core_type (ast/import.ml[111,3392+10]..[145,4606+34]) ghost
                      Ptyp_poly 'ocaml 'js
                      core_type (ast/import.ml[111,3392+36]..[111,3392+69])
                        Ptyp_arrow
                        Nolabel
                        core_type (ast/import.ml[111,3392+36]..[111,3392+54])
                          Ptyp_constr "Type.t" (ast/import.ml[111,3392+48]..[111,3392+54])
                          [
                            core_type (ast/import.ml[111,3392+37]..[111,3392+39])
                              Ptyp_var js
                            core_type (ast/import.ml[111,3392+41]..[111,3392+46])
                              Ptyp_var ocaml
                          ]
                        core_type (ast/import.ml[111,3392+58]..[111,3392+69])
                          Ptyp_arrow
                          Nolabel
                          core_type (ast/import.ml[111,3392+58]..[111,3392+63])
                            Ptyp_var ocaml
                          core_type (ast/import.ml[111,3392+67]..[111,3392+69])
                            Ptyp_var js
                  expression (ast/import.ml[111,3392+10]..[145,4606+34])
                    Pexp_newtype "ocaml"
                    expression (ast/import.ml[111,3392+10]..[145,4606+34])
                      Pexp_newtype "js"
                      expression (ast/import.ml[111,3392+10]..[145,4606+34])
                        Pexp_constraint
                        expression (ast/import.ml[112,3464+4]..[145,4606+34])
                          Pexp_open Fresh
                          module_expr (ast/import.ml[112,3464+13]..[112,3464+21])
                            Pmod_ident "Of_ocaml" (ast/import.ml[112,3464+13]..[112,3464+21])
                          expression (ast/import.ml[113,3489+4]..[145,4606+34])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (ast/import.ml[113,3489+8]..[113,3489+12])
                              Ppat_var "node" (ast/import.ml[113,3489+8]..[113,3489+12])
                            expression (ast/import.ml[114,3505+6]..[145,4606+34])
                              Pexp_match
                              expression (ast/import.ml[114,3505+12]..[114,3505+16])
                                Pexp_ident "node" (ast/import.ml[114,3505+12]..[114,3505+16])
                              [
                                <case>
                                  pattern (ast/import.ml[121,3679+8]..[121,3679+17])
                                    Ppat_construct "Structure" (ast/import.ml[121,3679+8]..[121,3679+17])
                                    None
                                  expression (ast/import.ml[121,3679+21]..[121,3679+35])
                                    Pexp_ident "copy_structure" (ast/import.ml[121,3679+21]..[121,3679+35])
                                <case>
                                  pattern (ast/import.ml[122,3715+8]..[122,3715+17])
                                    Ppat_construct "Signature" (ast/import.ml[122,3715+8]..[122,3715+17])
                                    None
                                  expression (ast/import.ml[122,3715+21]..[122,3715+35])
                                    Pexp_ident "copy_signature" (ast/import.ml[122,3715+21]..[122,3715+35])
                                <case>
                                  pattern (ast/import.ml[123,3751+8]..[123,3751+23])
                                    Ppat_construct "Toplevel_phrase" (ast/import.ml[123,3751+8]..[123,3751+23])
                                    None
                                  expression (ast/import.ml[123,3751+27]..[123,3751+47])
                                    Pexp_ident "copy_toplevel_phrase" (ast/import.ml[123,3751+27]..[123,3751+47])
                                <case>
                                  pattern (ast/import.ml[124,3799+8]..[124,3799+17])
                                    Ppat_construct "Core_type" (ast/import.ml[124,3799+8]..[124,3799+17])
                                    None
                                  expression (ast/import.ml[124,3799+21]..[124,3799+35])
                                    Pexp_ident "copy_core_type" (ast/import.ml[124,3799+21]..[124,3799+35])
                                <case>
                                  pattern (ast/import.ml[125,3835+8]..[125,3835+18])
                                    Ppat_construct "Expression" (ast/import.ml[125,3835+8]..[125,3835+18])
                                    None
                                  expression (ast/import.ml[125,3835+22]..[125,3835+37])
                                    Pexp_ident "copy_expression" (ast/import.ml[125,3835+22]..[125,3835+37])
                                <case>
                                  pattern (ast/import.ml[126,3873+8]..[126,3873+15])
                                    Ppat_construct "Pattern" (ast/import.ml[126,3873+8]..[126,3873+15])
                                    None
                                  expression (ast/import.ml[126,3873+19]..[126,3873+31])
                                    Pexp_ident "copy_pattern" (ast/import.ml[126,3873+19]..[126,3873+31])
                                <case>
                                  pattern (ast/import.ml[127,3905+8]..[127,3905+12])
                                    Ppat_construct "Case" (ast/import.ml[127,3905+8]..[127,3905+12])
                                    None
                                  expression (ast/import.ml[127,3905+16]..[127,3905+25])
                                    Pexp_ident "copy_case" (ast/import.ml[127,3905+16]..[127,3905+25])
                                <case>
                                  pattern (ast/import.ml[128,3931+8]..[128,3931+24])
                                    Ppat_construct "Type_declaration" (ast/import.ml[128,3931+8]..[128,3931+24])
                                    None
                                  expression (ast/import.ml[128,3931+28]..[128,3931+49])
                                    Pexp_ident "copy_type_declaration" (ast/import.ml[128,3931+28]..[128,3931+49])
                                <case>
                                  pattern (ast/import.ml[129,3981+8]..[129,3981+22])
                                    Ppat_construct "Type_extension" (ast/import.ml[129,3981+8]..[129,3981+22])
                                    None
                                  expression (ast/import.ml[129,3981+26]..[129,3981+45])
                                    Pexp_ident "copy_type_extension" (ast/import.ml[129,3981+26]..[129,3981+45])
                                <case>
                                  pattern (ast/import.ml[130,4027+8]..[130,4027+29])
                                    Ppat_construct "Extension_constructor" (ast/import.ml[130,4027+8]..[130,4027+29])
                                    None
                                  expression (ast/import.ml[130,4027+33]..[130,4027+59])
                                    Pexp_ident "copy_extension_constructor" (ast/import.ml[130,4027+33]..[130,4027+59])
                                <case>
                                  pattern (ast/import.ml[131,4087+8]..[131,4087+18])
                                    Ppat_construct "Class_expr" (ast/import.ml[131,4087+8]..[131,4087+18])
                                    None
                                  expression (ast/import.ml[131,4087+22]..[131,4087+37])
                                    Pexp_ident "copy_class_expr" (ast/import.ml[131,4087+22]..[131,4087+37])
                                <case>
                                  pattern (ast/import.ml[132,4125+8]..[132,4125+19])
                                    Ppat_construct "Class_field" (ast/import.ml[132,4125+8]..[132,4125+19])
                                    None
                                  expression (ast/import.ml[132,4125+23]..[132,4125+39])
                                    Pexp_ident "copy_class_field" (ast/import.ml[132,4125+23]..[132,4125+39])
                                <case>
                                  pattern (ast/import.ml[133,4165+8]..[133,4165+18])
                                    Ppat_construct "Class_type" (ast/import.ml[133,4165+8]..[133,4165+18])
                                    None
                                  expression (ast/import.ml[133,4165+22]..[133,4165+37])
                                    Pexp_ident "copy_class_type" (ast/import.ml[133,4165+22]..[133,4165+37])
                                <case>
                                  pattern (ast/import.ml[134,4203+8]..[134,4203+23])
                                    Ppat_construct "Class_signature" (ast/import.ml[134,4203+8]..[134,4203+23])
                                    None
                                  expression (ast/import.ml[134,4203+27]..[134,4203+47])
                                    Pexp_ident "copy_class_signature" (ast/import.ml[134,4203+27]..[134,4203+47])
                                <case>
                                  pattern (ast/import.ml[135,4251+8]..[135,4251+24])
                                    Ppat_construct "Class_type_field" (ast/import.ml[135,4251+8]..[135,4251+24])
                                    None
                                  expression (ast/import.ml[135,4251+28]..[135,4251+49])
                                    Pexp_ident "copy_class_type_field" (ast/import.ml[135,4251+28]..[135,4251+49])
                                <case>
                                  pattern (ast/import.ml[136,4301+8]..[136,4301+19])
                                    Ppat_construct "Module_expr" (ast/import.ml[136,4301+8]..[136,4301+19])
                                    None
                                  expression (ast/import.ml[136,4301+23]..[136,4301+39])
                                    Pexp_ident "copy_module_expr" (ast/import.ml[136,4301+23]..[136,4301+39])
                                <case>
                                  pattern (ast/import.ml[137,4341+8]..[137,4341+19])
                                    Ppat_construct "Module_type" (ast/import.ml[137,4341+8]..[137,4341+19])
                                    None
                                  expression (ast/import.ml[137,4341+23]..[137,4341+39])
                                    Pexp_ident "copy_module_type" (ast/import.ml[137,4341+23]..[137,4341+39])
                                <case>
                                  pattern (ast/import.ml[138,4381+8]..[138,4381+22])
                                    Ppat_construct "Signature_item" (ast/import.ml[138,4381+8]..[138,4381+22])
                                    None
                                  expression (ast/import.ml[138,4381+26]..[138,4381+45])
                                    Pexp_ident "copy_signature_item" (ast/import.ml[138,4381+26]..[138,4381+45])
                                <case>
                                  pattern (ast/import.ml[139,4427+8]..[139,4427+22])
                                    Ppat_construct "Structure_item" (ast/import.ml[139,4427+8]..[139,4427+22])
                                    None
                                  expression (ast/import.ml[139,4427+26]..[139,4427+45])
                                    Pexp_ident "copy_structure_item" (ast/import.ml[139,4427+26]..[139,4427+45])
                                <case>
                                  pattern (ast/import.ml[141,4479+8]..[141,4479+14])
                                    Ppat_construct "List" (ast/import.ml[141,4479+8]..[141,4479+12])
                                    Some
                                      pattern (ast/import.ml[141,4479+13]..[141,4479+14])
                                        Ppat_var "t" (ast/import.ml[141,4479+13]..[141,4479+14])
                                  expression (ast/import.ml[141,4479+18]..[141,4479+39])
                                    Pexp_apply
                                    expression (ast/import.ml[141,4479+18]..[141,4479+26])
                                      Pexp_ident "List.map" (ast/import.ml[141,4479+18]..[141,4479+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (ast/import.ml[141,4479+27]..[141,4479+39])
                                          Pexp_apply
                                          expression (ast/import.ml[141,4479+28]..[141,4479+36])
                                            Pexp_ident "of_ocaml" (ast/import.ml[141,4479+28]..[141,4479+36])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (ast/import.ml[141,4479+37]..[141,4479+38])
                                                Pexp_ident "t" (ast/import.ml[141,4479+37]..[141,4479+38])
                                          ]
                                    ]
                                <case>
                                  pattern (ast/import.ml[142,4519+8]..[142,4519+19])
                                    Ppat_construct "Pair" (ast/import.ml[142,4519+8]..[142,4519+12])
                                    Some
                                      pattern (ast/import.ml[142,4519+13]..[142,4519+19])
                                        Ppat_tuple
                                        [
                                          pattern (ast/import.ml[142,4519+14]..[142,4519+15])
                                            Ppat_var "a" (ast/import.ml[142,4519+14]..[142,4519+15])
                                          pattern (ast/import.ml[142,4519+17]..[142,4519+18])
                                            Ppat_var "b" (ast/import.ml[142,4519+17]..[142,4519+18])
                                        ]
                                  expression (ast/import.ml[143,4542+10]..[145,4606+34])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (ast/import.ml[143,4542+14]..[143,4542+15])
                                          Ppat_var "f" (ast/import.ml[143,4542+14]..[143,4542+15])
                                        expression (ast/import.ml[143,4542+18]..[143,4542+28])
                                          Pexp_apply
                                          expression (ast/import.ml[143,4542+18]..[143,4542+26])
                                            Pexp_ident "of_ocaml" (ast/import.ml[143,4542+18]..[143,4542+26])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (ast/import.ml[143,4542+27]..[143,4542+28])
                                                Pexp_ident "a" (ast/import.ml[143,4542+27]..[143,4542+28])
                                          ]
                                    ]
                                    expression (ast/import.ml[144,4574+10]..[145,4606+34])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (ast/import.ml[144,4574+14]..[144,4574+15])
                                            Ppat_var "g" (ast/import.ml[144,4574+14]..[144,4574+15])
                                          expression (ast/import.ml[144,4574+18]..[144,4574+28])
                                            Pexp_apply
                                            expression (ast/import.ml[144,4574+18]..[144,4574+26])
                                              Pexp_ident "of_ocaml" (ast/import.ml[144,4574+18]..[144,4574+26])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (ast/import.ml[144,4574+27]..[144,4574+28])
                                                  Pexp_ident "b" (ast/import.ml[144,4574+27]..[144,4574+28])
                                            ]
                                      ]
                                      expression (ast/import.ml[145,4606+10]..[145,4606+34])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (ast/import.ml[145,4606+14]..[145,4606+20])
                                          Ppat_tuple
                                          [
                                            pattern (ast/import.ml[145,4606+15]..[145,4606+16])
                                              Ppat_var "x" (ast/import.ml[145,4606+15]..[145,4606+16])
                                            pattern (ast/import.ml[145,4606+18]..[145,4606+19])
                                              Ppat_var "y" (ast/import.ml[145,4606+18]..[145,4606+19])
                                          ]
                                        expression (ast/import.ml[145,4606+24]..[145,4606+34])
                                          Pexp_tuple
                                          [
                                            expression (ast/import.ml[145,4606+25]..[145,4606+28])
                                              Pexp_apply
                                              expression (ast/import.ml[145,4606+25]..[145,4606+26])
                                                Pexp_ident "f" (ast/import.ml[145,4606+25]..[145,4606+26])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (ast/import.ml[145,4606+27]..[145,4606+28])
                                                    Pexp_ident "x" (ast/import.ml[145,4606+27]..[145,4606+28])
                                              ]
                                            expression (ast/import.ml[145,4606+30]..[145,4606+33])
                                              Pexp_apply
                                              expression (ast/import.ml[145,4606+30]..[145,4606+31])
                                                Pexp_ident "g" (ast/import.ml[145,4606+30]..[145,4606+31])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (ast/import.ml[145,4606+32]..[145,4606+33])
                                                    Pexp_ident "y" (ast/import.ml[145,4606+32]..[145,4606+33])
                                              ]
                                          ]
                              ]
                        core_type (ast/import.ml[111,3392+36]..[111,3392+69])
                          Ptyp_arrow
                          Nolabel
                          core_type (ast/import.ml[111,3392+36]..[111,3392+54])
                            Ptyp_constr "Type.t" (ast/import.ml[111,3392+48]..[111,3392+54])
                            [
                              core_type (ast/import.ml[111,3392+37]..[111,3392+39])
                                Ptyp_constr "js" (ast/import.ml[111,3392+37]..[111,3392+39])
                                []
                              core_type (ast/import.ml[111,3392+41]..[111,3392+46])
                                Ptyp_constr "ocaml" (ast/import.ml[111,3392+41]..[111,3392+46])
                                []
                            ]
                          core_type (ast/import.ml[111,3392+58]..[111,3392+69])
                            Ptyp_arrow
                            Nolabel
                            core_type (ast/import.ml[111,3392+58]..[111,3392+63])
                              Ptyp_constr "ocaml" (ast/import.ml[111,3392+58]..[111,3392+63])
                              []
                            core_type (ast/import.ml[111,3392+67]..[111,3392+69])
                              Ptyp_constr "js" (ast/import.ml[111,3392+67]..[111,3392+69])
                              []
              ]
            structure_item (ast/import.ml[147,4642+2]..[181,5856+34])
              Pstr_value Rec
              [
                <def>
                  pattern (ast/import.ml[147,4642+10]..[147,4642+69]) ghost
                    Ppat_constraint
                    pattern (ast/import.ml[147,4642+10]..[147,4642+18])
                      Ppat_var "to_ocaml" (ast/import.ml[147,4642+10]..[147,4642+18])
                    core_type (ast/import.ml[147,4642+10]..[181,5856+34]) ghost
                      Ptyp_poly 'ocaml 'js
                      core_type (ast/import.ml[147,4642+36]..[147,4642+69])
                        Ptyp_arrow
                        Nolabel
                        core_type (ast/import.ml[147,4642+36]..[147,4642+54])
                          Ptyp_constr "Type.t" (ast/import.ml[147,4642+48]..[147,4642+54])
                          [
                            core_type (ast/import.ml[147,4642+37]..[147,4642+39])
                              Ptyp_var js
                            core_type (ast/import.ml[147,4642+41]..[147,4642+46])
                              Ptyp_var ocaml
                          ]
                        core_type (ast/import.ml[147,4642+58]..[147,4642+69])
                          Ptyp_arrow
                          Nolabel
                          core_type (ast/import.ml[147,4642+58]..[147,4642+60])
                            Ptyp_var js
                          core_type (ast/import.ml[147,4642+64]..[147,4642+69])
                            Ptyp_var ocaml
                  expression (ast/import.ml[147,4642+10]..[181,5856+34])
                    Pexp_newtype "ocaml"
                    expression (ast/import.ml[147,4642+10]..[181,5856+34])
                      Pexp_newtype "js"
                      expression (ast/import.ml[147,4642+10]..[181,5856+34])
                        Pexp_constraint
                        expression (ast/import.ml[148,4714+4]..[181,5856+34])
                          Pexp_open Fresh
                          module_expr (ast/import.ml[148,4714+13]..[148,4714+21])
                            Pmod_ident "To_ocaml" (ast/import.ml[148,4714+13]..[148,4714+21])
                          expression (ast/import.ml[149,4739+4]..[181,5856+34])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (ast/import.ml[149,4739+8]..[149,4739+12])
                              Ppat_var "node" (ast/import.ml[149,4739+8]..[149,4739+12])
                            expression (ast/import.ml[150,4755+6]..[181,5856+34])
                              Pexp_match
                              expression (ast/import.ml[150,4755+12]..[150,4755+16])
                                Pexp_ident "node" (ast/import.ml[150,4755+12]..[150,4755+16])
                              [
                                <case>
                                  pattern (ast/import.ml[157,4929+8]..[157,4929+17])
                                    Ppat_construct "Structure" (ast/import.ml[157,4929+8]..[157,4929+17])
                                    None
                                  expression (ast/import.ml[157,4929+21]..[157,4929+35])
                                    Pexp_ident "copy_structure" (ast/import.ml[157,4929+21]..[157,4929+35])
                                <case>
                                  pattern (ast/import.ml[158,4965+8]..[158,4965+17])
                                    Ppat_construct "Signature" (ast/import.ml[158,4965+8]..[158,4965+17])
                                    None
                                  expression (ast/import.ml[158,4965+21]..[158,4965+35])
                                    Pexp_ident "copy_signature" (ast/import.ml[158,4965+21]..[158,4965+35])
                                <case>
                                  pattern (ast/import.ml[159,5001+8]..[159,5001+23])
                                    Ppat_construct "Toplevel_phrase" (ast/import.ml[159,5001+8]..[159,5001+23])
                                    None
                                  expression (ast/import.ml[159,5001+27]..[159,5001+47])
                                    Pexp_ident "copy_toplevel_phrase" (ast/import.ml[159,5001+27]..[159,5001+47])
                                <case>
                                  pattern (ast/import.ml[160,5049+8]..[160,5049+17])
                                    Ppat_construct "Core_type" (ast/import.ml[160,5049+8]..[160,5049+17])
                                    None
                                  expression (ast/import.ml[160,5049+21]..[160,5049+35])
                                    Pexp_ident "copy_core_type" (ast/import.ml[160,5049+21]..[160,5049+35])
                                <case>
                                  pattern (ast/import.ml[161,5085+8]..[161,5085+18])
                                    Ppat_construct "Expression" (ast/import.ml[161,5085+8]..[161,5085+18])
                                    None
                                  expression (ast/import.ml[161,5085+22]..[161,5085+37])
                                    Pexp_ident "copy_expression" (ast/import.ml[161,5085+22]..[161,5085+37])
                                <case>
                                  pattern (ast/import.ml[162,5123+8]..[162,5123+15])
                                    Ppat_construct "Pattern" (ast/import.ml[162,5123+8]..[162,5123+15])
                                    None
                                  expression (ast/import.ml[162,5123+19]..[162,5123+31])
                                    Pexp_ident "copy_pattern" (ast/import.ml[162,5123+19]..[162,5123+31])
                                <case>
                                  pattern (ast/import.ml[163,5155+8]..[163,5155+12])
                                    Ppat_construct "Case" (ast/import.ml[163,5155+8]..[163,5155+12])
                                    None
                                  expression (ast/import.ml[163,5155+16]..[163,5155+25])
                                    Pexp_ident "copy_case" (ast/import.ml[163,5155+16]..[163,5155+25])
                                <case>
                                  pattern (ast/import.ml[164,5181+8]..[164,5181+24])
                                    Ppat_construct "Type_declaration" (ast/import.ml[164,5181+8]..[164,5181+24])
                                    None
                                  expression (ast/import.ml[164,5181+28]..[164,5181+49])
                                    Pexp_ident "copy_type_declaration" (ast/import.ml[164,5181+28]..[164,5181+49])
                                <case>
                                  pattern (ast/import.ml[165,5231+8]..[165,5231+22])
                                    Ppat_construct "Type_extension" (ast/import.ml[165,5231+8]..[165,5231+22])
                                    None
                                  expression (ast/import.ml[165,5231+26]..[165,5231+45])
                                    Pexp_ident "copy_type_extension" (ast/import.ml[165,5231+26]..[165,5231+45])
                                <case>
                                  pattern (ast/import.ml[166,5277+8]..[166,5277+29])
                                    Ppat_construct "Extension_constructor" (ast/import.ml[166,5277+8]..[166,5277+29])
                                    None
                                  expression (ast/import.ml[166,5277+33]..[166,5277+59])
                                    Pexp_ident "copy_extension_constructor" (ast/import.ml[166,5277+33]..[166,5277+59])
                                <case>
                                  pattern (ast/import.ml[167,5337+8]..[167,5337+18])
                                    Ppat_construct "Class_expr" (ast/import.ml[167,5337+8]..[167,5337+18])
                                    None
                                  expression (ast/import.ml[167,5337+22]..[167,5337+37])
                                    Pexp_ident "copy_class_expr" (ast/import.ml[167,5337+22]..[167,5337+37])
                                <case>
                                  pattern (ast/import.ml[168,5375+8]..[168,5375+19])
                                    Ppat_construct "Class_field" (ast/import.ml[168,5375+8]..[168,5375+19])
                                    None
                                  expression (ast/import.ml[168,5375+23]..[168,5375+39])
                                    Pexp_ident "copy_class_field" (ast/import.ml[168,5375+23]..[168,5375+39])
                                <case>
                                  pattern (ast/import.ml[169,5415+8]..[169,5415+18])
                                    Ppat_construct "Class_type" (ast/import.ml[169,5415+8]..[169,5415+18])
                                    None
                                  expression (ast/import.ml[169,5415+22]..[169,5415+37])
                                    Pexp_ident "copy_class_type" (ast/import.ml[169,5415+22]..[169,5415+37])
                                <case>
                                  pattern (ast/import.ml[170,5453+8]..[170,5453+23])
                                    Ppat_construct "Class_signature" (ast/import.ml[170,5453+8]..[170,5453+23])
                                    None
                                  expression (ast/import.ml[170,5453+27]..[170,5453+47])
                                    Pexp_ident "copy_class_signature" (ast/import.ml[170,5453+27]..[170,5453+47])
                                <case>
                                  pattern (ast/import.ml[171,5501+8]..[171,5501+24])
                                    Ppat_construct "Class_type_field" (ast/import.ml[171,5501+8]..[171,5501+24])
                                    None
                                  expression (ast/import.ml[171,5501+28]..[171,5501+49])
                                    Pexp_ident "copy_class_type_field" (ast/import.ml[171,5501+28]..[171,5501+49])
                                <case>
                                  pattern (ast/import.ml[172,5551+8]..[172,5551+19])
                                    Ppat_construct "Module_expr" (ast/import.ml[172,5551+8]..[172,5551+19])
                                    None
                                  expression (ast/import.ml[172,5551+23]..[172,5551+39])
                                    Pexp_ident "copy_module_expr" (ast/import.ml[172,5551+23]..[172,5551+39])
                                <case>
                                  pattern (ast/import.ml[173,5591+8]..[173,5591+19])
                                    Ppat_construct "Module_type" (ast/import.ml[173,5591+8]..[173,5591+19])
                                    None
                                  expression (ast/import.ml[173,5591+23]..[173,5591+39])
                                    Pexp_ident "copy_module_type" (ast/import.ml[173,5591+23]..[173,5591+39])
                                <case>
                                  pattern (ast/import.ml[174,5631+8]..[174,5631+22])
                                    Ppat_construct "Signature_item" (ast/import.ml[174,5631+8]..[174,5631+22])
                                    None
                                  expression (ast/import.ml[174,5631+26]..[174,5631+45])
                                    Pexp_ident "copy_signature_item" (ast/import.ml[174,5631+26]..[174,5631+45])
                                <case>
                                  pattern (ast/import.ml[175,5677+8]..[175,5677+22])
                                    Ppat_construct "Structure_item" (ast/import.ml[175,5677+8]..[175,5677+22])
                                    None
                                  expression (ast/import.ml[175,5677+26]..[175,5677+45])
                                    Pexp_ident "copy_structure_item" (ast/import.ml[175,5677+26]..[175,5677+45])
                                <case>
                                  pattern (ast/import.ml[177,5729+8]..[177,5729+14])
                                    Ppat_construct "List" (ast/import.ml[177,5729+8]..[177,5729+12])
                                    Some
                                      pattern (ast/import.ml[177,5729+13]..[177,5729+14])
                                        Ppat_var "t" (ast/import.ml[177,5729+13]..[177,5729+14])
                                  expression (ast/import.ml[177,5729+18]..[177,5729+39])
                                    Pexp_apply
                                    expression (ast/import.ml[177,5729+18]..[177,5729+26])
                                      Pexp_ident "List.map" (ast/import.ml[177,5729+18]..[177,5729+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (ast/import.ml[177,5729+27]..[177,5729+39])
                                          Pexp_apply
                                          expression (ast/import.ml[177,5729+28]..[177,5729+36])
                                            Pexp_ident "to_ocaml" (ast/import.ml[177,5729+28]..[177,5729+36])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (ast/import.ml[177,5729+37]..[177,5729+38])
                                                Pexp_ident "t" (ast/import.ml[177,5729+37]..[177,5729+38])
                                          ]
                                    ]
                                <case>
                                  pattern (ast/import.ml[178,5769+8]..[178,5769+19])
                                    Ppat_construct "Pair" (ast/import.ml[178,5769+8]..[178,5769+12])
                                    Some
                                      pattern (ast/import.ml[178,5769+13]..[178,5769+19])
                                        Ppat_tuple
                                        [
                                          pattern (ast/import.ml[178,5769+14]..[178,5769+15])
                                            Ppat_var "a" (ast/import.ml[178,5769+14]..[178,5769+15])
                                          pattern (ast/import.ml[178,5769+17]..[178,5769+18])
                                            Ppat_var "b" (ast/import.ml[178,5769+17]..[178,5769+18])
                                        ]
                                  expression (ast/import.ml[179,5792+10]..[181,5856+34])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (ast/import.ml[179,5792+14]..[179,5792+15])
                                          Ppat_var "f" (ast/import.ml[179,5792+14]..[179,5792+15])
                                        expression (ast/import.ml[179,5792+18]..[179,5792+28])
                                          Pexp_apply
                                          expression (ast/import.ml[179,5792+18]..[179,5792+26])
                                            Pexp_ident "to_ocaml" (ast/import.ml[179,5792+18]..[179,5792+26])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (ast/import.ml[179,5792+27]..[179,5792+28])
                                                Pexp_ident "a" (ast/import.ml[179,5792+27]..[179,5792+28])
                                          ]
                                    ]
                                    expression (ast/import.ml[180,5824+10]..[181,5856+34])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (ast/import.ml[180,5824+14]..[180,5824+15])
                                            Ppat_var "g" (ast/import.ml[180,5824+14]..[180,5824+15])
                                          expression (ast/import.ml[180,5824+18]..[180,5824+28])
                                            Pexp_apply
                                            expression (ast/import.ml[180,5824+18]..[180,5824+26])
                                              Pexp_ident "to_ocaml" (ast/import.ml[180,5824+18]..[180,5824+26])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (ast/import.ml[180,5824+27]..[180,5824+28])
                                                  Pexp_ident "b" (ast/import.ml[180,5824+27]..[180,5824+28])
                                            ]
                                      ]
                                      expression (ast/import.ml[181,5856+10]..[181,5856+34])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (ast/import.ml[181,5856+14]..[181,5856+20])
                                          Ppat_tuple
                                          [
                                            pattern (ast/import.ml[181,5856+15]..[181,5856+16])
                                              Ppat_var "x" (ast/import.ml[181,5856+15]..[181,5856+16])
                                            pattern (ast/import.ml[181,5856+18]..[181,5856+19])
                                              Ppat_var "y" (ast/import.ml[181,5856+18]..[181,5856+19])
                                          ]
                                        expression (ast/import.ml[181,5856+24]..[181,5856+34])
                                          Pexp_tuple
                                          [
                                            expression (ast/import.ml[181,5856+25]..[181,5856+28])
                                              Pexp_apply
                                              expression (ast/import.ml[181,5856+25]..[181,5856+26])
                                                Pexp_ident "f" (ast/import.ml[181,5856+25]..[181,5856+26])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (ast/import.ml[181,5856+27]..[181,5856+28])
                                                    Pexp_ident "x" (ast/import.ml[181,5856+27]..[181,5856+28])
                                              ]
                                            expression (ast/import.ml[181,5856+30]..[181,5856+33])
                                              Pexp_apply
                                              expression (ast/import.ml[181,5856+30]..[181,5856+31])
                                                Pexp_ident "g" (ast/import.ml[181,5856+30]..[181,5856+31])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (ast/import.ml[181,5856+32]..[181,5856+33])
                                                    Pexp_ident "y" (ast/import.ml[181,5856+32]..[181,5856+33])
                                              ]
                                          ]
                              ]
                        core_type (ast/import.ml[147,4642+36]..[147,4642+69])
                          Ptyp_arrow
                          Nolabel
                          core_type (ast/import.ml[147,4642+36]..[147,4642+54])
                            Ptyp_constr "Type.t" (ast/import.ml[147,4642+48]..[147,4642+54])
                            [
                              core_type (ast/import.ml[147,4642+37]..[147,4642+39])
                                Ptyp_constr "js" (ast/import.ml[147,4642+37]..[147,4642+39])
                                []
                              core_type (ast/import.ml[147,4642+41]..[147,4642+46])
                                Ptyp_constr "ocaml" (ast/import.ml[147,4642+41]..[147,4642+46])
                                []
                            ]
                          core_type (ast/import.ml[147,4642+58]..[147,4642+69])
                            Ptyp_arrow
                            Nolabel
                            core_type (ast/import.ml[147,4642+58]..[147,4642+60])
                              Ptyp_constr "js" (ast/import.ml[147,4642+58]..[147,4642+60])
                              []
                            core_type (ast/import.ml[147,4642+64]..[147,4642+69])
                              Ptyp_constr "ocaml" (ast/import.ml[147,4642+64]..[147,4642+69])
                              []
              ]
            structure_item (ast/import.ml[183,5892+2]..[183,5892+80])
              Pstr_value Nonrec
              [
                <def>
                  pattern (ast/import.ml[183,5892+6]..[183,5892+21])
                    Ppat_var "of_ocaml_mapper" (ast/import.ml[183,5892+6]..[183,5892+21])
                  expression (ast/import.ml[183,5892+22]..[183,5892+80]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (ast/import.ml[183,5892+22]..[183,5892+26])
                      Ppat_var "item" (ast/import.ml[183,5892+22]..[183,5892+26])
                    expression (ast/import.ml[183,5892+27]..[183,5892+80]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (ast/import.ml[183,5892+27]..[183,5892+28])
                        Ppat_var "f" (ast/import.ml[183,5892+27]..[183,5892+28])
                      expression (ast/import.ml[183,5892+29]..[183,5892+80]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (ast/import.ml[183,5892+29]..[183,5892+33])
                          Ppat_var "ctxt" (ast/import.ml[183,5892+29]..[183,5892+33])
                        expression (ast/import.ml[183,5892+34]..[183,5892+80]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (ast/import.ml[183,5892+34]..[183,5892+35])
                            Ppat_var "x" (ast/import.ml[183,5892+34]..[183,5892+35])
                          expression (ast/import.ml[183,5892+38]..[183,5892+80])
                            Pexp_apply
                            expression (ast/import.ml[183,5892+64]..[183,5892+66])
                              Pexp_ident "|>" (ast/import.ml[183,5892+64]..[183,5892+66])
                            [
                              <arg>
                              Nolabel
                                expression (ast/import.ml[183,5892+38]..[183,5892+63])
                                  Pexp_apply
                                  expression (ast/import.ml[183,5892+54]..[183,5892+56])
                                    Pexp_ident "|>" (ast/import.ml[183,5892+54]..[183,5892+56])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (ast/import.ml[183,5892+38]..[183,5892+53])
                                        Pexp_apply
                                        expression (ast/import.ml[183,5892+38]..[183,5892+46])
                                          Pexp_ident "to_ocaml" (ast/import.ml[183,5892+38]..[183,5892+46])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (ast/import.ml[183,5892+47]..[183,5892+51])
                                              Pexp_ident "item" (ast/import.ml[183,5892+47]..[183,5892+51])
                                          <arg>
                                          Nolabel
                                            expression (ast/import.ml[183,5892+52]..[183,5892+53])
                                              Pexp_ident "x" (ast/import.ml[183,5892+52]..[183,5892+53])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (ast/import.ml[183,5892+57]..[183,5892+63])
                                        Pexp_apply
                                        expression (ast/import.ml[183,5892+57]..[183,5892+58])
                                          Pexp_ident "f" (ast/import.ml[183,5892+57]..[183,5892+58])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (ast/import.ml[183,5892+59]..[183,5892+63])
                                              Pexp_ident "ctxt" (ast/import.ml[183,5892+59]..[183,5892+63])
                                        ]
                                  ]
                              <arg>
                              Nolabel
                                expression (ast/import.ml[183,5892+67]..[183,5892+80])
                                  Pexp_apply
                                  expression (ast/import.ml[183,5892+67]..[183,5892+75])
                                    Pexp_ident "of_ocaml" (ast/import.ml[183,5892+67]..[183,5892+75])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (ast/import.ml[183,5892+76]..[183,5892+80])
                                        Pexp_ident "item" (ast/import.ml[183,5892+76]..[183,5892+80])
                                  ]
                            ]
              ]
            structure_item (ast/import.ml[184,5973+2]..[184,5973+80])
              Pstr_value Nonrec
              [
                <def>
                  pattern (ast/import.ml[184,5973+6]..[184,5973+21])
                    Ppat_var "to_ocaml_mapper" (ast/import.ml[184,5973+6]..[184,5973+21])
                  expression (ast/import.ml[184,5973+22]..[184,5973+80]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (ast/import.ml[184,5973+22]..[184,5973+26])
                      Ppat_var "item" (ast/import.ml[184,5973+22]..[184,5973+26])
                    expression (ast/import.ml[184,5973+27]..[184,5973+80]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (ast/import.ml[184,5973+27]..[184,5973+28])
                        Ppat_var "f" (ast/import.ml[184,5973+27]..[184,5973+28])
                      expression (ast/import.ml[184,5973+29]..[184,5973+80]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (ast/import.ml[184,5973+29]..[184,5973+33])
                          Ppat_var "ctxt" (ast/import.ml[184,5973+29]..[184,5973+33])
                        expression (ast/import.ml[184,5973+34]..[184,5973+80]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (ast/import.ml[184,5973+34]..[184,5973+35])
                            Ppat_var "x" (ast/import.ml[184,5973+34]..[184,5973+35])
                          expression (ast/import.ml[184,5973+38]..[184,5973+80])
                            Pexp_apply
                            expression (ast/import.ml[184,5973+64]..[184,5973+66])
                              Pexp_ident "|>" (ast/import.ml[184,5973+64]..[184,5973+66])
                            [
                              <arg>
                              Nolabel
                                expression (ast/import.ml[184,5973+38]..[184,5973+63])
                                  Pexp_apply
                                  expression (ast/import.ml[184,5973+54]..[184,5973+56])
                                    Pexp_ident "|>" (ast/import.ml[184,5973+54]..[184,5973+56])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (ast/import.ml[184,5973+38]..[184,5973+53])
                                        Pexp_apply
                                        expression (ast/import.ml[184,5973+38]..[184,5973+46])
                                          Pexp_ident "of_ocaml" (ast/import.ml[184,5973+38]..[184,5973+46])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (ast/import.ml[184,5973+47]..[184,5973+51])
                                              Pexp_ident "item" (ast/import.ml[184,5973+47]..[184,5973+51])
                                          <arg>
                                          Nolabel
                                            expression (ast/import.ml[184,5973+52]..[184,5973+53])
                                              Pexp_ident "x" (ast/import.ml[184,5973+52]..[184,5973+53])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (ast/import.ml[184,5973+57]..[184,5973+63])
                                        Pexp_apply
                                        expression (ast/import.ml[184,5973+57]..[184,5973+58])
                                          Pexp_ident "f" (ast/import.ml[184,5973+57]..[184,5973+58])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (ast/import.ml[184,5973+59]..[184,5973+63])
                                              Pexp_ident "ctxt" (ast/import.ml[184,5973+59]..[184,5973+63])
                                        ]
                                  ]
                              <arg>
                              Nolabel
                                expression (ast/import.ml[184,5973+67]..[184,5973+80])
                                  Pexp_apply
                                  expression (ast/import.ml[184,5973+67]..[184,5973+75])
                                    Pexp_ident "to_ocaml" (ast/import.ml[184,5973+67]..[184,5973+75])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (ast/import.ml[184,5973+76]..[184,5973+80])
                                        Pexp_ident "item" (ast/import.ml[184,5973+76]..[184,5973+80])
                                  ]
                            ]
              ]
          ]
  structure_item (ast/import.ml[187,6059+0]..[187,6059+40])
    Pstr_module
    "Selected_ast" (ast/import.ml[187,6059+7]..[187,6059+19])
      module_expr (ast/import.ml[187,6059+22]..[187,6059+40])
        Pmod_apply
        module_expr (ast/import.ml[187,6059+22]..[187,6059+32])
          Pmod_ident "Select_ast" (ast/import.ml[187,6059+22]..[187,6059+32])
        module_expr (ast/import.ml[187,6059+34]..[187,6059+39])
          Pmod_ident "Ocaml" (ast/import.ml[187,6059+34]..[187,6059+39])
  structure_item (ast/import.ml[188,6100+0]..[188,6100+35])
    Pstr_module
    "Ast_helper" (ast/import.ml[188,6100+7]..[188,6100+17])
      module_expr (ast/import.ml[188,6100+20]..[188,6100+35])
        Pmod_ident "Ast_helper_lite" (ast/import.ml[188,6100+20]..[188,6100+35])
  structure_item (ast/import.ml[191,6244+0]..[191,6244+45])
    Pstr_module
    "Parsetree" (ast/import.ml[191,6244+7]..[191,6244+16])
      module_expr (ast/import.ml[191,6244+19]..[191,6244+45])
        Pmod_ident "Selected_ast.Ast.Parsetree" (ast/import.ml[191,6244+19]..[191,6244+45])
  structure_item (ast/import.ml[192,6290+0]..[192,6290+43])
    Pstr_module
    "Asttypes" (ast/import.ml[192,6290+7]..[192,6290+15])
      module_expr (ast/import.ml[192,6290+18]..[192,6290+43])
        Pmod_ident "Selected_ast.Ast.Asttypes" (ast/import.ml[192,6290+18]..[192,6290+43])
  structure_item (ast/import.ml[195,6362+0]..[195,6362+33])
    Pstr_module
    "Location" (ast/import.ml[195,6362+7]..[195,6362+15])
      module_expr (ast/import.ml[195,6362+18]..[195,6362+33])
        Pmod_ident "Astlib.Location" (ast/import.ml[195,6362+18]..[195,6362+33])
  structure_item (ast/import.ml[196,6396+0]..[196,6396+35])
    Pstr_module
    "Longident" (ast/import.ml[196,6396+7]..[196,6396+16])
      module_expr (ast/import.ml[196,6396+19]..[196,6396+35])
        Pmod_ident "Astlib.Longident" (ast/import.ml[196,6396+19]..[196,6396+35])
  structure_item (ast/import.ml[198,6433+0]..[214,7061+3])
    Pstr_module
    "Parse" (ast/import.ml[198,6433+7]..[198,6433+12])
      module_expr (ast/import.ml[198,6433+15]..[214,7061+3])
        Pmod_structure
        [
          structure_item (ast/import.ml[199,6455+2]..[199,6455+22])
            Pstr_include            module_expr (ast/import.ml[199,6455+10]..[199,6455+22])
              Pmod_ident "Astlib.Parse" (ast/import.ml[199,6455+10]..[199,6455+22])
          structure_item (ast/import.ml[200,6478+2]..[200,6478+49])
            Pstr_module
            "Of_ocaml" (ast/import.ml[200,6478+9]..[200,6478+17])
              module_expr (ast/import.ml[200,6478+20]..[200,6478+49])
                Pmod_apply
                module_expr (ast/import.ml[200,6478+20]..[200,6478+44])
                  Pmod_apply
                  module_expr (ast/import.ml[200,6478+20]..[200,6478+36])
                    Pmod_ident "Versions.Convert" (ast/import.ml[200,6478+20]..[200,6478+36])
                  module_expr (ast/import.ml[200,6478+38]..[200,6478+43])
                    Pmod_ident "Ocaml" (ast/import.ml[200,6478+38]..[200,6478+43])
                module_expr (ast/import.ml[200,6478+46]..[200,6478+48])
                  Pmod_ident "Js" (ast/import.ml[200,6478+46]..[200,6478+48])
          structure_item (ast/import.ml[202,6529+2]..[202,6529+78])
            Pstr_value Nonrec
            [
              <def>
                pattern (ast/import.ml[202,6529+6]..[202,6529+20])
                  Ppat_var "implementation" (ast/import.ml[202,6529+6]..[202,6529+20])
                expression (ast/import.ml[202,6529+21]..[202,6529+78]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (ast/import.ml[202,6529+21]..[202,6529+27])
                    Ppat_var "lexbuf" (ast/import.ml[202,6529+21]..[202,6529+27])
                  expression (ast/import.ml[202,6529+30]..[202,6529+78])
                    Pexp_apply
                    expression (ast/import.ml[202,6529+52]..[202,6529+54])
                      Pexp_ident "|>" (ast/import.ml[202,6529+52]..[202,6529+54])
                    [
                      <arg>
                      Nolabel
                        expression (ast/import.ml[202,6529+30]..[202,6529+51])
                          Pexp_apply
                          expression (ast/import.ml[202,6529+30]..[202,6529+44])
                            Pexp_ident "implementation" (ast/import.ml[202,6529+30]..[202,6529+44])
                          [
                            <arg>
                            Nolabel
                              expression (ast/import.ml[202,6529+45]..[202,6529+51])
                                Pexp_ident "lexbuf" (ast/import.ml[202,6529+45]..[202,6529+51])
                          ]
                      <arg>
                      Nolabel
                        expression (ast/import.ml[202,6529+55]..[202,6529+78])
                          Pexp_ident "Of_ocaml.copy_structure" (ast/import.ml[202,6529+55]..[202,6529+78])
                    ]
            ]
          structure_item (ast/import.ml[203,6608+2]..[203,6608+68])
            Pstr_value Nonrec
            [
              <def>
                pattern (ast/import.ml[203,6608+6]..[203,6608+15])
                  Ppat_var "interface" (ast/import.ml[203,6608+6]..[203,6608+15])
                expression (ast/import.ml[203,6608+16]..[203,6608+68]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (ast/import.ml[203,6608+16]..[203,6608+22])
                    Ppat_var "lexbuf" (ast/import.ml[203,6608+16]..[203,6608+22])
                  expression (ast/import.ml[203,6608+25]..[203,6608+68])
                    Pexp_apply
                    expression (ast/import.ml[203,6608+42]..[203,6608+44])
                      Pexp_ident "|>" (ast/import.ml[203,6608+42]..[203,6608+44])
                    [
                      <arg>
                      Nolabel
                        expression (ast/import.ml[203,6608+25]..[203,6608+41])
                          Pexp_apply
                          expression (ast/import.ml[203,6608+25]..[203,6608+34])
                            Pexp_ident "interface" (ast/import.ml[203,6608+25]..[203,6608+34])
                          [
                            <arg>
                            Nolabel
                              expression (ast/import.ml[203,6608+35]..[203,6608+41])
                                Pexp_ident "lexbuf" (ast/import.ml[203,6608+35]..[203,6608+41])
                          ]
                      <arg>
                      Nolabel
                        expression (ast/import.ml[203,6608+45]..[203,6608+68])
                          Pexp_ident "Of_ocaml.copy_signature" (ast/import.ml[203,6608+45]..[203,6608+68])
                    ]
            ]
          structure_item (ast/import.ml[205,6678+2]..[206,6709+59])
            Pstr_value Nonrec
            [
              <def>
                pattern (ast/import.ml[205,6678+6]..[205,6678+21])
                  Ppat_var "toplevel_phrase" (ast/import.ml[205,6678+6]..[205,6678+21])
                expression (ast/import.ml[205,6678+22]..[206,6709+59]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (ast/import.ml[205,6678+22]..[205,6678+28])
                    Ppat_var "lexbuf" (ast/import.ml[205,6678+22]..[205,6678+28])
                  expression (ast/import.ml[206,6709+4]..[206,6709+59])
                    Pexp_apply
                    expression (ast/import.ml[206,6709+27]..[206,6709+29])
                      Pexp_ident "|>" (ast/import.ml[206,6709+27]..[206,6709+29])
                    [
                      <arg>
                      Nolabel
                        expression (ast/import.ml[206,6709+4]..[206,6709+26])
                          Pexp_apply
                          expression (ast/import.ml[206,6709+4]..[206,6709+19])
                            Pexp_ident "toplevel_phrase" (ast/import.ml[206,6709+4]..[206,6709+19])
                          [
                            <arg>
                            Nolabel
                              expression (ast/import.ml[206,6709+20]..[206,6709+26])
                                Pexp_ident "lexbuf" (ast/import.ml[206,6709+20]..[206,6709+26])
                          ]
                      <arg>
                      Nolabel
                        expression (ast/import.ml[206,6709+30]..[206,6709+59])
                          Pexp_ident "Of_ocaml.copy_toplevel_phrase" (ast/import.ml[206,6709+30]..[206,6709+59])
                    ]
            ]
          structure_item (ast/import.ml[208,6770+2]..[209,6794+61])
            Pstr_value Nonrec
            [
              <def>
                pattern (ast/import.ml[208,6770+6]..[208,6770+14])
                  Ppat_var "use_file" (ast/import.ml[208,6770+6]..[208,6770+14])
                expression (ast/import.ml[208,6770+15]..[209,6794+61]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (ast/import.ml[208,6770+15]..[208,6770+21])
                    Ppat_var "lexbuf" (ast/import.ml[208,6770+15]..[208,6770+21])
                  expression (ast/import.ml[209,6794+4]..[209,6794+61])
                    Pexp_apply
                    expression (ast/import.ml[209,6794+20]..[209,6794+22])
                      Pexp_ident "|>" (ast/import.ml[209,6794+20]..[209,6794+22])
                    [
                      <arg>
                      Nolabel
                        expression (ast/import.ml[209,6794+4]..[209,6794+19])
                          Pexp_apply
                          expression (ast/import.ml[209,6794+4]..[209,6794+12])
                            Pexp_ident "use_file" (ast/import.ml[209,6794+4]..[209,6794+12])
                          [
                            <arg>
                            Nolabel
                              expression (ast/import.ml[209,6794+13]..[209,6794+19])
                                Pexp_ident "lexbuf" (ast/import.ml[209,6794+13]..[209,6794+19])
                          ]
                      <arg>
                      Nolabel
                        expression (ast/import.ml[209,6794+23]..[209,6794+61])
                          Pexp_apply
                          expression (ast/import.ml[209,6794+23]..[209,6794+31])
                            Pexp_ident "List.map" (ast/import.ml[209,6794+23]..[209,6794+31])
                          [
                            <arg>
                            Nolabel
                              expression (ast/import.ml[209,6794+32]..[209,6794+61])
                                Pexp_ident "Of_ocaml.copy_toplevel_phrase" (ast/import.ml[209,6794+32]..[209,6794+61])
                          ]
                    ]
            ]
          structure_item (ast/import.ml[211,6857+2]..[211,6857+68])
            Pstr_value Nonrec
            [
              <def>
                pattern (ast/import.ml[211,6857+6]..[211,6857+15])
                  Ppat_var "core_type" (ast/import.ml[211,6857+6]..[211,6857+15])
                expression (ast/import.ml[211,6857+16]..[211,6857+68]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (ast/import.ml[211,6857+16]..[211,6857+22])
                    Ppat_var "lexbuf" (ast/import.ml[211,6857+16]..[211,6857+22])
                  expression (ast/import.ml[211,6857+25]..[211,6857+68])
                    Pexp_apply
                    expression (ast/import.ml[211,6857+42]..[211,6857+44])
                      Pexp_ident "|>" (ast/import.ml[211,6857+42]..[211,6857+44])
                    [
                      <arg>
                      Nolabel
                        expression (ast/import.ml[211,6857+25]..[211,6857+41])
                          Pexp_apply
                          expression (ast/import.ml[211,6857+25]..[211,6857+34])
                            Pexp_ident "core_type" (ast/import.ml[211,6857+25]..[211,6857+34])
                          [
                            <arg>
                            Nolabel
                              expression (ast/import.ml[211,6857+35]..[211,6857+41])
                                Pexp_ident "lexbuf" (ast/import.ml[211,6857+35]..[211,6857+41])
                          ]
                      <arg>
                      Nolabel
                        expression (ast/import.ml[211,6857+45]..[211,6857+68])
                          Pexp_ident "Of_ocaml.copy_core_type" (ast/import.ml[211,6857+45]..[211,6857+68])
                    ]
            ]
          structure_item (ast/import.ml[212,6926+2]..[212,6926+71])
            Pstr_value Nonrec
            [
              <def>
                pattern (ast/import.ml[212,6926+6]..[212,6926+16])
                  Ppat_var "expression" (ast/import.ml[212,6926+6]..[212,6926+16])
                expression (ast/import.ml[212,6926+17]..[212,6926+71]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (ast/import.ml[212,6926+17]..[212,6926+23])
                    Ppat_var "lexbuf" (ast/import.ml[212,6926+17]..[212,6926+23])
                  expression (ast/import.ml[212,6926+26]..[212,6926+71])
                    Pexp_apply
                    expression (ast/import.ml[212,6926+44]..[212,6926+46])
                      Pexp_ident "|>" (ast/import.ml[212,6926+44]..[212,6926+46])
                    [
                      <arg>
                      Nolabel
                        expression (ast/import.ml[212,6926+26]..[212,6926+43])
                          Pexp_apply
                          expression (ast/import.ml[212,6926+26]..[212,6926+36])
                            Pexp_ident "expression" (ast/import.ml[212,6926+26]..[212,6926+36])
                          [
                            <arg>
                            Nolabel
                              expression (ast/import.ml[212,6926+37]..[212,6926+43])
                                Pexp_ident "lexbuf" (ast/import.ml[212,6926+37]..[212,6926+43])
                          ]
                      <arg>
                      Nolabel
                        expression (ast/import.ml[212,6926+47]..[212,6926+71])
                          Pexp_ident "Of_ocaml.copy_expression" (ast/import.ml[212,6926+47]..[212,6926+71])
                    ]
            ]
          structure_item (ast/import.ml[213,6998+2]..[213,6998+62])
            Pstr_value Nonrec
            [
              <def>
                pattern (ast/import.ml[213,6998+6]..[213,6998+13])
                  Ppat_var "pattern" (ast/import.ml[213,6998+6]..[213,6998+13])
                expression (ast/import.ml[213,6998+14]..[213,6998+62]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (ast/import.ml[213,6998+14]..[213,6998+20])
                    Ppat_var "lexbuf" (ast/import.ml[213,6998+14]..[213,6998+20])
                  expression (ast/import.ml[213,6998+23]..[213,6998+62])
                    Pexp_apply
                    expression (ast/import.ml[213,6998+38]..[213,6998+40])
                      Pexp_ident "|>" (ast/import.ml[213,6998+38]..[213,6998+40])
                    [
                      <arg>
                      Nolabel
                        expression (ast/import.ml[213,6998+23]..[213,6998+37])
                          Pexp_apply
                          expression (ast/import.ml[213,6998+23]..[213,6998+30])
                            Pexp_ident "pattern" (ast/import.ml[213,6998+23]..[213,6998+30])
                          [
                            <arg>
                            Nolabel
                              expression (ast/import.ml[213,6998+31]..[213,6998+37])
                                Pexp_ident "lexbuf" (ast/import.ml[213,6998+31]..[213,6998+37])
                          ]
                      <arg>
                      Nolabel
                        expression (ast/import.ml[213,6998+41]..[213,6998+62])
                          Pexp_ident "Of_ocaml.copy_pattern" (ast/import.ml[213,6998+41]..[213,6998+62])
                    ]
            ]
        ]
]

module Js = Versions.OCaml_500
module Ocaml = Versions.OCaml_current
module Select_ast(Ocaml:Versions.OCaml_version) =
  struct
    include Js
    module Type =
      struct
        type ('js, 'ocaml) t =
          | Structure: (Js.Ast.Parsetree.structure,
          Ocaml.Ast.Parsetree.structure) t 
          | Signature: (Js.Ast.Parsetree.signature,
          Ocaml.Ast.Parsetree.signature) t 
          | Toplevel_phrase: (Js.Ast.Parsetree.toplevel_phrase,
          Ocaml.Ast.Parsetree.toplevel_phrase) t 
          | Core_type: (Js.Ast.Parsetree.core_type,
          Ocaml.Ast.Parsetree.core_type) t 
          | Expression: (Js.Ast.Parsetree.expression,
          Ocaml.Ast.Parsetree.expression) t 
          | Pattern: (Js.Ast.Parsetree.pattern, Ocaml.Ast.Parsetree.pattern)
          t 
          | Case: (Js.Ast.Parsetree.case, Ocaml.Ast.Parsetree.case) t 
          | Type_declaration: (Js.Ast.Parsetree.type_declaration,
          Ocaml.Ast.Parsetree.type_declaration) t 
          | Type_extension: (Js.Ast.Parsetree.type_extension,
          Ocaml.Ast.Parsetree.type_extension) t 
          | Extension_constructor: (Js.Ast.Parsetree.extension_constructor,
          Ocaml.Ast.Parsetree.extension_constructor) t 
          | Class_expr: (Js.Ast.Parsetree.class_expr,
          Ocaml.Ast.Parsetree.class_expr) t 
          | Class_field: (Js.Ast.Parsetree.class_field,
          Ocaml.Ast.Parsetree.class_field) t 
          | Class_type: (Js.Ast.Parsetree.class_type,
          Ocaml.Ast.Parsetree.class_type) t 
          | Class_signature: (Js.Ast.Parsetree.class_signature,
          Ocaml.Ast.Parsetree.class_signature) t 
          | Class_type_field: (Js.Ast.Parsetree.class_type_field,
          Ocaml.Ast.Parsetree.class_type_field) t 
          | Module_expr: (Js.Ast.Parsetree.module_expr,
          Ocaml.Ast.Parsetree.module_expr) t 
          | Module_type: (Js.Ast.Parsetree.module_type,
          Ocaml.Ast.Parsetree.module_type) t 
          | Signature_item: (Js.Ast.Parsetree.signature_item,
          Ocaml.Ast.Parsetree.signature_item) t 
          | Structure_item: (Js.Ast.Parsetree.structure_item,
          Ocaml.Ast.Parsetree.structure_item) t 
          | List: ('a, 'b) t -> ('a list, 'b list) t 
          | Pair: ('a, 'b) t * ('c, 'd) t -> (('a * 'c), ('b * 'd)) t 
      end
    open Type
    module Of_ocaml = ((Versions.Convert)(Ocaml))(Js)
    module To_ocaml = ((Versions.Convert)(Js))(Ocaml)
    let rec of_ocaml : type ocaml js. (js, ocaml) Type.t -> ocaml -> js =
      let open Of_ocaml in
        fun node ->
          match node with
          | Structure -> copy_structure
          | Signature -> copy_signature
          | Toplevel_phrase -> copy_toplevel_phrase
          | Core_type -> copy_core_type
          | Expression -> copy_expression
          | Pattern -> copy_pattern
          | Case -> copy_case
          | Type_declaration -> copy_type_declaration
          | Type_extension -> copy_type_extension
          | Extension_constructor -> copy_extension_constructor
          | Class_expr -> copy_class_expr
          | Class_field -> copy_class_field
          | Class_type -> copy_class_type
          | Class_signature -> copy_class_signature
          | Class_type_field -> copy_class_type_field
          | Module_expr -> copy_module_expr
          | Module_type -> copy_module_type
          | Signature_item -> copy_signature_item
          | Structure_item -> copy_structure_item
          | List t -> List.map (of_ocaml t)
          | Pair (a, b) ->
              let f = of_ocaml a in
              let g = of_ocaml b in (fun (x, y) -> ((f x), (g y)))
    let rec to_ocaml : type ocaml js. (js, ocaml) Type.t -> js -> ocaml =
      let open To_ocaml in
        fun node ->
          match node with
          | Structure -> copy_structure
          | Signature -> copy_signature
          | Toplevel_phrase -> copy_toplevel_phrase
          | Core_type -> copy_core_type
          | Expression -> copy_expression
          | Pattern -> copy_pattern
          | Case -> copy_case
          | Type_declaration -> copy_type_declaration
          | Type_extension -> copy_type_extension
          | Extension_constructor -> copy_extension_constructor
          | Class_expr -> copy_class_expr
          | Class_field -> copy_class_field
          | Class_type -> copy_class_type
          | Class_signature -> copy_class_signature
          | Class_type_field -> copy_class_type_field
          | Module_expr -> copy_module_expr
          | Module_type -> copy_module_type
          | Signature_item -> copy_signature_item
          | Structure_item -> copy_structure_item
          | List t -> List.map (to_ocaml t)
          | Pair (a, b) ->
              let f = to_ocaml a in
              let g = to_ocaml b in (fun (x, y) -> ((f x), (g y)))
    let of_ocaml_mapper item f ctxt x =
      ((to_ocaml item x) |> (f ctxt)) |> (of_ocaml item)
    let to_ocaml_mapper item f ctxt x =
      ((of_ocaml item x) |> (f ctxt)) |> (to_ocaml item)
  end
module Selected_ast = (Select_ast)(Ocaml)
module Ast_helper = Ast_helper_lite
module Parsetree = Selected_ast.Ast.Parsetree
module Asttypes = Selected_ast.Ast.Asttypes
module Location = Astlib.Location
module Longident = Astlib.Longident
module Parse =
  struct
    include Astlib.Parse
    module Of_ocaml = ((Versions.Convert)(Ocaml))(Js)
    let implementation lexbuf =
      (implementation lexbuf) |> Of_ocaml.copy_structure
    let interface lexbuf = (interface lexbuf) |> Of_ocaml.copy_signature
    let toplevel_phrase lexbuf =
      (toplevel_phrase lexbuf) |> Of_ocaml.copy_toplevel_phrase
    let use_file lexbuf =
      (use_file lexbuf) |> (List.map Of_ocaml.copy_toplevel_phrase)
    let core_type lexbuf = (core_type lexbuf) |> Of_ocaml.copy_core_type
    let expression lexbuf = (expression lexbuf) |> Of_ocaml.copy_expression
    let pattern lexbuf = (pattern lexbuf) |> Of_ocaml.copy_pattern
  end
[
  structure_item (ast/import.ml[9,229+0]..ast/import.ml[9,229+30])
    Tstr_module
    Js/1606
      module_expr (ast/import.ml[9,229+12]..ast/import.ml[9,229+30])
        Tmod_ident "Ppxlib_ast__!.Versions.OCaml_500"
  structure_item (ast/import.ml[10,260+0]..ast/import.ml[10,260+37])
    Tstr_module
    Ocaml/1607
      module_expr (ast/import.ml[10,260+15]..ast/import.ml[10,260+37])
        Tmod_ident "Ppxlib_ast__!.Versions.OCaml_current"
  structure_item (ast/import.ml[12,299+0]..ast/import.ml[185,6054+3])
    Tstr_module
    Select_ast/2425
      module_expr (ast/import.ml[12,299+18]..ast/import.ml[185,6054+3])
        Tmod_functor "Ocaml/1608"
        module_type (ast/import.ml[12,299+27]..ast/import.ml[12,299+49])
          Tmty_ident "Ppxlib_ast__!.Versions.OCaml_version"
        module_expr (ast/import.ml[12,299+53]..ast/import.ml[185,6054+3])
          Tmod_structure
          [
            structure_item (ast/import.ml[13,359+2]..ast/import.ml[13,359+12])
              Tstr_include              module_expr (ast/import.ml[13,359+10]..ast/import.ml[13,359+12])
                module_expr (ast/import.ml[13,359+10]..ast/import.ml[13,359+12])
                  Tmod_ident "Js/1606"
            structure_item (ast/import.ml[15,373+2]..ast/import.ml[105,3272+5])
              Tstr_module
              Type/1989
                module_expr (ast/import.ml[15,373+16]..ast/import.ml[105,3272+5])
                  Tmod_structure
                  [
                    structure_item (ast/import.ml[16,396+4]..ast/import.ml[104,3209+62])
                      Tstr_type Rec
                      [
                        type_declaration t/1799 (ast/import.ml[16,396+4]..ast/import.ml[104,3209+62])
                          ptype_params =
                            [
                              core_type (ast/import.ml[16,396+10]..ast/import.ml[16,396+13])
                                Ttyp_var js
                              core_type (ast/import.ml[16,396+15]..ast/import.ml[16,396+21])
                                Ttyp_var ocaml
                            ]
                          ptype_cstrs =
                            []
                          ptype_kind =
                            Ttype_variant
                              [
                                (ast/import.ml[26,708+6]..ast/import.ml[29,814+13])
                                  Structure/1800
                                  []
                                  Some
                                    core_type (ast/import.ml[27,726+12]..ast/import.ml[29,814+13])
                                      Ttyp_constr "t/1799"
                                      [
                                        core_type (ast/import.ml[27,726+14]..ast/import.ml[27,726+40])
                                          Ttyp_constr "Js/1606.Ast.Parsetree.structure"
                                          []
                                        core_type (ast/import.ml[28,768+14]..ast/import.ml[28,768+43])
                                          Ttyp_constr "Ocaml/1608.Ast.Parsetree.structure"
                                          []
                                      ]
                                (ast/import.ml[30,828+6]..ast/import.ml[33,934+13])
                                  Signature/1969
                                  []
                                  Some
                                    core_type (ast/import.ml[31,846+12]..ast/import.ml[33,934+13])
                                      Ttyp_constr "t/1799"
                                      [
                                        core_type (ast/import.ml[31,846+14]..ast/import.ml[31,846+40])
                                          Ttyp_constr "Js/1606.Ast.Parsetree.signature"
                                          []
                                        core_type (ast/import.ml[32,888+14]..ast/import.ml[32,888+43])
                                          Ttyp_constr "Ocaml/1608.Ast.Parsetree.signature"
                                          []
                                      ]
                                (ast/import.ml[34,948+6]..ast/import.ml[37,1072+13])
                                  Toplevel_phrase/1970
                                  []
                                  Some
                                    core_type (ast/import.ml[35,972+12]..ast/import.ml[37,1072+13])
                                      Ttyp_constr "t/1799"
                                      [
                                        core_type (ast/import.ml[35,972+14]..ast/import.ml[35,972+46])
                                          Ttyp_constr "Js/1606.Ast.Parsetree.toplevel_phrase"
                                          []
                                        core_type (ast/import.ml[36,1020+14]..ast/import.ml[36,1020+49])
                                          Ttyp_constr "Ocaml/1608.Ast.Parsetree.toplevel_phrase"
                                          []
                                      ]
                                (ast/import.ml[38,1086+6]..ast/import.ml[41,1192+13])
                                  Core_type/1971
                                  []
                                  Some
                                    core_type (ast/import.ml[39,1104+12]..ast/import.ml[41,1192+13])
                                      Ttyp_constr "t/1799"
                                      [
                                        core_type (ast/import.ml[39,1104+14]..ast/import.ml[39,1104+40])
                                          Ttyp_constr "Js/1606.Ast.Parsetree.core_type"
                                          []
                                        core_type (ast/import.ml[40,1146+14]..ast/import.ml[40,1146+43])
                                          Ttyp_constr "Ocaml/1608.Ast.Parsetree.core_type"
                                          []
                                      ]
                                (ast/import.ml[42,1206+6]..ast/import.ml[45,1315+13])
                                  Expression/1972
                                  []
                                  Some
                                    core_type (ast/import.ml[43,1225+12]..ast/import.ml[45,1315+13])
                                      Ttyp_constr "t/1799"
                                      [
                                        core_type (ast/import.ml[43,1225+14]..ast/import.ml[43,1225+41])
                                          Ttyp_constr "Js/1606.Ast.Parsetree.expression"
                                          []
                                        core_type (ast/import.ml[44,1268+14]..ast/import.ml[44,1268+44])
                                          Ttyp_constr "Ocaml/1608.Ast.Parsetree.expression"
                                          []
                                      ]
                                (ast/import.ml[46,1329+6]..ast/import.ml[49,1429+13])
                                  Pattern/1973
                                  []
                                  Some
                                    core_type (ast/import.ml[47,1345+12]..ast/import.ml[49,1429+13])
                                      Ttyp_constr "t/1799"
                                      [
                                        core_type (ast/import.ml[47,1345+14]..ast/import.ml[47,1345+38])
                                          Ttyp_constr "Js/1606.Ast.Parsetree.pattern"
                                          []
                                        core_type (ast/import.ml[48,1385+14]..ast/import.ml[48,1385+41])
                                          Ttyp_constr "Ocaml/1608.Ast.Parsetree.pattern"
                                          []
                                      ]
                                (ast/import.ml[50,1443+6]..ast/import.ml[53,1534+13])
                                  Case/1974
                                  []
                                  Some
                                    core_type (ast/import.ml[51,1456+12]..ast/import.ml[53,1534+13])
                                      Ttyp_constr "t/1799"
                                      [
                                        core_type (ast/import.ml[51,1456+14]..ast/import.ml[51,1456+35])
                                          Ttyp_constr "Js/1606.Ast.Parsetree.case"
                                          []
                                        core_type (ast/import.ml[52,1493+14]..ast/import.ml[52,1493+38])
                                          Ttyp_constr "Ocaml/1608.Ast.Parsetree.case"
                                          []
                                      ]
                                (ast/import.ml[54,1548+6]..ast/import.ml[57,1675+13])
                                  Type_declaration/1975
                                  []
                                  Some
                                    core_type (ast/import.ml[55,1573+12]..ast/import.ml[57,1675+13])
                                      Ttyp_constr "t/1799"
                                      [
                                        core_type (ast/import.ml[55,1573+14]..ast/import.ml[55,1573+47])
                                          Ttyp_constr "Js/1606.Ast.Parsetree.type_declaration"
                                          []
                                        core_type (ast/import.ml[56,1622+14]..ast/import.ml[56,1622+50])
                                          Ttyp_constr "Ocaml/1608.Ast.Parsetree.type_declaration"
                                          []
                                      ]
                                (ast/import.ml[58,1689+6]..ast/import.ml[61,1810+13])
                                  Type_extension/1976
                                  []
                                  Some
                                    core_type (ast/import.ml[59,1712+12]..ast/import.ml[61,1810+13])
                                      Ttyp_constr "t/1799"
                                      [
                                        core_type (ast/import.ml[59,1712+14]..ast/import.ml[59,1712+45])
                                          Ttyp_constr "Js/1606.Ast.Parsetree.type_extension"
                                          []
                                        core_type (ast/import.ml[60,1759+14]..ast/import.ml[60,1759+48])
                                          Ttyp_constr "Ocaml/1608.Ast.Parsetree.type_extension"
                                          []
                                      ]
                                (ast/import.ml[62,1824+6]..ast/import.ml[65,1966+13])
                                  Extension_constructor/1977
                                  []
                                  Some
                                    core_type (ast/import.ml[63,1854+12]..ast/import.ml[65,1966+13])
                                      Ttyp_constr "t/1799"
                                      [
                                        core_type (ast/import.ml[63,1854+14]..ast/import.ml[63,1854+52])
                                          Ttyp_constr "Js/1606.Ast.Parsetree.extension_constructor"
                                          []
                                        core_type (ast/import.ml[64,1908+14]..ast/import.ml[64,1908+55])
                                          Ttyp_constr "Ocaml/1608.Ast.Parsetree.extension_constructor"
                                          []
                                      ]
                                (ast/import.ml[66,1980+6]..ast/import.ml[69,2089+13])
                                  Class_expr/1978
                                  []
                                  Some
                                    core_type (ast/import.ml[67,1999+12]..ast/import.ml[69,2089+13])
                                      Ttyp_constr "t/1799"
                                      [
                                        core_type (ast/import.ml[67,1999+14]..ast/import.ml[67,1999+41])
                                          Ttyp_constr "Js/1606.Ast.Parsetree.class_expr"
                                          []
                                        core_type (ast/import.ml[68,2042+14]..ast/import.ml[68,2042+44])
                                          Ttyp_constr "Ocaml/1608.Ast.Parsetree.class_expr"
                                          []
                                      ]
                                (ast/import.ml[70,2103+6]..ast/import.ml[73,2215+13])
                                  Class_field/1979
                                  []
                                  Some
                                    core_type (ast/import.ml[71,2123+12]..ast/import.ml[73,2215+13])
                                      Ttyp_constr "t/1799"
                                      [
                                        core_type (ast/import.ml[71,2123+14]..ast/import.ml[71,2123+42])
                                          Ttyp_constr "Js/1606.Ast.Parsetree.class_field"
                                          []
                                        core_type (ast/import.ml[72,2167+14]..ast/import.ml[72,2167+45])
                                          Ttyp_constr "Ocaml/1608.Ast.Parsetree.class_field"
                                          []
                                      ]
                                (ast/import.ml[74,2229+6]..ast/import.ml[77,2338+13])
                                  Class_type/1980
                                  []
                                  Some
                                    core_type (ast/import.ml[75,2248+12]..ast/import.ml[77,2338+13])
                                      Ttyp_constr "t/1799"
                                      [
                                        core_type (ast/import.ml[75,2248+14]..ast/import.ml[75,2248+41])
                                          Ttyp_constr "Js/1606.Ast.Parsetree.class_type"
                                          []
                                        core_type (ast/import.ml[76,2291+14]..ast/import.ml[76,2291+44])
                                          Ttyp_constr "Ocaml/1608.Ast.Parsetree.class_type"
                                          []
                                      ]
                                (ast/import.ml[78,2352+6]..ast/import.ml[81,2476+13])
                                  Class_signature/1981
                                  []
                                  Some
                                    core_type (ast/import.ml[79,2376+12]..ast/import.ml[81,2476+13])
                                      Ttyp_constr "t/1799"
                                      [
                                        core_type (ast/import.ml[79,2376+14]..ast/import.ml[79,2376+46])
                                          Ttyp_constr "Js/1606.Ast.Parsetree.class_signature"
                                          []
                                        core_type (ast/import.ml[80,2424+14]..ast/import.ml[80,2424+49])
                                          Ttyp_constr "Ocaml/1608.Ast.Parsetree.class_signature"
                                          []
                                      ]
                                (ast/import.ml[82,2490+6]..ast/import.ml[85,2617+13])
                                  Class_type_field/1982
                                  []
                                  Some
                                    core_type (ast/import.ml[83,2515+12]..ast/import.ml[85,2617+13])
                                      Ttyp_constr "t/1799"
                                      [
                                        core_type (ast/import.ml[83,2515+14]..ast/import.ml[83,2515+47])
                                          Ttyp_constr "Js/1606.Ast.Parsetree.class_type_field"
                                          []
                                        core_type (ast/import.ml[84,2564+14]..ast/import.ml[84,2564+50])
                                          Ttyp_constr "Ocaml/1608.Ast.Parsetree.class_type_field"
                                          []
                                      ]
                                (ast/import.ml[86,2631+6]..ast/import.ml[89,2743+13])
                                  Module_expr/1983
                                  []
                                  Some
                                    core_type (ast/import.ml[87,2651+12]..ast/import.ml[89,2743+13])
                                      Ttyp_constr "t/1799"
                                      [
                                        core_type (ast/import.ml[87,2651+14]..ast/import.ml[87,2651+42])
                                          Ttyp_constr "Js/1606.Ast.Parsetree.module_expr"
                                          []
                                        core_type (ast/import.ml[88,2695+14]..ast/import.ml[88,2695+45])
                                          Ttyp_constr "Ocaml/1608.Ast.Parsetree.module_expr"
                                          []
                                      ]
                                (ast/import.ml[90,2757+6]..ast/import.ml[93,2869+13])
                                  Module_type/1984
                                  []
                                  Some
                                    core_type (ast/import.ml[91,2777+12]..ast/import.ml[93,2869+13])
                                      Ttyp_constr "t/1799"
                                      [
                                        core_type (ast/import.ml[91,2777+14]..ast/import.ml[91,2777+42])
                                          Ttyp_constr "Js/1606.Ast.Parsetree.module_type"
                                          []
                                        core_type (ast/import.ml[92,2821+14]..ast/import.ml[92,2821+45])
                                          Ttyp_constr "Ocaml/1608.Ast.Parsetree.module_type"
                                          []
                                      ]
                                (ast/import.ml[94,2883+6]..ast/import.ml[97,3004+13])
                                  Signature_item/1985
                                  []
                                  Some
                                    core_type (ast/import.ml[95,2906+12]..ast/import.ml[97,3004+13])
                                      Ttyp_constr "t/1799"
                                      [
                                        core_type (ast/import.ml[95,2906+14]..ast/import.ml[95,2906+45])
                                          Ttyp_constr "Js/1606.Ast.Parsetree.signature_item"
                                          []
                                        core_type (ast/import.ml[96,2953+14]..ast/import.ml[96,2953+48])
                                          Ttyp_constr "Ocaml/1608.Ast.Parsetree.signature_item"
                                          []
                                      ]
                                (ast/import.ml[98,3018+6]..ast/import.ml[101,3139+13])
                                  Structure_item/1986
                                  []
                                  Some
                                    core_type (ast/import.ml[99,3041+12]..ast/import.ml[101,3139+13])
                                      Ttyp_constr "t/1799"
                                      [
                                        core_type (ast/import.ml[99,3041+14]..ast/import.ml[99,3041+45])
                                          Ttyp_constr "Js/1606.Ast.Parsetree.structure_item"
                                          []
                                        core_type (ast/import.ml[100,3088+14]..ast/import.ml[100,3088+48])
                                          Ttyp_constr "Ocaml/1608.Ast.Parsetree.structure_item"
                                          []
                                      ]
                                (ast/import.ml[103,3159+6]..ast/import.ml[103,3159+49])
                                  List/1987
                                  [
                                    core_type (ast/import.ml[103,3159+15]..ast/import.ml[103,3159+25])
                                      Ttyp_constr "t/1799"
                                      [
                                        core_type (ast/import.ml[103,3159+16]..ast/import.ml[103,3159+18])
                                          Ttyp_var a
                                        core_type (ast/import.ml[103,3159+20]..ast/import.ml[103,3159+22])
                                          Ttyp_var b
                                      ]
                                  ]
                                  Some
                                    core_type (ast/import.ml[103,3159+29]..ast/import.ml[103,3159+49])
                                      Ttyp_constr "t/1799"
                                      [
                                        core_type (ast/import.ml[103,3159+30]..ast/import.ml[103,3159+37])
                                          Ttyp_constr "list/11!"
                                          [
                                            core_type (ast/import.ml[103,3159+30]..ast/import.ml[103,3159+32])
                                              Ttyp_var a
                                          ]
                                        core_type (ast/import.ml[103,3159+39]..ast/import.ml[103,3159+46])
                                          Ttyp_constr "list/11!"
                                          [
                                            core_type (ast/import.ml[103,3159+39]..ast/import.ml[103,3159+41])
                                              Ttyp_var b
                                          ]
                                      ]
                                (ast/import.ml[104,3209+6]..ast/import.ml[104,3209+62])
                                  Pair/1988
                                  [
                                    core_type (ast/import.ml[104,3209+15]..ast/import.ml[104,3209+25])
                                      Ttyp_constr "t/1799"
                                      [
                                        core_type (ast/import.ml[104,3209+16]..ast/import.ml[104,3209+18])
                                          Ttyp_var a
                                        core_type (ast/import.ml[104,3209+20]..ast/import.ml[104,3209+22])
                                          Ttyp_var b
                                      ]
                                    core_type (ast/import.ml[104,3209+28]..ast/import.ml[104,3209+38])
                                      Ttyp_constr "t/1799"
                                      [
                                        core_type (ast/import.ml[104,3209+29]..ast/import.ml[104,3209+31])
                                          Ttyp_var c
                                        core_type (ast/import.ml[104,3209+33]..ast/import.ml[104,3209+35])
                                          Ttyp_var d
                                      ]
                                  ]
                                  Some
                                    core_type (ast/import.ml[104,3209+42]..ast/import.ml[104,3209+62])
                                      Ttyp_constr "t/1799"
                                      [
                                        core_type (ast/import.ml[104,3209+43]..ast/import.ml[104,3209+50])
                                          Ttyp_tuple
                                          [
                                            core_type (ast/import.ml[104,3209+43]..ast/import.ml[104,3209+45])
                                              Ttyp_var a
                                            core_type (ast/import.ml[104,3209+48]..ast/import.ml[104,3209+50])
                                              Ttyp_var c
                                          ]
                                        core_type (ast/import.ml[104,3209+52]..ast/import.ml[104,3209+59])
                                          Ttyp_tuple
                                          [
                                            core_type (ast/import.ml[104,3209+52]..ast/import.ml[104,3209+54])
                                              Ttyp_var b
                                            core_type (ast/import.ml[104,3209+57]..ast/import.ml[104,3209+59])
                                              Ttyp_var d
                                          ]
                                      ]
                              ]
                          ptype_private = Public
                          ptype_manifest =
                            None
                      ]
                  ]
            structure_item (ast/import.ml[107,3279+2]..ast/import.ml[107,3279+11])
              Tstr_open Fresh
              module_expr (ast/import.ml[107,3279+7]..ast/import.ml[107,3279+11])
                Tmod_ident "Type/1989"
            structure_item (ast/import.ml[108,3291+2]..ast/import.ml[108,3291+49])
              Tstr_module
              Of_ocaml/2073
                module_expr (ast/import.ml[108,3291+20]..ast/import.ml[108,3291+49])
                  Tmod_apply
                  module_expr (ast/import.ml[108,3291+20]..ast/import.ml[108,3291+44])
                    Tmod_apply
                    module_expr (ast/import.ml[108,3291+20]..ast/import.ml[108,3291+36])
                      module_expr (ast/import.ml[108,3291+20]..ast/import.ml[108,3291+36])
                        Tmod_ident "Ppxlib_ast__!.Versions.Convert"
                    module_expr (ast/import.ml[108,3291+38]..ast/import.ml[108,3291+43])
                      Tmod_ident "Ocaml/1608"
                  module_expr (ast/import.ml[108,3291+46]..ast/import.ml[108,3291+48])
                    module_expr (ast/import.ml[108,3291+46]..ast/import.ml[108,3291+48])
                      Tmod_ident "Js/1606"
            structure_item (ast/import.ml[109,3341+2]..ast/import.ml[109,3341+49])
              Tstr_module
              To_ocaml/2134
                module_expr (ast/import.ml[109,3341+20]..ast/import.ml[109,3341+49])
                  Tmod_apply
                  module_expr (ast/import.ml[109,3341+20]..ast/import.ml[109,3341+41])
                    Tmod_apply
                    module_expr (ast/import.ml[109,3341+20]..ast/import.ml[109,3341+36])
                      module_expr (ast/import.ml[109,3341+20]..ast/import.ml[109,3341+36])
                        Tmod_ident "Ppxlib_ast__!.Versions.Convert"
                    module_expr (ast/import.ml[109,3341+38]..ast/import.ml[109,3341+40])
                      module_expr (ast/import.ml[109,3341+38]..ast/import.ml[109,3341+40])
                        Tmod_ident "Js/1606"
                  module_expr (ast/import.ml[109,3341+43]..ast/import.ml[109,3341+48])
                    Tmod_ident "Ocaml/1608"
            structure_item (ast/import.ml[111,3392+2]..ast/import.ml[145,4606+34])
              Tstr_value Rec
              [
                <def>
                  pattern (ast/import.ml[111,3392+10]..ast/import.ml[111,3392+18])
                    Tpat_extra_constraint
                    core_type (ast/import.ml[111,3392+10]..ast/import.ml[145,4606+34]) ghost
                      Ttyp_poly 'ocaml 'js
                      core_type (ast/import.ml[111,3392+36]..ast/import.ml[111,3392+69])
                        Ttyp_arrow
                        Nolabel
                        core_type (ast/import.ml[111,3392+36]..ast/import.ml[111,3392+54])
                          Ttyp_constr "Type/1989.t"
                          [
                            core_type (ast/import.ml[111,3392+37]..ast/import.ml[111,3392+39])
                              Ttyp_var js
                            core_type (ast/import.ml[111,3392+41]..ast/import.ml[111,3392+46])
                              Ttyp_var ocaml
                          ]
                        core_type (ast/import.ml[111,3392+58]..ast/import.ml[111,3392+69])
                          Ttyp_arrow
                          Nolabel
                          core_type (ast/import.ml[111,3392+58]..ast/import.ml[111,3392+63])
                            Ttyp_var ocaml
                          core_type (ast/import.ml[111,3392+67]..ast/import.ml[111,3392+69])
                            Ttyp_var js
                    pattern (ast/import.ml[111,3392+10]..ast/import.ml[111,3392+18])
                      Tpat_var "of_ocaml/2135"
                  expression (ast/import.ml[111,3392+10]..ast/import.ml[145,4606+34])
                    Texp_newtype "ocaml"
                      Texp_newtype "js"
                        Texp_constraint
                        core_type (ast/import.ml[111,3392+36]..ast/import.ml[111,3392+69])
                          Ttyp_arrow
                          Nolabel
                          core_type (ast/import.ml[111,3392+36]..ast/import.ml[111,3392+54])
                            Ttyp_constr "Type/1989.t"
                            [
                              core_type (ast/import.ml[111,3392+37]..ast/import.ml[111,3392+39])
                                Ttyp_constr "js/2137"
                                []
                              core_type (ast/import.ml[111,3392+41]..ast/import.ml[111,3392+46])
                                Ttyp_constr "ocaml/2136"
                                []
                            ]
                          core_type (ast/import.ml[111,3392+58]..ast/import.ml[111,3392+69])
                            Ttyp_arrow
                            Nolabel
                            core_type (ast/import.ml[111,3392+58]..ast/import.ml[111,3392+63])
                              Ttyp_constr "ocaml/2136"
                              []
                            core_type (ast/import.ml[111,3392+67]..ast/import.ml[111,3392+69])
                              Ttyp_constr "js/2137"
                              []
                          Texp_open Fresh
                          module_expr (ast/import.ml[112,3464+13]..ast/import.ml[112,3464+21])
                            Tmod_ident "Of_ocaml/2073"
                          expression (ast/import.ml[113,3489+4]..ast/import.ml[145,4606+34])
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (ast/import.ml[113,3489+8]..ast/import.ml[113,3489+12])
                                  Tpat_var "node/2138"
                                expression (ast/import.ml[114,3505+6]..ast/import.ml[145,4606+34])
                                  Texp_match
                                  expression (ast/import.ml[114,3505+12]..ast/import.ml[114,3505+16])
                                    Texp_ident "node/2138"
                                  [
                                    <case>
                                      pattern (ast/import.ml[121,3679+8]..ast/import.ml[121,3679+17])
                                        Tpat_value
                                        pattern (ast/import.ml[121,3679+8]..ast/import.ml[121,3679+17])
                                          Tpat_construct "Structure"
                                          []
                                      expression (ast/import.ml[121,3679+21]..ast/import.ml[121,3679+35])
                                        Texp_ident "Of_ocaml/2073.copy_structure"
                                    <case>
                                      pattern (ast/import.ml[122,3715+8]..ast/import.ml[122,3715+17])
                                        Tpat_value
                                        pattern (ast/import.ml[122,3715+8]..ast/import.ml[122,3715+17])
                                          Tpat_construct "Signature"
                                          []
                                      expression (ast/import.ml[122,3715+21]..ast/import.ml[122,3715+35])
                                        Texp_ident "Of_ocaml/2073.copy_signature"
                                    <case>
                                      pattern (ast/import.ml[123,3751+8]..ast/import.ml[123,3751+23])
                                        Tpat_value
                                        pattern (ast/import.ml[123,3751+8]..ast/import.ml[123,3751+23])
                                          Tpat_construct "Toplevel_phrase"
                                          []
                                      expression (ast/import.ml[123,3751+27]..ast/import.ml[123,3751+47])
                                        Texp_ident "Of_ocaml/2073.copy_toplevel_phrase"
                                    <case>
                                      pattern (ast/import.ml[124,3799+8]..ast/import.ml[124,3799+17])
                                        Tpat_value
                                        pattern (ast/import.ml[124,3799+8]..ast/import.ml[124,3799+17])
                                          Tpat_construct "Core_type"
                                          []
                                      expression (ast/import.ml[124,3799+21]..ast/import.ml[124,3799+35])
                                        Texp_ident "Of_ocaml/2073.copy_core_type"
                                    <case>
                                      pattern (ast/import.ml[125,3835+8]..ast/import.ml[125,3835+18])
                                        Tpat_value
                                        pattern (ast/import.ml[125,3835+8]..ast/import.ml[125,3835+18])
                                          Tpat_construct "Expression"
                                          []
                                      expression (ast/import.ml[125,3835+22]..ast/import.ml[125,3835+37])
                                        Texp_ident "Of_ocaml/2073.copy_expression"
                                    <case>
                                      pattern (ast/import.ml[126,3873+8]..ast/import.ml[126,3873+15])
                                        Tpat_value
                                        pattern (ast/import.ml[126,3873+8]..ast/import.ml[126,3873+15])
                                          Tpat_construct "Pattern"
                                          []
                                      expression (ast/import.ml[126,3873+19]..ast/import.ml[126,3873+31])
                                        Texp_ident "Of_ocaml/2073.copy_pattern"
                                    <case>
                                      pattern (ast/import.ml[127,3905+8]..ast/import.ml[127,3905+12])
                                        Tpat_value
                                        pattern (ast/import.ml[127,3905+8]..ast/import.ml[127,3905+12])
                                          Tpat_construct "Case"
                                          []
                                      expression (ast/import.ml[127,3905+16]..ast/import.ml[127,3905+25])
                                        Texp_ident "Of_ocaml/2073.copy_case"
                                    <case>
                                      pattern (ast/import.ml[128,3931+8]..ast/import.ml[128,3931+24])
                                        Tpat_value
                                        pattern (ast/import.ml[128,3931+8]..ast/import.ml[128,3931+24])
                                          Tpat_construct "Type_declaration"
                                          []
                                      expression (ast/import.ml[128,3931+28]..ast/import.ml[128,3931+49])
                                        Texp_ident "Of_ocaml/2073.copy_type_declaration"
                                    <case>
                                      pattern (ast/import.ml[129,3981+8]..ast/import.ml[129,3981+22])
                                        Tpat_value
                                        pattern (ast/import.ml[129,3981+8]..ast/import.ml[129,3981+22])
                                          Tpat_construct "Type_extension"
                                          []
                                      expression (ast/import.ml[129,3981+26]..ast/import.ml[129,3981+45])
                                        Texp_ident "Of_ocaml/2073.copy_type_extension"
                                    <case>
                                      pattern (ast/import.ml[130,4027+8]..ast/import.ml[130,4027+29])
                                        Tpat_value
                                        pattern (ast/import.ml[130,4027+8]..ast/import.ml[130,4027+29])
                                          Tpat_construct "Extension_constructor"
                                          []
                                      expression (ast/import.ml[130,4027+33]..ast/import.ml[130,4027+59])
                                        Texp_ident "Of_ocaml/2073.copy_extension_constructor"
                                    <case>
                                      pattern (ast/import.ml[131,4087+8]..ast/import.ml[131,4087+18])
                                        Tpat_value
                                        pattern (ast/import.ml[131,4087+8]..ast/import.ml[131,4087+18])
                                          Tpat_construct "Class_expr"
                                          []
                                      expression (ast/import.ml[131,4087+22]..ast/import.ml[131,4087+37])
                                        Texp_ident "Of_ocaml/2073.copy_class_expr"
                                    <case>
                                      pattern (ast/import.ml[132,4125+8]..ast/import.ml[132,4125+19])
                                        Tpat_value
                                        pattern (ast/import.ml[132,4125+8]..ast/import.ml[132,4125+19])
                                          Tpat_construct "Class_field"
                                          []
                                      expression (ast/import.ml[132,4125+23]..ast/import.ml[132,4125+39])
                                        Texp_ident "Of_ocaml/2073.copy_class_field"
                                    <case>
                                      pattern (ast/import.ml[133,4165+8]..ast/import.ml[133,4165+18])
                                        Tpat_value
                                        pattern (ast/import.ml[133,4165+8]..ast/import.ml[133,4165+18])
                                          Tpat_construct "Class_type"
                                          []
                                      expression (ast/import.ml[133,4165+22]..ast/import.ml[133,4165+37])
                                        Texp_ident "Of_ocaml/2073.copy_class_type"
                                    <case>
                                      pattern (ast/import.ml[134,4203+8]..ast/import.ml[134,4203+23])
                                        Tpat_value
                                        pattern (ast/import.ml[134,4203+8]..ast/import.ml[134,4203+23])
                                          Tpat_construct "Class_signature"
                                          []
                                      expression (ast/import.ml[134,4203+27]..ast/import.ml[134,4203+47])
                                        Texp_ident "Of_ocaml/2073.copy_class_signature"
                                    <case>
                                      pattern (ast/import.ml[135,4251+8]..ast/import.ml[135,4251+24])
                                        Tpat_value
                                        pattern (ast/import.ml[135,4251+8]..ast/import.ml[135,4251+24])
                                          Tpat_construct "Class_type_field"
                                          []
                                      expression (ast/import.ml[135,4251+28]..ast/import.ml[135,4251+49])
                                        Texp_ident "Of_ocaml/2073.copy_class_type_field"
                                    <case>
                                      pattern (ast/import.ml[136,4301+8]..ast/import.ml[136,4301+19])
                                        Tpat_value
                                        pattern (ast/import.ml[136,4301+8]..ast/import.ml[136,4301+19])
                                          Tpat_construct "Module_expr"
                                          []
                                      expression (ast/import.ml[136,4301+23]..ast/import.ml[136,4301+39])
                                        Texp_ident "Of_ocaml/2073.copy_module_expr"
                                    <case>
                                      pattern (ast/import.ml[137,4341+8]..ast/import.ml[137,4341+19])
                                        Tpat_value
                                        pattern (ast/import.ml[137,4341+8]..ast/import.ml[137,4341+19])
                                          Tpat_construct "Module_type"
                                          []
                                      expression (ast/import.ml[137,4341+23]..ast/import.ml[137,4341+39])
                                        Texp_ident "Of_ocaml/2073.copy_module_type"
                                    <case>
                                      pattern (ast/import.ml[138,4381+8]..ast/import.ml[138,4381+22])
                                        Tpat_value
                                        pattern (ast/import.ml[138,4381+8]..ast/import.ml[138,4381+22])
                                          Tpat_construct "Signature_item"
                                          []
                                      expression (ast/import.ml[138,4381+26]..ast/import.ml[138,4381+45])
                                        Texp_ident "Of_ocaml/2073.copy_signature_item"
                                    <case>
                                      pattern (ast/import.ml[139,4427+8]..ast/import.ml[139,4427+22])
                                        Tpat_value
                                        pattern (ast/import.ml[139,4427+8]..ast/import.ml[139,4427+22])
                                          Tpat_construct "Structure_item"
                                          []
                                      expression (ast/import.ml[139,4427+26]..ast/import.ml[139,4427+45])
                                        Texp_ident "Of_ocaml/2073.copy_structure_item"
                                    <case>
                                      pattern (ast/import.ml[141,4479+8]..ast/import.ml[141,4479+14])
                                        Tpat_value
                                        pattern (ast/import.ml[141,4479+8]..ast/import.ml[141,4479+14])
                                          Tpat_construct "List"
                                          [
                                            pattern (ast/import.ml[141,4479+13]..ast/import.ml[141,4479+14])
                                              Tpat_var "t/2307"
                                          ]
                                      expression (ast/import.ml[141,4479+18]..ast/import.ml[141,4479+39])
                                        Texp_apply
                                        expression (ast/import.ml[141,4479+18]..ast/import.ml[141,4479+26])
                                          Texp_ident "Stdlib!.List.map"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (ast/import.ml[141,4479+27]..ast/import.ml[141,4479+39])
                                              Texp_apply
                                              expression (ast/import.ml[141,4479+28]..ast/import.ml[141,4479+36])
                                                Texp_ident "of_ocaml/2135"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (ast/import.ml[141,4479+37]..ast/import.ml[141,4479+38])
                                                    Texp_ident "t/2307"
                                              ]
                                        ]
                                    <case>
                                      pattern (ast/import.ml[142,4519+8]..ast/import.ml[142,4519+19])
                                        Tpat_value
                                        pattern (ast/import.ml[142,4519+8]..ast/import.ml[142,4519+19])
                                          Tpat_construct "Pair"
                                          [
                                            pattern (ast/import.ml[142,4519+14]..ast/import.ml[142,4519+15])
                                              Tpat_var "a/2312"
                                            pattern (ast/import.ml[142,4519+17]..ast/import.ml[142,4519+18])
                                              Tpat_var "b/2313"
                                          ]
                                      expression (ast/import.ml[143,4542+10]..ast/import.ml[145,4606+34])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (ast/import.ml[143,4542+14]..ast/import.ml[143,4542+15])
                                              Tpat_var "f/2378"
                                            expression (ast/import.ml[143,4542+18]..ast/import.ml[143,4542+28])
                                              Texp_apply
                                              expression (ast/import.ml[143,4542+18]..ast/import.ml[143,4542+26])
                                                Texp_ident "of_ocaml/2135"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (ast/import.ml[143,4542+27]..ast/import.ml[143,4542+28])
                                                    Texp_ident "a/2312"
                                              ]
                                        ]
                                        expression (ast/import.ml[144,4574+10]..ast/import.ml[145,4606+34])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (ast/import.ml[144,4574+14]..ast/import.ml[144,4574+15])
                                                Tpat_var "g/2379"
                                              expression (ast/import.ml[144,4574+18]..ast/import.ml[144,4574+28])
                                                Texp_apply
                                                expression (ast/import.ml[144,4574+18]..ast/import.ml[144,4574+26])
                                                  Texp_ident "of_ocaml/2135"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (ast/import.ml[144,4574+27]..ast/import.ml[144,4574+28])
                                                      Texp_ident "b/2313"
                                                ]
                                          ]
                                          expression (ast/import.ml[145,4606+10]..ast/import.ml[145,4606+34])
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (ast/import.ml[145,4606+14]..ast/import.ml[145,4606+20])
                                                  Tpat_tuple
                                                  [
                                                    pattern (ast/import.ml[145,4606+15]..ast/import.ml[145,4606+16])
                                                      Tpat_var "x/2380"
                                                    pattern (ast/import.ml[145,4606+18]..ast/import.ml[145,4606+19])
                                                      Tpat_var "y/2381"
                                                  ]
                                                expression (ast/import.ml[145,4606+24]..ast/import.ml[145,4606+34])
                                                  Texp_tuple
                                                  [
                                                    expression (ast/import.ml[145,4606+25]..ast/import.ml[145,4606+28])
                                                      Texp_apply
                                                      expression (ast/import.ml[145,4606+25]..ast/import.ml[145,4606+26])
                                                        Texp_ident "f/2378"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (ast/import.ml[145,4606+27]..ast/import.ml[145,4606+28])
                                                            Texp_ident "x/2380"
                                                      ]
                                                    expression (ast/import.ml[145,4606+30]..ast/import.ml[145,4606+33])
                                                      Texp_apply
                                                      expression (ast/import.ml[145,4606+30]..ast/import.ml[145,4606+31])
                                                        Texp_ident "g/2379"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (ast/import.ml[145,4606+32]..ast/import.ml[145,4606+33])
                                                            Texp_ident "y/2381"
                                                      ]
                                                  ]
                                            ]
                                  ]
                                  []
                            ]
              ]
            structure_item (ast/import.ml[147,4642+2]..ast/import.ml[181,5856+34])
              Tstr_value Rec
              [
                <def>
                  pattern (ast/import.ml[147,4642+10]..ast/import.ml[147,4642+18])
                    Tpat_extra_constraint
                    core_type (ast/import.ml[147,4642+10]..ast/import.ml[181,5856+34]) ghost
                      Ttyp_poly 'ocaml 'js
                      core_type (ast/import.ml[147,4642+36]..ast/import.ml[147,4642+69])
                        Ttyp_arrow
                        Nolabel
                        core_type (ast/import.ml[147,4642+36]..ast/import.ml[147,4642+54])
                          Ttyp_constr "Type/1989.t"
                          [
                            core_type (ast/import.ml[147,4642+37]..ast/import.ml[147,4642+39])
                              Ttyp_var js
                            core_type (ast/import.ml[147,4642+41]..ast/import.ml[147,4642+46])
                              Ttyp_var ocaml
                          ]
                        core_type (ast/import.ml[147,4642+58]..ast/import.ml[147,4642+69])
                          Ttyp_arrow
                          Nolabel
                          core_type (ast/import.ml[147,4642+58]..ast/import.ml[147,4642+60])
                            Ttyp_var js
                          core_type (ast/import.ml[147,4642+64]..ast/import.ml[147,4642+69])
                            Ttyp_var ocaml
                    pattern (ast/import.ml[147,4642+10]..ast/import.ml[147,4642+18])
                      Tpat_var "to_ocaml/2389"
                  expression (ast/import.ml[147,4642+10]..ast/import.ml[181,5856+34])
                    Texp_newtype "ocaml"
                      Texp_newtype "js"
                        Texp_constraint
                        core_type (ast/import.ml[147,4642+36]..ast/import.ml[147,4642+69])
                          Ttyp_arrow
                          Nolabel
                          core_type (ast/import.ml[147,4642+36]..ast/import.ml[147,4642+54])
                            Ttyp_constr "Type/1989.t"
                            [
                              core_type (ast/import.ml[147,4642+37]..ast/import.ml[147,4642+39])
                                Ttyp_constr "js/2391"
                                []
                              core_type (ast/import.ml[147,4642+41]..ast/import.ml[147,4642+46])
                                Ttyp_constr "ocaml/2390"
                                []
                            ]
                          core_type (ast/import.ml[147,4642+58]..ast/import.ml[147,4642+69])
                            Ttyp_arrow
                            Nolabel
                            core_type (ast/import.ml[147,4642+58]..ast/import.ml[147,4642+60])
                              Ttyp_constr "js/2391"
                              []
                            core_type (ast/import.ml[147,4642+64]..ast/import.ml[147,4642+69])
                              Ttyp_constr "ocaml/2390"
                              []
                          Texp_open Fresh
                          module_expr (ast/import.ml[148,4714+13]..ast/import.ml[148,4714+21])
                            Tmod_ident "To_ocaml/2134"
                          expression (ast/import.ml[149,4739+4]..ast/import.ml[181,5856+34])
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (ast/import.ml[149,4739+8]..ast/import.ml[149,4739+12])
                                  Tpat_var "node/2392"
                                expression (ast/import.ml[150,4755+6]..ast/import.ml[181,5856+34])
                                  Texp_match
                                  expression (ast/import.ml[150,4755+12]..ast/import.ml[150,4755+16])
                                    Texp_ident "node/2392"
                                  [
                                    <case>
                                      pattern (ast/import.ml[157,4929+8]..ast/import.ml[157,4929+17])
                                        Tpat_value
                                        pattern (ast/import.ml[157,4929+8]..ast/import.ml[157,4929+17])
                                          Tpat_construct "Structure"
                                          []
                                      expression (ast/import.ml[157,4929+21]..ast/import.ml[157,4929+35])
                                        Texp_ident "To_ocaml/2134.copy_structure"
                                    <case>
                                      pattern (ast/import.ml[158,4965+8]..ast/import.ml[158,4965+17])
                                        Tpat_value
                                        pattern (ast/import.ml[158,4965+8]..ast/import.ml[158,4965+17])
                                          Tpat_construct "Signature"
                                          []
                                      expression (ast/import.ml[158,4965+21]..ast/import.ml[158,4965+35])
                                        Texp_ident "To_ocaml/2134.copy_signature"
                                    <case>
                                      pattern (ast/import.ml[159,5001+8]..ast/import.ml[159,5001+23])
                                        Tpat_value
                                        pattern (ast/import.ml[159,5001+8]..ast/import.ml[159,5001+23])
                                          Tpat_construct "Toplevel_phrase"
                                          []
                                      expression (ast/import.ml[159,5001+27]..ast/import.ml[159,5001+47])
                                        Texp_ident "To_ocaml/2134.copy_toplevel_phrase"
                                    <case>
                                      pattern (ast/import.ml[160,5049+8]..ast/import.ml[160,5049+17])
                                        Tpat_value
                                        pattern (ast/import.ml[160,5049+8]..ast/import.ml[160,5049+17])
                                          Tpat_construct "Core_type"
                                          []
                                      expression (ast/import.ml[160,5049+21]..ast/import.ml[160,5049+35])
                                        Texp_ident "To_ocaml/2134.copy_core_type"
                                    <case>
                                      pattern (ast/import.ml[161,5085+8]..ast/import.ml[161,5085+18])
                                        Tpat_value
                                        pattern (ast/import.ml[161,5085+8]..ast/import.ml[161,5085+18])
                                          Tpat_construct "Expression"
                                          []
                                      expression (ast/import.ml[161,5085+22]..ast/import.ml[161,5085+37])
                                        Texp_ident "To_ocaml/2134.copy_expression"
                                    <case>
                                      pattern (ast/import.ml[162,5123+8]..ast/import.ml[162,5123+15])
                                        Tpat_value
                                        pattern (ast/import.ml[162,5123+8]..ast/import.ml[162,5123+15])
                                          Tpat_construct "Pattern"
                                          []
                                      expression (ast/import.ml[162,5123+19]..ast/import.ml[162,5123+31])
                                        Texp_ident "To_ocaml/2134.copy_pattern"
                                    <case>
                                      pattern (ast/import.ml[163,5155+8]..ast/import.ml[163,5155+12])
                                        Tpat_value
                                        pattern (ast/import.ml[163,5155+8]..ast/import.ml[163,5155+12])
                                          Tpat_construct "Case"
                                          []
                                      expression (ast/import.ml[163,5155+16]..ast/import.ml[163,5155+25])
                                        Texp_ident "To_ocaml/2134.copy_case"
                                    <case>
                                      pattern (ast/import.ml[164,5181+8]..ast/import.ml[164,5181+24])
                                        Tpat_value
                                        pattern (ast/import.ml[164,5181+8]..ast/import.ml[164,5181+24])
                                          Tpat_construct "Type_declaration"
                                          []
                                      expression (ast/import.ml[164,5181+28]..ast/import.ml[164,5181+49])
                                        Texp_ident "To_ocaml/2134.copy_type_declaration"
                                    <case>
                                      pattern (ast/import.ml[165,5231+8]..ast/import.ml[165,5231+22])
                                        Tpat_value
                                        pattern (ast/import.ml[165,5231+8]..ast/import.ml[165,5231+22])
                                          Tpat_construct "Type_extension"
                                          []
                                      expression (ast/import.ml[165,5231+26]..ast/import.ml[165,5231+45])
                                        Texp_ident "To_ocaml/2134.copy_type_extension"
                                    <case>
                                      pattern (ast/import.ml[166,5277+8]..ast/import.ml[166,5277+29])
                                        Tpat_value
                                        pattern (ast/import.ml[166,5277+8]..ast/import.ml[166,5277+29])
                                          Tpat_construct "Extension_constructor"
                                          []
                                      expression (ast/import.ml[166,5277+33]..ast/import.ml[166,5277+59])
                                        Texp_ident "To_ocaml/2134.copy_extension_constructor"
                                    <case>
                                      pattern (ast/import.ml[167,5337+8]..ast/import.ml[167,5337+18])
                                        Tpat_value
                                        pattern (ast/import.ml[167,5337+8]..ast/import.ml[167,5337+18])
                                          Tpat_construct "Class_expr"
                                          []
                                      expression (ast/import.ml[167,5337+22]..ast/import.ml[167,5337+37])
                                        Texp_ident "To_ocaml/2134.copy_class_expr"
                                    <case>
                                      pattern (ast/import.ml[168,5375+8]..ast/import.ml[168,5375+19])
                                        Tpat_value
                                        pattern (ast/import.ml[168,5375+8]..ast/import.ml[168,5375+19])
                                          Tpat_construct "Class_field"
                                          []
                                      expression (ast/import.ml[168,5375+23]..ast/import.ml[168,5375+39])
                                        Texp_ident "To_ocaml/2134.copy_class_field"
                                    <case>
                                      pattern (ast/import.ml[169,5415+8]..ast/import.ml[169,5415+18])
                                        Tpat_value
                                        pattern (ast/import.ml[169,5415+8]..ast/import.ml[169,5415+18])
                                          Tpat_construct "Class_type"
                                          []
                                      expression (ast/import.ml[169,5415+22]..ast/import.ml[169,5415+37])
                                        Texp_ident "To_ocaml/2134.copy_class_type"
                                    <case>
                                      pattern (ast/import.ml[170,5453+8]..ast/import.ml[170,5453+23])
                                        Tpat_value
                                        pattern (ast/import.ml[170,5453+8]..ast/import.ml[170,5453+23])
                                          Tpat_construct "Class_signature"
                                          []
                                      expression (ast/import.ml[170,5453+27]..ast/import.ml[170,5453+47])
                                        Texp_ident "To_ocaml/2134.copy_class_signature"
                                    <case>
                                      pattern (ast/import.ml[171,5501+8]..ast/import.ml[171,5501+24])
                                        Tpat_value
                                        pattern (ast/import.ml[171,5501+8]..ast/import.ml[171,5501+24])
                                          Tpat_construct "Class_type_field"
                                          []
                                      expression (ast/import.ml[171,5501+28]..ast/import.ml[171,5501+49])
                                        Texp_ident "To_ocaml/2134.copy_class_type_field"
                                    <case>
                                      pattern (ast/import.ml[172,5551+8]..ast/import.ml[172,5551+19])
                                        Tpat_value
                                        pattern (ast/import.ml[172,5551+8]..ast/import.ml[172,5551+19])
                                          Tpat_construct "Module_expr"
                                          []
                                      expression (ast/import.ml[172,5551+23]..ast/import.ml[172,5551+39])
                                        Texp_ident "To_ocaml/2134.copy_module_expr"
                                    <case>
                                      pattern (ast/import.ml[173,5591+8]..ast/import.ml[173,5591+19])
                                        Tpat_value
                                        pattern (ast/import.ml[173,5591+8]..ast/import.ml[173,5591+19])
                                          Tpat_construct "Module_type"
                                          []
                                      expression (ast/import.ml[173,5591+23]..ast/import.ml[173,5591+39])
                                        Texp_ident "To_ocaml/2134.copy_module_type"
                                    <case>
                                      pattern (ast/import.ml[174,5631+8]..ast/import.ml[174,5631+22])
                                        Tpat_value
                                        pattern (ast/import.ml[174,5631+8]..ast/import.ml[174,5631+22])
                                          Tpat_construct "Signature_item"
                                          []
                                      expression (ast/import.ml[174,5631+26]..ast/import.ml[174,5631+45])
                                        Texp_ident "To_ocaml/2134.copy_signature_item"
                                    <case>
                                      pattern (ast/import.ml[175,5677+8]..ast/import.ml[175,5677+22])
                                        Tpat_value
                                        pattern (ast/import.ml[175,5677+8]..ast/import.ml[175,5677+22])
                                          Tpat_construct "Structure_item"
                                          []
                                      expression (ast/import.ml[175,5677+26]..ast/import.ml[175,5677+45])
                                        Texp_ident "To_ocaml/2134.copy_structure_item"
                                    <case>
                                      pattern (ast/import.ml[177,5729+8]..ast/import.ml[177,5729+14])
                                        Tpat_value
                                        pattern (ast/import.ml[177,5729+8]..ast/import.ml[177,5729+14])
                                          Tpat_construct "List"
                                          [
                                            pattern (ast/import.ml[177,5729+13]..ast/import.ml[177,5729+14])
                                              Tpat_var "t/2395"
                                          ]
                                      expression (ast/import.ml[177,5729+18]..ast/import.ml[177,5729+39])
                                        Texp_apply
                                        expression (ast/import.ml[177,5729+18]..ast/import.ml[177,5729+26])
                                          Texp_ident "Stdlib!.List.map"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (ast/import.ml[177,5729+27]..ast/import.ml[177,5729+39])
                                              Texp_apply
                                              expression (ast/import.ml[177,5729+28]..ast/import.ml[177,5729+36])
                                                Texp_ident "to_ocaml/2389"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (ast/import.ml[177,5729+37]..ast/import.ml[177,5729+38])
                                                    Texp_ident "t/2395"
                                              ]
                                        ]
                                    <case>
                                      pattern (ast/import.ml[178,5769+8]..ast/import.ml[178,5769+19])
                                        Tpat_value
                                        pattern (ast/import.ml[178,5769+8]..ast/import.ml[178,5769+19])
                                          Tpat_construct "Pair"
                                          [
                                            pattern (ast/import.ml[178,5769+14]..ast/import.ml[178,5769+15])
                                              Tpat_var "a/2400"
                                            pattern (ast/import.ml[178,5769+17]..ast/import.ml[178,5769+18])
                                              Tpat_var "b/2401"
                                          ]
                                      expression (ast/import.ml[179,5792+10]..ast/import.ml[181,5856+34])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (ast/import.ml[179,5792+14]..ast/import.ml[179,5792+15])
                                              Tpat_var "f/2402"
                                            expression (ast/import.ml[179,5792+18]..ast/import.ml[179,5792+28])
                                              Texp_apply
                                              expression (ast/import.ml[179,5792+18]..ast/import.ml[179,5792+26])
                                                Texp_ident "to_ocaml/2389"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (ast/import.ml[179,5792+27]..ast/import.ml[179,5792+28])
                                                    Texp_ident "a/2400"
                                              ]
                                        ]
                                        expression (ast/import.ml[180,5824+10]..ast/import.ml[181,5856+34])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (ast/import.ml[180,5824+14]..ast/import.ml[180,5824+15])
                                                Tpat_var "g/2403"
                                              expression (ast/import.ml[180,5824+18]..ast/import.ml[180,5824+28])
                                                Texp_apply
                                                expression (ast/import.ml[180,5824+18]..ast/import.ml[180,5824+26])
                                                  Texp_ident "to_ocaml/2389"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (ast/import.ml[180,5824+27]..ast/import.ml[180,5824+28])
                                                      Texp_ident "b/2401"
                                                ]
                                          ]
                                          expression (ast/import.ml[181,5856+10]..ast/import.ml[181,5856+34])
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (ast/import.ml[181,5856+14]..ast/import.ml[181,5856+20])
                                                  Tpat_tuple
                                                  [
                                                    pattern (ast/import.ml[181,5856+15]..ast/import.ml[181,5856+16])
                                                      Tpat_var "x/2404"
                                                    pattern (ast/import.ml[181,5856+18]..ast/import.ml[181,5856+19])
                                                      Tpat_var "y/2405"
                                                  ]
                                                expression (ast/import.ml[181,5856+24]..ast/import.ml[181,5856+34])
                                                  Texp_tuple
                                                  [
                                                    expression (ast/import.ml[181,5856+25]..ast/import.ml[181,5856+28])
                                                      Texp_apply
                                                      expression (ast/import.ml[181,5856+25]..ast/import.ml[181,5856+26])
                                                        Texp_ident "f/2402"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (ast/import.ml[181,5856+27]..ast/import.ml[181,5856+28])
                                                            Texp_ident "x/2404"
                                                      ]
                                                    expression (ast/import.ml[181,5856+30]..ast/import.ml[181,5856+33])
                                                      Texp_apply
                                                      expression (ast/import.ml[181,5856+30]..ast/import.ml[181,5856+31])
                                                        Texp_ident "g/2403"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (ast/import.ml[181,5856+32]..ast/import.ml[181,5856+33])
                                                            Texp_ident "y/2405"
                                                      ]
                                                  ]
                                            ]
                                  ]
                                  []
                            ]
              ]
            structure_item (ast/import.ml[183,5892+2]..ast/import.ml[183,5892+80])
              Tstr_value Nonrec
              [
                <def>
                  pattern (ast/import.ml[183,5892+6]..ast/import.ml[183,5892+21])
                    Tpat_var "of_ocaml_mapper/2413"
                  expression (ast/import.ml[183,5892+22]..ast/import.ml[183,5892+80]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (ast/import.ml[183,5892+22]..ast/import.ml[183,5892+26])
                          Tpat_var "item/2415"
                        expression (ast/import.ml[183,5892+27]..ast/import.ml[183,5892+80]) ghost
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (ast/import.ml[183,5892+27]..ast/import.ml[183,5892+28])
                                Tpat_var "f/2416"
                              expression (ast/import.ml[183,5892+29]..ast/import.ml[183,5892+80]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (ast/import.ml[183,5892+29]..ast/import.ml[183,5892+33])
                                      Tpat_var "ctxt/2417"
                                    expression (ast/import.ml[183,5892+34]..ast/import.ml[183,5892+80]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (ast/import.ml[183,5892+34]..ast/import.ml[183,5892+35])
                                            Tpat_var "x/2418"
                                          expression (ast/import.ml[183,5892+38]..ast/import.ml[183,5892+80])
                                            Texp_apply
                                            expression (ast/import.ml[183,5892+64]..ast/import.ml[183,5892+66])
                                              Texp_ident "Stdlib!.|>"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (ast/import.ml[183,5892+38]..ast/import.ml[183,5892+63])
                                                  Texp_apply
                                                  expression (ast/import.ml[183,5892+54]..ast/import.ml[183,5892+56])
                                                    Texp_ident "Stdlib!.|>"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (ast/import.ml[183,5892+38]..ast/import.ml[183,5892+53])
                                                        Texp_apply
                                                        expression (ast/import.ml[183,5892+38]..ast/import.ml[183,5892+46])
                                                          Texp_ident "to_ocaml/2389"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (ast/import.ml[183,5892+47]..ast/import.ml[183,5892+51])
                                                              Texp_ident "item/2415"
                                                          <arg>
                                                            Nolabel
                                                            expression (ast/import.ml[183,5892+52]..ast/import.ml[183,5892+53])
                                                              Texp_ident "x/2418"
                                                        ]
                                                    <arg>
                                                      Nolabel
                                                      expression (ast/import.ml[183,5892+57]..ast/import.ml[183,5892+63])
                                                        Texp_apply
                                                        expression (ast/import.ml[183,5892+57]..ast/import.ml[183,5892+58])
                                                          Texp_ident "f/2416"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (ast/import.ml[183,5892+59]..ast/import.ml[183,5892+63])
                                                              Texp_ident "ctxt/2417"
                                                        ]
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (ast/import.ml[183,5892+67]..ast/import.ml[183,5892+80])
                                                  Texp_apply
                                                  expression (ast/import.ml[183,5892+67]..ast/import.ml[183,5892+75])
                                                    Texp_ident "of_ocaml/2135"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (ast/import.ml[183,5892+76]..ast/import.ml[183,5892+80])
                                                        Texp_ident "item/2415"
                                                  ]
                                            ]
                                      ]
                                ]
                          ]
                    ]
              ]
            structure_item (ast/import.ml[184,5973+2]..ast/import.ml[184,5973+80])
              Tstr_value Nonrec
              [
                <def>
                  pattern (ast/import.ml[184,5973+6]..ast/import.ml[184,5973+21])
                    Tpat_var "to_ocaml_mapper/2419"
                  expression (ast/import.ml[184,5973+22]..ast/import.ml[184,5973+80]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (ast/import.ml[184,5973+22]..ast/import.ml[184,5973+26])
                          Tpat_var "item/2421"
                        expression (ast/import.ml[184,5973+27]..ast/import.ml[184,5973+80]) ghost
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (ast/import.ml[184,5973+27]..ast/import.ml[184,5973+28])
                                Tpat_var "f/2422"
                              expression (ast/import.ml[184,5973+29]..ast/import.ml[184,5973+80]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (ast/import.ml[184,5973+29]..ast/import.ml[184,5973+33])
                                      Tpat_var "ctxt/2423"
                                    expression (ast/import.ml[184,5973+34]..ast/import.ml[184,5973+80]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (ast/import.ml[184,5973+34]..ast/import.ml[184,5973+35])
                                            Tpat_var "x/2424"
                                          expression (ast/import.ml[184,5973+38]..ast/import.ml[184,5973+80])
                                            Texp_apply
                                            expression (ast/import.ml[184,5973+64]..ast/import.ml[184,5973+66])
                                              Texp_ident "Stdlib!.|>"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (ast/import.ml[184,5973+38]..ast/import.ml[184,5973+63])
                                                  Texp_apply
                                                  expression (ast/import.ml[184,5973+54]..ast/import.ml[184,5973+56])
                                                    Texp_ident "Stdlib!.|>"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (ast/import.ml[184,5973+38]..ast/import.ml[184,5973+53])
                                                        Texp_apply
                                                        expression (ast/import.ml[184,5973+38]..ast/import.ml[184,5973+46])
                                                          Texp_ident "of_ocaml/2135"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (ast/import.ml[184,5973+47]..ast/import.ml[184,5973+51])
                                                              Texp_ident "item/2421"
                                                          <arg>
                                                            Nolabel
                                                            expression (ast/import.ml[184,5973+52]..ast/import.ml[184,5973+53])
                                                              Texp_ident "x/2424"
                                                        ]
                                                    <arg>
                                                      Nolabel
                                                      expression (ast/import.ml[184,5973+57]..ast/import.ml[184,5973+63])
                                                        Texp_apply
                                                        expression (ast/import.ml[184,5973+57]..ast/import.ml[184,5973+58])
                                                          Texp_ident "f/2422"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (ast/import.ml[184,5973+59]..ast/import.ml[184,5973+63])
                                                              Texp_ident "ctxt/2423"
                                                        ]
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (ast/import.ml[184,5973+67]..ast/import.ml[184,5973+80])
                                                  Texp_apply
                                                  expression (ast/import.ml[184,5973+67]..ast/import.ml[184,5973+75])
                                                    Texp_ident "to_ocaml/2389"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (ast/import.ml[184,5973+76]..ast/import.ml[184,5973+80])
                                                        Texp_ident "item/2421"
                                                  ]
                                            ]
                                      ]
                                ]
                          ]
                    ]
              ]
          ]
  structure_item (ast/import.ml[187,6059+0]..ast/import.ml[187,6059+40])
    Tstr_module
    Selected_ast/2744
      module_expr (ast/import.ml[187,6059+22]..ast/import.ml[187,6059+40])
        Tmod_apply
        module_expr (ast/import.ml[187,6059+22]..ast/import.ml[187,6059+32])
          Tmod_ident "Select_ast/2425"
        module_expr (ast/import.ml[187,6059+34]..ast/import.ml[187,6059+39])
          module_expr (ast/import.ml[187,6059+34]..ast/import.ml[187,6059+39])
            Tmod_ident "Ocaml/1607"
  structure_item (ast/import.ml[188,6100+0]..ast/import.ml[188,6100+35])
    Tstr_module
    Ast_helper/2745
      module_expr (ast/import.ml[188,6100+20]..ast/import.ml[188,6100+35])
        Tmod_ident "Ppxlib_ast__!.Ast_helper_lite"
  structure_item (ast/import.ml[191,6244+0]..ast/import.ml[191,6244+45])
    Tstr_module
    Parsetree/2746
      module_expr (ast/import.ml[191,6244+19]..ast/import.ml[191,6244+45])
        Tmod_ident "Selected_ast/2744.Ast.Parsetree"
  structure_item (ast/import.ml[192,6290+0]..ast/import.ml[192,6290+43])
    Tstr_module
    Asttypes/2747
      module_expr (ast/import.ml[192,6290+18]..ast/import.ml[192,6290+43])
        Tmod_ident "Selected_ast/2744.Ast.Asttypes"
  structure_item (ast/import.ml[195,6362+0]..ast/import.ml[195,6362+33])
    Tstr_module
    Location/2798
      module_expr (ast/import.ml[195,6362+18]..ast/import.ml[195,6362+33])
        Tmod_ident "Astlib!.Location"
  structure_item (ast/import.ml[196,6396+0]..ast/import.ml[196,6396+35])
    Tstr_module
    Longident/2799
      module_expr (ast/import.ml[196,6396+19]..ast/import.ml[196,6396+35])
        Tmod_ident "Astlib!.Longident"
  structure_item (ast/import.ml[198,6433+0]..ast/import.ml[214,7061+3])
    Tstr_module
    Parse/3000
      module_expr (ast/import.ml[198,6433+15]..ast/import.ml[214,7061+3])
        module_expr (ast/import.ml[198,6433+15]..ast/import.ml[214,7061+3])
          Tmod_structure
          [
            structure_item (ast/import.ml[199,6455+2]..ast/import.ml[199,6455+22])
              Tstr_include              module_expr (ast/import.ml[199,6455+10]..ast/import.ml[199,6455+22])
                module_expr (ast/import.ml[199,6455+10]..ast/import.ml[199,6455+22])
                  Tmod_ident "Astlib!.Parse"
            structure_item (ast/import.ml[200,6478+2]..ast/import.ml[200,6478+49])
              Tstr_module
              Of_ocaml/2955
                module_expr (ast/import.ml[200,6478+20]..ast/import.ml[200,6478+49])
                  Tmod_apply
                  module_expr (ast/import.ml[200,6478+20]..ast/import.ml[200,6478+44])
                    Tmod_apply
                    module_expr (ast/import.ml[200,6478+20]..ast/import.ml[200,6478+36])
                      module_expr (ast/import.ml[200,6478+20]..ast/import.ml[200,6478+36])
                        Tmod_ident "Ppxlib_ast__!.Versions.Convert"
                    module_expr (ast/import.ml[200,6478+38]..ast/import.ml[200,6478+43])
                      module_expr (ast/import.ml[200,6478+38]..ast/import.ml[200,6478+43])
                        Tmod_ident "Ocaml/1607"
                  module_expr (ast/import.ml[200,6478+46]..ast/import.ml[200,6478+48])
                    module_expr (ast/import.ml[200,6478+46]..ast/import.ml[200,6478+48])
                      Tmod_ident "Js/1606"
            structure_item (ast/import.ml[202,6529+2]..ast/import.ml[202,6529+78])
              Tstr_value Nonrec
              [
                <def>
                  pattern (ast/import.ml[202,6529+6]..ast/import.ml[202,6529+20])
                    Tpat_var "implementation/2956"
                  expression (ast/import.ml[202,6529+21]..ast/import.ml[202,6529+78]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (ast/import.ml[202,6529+21]..ast/import.ml[202,6529+27])
                          Tpat_var "lexbuf/2957"
                        expression (ast/import.ml[202,6529+30]..ast/import.ml[202,6529+78])
                          Texp_apply
                          expression (ast/import.ml[202,6529+52]..ast/import.ml[202,6529+54])
                            Texp_ident "Stdlib!.|>"
                          [
                            <arg>
                              Nolabel
                              expression (ast/import.ml[202,6529+30]..ast/import.ml[202,6529+51])
                                Texp_apply
                                expression (ast/import.ml[202,6529+30]..ast/import.ml[202,6529+44])
                                  Texp_ident "implementation/2909"
                                [
                                  <arg>
                                    Nolabel
                                    expression (ast/import.ml[202,6529+45]..ast/import.ml[202,6529+51])
                                      Texp_ident "lexbuf/2957"
                                ]
                            <arg>
                              Nolabel
                              expression (ast/import.ml[202,6529+55]..ast/import.ml[202,6529+78])
                                Texp_ident "Of_ocaml/2955.copy_structure"
                          ]
                    ]
              ]
            structure_item (ast/import.ml[203,6608+2]..ast/import.ml[203,6608+68])
              Tstr_value Nonrec
              [
                <def>
                  pattern (ast/import.ml[203,6608+6]..ast/import.ml[203,6608+15])
                    Tpat_var "interface/2988"
                  expression (ast/import.ml[203,6608+16]..ast/import.ml[203,6608+68]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (ast/import.ml[203,6608+16]..ast/import.ml[203,6608+22])
                          Tpat_var "lexbuf/2989"
                        expression (ast/import.ml[203,6608+25]..ast/import.ml[203,6608+68])
                          Texp_apply
                          expression (ast/import.ml[203,6608+42]..ast/import.ml[203,6608+44])
                            Texp_ident "Stdlib!.|>"
                          [
                            <arg>
                              Nolabel
                              expression (ast/import.ml[203,6608+25]..ast/import.ml[203,6608+41])
                                Texp_apply
                                expression (ast/import.ml[203,6608+25]..ast/import.ml[203,6608+34])
                                  Texp_ident "interface/2910"
                                [
                                  <arg>
                                    Nolabel
                                    expression (ast/import.ml[203,6608+35]..ast/import.ml[203,6608+41])
                                      Texp_ident "lexbuf/2989"
                                ]
                            <arg>
                              Nolabel
                              expression (ast/import.ml[203,6608+45]..ast/import.ml[203,6608+68])
                                Texp_ident "Of_ocaml/2955.copy_signature"
                          ]
                    ]
              ]
            structure_item (ast/import.ml[205,6678+2]..ast/import.ml[206,6709+59])
              Tstr_value Nonrec
              [
                <def>
                  pattern (ast/import.ml[205,6678+6]..ast/import.ml[205,6678+21])
                    Tpat_var "toplevel_phrase/2990"
                  expression (ast/import.ml[205,6678+22]..ast/import.ml[206,6709+59]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (ast/import.ml[205,6678+22]..ast/import.ml[205,6678+28])
                          Tpat_var "lexbuf/2991"
                        expression (ast/import.ml[206,6709+4]..ast/import.ml[206,6709+59])
                          Texp_apply
                          expression (ast/import.ml[206,6709+27]..ast/import.ml[206,6709+29])
                            Texp_ident "Stdlib!.|>"
                          [
                            <arg>
                              Nolabel
                              expression (ast/import.ml[206,6709+4]..ast/import.ml[206,6709+26])
                                Texp_apply
                                expression (ast/import.ml[206,6709+4]..ast/import.ml[206,6709+19])
                                  Texp_ident "toplevel_phrase/2911"
                                [
                                  <arg>
                                    Nolabel
                                    expression (ast/import.ml[206,6709+20]..ast/import.ml[206,6709+26])
                                      Texp_ident "lexbuf/2991"
                                ]
                            <arg>
                              Nolabel
                              expression (ast/import.ml[206,6709+30]..ast/import.ml[206,6709+59])
                                Texp_ident "Of_ocaml/2955.copy_toplevel_phrase"
                          ]
                    ]
              ]
            structure_item (ast/import.ml[208,6770+2]..ast/import.ml[209,6794+61])
              Tstr_value Nonrec
              [
                <def>
                  pattern (ast/import.ml[208,6770+6]..ast/import.ml[208,6770+14])
                    Tpat_var "use_file/2992"
                  expression (ast/import.ml[208,6770+15]..ast/import.ml[209,6794+61]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (ast/import.ml[208,6770+15]..ast/import.ml[208,6770+21])
                          Tpat_var "lexbuf/2993"
                        expression (ast/import.ml[209,6794+4]..ast/import.ml[209,6794+61])
                          Texp_apply
                          expression (ast/import.ml[209,6794+20]..ast/import.ml[209,6794+22])
                            Texp_ident "Stdlib!.|>"
                          [
                            <arg>
                              Nolabel
                              expression (ast/import.ml[209,6794+4]..ast/import.ml[209,6794+19])
                                Texp_apply
                                expression (ast/import.ml[209,6794+4]..ast/import.ml[209,6794+12])
                                  Texp_ident "use_file/2912"
                                [
                                  <arg>
                                    Nolabel
                                    expression (ast/import.ml[209,6794+13]..ast/import.ml[209,6794+19])
                                      Texp_ident "lexbuf/2993"
                                ]
                            <arg>
                              Nolabel
                              expression (ast/import.ml[209,6794+23]..ast/import.ml[209,6794+61])
                                Texp_apply
                                expression (ast/import.ml[209,6794+23]..ast/import.ml[209,6794+31])
                                  Texp_ident "Stdlib!.List.map"
                                [
                                  <arg>
                                    Nolabel
                                    expression (ast/import.ml[209,6794+32]..ast/import.ml[209,6794+61])
                                      Texp_ident "Of_ocaml/2955.copy_toplevel_phrase"
                                ]
                          ]
                    ]
              ]
            structure_item (ast/import.ml[211,6857+2]..ast/import.ml[211,6857+68])
              Tstr_value Nonrec
              [
                <def>
                  pattern (ast/import.ml[211,6857+6]..ast/import.ml[211,6857+15])
                    Tpat_var "core_type/2994"
                  expression (ast/import.ml[211,6857+16]..ast/import.ml[211,6857+68]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (ast/import.ml[211,6857+16]..ast/import.ml[211,6857+22])
                          Tpat_var "lexbuf/2995"
                        expression (ast/import.ml[211,6857+25]..ast/import.ml[211,6857+68])
                          Texp_apply
                          expression (ast/import.ml[211,6857+42]..ast/import.ml[211,6857+44])
                            Texp_ident "Stdlib!.|>"
                          [
                            <arg>
                              Nolabel
                              expression (ast/import.ml[211,6857+25]..ast/import.ml[211,6857+41])
                                Texp_apply
                                expression (ast/import.ml[211,6857+25]..ast/import.ml[211,6857+34])
                                  Texp_ident "core_type/2913"
                                [
                                  <arg>
                                    Nolabel
                                    expression (ast/import.ml[211,6857+35]..ast/import.ml[211,6857+41])
                                      Texp_ident "lexbuf/2995"
                                ]
                            <arg>
                              Nolabel
                              expression (ast/import.ml[211,6857+45]..ast/import.ml[211,6857+68])
                                Texp_ident "Of_ocaml/2955.copy_core_type"
                          ]
                    ]
              ]
            structure_item (ast/import.ml[212,6926+2]..ast/import.ml[212,6926+71])
              Tstr_value Nonrec
              [
                <def>
                  pattern (ast/import.ml[212,6926+6]..ast/import.ml[212,6926+16])
                    Tpat_var "expression/2996"
                  expression (ast/import.ml[212,6926+17]..ast/import.ml[212,6926+71]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (ast/import.ml[212,6926+17]..ast/import.ml[212,6926+23])
                          Tpat_var "lexbuf/2997"
                        expression (ast/import.ml[212,6926+26]..ast/import.ml[212,6926+71])
                          Texp_apply
                          expression (ast/import.ml[212,6926+44]..ast/import.ml[212,6926+46])
                            Texp_ident "Stdlib!.|>"
                          [
                            <arg>
                              Nolabel
                              expression (ast/import.ml[212,6926+26]..ast/import.ml[212,6926+43])
                                Texp_apply
                                expression (ast/import.ml[212,6926+26]..ast/import.ml[212,6926+36])
                                  Texp_ident "expression/2914"
                                [
                                  <arg>
                                    Nolabel
                                    expression (ast/import.ml[212,6926+37]..ast/import.ml[212,6926+43])
                                      Texp_ident "lexbuf/2997"
                                ]
                            <arg>
                              Nolabel
                              expression (ast/import.ml[212,6926+47]..ast/import.ml[212,6926+71])
                                Texp_ident "Of_ocaml/2955.copy_expression"
                          ]
                    ]
              ]
            structure_item (ast/import.ml[213,6998+2]..ast/import.ml[213,6998+62])
              Tstr_value Nonrec
              [
                <def>
                  pattern (ast/import.ml[213,6998+6]..ast/import.ml[213,6998+13])
                    Tpat_var "pattern/2998"
                  expression (ast/import.ml[213,6998+14]..ast/import.ml[213,6998+62]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (ast/import.ml[213,6998+14]..ast/import.ml[213,6998+20])
                          Tpat_var "lexbuf/2999"
                        expression (ast/import.ml[213,6998+23]..ast/import.ml[213,6998+62])
                          Texp_apply
                          expression (ast/import.ml[213,6998+38]..ast/import.ml[213,6998+40])
                            Texp_ident "Stdlib!.|>"
                          [
                            <arg>
                              Nolabel
                              expression (ast/import.ml[213,6998+23]..ast/import.ml[213,6998+37])
                                Texp_apply
                                expression (ast/import.ml[213,6998+23]..ast/import.ml[213,6998+30])
                                  Texp_ident "pattern/2915"
                                [
                                  <arg>
                                    Nolabel
                                    expression (ast/import.ml[213,6998+31]..ast/import.ml[213,6998+37])
                                      Texp_ident "lexbuf/2999"
                                ]
                            <arg>
                              Nolabel
                              expression (ast/import.ml[213,6998+41]..ast/import.ml[213,6998+62])
                                Texp_ident "Of_ocaml/2955.copy_pattern"
                          ]
                    ]
              ]
          ]
]

(setglobal Ppxlib_ast__Import!
  (let
    (Select_ast/2425 =
       (module-defn(Select_ast/2425) Ppxlib_ast__Import ast/import.ml(12):299-6057
         (function Ocaml/11051 is_a_functor
           (let
             (Ocaml/1608 =a Ocaml/11051
              include/11041 =a
                (let
                  (let/11050 = (field_imm 13 (global Ppxlib_ast__Versions!)))
                  (field_imm 13 (global Ppxlib_ast__Versions!)))
              Ast/1793 =a (field_mut 0 include/11041)
              version/1794 =a (field_mut 1 include/11041)
              string_version/1795 =a (field_mut 2 include/11041)
              Version/1797 =a (field_mut 3 include/11041)
              migration_info/1798 =a (field_mut 4 include/11041)
              Type/1989 =
                (module-defn(Type/1989) Ppxlib_ast__Import.Select_ast ast/import.ml(15):375-3277
                  (pseudo Ppxlib_ast__Import.Select_ast.Type ast/import.ml(15):389-3277
                    (makeblock 0)))
              Of_ocaml/2073 =
                (module-defn(Of_ocaml/2073) Ppxlib_ast__Import.Select_ast ast/import.ml(108):3293-3340
                  (apply
                    (apply
                      (let
                        (let/11045 =
                           (field_imm 16 (global Ppxlib_ast__Versions!)))
                        (field_imm 16 (global Ppxlib_ast__Versions!)))
                      Ocaml/1608)
                    (let
                      (let/11042 =
                         (field_imm 13 (global Ppxlib_ast__Versions!))
                       let/11043 =a
                         (field_imm 13 (global Ppxlib_ast__Versions!)))
                      (makeblock 0
                        (let (let/11044 =a (field_mut 0 let/11043))
                          (makeblock 0 (field_mut 1 let/11044)
                            (field_mut 2 let/11044)))
                        (field_mut 1 let/11043) (field_mut 2 let/11043)
                        (field_mut 3 let/11043) (field_mut 4 let/11043)))))
              To_ocaml/2134 =
                (module-defn(To_ocaml/2134) Ppxlib_ast__Import.Select_ast ast/import.ml(109):3343-3390
                  (apply
                    (apply
                      (let
                        (let/11049 =
                           (field_imm 16 (global Ppxlib_ast__Versions!)))
                        (field_imm 16 (global Ppxlib_ast__Versions!)))
                      (let
                        (let/11046 =
                           (field_imm 13 (global Ppxlib_ast__Versions!))
                         let/11047 =a
                           (field_imm 13 (global Ppxlib_ast__Versions!)))
                        (makeblock 0
                          (let (let/11048 =a (field_mut 0 let/11047))
                            (makeblock 0 (field_mut 1 let/11048)
                              (field_mut 2 let/11048)))
                          (field_mut 1 let/11047) (field_mut 2 let/11047)
                          (field_mut 3 let/11047) (field_mut 4 let/11047))))
                    Ocaml/1608)))
             (letrec
               (of_ocaml/2135
                  (function node/2138
                    (funct-body Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(113):3493-4640
                      (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(114):3511-4640
                        (switch* node/2138
                         case int 0:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(121):3700-3714
                            (field_imm 0 Of_ocaml/2073))
                         case int 1:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(122):3736-3750
                            (field_imm 1 Of_ocaml/2073))
                         case int 2:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(123):3778-3798
                            (field_imm 2 Of_ocaml/2073))
                         case int 3:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(124):3820-3834
                            (field_imm 3 Of_ocaml/2073))
                         case int 4:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(125):3857-3872
                            (field_imm 4 Of_ocaml/2073))
                         case int 5:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(126):3892-3904
                            (field_imm 5 Of_ocaml/2073))
                         case int 6:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(127):3921-3930
                            (field_imm 6 Of_ocaml/2073))
                         case int 7:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(128):3959-3980
                            (field_imm 7 Of_ocaml/2073))
                         case int 8:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(129):4007-4026
                            (field_imm 8 Of_ocaml/2073))
                         case int 9:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(130):4060-4086
                            (field_imm 9 Of_ocaml/2073))
                         case int 10:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(131):4109-4124
                            (field_imm 10 Of_ocaml/2073))
                         case int 11:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(132):4148-4164
                            (field_imm 11 Of_ocaml/2073))
                         case int 12:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(133):4187-4202
                            (field_imm 12 Of_ocaml/2073))
                         case int 13:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(134):4230-4250
                            (field_imm 13 Of_ocaml/2073))
                         case int 14:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(135):4279-4300
                            (field_imm 14 Of_ocaml/2073))
                         case int 15:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(136):4324-4340
                            (field_imm 15 Of_ocaml/2073))
                         case int 16:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(137):4364-4380
                            (field_imm 16 Of_ocaml/2073))
                         case int 17:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(138):4407-4426
                            (field_imm 17 Of_ocaml/2073))
                         case int 18:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(139):4453-4472
                            (field_imm 18 Of_ocaml/2073))
                         case tag 0:
                          (let (t/2307 =a (field_imm 0 node/2138))
                            (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(141):4497-4518
                              (after Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(141):4497-4518
                                (apply (field_imm 18 (global Stdlib__list!))
                                  (after Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(141):4506-4518
                                    (apply of_ocaml/2135 t/2307))))))
                         case tag 1:
                          (let
                            (b/2313 =a (field_imm 1 node/2138)
                             a/2312 =a (field_imm 0 node/2138))
                            (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(143):4552-4640
                              (let
                                (f/2378 =
                                   (after Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(143):4560-4570
                                     (apply of_ocaml/2135 a/2312)))
                                (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(144):4584-4640
                                  (let
                                    (g/2379 =
                                       (after Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(144):4592-4602
                                         (apply of_ocaml/2135 b/2313)))
                                    (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(145):4616-4640
                                      (function param/2382
                                        (funct-body Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(145):4616-4640
                                          (let
                                            (y/2381 =a
                                               (field_imm 1 param/2382)
                                             x/2380 =a
                                               (field_imm 0 param/2382))
                                            (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(145):4630-4640
                                              (makeblock 0
                                                (after Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(145):4631-4634
                                                  (apply f/2378 x/2380))
                                                (after Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(145):4636-4639
                                                  (apply g/2379 y/2381))))))))))))))))))
               (letrec
                 (to_ocaml/2389
                    (function node/2392
                      (funct-body Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(149):4743-5890
                        (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(150):4761-5890
                          (switch* node/2392
                           case int 0:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(157):4950-4964
                              (field_imm 0 To_ocaml/2134))
                           case int 1:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(158):4986-5000
                              (field_imm 1 To_ocaml/2134))
                           case int 2:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(159):5028-5048
                              (field_imm 2 To_ocaml/2134))
                           case int 3:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(160):5070-5084
                              (field_imm 3 To_ocaml/2134))
                           case int 4:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(161):5107-5122
                              (field_imm 4 To_ocaml/2134))
                           case int 5:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(162):5142-5154
                              (field_imm 5 To_ocaml/2134))
                           case int 6:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(163):5171-5180
                              (field_imm 6 To_ocaml/2134))
                           case int 7:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(164):5209-5230
                              (field_imm 7 To_ocaml/2134))
                           case int 8:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(165):5257-5276
                              (field_imm 8 To_ocaml/2134))
                           case int 9:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(166):5310-5336
                              (field_imm 9 To_ocaml/2134))
                           case int 10:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(167):5359-5374
                              (field_imm 10 To_ocaml/2134))
                           case int 11:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(168):5398-5414
                              (field_imm 11 To_ocaml/2134))
                           case int 12:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(169):5437-5452
                              (field_imm 12 To_ocaml/2134))
                           case int 13:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(170):5480-5500
                              (field_imm 13 To_ocaml/2134))
                           case int 14:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(171):5529-5550
                              (field_imm 14 To_ocaml/2134))
                           case int 15:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(172):5574-5590
                              (field_imm 15 To_ocaml/2134))
                           case int 16:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(173):5614-5630
                              (field_imm 16 To_ocaml/2134))
                           case int 17:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(174):5657-5676
                              (field_imm 17 To_ocaml/2134))
                           case int 18:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(175):5703-5722
                              (field_imm 18 To_ocaml/2134))
                           case tag 0:
                            (let (t/2395 =a (field_imm 0 node/2392))
                              (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(177):5747-5768
                                (after Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(177):5747-5768
                                  (apply
                                    (field_imm 18 (global Stdlib__list!))
                                    (after Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(177):5756-5768
                                      (apply to_ocaml/2389 t/2395))))))
                           case tag 1:
                            (let
                              (b/2401 =a (field_imm 1 node/2392)
                               a/2400 =a (field_imm 0 node/2392))
                              (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(179):5802-5890
                                (let
                                  (f/2402 =
                                     (after Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(179):5810-5820
                                       (apply to_ocaml/2389 a/2400)))
                                  (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(180):5834-5890
                                    (let
                                      (g/2403 =
                                         (after Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(180):5842-5852
                                           (apply to_ocaml/2389 b/2401)))
                                      (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(181):5866-5890
                                        (function param/2406
                                          (funct-body Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(181):5866-5890
                                            (let
                                              (y/2405 =a
                                                 (field_imm 1 param/2406)
                                               x/2404 =a
                                                 (field_imm 0 param/2406))
                                              (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(181):5880-5890
                                                (makeblock 0
                                                  (after Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(181):5881-5884
                                                    (apply f/2402 x/2404))
                                                  (after Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(181):5886-5889
                                                    (apply g/2403 y/2405))))))))))))))))))
                 (let
                   (of_ocaml_mapper/2413 =
                      (function item/2415 f/2416 ctxt/2417 x/2418
                        (funct-body Ppxlib_ast__Import.Select_ast.of_ocaml_mapper ast/import.ml(183)<ghost>:5914-5972
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml_mapper ast/import.ml(183):5930-5972
                            (after Ppxlib_ast__Import.Select_ast.of_ocaml_mapper ast/import.ml(183):5930-5972
                              (revapply
                                (after Ppxlib_ast__Import.Select_ast.of_ocaml_mapper ast/import.ml(183):5930-5955
                                  (revapply
                                    (after Ppxlib_ast__Import.Select_ast.of_ocaml_mapper ast/import.ml(183):5930-5945
                                      (apply to_ocaml/2389 item/2415 x/2418))
                                    (after Ppxlib_ast__Import.Select_ast.of_ocaml_mapper ast/import.ml(183):5949-5955
                                      (apply f/2416 ctxt/2417))))
                                (after Ppxlib_ast__Import.Select_ast.of_ocaml_mapper ast/import.ml(183):5959-5972
                                  (apply of_ocaml/2135 item/2415)))))))
                    to_ocaml_mapper/2419 =
                      (function item/2421 f/2422 ctxt/2423 x/2424
                        (funct-body Ppxlib_ast__Import.Select_ast.to_ocaml_mapper ast/import.ml(184)<ghost>:5995-6053
                          (before Ppxlib_ast__Import.Select_ast.to_ocaml_mapper ast/import.ml(184):6011-6053
                            (after Ppxlib_ast__Import.Select_ast.to_ocaml_mapper ast/import.ml(184):6011-6053
                              (revapply
                                (after Ppxlib_ast__Import.Select_ast.to_ocaml_mapper ast/import.ml(184):6011-6036
                                  (revapply
                                    (after Ppxlib_ast__Import.Select_ast.to_ocaml_mapper ast/import.ml(184):6011-6026
                                      (apply of_ocaml/2135 item/2421 x/2424))
                                    (after Ppxlib_ast__Import.Select_ast.to_ocaml_mapper ast/import.ml(184):6030-6036
                                      (apply f/2422 ctxt/2423))))
                                (after Ppxlib_ast__Import.Select_ast.to_ocaml_mapper ast/import.ml(184):6040-6053
                                  (apply to_ocaml/2389 item/2421))))))))
                   (pseudo Ppxlib_ast__Import.Select_ast ast/import.ml(12):352-6057
                     (makeblock 0 Ast/1793 version/1794 string_version/1795
                       Version/1797 migration_info/1798 Type/1989
                       Of_ocaml/2073 To_ocaml/2134 of_ocaml/2135
                       to_ocaml/2389 of_ocaml_mapper/2413
                       to_ocaml_mapper/2419))))))))
     Selected_ast/2744 =
       (module-defn(Selected_ast/2744) Ppxlib_ast__Import ast/import.ml(187):6059-6099
         (apply Select_ast/2425
           (let
             (let/11052 = (field_imm 10 (global Ppxlib_ast__Versions!))
              let/11053 =a (field_imm 10 (global Ppxlib_ast__Versions!)))
             (makeblock 0
               (let (let/11054 =a (field_mut 0 let/11053))
                 (makeblock 0 (field_mut 1 let/11054)
                   (field_mut 2 let/11054)))
               (field_mut 1 let/11053) (field_mut 2 let/11053)
               (field_mut 3 let/11053) (field_mut 4 let/11053)))))
     Parse/3000 =
       (module-defn(Parse/3000) Ppxlib_ast__Import ast/import.ml(198):6433-7064
         (let
           (include/11055 =a
              (let (let/11063 = (global Astlib__Parse!))
                (global Astlib__Parse!))
            implementation/2909 =a (field_mut 0 include/11055)
            interface/2910 =a (field_mut 1 include/11055)
            toplevel_phrase/2911 =a (field_mut 2 include/11055)
            use_file/2912 =a (field_mut 3 include/11055)
            core_type/2913 =a (field_mut 4 include/11055)
            expression/2914 =a (field_mut 5 include/11055)
            pattern/2915 =a (field_mut 6 include/11055)
            Of_ocaml/2955 =
              (module-defn(Of_ocaml/2955) Ppxlib_ast__Import.Parse ast/import.ml(200):6480-6527
                (apply
                  (apply
                    (let
                      (let/11062 =
                         (field_imm 16 (global Ppxlib_ast__Versions!)))
                      (field_imm 16 (global Ppxlib_ast__Versions!)))
                    (let
                      (let/11059 =
                         (field_imm 10 (global Ppxlib_ast__Versions!))
                       let/11060 =a
                         (field_imm 10 (global Ppxlib_ast__Versions!)))
                      (makeblock 0
                        (let (let/11061 =a (field_mut 0 let/11060))
                          (makeblock 0 (field_mut 1 let/11061)
                            (field_mut 2 let/11061)))
                        (field_mut 1 let/11060) (field_mut 2 let/11060)
                        (field_mut 3 let/11060) (field_mut 4 let/11060))))
                  (let
                    (let/11056 =
                       (field_imm 13 (global Ppxlib_ast__Versions!))
                     let/11057 =a
                       (field_imm 13 (global Ppxlib_ast__Versions!)))
                    (makeblock 0
                      (let (let/11058 =a (field_mut 0 let/11057))
                        (makeblock 0 (field_mut 1 let/11058)
                          (field_mut 2 let/11058)))
                      (field_mut 1 let/11057) (field_mut 2 let/11057)
                      (field_mut 3 let/11057) (field_mut 4 let/11057)))))
            implementation/2956 =
              (function lexbuf/2957
                (funct-body Ppxlib_ast__Import.Parse.implementation ast/import.ml(202)<ghost>:6550-6607
                  (before Ppxlib_ast__Import.Parse.implementation ast/import.ml(202):6559-6607
                    (after Ppxlib_ast__Import.Parse.implementation ast/import.ml(202):6559-6607
                      (revapply
                        (after Ppxlib_ast__Import.Parse.implementation ast/import.ml(202):6559-6580
                          (apply implementation/2909 lexbuf/2957))
                        (field_imm 0 Of_ocaml/2955))))))
            interface/2988 =
              (function lexbuf/2989
                (funct-body Ppxlib_ast__Import.Parse.interface ast/import.ml(203)<ghost>:6624-6676
                  (before Ppxlib_ast__Import.Parse.interface ast/import.ml(203):6633-6676
                    (after Ppxlib_ast__Import.Parse.interface ast/import.ml(203):6633-6676
                      (revapply
                        (after Ppxlib_ast__Import.Parse.interface ast/import.ml(203):6633-6649
                          (apply interface/2910 lexbuf/2989))
                        (field_imm 1 Of_ocaml/2955))))))
            toplevel_phrase/2990 =
              (function lexbuf/2991
                (funct-body Ppxlib_ast__Import.Parse.toplevel_phrase ast/import.ml(205)<ghost>:6700-6768
                  (before Ppxlib_ast__Import.Parse.toplevel_phrase ast/import.ml(206):6713-6768
                    (after Ppxlib_ast__Import.Parse.toplevel_phrase ast/import.ml(206):6713-6768
                      (revapply
                        (after Ppxlib_ast__Import.Parse.toplevel_phrase ast/import.ml(206):6713-6735
                          (apply toplevel_phrase/2911 lexbuf/2991))
                        (field_imm 2 Of_ocaml/2955))))))
            use_file/2992 =
              (function lexbuf/2993
                (funct-body Ppxlib_ast__Import.Parse.use_file ast/import.ml(208)<ghost>:6785-6855
                  (before Ppxlib_ast__Import.Parse.use_file ast/import.ml(209):6798-6855
                    (after Ppxlib_ast__Import.Parse.use_file ast/import.ml(209):6798-6855
                      (revapply
                        (after Ppxlib_ast__Import.Parse.use_file ast/import.ml(209):6798-6813
                          (apply use_file/2912 lexbuf/2993))
                        (after Ppxlib_ast__Import.Parse.use_file ast/import.ml(209):6817-6855
                          (apply (field_imm 18 (global Stdlib__list!))
                            (field_imm 2 Of_ocaml/2955))))))))
            core_type/2994 =
              (function lexbuf/2995
                (funct-body Ppxlib_ast__Import.Parse.core_type ast/import.ml(211)<ghost>:6873-6925
                  (before Ppxlib_ast__Import.Parse.core_type ast/import.ml(211):6882-6925
                    (after Ppxlib_ast__Import.Parse.core_type ast/import.ml(211):6882-6925
                      (revapply
                        (after Ppxlib_ast__Import.Parse.core_type ast/import.ml(211):6882-6898
                          (apply core_type/2913 lexbuf/2995))
                        (field_imm 3 Of_ocaml/2955))))))
            expression/2996 =
              (function lexbuf/2997
                (funct-body Ppxlib_ast__Import.Parse.expression ast/import.ml(212)<ghost>:6943-6997
                  (before Ppxlib_ast__Import.Parse.expression ast/import.ml(212):6952-6997
                    (after Ppxlib_ast__Import.Parse.expression ast/import.ml(212):6952-6997
                      (revapply
                        (after Ppxlib_ast__Import.Parse.expression ast/import.ml(212):6952-6969
                          (apply expression/2914 lexbuf/2997))
                        (field_imm 4 Of_ocaml/2955))))))
            pattern/2998 =
              (function lexbuf/2999
                (funct-body Ppxlib_ast__Import.Parse.pattern ast/import.ml(213)<ghost>:7012-7060
                  (before Ppxlib_ast__Import.Parse.pattern ast/import.ml(213):7021-7060
                    (after Ppxlib_ast__Import.Parse.pattern ast/import.ml(213):7021-7060
                      (revapply
                        (after Ppxlib_ast__Import.Parse.pattern ast/import.ml(213):7021-7035
                          (apply pattern/2915 lexbuf/2999))
                        (field_imm 5 Of_ocaml/2955)))))))
           (pseudo Ppxlib_ast__Import.Parse ast/import.ml(198):6448-7064
             (makeblock 0 Of_ocaml/2955 implementation/2956 interface/2988
               toplevel_phrase/2990 use_file/2992 core_type/2994
               expression/2996 pattern/2998)))))
    (pseudo <unknown location>
      (makeblock 0 Select_ast/2425 Selected_ast/2744 Parse/3000))))
(setglobal Ppxlib_ast__Import!
  (let
    (Select_ast/2425 =
       (module-defn(Select_ast/2425) Ppxlib_ast__Import ast/import.ml(12):299-6057
         (function Ocaml/11051 is_a_functor
           (let
             (Ocaml/1608 =a Ocaml/11051
              include/11041 =a
                (let
                  (let/11050 = (field_imm 13 (global Ppxlib_ast__Versions!)))
                  (field_imm 13 (global Ppxlib_ast__Versions!)))
              Ast/1793 =a (field_mut 0 include/11041)
              version/1794 =a (field_mut 1 include/11041)
              string_version/1795 =a (field_mut 2 include/11041)
              Version/1797 =a (field_mut 3 include/11041)
              migration_info/1798 =a (field_mut 4 include/11041)
              Type/1989 =
                (module-defn(Type/1989) Ppxlib_ast__Import.Select_ast ast/import.ml(15):375-3277
                  (pseudo Ppxlib_ast__Import.Select_ast.Type ast/import.ml(15):389-3277
                    (makeblock 0)))
              Of_ocaml/2073 =
                (module-defn(Of_ocaml/2073) Ppxlib_ast__Import.Select_ast ast/import.ml(108):3293-3340
                  (apply
                    (apply
                      (let
                        (let/11045 =
                           (field_imm 16 (global Ppxlib_ast__Versions!)))
                        (field_imm 16 (global Ppxlib_ast__Versions!)))
                      Ocaml/1608)
                    (let
                      (let/11042 =
                         (field_imm 13 (global Ppxlib_ast__Versions!))
                       let/11043 =a
                         (field_imm 13 (global Ppxlib_ast__Versions!)))
                      (makeblock 0
                        (let (let/11044 =a (field_mut 0 let/11043))
                          (makeblock 0 (field_mut 1 let/11044)
                            (field_mut 2 let/11044)))
                        (field_mut 1 let/11043) (field_mut 2 let/11043)
                        (field_mut 3 let/11043) (field_mut 4 let/11043)))))
              To_ocaml/2134 =
                (module-defn(To_ocaml/2134) Ppxlib_ast__Import.Select_ast ast/import.ml(109):3343-3390
                  (apply
                    (apply
                      (let
                        (let/11049 =
                           (field_imm 16 (global Ppxlib_ast__Versions!)))
                        (field_imm 16 (global Ppxlib_ast__Versions!)))
                      (let
                        (let/11046 =
                           (field_imm 13 (global Ppxlib_ast__Versions!))
                         let/11047 =a
                           (field_imm 13 (global Ppxlib_ast__Versions!)))
                        (makeblock 0
                          (let (let/11048 =a (field_mut 0 let/11047))
                            (makeblock 0 (field_mut 1 let/11048)
                              (field_mut 2 let/11048)))
                          (field_mut 1 let/11047) (field_mut 2 let/11047)
                          (field_mut 3 let/11047) (field_mut 4 let/11047))))
                    Ocaml/1608)))
             (letrec
               (of_ocaml/2135
                  (function node/2138
                    (funct-body Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(113):3493-4640
                      (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(114):3511-4640
                        (switch* node/2138
                         case int 0:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(121):3700-3714
                            (field_imm 0 Of_ocaml/2073))
                         case int 1:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(122):3736-3750
                            (field_imm 1 Of_ocaml/2073))
                         case int 2:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(123):3778-3798
                            (field_imm 2 Of_ocaml/2073))
                         case int 3:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(124):3820-3834
                            (field_imm 3 Of_ocaml/2073))
                         case int 4:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(125):3857-3872
                            (field_imm 4 Of_ocaml/2073))
                         case int 5:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(126):3892-3904
                            (field_imm 5 Of_ocaml/2073))
                         case int 6:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(127):3921-3930
                            (field_imm 6 Of_ocaml/2073))
                         case int 7:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(128):3959-3980
                            (field_imm 7 Of_ocaml/2073))
                         case int 8:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(129):4007-4026
                            (field_imm 8 Of_ocaml/2073))
                         case int 9:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(130):4060-4086
                            (field_imm 9 Of_ocaml/2073))
                         case int 10:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(131):4109-4124
                            (field_imm 10 Of_ocaml/2073))
                         case int 11:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(132):4148-4164
                            (field_imm 11 Of_ocaml/2073))
                         case int 12:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(133):4187-4202
                            (field_imm 12 Of_ocaml/2073))
                         case int 13:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(134):4230-4250
                            (field_imm 13 Of_ocaml/2073))
                         case int 14:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(135):4279-4300
                            (field_imm 14 Of_ocaml/2073))
                         case int 15:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(136):4324-4340
                            (field_imm 15 Of_ocaml/2073))
                         case int 16:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(137):4364-4380
                            (field_imm 16 Of_ocaml/2073))
                         case int 17:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(138):4407-4426
                            (field_imm 17 Of_ocaml/2073))
                         case int 18:
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(139):4453-4472
                            (field_imm 18 Of_ocaml/2073))
                         case tag 0:
                          (let (t/2307 =a (field_imm 0 node/2138))
                            (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(141):4497-4518
                              (after Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(141):4497-4518
                                (apply (field_imm 18 (global Stdlib__list!))
                                  (after Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(141):4506-4518
                                    (apply of_ocaml/2135 t/2307))))))
                         case tag 1:
                          (let
                            (b/2313 =a (field_imm 1 node/2138)
                             a/2312 =a (field_imm 0 node/2138))
                            (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(143):4552-4640
                              (let
                                (f/2378 =
                                   (after Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(143):4560-4570
                                     (apply of_ocaml/2135 a/2312)))
                                (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(144):4584-4640
                                  (let
                                    (g/2379 =
                                       (after Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(144):4592-4602
                                         (apply of_ocaml/2135 b/2313)))
                                    (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(145):4616-4640
                                      (function param/2382
                                        (funct-body Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(145):4616-4640
                                          (let
                                            (y/2381 =a
                                               (field_imm 1 param/2382)
                                             x/2380 =a
                                               (field_imm 0 param/2382))
                                            (before Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(145):4630-4640
                                              (makeblock 0
                                                (after Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(145):4631-4634
                                                  (apply f/2378 x/2380))
                                                (after Ppxlib_ast__Import.Select_ast.of_ocaml.(fun) ast/import.ml(145):4636-4639
                                                  (apply g/2379 y/2381))))))))))))))))))
               (letrec
                 (to_ocaml/2389
                    (function node/2392
                      (funct-body Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(149):4743-5890
                        (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(150):4761-5890
                          (switch* node/2392
                           case int 0:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(157):4950-4964
                              (field_imm 0 To_ocaml/2134))
                           case int 1:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(158):4986-5000
                              (field_imm 1 To_ocaml/2134))
                           case int 2:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(159):5028-5048
                              (field_imm 2 To_ocaml/2134))
                           case int 3:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(160):5070-5084
                              (field_imm 3 To_ocaml/2134))
                           case int 4:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(161):5107-5122
                              (field_imm 4 To_ocaml/2134))
                           case int 5:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(162):5142-5154
                              (field_imm 5 To_ocaml/2134))
                           case int 6:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(163):5171-5180
                              (field_imm 6 To_ocaml/2134))
                           case int 7:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(164):5209-5230
                              (field_imm 7 To_ocaml/2134))
                           case int 8:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(165):5257-5276
                              (field_imm 8 To_ocaml/2134))
                           case int 9:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(166):5310-5336
                              (field_imm 9 To_ocaml/2134))
                           case int 10:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(167):5359-5374
                              (field_imm 10 To_ocaml/2134))
                           case int 11:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(168):5398-5414
                              (field_imm 11 To_ocaml/2134))
                           case int 12:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(169):5437-5452
                              (field_imm 12 To_ocaml/2134))
                           case int 13:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(170):5480-5500
                              (field_imm 13 To_ocaml/2134))
                           case int 14:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(171):5529-5550
                              (field_imm 14 To_ocaml/2134))
                           case int 15:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(172):5574-5590
                              (field_imm 15 To_ocaml/2134))
                           case int 16:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(173):5614-5630
                              (field_imm 16 To_ocaml/2134))
                           case int 17:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(174):5657-5676
                              (field_imm 17 To_ocaml/2134))
                           case int 18:
                            (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(175):5703-5722
                              (field_imm 18 To_ocaml/2134))
                           case tag 0:
                            (let (t/2395 =a (field_imm 0 node/2392))
                              (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(177):5747-5768
                                (after Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(177):5747-5768
                                  (apply
                                    (field_imm 18 (global Stdlib__list!))
                                    (after Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(177):5756-5768
                                      (apply to_ocaml/2389 t/2395))))))
                           case tag 1:
                            (let
                              (b/2401 =a (field_imm 1 node/2392)
                               a/2400 =a (field_imm 0 node/2392))
                              (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(179):5802-5890
                                (let
                                  (f/2402 =
                                     (after Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(179):5810-5820
                                       (apply to_ocaml/2389 a/2400)))
                                  (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(180):5834-5890
                                    (let
                                      (g/2403 =
                                         (after Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(180):5842-5852
                                           (apply to_ocaml/2389 b/2401)))
                                      (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(181):5866-5890
                                        (function param/2406
                                          (funct-body Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(181):5866-5890
                                            (let
                                              (y/2405 =a
                                                 (field_imm 1 param/2406)
                                               x/2404 =a
                                                 (field_imm 0 param/2406))
                                              (before Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(181):5880-5890
                                                (makeblock 0
                                                  (after Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(181):5881-5884
                                                    (apply f/2402 x/2404))
                                                  (after Ppxlib_ast__Import.Select_ast.to_ocaml.(fun) ast/import.ml(181):5886-5889
                                                    (apply g/2403 y/2405))))))))))))))))))
                 (let
                   (of_ocaml_mapper/2413 =
                      (function item/2415 f/2416 ctxt/2417 x/2418
                        (funct-body Ppxlib_ast__Import.Select_ast.of_ocaml_mapper ast/import.ml(183)<ghost>:5914-5972
                          (before Ppxlib_ast__Import.Select_ast.of_ocaml_mapper ast/import.ml(183):5930-5972
                            (after Ppxlib_ast__Import.Select_ast.of_ocaml_mapper ast/import.ml(183):5930-5972
                              (apply of_ocaml/2135 item/2415
                                (after Ppxlib_ast__Import.Select_ast.of_ocaml_mapper ast/import.ml(183):5930-5955
                                  (apply f/2416 ctxt/2417
                                    (after Ppxlib_ast__Import.Select_ast.of_ocaml_mapper ast/import.ml(183):5930-5945
                                      (apply to_ocaml/2389 item/2415 x/2418)))))))))
                    to_ocaml_mapper/2419 =
                      (function item/2421 f/2422 ctxt/2423 x/2424
                        (funct-body Ppxlib_ast__Import.Select_ast.to_ocaml_mapper ast/import.ml(184)<ghost>:5995-6053
                          (before Ppxlib_ast__Import.Select_ast.to_ocaml_mapper ast/import.ml(184):6011-6053
                            (after Ppxlib_ast__Import.Select_ast.to_ocaml_mapper ast/import.ml(184):6011-6053
                              (apply to_ocaml/2389 item/2421
                                (after Ppxlib_ast__Import.Select_ast.to_ocaml_mapper ast/import.ml(184):6011-6036
                                  (apply f/2422 ctxt/2423
                                    (after Ppxlib_ast__Import.Select_ast.to_ocaml_mapper ast/import.ml(184):6011-6026
                                      (apply of_ocaml/2135 item/2421 x/2424))))))))))
                   (pseudo Ppxlib_ast__Import.Select_ast ast/import.ml(12):352-6057
                     (makeblock 0 Ast/1793 version/1794 string_version/1795
                       Version/1797 migration_info/1798 Type/1989
                       Of_ocaml/2073 To_ocaml/2134 of_ocaml/2135
                       to_ocaml/2389 of_ocaml_mapper/2413
                       to_ocaml_mapper/2419))))))))
     Selected_ast/2744 =
       (module-defn(Selected_ast/2744) Ppxlib_ast__Import ast/import.ml(187):6059-6099
         (apply Select_ast/2425
           (let
             (let/11052 = (field_imm 10 (global Ppxlib_ast__Versions!))
              let/11053 =a (field_imm 10 (global Ppxlib_ast__Versions!)))
             (makeblock 0
               (let (let/11054 =a (field_mut 0 let/11053))
                 (makeblock 0 (field_mut 1 let/11054)
                   (field_mut 2 let/11054)))
               (field_mut 1 let/11053) (field_mut 2 let/11053)
               (field_mut 3 let/11053) (field_mut 4 let/11053)))))
     Parse/3000 =
       (module-defn(Parse/3000) Ppxlib_ast__Import ast/import.ml(198):6433-7064
         (let
           (include/11055 =a
              (let (let/11063 = (global Astlib__Parse!))
                (global Astlib__Parse!))
            implementation/2909 =a (field_mut 0 include/11055)
            interface/2910 =a (field_mut 1 include/11055)
            toplevel_phrase/2911 =a (field_mut 2 include/11055)
            use_file/2912 =a (field_mut 3 include/11055)
            core_type/2913 =a (field_mut 4 include/11055)
            expression/2914 =a (field_mut 5 include/11055)
            pattern/2915 =a (field_mut 6 include/11055)
            Of_ocaml/2955 =
              (module-defn(Of_ocaml/2955) Ppxlib_ast__Import.Parse ast/import.ml(200):6480-6527
                (apply
                  (apply
                    (let
                      (let/11062 =
                         (field_imm 16 (global Ppxlib_ast__Versions!)))
                      (field_imm 16 (global Ppxlib_ast__Versions!)))
                    (let
                      (let/11059 =
                         (field_imm 10 (global Ppxlib_ast__Versions!))
                       let/11060 =a
                         (field_imm 10 (global Ppxlib_ast__Versions!)))
                      (makeblock 0
                        (let (let/11061 =a (field_mut 0 let/11060))
                          (makeblock 0 (field_mut 1 let/11061)
                            (field_mut 2 let/11061)))
                        (field_mut 1 let/11060) (field_mut 2 let/11060)
                        (field_mut 3 let/11060) (field_mut 4 let/11060))))
                  (let
                    (let/11056 =
                       (field_imm 13 (global Ppxlib_ast__Versions!))
                     let/11057 =a
                       (field_imm 13 (global Ppxlib_ast__Versions!)))
                    (makeblock 0
                      (let (let/11058 =a (field_mut 0 let/11057))
                        (makeblock 0 (field_mut 1 let/11058)
                          (field_mut 2 let/11058)))
                      (field_mut 1 let/11057) (field_mut 2 let/11057)
                      (field_mut 3 let/11057) (field_mut 4 let/11057)))))
            implementation/2956 =
              (function lexbuf/2957
                (funct-body Ppxlib_ast__Import.Parse.implementation ast/import.ml(202)<ghost>:6550-6607
                  (before Ppxlib_ast__Import.Parse.implementation ast/import.ml(202):6559-6607
                    (after Ppxlib_ast__Import.Parse.implementation ast/import.ml(202):6559-6607
                      (apply (field_imm 0 Of_ocaml/2955)
                        (after Ppxlib_ast__Import.Parse.implementation ast/import.ml(202):6559-6580
                          (apply implementation/2909 lexbuf/2957)))))))
            interface/2988 =
              (function lexbuf/2989
                (funct-body Ppxlib_ast__Import.Parse.interface ast/import.ml(203)<ghost>:6624-6676
                  (before Ppxlib_ast__Import.Parse.interface ast/import.ml(203):6633-6676
                    (after Ppxlib_ast__Import.Parse.interface ast/import.ml(203):6633-6676
                      (apply (field_imm 1 Of_ocaml/2955)
                        (after Ppxlib_ast__Import.Parse.interface ast/import.ml(203):6633-6649
                          (apply interface/2910 lexbuf/2989)))))))
            toplevel_phrase/2990 =
              (function lexbuf/2991
                (funct-body Ppxlib_ast__Import.Parse.toplevel_phrase ast/import.ml(205)<ghost>:6700-6768
                  (before Ppxlib_ast__Import.Parse.toplevel_phrase ast/import.ml(206):6713-6768
                    (after Ppxlib_ast__Import.Parse.toplevel_phrase ast/import.ml(206):6713-6768
                      (apply (field_imm 2 Of_ocaml/2955)
                        (after Ppxlib_ast__Import.Parse.toplevel_phrase ast/import.ml(206):6713-6735
                          (apply toplevel_phrase/2911 lexbuf/2991)))))))
            use_file/2992 =
              (function lexbuf/2993
                (funct-body Ppxlib_ast__Import.Parse.use_file ast/import.ml(208)<ghost>:6785-6855
                  (before Ppxlib_ast__Import.Parse.use_file ast/import.ml(209):6798-6855
                    (after Ppxlib_ast__Import.Parse.use_file ast/import.ml(209):6798-6855
                      (apply (field_imm 18 (global Stdlib__list!))
                        (field_imm 2 Of_ocaml/2955)
                        (after Ppxlib_ast__Import.Parse.use_file ast/import.ml(209):6798-6813
                          (apply use_file/2912 lexbuf/2993)))))))
            core_type/2994 =
              (function lexbuf/2995
                (funct-body Ppxlib_ast__Import.Parse.core_type ast/import.ml(211)<ghost>:6873-6925
                  (before Ppxlib_ast__Import.Parse.core_type ast/import.ml(211):6882-6925
                    (after Ppxlib_ast__Import.Parse.core_type ast/import.ml(211):6882-6925
                      (apply (field_imm 3 Of_ocaml/2955)
                        (after Ppxlib_ast__Import.Parse.core_type ast/import.ml(211):6882-6898
                          (apply core_type/2913 lexbuf/2995)))))))
            expression/2996 =
              (function lexbuf/2997
                (funct-body Ppxlib_ast__Import.Parse.expression ast/import.ml(212)<ghost>:6943-6997
                  (before Ppxlib_ast__Import.Parse.expression ast/import.ml(212):6952-6997
                    (after Ppxlib_ast__Import.Parse.expression ast/import.ml(212):6952-6997
                      (apply (field_imm 4 Of_ocaml/2955)
                        (after Ppxlib_ast__Import.Parse.expression ast/import.ml(212):6952-6969
                          (apply expression/2914 lexbuf/2997)))))))
            pattern/2998 =
              (function lexbuf/2999
                (funct-body Ppxlib_ast__Import.Parse.pattern ast/import.ml(213)<ghost>:7012-7060
                  (before Ppxlib_ast__Import.Parse.pattern ast/import.ml(213):7021-7060
                    (after Ppxlib_ast__Import.Parse.pattern ast/import.ml(213):7021-7060
                      (apply (field_imm 5 Of_ocaml/2955)
                        (after Ppxlib_ast__Import.Parse.pattern ast/import.ml(213):7021-7035
                          (apply pattern/2915 lexbuf/2999))))))))
           (pseudo Ppxlib_ast__Import.Parse ast/import.ml(198):6448-7064
             (makeblock 0 Of_ocaml/2955 implementation/2956 interface/2988
               toplevel_phrase/2990 use_file/2992 core_type/2994
               expression/2996 pattern/2998)))))
    (pseudo <unknown location>
      (makeblock 0 Select_ast/2425 Selected_ast/2744 Parse/3000))))
