[
  structure_item (ast/supported_version/supported_version.ml[1,0+0]..[1,0+18])
    Pstr_type Rec
    [
      type_declaration "t" (ast/supported_version/supported_version.ml[1,0+5]..[1,0+6]) (ast/supported_version/supported_version.ml[1,0+0]..[1,0+18])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (ast/supported_version/supported_version.ml[1,0+9]..[1,0+18])
              Ptyp_tuple
              [
                core_type (ast/supported_version/supported_version.ml[1,0+9]..[1,0+12])
                  Ptyp_constr "int" (ast/supported_version/supported_version.ml[1,0+9]..[1,0+12])
                  []
                core_type (ast/supported_version/supported_version.ml[1,0+15]..[1,0+18])
                  Ptyp_constr "int" (ast/supported_version/supported_version.ml[1,0+15]..[1,0+18])
                  []
              ]
    ]
  structure_item (ast/supported_version/supported_version.ml[3,20+0]..[20,227+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (ast/supported_version/supported_version.ml[3,20+4]..[3,20+7])
          Ppat_var "all" (ast/supported_version/supported_version.ml[3,20+4]..[3,20+7])
        expression (ast/supported_version/supported_version.ml[4,30+2]..[20,227+3])
          Pexp_construct "::" (ast/supported_version/supported_version.ml[5,34+4]..[20,227+3]) ghost
          Some
            expression (ast/supported_version/supported_version.ml[5,34+4]..[20,227+3]) ghost
              Pexp_tuple
              [
                expression (ast/supported_version/supported_version.ml[5,34+4]..[5,34+11])
                  Pexp_tuple
                  [
                    expression (ast/supported_version/supported_version.ml[5,34+5]..[5,34+6])
                      Pexp_constant PConst_int (4,None)
                    expression (ast/supported_version/supported_version.ml[5,34+8]..[5,34+10])
                      Pexp_constant PConst_int (02,None)
                  ]
                expression (ast/supported_version/supported_version.ml[6,47+4]..[20,227+3]) ghost
                  Pexp_construct "::" (ast/supported_version/supported_version.ml[6,47+4]..[20,227+3]) ghost
                  Some
                    expression (ast/supported_version/supported_version.ml[6,47+4]..[20,227+3]) ghost
                      Pexp_tuple
                      [
                        expression (ast/supported_version/supported_version.ml[6,47+4]..[6,47+11])
                          Pexp_tuple
                          [
                            expression (ast/supported_version/supported_version.ml[6,47+5]..[6,47+6])
                              Pexp_constant PConst_int (4,None)
                            expression (ast/supported_version/supported_version.ml[6,47+8]..[6,47+10])
                              Pexp_constant PConst_int (03,None)
                          ]
                        expression (ast/supported_version/supported_version.ml[7,60+4]..[20,227+3]) ghost
                          Pexp_construct "::" (ast/supported_version/supported_version.ml[7,60+4]..[20,227+3]) ghost
                          Some
                            expression (ast/supported_version/supported_version.ml[7,60+4]..[20,227+3]) ghost
                              Pexp_tuple
                              [
                                expression (ast/supported_version/supported_version.ml[7,60+4]..[7,60+11])
                                  Pexp_tuple
                                  [
                                    expression (ast/supported_version/supported_version.ml[7,60+5]..[7,60+6])
                                      Pexp_constant PConst_int (4,None)
                                    expression (ast/supported_version/supported_version.ml[7,60+8]..[7,60+10])
                                      Pexp_constant PConst_int (04,None)
                                  ]
                                expression (ast/supported_version/supported_version.ml[8,73+4]..[20,227+3]) ghost
                                  Pexp_construct "::" (ast/supported_version/supported_version.ml[8,73+4]..[20,227+3]) ghost
                                  Some
                                    expression (ast/supported_version/supported_version.ml[8,73+4]..[20,227+3]) ghost
                                      Pexp_tuple
                                      [
                                        expression (ast/supported_version/supported_version.ml[8,73+4]..[8,73+11])
                                          Pexp_tuple
                                          [
                                            expression (ast/supported_version/supported_version.ml[8,73+5]..[8,73+6])
                                              Pexp_constant PConst_int (4,None)
                                            expression (ast/supported_version/supported_version.ml[8,73+8]..[8,73+10])
                                              Pexp_constant PConst_int (05,None)
                                          ]
                                        expression (ast/supported_version/supported_version.ml[9,86+4]..[20,227+3]) ghost
                                          Pexp_construct "::" (ast/supported_version/supported_version.ml[9,86+4]..[20,227+3]) ghost
                                          Some
                                            expression (ast/supported_version/supported_version.ml[9,86+4]..[20,227+3]) ghost
                                              Pexp_tuple
                                              [
                                                expression (ast/supported_version/supported_version.ml[9,86+4]..[9,86+11])
                                                  Pexp_tuple
                                                  [
                                                    expression (ast/supported_version/supported_version.ml[9,86+5]..[9,86+6])
                                                      Pexp_constant PConst_int (4,None)
                                                    expression (ast/supported_version/supported_version.ml[9,86+8]..[9,86+10])
                                                      Pexp_constant PConst_int (06,None)
                                                  ]
                                                expression (ast/supported_version/supported_version.ml[10,99+4]..[20,227+3]) ghost
                                                  Pexp_construct "::" (ast/supported_version/supported_version.ml[10,99+4]..[20,227+3]) ghost
                                                  Some
                                                    expression (ast/supported_version/supported_version.ml[10,99+4]..[20,227+3]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (ast/supported_version/supported_version.ml[10,99+4]..[10,99+11])
                                                          Pexp_tuple
                                                          [
                                                            expression (ast/supported_version/supported_version.ml[10,99+5]..[10,99+6])
                                                              Pexp_constant PConst_int (4,None)
                                                            expression (ast/supported_version/supported_version.ml[10,99+8]..[10,99+10])
                                                              Pexp_constant PConst_int (07,None)
                                                          ]
                                                        expression (ast/supported_version/supported_version.ml[11,112+4]..[20,227+3]) ghost
                                                          Pexp_construct "::" (ast/supported_version/supported_version.ml[11,112+4]..[20,227+3]) ghost
                                                          Some
                                                            expression (ast/supported_version/supported_version.ml[11,112+4]..[20,227+3]) ghost
                                                              Pexp_tuple
                                                              [
                                                                expression (ast/supported_version/supported_version.ml[11,112+4]..[11,112+11])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (ast/supported_version/supported_version.ml[11,112+5]..[11,112+6])
                                                                      Pexp_constant PConst_int (4,None)
                                                                    expression (ast/supported_version/supported_version.ml[11,112+8]..[11,112+10])
                                                                      Pexp_constant PConst_int (08,None)
                                                                  ]
                                                                expression (ast/supported_version/supported_version.ml[12,125+4]..[20,227+3]) ghost
                                                                  Pexp_construct "::" (ast/supported_version/supported_version.ml[12,125+4]..[20,227+3]) ghost
                                                                  Some
                                                                    expression (ast/supported_version/supported_version.ml[12,125+4]..[20,227+3]) ghost
                                                                      Pexp_tuple
                                                                      [
expression (ast/supported_version/supported_version.ml[12,125+4]..[12,125+11])
  Pexp_tuple
  [
    expression (ast/supported_version/supported_version.ml[12,125+5]..[12,125+6])
      Pexp_constant PConst_int (4,None)
    expression (ast/supported_version/supported_version.ml[12,125+8]..[12,125+10])
      Pexp_constant PConst_int (09,None)
  ]
expression (ast/supported_version/supported_version.ml[13,138+4]..[20,227+3]) ghost
  Pexp_construct "::" (ast/supported_version/supported_version.ml[13,138+4]..[20,227+3]) ghost
  Some
    expression (ast/supported_version/supported_version.ml[13,138+4]..[20,227+3]) ghost
      Pexp_tuple
      [
        expression (ast/supported_version/supported_version.ml[13,138+4]..[13,138+11])
          Pexp_tuple
          [
            expression (ast/supported_version/supported_version.ml[13,138+5]..[13,138+6])
              Pexp_constant PConst_int (4,None)
            expression (ast/supported_version/supported_version.ml[13,138+8]..[13,138+10])
              Pexp_constant PConst_int (10,None)
          ]
        expression (ast/supported_version/supported_version.ml[14,151+4]..[20,227+3]) ghost
          Pexp_construct "::" (ast/supported_version/supported_version.ml[14,151+4]..[20,227+3]) ghost
          Some
            expression (ast/supported_version/supported_version.ml[14,151+4]..[20,227+3]) ghost
              Pexp_tuple
              [
                expression (ast/supported_version/supported_version.ml[14,151+4]..[14,151+11])
                  Pexp_tuple
                  [
                    expression (ast/supported_version/supported_version.ml[14,151+5]..[14,151+6])
                      Pexp_constant PConst_int (4,None)
                    expression (ast/supported_version/supported_version.ml[14,151+8]..[14,151+10])
                      Pexp_constant PConst_int (11,None)
                  ]
                expression (ast/supported_version/supported_version.ml[15,164+4]..[20,227+3]) ghost
                  Pexp_construct "::" (ast/supported_version/supported_version.ml[15,164+4]..[20,227+3]) ghost
                  Some
                    expression (ast/supported_version/supported_version.ml[15,164+4]..[20,227+3]) ghost
                      Pexp_tuple
                      [
                        expression (ast/supported_version/supported_version.ml[15,164+4]..[15,164+11])
                          Pexp_tuple
                          [
                            expression (ast/supported_version/supported_version.ml[15,164+5]..[15,164+6])
                              Pexp_constant PConst_int (4,None)
                            expression (ast/supported_version/supported_version.ml[15,164+8]..[15,164+10])
                              Pexp_constant PConst_int (12,None)
                          ]
                        expression (ast/supported_version/supported_version.ml[16,177+4]..[20,227+3]) ghost
                          Pexp_construct "::" (ast/supported_version/supported_version.ml[16,177+4]..[20,227+3]) ghost
                          Some
                            expression (ast/supported_version/supported_version.ml[16,177+4]..[20,227+3]) ghost
                              Pexp_tuple
                              [
                                expression (ast/supported_version/supported_version.ml[16,177+4]..[16,177+11])
                                  Pexp_tuple
                                  [
                                    expression (ast/supported_version/supported_version.ml[16,177+5]..[16,177+6])
                                      Pexp_constant PConst_int (4,None)
                                    expression (ast/supported_version/supported_version.ml[16,177+8]..[16,177+10])
                                      Pexp_constant PConst_int (13,None)
                                  ]
                                expression (ast/supported_version/supported_version.ml[17,190+4]..[20,227+3]) ghost
                                  Pexp_construct "::" (ast/supported_version/supported_version.ml[17,190+4]..[20,227+3]) ghost
                                  Some
                                    expression (ast/supported_version/supported_version.ml[17,190+4]..[20,227+3]) ghost
                                      Pexp_tuple
                                      [
                                        expression (ast/supported_version/supported_version.ml[17,190+4]..[17,190+11])
                                          Pexp_tuple
                                          [
                                            expression (ast/supported_version/supported_version.ml[17,190+5]..[17,190+6])
                                              Pexp_constant PConst_int (4,None)
                                            expression (ast/supported_version/supported_version.ml[17,190+8]..[17,190+10])
                                              Pexp_constant PConst_int (14,None)
                                          ]
                                        expression (ast/supported_version/supported_version.ml[18,203+4]..[20,227+3]) ghost
                                          Pexp_construct "::" (ast/supported_version/supported_version.ml[18,203+4]..[20,227+3]) ghost
                                          Some
                                            expression (ast/supported_version/supported_version.ml[18,203+4]..[20,227+3]) ghost
                                              Pexp_tuple
                                              [
                                                expression (ast/supported_version/supported_version.ml[18,203+4]..[18,203+10])
                                                  Pexp_tuple
                                                  [
                                                    expression (ast/supported_version/supported_version.ml[18,203+5]..[18,203+6])
                                                      Pexp_constant PConst_int (5,None)
                                                    expression (ast/supported_version/supported_version.ml[18,203+8]..[18,203+9])
                                                      Pexp_constant PConst_int (0,None)
                                                  ]
                                                expression (ast/supported_version/supported_version.ml[19,215+4]..[20,227+3]) ghost
                                                  Pexp_construct "::" (ast/supported_version/supported_version.ml[19,215+4]..[20,227+3]) ghost
                                                  Some
                                                    expression (ast/supported_version/supported_version.ml[19,215+4]..[20,227+3]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (ast/supported_version/supported_version.ml[19,215+4]..[19,215+10])
                                                          Pexp_tuple
                                                          [
                                                            expression (ast/supported_version/supported_version.ml[19,215+5]..[19,215+6])
                                                              Pexp_constant PConst_int (5,None)
                                                            expression (ast/supported_version/supported_version.ml[19,215+8]..[19,215+9])
                                                              Pexp_constant PConst_int (1,None)
                                                          ]
                                                        expression (ast/supported_version/supported_version.ml[20,227+2]..[20,227+3]) ghost
                                                          Pexp_construct "[]" (ast/supported_version/supported_version.ml[20,227+2]..[20,227+3]) ghost
                                                          None
                                                      ]
                                              ]
                                      ]
                              ]
                      ]
              ]
      ]
                                                                      ]
                                                              ]
                                                      ]
                                              ]
                                      ]
                              ]
                      ]
              ]
    ]
  structure_item (ast/supported_version/supported_version.ml[22,232+0]..[23,255+76])
    Pstr_value Nonrec
    [
      <def>
        pattern (ast/supported_version/supported_version.ml[22,232+4]..[22,232+13])
          Ppat_var "to_string" (ast/supported_version/supported_version.ml[22,232+4]..[22,232+13])
        expression (ast/supported_version/supported_version.ml[22,232+14]..[23,255+76]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (ast/supported_version/supported_version.ml[22,232+14]..[22,232+20])
            Ppat_tuple
            [
              pattern (ast/supported_version/supported_version.ml[22,232+15]..[22,232+16])
                Ppat_var "a" (ast/supported_version/supported_version.ml[22,232+15]..[22,232+16])
              pattern (ast/supported_version/supported_version.ml[22,232+18]..[22,232+19])
                Ppat_var "b" (ast/supported_version/supported_version.ml[22,232+18]..[22,232+19])
            ]
          expression (ast/supported_version/supported_version.ml[23,255+2]..[23,255+76])
            Pexp_ifthenelse
            expression (ast/supported_version/supported_version.ml[23,255+5]..[23,255+10])
              Pexp_apply
              expression (ast/supported_version/supported_version.ml[23,255+7]..[23,255+8])
                Pexp_ident "<" (ast/supported_version/supported_version.ml[23,255+7]..[23,255+8])
              [
                <arg>
                Nolabel
                  expression (ast/supported_version/supported_version.ml[23,255+5]..[23,255+6])
                    Pexp_ident "a" (ast/supported_version/supported_version.ml[23,255+5]..[23,255+6])
                <arg>
                Nolabel
                  expression (ast/supported_version/supported_version.ml[23,255+9]..[23,255+10])
                    Pexp_constant PConst_int (5,None)
              ]
            expression (ast/supported_version/supported_version.ml[23,255+16]..[23,255+44])
              Pexp_apply
              expression (ast/supported_version/supported_version.ml[23,255+16]..[23,255+30])
                Pexp_ident "Printf.sprintf" (ast/supported_version/supported_version.ml[23,255+16]..[23,255+30])
              [
                <arg>
                Nolabel
                  expression (ast/supported_version/supported_version.ml[23,255+31]..[23,255+40])
                    Pexp_constant PConst_string("%d.%02d",(ast/supported_version/supported_version.ml[23,255+32]..[23,255+39]),None)
                <arg>
                Nolabel
                  expression (ast/supported_version/supported_version.ml[23,255+41]..[23,255+42])
                    Pexp_ident "a" (ast/supported_version/supported_version.ml[23,255+41]..[23,255+42])
                <arg>
                Nolabel
                  expression (ast/supported_version/supported_version.ml[23,255+43]..[23,255+44])
                    Pexp_ident "b" (ast/supported_version/supported_version.ml[23,255+43]..[23,255+44])
              ]
            Some
              expression (ast/supported_version/supported_version.ml[23,255+50]..[23,255+76])
                Pexp_apply
                expression (ast/supported_version/supported_version.ml[23,255+50]..[23,255+64])
                  Pexp_ident "Printf.sprintf" (ast/supported_version/supported_version.ml[23,255+50]..[23,255+64])
                [
                  <arg>
                  Nolabel
                    expression (ast/supported_version/supported_version.ml[23,255+65]..[23,255+72])
                      Pexp_constant PConst_string("%d.%d",(ast/supported_version/supported_version.ml[23,255+66]..[23,255+71]),None)
                  <arg>
                  Nolabel
                    expression (ast/supported_version/supported_version.ml[23,255+73]..[23,255+74])
                      Pexp_ident "a" (ast/supported_version/supported_version.ml[23,255+73]..[23,255+74])
                  <arg>
                  Nolabel
                    expression (ast/supported_version/supported_version.ml[23,255+75]..[23,255+76])
                      Pexp_ident "b" (ast/supported_version/supported_version.ml[23,255+75]..[23,255+76])
                ]
    ]
  structure_item (ast/supported_version/supported_version.ml[25,333+0]..[25,333+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (ast/supported_version/supported_version.ml[25,333+4]..[25,333+10])
          Ppat_var "to_int" (ast/supported_version/supported_version.ml[25,333+4]..[25,333+10])
        expression (ast/supported_version/supported_version.ml[25,333+11]..[25,333+33]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (ast/supported_version/supported_version.ml[25,333+11]..[25,333+17])
            Ppat_tuple
            [
              pattern (ast/supported_version/supported_version.ml[25,333+12]..[25,333+13])
                Ppat_var "a" (ast/supported_version/supported_version.ml[25,333+12]..[25,333+13])
              pattern (ast/supported_version/supported_version.ml[25,333+15]..[25,333+16])
                Ppat_var "b" (ast/supported_version/supported_version.ml[25,333+15]..[25,333+16])
            ]
          expression (ast/supported_version/supported_version.ml[25,333+20]..[25,333+33])
            Pexp_apply
            expression (ast/supported_version/supported_version.ml[25,333+30]..[25,333+31])
              Pexp_ident "+" (ast/supported_version/supported_version.ml[25,333+30]..[25,333+31])
            [
              <arg>
              Nolabel
                expression (ast/supported_version/supported_version.ml[25,333+20]..[25,333+29])
                  Pexp_apply
                  expression (ast/supported_version/supported_version.ml[25,333+23]..[25,333+24])
                    Pexp_ident "*" (ast/supported_version/supported_version.ml[25,333+23]..[25,333+24])
                  [
                    <arg>
                    Nolabel
                      expression (ast/supported_version/supported_version.ml[25,333+21]..[25,333+22])
                        Pexp_ident "a" (ast/supported_version/supported_version.ml[25,333+21]..[25,333+22])
                    <arg>
                    Nolabel
                      expression (ast/supported_version/supported_version.ml[25,333+25]..[25,333+28])
                        Pexp_constant PConst_int (100,None)
                  ]
              <arg>
              Nolabel
                expression (ast/supported_version/supported_version.ml[25,333+32]..[25,333+33])
                  Pexp_ident "b" (ast/supported_version/supported_version.ml[25,333+32]..[25,333+33])
            ]
    ]
  structure_item (ast/supported_version/supported_version.ml[27,368+0]..[29,442+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (ast/supported_version/supported_version.ml[27,368+4]..[27,368+13])
          Ppat_var "of_string" (ast/supported_version/supported_version.ml[27,368+4]..[27,368+13])
        expression (ast/supported_version/supported_version.ml[27,368+14]..[29,442+41]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (ast/supported_version/supported_version.ml[27,368+14]..[27,368+15])
            Ppat_var "s" (ast/supported_version/supported_version.ml[27,368+14]..[27,368+15])
          expression (ast/supported_version/supported_version.ml[28,386+2]..[29,442+41])
            Pexp_let Nonrec
            [
              <def>
                pattern (ast/supported_version/supported_version.ml[28,386+6]..[28,386+7])
                  Ppat_var "t" (ast/supported_version/supported_version.ml[28,386+6]..[28,386+7])
                expression (ast/supported_version/supported_version.ml[28,386+10]..[28,386+52])
                  Pexp_apply
                  expression (ast/supported_version/supported_version.ml[28,386+10]..[28,386+22])
                    Pexp_ident "Scanf.sscanf" (ast/supported_version/supported_version.ml[28,386+10]..[28,386+22])
                  [
                    <arg>
                    Nolabel
                      expression (ast/supported_version/supported_version.ml[28,386+23]..[28,386+24])
                        Pexp_ident "s" (ast/supported_version/supported_version.ml[28,386+23]..[28,386+24])
                    <arg>
                    Nolabel
                      expression (ast/supported_version/supported_version.ml[28,386+25]..[28,386+32])
                        Pexp_constant PConst_string("%u.%u",(ast/supported_version/supported_version.ml[28,386+26]..[28,386+31]),None)
                    <arg>
                    Nolabel
                      expression (ast/supported_version/supported_version.ml[28,386+33]..[28,386+52])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (ast/supported_version/supported_version.ml[28,386+38]..[28,386+39])
                          Ppat_var "a" (ast/supported_version/supported_version.ml[28,386+38]..[28,386+39])
                        expression (ast/supported_version/supported_version.ml[28,386+40]..[28,386+51]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (ast/supported_version/supported_version.ml[28,386+40]..[28,386+41])
                            Ppat_var "b" (ast/supported_version/supported_version.ml[28,386+40]..[28,386+41])
                          expression (ast/supported_version/supported_version.ml[28,386+45]..[28,386+51])
                            Pexp_tuple
                            [
                              expression (ast/supported_version/supported_version.ml[28,386+46]..[28,386+47])
                                Pexp_ident "a" (ast/supported_version/supported_version.ml[28,386+46]..[28,386+47])
                              expression (ast/supported_version/supported_version.ml[28,386+49]..[28,386+50])
                                Pexp_ident "b" (ast/supported_version/supported_version.ml[28,386+49]..[28,386+50])
                            ]
                  ]
            ]
            expression (ast/supported_version/supported_version.ml[29,442+2]..[29,442+41])
              Pexp_ifthenelse
              expression (ast/supported_version/supported_version.ml[29,442+5]..[29,442+19])
                Pexp_apply
                expression (ast/supported_version/supported_version.ml[29,442+5]..[29,442+13])
                  Pexp_ident "List.mem" (ast/supported_version/supported_version.ml[29,442+5]..[29,442+13])
                [
                  <arg>
                  Nolabel
                    expression (ast/supported_version/supported_version.ml[29,442+14]..[29,442+15])
                      Pexp_ident "t" (ast/supported_version/supported_version.ml[29,442+14]..[29,442+15])
                  <arg>
                  Nolabel
                    expression (ast/supported_version/supported_version.ml[29,442+16]..[29,442+19])
                      Pexp_ident "all" (ast/supported_version/supported_version.ml[29,442+16]..[29,442+19])
                ]
              expression (ast/supported_version/supported_version.ml[29,442+25]..[29,442+31])
                Pexp_construct "Some" (ast/supported_version/supported_version.ml[29,442+25]..[29,442+29])
                Some
                  expression (ast/supported_version/supported_version.ml[29,442+30]..[29,442+31])
                    Pexp_ident "t" (ast/supported_version/supported_version.ml[29,442+30]..[29,442+31])
              Some
                expression (ast/supported_version/supported_version.ml[29,442+37]..[29,442+41])
                  Pexp_construct "None" (ast/supported_version/supported_version.ml[29,442+37]..[29,442+41])
                  None
    ]
]

type t = (int * int)
let all =
  [(4, 02);
  (4, 03);
  (4, 04);
  (4, 05);
  (4, 06);
  (4, 07);
  (4, 08);
  (4, 09);
  (4, 10);
  (4, 11);
  (4, 12);
  (4, 13);
  (4, 14);
  (5, 0);
  (5, 1)]
let to_string (a, b) =
  if a < 5 then Printf.sprintf "%d.%02d" a b else Printf.sprintf "%d.%d" a b
let to_int (a, b) = (a * 100) + b
let of_string s =
  let t = Scanf.sscanf s "%u.%u" (fun a -> fun b -> (a, b)) in
  if List.mem t all then Some t else None
[
  structure_item (ast/supported_version/supported_version.ml[1,0+0]..ast/supported_version/supported_version.ml[1,0+18])
    Tstr_type Rec
    [
      type_declaration t/86 (ast/supported_version/supported_version.ml[1,0+0]..ast/supported_version/supported_version.ml[1,0+18])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (ast/supported_version/supported_version.ml[1,0+9]..ast/supported_version/supported_version.ml[1,0+18])
              Ttyp_tuple
              [
                core_type (ast/supported_version/supported_version.ml[1,0+9]..ast/supported_version/supported_version.ml[1,0+12])
                  Ttyp_constr "int/1!"
                  []
                core_type (ast/supported_version/supported_version.ml[1,0+15]..ast/supported_version/supported_version.ml[1,0+18])
                  Ttyp_constr "int/1!"
                  []
              ]
    ]
  structure_item (ast/supported_version/supported_version.ml[3,20+0]..ast/supported_version/supported_version.ml[20,227+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (ast/supported_version/supported_version.ml[3,20+4]..ast/supported_version/supported_version.ml[3,20+7])
          Tpat_var "all/87"
        expression (ast/supported_version/supported_version.ml[4,30+2]..ast/supported_version/supported_version.ml[20,227+3])
          Texp_construct "::"
          [
            expression (ast/supported_version/supported_version.ml[5,34+4]..ast/supported_version/supported_version.ml[5,34+11])
              Texp_tuple
              [
                expression (ast/supported_version/supported_version.ml[5,34+5]..ast/supported_version/supported_version.ml[5,34+6])
                  Texp_constant Const_int 4
                expression (ast/supported_version/supported_version.ml[5,34+8]..ast/supported_version/supported_version.ml[5,34+10])
                  Texp_constant Const_int 2
              ]
            expression (ast/supported_version/supported_version.ml[6,47+4]..ast/supported_version/supported_version.ml[20,227+3]) ghost
              Texp_construct "::"
              [
                expression (ast/supported_version/supported_version.ml[6,47+4]..ast/supported_version/supported_version.ml[6,47+11])
                  Texp_tuple
                  [
                    expression (ast/supported_version/supported_version.ml[6,47+5]..ast/supported_version/supported_version.ml[6,47+6])
                      Texp_constant Const_int 4
                    expression (ast/supported_version/supported_version.ml[6,47+8]..ast/supported_version/supported_version.ml[6,47+10])
                      Texp_constant Const_int 3
                  ]
                expression (ast/supported_version/supported_version.ml[7,60+4]..ast/supported_version/supported_version.ml[20,227+3]) ghost
                  Texp_construct "::"
                  [
                    expression (ast/supported_version/supported_version.ml[7,60+4]..ast/supported_version/supported_version.ml[7,60+11])
                      Texp_tuple
                      [
                        expression (ast/supported_version/supported_version.ml[7,60+5]..ast/supported_version/supported_version.ml[7,60+6])
                          Texp_constant Const_int 4
                        expression (ast/supported_version/supported_version.ml[7,60+8]..ast/supported_version/supported_version.ml[7,60+10])
                          Texp_constant Const_int 4
                      ]
                    expression (ast/supported_version/supported_version.ml[8,73+4]..ast/supported_version/supported_version.ml[20,227+3]) ghost
                      Texp_construct "::"
                      [
                        expression (ast/supported_version/supported_version.ml[8,73+4]..ast/supported_version/supported_version.ml[8,73+11])
                          Texp_tuple
                          [
                            expression (ast/supported_version/supported_version.ml[8,73+5]..ast/supported_version/supported_version.ml[8,73+6])
                              Texp_constant Const_int 4
                            expression (ast/supported_version/supported_version.ml[8,73+8]..ast/supported_version/supported_version.ml[8,73+10])
                              Texp_constant Const_int 5
                          ]
                        expression (ast/supported_version/supported_version.ml[9,86+4]..ast/supported_version/supported_version.ml[20,227+3]) ghost
                          Texp_construct "::"
                          [
                            expression (ast/supported_version/supported_version.ml[9,86+4]..ast/supported_version/supported_version.ml[9,86+11])
                              Texp_tuple
                              [
                                expression (ast/supported_version/supported_version.ml[9,86+5]..ast/supported_version/supported_version.ml[9,86+6])
                                  Texp_constant Const_int 4
                                expression (ast/supported_version/supported_version.ml[9,86+8]..ast/supported_version/supported_version.ml[9,86+10])
                                  Texp_constant Const_int 6
                              ]
                            expression (ast/supported_version/supported_version.ml[10,99+4]..ast/supported_version/supported_version.ml[20,227+3]) ghost
                              Texp_construct "::"
                              [
                                expression (ast/supported_version/supported_version.ml[10,99+4]..ast/supported_version/supported_version.ml[10,99+11])
                                  Texp_tuple
                                  [
                                    expression (ast/supported_version/supported_version.ml[10,99+5]..ast/supported_version/supported_version.ml[10,99+6])
                                      Texp_constant Const_int 4
                                    expression (ast/supported_version/supported_version.ml[10,99+8]..ast/supported_version/supported_version.ml[10,99+10])
                                      Texp_constant Const_int 7
                                  ]
                                expression (ast/supported_version/supported_version.ml[11,112+4]..ast/supported_version/supported_version.ml[20,227+3]) ghost
                                  Texp_construct "::"
                                  [
                                    expression (ast/supported_version/supported_version.ml[11,112+4]..ast/supported_version/supported_version.ml[11,112+11])
                                      Texp_tuple
                                      [
                                        expression (ast/supported_version/supported_version.ml[11,112+5]..ast/supported_version/supported_version.ml[11,112+6])
                                          Texp_constant Const_int 4
                                        expression (ast/supported_version/supported_version.ml[11,112+8]..ast/supported_version/supported_version.ml[11,112+10])
                                          Texp_constant Const_int 8
                                      ]
                                    expression (ast/supported_version/supported_version.ml[12,125+4]..ast/supported_version/supported_version.ml[20,227+3]) ghost
                                      Texp_construct "::"
                                      [
                                        expression (ast/supported_version/supported_version.ml[12,125+4]..ast/supported_version/supported_version.ml[12,125+11])
                                          Texp_tuple
                                          [
                                            expression (ast/supported_version/supported_version.ml[12,125+5]..ast/supported_version/supported_version.ml[12,125+6])
                                              Texp_constant Const_int 4
                                            expression (ast/supported_version/supported_version.ml[12,125+8]..ast/supported_version/supported_version.ml[12,125+10])
                                              Texp_constant Const_int 9
                                          ]
                                        expression (ast/supported_version/supported_version.ml[13,138+4]..ast/supported_version/supported_version.ml[20,227+3]) ghost
                                          Texp_construct "::"
                                          [
                                            expression (ast/supported_version/supported_version.ml[13,138+4]..ast/supported_version/supported_version.ml[13,138+11])
                                              Texp_tuple
                                              [
                                                expression (ast/supported_version/supported_version.ml[13,138+5]..ast/supported_version/supported_version.ml[13,138+6])
                                                  Texp_constant Const_int 4
                                                expression (ast/supported_version/supported_version.ml[13,138+8]..ast/supported_version/supported_version.ml[13,138+10])
                                                  Texp_constant Const_int 10
                                              ]
                                            expression (ast/supported_version/supported_version.ml[14,151+4]..ast/supported_version/supported_version.ml[20,227+3]) ghost
                                              Texp_construct "::"
                                              [
                                                expression (ast/supported_version/supported_version.ml[14,151+4]..ast/supported_version/supported_version.ml[14,151+11])
                                                  Texp_tuple
                                                  [
                                                    expression (ast/supported_version/supported_version.ml[14,151+5]..ast/supported_version/supported_version.ml[14,151+6])
                                                      Texp_constant Const_int 4
                                                    expression (ast/supported_version/supported_version.ml[14,151+8]..ast/supported_version/supported_version.ml[14,151+10])
                                                      Texp_constant Const_int 11
                                                  ]
                                                expression (ast/supported_version/supported_version.ml[15,164+4]..ast/supported_version/supported_version.ml[20,227+3]) ghost
                                                  Texp_construct "::"
                                                  [
                                                    expression (ast/supported_version/supported_version.ml[15,164+4]..ast/supported_version/supported_version.ml[15,164+11])
                                                      Texp_tuple
                                                      [
                                                        expression (ast/supported_version/supported_version.ml[15,164+5]..ast/supported_version/supported_version.ml[15,164+6])
                                                          Texp_constant Const_int 4
                                                        expression (ast/supported_version/supported_version.ml[15,164+8]..ast/supported_version/supported_version.ml[15,164+10])
                                                          Texp_constant Const_int 12
                                                      ]
                                                    expression (ast/supported_version/supported_version.ml[16,177+4]..ast/supported_version/supported_version.ml[20,227+3]) ghost
                                                      Texp_construct "::"
                                                      [
                                                        expression (ast/supported_version/supported_version.ml[16,177+4]..ast/supported_version/supported_version.ml[16,177+11])
                                                          Texp_tuple
                                                          [
                                                            expression (ast/supported_version/supported_version.ml[16,177+5]..ast/supported_version/supported_version.ml[16,177+6])
                                                              Texp_constant Const_int 4
                                                            expression (ast/supported_version/supported_version.ml[16,177+8]..ast/supported_version/supported_version.ml[16,177+10])
                                                              Texp_constant Const_int 13
                                                          ]
                                                        expression (ast/supported_version/supported_version.ml[17,190+4]..ast/supported_version/supported_version.ml[20,227+3]) ghost
                                                          Texp_construct "::"
                                                          [
                                                            expression (ast/supported_version/supported_version.ml[17,190+4]..ast/supported_version/supported_version.ml[17,190+11])
                                                              Texp_tuple
                                                              [
                                                                expression (ast/supported_version/supported_version.ml[17,190+5]..ast/supported_version/supported_version.ml[17,190+6])
                                                                  Texp_constant Const_int 4
                                                                expression (ast/supported_version/supported_version.ml[17,190+8]..ast/supported_version/supported_version.ml[17,190+10])
                                                                  Texp_constant Const_int 14
                                                              ]
                                                            expression (ast/supported_version/supported_version.ml[18,203+4]..ast/supported_version/supported_version.ml[20,227+3]) ghost
                                                              Texp_construct "::"
                                                              [
                                                                expression (ast/supported_version/supported_version.ml[18,203+4]..ast/supported_version/supported_version.ml[18,203+10])
                                                                  Texp_tuple
                                                                  [
                                                                    expression (ast/supported_version/supported_version.ml[18,203+5]..ast/supported_version/supported_version.ml[18,203+6])
                                                                      Texp_constant Const_int 5
                                                                    expression (ast/supported_version/supported_version.ml[18,203+8]..ast/supported_version/supported_version.ml[18,203+9])
                                                                      Texp_constant Const_int 0
                                                                  ]
                                                                expression (ast/supported_version/supported_version.ml[19,215+4]..ast/supported_version/supported_version.ml[20,227+3]) ghost
                                                                  Texp_construct "::"
                                                                  [
                                                                    expression (ast/supported_version/supported_version.ml[19,215+4]..ast/supported_version/supported_version.ml[19,215+10])
                                                                      Texp_tuple
                                                                      [
                                                                        expression (ast/supported_version/supported_version.ml[19,215+5]..ast/supported_version/supported_version.ml[19,215+6])
                                                                          Texp_constant Const_int 5
                                                                        expression (ast/supported_version/supported_version.ml[19,215+8]..ast/supported_version/supported_version.ml[19,215+9])
                                                                          Texp_constant Const_int 1
                                                                      ]
                                                                    expression (ast/supported_version/supported_version.ml[20,227+2]..ast/supported_version/supported_version.ml[20,227+3]) ghost
                                                                      Texp_construct "[]"
                                                                      []
                                                                  ]
                                                              ]
                                                          ]
                                                      ]
                                                  ]
                                              ]
                                          ]
                                      ]
                                  ]
                              ]
                          ]
                      ]
                  ]
              ]
          ]
    ]
  structure_item (ast/supported_version/supported_version.ml[22,232+0]..ast/supported_version/supported_version.ml[23,255+76])
    Tstr_value Nonrec
    [
      <def>
        pattern (ast/supported_version/supported_version.ml[22,232+4]..ast/supported_version/supported_version.ml[22,232+13])
          Tpat_var "to_string/88"
        expression (ast/supported_version/supported_version.ml[22,232+14]..ast/supported_version/supported_version.ml[23,255+76]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (ast/supported_version/supported_version.ml[22,232+14]..ast/supported_version/supported_version.ml[22,232+20])
                Tpat_tuple
                [
                  pattern (ast/supported_version/supported_version.ml[22,232+15]..ast/supported_version/supported_version.ml[22,232+16])
                    Tpat_var "a/90"
                  pattern (ast/supported_version/supported_version.ml[22,232+18]..ast/supported_version/supported_version.ml[22,232+19])
                    Tpat_var "b/91"
                ]
              expression (ast/supported_version/supported_version.ml[23,255+2]..ast/supported_version/supported_version.ml[23,255+76])
                Texp_ifthenelse
                expression (ast/supported_version/supported_version.ml[23,255+5]..ast/supported_version/supported_version.ml[23,255+10])
                  Texp_apply
                  expression (ast/supported_version/supported_version.ml[23,255+7]..ast/supported_version/supported_version.ml[23,255+8])
                    Texp_ident "Stdlib!.<"
                  [
                    <arg>
                      Nolabel
                      expression (ast/supported_version/supported_version.ml[23,255+5]..ast/supported_version/supported_version.ml[23,255+6])
                        Texp_ident "a/90"
                    <arg>
                      Nolabel
                      expression (ast/supported_version/supported_version.ml[23,255+9]..ast/supported_version/supported_version.ml[23,255+10])
                        Texp_constant Const_int 5
                  ]
                expression (ast/supported_version/supported_version.ml[23,255+16]..ast/supported_version/supported_version.ml[23,255+44])
                  Texp_apply
                  expression (ast/supported_version/supported_version.ml[23,255+16]..ast/supported_version/supported_version.ml[23,255+30])
                    Texp_ident "Stdlib!.Printf.sprintf"
                  [
                    <arg>
                      Nolabel
                      expression (ast/supported_version/supported_version.ml[23,255+31]..ast/supported_version/supported_version.ml[23,255+40])
                        Texp_construct "CamlinternalFormatBasics.Format"
                        [
                          expression (ast/supported_version/supported_version.ml[23,255+31]..ast/supported_version/supported_version.ml[23,255+40]) ghost
                            Texp_construct "CamlinternalFormatBasics.Int"
                            [
                              expression (ast/supported_version/supported_version.ml[23,255+31]..ast/supported_version/supported_version.ml[23,255+40]) ghost
                                Texp_construct "CamlinternalFormatBasics.Int_d"
                                []
                              expression (ast/supported_version/supported_version.ml[23,255+31]..ast/supported_version/supported_version.ml[23,255+40]) ghost
                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                []
                              expression (ast/supported_version/supported_version.ml[23,255+31]..ast/supported_version/supported_version.ml[23,255+40]) ghost
                                Texp_construct "CamlinternalFormatBasics.No_precision"
                                []
                              expression (ast/supported_version/supported_version.ml[23,255+31]..ast/supported_version/supported_version.ml[23,255+40]) ghost
                                Texp_construct "CamlinternalFormatBasics.Char_literal"
                                [
                                  expression (ast/supported_version/supported_version.ml[23,255+31]..ast/supported_version/supported_version.ml[23,255+40]) ghost
                                    Texp_constant Const_char 2e
                                  expression (ast/supported_version/supported_version.ml[23,255+31]..ast/supported_version/supported_version.ml[23,255+40]) ghost
                                    Texp_construct "CamlinternalFormatBasics.Int"
                                    [
                                      expression (ast/supported_version/supported_version.ml[23,255+31]..ast/supported_version/supported_version.ml[23,255+40]) ghost
                                        Texp_construct "CamlinternalFormatBasics.Int_d"
                                        []
                                      expression (ast/supported_version/supported_version.ml[23,255+31]..ast/supported_version/supported_version.ml[23,255+40]) ghost
                                        Texp_construct "CamlinternalFormatBasics.Lit_padding"
                                        [
                                          expression (ast/supported_version/supported_version.ml[23,255+31]..ast/supported_version/supported_version.ml[23,255+40]) ghost
                                            Texp_construct "CamlinternalFormatBasics.Zeros"
                                            []
                                          expression (ast/supported_version/supported_version.ml[23,255+31]..ast/supported_version/supported_version.ml[23,255+40]) ghost
                                            Texp_constant Const_int 2
                                        ]
                                      expression (ast/supported_version/supported_version.ml[23,255+31]..ast/supported_version/supported_version.ml[23,255+40]) ghost
                                        Texp_construct "CamlinternalFormatBasics.No_precision"
                                        []
                                      expression (ast/supported_version/supported_version.ml[23,255+31]..ast/supported_version/supported_version.ml[23,255+40]) ghost
                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                        []
                                    ]
                                ]
                            ]
                          expression (ast/supported_version/supported_version.ml[23,255+31]..ast/supported_version/supported_version.ml[23,255+40]) ghost
                            Texp_constant Const_string("%d.%02d",(ast/supported_version/supported_version.ml[23,255+31]..ast/supported_version/supported_version.ml[23,255+40]) ghost,None)
                        ]
                    <arg>
                      Nolabel
                      expression (ast/supported_version/supported_version.ml[23,255+41]..ast/supported_version/supported_version.ml[23,255+42])
                        Texp_ident "a/90"
                    <arg>
                      Nolabel
                      expression (ast/supported_version/supported_version.ml[23,255+43]..ast/supported_version/supported_version.ml[23,255+44])
                        Texp_ident "b/91"
                  ]
                Some
                  expression (ast/supported_version/supported_version.ml[23,255+50]..ast/supported_version/supported_version.ml[23,255+76])
                    Texp_apply
                    expression (ast/supported_version/supported_version.ml[23,255+50]..ast/supported_version/supported_version.ml[23,255+64])
                      Texp_ident "Stdlib!.Printf.sprintf"
                    [
                      <arg>
                        Nolabel
                        expression (ast/supported_version/supported_version.ml[23,255+65]..ast/supported_version/supported_version.ml[23,255+72])
                          Texp_construct "CamlinternalFormatBasics.Format"
                          [
                            expression (ast/supported_version/supported_version.ml[23,255+65]..ast/supported_version/supported_version.ml[23,255+72]) ghost
                              Texp_construct "CamlinternalFormatBasics.Int"
                              [
                                expression (ast/supported_version/supported_version.ml[23,255+65]..ast/supported_version/supported_version.ml[23,255+72]) ghost
                                  Texp_construct "CamlinternalFormatBasics.Int_d"
                                  []
                                expression (ast/supported_version/supported_version.ml[23,255+65]..ast/supported_version/supported_version.ml[23,255+72]) ghost
                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                  []
                                expression (ast/supported_version/supported_version.ml[23,255+65]..ast/supported_version/supported_version.ml[23,255+72]) ghost
                                  Texp_construct "CamlinternalFormatBasics.No_precision"
                                  []
                                expression (ast/supported_version/supported_version.ml[23,255+65]..ast/supported_version/supported_version.ml[23,255+72]) ghost
                                  Texp_construct "CamlinternalFormatBasics.Char_literal"
                                  [
                                    expression (ast/supported_version/supported_version.ml[23,255+65]..ast/supported_version/supported_version.ml[23,255+72]) ghost
                                      Texp_constant Const_char 2e
                                    expression (ast/supported_version/supported_version.ml[23,255+65]..ast/supported_version/supported_version.ml[23,255+72]) ghost
                                      Texp_construct "CamlinternalFormatBasics.Int"
                                      [
                                        expression (ast/supported_version/supported_version.ml[23,255+65]..ast/supported_version/supported_version.ml[23,255+72]) ghost
                                          Texp_construct "CamlinternalFormatBasics.Int_d"
                                          []
                                        expression (ast/supported_version/supported_version.ml[23,255+65]..ast/supported_version/supported_version.ml[23,255+72]) ghost
                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                          []
                                        expression (ast/supported_version/supported_version.ml[23,255+65]..ast/supported_version/supported_version.ml[23,255+72]) ghost
                                          Texp_construct "CamlinternalFormatBasics.No_precision"
                                          []
                                        expression (ast/supported_version/supported_version.ml[23,255+65]..ast/supported_version/supported_version.ml[23,255+72]) ghost
                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                          []
                                      ]
                                  ]
                              ]
                            expression (ast/supported_version/supported_version.ml[23,255+65]..ast/supported_version/supported_version.ml[23,255+72]) ghost
                              Texp_constant Const_string("%d.%d",(ast/supported_version/supported_version.ml[23,255+65]..ast/supported_version/supported_version.ml[23,255+72]) ghost,None)
                          ]
                      <arg>
                        Nolabel
                        expression (ast/supported_version/supported_version.ml[23,255+73]..ast/supported_version/supported_version.ml[23,255+74])
                          Texp_ident "a/90"
                      <arg>
                        Nolabel
                        expression (ast/supported_version/supported_version.ml[23,255+75]..ast/supported_version/supported_version.ml[23,255+76])
                          Texp_ident "b/91"
                    ]
          ]
    ]
  structure_item (ast/supported_version/supported_version.ml[25,333+0]..ast/supported_version/supported_version.ml[25,333+33])
    Tstr_value Nonrec
    [
      <def>
        pattern (ast/supported_version/supported_version.ml[25,333+4]..ast/supported_version/supported_version.ml[25,333+10])
          Tpat_var "to_int/126"
        expression (ast/supported_version/supported_version.ml[25,333+11]..ast/supported_version/supported_version.ml[25,333+33]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (ast/supported_version/supported_version.ml[25,333+11]..ast/supported_version/supported_version.ml[25,333+17])
                Tpat_tuple
                [
                  pattern (ast/supported_version/supported_version.ml[25,333+12]..ast/supported_version/supported_version.ml[25,333+13])
                    Tpat_var "a/128"
                  pattern (ast/supported_version/supported_version.ml[25,333+15]..ast/supported_version/supported_version.ml[25,333+16])
                    Tpat_var "b/129"
                ]
              expression (ast/supported_version/supported_version.ml[25,333+20]..ast/supported_version/supported_version.ml[25,333+33])
                Texp_apply
                expression (ast/supported_version/supported_version.ml[25,333+30]..ast/supported_version/supported_version.ml[25,333+31])
                  Texp_ident "Stdlib!.+"
                [
                  <arg>
                    Nolabel
                    expression (ast/supported_version/supported_version.ml[25,333+20]..ast/supported_version/supported_version.ml[25,333+29])
                      Texp_apply
                      expression (ast/supported_version/supported_version.ml[25,333+23]..ast/supported_version/supported_version.ml[25,333+24])
                        Texp_ident "Stdlib!.*"
                      [
                        <arg>
                          Nolabel
                          expression (ast/supported_version/supported_version.ml[25,333+21]..ast/supported_version/supported_version.ml[25,333+22])
                            Texp_ident "a/128"
                        <arg>
                          Nolabel
                          expression (ast/supported_version/supported_version.ml[25,333+25]..ast/supported_version/supported_version.ml[25,333+28])
                            Texp_constant Const_int 100
                      ]
                  <arg>
                    Nolabel
                    expression (ast/supported_version/supported_version.ml[25,333+32]..ast/supported_version/supported_version.ml[25,333+33])
                      Texp_ident "b/129"
                ]
          ]
    ]
  structure_item (ast/supported_version/supported_version.ml[27,368+0]..ast/supported_version/supported_version.ml[29,442+41])
    Tstr_value Nonrec
    [
      <def>
        pattern (ast/supported_version/supported_version.ml[27,368+4]..ast/supported_version/supported_version.ml[27,368+13])
          Tpat_var "of_string/131"
        expression (ast/supported_version/supported_version.ml[27,368+14]..ast/supported_version/supported_version.ml[29,442+41]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (ast/supported_version/supported_version.ml[27,368+14]..ast/supported_version/supported_version.ml[27,368+15])
                Tpat_var "s/133"
              expression (ast/supported_version/supported_version.ml[28,386+2]..ast/supported_version/supported_version.ml[29,442+41])
                Texp_let Nonrec
                [
                  <def>
                    pattern (ast/supported_version/supported_version.ml[28,386+6]..ast/supported_version/supported_version.ml[28,386+7])
                      Tpat_var "t/134"
                    expression (ast/supported_version/supported_version.ml[28,386+10]..ast/supported_version/supported_version.ml[28,386+52])
                      Texp_apply
                      expression (ast/supported_version/supported_version.ml[28,386+10]..ast/supported_version/supported_version.ml[28,386+22])
                        Texp_ident "Stdlib!.Scanf.sscanf"
                      [
                        <arg>
                          Nolabel
                          expression (ast/supported_version/supported_version.ml[28,386+23]..ast/supported_version/supported_version.ml[28,386+24])
                            Texp_ident "s/133"
                        <arg>
                          Nolabel
                          expression (ast/supported_version/supported_version.ml[28,386+25]..ast/supported_version/supported_version.ml[28,386+32])
                            Texp_construct "CamlinternalFormatBasics.Format"
                            [
                              expression (ast/supported_version/supported_version.ml[28,386+25]..ast/supported_version/supported_version.ml[28,386+32]) ghost
                                Texp_construct "CamlinternalFormatBasics.Int"
                                [
                                  expression (ast/supported_version/supported_version.ml[28,386+25]..ast/supported_version/supported_version.ml[28,386+32]) ghost
                                    Texp_construct "CamlinternalFormatBasics.Int_u"
                                    []
                                  expression (ast/supported_version/supported_version.ml[28,386+25]..ast/supported_version/supported_version.ml[28,386+32]) ghost
                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                    []
                                  expression (ast/supported_version/supported_version.ml[28,386+25]..ast/supported_version/supported_version.ml[28,386+32]) ghost
                                    Texp_construct "CamlinternalFormatBasics.No_precision"
                                    []
                                  expression (ast/supported_version/supported_version.ml[28,386+25]..ast/supported_version/supported_version.ml[28,386+32]) ghost
                                    Texp_construct "CamlinternalFormatBasics.Char_literal"
                                    [
                                      expression (ast/supported_version/supported_version.ml[28,386+25]..ast/supported_version/supported_version.ml[28,386+32]) ghost
                                        Texp_constant Const_char 2e
                                      expression (ast/supported_version/supported_version.ml[28,386+25]..ast/supported_version/supported_version.ml[28,386+32]) ghost
                                        Texp_construct "CamlinternalFormatBasics.Int"
                                        [
                                          expression (ast/supported_version/supported_version.ml[28,386+25]..ast/supported_version/supported_version.ml[28,386+32]) ghost
                                            Texp_construct "CamlinternalFormatBasics.Int_u"
                                            []
                                          expression (ast/supported_version/supported_version.ml[28,386+25]..ast/supported_version/supported_version.ml[28,386+32]) ghost
                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                            []
                                          expression (ast/supported_version/supported_version.ml[28,386+25]..ast/supported_version/supported_version.ml[28,386+32]) ghost
                                            Texp_construct "CamlinternalFormatBasics.No_precision"
                                            []
                                          expression (ast/supported_version/supported_version.ml[28,386+25]..ast/supported_version/supported_version.ml[28,386+32]) ghost
                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                            []
                                        ]
                                    ]
                                ]
                              expression (ast/supported_version/supported_version.ml[28,386+25]..ast/supported_version/supported_version.ml[28,386+32]) ghost
                                Texp_constant Const_string("%u.%u",(ast/supported_version/supported_version.ml[28,386+25]..ast/supported_version/supported_version.ml[28,386+32]) ghost,None)
                            ]
                        <arg>
                          Nolabel
                          expression (ast/supported_version/supported_version.ml[28,386+33]..ast/supported_version/supported_version.ml[28,386+52])
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (ast/supported_version/supported_version.ml[28,386+38]..ast/supported_version/supported_version.ml[28,386+39])
                                  Tpat_var "a/168"
                                expression (ast/supported_version/supported_version.ml[28,386+40]..ast/supported_version/supported_version.ml[28,386+51]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (ast/supported_version/supported_version.ml[28,386+40]..ast/supported_version/supported_version.ml[28,386+41])
                                        Tpat_var "b/169"
                                      expression (ast/supported_version/supported_version.ml[28,386+45]..ast/supported_version/supported_version.ml[28,386+51])
                                        Texp_tuple
                                        [
                                          expression (ast/supported_version/supported_version.ml[28,386+46]..ast/supported_version/supported_version.ml[28,386+47])
                                            Texp_ident "a/168"
                                          expression (ast/supported_version/supported_version.ml[28,386+49]..ast/supported_version/supported_version.ml[28,386+50])
                                            Texp_ident "b/169"
                                        ]
                                  ]
                            ]
                      ]
                ]
                expression (ast/supported_version/supported_version.ml[29,442+2]..ast/supported_version/supported_version.ml[29,442+41])
                  Texp_ifthenelse
                  expression (ast/supported_version/supported_version.ml[29,442+5]..ast/supported_version/supported_version.ml[29,442+19])
                    Texp_apply
                    expression (ast/supported_version/supported_version.ml[29,442+5]..ast/supported_version/supported_version.ml[29,442+13])
                      Texp_ident "Stdlib!.List.mem"
                    [
                      <arg>
                        Nolabel
                        expression (ast/supported_version/supported_version.ml[29,442+14]..ast/supported_version/supported_version.ml[29,442+15])
                          Texp_ident "t/134"
                      <arg>
                        Nolabel
                        expression (ast/supported_version/supported_version.ml[29,442+16]..ast/supported_version/supported_version.ml[29,442+19])
                          Texp_ident "all/87"
                    ]
                  expression (ast/supported_version/supported_version.ml[29,442+25]..ast/supported_version/supported_version.ml[29,442+31])
                    Texp_construct "Some"
                    [
                      expression (ast/supported_version/supported_version.ml[29,442+30]..ast/supported_version/supported_version.ml[29,442+31])
                        Texp_ident "t/134"
                    ]
                  Some
                    expression (ast/supported_version/supported_version.ml[29,442+37]..ast/supported_version/supported_version.ml[29,442+41])
                      Texp_construct "None"
                      []
          ]
    ]
]

(seq
  (let
    (all/87 =
       [0:
        [0: 4 2]
        [0:
         [0: 4 3]
         [0:
          [0: 4 4]
          [0:
           [0: 4 5]
           [0:
            [0: 4 6]
            [0:
             [0: 4 7]
             [0:
              [0: 4 8]
              [0:
               [0: 4 9]
               [0:
                [0: 4 10]
                [0:
                 [0: 4 11]
                 [0:
                  [0: 4 12]
                  [0: [0: 4 13] [0: [0: 4 14] [0: [0: 5 0] [0: [0: 5 1] 0]]]]]]]]]]]]]]])
    (setfield_ptr(root-init) 0 (global Supported_version!) all/87))
  (let
    (to_string/88 =
       (function (param/334[int], param/335[int])
         (let (b/91 =a param/335 a/90 =a param/334)
           (if (< a/90 5)
             (apply (field_imm 3 (global Stdlib__printf!))
               [0: [4: 0 0 0 [12: '.' [4: 0 [0: 2 2] 0 0]]] "%d.%02d"] a/90
               b/91)
             (apply (field_imm 3 (global Stdlib__printf!))
               [0: [4: 0 0 0 [12: '.' [4: 0 0 0 0]]] "%d.%d"] a/90 b/91)))))
    (setfield_ptr(root-init) 1 (global Supported_version!) to_string/88))
  (let
    (to_int/126 =
       (function (param/336[int], param/337[int]) : int
         (let (b/129 =a param/337 a/128 =a param/336)
           (+ (* a/128 100) b/129))))
    (setfield_ptr(root-init) 2 (global Supported_version!) to_int/126))
  (let
    (of_string/131 =
       (function s/133
         (let
           (t/134 =
              (apply (field_imm 3 (global Stdlib__scanf!)) s/133
                [0: [4: 12 0 0 [12: '.' [4: 12 0 0 0]]] "%u.%u"]
                (function a/168[int] b/169[int]
                  (makeblock 0 (int,int) a/168 b/169))))
           (if
             (apply (field_imm 35 (global Stdlib__list!)) t/134
               (field_imm 0 (global Supported_version!)))
             (makeblock 0 t/134) 0))))
    (setfield_ptr(root-init) 3 (global Supported_version!) of_string/131))
  0)
(seq
  (let
    (all/87 =
       [0:
        [0: 4 2]
        [0:
         [0: 4 3]
         [0:
          [0: 4 4]
          [0:
           [0: 4 5]
           [0:
            [0: 4 6]
            [0:
             [0: 4 7]
             [0:
              [0: 4 8]
              [0:
               [0: 4 9]
               [0:
                [0: 4 10]
                [0:
                 [0: 4 11]
                 [0:
                  [0: 4 12]
                  [0: [0: 4 13] [0: [0: 4 14] [0: [0: 5 0] [0: [0: 5 1] 0]]]]]]]]]]]]]]])
    (setfield_ptr(root-init) 0 (global Supported_version!) all/87))
  (let
    (to_string/88 =
       (function (param/334[int], param/335[int])
         (if (< param/334 5)
           (apply (field_imm 3 (global Stdlib__printf!))
             [0: [4: 0 0 0 [12: '.' [4: 0 [0: 2 2] 0 0]]] "%d.%02d"]
             param/334 param/335)
           (apply (field_imm 3 (global Stdlib__printf!))
             [0: [4: 0 0 0 [12: '.' [4: 0 0 0 0]]] "%d.%d"] param/334
             param/335))))
    (setfield_ptr(root-init) 1 (global Supported_version!) to_string/88))
  (let
    (to_int/126 =
       (function (param/336[int], param/337[int]) : int
         (+ (* param/336 100) param/337)))
    (setfield_ptr(root-init) 2 (global Supported_version!) to_int/126))
  (let
    (of_string/131 =
       (function s/133
         (let
           (t/134 =
              (apply (field_imm 3 (global Stdlib__scanf!)) s/133
                [0: [4: 12 0 0 [12: '.' [4: 12 0 0 0]]] "%u.%u"]
                (function a/168[int] b/169[int]
                  (makeblock 0 (int,int) a/168 b/169))))
           (if
             (apply (field_imm 35 (global Stdlib__list!)) t/134
               (field_imm 0 (global Supported_version!)))
             (makeblock 0 t/134) 0))))
    (setfield_ptr(root-init) 3 (global Supported_version!) of_string/131))
  0)
