[
  structure_item (astlib/pp/pp_rewrite.ml[1,0+0]..[184,12001+1])
    Pstr_value Nonrec
    [
      <def>
        pattern (astlib/pp/pp_rewrite.ml[1,0+4]..[1,0+22])
          Ppat_var "__ocaml_lex_tables" (astlib/pp/pp_rewrite.ml[1,0+4]..[1,0+22])
        expression (astlib/pp/pp_rewrite.ml[1,0+25]..[184,12001+1])
          Pexp_record
          [
            "Lexing.lex_base" (astlib/pp/pp_rewrite.ml[2,27+2]..[2,27+17])
              expression (astlib/pp/pp_rewrite.ml[3,47+3]..[8,397+53])
                Pexp_constant PConst_string("\000\000\251\255\252\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\002\000\002\000\000\000\001\000\000\000\255\255\001\000\000\000\002\000\001\000\004\000\004\000\001\000\002\000\003\000\005\000\254\255\005\000\002\000\003\000\006\000\003\000\001\000\003\000\t\000\b\000\b\000\003\000\005\000\006\000\b\000\253\255",(astlib/pp/pp_rewrite.ml[3,47+4]..[8,397+52]),None)
            "Lexing.lex_backtrk" (astlib/pp/pp_rewrite.ml[9,452+2]..[9,452+20])
              expression (astlib/pp/pp_rewrite.ml[10,475+3]..[15,825+53])
                Pexp_constant PConst_string("\255\255\255\255\255\255\003\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255",(astlib/pp/pp_rewrite.ml[10,475+4]..[15,825+52]),None)
            "Lexing.lex_default" (astlib/pp/pp_rewrite.ml[16,880+2]..[16,880+20])
              expression (astlib/pp/pp_rewrite.ml[17,903+3]..[22,1253+53])
                Pexp_constant PConst_string("\002\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\017\000\255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\027\000\028\000\255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255*\000+\000\255\255\000\000",(astlib/pp/pp_rewrite.ml[17,903+4]..[22,1253+52]),None)
            "Lexing.lex_trans" (astlib/pp/pp_rewrite.ml[23,1308+2]..[23,1308+18])
              expression (astlib/pp/pp_rewrite.ml[24,1329+3]..[57,3639+21])
                Pexp_constant PConst_stringt\000\024\000\n\000\"\000\014\000\006\000\023\000&\000\005\000'\000\000\000\022\000%\000\b\000\031\000\015\000\000\000\012\000\rastlib/pp/pp_rewrite.ml[24,1329+4]..[57,3639+20]),None)
            "Lexing.lex_check" (astlib/pp/pp_rewrite.ml[58,3662+2]..[58,3662+18])
              expression (astlib/pp/pp_rewrite.ml[59,3683+3]..[92,5993+21])
                Pexp_constant PConst_stringr\000\005\000\022\000%\000\004\000&\000\255\255\021\000$\000\007\000\b\000\014\000\255\255\011\000\012\000\t\000\nastlib/pp/pp_rewrite.ml[59,3683+4]..[92,5993+20]),None)
            "Lexing.lex_base_code" (astlib/pp/pp_rewrite.ml[93,6016+2]..[93,6016+22])
              expression (astlib/pp/pp_rewrite.ml[94,6041+3]..[99,6391+53])
                Pexp_constant PConst_string("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\003\000\000\000\000\000\n\000",(astlib/pp/pp_rewrite.ml[94,6041+4]..[99,6391+52]),None)
            "Lexing.lex_backtrk_code" (astlib/pp/pp_rewrite.ml[100,6446+2]..[100,6446+25])
              expression (astlib/pp/pp_rewrite.ml[101,6474+3]..[106,6824+53])
                Pexp_constant PConst_string("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000",(astlib/pp/pp_rewrite.ml[101,6474+4]..[106,6824+52]),None)
            "Lexing.lex_default_code" (astlib/pp/pp_rewrite.ml[107,6879+2]..[107,6879+25])
              expression (astlib/pp/pp_rewrite.ml[108,6907+3]..[113,7257+53])
                Pexp_constant PConst_string("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000",(astlib/pp/pp_rewrite.ml[108,6907+4]..[113,7257+52]),None)
            "Lexing.lex_trans_code" (astlib/pp/pp_rewrite.ml[114,7312+2]..[114,7312+23])
              expression (astlib/pp/pp_rewrite.ml[115,7338+3]..[147,9578+37])
                Pexp_constant PConst_stringastlib/pp/pp_rewrite.ml[115,7338+4]..[147,9578+36]),None)
            "Lexing.lex_check_code" (astlib/pp/pp_rewrite.ml[148,9617+2]..[148,9617+23])
              expression (astlib/pp/pp_rewrite.ml[149,9643+3]..[181,11883+37])
                Pexp_constant PConst_stringastlib/pp/pp_rewrite.ml[149,9643+4]..[181,11883+36]),None)
            "Lexing.lex_code" (astlib/pp/pp_rewrite.ml[182,11922+2]..[182,11922+17])
              expression (astlib/pp/pp_rewrite.ml[183,11942+3]..[183,11942+57])
                Pexp_constant PConst_string("\255\001\255\255\000\001\255\002\255\255\000\002\255",(astlib/pp/pp_rewrite.ml[183,11942+4]..[183,11942+56]),None)
          ]
          None
    ]
  structure_item (astlib/pp/pp_rewrite.ml[186,12004+0]..[266,14777+79])
    Pstr_value Rec
    [
      <def>
        pattern (astlib/pp/pp_rewrite.ml[186,12004+8]..[186,12004+15])
          Ppat_var "rewrite" (astlib/pp/pp_rewrite.ml[186,12004+8]..[186,12004+15])
        expression (astlib/pp/pp_rewrite.ml[186,12004+16]..[187,12054+103]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (astlib/pp/pp_rewrite.ml[186,12004+16]..[186,12004+26])
            Ppat_var "is_current" (astlib/pp/pp_rewrite.ml[186,12004+16]..[186,12004+26])
          expression (astlib/pp/pp_rewrite.ml[186,12004+27]..[187,12054+103]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (astlib/pp/pp_rewrite.ml[186,12004+27]..[186,12004+40])
              Ppat_var "ocaml_version" (astlib/pp/pp_rewrite.ml[186,12004+27]..[186,12004+40])
            expression (astlib/pp/pp_rewrite.ml[186,12004+41]..[187,12054+103]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (astlib/pp/pp_rewrite.ml[186,12004+41]..[186,12004+47])
                Ppat_var "lexbuf" (astlib/pp/pp_rewrite.ml[186,12004+41]..[186,12004+47])
              expression (astlib/pp/pp_rewrite.ml[187,12054+2]..[187,12054+103])
                Pexp_sequence
                expression (astlib/pp/pp_rewrite.ml[187,12054+2]..[187,12054+44])
                  Pexp_setfield
                  expression (astlib/pp/pp_rewrite.ml[187,12054+2]..[187,12054+8])
                    Pexp_ident "lexbuf" (astlib/pp/pp_rewrite.ml[187,12054+2]..[187,12054+8])
                  "Lexing.lex_mem" (astlib/pp/pp_rewrite.ml[187,12054+9]..[187,12054+23])
                  expression (astlib/pp/pp_rewrite.ml[187,12054+27]..[187,12054+44])
                    Pexp_apply
                    expression (astlib/pp/pp_rewrite.ml[187,12054+27]..[187,12054+37])
                      Pexp_ident "Array.make" (astlib/pp/pp_rewrite.ml[187,12054+27]..[187,12054+37])
                    [
                      <arg>
                      Nolabel
                        expression (astlib/pp/pp_rewrite.ml[187,12054+38]..[187,12054+39])
                          Pexp_constant PConst_int (3,None)
                      <arg>
                      Nolabel
                        expression (astlib/pp/pp_rewrite.ml[187,12054+40]..[187,12054+44])
                          Pexp_constant PConst_int (-1,None)
                    ]
                expression (astlib/pp/pp_rewrite.ml[187,12054+46]..[187,12054+103])
                  Pexp_apply
                  expression (astlib/pp/pp_rewrite.ml[187,12054+46]..[187,12054+69])
                    Pexp_ident "__ocaml_lex_rewrite_rec" (astlib/pp/pp_rewrite.ml[187,12054+46]..[187,12054+69])
                  [
                    <arg>
                    Nolabel
                      expression (astlib/pp/pp_rewrite.ml[187,12054+70]..[187,12054+80])
                        Pexp_ident "is_current" (astlib/pp/pp_rewrite.ml[187,12054+70]..[187,12054+80])
                    <arg>
                    Nolabel
                      expression (astlib/pp/pp_rewrite.ml[187,12054+81]..[187,12054+94])
                        Pexp_ident "ocaml_version" (astlib/pp/pp_rewrite.ml[187,12054+81]..[187,12054+94])
                    <arg>
                    Nolabel
                      expression (astlib/pp/pp_rewrite.ml[187,12054+95]..[187,12054+101])
                        Pexp_ident "lexbuf" (astlib/pp/pp_rewrite.ml[187,12054+95]..[187,12054+101])
                    <arg>
                    Nolabel
                      expression (astlib/pp/pp_rewrite.ml[187,12054+102]..[187,12054+103])
                        Pexp_constant PConst_int (0,None)
                  ]
      <def>
        pattern (astlib/pp/pp_rewrite.ml[188,12158+4]..[188,12158+27])
          Ppat_var "__ocaml_lex_rewrite_rec" (astlib/pp/pp_rewrite.ml[188,12158+4]..[188,12158+27])
        expression (astlib/pp/pp_rewrite.ml[188,12158+28]..[266,14777+79]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (astlib/pp/pp_rewrite.ml[188,12158+28]..[188,12158+38])
            Ppat_var "is_current" (astlib/pp/pp_rewrite.ml[188,12158+28]..[188,12158+38])
          expression (astlib/pp/pp_rewrite.ml[188,12158+39]..[266,14777+79]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (astlib/pp/pp_rewrite.ml[188,12158+39]..[188,12158+52])
              Ppat_var "ocaml_version" (astlib/pp/pp_rewrite.ml[188,12158+39]..[188,12158+52])
            expression (astlib/pp/pp_rewrite.ml[188,12158+53]..[266,14777+79]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (astlib/pp/pp_rewrite.ml[188,12158+53]..[188,12158+59])
                Ppat_var "lexbuf" (astlib/pp/pp_rewrite.ml[188,12158+53]..[188,12158+59])
              expression (astlib/pp/pp_rewrite.ml[188,12158+60]..[266,14777+79]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (astlib/pp/pp_rewrite.ml[188,12158+60]..[188,12158+77])
                  Ppat_var "__ocaml_lex_state" (astlib/pp/pp_rewrite.ml[188,12158+60]..[188,12158+77])
                expression (astlib/pp/pp_rewrite.ml[189,12238+2]..[266,14777+79])
                  Pexp_match
                  expression (astlib/pp/pp_rewrite.ml[189,12238+8]..[189,12238+69])
                    Pexp_apply
                    expression (astlib/pp/pp_rewrite.ml[189,12238+8]..[189,12238+25])
                      Pexp_ident "Lexing.new_engine" (astlib/pp/pp_rewrite.ml[189,12238+8]..[189,12238+25])
                    [
                      <arg>
                      Nolabel
                        expression (astlib/pp/pp_rewrite.ml[189,12238+26]..[189,12238+44])
                          Pexp_ident "__ocaml_lex_tables" (astlib/pp/pp_rewrite.ml[189,12238+26]..[189,12238+44])
                      <arg>
                      Nolabel
                        expression (astlib/pp/pp_rewrite.ml[189,12238+45]..[189,12238+62])
                          Pexp_ident "__ocaml_lex_state" (astlib/pp/pp_rewrite.ml[189,12238+45]..[189,12238+62])
                      <arg>
                      Nolabel
                        expression (astlib/pp/pp_rewrite.ml[189,12238+63]..[189,12238+69])
                          Pexp_ident "lexbuf" (astlib/pp/pp_rewrite.ml[189,12238+63]..[189,12238+69])
                    ]
                  [
                    <case>
                      pattern (astlib/pp/pp_rewrite.ml[190,12313+8]..[190,12313+9])
                        Ppat_constant PConst_int (0,None)
                      expression (astlib/pp/pp_rewrite.ml[191,12326+0]..astlib/pp/pp_rewrite.mll[9,12762+5])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (astlib/pp/pp_rewrite.mll[2,12361+41]..[2,12361+42])
                              Ppat_var "s" (astlib/pp/pp_rewrite.mll[2,12361+41]..[2,12361+42])
                            expression (astlib/pp/pp_rewrite.ml[195,12436+2]..[195,12436+95])
                              Pexp_apply
                              expression (astlib/pp/pp_rewrite.ml[195,12436+2]..[195,12436+19])
                                Pexp_ident "Lexing.sub_lexeme" (astlib/pp/pp_rewrite.ml[195,12436+2]..[195,12436+19])
                              [
                                <arg>
                                Nolabel
                                  expression (astlib/pp/pp_rewrite.ml[195,12436+20]..[195,12436+26])
                                    Pexp_ident "lexbuf" (astlib/pp/pp_rewrite.ml[195,12436+20]..[195,12436+26])
                                <arg>
                                Nolabel
                                  expression (astlib/pp/pp_rewrite.ml[195,12436+27]..[195,12436+61])
                                    Pexp_apply
                                    expression (astlib/pp/pp_rewrite.ml[195,12436+56]..[195,12436+57])
                                      Pexp_ident "+" (astlib/pp/pp_rewrite.ml[195,12436+56]..[195,12436+57])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (astlib/pp/pp_rewrite.ml[195,12436+28]..[195,12436+55])
                                          Pexp_field
                                          expression (astlib/pp/pp_rewrite.ml[195,12436+28]..[195,12436+34])
                                            Pexp_ident "lexbuf" (astlib/pp/pp_rewrite.ml[195,12436+28]..[195,12436+34])
                                          "Lexing.lex_start_pos" (astlib/pp/pp_rewrite.ml[195,12436+35]..[195,12436+55])
                                      <arg>
                                      Nolabel
                                        expression (astlib/pp/pp_rewrite.ml[195,12436+58]..[195,12436+60])
                                          Pexp_constant PConst_int (13,None)
                                    ]
                                <arg>
                                Nolabel
                                  expression (astlib/pp/pp_rewrite.ml[195,12436+62]..[195,12436+95])
                                    Pexp_apply
                                    expression (astlib/pp/pp_rewrite.ml[195,12436+90]..[195,12436+91])
                                      Pexp_ident "+" (astlib/pp/pp_rewrite.ml[195,12436+90]..[195,12436+91])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (astlib/pp/pp_rewrite.ml[195,12436+63]..[195,12436+89])
                                          Pexp_field
                                          expression (astlib/pp/pp_rewrite.ml[195,12436+63]..[195,12436+69])
                                            Pexp_ident "lexbuf" (astlib/pp/pp_rewrite.ml[195,12436+63]..[195,12436+69])
                                          "Lexing.lex_curr_pos" (astlib/pp/pp_rewrite.ml[195,12436+70]..[195,12436+89])
                                      <arg>
                                      Nolabel
                                        expression (astlib/pp/pp_rewrite.ml[195,12436+92]..[195,12436+94])
                                          Pexp_constant PConst_int (-2,None)
                                    ]
                              ]
                        ]
                        expression (astlib/pp/pp_rewrite.mll[3,12566+4]..[9,12762+5])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (astlib/pp/pp_rewrite.mll[3,12566+10]..[3,12566+15])
                                Ppat_var "chunk" (astlib/pp/pp_rewrite.mll[3,12566+10]..[3,12566+15])
                              expression (astlib/pp/pp_rewrite.mll[3,12566+18]..[5,12647+33])
                                Pexp_ifthenelse
                                expression (astlib/pp/pp_rewrite.mll[3,12566+21]..[3,12566+31])
                                  Pexp_ident "is_current" (astlib/pp/pp_rewrite.mll[3,12566+21]..[3,12566+31])
                                expression (astlib/pp/pp_rewrite.mll[4,12598+13]..[4,12598+48])
                                  Pexp_apply
                                  expression (astlib/pp/pp_rewrite.mll[4,12598+29]..[4,12598+30])
                                    Pexp_ident "^" (astlib/pp/pp_rewrite.mll[4,12598+29]..[4,12598+30])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (astlib/pp/pp_rewrite.mll[4,12598+13]..[4,12598+28])
                                        Pexp_constant PConst_string("             ",(astlib/pp/pp_rewrite.mll[4,12598+14]..[4,12598+27]),None)
                                    <arg>
                                    Nolabel
                                      expression (astlib/pp/pp_rewrite.mll[4,12598+31]..[4,12598+48])
                                        Pexp_apply
                                        expression (astlib/pp/pp_rewrite.mll[4,12598+33]..[4,12598+34])
                                          Pexp_ident "^" (astlib/pp/pp_rewrite.mll[4,12598+33]..[4,12598+34])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (astlib/pp/pp_rewrite.mll[4,12598+31]..[4,12598+32])
                                              Pexp_ident "s" (astlib/pp/pp_rewrite.mll[4,12598+31]..[4,12598+32])
                                          <arg>
                                          Nolabel
                                            expression (astlib/pp/pp_rewrite.mll[4,12598+44]..[4,12598+48])
                                              Pexp_constant PConst_string("  ",(astlib/pp/pp_rewrite.mll[4,12598+45]..[4,12598+47]),None)
                                        ]
                                  ]
                                Some
                                  expression (astlib/pp/pp_rewrite.mll[5,12647+13]..[5,12647+33])
                                    Pexp_apply
                                    expression (astlib/pp/pp_rewrite.mll[5,12647+13]..[5,12647+26])
                                      Pexp_ident "Lexing.lexeme" (astlib/pp/pp_rewrite.mll[5,12647+13]..[5,12647+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (astlib/pp/pp_rewrite.mll[5,12647+27]..[5,12647+33])
                                          Pexp_ident "lexbuf" (astlib/pp/pp_rewrite.mll[5,12647+27]..[5,12647+33])
                                    ]
                          ]
                          expression (astlib/pp/pp_rewrite.mll[7,12690+6]..[8,12716+45])
                            Pexp_sequence
                            expression (astlib/pp/pp_rewrite.mll[7,12690+6]..[7,12690+24])
                              Pexp_apply
                              expression (astlib/pp/pp_rewrite.mll[7,12690+6]..[7,12690+18])
                                Pexp_ident "print_string" (astlib/pp/pp_rewrite.mll[7,12690+6]..[7,12690+18])
                              [
                                <arg>
                                Nolabel
                                  expression (astlib/pp/pp_rewrite.mll[7,12690+19]..[7,12690+24])
                                    Pexp_ident "chunk" (astlib/pp/pp_rewrite.mll[7,12690+19]..[7,12690+24])
                              ]
                            expression (astlib/pp/pp_rewrite.mll[8,12716+6]..[8,12716+45])
                              Pexp_apply
                              expression (astlib/pp/pp_rewrite.mll[8,12716+6]..[8,12716+13])
                                Pexp_ident "rewrite" (astlib/pp/pp_rewrite.mll[8,12716+6]..[8,12716+13])
                              [
                                <arg>
                                Nolabel
                                  expression (astlib/pp/pp_rewrite.mll[8,12716+14]..[8,12716+24])
                                    Pexp_ident "is_current" (astlib/pp/pp_rewrite.mll[8,12716+14]..[8,12716+24])
                                <arg>
                                Nolabel
                                  expression (astlib/pp/pp_rewrite.mll[8,12716+25]..[8,12716+38])
                                    Pexp_ident "ocaml_version" (astlib/pp/pp_rewrite.mll[8,12716+25]..[8,12716+38])
                                <arg>
                                Nolabel
                                  expression (astlib/pp/pp_rewrite.mll[8,12716+39]..[8,12716+45])
                                    Pexp_ident "lexbuf" (astlib/pp/pp_rewrite.mll[8,12716+39]..[8,12716+45])
                              ]
                    <case>
                      pattern (astlib/pp/pp_rewrite.ml[206,12801+4]..[206,12801+5])
                        Ppat_constant PConst_int (1,None)
                      expression (astlib/pp/pp_rewrite.ml[207,12810+0]..astlib/pp/pp_rewrite.mll[17,13524+5])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (astlib/pp/pp_rewrite.mll[10,12846+46]..[10,12846+47])
                              Ppat_var "v" (astlib/pp/pp_rewrite.mll[10,12846+46]..[10,12846+47])
                            expression (astlib/pp/pp_rewrite.ml[211,12926+2]..[211,12926+87])
                              Pexp_apply
                              expression (astlib/pp/pp_rewrite.ml[211,12926+2]..[211,12926+19])
                                Pexp_ident "Lexing.sub_lexeme" (astlib/pp/pp_rewrite.ml[211,12926+2]..[211,12926+19])
                              [
                                <arg>
                                Nolabel
                                  expression (astlib/pp/pp_rewrite.ml[211,12926+20]..[211,12926+26])
                                    Pexp_ident "lexbuf" (astlib/pp/pp_rewrite.ml[211,12926+20]..[211,12926+26])
                                <arg>
                                Nolabel
                                  expression (astlib/pp/pp_rewrite.ml[211,12926+27]..[211,12926+61])
                                    Pexp_apply
                                    expression (astlib/pp/pp_rewrite.ml[211,12926+56]..[211,12926+57])
                                      Pexp_ident "+" (astlib/pp/pp_rewrite.ml[211,12926+56]..[211,12926+57])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (astlib/pp/pp_rewrite.ml[211,12926+28]..[211,12926+55])
                                          Pexp_field
                                          expression (astlib/pp/pp_rewrite.ml[211,12926+28]..[211,12926+34])
                                            Pexp_ident "lexbuf" (astlib/pp/pp_rewrite.ml[211,12926+28]..[211,12926+34])
                                          "Lexing.lex_start_pos" (astlib/pp/pp_rewrite.ml[211,12926+35]..[211,12926+55])
                                      <arg>
                                      Nolabel
                                        expression (astlib/pp/pp_rewrite.ml[211,12926+58]..[211,12926+60])
                                          Pexp_constant PConst_int (14,None)
                                    ]
                                <arg>
                                Nolabel
                                  expression (astlib/pp/pp_rewrite.ml[211,12926+62]..[211,12926+87])
                                    Pexp_apply
                                    expression (astlib/pp/pp_rewrite.ml[211,12926+62]..[211,12926+87]) ghost
                                      Pexp_ident "Array.get" (astlib/pp/pp_rewrite.ml[211,12926+62]..[211,12926+87]) ghost
                                    [
                                      <arg>
                                      Nolabel
                                        expression (astlib/pp/pp_rewrite.ml[211,12926+62]..[211,12926+83])
                                          Pexp_field
                                          expression (astlib/pp/pp_rewrite.ml[211,12926+62]..[211,12926+68])
                                            Pexp_ident "lexbuf" (astlib/pp/pp_rewrite.ml[211,12926+62]..[211,12926+68])
                                          "Lexing.lex_mem" (astlib/pp/pp_rewrite.ml[211,12926+69]..[211,12926+83])
                                      <arg>
                                      Nolabel
                                        expression (astlib/pp/pp_rewrite.ml[211,12926+85]..[211,12926+86])
                                          Pexp_constant PConst_int (0,None)
                                    ]
                              ]
                          <def>
                            pattern (astlib/pp/pp_rewrite.mll[10,13050+65]..[10,13050+66])
                              Ppat_var "s" (astlib/pp/pp_rewrite.mll[10,13050+65]..[10,13050+66])
                            expression (astlib/pp/pp_rewrite.ml[216,13149+2]..[216,13149+92])
                              Pexp_apply
                              expression (astlib/pp/pp_rewrite.ml[216,13149+2]..[216,13149+19])
                                Pexp_ident "Lexing.sub_lexeme" (astlib/pp/pp_rewrite.ml[216,13149+2]..[216,13149+19])
                              [
                                <arg>
                                Nolabel
                                  expression (astlib/pp/pp_rewrite.ml[216,13149+20]..[216,13149+26])
                                    Pexp_ident "lexbuf" (astlib/pp/pp_rewrite.ml[216,13149+20]..[216,13149+26])
                                <arg>
                                Nolabel
                                  expression (astlib/pp/pp_rewrite.ml[216,13149+27]..[216,13149+58])
                                    Pexp_apply
                                    expression (astlib/pp/pp_rewrite.ml[216,13149+54]..[216,13149+55])
                                      Pexp_ident "+" (astlib/pp/pp_rewrite.ml[216,13149+54]..[216,13149+55])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (astlib/pp/pp_rewrite.ml[216,13149+28]..[216,13149+53])
                                          Pexp_apply
                                          expression (astlib/pp/pp_rewrite.ml[216,13149+28]..[216,13149+53]) ghost
                                            Pexp_ident "Array.get" (astlib/pp/pp_rewrite.ml[216,13149+28]..[216,13149+53]) ghost
                                          [
                                            <arg>
                                            Nolabel
                                              expression (astlib/pp/pp_rewrite.ml[216,13149+28]..[216,13149+49])
                                                Pexp_field
                                                expression (astlib/pp/pp_rewrite.ml[216,13149+28]..[216,13149+34])
                                                  Pexp_ident "lexbuf" (astlib/pp/pp_rewrite.ml[216,13149+28]..[216,13149+34])
                                                "Lexing.lex_mem" (astlib/pp/pp_rewrite.ml[216,13149+35]..[216,13149+49])
                                            <arg>
                                            Nolabel
                                              expression (astlib/pp/pp_rewrite.ml[216,13149+51]..[216,13149+52])
                                                Pexp_constant PConst_int (0,None)
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (astlib/pp/pp_rewrite.ml[216,13149+56]..[216,13149+57])
                                          Pexp_constant PConst_int (1,None)
                                    ]
                                <arg>
                                Nolabel
                                  expression (astlib/pp/pp_rewrite.ml[216,13149+59]..[216,13149+92])
                                    Pexp_apply
                                    expression (astlib/pp/pp_rewrite.ml[216,13149+87]..[216,13149+88])
                                      Pexp_ident "+" (astlib/pp/pp_rewrite.ml[216,13149+87]..[216,13149+88])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (astlib/pp/pp_rewrite.ml[216,13149+60]..[216,13149+86])
                                          Pexp_field
                                          expression (astlib/pp/pp_rewrite.ml[216,13149+60]..[216,13149+66])
                                            Pexp_ident "lexbuf" (astlib/pp/pp_rewrite.ml[216,13149+60]..[216,13149+66])
                                          "Lexing.lex_curr_pos" (astlib/pp/pp_rewrite.ml[216,13149+67]..[216,13149+86])
                                      <arg>
                                      Nolabel
                                        expression (astlib/pp/pp_rewrite.ml[216,13149+89]..[216,13149+91])
                                          Pexp_constant PConst_int (-2,None)
                                    ]
                              ]
                        ]
                        expression (astlib/pp/pp_rewrite.mll[11,13277+4]..[17,13524+5])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (astlib/pp/pp_rewrite.mll[11,13277+10]..[11,13277+15])
                                Ppat_var "chunk" (astlib/pp/pp_rewrite.mll[11,13277+10]..[11,13277+15])
                              expression (astlib/pp/pp_rewrite.mll[11,13277+18]..[13,13409+33])
                                Pexp_ifthenelse
                                expression (astlib/pp/pp_rewrite.mll[11,13277+21]..[11,13277+41])
                                  Pexp_apply
                                  expression (astlib/pp/pp_rewrite.mll[11,13277+24]..[11,13277+26])
                                    Pexp_ident "<=" (astlib/pp/pp_rewrite.mll[11,13277+24]..[11,13277+26])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (astlib/pp/pp_rewrite.mll[11,13277+22]..[11,13277+23])
                                        Pexp_ident "v" (astlib/pp/pp_rewrite.mll[11,13277+22]..[11,13277+23])
                                    <arg>
                                    Nolabel
                                      expression (astlib/pp/pp_rewrite.mll[11,13277+27]..[11,13277+40])
                                        Pexp_ident "ocaml_version" (astlib/pp/pp_rewrite.mll[11,13277+27]..[11,13277+40])
                                  ]
                                expression (astlib/pp/pp_rewrite.mll[12,13319+13]..[12,13319+89])
                                  Pexp_apply
                                  expression (astlib/pp/pp_rewrite.mll[12,13319+30]..[12,13319+31])
                                    Pexp_ident "^" (astlib/pp/pp_rewrite.mll[12,13319+30]..[12,13319+31])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (astlib/pp/pp_rewrite.mll[12,13319+13]..[12,13319+29])
                                        Pexp_constant PConst_string("              ",(astlib/pp/pp_rewrite.mll[12,13319+14]..[12,13319+28]),None)
                                    <arg>
                                    Nolabel
                                      expression (astlib/pp/pp_rewrite.mll[12,13319+32]..[12,13319+89])
                                        Pexp_apply
                                        expression (astlib/pp/pp_rewrite.mll[12,13319+70]..[12,13319+71])
                                          Pexp_ident "^" (astlib/pp/pp_rewrite.mll[12,13319+70]..[12,13319+71])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (astlib/pp/pp_rewrite.mll[12,13319+32]..[12,13319+69])
                                              Pexp_apply
                                              expression (astlib/pp/pp_rewrite.mll[12,13319+32]..[12,13319+43])
                                                Pexp_ident "String.make" (astlib/pp/pp_rewrite.mll[12,13319+32]..[12,13319+43])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (astlib/pp/pp_rewrite.mll[12,13319+44]..[12,13319+65])
                                                    Pexp_apply
                                                    expression (astlib/pp/pp_rewrite.mll[12,13319+61]..[12,13319+62])
                                                      Pexp_ident "+" (astlib/pp/pp_rewrite.mll[12,13319+61]..[12,13319+62])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (astlib/pp/pp_rewrite.mll[12,13319+45]..[12,13319+60])
                                                          Pexp_apply
                                                          expression (astlib/pp/pp_rewrite.mll[12,13319+45]..[12,13319+58])
                                                            Pexp_ident "String.length" (astlib/pp/pp_rewrite.mll[12,13319+45]..[12,13319+58])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (astlib/pp/pp_rewrite.mll[12,13319+59]..[12,13319+60])
                                                                Pexp_ident "v" (astlib/pp/pp_rewrite.mll[12,13319+59]..[12,13319+60])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (astlib/pp/pp_rewrite.mll[12,13319+63]..[12,13319+64])
                                                          Pexp_constant PConst_int (1,None)
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (astlib/pp/pp_rewrite.mll[12,13319+66]..[12,13319+69])
                                                    Pexp_constant PConst_char 20
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (astlib/pp/pp_rewrite.mll[12,13319+72]..[12,13319+89])
                                              Pexp_apply
                                              expression (astlib/pp/pp_rewrite.mll[12,13319+74]..[12,13319+75])
                                                Pexp_ident "^" (astlib/pp/pp_rewrite.mll[12,13319+74]..[12,13319+75])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (astlib/pp/pp_rewrite.mll[12,13319+72]..[12,13319+73])
                                                    Pexp_ident "s" (astlib/pp/pp_rewrite.mll[12,13319+72]..[12,13319+73])
                                                <arg>
                                                Nolabel
                                                  expression (astlib/pp/pp_rewrite.mll[12,13319+85]..[12,13319+89])
                                                    Pexp_constant PConst_string("  ",(astlib/pp/pp_rewrite.mll[12,13319+86]..[12,13319+88]),None)
                                              ]
                                        ]
                                  ]
                                Some
                                  expression (astlib/pp/pp_rewrite.mll[13,13409+13]..[13,13409+33])
                                    Pexp_apply
                                    expression (astlib/pp/pp_rewrite.mll[13,13409+13]..[13,13409+26])
                                      Pexp_ident "Lexing.lexeme" (astlib/pp/pp_rewrite.mll[13,13409+13]..[13,13409+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (astlib/pp/pp_rewrite.mll[13,13409+27]..[13,13409+33])
                                          Pexp_ident "lexbuf" (astlib/pp/pp_rewrite.mll[13,13409+27]..[13,13409+33])
                                    ]
                          ]
                          expression (astlib/pp/pp_rewrite.mll[15,13452+6]..[16,13478+45])
                            Pexp_sequence
                            expression (astlib/pp/pp_rewrite.mll[15,13452+6]..[15,13452+24])
                              Pexp_apply
                              expression (astlib/pp/pp_rewrite.mll[15,13452+6]..[15,13452+18])
                                Pexp_ident "print_string" (astlib/pp/pp_rewrite.mll[15,13452+6]..[15,13452+18])
                              [
                                <arg>
                                Nolabel
                                  expression (astlib/pp/pp_rewrite.mll[15,13452+19]..[15,13452+24])
                                    Pexp_ident "chunk" (astlib/pp/pp_rewrite.mll[15,13452+19]..[15,13452+24])
                              ]
                            expression (astlib/pp/pp_rewrite.mll[16,13478+6]..[16,13478+45])
                              Pexp_apply
                              expression (astlib/pp/pp_rewrite.mll[16,13478+6]..[16,13478+13])
                                Pexp_ident "rewrite" (astlib/pp/pp_rewrite.mll[16,13478+6]..[16,13478+13])
                              [
                                <arg>
                                Nolabel
                                  expression (astlib/pp/pp_rewrite.mll[16,13478+14]..[16,13478+24])
                                    Pexp_ident "is_current" (astlib/pp/pp_rewrite.mll[16,13478+14]..[16,13478+24])
                                <arg>
                                Nolabel
                                  expression (astlib/pp/pp_rewrite.mll[16,13478+25]..[16,13478+38])
                                    Pexp_ident "ocaml_version" (astlib/pp/pp_rewrite.mll[16,13478+25]..[16,13478+38])
                                <arg>
                                Nolabel
                                  expression (astlib/pp/pp_rewrite.mll[16,13478+39]..[16,13478+45])
                                    Pexp_ident "lexbuf" (astlib/pp/pp_rewrite.mll[16,13478+39]..[16,13478+45])
                              ]
                    <case>
                      pattern (astlib/pp/pp_rewrite.ml[227,13563+4]..[227,13563+5])
                        Ppat_constant PConst_int (2,None)
                      expression (astlib/pp/pp_rewrite.ml[228,13572+0]..astlib/pp/pp_rewrite.mll[25,14302+5])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (astlib/pp/pp_rewrite.mll[18,13608+50]..[18,13608+51])
                              Ppat_var "v" (astlib/pp/pp_rewrite.mll[18,13608+50]..[18,13608+51])
                            expression (astlib/pp/pp_rewrite.ml[232,13692+2]..[232,13692+87])
                              Pexp_apply
                              expression (astlib/pp/pp_rewrite.ml[232,13692+2]..[232,13692+19])
                                Pexp_ident "Lexing.sub_lexeme" (astlib/pp/pp_rewrite.ml[232,13692+2]..[232,13692+19])
                              [
                                <arg>
                                Nolabel
                                  expression (astlib/pp/pp_rewrite.ml[232,13692+20]..[232,13692+26])
                                    Pexp_ident "lexbuf" (astlib/pp/pp_rewrite.ml[232,13692+20]..[232,13692+26])
                                <arg>
                                Nolabel
                                  expression (astlib/pp/pp_rewrite.ml[232,13692+27]..[232,13692+61])
                                    Pexp_apply
                                    expression (astlib/pp/pp_rewrite.ml[232,13692+56]..[232,13692+57])
                                      Pexp_ident "+" (astlib/pp/pp_rewrite.ml[232,13692+56]..[232,13692+57])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (astlib/pp/pp_rewrite.ml[232,13692+28]..[232,13692+55])
                                          Pexp_field
                                          expression (astlib/pp/pp_rewrite.ml[232,13692+28]..[232,13692+34])
                                            Pexp_ident "lexbuf" (astlib/pp/pp_rewrite.ml[232,13692+28]..[232,13692+34])
                                          "Lexing.lex_start_pos" (astlib/pp/pp_rewrite.ml[232,13692+35]..[232,13692+55])
                                      <arg>
                                      Nolabel
                                        expression (astlib/pp/pp_rewrite.ml[232,13692+58]..[232,13692+60])
                                          Pexp_constant PConst_int (18,None)
                                    ]
                                <arg>
                                Nolabel
                                  expression (astlib/pp/pp_rewrite.ml[232,13692+62]..[232,13692+87])
                                    Pexp_apply
                                    expression (astlib/pp/pp_rewrite.ml[232,13692+62]..[232,13692+87]) ghost
                                      Pexp_ident "Array.get" (astlib/pp/pp_rewrite.ml[232,13692+62]..[232,13692+87]) ghost
                                    [
                                      <arg>
                                      Nolabel
                                        expression (astlib/pp/pp_rewrite.ml[232,13692+62]..[232,13692+83])
                                          Pexp_field
                                          expression (astlib/pp/pp_rewrite.ml[232,13692+62]..[232,13692+68])
                                            Pexp_ident "lexbuf" (astlib/pp/pp_rewrite.ml[232,13692+62]..[232,13692+68])
                                          "Lexing.lex_mem" (astlib/pp/pp_rewrite.ml[232,13692+69]..[232,13692+83])
                                      <arg>
                                      Nolabel
                                        expression (astlib/pp/pp_rewrite.ml[232,13692+85]..[232,13692+86])
                                          Pexp_constant PConst_int (0,None)
                                    ]
                              ]
                          <def>
                            pattern (astlib/pp/pp_rewrite.mll[18,13816+69]..[18,13816+70])
                              Ppat_var "s" (astlib/pp/pp_rewrite.mll[18,13816+69]..[18,13816+70])
                            expression (astlib/pp/pp_rewrite.ml[237,13919+2]..[237,13919+92])
                              Pexp_apply
                              expression (astlib/pp/pp_rewrite.ml[237,13919+2]..[237,13919+19])
                                Pexp_ident "Lexing.sub_lexeme" (astlib/pp/pp_rewrite.ml[237,13919+2]..[237,13919+19])
                              [
                                <arg>
                                Nolabel
                                  expression (astlib/pp/pp_rewrite.ml[237,13919+20]..[237,13919+26])
                                    Pexp_ident "lexbuf" (astlib/pp/pp_rewrite.ml[237,13919+20]..[237,13919+26])
                                <arg>
                                Nolabel
                                  expression (astlib/pp/pp_rewrite.ml[237,13919+27]..[237,13919+58])
                                    Pexp_apply
                                    expression (astlib/pp/pp_rewrite.ml[237,13919+54]..[237,13919+55])
                                      Pexp_ident "+" (astlib/pp/pp_rewrite.ml[237,13919+54]..[237,13919+55])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (astlib/pp/pp_rewrite.ml[237,13919+28]..[237,13919+53])
                                          Pexp_apply
                                          expression (astlib/pp/pp_rewrite.ml[237,13919+28]..[237,13919+53]) ghost
                                            Pexp_ident "Array.get" (astlib/pp/pp_rewrite.ml[237,13919+28]..[237,13919+53]) ghost
                                          [
                                            <arg>
                                            Nolabel
                                              expression (astlib/pp/pp_rewrite.ml[237,13919+28]..[237,13919+49])
                                                Pexp_field
                                                expression (astlib/pp/pp_rewrite.ml[237,13919+28]..[237,13919+34])
                                                  Pexp_ident "lexbuf" (astlib/pp/pp_rewrite.ml[237,13919+28]..[237,13919+34])
                                                "Lexing.lex_mem" (astlib/pp/pp_rewrite.ml[237,13919+35]..[237,13919+49])
                                            <arg>
                                            Nolabel
                                              expression (astlib/pp/pp_rewrite.ml[237,13919+51]..[237,13919+52])
                                                Pexp_constant PConst_int (0,None)
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (astlib/pp/pp_rewrite.ml[237,13919+56]..[237,13919+57])
                                          Pexp_constant PConst_int (1,None)
                                    ]
                                <arg>
                                Nolabel
                                  expression (astlib/pp/pp_rewrite.ml[237,13919+59]..[237,13919+92])
                                    Pexp_apply
                                    expression (astlib/pp/pp_rewrite.ml[237,13919+87]..[237,13919+88])
                                      Pexp_ident "+" (astlib/pp/pp_rewrite.ml[237,13919+87]..[237,13919+88])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (astlib/pp/pp_rewrite.ml[237,13919+60]..[237,13919+86])
                                          Pexp_field
                                          expression (astlib/pp/pp_rewrite.ml[237,13919+60]..[237,13919+66])
                                            Pexp_ident "lexbuf" (astlib/pp/pp_rewrite.ml[237,13919+60]..[237,13919+66])
                                          "Lexing.lex_curr_pos" (astlib/pp/pp_rewrite.ml[237,13919+67]..[237,13919+86])
                                      <arg>
                                      Nolabel
                                        expression (astlib/pp/pp_rewrite.ml[237,13919+89]..[237,13919+91])
                                          Pexp_constant PConst_int (-2,None)
                                    ]
                              ]
                        ]
                        expression (astlib/pp/pp_rewrite.mll[19,14047+4]..[25,14302+5])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (astlib/pp/pp_rewrite.mll[19,14047+10]..[19,14047+15])
                                Ppat_var "chunk" (astlib/pp/pp_rewrite.mll[19,14047+10]..[19,14047+15])
                              expression (astlib/pp/pp_rewrite.mll[19,14047+18]..[21,14187+33])
                                Pexp_ifthenelse
                                expression (astlib/pp/pp_rewrite.mll[19,14047+21]..[19,14047+45])
                                  Pexp_apply
                                  expression (astlib/pp/pp_rewrite.mll[19,14047+21]..[19,14047+24])
                                    Pexp_ident "not" (astlib/pp/pp_rewrite.mll[19,14047+21]..[19,14047+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (astlib/pp/pp_rewrite.mll[19,14047+25]..[19,14047+45])
                                        Pexp_apply
                                        expression (astlib/pp/pp_rewrite.mll[19,14047+28]..[19,14047+30])
                                          Pexp_ident "<=" (astlib/pp/pp_rewrite.mll[19,14047+28]..[19,14047+30])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (astlib/pp/pp_rewrite.mll[19,14047+26]..[19,14047+27])
                                              Pexp_ident "v" (astlib/pp/pp_rewrite.mll[19,14047+26]..[19,14047+27])
                                          <arg>
                                          Nolabel
                                            expression (astlib/pp/pp_rewrite.mll[19,14047+31]..[19,14047+44])
                                              Pexp_ident "ocaml_version" (astlib/pp/pp_rewrite.mll[19,14047+31]..[19,14047+44])
                                        ]
                                  ]
                                expression (astlib/pp/pp_rewrite.mll[20,14093+13]..[20,14093+93])
                                  Pexp_apply
                                  expression (astlib/pp/pp_rewrite.mll[20,14093+34]..[20,14093+35])
                                    Pexp_ident "^" (astlib/pp/pp_rewrite.mll[20,14093+34]..[20,14093+35])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (astlib/pp/pp_rewrite.mll[20,14093+13]..[20,14093+33])
                                        Pexp_constant PConst_string("                  ",(astlib/pp/pp_rewrite.mll[20,14093+14]..[20,14093+32]),None)
                                    <arg>
                                    Nolabel
                                      expression (astlib/pp/pp_rewrite.mll[20,14093+36]..[20,14093+93])
                                        Pexp_apply
                                        expression (astlib/pp/pp_rewrite.mll[20,14093+74]..[20,14093+75])
                                          Pexp_ident "^" (astlib/pp/pp_rewrite.mll[20,14093+74]..[20,14093+75])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (astlib/pp/pp_rewrite.mll[20,14093+36]..[20,14093+73])
                                              Pexp_apply
                                              expression (astlib/pp/pp_rewrite.mll[20,14093+36]..[20,14093+47])
                                                Pexp_ident "String.make" (astlib/pp/pp_rewrite.mll[20,14093+36]..[20,14093+47])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (astlib/pp/pp_rewrite.mll[20,14093+48]..[20,14093+69])
                                                    Pexp_apply
                                                    expression (astlib/pp/pp_rewrite.mll[20,14093+65]..[20,14093+66])
                                                      Pexp_ident "+" (astlib/pp/pp_rewrite.mll[20,14093+65]..[20,14093+66])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (astlib/pp/pp_rewrite.mll[20,14093+49]..[20,14093+64])
                                                          Pexp_apply
                                                          expression (astlib/pp/pp_rewrite.mll[20,14093+49]..[20,14093+62])
                                                            Pexp_ident "String.length" (astlib/pp/pp_rewrite.mll[20,14093+49]..[20,14093+62])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (astlib/pp/pp_rewrite.mll[20,14093+63]..[20,14093+64])
                                                                Pexp_ident "v" (astlib/pp/pp_rewrite.mll[20,14093+63]..[20,14093+64])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (astlib/pp/pp_rewrite.mll[20,14093+67]..[20,14093+68])
                                                          Pexp_constant PConst_int (1,None)
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (astlib/pp/pp_rewrite.mll[20,14093+70]..[20,14093+73])
                                                    Pexp_constant PConst_char 20
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (astlib/pp/pp_rewrite.mll[20,14093+76]..[20,14093+93])
                                              Pexp_apply
                                              expression (astlib/pp/pp_rewrite.mll[20,14093+78]..[20,14093+79])
                                                Pexp_ident "^" (astlib/pp/pp_rewrite.mll[20,14093+78]..[20,14093+79])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (astlib/pp/pp_rewrite.mll[20,14093+76]..[20,14093+77])
                                                    Pexp_ident "s" (astlib/pp/pp_rewrite.mll[20,14093+76]..[20,14093+77])
                                                <arg>
                                                Nolabel
                                                  expression (astlib/pp/pp_rewrite.mll[20,14093+89]..[20,14093+93])
                                                    Pexp_constant PConst_string("  ",(astlib/pp/pp_rewrite.mll[20,14093+90]..[20,14093+92]),None)
                                              ]
                                        ]
                                  ]
                                Some
                                  expression (astlib/pp/pp_rewrite.mll[21,14187+13]..[21,14187+33])
                                    Pexp_apply
                                    expression (astlib/pp/pp_rewrite.mll[21,14187+13]..[21,14187+26])
                                      Pexp_ident "Lexing.lexeme" (astlib/pp/pp_rewrite.mll[21,14187+13]..[21,14187+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (astlib/pp/pp_rewrite.mll[21,14187+27]..[21,14187+33])
                                          Pexp_ident "lexbuf" (astlib/pp/pp_rewrite.mll[21,14187+27]..[21,14187+33])
                                    ]
                          ]
                          expression (astlib/pp/pp_rewrite.mll[23,14230+6]..[24,14256+45])
                            Pexp_sequence
                            expression (astlib/pp/pp_rewrite.mll[23,14230+6]..[23,14230+24])
                              Pexp_apply
                              expression (astlib/pp/pp_rewrite.mll[23,14230+6]..[23,14230+18])
                                Pexp_ident "print_string" (astlib/pp/pp_rewrite.mll[23,14230+6]..[23,14230+18])
                              [
                                <arg>
                                Nolabel
                                  expression (astlib/pp/pp_rewrite.mll[23,14230+19]..[23,14230+24])
                                    Pexp_ident "chunk" (astlib/pp/pp_rewrite.mll[23,14230+19]..[23,14230+24])
                              ]
                            expression (astlib/pp/pp_rewrite.mll[24,14256+6]..[24,14256+45])
                              Pexp_apply
                              expression (astlib/pp/pp_rewrite.mll[24,14256+6]..[24,14256+13])
                                Pexp_ident "rewrite" (astlib/pp/pp_rewrite.mll[24,14256+6]..[24,14256+13])
                              [
                                <arg>
                                Nolabel
                                  expression (astlib/pp/pp_rewrite.mll[24,14256+14]..[24,14256+24])
                                    Pexp_ident "is_current" (astlib/pp/pp_rewrite.mll[24,14256+14]..[24,14256+24])
                                <arg>
                                Nolabel
                                  expression (astlib/pp/pp_rewrite.mll[24,14256+25]..[24,14256+38])
                                    Pexp_ident "ocaml_version" (astlib/pp/pp_rewrite.mll[24,14256+25]..[24,14256+38])
                                <arg>
                                Nolabel
                                  expression (astlib/pp/pp_rewrite.mll[24,14256+39]..[24,14256+45])
                                    Pexp_ident "lexbuf" (astlib/pp/pp_rewrite.mll[24,14256+39]..[24,14256+45])
                              ]
                    <case>
                      pattern (astlib/pp/pp_rewrite.ml[248,14341+4]..[248,14341+5])
                        Ppat_constant PConst_int (3,None)
                      expression (astlib/pp/pp_rewrite.ml[249,14350+0]..astlib/pp/pp_rewrite.mll[29,14590+5])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (astlib/pp/pp_rewrite.mll[26,14386+9]..[26,14386+10])
                              Ppat_var "c" (astlib/pp/pp_rewrite.mll[26,14386+9]..[26,14386+10])
                            expression (astlib/pp/pp_rewrite.ml[253,14429+2]..[253,14429+59])
                              Pexp_apply
                              expression (astlib/pp/pp_rewrite.ml[253,14429+2]..[253,14429+24])
                                Pexp_ident "Lexing.sub_lexeme_char" (astlib/pp/pp_rewrite.ml[253,14429+2]..[253,14429+24])
                              [
                                <arg>
                                Nolabel
                                  expression (astlib/pp/pp_rewrite.ml[253,14429+25]..[253,14429+31])
                                    Pexp_ident "lexbuf" (astlib/pp/pp_rewrite.ml[253,14429+25]..[253,14429+31])
                                <arg>
                                Nolabel
                                  expression (astlib/pp/pp_rewrite.ml[253,14429+32]..[253,14429+59])
                                    Pexp_field
                                    expression (astlib/pp/pp_rewrite.ml[253,14429+32]..[253,14429+38])
                                      Pexp_ident "lexbuf" (astlib/pp/pp_rewrite.ml[253,14429+32]..[253,14429+38])
                                    "Lexing.lex_start_pos" (astlib/pp/pp_rewrite.ml[253,14429+39]..[253,14429+59])
                              ]
                        ]
                        expression (astlib/pp/pp_rewrite.mll[27,14524+4]..[29,14590+5])
                          Pexp_sequence
                          expression (astlib/pp/pp_rewrite.mll[27,14524+6]..[27,14524+18])
                            Pexp_apply
                            expression (astlib/pp/pp_rewrite.mll[27,14524+6]..[27,14524+16])
                              Pexp_ident "print_char" (astlib/pp/pp_rewrite.mll[27,14524+6]..[27,14524+16])
                            [
                              <arg>
                              Nolabel
                                expression (astlib/pp/pp_rewrite.mll[27,14524+17]..[27,14524+18])
                                  Pexp_ident "c" (astlib/pp/pp_rewrite.mll[27,14524+17]..[27,14524+18])
                            ]
                          expression (astlib/pp/pp_rewrite.mll[28,14544+6]..[28,14544+45])
                            Pexp_apply
                            expression (astlib/pp/pp_rewrite.mll[28,14544+6]..[28,14544+13])
                              Pexp_ident "rewrite" (astlib/pp/pp_rewrite.mll[28,14544+6]..[28,14544+13])
                            [
                              <arg>
                              Nolabel
                                expression (astlib/pp/pp_rewrite.mll[28,14544+14]..[28,14544+24])
                                  Pexp_ident "is_current" (astlib/pp/pp_rewrite.mll[28,14544+14]..[28,14544+24])
                              <arg>
                              Nolabel
                                expression (astlib/pp/pp_rewrite.mll[28,14544+25]..[28,14544+38])
                                  Pexp_ident "ocaml_version" (astlib/pp/pp_rewrite.mll[28,14544+25]..[28,14544+38])
                              <arg>
                              Nolabel
                                expression (astlib/pp/pp_rewrite.mll[28,14544+39]..[28,14544+45])
                                  Pexp_ident "lexbuf" (astlib/pp/pp_rewrite.mll[28,14544+39]..[28,14544+45])
                            ]
                    <case>
                      pattern (astlib/pp/pp_rewrite.ml[260,14629+4]..[260,14629+5])
                        Ppat_constant PConst_int (4,None)
                      expression (astlib/pp/pp_rewrite.mll[30,14670+8]..[30,14670+14])
                        Pexp_construct "()" (astlib/pp/pp_rewrite.mll[30,14670+10]..[30,14670+12])
                        None
                    <case>
                      pattern (astlib/pp/pp_rewrite.ml[265,14718+4]..[265,14718+21])
                        Ppat_var "__ocaml_lex_state" (astlib/pp/pp_rewrite.ml[265,14718+4]..[265,14718+21])
                      expression (astlib/pp/pp_rewrite.ml[265,14718+25]..[266,14777+79])
                        Pexp_sequence
                        expression (astlib/pp/pp_rewrite.ml[265,14718+25]..[265,14718+57])
                          Pexp_apply
                          expression (astlib/pp/pp_rewrite.ml[265,14718+25]..[265,14718+50])
                            Pexp_field
                            expression (astlib/pp/pp_rewrite.ml[265,14718+25]..[265,14718+31])
                              Pexp_ident "lexbuf" (astlib/pp/pp_rewrite.ml[265,14718+25]..[265,14718+31])
                            "Lexing.refill_buff" (astlib/pp/pp_rewrite.ml[265,14718+32]..[265,14718+50])
                          [
                            <arg>
                            Nolabel
                              expression (astlib/pp/pp_rewrite.ml[265,14718+51]..[265,14718+57])
                                Pexp_ident "lexbuf" (astlib/pp/pp_rewrite.ml[265,14718+51]..[265,14718+57])
                          ]
                        expression (astlib/pp/pp_rewrite.ml[266,14777+6]..[266,14777+79])
                          Pexp_apply
                          expression (astlib/pp/pp_rewrite.ml[266,14777+6]..[266,14777+29])
                            Pexp_ident "__ocaml_lex_rewrite_rec" (astlib/pp/pp_rewrite.ml[266,14777+6]..[266,14777+29])
                          [
                            <arg>
                            Nolabel
                              expression (astlib/pp/pp_rewrite.ml[266,14777+30]..[266,14777+40])
                                Pexp_ident "is_current" (astlib/pp/pp_rewrite.ml[266,14777+30]..[266,14777+40])
                            <arg>
                            Nolabel
                              expression (astlib/pp/pp_rewrite.ml[266,14777+41]..[266,14777+54])
                                Pexp_ident "ocaml_version" (astlib/pp/pp_rewrite.ml[266,14777+41]..[266,14777+54])
                            <arg>
                            Nolabel
                              expression (astlib/pp/pp_rewrite.ml[266,14777+55]..[266,14777+61])
                                Pexp_ident "lexbuf" (astlib/pp/pp_rewrite.ml[266,14777+55]..[266,14777+61])
                            <arg>
                            Nolabel
                              expression (astlib/pp/pp_rewrite.ml[266,14777+62]..[266,14777+79])
                                Pexp_ident "__ocaml_lex_state" (astlib/pp/pp_rewrite.ml[266,14777+62]..[266,14777+79])
                          ]
                  ]
    ]
]

let __ocaml_lex_tables =
  {
    Lexing.lex_base =
      "\000\000\251\255\252\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\002\000\002\000\000\000\001\000\000\000\255\255\001\000\000\000\002\000\001\000\004\000\004\000\001\000\002\000\003\000\005\000\254\255\005\000\002\000\003\000\006\000\003\000\001\000\003\000\t\000\b\000\b\000\003\000\005\000\006\000\b\000\253\255";
    Lexing.lex_backtrk =
      "\255\255\255\255\255\255\003\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255";
    Lexing.lex_default =
      "\002\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\017\000\255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\027\000\028\000\255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255*\000+\000\255\255\000\000";
    Lexing.lex_trans =
t\000\024\000\n\000\"\000\014\000\006\000\023\000&\000\005\000'\000\000\000\022\000%\000\b\000\031\000\015\000\000\000\012\000\r
    Lexing.lex_check =
r\000\005\000\022\000%\000\004\000&\000\255\255\021\000$\000\007\000\b\000\014\000\255\255\011\000\012\000\t\000\n
    Lexing.lex_base_code =
      "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\003\000\000\000\000\000\n\000";
    Lexing.lex_backtrk_code =
      "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000";
    Lexing.lex_default_code =
      "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000";
    Lexing.lex_trans_code =

    Lexing.lex_check_code =

    Lexing.lex_code = "\255\001\255\255\000\001\255\002\255\255\000\002\255"
  }
let rec rewrite is_current ocaml_version lexbuf =
  lexbuf.Lexing.lex_mem <- (Array.make 3 (-1));
  __ocaml_lex_rewrite_rec is_current ocaml_version lexbuf 0
and __ocaml_lex_rewrite_rec is_current ocaml_version lexbuf __ocaml_lex_state
  =
  match Lexing.new_engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
  | 0 ->
      let s =
        Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 13)
          (lexbuf.Lexing.lex_curr_pos + (-2)) in
      let chunk =
        if is_current
        then "             " ^ (s ^ "  ")
        else Lexing.lexeme lexbuf in
      (print_string chunk; rewrite is_current ocaml_version lexbuf)
  | 1 ->
      let v =
        Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 14)
          ((lexbuf.Lexing.lex_mem).(0))
      and s =
        Lexing.sub_lexeme lexbuf (((lexbuf.Lexing.lex_mem).(0)) + 1)
          (lexbuf.Lexing.lex_curr_pos + (-2)) in
      let chunk =
        if v <= ocaml_version
        then
          "              " ^
            ((String.make ((String.length v) + 1) ' ') ^ (s ^ "  "))
        else Lexing.lexeme lexbuf in
      (print_string chunk; rewrite is_current ocaml_version lexbuf)
  | 2 ->
      let v =
        Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 18)
          ((lexbuf.Lexing.lex_mem).(0))
      and s =
        Lexing.sub_lexeme lexbuf (((lexbuf.Lexing.lex_mem).(0)) + 1)
          (lexbuf.Lexing.lex_curr_pos + (-2)) in
      let chunk =
        if not (v <= ocaml_version)
        then
          "                  " ^
            ((String.make ((String.length v) + 1) ' ') ^ (s ^ "  "))
        else Lexing.lexeme lexbuf in
      (print_string chunk; rewrite is_current ocaml_version lexbuf)
  | 3 ->
      let c = Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
      (print_char c; rewrite is_current ocaml_version lexbuf)
  | 4 -> ()
  | __ocaml_lex_state ->
      (lexbuf.Lexing.refill_buff lexbuf;
       __ocaml_lex_rewrite_rec is_current ocaml_version lexbuf
         __ocaml_lex_state)
[
  structure_item (astlib/pp/pp_rewrite.ml[1,0+0]..astlib/pp/pp_rewrite.ml[184,12001+1])
    Tstr_value Nonrec
    [
      <def>
        pattern (astlib/pp/pp_rewrite.ml[1,0+4]..astlib/pp/pp_rewrite.ml[1,0+22])
          Tpat_var "__ocaml_lex_tables/88"
        expression (astlib/pp/pp_rewrite.ml[1,0+25]..astlib/pp/pp_rewrite.ml[184,12001+1])
          Texp_record
            fields =
              [
                "Lexing.lex_base"
                  expression (astlib/pp/pp_rewrite.ml[3,47+3]..astlib/pp/pp_rewrite.ml[8,397+53])
                    Texp_constant Const_string("\000\000\251\255\252\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\002\000\002\000\000\000\001\000\000\000\255\255\001\000\000\000\002\000\001\000\004\000\004\000\001\000\002\000\003\000\005\000\254\255\005\000\002\000\003\000\006\000\003\000\001\000\003\000\t\000\b\000\b\000\003\000\005\000\006\000\b\000\253\255",(astlib/pp/pp_rewrite.ml[3,47+4]..astlib/pp/pp_rewrite.ml[8,397+52]),None)
                "Lexing.lex_backtrk"
                  expression (astlib/pp/pp_rewrite.ml[10,475+3]..astlib/pp/pp_rewrite.ml[15,825+53])
                    Texp_constant Const_string("\255\255\255\255\255\255\003\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255",(astlib/pp/pp_rewrite.ml[10,475+4]..astlib/pp/pp_rewrite.ml[15,825+52]),None)
                "Lexing.lex_default"
                  expression (astlib/pp/pp_rewrite.ml[17,903+3]..astlib/pp/pp_rewrite.ml[22,1253+53])
                    Texp_constant Const_string("\002\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\017\000\255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\027\000\028\000\255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255*\000+\000\255\255\000\000",(astlib/pp/pp_rewrite.ml[17,903+4]..astlib/pp/pp_rewrite.ml[22,1253+52]),None)
                "Lexing.lex_trans"
                  expression (astlib/pp/pp_rewrite.ml[24,1329+3]..astlib/pp/pp_rewrite.ml[57,3639+21])
                    Texp_constant Const_stringt\000\024\000\n\000\"\000\014\000\006\000\023\000&\000\005\000'\000\000\000\022\000%\000\b\000\031\000\015\000\000\000\012\000\rastlib/pp/pp_rewrite.ml[24,1329+4]..astlib/pp/pp_rewrite.ml[57,3639+20]),None)
                "Lexing.lex_check"
                  expression (astlib/pp/pp_rewrite.ml[59,3683+3]..astlib/pp/pp_rewrite.ml[92,5993+21])
                    Texp_constant Const_stringr\000\005\000\022\000%\000\004\000&\000\255\255\021\000$\000\007\000\b\000\014\000\255\255\011\000\012\000\t\000\nastlib/pp/pp_rewrite.ml[59,3683+4]..astlib/pp/pp_rewrite.ml[92,5993+20]),None)
                "Lexing.lex_base_code"
                  expression (astlib/pp/pp_rewrite.ml[94,6041+3]..astlib/pp/pp_rewrite.ml[99,6391+53])
                    Texp_constant Const_string("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\003\000\000\000\000\000\n\000",(astlib/pp/pp_rewrite.ml[94,6041+4]..astlib/pp/pp_rewrite.ml[99,6391+52]),None)
                "Lexing.lex_backtrk_code"
                  expression (astlib/pp/pp_rewrite.ml[101,6474+3]..astlib/pp/pp_rewrite.ml[106,6824+53])
                    Texp_constant Const_string("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000",(astlib/pp/pp_rewrite.ml[101,6474+4]..astlib/pp/pp_rewrite.ml[106,6824+52]),None)
                "Lexing.lex_default_code"
                  expression (astlib/pp/pp_rewrite.ml[108,6907+3]..astlib/pp/pp_rewrite.ml[113,7257+53])
                    Texp_constant Const_string("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000",(astlib/pp/pp_rewrite.ml[108,6907+4]..astlib/pp/pp_rewrite.ml[113,7257+52]),None)
                "Lexing.lex_trans_code"
                  expression (astlib/pp/pp_rewrite.ml[115,7338+3]..astlib/pp/pp_rewrite.ml[147,9578+37])
                    Texp_constant Const_stringastlib/pp/pp_rewrite.ml[115,7338+4]..astlib/pp/pp_rewrite.ml[147,9578+36]),None)
                "Lexing.lex_check_code"
                  expression (astlib/pp/pp_rewrite.ml[149,9643+3]..astlib/pp/pp_rewrite.ml[181,11883+37])
                    Texp_constant Const_stringastlib/pp/pp_rewrite.ml[149,9643+4]..astlib/pp/pp_rewrite.ml[181,11883+36]),None)
                "Lexing.lex_code"
                  expression (astlib/pp/pp_rewrite.ml[183,11942+3]..astlib/pp/pp_rewrite.ml[183,11942+57])
                    Texp_constant Const_string("\255\001\255\255\000\001\255\002\255\255\000\002\255",(astlib/pp/pp_rewrite.ml[183,11942+4]..astlib/pp/pp_rewrite.ml[183,11942+56]),None)
              ]
            representation =
              Record_regular
            extended_expression =
              None
    ]
  structure_item (astlib/pp/pp_rewrite.ml[186,12004+0]..astlib/pp/pp_rewrite.ml[266,14777+79])
    Tstr_value Rec
    [
      <def>
        pattern (astlib/pp/pp_rewrite.ml[186,12004+8]..astlib/pp/pp_rewrite.ml[186,12004+15])
          Tpat_var "rewrite/116"
        expression (astlib/pp/pp_rewrite.ml[186,12004+16]..astlib/pp/pp_rewrite.ml[187,12054+103]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (astlib/pp/pp_rewrite.ml[186,12004+16]..astlib/pp/pp_rewrite.ml[186,12004+26])
                Tpat_var "is_current/118"
              expression (astlib/pp/pp_rewrite.ml[186,12004+27]..astlib/pp/pp_rewrite.ml[187,12054+103]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (astlib/pp/pp_rewrite.ml[186,12004+27]..astlib/pp/pp_rewrite.ml[186,12004+40])
                      Tpat_var "ocaml_version/119"
                    expression (astlib/pp/pp_rewrite.ml[186,12004+41]..astlib/pp/pp_rewrite.ml[187,12054+103]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (astlib/pp/pp_rewrite.ml[186,12004+41]..astlib/pp/pp_rewrite.ml[186,12004+47])
                            Tpat_var "lexbuf/120"
                          expression (astlib/pp/pp_rewrite.ml[187,12054+2]..astlib/pp/pp_rewrite.ml[187,12054+103])
                            Texp_sequence
                            expression (astlib/pp/pp_rewrite.ml[187,12054+2]..astlib/pp/pp_rewrite.ml[187,12054+44])
                              Texp_setfield
                              expression (astlib/pp/pp_rewrite.ml[187,12054+2]..astlib/pp/pp_rewrite.ml[187,12054+8])
                                Texp_ident "lexbuf/120"
                              "Lexing.lex_mem"
                              expression (astlib/pp/pp_rewrite.ml[187,12054+27]..astlib/pp/pp_rewrite.ml[187,12054+44])
                                Texp_apply
                                expression (astlib/pp/pp_rewrite.ml[187,12054+27]..astlib/pp/pp_rewrite.ml[187,12054+37])
                                  Texp_ident "Stdlib!.Array.make"
                                [
                                  <arg>
                                    Nolabel
                                    expression (astlib/pp/pp_rewrite.ml[187,12054+38]..astlib/pp/pp_rewrite.ml[187,12054+39])
                                      Texp_constant Const_int 3
                                  <arg>
                                    Nolabel
                                    expression (astlib/pp/pp_rewrite.ml[187,12054+40]..astlib/pp/pp_rewrite.ml[187,12054+44])
                                      Texp_constant Const_int -1
                                ]
                            expression (astlib/pp/pp_rewrite.ml[187,12054+46]..astlib/pp/pp_rewrite.ml[187,12054+103])
                              Texp_apply
                              expression (astlib/pp/pp_rewrite.ml[187,12054+46]..astlib/pp/pp_rewrite.ml[187,12054+69])
                                Texp_ident "__ocaml_lex_rewrite_rec/117"
                              [
                                <arg>
                                  Nolabel
                                  expression (astlib/pp/pp_rewrite.ml[187,12054+70]..astlib/pp/pp_rewrite.ml[187,12054+80])
                                    Texp_ident "is_current/118"
                                <arg>
                                  Nolabel
                                  expression (astlib/pp/pp_rewrite.ml[187,12054+81]..astlib/pp/pp_rewrite.ml[187,12054+94])
                                    Texp_ident "ocaml_version/119"
                                <arg>
                                  Nolabel
                                  expression (astlib/pp/pp_rewrite.ml[187,12054+95]..astlib/pp/pp_rewrite.ml[187,12054+101])
                                    Texp_ident "lexbuf/120"
                                <arg>
                                  Nolabel
                                  expression (astlib/pp/pp_rewrite.ml[187,12054+102]..astlib/pp/pp_rewrite.ml[187,12054+103])
                                    Texp_constant Const_int 0
                              ]
                      ]
                ]
          ]
      <def>
        pattern (astlib/pp/pp_rewrite.ml[188,12158+4]..astlib/pp/pp_rewrite.ml[188,12158+27])
          Tpat_var "__ocaml_lex_rewrite_rec/117"
        expression (astlib/pp/pp_rewrite.ml[188,12158+28]..astlib/pp/pp_rewrite.ml[266,14777+79]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (astlib/pp/pp_rewrite.ml[188,12158+28]..astlib/pp/pp_rewrite.ml[188,12158+38])
                Tpat_var "is_current/171"
              expression (astlib/pp/pp_rewrite.ml[188,12158+39]..astlib/pp/pp_rewrite.ml[266,14777+79]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (astlib/pp/pp_rewrite.ml[188,12158+39]..astlib/pp/pp_rewrite.ml[188,12158+52])
                      Tpat_var "ocaml_version/172"
                    expression (astlib/pp/pp_rewrite.ml[188,12158+53]..astlib/pp/pp_rewrite.ml[266,14777+79]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (astlib/pp/pp_rewrite.ml[188,12158+53]..astlib/pp/pp_rewrite.ml[188,12158+59])
                            Tpat_var "lexbuf/173"
                          expression (astlib/pp/pp_rewrite.ml[188,12158+60]..astlib/pp/pp_rewrite.ml[266,14777+79]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (astlib/pp/pp_rewrite.ml[188,12158+60]..astlib/pp/pp_rewrite.ml[188,12158+77])
                                  Tpat_var "__ocaml_lex_state/174"
                                expression (astlib/pp/pp_rewrite.ml[189,12238+2]..astlib/pp/pp_rewrite.ml[266,14777+79])
                                  Texp_match
                                  expression (astlib/pp/pp_rewrite.ml[189,12238+8]..astlib/pp/pp_rewrite.ml[189,12238+69])
                                    Texp_apply
                                    expression (astlib/pp/pp_rewrite.ml[189,12238+8]..astlib/pp/pp_rewrite.ml[189,12238+25])
                                      Texp_ident "Stdlib!.Lexing.new_engine"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (astlib/pp/pp_rewrite.ml[189,12238+26]..astlib/pp/pp_rewrite.ml[189,12238+44])
                                          Texp_ident "__ocaml_lex_tables/88"
                                      <arg>
                                        Nolabel
                                        expression (astlib/pp/pp_rewrite.ml[189,12238+45]..astlib/pp/pp_rewrite.ml[189,12238+62])
                                          Texp_ident "__ocaml_lex_state/174"
                                      <arg>
                                        Nolabel
                                        expression (astlib/pp/pp_rewrite.ml[189,12238+63]..astlib/pp/pp_rewrite.ml[189,12238+69])
                                          Texp_ident "lexbuf/173"
                                    ]
                                  [
                                    <case>
                                      pattern (astlib/pp/pp_rewrite.ml[190,12313+8]..astlib/pp/pp_rewrite.ml[190,12313+9])
                                        Tpat_value
                                        pattern (astlib/pp/pp_rewrite.ml[190,12313+8]..astlib/pp/pp_rewrite.ml[190,12313+9])
                                          Tpat_constant Const_int 0
                                      expression (astlib/pp/pp_rewrite.ml[191,12326+0]..astlib/pp/pp_rewrite.mll[9,12762+5])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (astlib/pp/pp_rewrite.mll[2,12361+41]..astlib/pp/pp_rewrite.mll[2,12361+42])
                                              Tpat_var "s/179"
                                            expression (astlib/pp/pp_rewrite.ml[195,12436+2]..astlib/pp/pp_rewrite.ml[195,12436+95])
                                              Texp_apply
                                              expression (astlib/pp/pp_rewrite.ml[195,12436+2]..astlib/pp/pp_rewrite.ml[195,12436+19])
                                                Texp_ident "Stdlib!.Lexing.sub_lexeme"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (astlib/pp/pp_rewrite.ml[195,12436+20]..astlib/pp/pp_rewrite.ml[195,12436+26])
                                                    Texp_ident "lexbuf/173"
                                                <arg>
                                                  Nolabel
                                                  expression (astlib/pp/pp_rewrite.ml[195,12436+27]..astlib/pp/pp_rewrite.ml[195,12436+61])
                                                    Texp_apply
                                                    expression (astlib/pp/pp_rewrite.ml[195,12436+56]..astlib/pp/pp_rewrite.ml[195,12436+57])
                                                      Texp_ident "Stdlib!.+"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (astlib/pp/pp_rewrite.ml[195,12436+28]..astlib/pp/pp_rewrite.ml[195,12436+55])
                                                          Texp_field
                                                          expression (astlib/pp/pp_rewrite.ml[195,12436+28]..astlib/pp/pp_rewrite.ml[195,12436+34])
                                                            Texp_ident "lexbuf/173"
                                                          "Lexing.lex_start_pos"
                                                      <arg>
                                                        Nolabel
                                                        expression (astlib/pp/pp_rewrite.ml[195,12436+58]..astlib/pp/pp_rewrite.ml[195,12436+60])
                                                          Texp_constant Const_int 13
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (astlib/pp/pp_rewrite.ml[195,12436+62]..astlib/pp/pp_rewrite.ml[195,12436+95])
                                                    Texp_apply
                                                    expression (astlib/pp/pp_rewrite.ml[195,12436+90]..astlib/pp/pp_rewrite.ml[195,12436+91])
                                                      Texp_ident "Stdlib!.+"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (astlib/pp/pp_rewrite.ml[195,12436+63]..astlib/pp/pp_rewrite.ml[195,12436+89])
                                                          Texp_field
                                                          expression (astlib/pp/pp_rewrite.ml[195,12436+63]..astlib/pp/pp_rewrite.ml[195,12436+69])
                                                            Texp_ident "lexbuf/173"
                                                          "Lexing.lex_curr_pos"
                                                      <arg>
                                                        Nolabel
                                                        expression (astlib/pp/pp_rewrite.ml[195,12436+92]..astlib/pp/pp_rewrite.ml[195,12436+94])
                                                          Texp_constant Const_int -2
                                                    ]
                                              ]
                                        ]
                                        expression (astlib/pp/pp_rewrite.mll[3,12566+4]..astlib/pp/pp_rewrite.mll[9,12762+5])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (astlib/pp/pp_rewrite.mll[3,12566+10]..astlib/pp/pp_rewrite.mll[3,12566+15])
                                                Tpat_var "chunk/180"
                                              expression (astlib/pp/pp_rewrite.mll[3,12566+18]..astlib/pp/pp_rewrite.mll[5,12647+33])
                                                Texp_ifthenelse
                                                expression (astlib/pp/pp_rewrite.mll[3,12566+21]..astlib/pp/pp_rewrite.mll[3,12566+31])
                                                  Texp_ident "is_current/171"
                                                expression (astlib/pp/pp_rewrite.mll[4,12598+13]..astlib/pp/pp_rewrite.mll[4,12598+48])
                                                  Texp_apply
                                                  expression (astlib/pp/pp_rewrite.mll[4,12598+29]..astlib/pp/pp_rewrite.mll[4,12598+30])
                                                    Texp_ident "Stdlib!.^"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (astlib/pp/pp_rewrite.mll[4,12598+13]..astlib/pp/pp_rewrite.mll[4,12598+28])
                                                        Texp_constant Const_string("             ",(astlib/pp/pp_rewrite.mll[4,12598+14]..astlib/pp/pp_rewrite.mll[4,12598+27]),None)
                                                    <arg>
                                                      Nolabel
                                                      expression (astlib/pp/pp_rewrite.mll[4,12598+31]..astlib/pp/pp_rewrite.mll[4,12598+48])
                                                        Texp_apply
                                                        expression (astlib/pp/pp_rewrite.mll[4,12598+33]..astlib/pp/pp_rewrite.mll[4,12598+34])
                                                          Texp_ident "Stdlib!.^"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (astlib/pp/pp_rewrite.mll[4,12598+31]..astlib/pp/pp_rewrite.mll[4,12598+32])
                                                              Texp_ident "s/179"
                                                          <arg>
                                                            Nolabel
                                                            expression (astlib/pp/pp_rewrite.mll[4,12598+44]..astlib/pp/pp_rewrite.mll[4,12598+48])
                                                              Texp_constant Const_string("  ",(astlib/pp/pp_rewrite.mll[4,12598+45]..astlib/pp/pp_rewrite.mll[4,12598+47]),None)
                                                        ]
                                                  ]
                                                Some
                                                  expression (astlib/pp/pp_rewrite.mll[5,12647+13]..astlib/pp/pp_rewrite.mll[5,12647+33])
                                                    Texp_apply
                                                    expression (astlib/pp/pp_rewrite.mll[5,12647+13]..astlib/pp/pp_rewrite.mll[5,12647+26])
                                                      Texp_ident "Stdlib!.Lexing.lexeme"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (astlib/pp/pp_rewrite.mll[5,12647+27]..astlib/pp/pp_rewrite.mll[5,12647+33])
                                                          Texp_ident "lexbuf/173"
                                                    ]
                                          ]
                                          expression (astlib/pp/pp_rewrite.mll[7,12690+6]..astlib/pp/pp_rewrite.mll[8,12716+45])
                                            Texp_sequence
                                            expression (astlib/pp/pp_rewrite.mll[7,12690+6]..astlib/pp/pp_rewrite.mll[7,12690+24])
                                              Texp_apply
                                              expression (astlib/pp/pp_rewrite.mll[7,12690+6]..astlib/pp/pp_rewrite.mll[7,12690+18])
                                                Texp_ident "Stdlib!.print_string"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (astlib/pp/pp_rewrite.mll[7,12690+19]..astlib/pp/pp_rewrite.mll[7,12690+24])
                                                    Texp_ident "chunk/180"
                                              ]
                                            expression (astlib/pp/pp_rewrite.mll[8,12716+6]..astlib/pp/pp_rewrite.mll[8,12716+45])
                                              Texp_apply
                                              expression (astlib/pp/pp_rewrite.mll[8,12716+6]..astlib/pp/pp_rewrite.mll[8,12716+13])
                                                Texp_ident "rewrite/116"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (astlib/pp/pp_rewrite.mll[8,12716+14]..astlib/pp/pp_rewrite.mll[8,12716+24])
                                                    Texp_ident "is_current/171"
                                                <arg>
                                                  Nolabel
                                                  expression (astlib/pp/pp_rewrite.mll[8,12716+25]..astlib/pp/pp_rewrite.mll[8,12716+38])
                                                    Texp_ident "ocaml_version/172"
                                                <arg>
                                                  Nolabel
                                                  expression (astlib/pp/pp_rewrite.mll[8,12716+39]..astlib/pp/pp_rewrite.mll[8,12716+45])
                                                    Texp_ident "lexbuf/173"
                                              ]
                                    <case>
                                      pattern (astlib/pp/pp_rewrite.ml[206,12801+4]..astlib/pp/pp_rewrite.ml[206,12801+5])
                                        Tpat_value
                                        pattern (astlib/pp/pp_rewrite.ml[206,12801+4]..astlib/pp/pp_rewrite.ml[206,12801+5])
                                          Tpat_constant Const_int 1
                                      expression (astlib/pp/pp_rewrite.ml[207,12810+0]..astlib/pp/pp_rewrite.mll[17,13524+5])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (astlib/pp/pp_rewrite.mll[10,12846+46]..astlib/pp/pp_rewrite.mll[10,12846+47])
                                              Tpat_var "v/181"
                                            expression (astlib/pp/pp_rewrite.ml[211,12926+2]..astlib/pp/pp_rewrite.ml[211,12926+87])
                                              Texp_apply
                                              expression (astlib/pp/pp_rewrite.ml[211,12926+2]..astlib/pp/pp_rewrite.ml[211,12926+19])
                                                Texp_ident "Stdlib!.Lexing.sub_lexeme"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (astlib/pp/pp_rewrite.ml[211,12926+20]..astlib/pp/pp_rewrite.ml[211,12926+26])
                                                    Texp_ident "lexbuf/173"
                                                <arg>
                                                  Nolabel
                                                  expression (astlib/pp/pp_rewrite.ml[211,12926+27]..astlib/pp/pp_rewrite.ml[211,12926+61])
                                                    Texp_apply
                                                    expression (astlib/pp/pp_rewrite.ml[211,12926+56]..astlib/pp/pp_rewrite.ml[211,12926+57])
                                                      Texp_ident "Stdlib!.+"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (astlib/pp/pp_rewrite.ml[211,12926+28]..astlib/pp/pp_rewrite.ml[211,12926+55])
                                                          Texp_field
                                                          expression (astlib/pp/pp_rewrite.ml[211,12926+28]..astlib/pp/pp_rewrite.ml[211,12926+34])
                                                            Texp_ident "lexbuf/173"
                                                          "Lexing.lex_start_pos"
                                                      <arg>
                                                        Nolabel
                                                        expression (astlib/pp/pp_rewrite.ml[211,12926+58]..astlib/pp/pp_rewrite.ml[211,12926+60])
                                                          Texp_constant Const_int 14
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (astlib/pp/pp_rewrite.ml[211,12926+62]..astlib/pp/pp_rewrite.ml[211,12926+87])
                                                    Texp_apply
                                                    expression (astlib/pp/pp_rewrite.ml[211,12926+62]..astlib/pp/pp_rewrite.ml[211,12926+87]) ghost
                                                      Texp_ident "Stdlib!.Array.get"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (astlib/pp/pp_rewrite.ml[211,12926+62]..astlib/pp/pp_rewrite.ml[211,12926+83])
                                                          Texp_field
                                                          expression (astlib/pp/pp_rewrite.ml[211,12926+62]..astlib/pp/pp_rewrite.ml[211,12926+68])
                                                            Texp_ident "lexbuf/173"
                                                          "Lexing.lex_mem"
                                                      <arg>
                                                        Nolabel
                                                        expression (astlib/pp/pp_rewrite.ml[211,12926+85]..astlib/pp/pp_rewrite.ml[211,12926+86])
                                                          Texp_constant Const_int 0
                                                    ]
                                              ]
                                          <def>
                                            pattern (astlib/pp/pp_rewrite.mll[10,13050+65]..astlib/pp/pp_rewrite.mll[10,13050+66])
                                              Tpat_var "s/182"
                                            expression (astlib/pp/pp_rewrite.ml[216,13149+2]..astlib/pp/pp_rewrite.ml[216,13149+92])
                                              Texp_apply
                                              expression (astlib/pp/pp_rewrite.ml[216,13149+2]..astlib/pp/pp_rewrite.ml[216,13149+19])
                                                Texp_ident "Stdlib!.Lexing.sub_lexeme"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (astlib/pp/pp_rewrite.ml[216,13149+20]..astlib/pp/pp_rewrite.ml[216,13149+26])
                                                    Texp_ident "lexbuf/173"
                                                <arg>
                                                  Nolabel
                                                  expression (astlib/pp/pp_rewrite.ml[216,13149+27]..astlib/pp/pp_rewrite.ml[216,13149+58])
                                                    Texp_apply
                                                    expression (astlib/pp/pp_rewrite.ml[216,13149+54]..astlib/pp/pp_rewrite.ml[216,13149+55])
                                                      Texp_ident "Stdlib!.+"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (astlib/pp/pp_rewrite.ml[216,13149+28]..astlib/pp/pp_rewrite.ml[216,13149+53])
                                                          Texp_apply
                                                          expression (astlib/pp/pp_rewrite.ml[216,13149+28]..astlib/pp/pp_rewrite.ml[216,13149+53]) ghost
                                                            Texp_ident "Stdlib!.Array.get"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (astlib/pp/pp_rewrite.ml[216,13149+28]..astlib/pp/pp_rewrite.ml[216,13149+49])
                                                                Texp_field
                                                                expression (astlib/pp/pp_rewrite.ml[216,13149+28]..astlib/pp/pp_rewrite.ml[216,13149+34])
                                                                  Texp_ident "lexbuf/173"
                                                                "Lexing.lex_mem"
                                                            <arg>
                                                              Nolabel
                                                              expression (astlib/pp/pp_rewrite.ml[216,13149+51]..astlib/pp/pp_rewrite.ml[216,13149+52])
                                                                Texp_constant Const_int 0
                                                          ]
                                                      <arg>
                                                        Nolabel
                                                        expression (astlib/pp/pp_rewrite.ml[216,13149+56]..astlib/pp/pp_rewrite.ml[216,13149+57])
                                                          Texp_constant Const_int 1
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (astlib/pp/pp_rewrite.ml[216,13149+59]..astlib/pp/pp_rewrite.ml[216,13149+92])
                                                    Texp_apply
                                                    expression (astlib/pp/pp_rewrite.ml[216,13149+87]..astlib/pp/pp_rewrite.ml[216,13149+88])
                                                      Texp_ident "Stdlib!.+"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (astlib/pp/pp_rewrite.ml[216,13149+60]..astlib/pp/pp_rewrite.ml[216,13149+86])
                                                          Texp_field
                                                          expression (astlib/pp/pp_rewrite.ml[216,13149+60]..astlib/pp/pp_rewrite.ml[216,13149+66])
                                                            Texp_ident "lexbuf/173"
                                                          "Lexing.lex_curr_pos"
                                                      <arg>
                                                        Nolabel
                                                        expression (astlib/pp/pp_rewrite.ml[216,13149+89]..astlib/pp/pp_rewrite.ml[216,13149+91])
                                                          Texp_constant Const_int -2
                                                    ]
                                              ]
                                        ]
                                        expression (astlib/pp/pp_rewrite.mll[11,13277+4]..astlib/pp/pp_rewrite.mll[17,13524+5])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (astlib/pp/pp_rewrite.mll[11,13277+10]..astlib/pp/pp_rewrite.mll[11,13277+15])
                                                Tpat_var "chunk/183"
                                              expression (astlib/pp/pp_rewrite.mll[11,13277+18]..astlib/pp/pp_rewrite.mll[13,13409+33])
                                                Texp_ifthenelse
                                                expression (astlib/pp/pp_rewrite.mll[11,13277+21]..astlib/pp/pp_rewrite.mll[11,13277+41])
                                                  Texp_apply
                                                  expression (astlib/pp/pp_rewrite.mll[11,13277+24]..astlib/pp/pp_rewrite.mll[11,13277+26])
                                                    Texp_ident "Stdlib!.<="
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (astlib/pp/pp_rewrite.mll[11,13277+22]..astlib/pp/pp_rewrite.mll[11,13277+23])
                                                        Texp_ident "v/181"
                                                    <arg>
                                                      Nolabel
                                                      expression (astlib/pp/pp_rewrite.mll[11,13277+27]..astlib/pp/pp_rewrite.mll[11,13277+40])
                                                        Texp_ident "ocaml_version/172"
                                                  ]
                                                expression (astlib/pp/pp_rewrite.mll[12,13319+13]..astlib/pp/pp_rewrite.mll[12,13319+89])
                                                  Texp_apply
                                                  expression (astlib/pp/pp_rewrite.mll[12,13319+30]..astlib/pp/pp_rewrite.mll[12,13319+31])
                                                    Texp_ident "Stdlib!.^"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (astlib/pp/pp_rewrite.mll[12,13319+13]..astlib/pp/pp_rewrite.mll[12,13319+29])
                                                        Texp_constant Const_string("              ",(astlib/pp/pp_rewrite.mll[12,13319+14]..astlib/pp/pp_rewrite.mll[12,13319+28]),None)
                                                    <arg>
                                                      Nolabel
                                                      expression (astlib/pp/pp_rewrite.mll[12,13319+32]..astlib/pp/pp_rewrite.mll[12,13319+89])
                                                        Texp_apply
                                                        expression (astlib/pp/pp_rewrite.mll[12,13319+70]..astlib/pp/pp_rewrite.mll[12,13319+71])
                                                          Texp_ident "Stdlib!.^"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (astlib/pp/pp_rewrite.mll[12,13319+32]..astlib/pp/pp_rewrite.mll[12,13319+69])
                                                              Texp_apply
                                                              expression (astlib/pp/pp_rewrite.mll[12,13319+32]..astlib/pp/pp_rewrite.mll[12,13319+43])
                                                                Texp_ident "Stdlib!.String.make"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (astlib/pp/pp_rewrite.mll[12,13319+44]..astlib/pp/pp_rewrite.mll[12,13319+65])
                                                                    Texp_apply
                                                                    expression (astlib/pp/pp_rewrite.mll[12,13319+61]..astlib/pp/pp_rewrite.mll[12,13319+62])
                                                                      Texp_ident "Stdlib!.+"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (astlib/pp/pp_rewrite.mll[12,13319+45]..astlib/pp/pp_rewrite.mll[12,13319+60])
                                                                          Texp_apply
                                                                          expression (astlib/pp/pp_rewrite.mll[12,13319+45]..astlib/pp/pp_rewrite.mll[12,13319+58])
                                                                            Texp_ident "Stdlib!.String.length"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (astlib/pp/pp_rewrite.mll[12,13319+59]..astlib/pp/pp_rewrite.mll[12,13319+60])
                                                                                Texp_ident "v/181"
                                                                          ]
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (astlib/pp/pp_rewrite.mll[12,13319+63]..astlib/pp/pp_rewrite.mll[12,13319+64])
                                                                          Texp_constant Const_int 1
                                                                    ]
                                                                <arg>
                                                                  Nolabel
                                                                  expression (astlib/pp/pp_rewrite.mll[12,13319+66]..astlib/pp/pp_rewrite.mll[12,13319+69])
                                                                    Texp_constant Const_char 20
                                                              ]
                                                          <arg>
                                                            Nolabel
                                                            expression (astlib/pp/pp_rewrite.mll[12,13319+72]..astlib/pp/pp_rewrite.mll[12,13319+89])
                                                              Texp_apply
                                                              expression (astlib/pp/pp_rewrite.mll[12,13319+74]..astlib/pp/pp_rewrite.mll[12,13319+75])
                                                                Texp_ident "Stdlib!.^"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (astlib/pp/pp_rewrite.mll[12,13319+72]..astlib/pp/pp_rewrite.mll[12,13319+73])
                                                                    Texp_ident "s/182"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (astlib/pp/pp_rewrite.mll[12,13319+85]..astlib/pp/pp_rewrite.mll[12,13319+89])
                                                                    Texp_constant Const_string("  ",(astlib/pp/pp_rewrite.mll[12,13319+86]..astlib/pp/pp_rewrite.mll[12,13319+88]),None)
                                                              ]
                                                        ]
                                                  ]
                                                Some
                                                  expression (astlib/pp/pp_rewrite.mll[13,13409+13]..astlib/pp/pp_rewrite.mll[13,13409+33])
                                                    Texp_apply
                                                    expression (astlib/pp/pp_rewrite.mll[13,13409+13]..astlib/pp/pp_rewrite.mll[13,13409+26])
                                                      Texp_ident "Stdlib!.Lexing.lexeme"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (astlib/pp/pp_rewrite.mll[13,13409+27]..astlib/pp/pp_rewrite.mll[13,13409+33])
                                                          Texp_ident "lexbuf/173"
                                                    ]
                                          ]
                                          expression (astlib/pp/pp_rewrite.mll[15,13452+6]..astlib/pp/pp_rewrite.mll[16,13478+45])
                                            Texp_sequence
                                            expression (astlib/pp/pp_rewrite.mll[15,13452+6]..astlib/pp/pp_rewrite.mll[15,13452+24])
                                              Texp_apply
                                              expression (astlib/pp/pp_rewrite.mll[15,13452+6]..astlib/pp/pp_rewrite.mll[15,13452+18])
                                                Texp_ident "Stdlib!.print_string"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (astlib/pp/pp_rewrite.mll[15,13452+19]..astlib/pp/pp_rewrite.mll[15,13452+24])
                                                    Texp_ident "chunk/183"
                                              ]
                                            expression (astlib/pp/pp_rewrite.mll[16,13478+6]..astlib/pp/pp_rewrite.mll[16,13478+45])
                                              Texp_apply
                                              expression (astlib/pp/pp_rewrite.mll[16,13478+6]..astlib/pp/pp_rewrite.mll[16,13478+13])
                                                Texp_ident "rewrite/116"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (astlib/pp/pp_rewrite.mll[16,13478+14]..astlib/pp/pp_rewrite.mll[16,13478+24])
                                                    Texp_ident "is_current/171"
                                                <arg>
                                                  Nolabel
                                                  expression (astlib/pp/pp_rewrite.mll[16,13478+25]..astlib/pp/pp_rewrite.mll[16,13478+38])
                                                    Texp_ident "ocaml_version/172"
                                                <arg>
                                                  Nolabel
                                                  expression (astlib/pp/pp_rewrite.mll[16,13478+39]..astlib/pp/pp_rewrite.mll[16,13478+45])
                                                    Texp_ident "lexbuf/173"
                                              ]
                                    <case>
                                      pattern (astlib/pp/pp_rewrite.ml[227,13563+4]..astlib/pp/pp_rewrite.ml[227,13563+5])
                                        Tpat_value
                                        pattern (astlib/pp/pp_rewrite.ml[227,13563+4]..astlib/pp/pp_rewrite.ml[227,13563+5])
                                          Tpat_constant Const_int 2
                                      expression (astlib/pp/pp_rewrite.ml[228,13572+0]..astlib/pp/pp_rewrite.mll[25,14302+5])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (astlib/pp/pp_rewrite.mll[18,13608+50]..astlib/pp/pp_rewrite.mll[18,13608+51])
                                              Tpat_var "v/232"
                                            expression (astlib/pp/pp_rewrite.ml[232,13692+2]..astlib/pp/pp_rewrite.ml[232,13692+87])
                                              Texp_apply
                                              expression (astlib/pp/pp_rewrite.ml[232,13692+2]..astlib/pp/pp_rewrite.ml[232,13692+19])
                                                Texp_ident "Stdlib!.Lexing.sub_lexeme"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (astlib/pp/pp_rewrite.ml[232,13692+20]..astlib/pp/pp_rewrite.ml[232,13692+26])
                                                    Texp_ident "lexbuf/173"
                                                <arg>
                                                  Nolabel
                                                  expression (astlib/pp/pp_rewrite.ml[232,13692+27]..astlib/pp/pp_rewrite.ml[232,13692+61])
                                                    Texp_apply
                                                    expression (astlib/pp/pp_rewrite.ml[232,13692+56]..astlib/pp/pp_rewrite.ml[232,13692+57])
                                                      Texp_ident "Stdlib!.+"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (astlib/pp/pp_rewrite.ml[232,13692+28]..astlib/pp/pp_rewrite.ml[232,13692+55])
                                                          Texp_field
                                                          expression (astlib/pp/pp_rewrite.ml[232,13692+28]..astlib/pp/pp_rewrite.ml[232,13692+34])
                                                            Texp_ident "lexbuf/173"
                                                          "Lexing.lex_start_pos"
                                                      <arg>
                                                        Nolabel
                                                        expression (astlib/pp/pp_rewrite.ml[232,13692+58]..astlib/pp/pp_rewrite.ml[232,13692+60])
                                                          Texp_constant Const_int 18
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (astlib/pp/pp_rewrite.ml[232,13692+62]..astlib/pp/pp_rewrite.ml[232,13692+87])
                                                    Texp_apply
                                                    expression (astlib/pp/pp_rewrite.ml[232,13692+62]..astlib/pp/pp_rewrite.ml[232,13692+87]) ghost
                                                      Texp_ident "Stdlib!.Array.get"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (astlib/pp/pp_rewrite.ml[232,13692+62]..astlib/pp/pp_rewrite.ml[232,13692+83])
                                                          Texp_field
                                                          expression (astlib/pp/pp_rewrite.ml[232,13692+62]..astlib/pp/pp_rewrite.ml[232,13692+68])
                                                            Texp_ident "lexbuf/173"
                                                          "Lexing.lex_mem"
                                                      <arg>
                                                        Nolabel
                                                        expression (astlib/pp/pp_rewrite.ml[232,13692+85]..astlib/pp/pp_rewrite.ml[232,13692+86])
                                                          Texp_constant Const_int 0
                                                    ]
                                              ]
                                          <def>
                                            pattern (astlib/pp/pp_rewrite.mll[18,13816+69]..astlib/pp/pp_rewrite.mll[18,13816+70])
                                              Tpat_var "s/233"
                                            expression (astlib/pp/pp_rewrite.ml[237,13919+2]..astlib/pp/pp_rewrite.ml[237,13919+92])
                                              Texp_apply
                                              expression (astlib/pp/pp_rewrite.ml[237,13919+2]..astlib/pp/pp_rewrite.ml[237,13919+19])
                                                Texp_ident "Stdlib!.Lexing.sub_lexeme"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (astlib/pp/pp_rewrite.ml[237,13919+20]..astlib/pp/pp_rewrite.ml[237,13919+26])
                                                    Texp_ident "lexbuf/173"
                                                <arg>
                                                  Nolabel
                                                  expression (astlib/pp/pp_rewrite.ml[237,13919+27]..astlib/pp/pp_rewrite.ml[237,13919+58])
                                                    Texp_apply
                                                    expression (astlib/pp/pp_rewrite.ml[237,13919+54]..astlib/pp/pp_rewrite.ml[237,13919+55])
                                                      Texp_ident "Stdlib!.+"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (astlib/pp/pp_rewrite.ml[237,13919+28]..astlib/pp/pp_rewrite.ml[237,13919+53])
                                                          Texp_apply
                                                          expression (astlib/pp/pp_rewrite.ml[237,13919+28]..astlib/pp/pp_rewrite.ml[237,13919+53]) ghost
                                                            Texp_ident "Stdlib!.Array.get"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (astlib/pp/pp_rewrite.ml[237,13919+28]..astlib/pp/pp_rewrite.ml[237,13919+49])
                                                                Texp_field
                                                                expression (astlib/pp/pp_rewrite.ml[237,13919+28]..astlib/pp/pp_rewrite.ml[237,13919+34])
                                                                  Texp_ident "lexbuf/173"
                                                                "Lexing.lex_mem"
                                                            <arg>
                                                              Nolabel
                                                              expression (astlib/pp/pp_rewrite.ml[237,13919+51]..astlib/pp/pp_rewrite.ml[237,13919+52])
                                                                Texp_constant Const_int 0
                                                          ]
                                                      <arg>
                                                        Nolabel
                                                        expression (astlib/pp/pp_rewrite.ml[237,13919+56]..astlib/pp/pp_rewrite.ml[237,13919+57])
                                                          Texp_constant Const_int 1
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (astlib/pp/pp_rewrite.ml[237,13919+59]..astlib/pp/pp_rewrite.ml[237,13919+92])
                                                    Texp_apply
                                                    expression (astlib/pp/pp_rewrite.ml[237,13919+87]..astlib/pp/pp_rewrite.ml[237,13919+88])
                                                      Texp_ident "Stdlib!.+"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (astlib/pp/pp_rewrite.ml[237,13919+60]..astlib/pp/pp_rewrite.ml[237,13919+86])
                                                          Texp_field
                                                          expression (astlib/pp/pp_rewrite.ml[237,13919+60]..astlib/pp/pp_rewrite.ml[237,13919+66])
                                                            Texp_ident "lexbuf/173"
                                                          "Lexing.lex_curr_pos"
                                                      <arg>
                                                        Nolabel
                                                        expression (astlib/pp/pp_rewrite.ml[237,13919+89]..astlib/pp/pp_rewrite.ml[237,13919+91])
                                                          Texp_constant Const_int -2
                                                    ]
                                              ]
                                        ]
                                        expression (astlib/pp/pp_rewrite.mll[19,14047+4]..astlib/pp/pp_rewrite.mll[25,14302+5])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (astlib/pp/pp_rewrite.mll[19,14047+10]..astlib/pp/pp_rewrite.mll[19,14047+15])
                                                Tpat_var "chunk/234"
                                              expression (astlib/pp/pp_rewrite.mll[19,14047+18]..astlib/pp/pp_rewrite.mll[21,14187+33])
                                                Texp_ifthenelse
                                                expression (astlib/pp/pp_rewrite.mll[19,14047+21]..astlib/pp/pp_rewrite.mll[19,14047+45])
                                                  Texp_apply
                                                  expression (astlib/pp/pp_rewrite.mll[19,14047+21]..astlib/pp/pp_rewrite.mll[19,14047+24])
                                                    Texp_ident "Stdlib!.not"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (astlib/pp/pp_rewrite.mll[19,14047+25]..astlib/pp/pp_rewrite.mll[19,14047+45])
                                                        Texp_apply
                                                        expression (astlib/pp/pp_rewrite.mll[19,14047+28]..astlib/pp/pp_rewrite.mll[19,14047+30])
                                                          Texp_ident "Stdlib!.<="
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (astlib/pp/pp_rewrite.mll[19,14047+26]..astlib/pp/pp_rewrite.mll[19,14047+27])
                                                              Texp_ident "v/232"
                                                          <arg>
                                                            Nolabel
                                                            expression (astlib/pp/pp_rewrite.mll[19,14047+31]..astlib/pp/pp_rewrite.mll[19,14047+44])
                                                              Texp_ident "ocaml_version/172"
                                                        ]
                                                  ]
                                                expression (astlib/pp/pp_rewrite.mll[20,14093+13]..astlib/pp/pp_rewrite.mll[20,14093+93])
                                                  Texp_apply
                                                  expression (astlib/pp/pp_rewrite.mll[20,14093+34]..astlib/pp/pp_rewrite.mll[20,14093+35])
                                                    Texp_ident "Stdlib!.^"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (astlib/pp/pp_rewrite.mll[20,14093+13]..astlib/pp/pp_rewrite.mll[20,14093+33])
                                                        Texp_constant Const_string("                  ",(astlib/pp/pp_rewrite.mll[20,14093+14]..astlib/pp/pp_rewrite.mll[20,14093+32]),None)
                                                    <arg>
                                                      Nolabel
                                                      expression (astlib/pp/pp_rewrite.mll[20,14093+36]..astlib/pp/pp_rewrite.mll[20,14093+93])
                                                        Texp_apply
                                                        expression (astlib/pp/pp_rewrite.mll[20,14093+74]..astlib/pp/pp_rewrite.mll[20,14093+75])
                                                          Texp_ident "Stdlib!.^"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (astlib/pp/pp_rewrite.mll[20,14093+36]..astlib/pp/pp_rewrite.mll[20,14093+73])
                                                              Texp_apply
                                                              expression (astlib/pp/pp_rewrite.mll[20,14093+36]..astlib/pp/pp_rewrite.mll[20,14093+47])
                                                                Texp_ident "Stdlib!.String.make"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (astlib/pp/pp_rewrite.mll[20,14093+48]..astlib/pp/pp_rewrite.mll[20,14093+69])
                                                                    Texp_apply
                                                                    expression (astlib/pp/pp_rewrite.mll[20,14093+65]..astlib/pp/pp_rewrite.mll[20,14093+66])
                                                                      Texp_ident "Stdlib!.+"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (astlib/pp/pp_rewrite.mll[20,14093+49]..astlib/pp/pp_rewrite.mll[20,14093+64])
                                                                          Texp_apply
                                                                          expression (astlib/pp/pp_rewrite.mll[20,14093+49]..astlib/pp/pp_rewrite.mll[20,14093+62])
                                                                            Texp_ident "Stdlib!.String.length"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (astlib/pp/pp_rewrite.mll[20,14093+63]..astlib/pp/pp_rewrite.mll[20,14093+64])
                                                                                Texp_ident "v/232"
                                                                          ]
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (astlib/pp/pp_rewrite.mll[20,14093+67]..astlib/pp/pp_rewrite.mll[20,14093+68])
                                                                          Texp_constant Const_int 1
                                                                    ]
                                                                <arg>
                                                                  Nolabel
                                                                  expression (astlib/pp/pp_rewrite.mll[20,14093+70]..astlib/pp/pp_rewrite.mll[20,14093+73])
                                                                    Texp_constant Const_char 20
                                                              ]
                                                          <arg>
                                                            Nolabel
                                                            expression (astlib/pp/pp_rewrite.mll[20,14093+76]..astlib/pp/pp_rewrite.mll[20,14093+93])
                                                              Texp_apply
                                                              expression (astlib/pp/pp_rewrite.mll[20,14093+78]..astlib/pp/pp_rewrite.mll[20,14093+79])
                                                                Texp_ident "Stdlib!.^"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (astlib/pp/pp_rewrite.mll[20,14093+76]..astlib/pp/pp_rewrite.mll[20,14093+77])
                                                                    Texp_ident "s/233"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (astlib/pp/pp_rewrite.mll[20,14093+89]..astlib/pp/pp_rewrite.mll[20,14093+93])
                                                                    Texp_constant Const_string("  ",(astlib/pp/pp_rewrite.mll[20,14093+90]..astlib/pp/pp_rewrite.mll[20,14093+92]),None)
                                                              ]
                                                        ]
                                                  ]
                                                Some
                                                  expression (astlib/pp/pp_rewrite.mll[21,14187+13]..astlib/pp/pp_rewrite.mll[21,14187+33])
                                                    Texp_apply
                                                    expression (astlib/pp/pp_rewrite.mll[21,14187+13]..astlib/pp/pp_rewrite.mll[21,14187+26])
                                                      Texp_ident "Stdlib!.Lexing.lexeme"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (astlib/pp/pp_rewrite.mll[21,14187+27]..astlib/pp/pp_rewrite.mll[21,14187+33])
                                                          Texp_ident "lexbuf/173"
                                                    ]
                                          ]
                                          expression (astlib/pp/pp_rewrite.mll[23,14230+6]..astlib/pp/pp_rewrite.mll[24,14256+45])
                                            Texp_sequence
                                            expression (astlib/pp/pp_rewrite.mll[23,14230+6]..astlib/pp/pp_rewrite.mll[23,14230+24])
                                              Texp_apply
                                              expression (astlib/pp/pp_rewrite.mll[23,14230+6]..astlib/pp/pp_rewrite.mll[23,14230+18])
                                                Texp_ident "Stdlib!.print_string"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (astlib/pp/pp_rewrite.mll[23,14230+19]..astlib/pp/pp_rewrite.mll[23,14230+24])
                                                    Texp_ident "chunk/234"
                                              ]
                                            expression (astlib/pp/pp_rewrite.mll[24,14256+6]..astlib/pp/pp_rewrite.mll[24,14256+45])
                                              Texp_apply
                                              expression (astlib/pp/pp_rewrite.mll[24,14256+6]..astlib/pp/pp_rewrite.mll[24,14256+13])
                                                Texp_ident "rewrite/116"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (astlib/pp/pp_rewrite.mll[24,14256+14]..astlib/pp/pp_rewrite.mll[24,14256+24])
                                                    Texp_ident "is_current/171"
                                                <arg>
                                                  Nolabel
                                                  expression (astlib/pp/pp_rewrite.mll[24,14256+25]..astlib/pp/pp_rewrite.mll[24,14256+38])
                                                    Texp_ident "ocaml_version/172"
                                                <arg>
                                                  Nolabel
                                                  expression (astlib/pp/pp_rewrite.mll[24,14256+39]..astlib/pp/pp_rewrite.mll[24,14256+45])
                                                    Texp_ident "lexbuf/173"
                                              ]
                                    <case>
                                      pattern (astlib/pp/pp_rewrite.ml[248,14341+4]..astlib/pp/pp_rewrite.ml[248,14341+5])
                                        Tpat_value
                                        pattern (astlib/pp/pp_rewrite.ml[248,14341+4]..astlib/pp/pp_rewrite.ml[248,14341+5])
                                          Tpat_constant Const_int 3
                                      expression (astlib/pp/pp_rewrite.ml[249,14350+0]..astlib/pp/pp_rewrite.mll[29,14590+5])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (astlib/pp/pp_rewrite.mll[26,14386+9]..astlib/pp/pp_rewrite.mll[26,14386+10])
                                              Tpat_var "c/235"
                                            expression (astlib/pp/pp_rewrite.ml[253,14429+2]..astlib/pp/pp_rewrite.ml[253,14429+59])
                                              Texp_apply
                                              expression (astlib/pp/pp_rewrite.ml[253,14429+2]..astlib/pp/pp_rewrite.ml[253,14429+24])
                                                Texp_ident "Stdlib!.Lexing.sub_lexeme_char"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (astlib/pp/pp_rewrite.ml[253,14429+25]..astlib/pp/pp_rewrite.ml[253,14429+31])
                                                    Texp_ident "lexbuf/173"
                                                <arg>
                                                  Nolabel
                                                  expression (astlib/pp/pp_rewrite.ml[253,14429+32]..astlib/pp/pp_rewrite.ml[253,14429+59])
                                                    Texp_field
                                                    expression (astlib/pp/pp_rewrite.ml[253,14429+32]..astlib/pp/pp_rewrite.ml[253,14429+38])
                                                      Texp_ident "lexbuf/173"
                                                    "Lexing.lex_start_pos"
                                              ]
                                        ]
                                        expression (astlib/pp/pp_rewrite.mll[27,14524+4]..astlib/pp/pp_rewrite.mll[29,14590+5])
                                          Texp_sequence
                                          expression (astlib/pp/pp_rewrite.mll[27,14524+6]..astlib/pp/pp_rewrite.mll[27,14524+18])
                                            Texp_apply
                                            expression (astlib/pp/pp_rewrite.mll[27,14524+6]..astlib/pp/pp_rewrite.mll[27,14524+16])
                                              Texp_ident "Stdlib!.print_char"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (astlib/pp/pp_rewrite.mll[27,14524+17]..astlib/pp/pp_rewrite.mll[27,14524+18])
                                                  Texp_ident "c/235"
                                            ]
                                          expression (astlib/pp/pp_rewrite.mll[28,14544+6]..astlib/pp/pp_rewrite.mll[28,14544+45])
                                            Texp_apply
                                            expression (astlib/pp/pp_rewrite.mll[28,14544+6]..astlib/pp/pp_rewrite.mll[28,14544+13])
                                              Texp_ident "rewrite/116"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (astlib/pp/pp_rewrite.mll[28,14544+14]..astlib/pp/pp_rewrite.mll[28,14544+24])
                                                  Texp_ident "is_current/171"
                                              <arg>
                                                Nolabel
                                                expression (astlib/pp/pp_rewrite.mll[28,14544+25]..astlib/pp/pp_rewrite.mll[28,14544+38])
                                                  Texp_ident "ocaml_version/172"
                                              <arg>
                                                Nolabel
                                                expression (astlib/pp/pp_rewrite.mll[28,14544+39]..astlib/pp/pp_rewrite.mll[28,14544+45])
                                                  Texp_ident "lexbuf/173"
                                            ]
                                    <case>
                                      pattern (astlib/pp/pp_rewrite.ml[260,14629+4]..astlib/pp/pp_rewrite.ml[260,14629+5])
                                        Tpat_value
                                        pattern (astlib/pp/pp_rewrite.ml[260,14629+4]..astlib/pp/pp_rewrite.ml[260,14629+5])
                                          Tpat_constant Const_int 4
                                      expression (astlib/pp/pp_rewrite.mll[30,14670+8]..astlib/pp/pp_rewrite.mll[30,14670+14])
                                        Texp_construct "()"
                                        []
                                    <case>
                                      pattern (astlib/pp/pp_rewrite.ml[265,14718+4]..astlib/pp/pp_rewrite.ml[265,14718+21])
                                        Tpat_value
                                        pattern (astlib/pp/pp_rewrite.ml[265,14718+4]..astlib/pp/pp_rewrite.ml[265,14718+21])
                                          Tpat_var "__ocaml_lex_state/178"
                                      expression (astlib/pp/pp_rewrite.ml[265,14718+25]..astlib/pp/pp_rewrite.ml[266,14777+79])
                                        Texp_sequence
                                        expression (astlib/pp/pp_rewrite.ml[265,14718+25]..astlib/pp/pp_rewrite.ml[265,14718+57])
                                          Texp_apply
                                          expression (astlib/pp/pp_rewrite.ml[265,14718+25]..astlib/pp/pp_rewrite.ml[265,14718+50])
                                            Texp_field
                                            expression (astlib/pp/pp_rewrite.ml[265,14718+25]..astlib/pp/pp_rewrite.ml[265,14718+31])
                                              Texp_ident "lexbuf/173"
                                            "Lexing.refill_buff"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (astlib/pp/pp_rewrite.ml[265,14718+51]..astlib/pp/pp_rewrite.ml[265,14718+57])
                                                Texp_ident "lexbuf/173"
                                          ]
                                        expression (astlib/pp/pp_rewrite.ml[266,14777+6]..astlib/pp/pp_rewrite.ml[266,14777+79])
                                          Texp_apply
                                          expression (astlib/pp/pp_rewrite.ml[266,14777+6]..astlib/pp/pp_rewrite.ml[266,14777+29])
                                            Texp_ident "__ocaml_lex_rewrite_rec/117"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (astlib/pp/pp_rewrite.ml[266,14777+30]..astlib/pp/pp_rewrite.ml[266,14777+40])
                                                Texp_ident "is_current/171"
                                            <arg>
                                              Nolabel
                                              expression (astlib/pp/pp_rewrite.ml[266,14777+41]..astlib/pp/pp_rewrite.ml[266,14777+54])
                                                Texp_ident "ocaml_version/172"
                                            <arg>
                                              Nolabel
                                              expression (astlib/pp/pp_rewrite.ml[266,14777+55]..astlib/pp/pp_rewrite.ml[266,14777+61])
                                                Texp_ident "lexbuf/173"
                                            <arg>
                                              Nolabel
                                              expression (astlib/pp/pp_rewrite.ml[266,14777+62]..astlib/pp/pp_rewrite.ml[266,14777+79])
                                                Texp_ident "__ocaml_lex_state/178"
                                          ]
                                  ]
                                  []
                            ]
                      ]
                ]
          ]
    ]
]

(seq
  (let
    (__ocaml_lex_tables/88 =
       [0:
        "\000\000\251\255\252\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\002\000\002\000\000\000\001\000\000\000\255\255\001\000\000\000\002\000\001\000\004\000\004\000\001\000\002\000\003\000\005\000\254\255\005\000\002\000\003\000\006\000\003\000\001\000\003\000\t\000\b\000\b\000\003\000\005\000\006\000\b\000\253\255"
        "\255\255\255\255\255\255\003\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255"
        "\002\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\017\000\255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\027\000\028\000\255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255*\000+\000\255\255\000\000"
t\000\024\000\n\000\"\000\014\000\006\000\023\000&\000\005\000'\000\000\000\022\000%\000\b\000\031\000\015\000\000\000\012\000\r\000\020\000\011\000\016\000\025\000\026\000 \000#\000(\000)\000\000\000\000\000\007\000\021\000!\000$\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\255\255\255\255\255\255\000\000\255\255\255\255\000\000\000\000\000\000"
r\000\005\000\022\000%\000\004\000&\000\255\255\021\000$\000\007\000\b\000\014\000\255\255\011\000\012\000\t\000\n
        "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\003\000\000\000\000\000\n\000"
        "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
        "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000"


        "\255\001\255\255\000\001\255\002\255\255\000\002\255"])
    (setfield_ptr(root-init) 1 (global Dune__exe__Pp_rewrite!)
      __ocaml_lex_tables/88))
  (letrec
    (rewrite/116
       (function is_current/118 ocaml_version/119 lexbuf/120
         (seq (setfield_ptr 9 lexbuf/120 (caml_make_vect 3 -1))
           (apply __ocaml_lex_rewrite_rec/117 is_current/118
             ocaml_version/119 lexbuf/120 0)))
      __ocaml_lex_rewrite_rec/117
        (function is_current/171 ocaml_version/172 lexbuf/173
          __ocaml_lex_state/174[int]
          (let
            (__ocaml_lex_state/178 =
               (apply (field_imm 20 (global Stdlib__lexing!))
                 (field_imm 1 (global Dune__exe__Pp_rewrite!))
                 __ocaml_lex_state/174 lexbuf/173))
            (catch
              (if (isout 4 __ocaml_lex_state/178) (exit 1)
                (switch* __ocaml_lex_state/178
                 case int 0:
                  (let
                    (s/179 =
                       (apply (field_imm 15 (global Stdlib__lexing!))
                         lexbuf/173 (+ (field_int 4 lexbuf/173) 13)
                         (+ (field_int 5 lexbuf/173) -2))
                     chunk/180 =
                       (if is_current/171
                         (apply (field_imm 30 (global Stdlib!))
                           "             "
                           (apply (field_imm 30 (global Stdlib!)) s/179 "  "))
                         (apply (field_imm 7 (global Stdlib__lexing!))
                           lexbuf/173)))
                    (seq (apply (field_imm 44 (global Stdlib!)) chunk/180)
                      (apply rewrite/116 is_current/171 ocaml_version/172
                        lexbuf/173)))
                 case int 1:
                  (let
                    (v/181 =
                       (apply (field_imm 15 (global Stdlib__lexing!))
                         lexbuf/173 (+ (field_int 4 lexbuf/173) 14)
                         (array.get[int] (field_mut 9 lexbuf/173) 0))
                     s/182 =
                       (apply (field_imm 15 (global Stdlib__lexing!))
                         lexbuf/173
                         (+ (array.get[int] (field_mut 9 lexbuf/173) 0) 1)
                         (+ (field_int 5 lexbuf/173) -2))
                     chunk/183 =
                       (if (caml_string_lessequal v/181 ocaml_version/172)
                         (apply (field_imm 30 (global Stdlib!))
                           "              "
                           (apply (field_imm 30 (global Stdlib!))
                             (apply (field_imm 0 (global Stdlib__string!))
                               (+ (string.length v/181) 1) ' ')
                             (apply (field_imm 30 (global Stdlib!)) s/182
                               "  ")))
                         (apply (field_imm 7 (global Stdlib__lexing!))
                           lexbuf/173)))
                    (seq (apply (field_imm 44 (global Stdlib!)) chunk/183)
                      (apply rewrite/116 is_current/171 ocaml_version/172
                        lexbuf/173)))
                 case int 2:
                  (let
                    (v/232 =
                       (apply (field_imm 15 (global Stdlib__lexing!))
                         lexbuf/173 (+ (field_int 4 lexbuf/173) 18)
                         (array.get[int] (field_mut 9 lexbuf/173) 0))
                     s/233 =
                       (apply (field_imm 15 (global Stdlib__lexing!))
                         lexbuf/173
                         (+ (array.get[int] (field_mut 9 lexbuf/173) 0) 1)
                         (+ (field_int 5 lexbuf/173) -2))
                     chunk/234 =
                       (if
                         (not
                           (caml_string_lessequal v/232 ocaml_version/172))
                         (apply (field_imm 30 (global Stdlib!))
                           "                  "
                           (apply (field_imm 30 (global Stdlib!))
                             (apply (field_imm 0 (global Stdlib__string!))
                               (+ (string.length v/232) 1) ' ')
                             (apply (field_imm 30 (global Stdlib!)) s/233
                               "  ")))
                         (apply (field_imm 7 (global Stdlib__lexing!))
                           lexbuf/173)))
                    (seq (apply (field_imm 44 (global Stdlib!)) chunk/234)
                      (apply rewrite/116 is_current/171 ocaml_version/172
                        lexbuf/173)))
                 case int 3:
                  (let
                    (c/235 =[int]
                       (apply (field_imm 17 (global Stdlib__lexing!))
                         lexbuf/173 (field_int 4 lexbuf/173)))
                    (seq (apply (field_imm 43 (global Stdlib!)) c/235)
                      (apply rewrite/116 is_current/171 ocaml_version/172
                        lexbuf/173)))
                 case int 4: 0))
             with (1)
              (seq (apply (field_imm 0 lexbuf/173) lexbuf/173)
                (apply __ocaml_lex_rewrite_rec/117 is_current/171
                  ocaml_version/172 lexbuf/173 __ocaml_lex_state/178))))))
    (seq
      (setfield_ptr(root-init) 0 (global Dune__exe__Pp_rewrite!) rewrite/116)
      (setfield_ptr(root-init) 2 (global Dune__exe__Pp_rewrite!)
        __ocaml_lex_rewrite_rec/117)))
  0)
(seq
  (let
    (__ocaml_lex_tables/88 =
       [0:
        "\000\000\251\255\252\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\002\000\002\000\000\000\001\000\000\000\255\255\001\000\000\000\002\000\001\000\004\000\004\000\001\000\002\000\003\000\005\000\254\255\005\000\002\000\003\000\006\000\003\000\001\000\003\000\t\000\b\000\b\000\003\000\005\000\006\000\b\000\253\255"
        "\255\255\255\255\255\255\003\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255"
        "\002\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\017\000\255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\027\000\028\000\255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255*\000+\000\255\255\000\000"
t\000\024\000\n\000\"\000\014\000\006\000\023\000&\000\005\000'\000\000\000\022\000%\000\b\000\031\000\015\000\000\000\012\000\r
r\000\005\000\022\000%\000\004\000&\000\255\255\021\000$\000\007\000\b\000\014\000\255\255\011\000\012\000\t\000\n
        "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\003\000\000\000\000\000\n\000"
        "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
        "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000"


        "\255\001\255\255\000\001\255\002\255\255\000\002\255"])
    (setfield_ptr(root-init) 1 (global Dune__exe__Pp_rewrite!)
      __ocaml_lex_tables/88))
  (letrec
    (rewrite/116
       (function is_current/118 ocaml_version/119 lexbuf/120
         (seq (setfield_ptr 9 lexbuf/120 (caml_make_vect 3 -1))
           (apply __ocaml_lex_rewrite_rec/117 is_current/118
             ocaml_version/119 lexbuf/120 0)))
      __ocaml_lex_rewrite_rec/117
        (function is_current/171 ocaml_version/172 lexbuf/173
          __ocaml_lex_state/174[int]
          (let
            (__ocaml_lex_state/178 =
               (apply (field_imm 20 (global Stdlib__lexing!))
                 (field_imm 1 (global Dune__exe__Pp_rewrite!))
                 __ocaml_lex_state/174 lexbuf/173))
            (if (isout 4 __ocaml_lex_state/178)
              (seq (apply (field_imm 0 lexbuf/173) lexbuf/173)
                (apply __ocaml_lex_rewrite_rec/117 is_current/171
                  ocaml_version/172 lexbuf/173 __ocaml_lex_state/178))
              (switch* __ocaml_lex_state/178
               case int 0:
                (let
                  (s/179 =
                     (apply (field_imm 15 (global Stdlib__lexing!))
                       lexbuf/173 (+ (field_int 4 lexbuf/173) 13)
                       (+ (field_int 5 lexbuf/173) -2))
                   chunk/180 =
                     (if is_current/171
                       (apply (field_imm 30 (global Stdlib!)) "             "
                         (apply (field_imm 30 (global Stdlib!)) s/179 "  "))
                       (apply (field_imm 7 (global Stdlib__lexing!))
                         lexbuf/173)))
                  (seq (apply (field_imm 44 (global Stdlib!)) chunk/180)
                    (apply rewrite/116 is_current/171 ocaml_version/172
                      lexbuf/173)))
               case int 1:
                (let
                  (v/181 =
                     (apply (field_imm 15 (global Stdlib__lexing!))
                       lexbuf/173 (+ (field_int 4 lexbuf/173) 14)
                       (array.get[int] (field_mut 9 lexbuf/173) 0))
                   s/182 =
                     (apply (field_imm 15 (global Stdlib__lexing!))
                       lexbuf/173
                       (+ (array.get[int] (field_mut 9 lexbuf/173) 0) 1)
                       (+ (field_int 5 lexbuf/173) -2))
                   chunk/183 =
                     (if (caml_string_lessequal v/181 ocaml_version/172)
                       (apply (field_imm 30 (global Stdlib!))
                         "              "
                         (apply (field_imm 30 (global Stdlib!))
                           (apply (field_imm 0 (global Stdlib__string!))
                             (+ (string.length v/181) 1) ' ')
                           (apply (field_imm 30 (global Stdlib!)) s/182 "  ")))
                       (apply (field_imm 7 (global Stdlib__lexing!))
                         lexbuf/173)))
                  (seq (apply (field_imm 44 (global Stdlib!)) chunk/183)
                    (apply rewrite/116 is_current/171 ocaml_version/172
                      lexbuf/173)))
               case int 2:
                (let
                  (v/232 =
                     (apply (field_imm 15 (global Stdlib__lexing!))
                       lexbuf/173 (+ (field_int 4 lexbuf/173) 18)
                       (array.get[int] (field_mut 9 lexbuf/173) 0))
                   s/233 =
                     (apply (field_imm 15 (global Stdlib__lexing!))
                       lexbuf/173
                       (+ (array.get[int] (field_mut 9 lexbuf/173) 0) 1)
                       (+ (field_int 5 lexbuf/173) -2))
                   chunk/234 =
                     (if
                       (not (caml_string_lessequal v/232 ocaml_version/172))
                       (apply (field_imm 30 (global Stdlib!))
                         "                  "
                         (apply (field_imm 30 (global Stdlib!))
                           (apply (field_imm 0 (global Stdlib__string!))
                             (+ (string.length v/232) 1) ' ')
                           (apply (field_imm 30 (global Stdlib!)) s/233 "  ")))
                       (apply (field_imm 7 (global Stdlib__lexing!))
                         lexbuf/173)))
                  (seq (apply (field_imm 44 (global Stdlib!)) chunk/234)
                    (apply rewrite/116 is_current/171 ocaml_version/172
                      lexbuf/173)))
               case int 3:
                (let
                  (c/235 =[int]
                     (apply (field_imm 17 (global Stdlib__lexing!))
                       lexbuf/173 (field_int 4 lexbuf/173)))
                  (seq (apply (field_imm 43 (global Stdlib!)) c/235)
                    (apply rewrite/116 is_current/171 ocaml_version/172
                      lexbuf/173)))
               case int 4: 0)))))
    (seq
      (setfield_ptr(root-init) 0 (global Dune__exe__Pp_rewrite!) rewrite/116)
      (setfield_ptr(root-init) 2 (global Dune__exe__Pp_rewrite!)
        __ocaml_lex_rewrite_rec/117)))
  0)
