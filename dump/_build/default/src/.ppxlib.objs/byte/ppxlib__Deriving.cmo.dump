[
  structure_item (src/deriving.ml[1,0+0]..[1,0+11])
    Pstr_open Fresh
    module_expr (src/deriving.ml[1,0+5]..[1,0+11])
      Pmod_ident "Import" (src/deriving.ml[1,0+5]..[1,0+11])
  structure_item (src/deriving.ml[2,12+0]..[2,12+24])
    Pstr_open Fresh
    module_expr (src/deriving.ml[2,12+5]..[2,12+24])
      Pmod_ident "Ast_builder.Default" (src/deriving.ml[2,12+5]..[2,12+24])
  structure_item (src/deriving.ml[7,207+0]..[7,207+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[7,207+4]..[7,207+38])
          Ppat_var "do_insert_unused_warning_attribute" (src/deriving.ml[7,207+4]..[7,207+38])
        expression (src/deriving.ml[7,207+41]..[7,207+50])
          Pexp_apply
          expression (src/deriving.ml[7,207+41]..[7,207+44])
            Pexp_ident "ref" (src/deriving.ml[7,207+41]..[7,207+44])
          [
            <arg>
            Nolabel
              expression (src/deriving.ml[7,207+45]..[7,207+50])
                Pexp_construct "false" (src/deriving.ml[7,207+45]..[7,207+50])
                None
          ]
    ]
  structure_item (src/deriving.ml[8,258+0]..[8,258+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[8,258+4]..[8,258+17])
          Ppat_var "keep_w32_impl" (src/deriving.ml[8,258+4]..[8,258+17])
        expression (src/deriving.ml[8,258+20]..[8,258+29])
          Pexp_apply
          expression (src/deriving.ml[8,258+20]..[8,258+23])
            Pexp_ident "ref" (src/deriving.ml[8,258+20]..[8,258+23])
          [
            <arg>
            Nolabel
              expression (src/deriving.ml[8,258+24]..[8,258+29])
                Pexp_construct "false" (src/deriving.ml[8,258+24]..[8,258+29])
                None
          ]
    ]
  structure_item (src/deriving.ml[9,288+0]..[9,288+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[9,288+4]..[9,288+17])
          Ppat_var "keep_w32_intf" (src/deriving.ml[9,288+4]..[9,288+17])
        expression (src/deriving.ml[9,288+20]..[9,288+29])
          Pexp_apply
          expression (src/deriving.ml[9,288+20]..[9,288+23])
            Pexp_ident "ref" (src/deriving.ml[9,288+20]..[9,288+23])
          [
            <arg>
            Nolabel
              expression (src/deriving.ml[9,288+24]..[9,288+29])
                Pexp_construct "false" (src/deriving.ml[9,288+24]..[9,288+29])
                None
          ]
    ]
  structure_item (src/deriving.ml[11,319+0]..[38,1288+56])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[11,319+4]..[11,319+6])
          Ppat_construct "()" (src/deriving.ml[11,319+4]..[11,319+6])
          None
        expression (src/deriving.ml[12,328+2]..[38,1288+56])
          Pexp_let Nonrec
          [
            <def>
              pattern (src/deriving.ml[12,328+6]..[12,328+19])
                Ppat_var "keep_w32_spec" (src/deriving.ml[12,328+6]..[12,328+19])
              expression (src/deriving.ml[13,350+4]..[21,598+29])
                Pexp_construct "Stdlib.Arg.Symbol" (src/deriving.ml[13,350+4]..[13,350+21])
                Some
                  expression (src/deriving.ml[14,372+6]..[21,598+29])
                    Pexp_tuple
                    [
                      expression (src/deriving.ml[14,372+8]..[14,372+34])
                        Pexp_construct "::" (src/deriving.ml[14,372+10]..[14,372+34]) ghost
                        Some
                          expression (src/deriving.ml[14,372+10]..[14,372+34]) ghost
                            Pexp_tuple
                            [
                              expression (src/deriving.ml[14,372+10]..[14,372+16])
                                Pexp_constant PConst_string("impl",(src/deriving.ml[14,372+11]..[14,372+15]),None)
                              expression (src/deriving.ml[14,372+18]..[14,372+34]) ghost
                                Pexp_construct "::" (src/deriving.ml[14,372+18]..[14,372+34]) ghost
                                Some
                                  expression (src/deriving.ml[14,372+18]..[14,372+34]) ghost
                                    Pexp_tuple
                                    [
                                      expression (src/deriving.ml[14,372+18]..[14,372+24])
                                        Pexp_constant PConst_string("intf",(src/deriving.ml[14,372+19]..[14,372+23]),None)
                                      expression (src/deriving.ml[14,372+26]..[14,372+34]) ghost
                                        Pexp_construct "::" (src/deriving.ml[14,372+26]..[14,372+34]) ghost
                                        Some
                                          expression (src/deriving.ml[14,372+26]..[14,372+34]) ghost
                                            Pexp_tuple
                                            [
                                              expression (src/deriving.ml[14,372+26]..[14,372+32])
                                                Pexp_constant PConst_string("both",(src/deriving.ml[14,372+27]..[14,372+31]),None)
                                              expression (src/deriving.ml[14,372+33]..[14,372+34]) ghost
                                                Pexp_construct "[]" (src/deriving.ml[14,372+33]..[14,372+34]) ghost
                                                None
                                            ]
                                    ]
                            ]
                      expression (src/deriving.ml[15,408+8]..[21,598+27])
                        Pexp_function
                        [
                          <case>
                            pattern (src/deriving.ml[16,425+10]..[16,425+16])
                              Ppat_constant PConst_string("impl",(src/deriving.ml[16,425+11]..[16,425+15]),None)
                            expression (src/deriving.ml[16,425+20]..[16,425+41])
                              Pexp_apply
                              expression (src/deriving.ml[16,425+34]..[16,425+36])
                                Pexp_ident ":=" (src/deriving.ml[16,425+34]..[16,425+36])
                              [
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[16,425+20]..[16,425+33])
                                    Pexp_ident "keep_w32_impl" (src/deriving.ml[16,425+20]..[16,425+33])
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[16,425+37]..[16,425+41])
                                    Pexp_construct "true" (src/deriving.ml[16,425+37]..[16,425+41])
                                    None
                              ]
                          <case>
                            pattern (src/deriving.ml[17,467+10]..[17,467+16])
                              Ppat_constant PConst_string("intf",(src/deriving.ml[17,467+11]..[17,467+15]),None)
                            expression (src/deriving.ml[17,467+20]..[17,467+41])
                              Pexp_apply
                              expression (src/deriving.ml[17,467+34]..[17,467+36])
                                Pexp_ident ":=" (src/deriving.ml[17,467+34]..[17,467+36])
                              [
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[17,467+20]..[17,467+33])
                                    Pexp_ident "keep_w32_intf" (src/deriving.ml[17,467+20]..[17,467+33])
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[17,467+37]..[17,467+41])
                                    Pexp_construct "true" (src/deriving.ml[17,467+37]..[17,467+41])
                                    None
                              ]
                          <case>
                            pattern (src/deriving.ml[18,509+10]..[18,509+16])
                              Ppat_constant PConst_string("both",(src/deriving.ml[18,509+11]..[18,509+15]),None)
                            expression (src/deriving.ml[19,529+12]..[20,564+33])
                              Pexp_sequence
                              expression (src/deriving.ml[19,529+12]..[19,529+33])
                                Pexp_apply
                                expression (src/deriving.ml[19,529+26]..[19,529+28])
                                  Pexp_ident ":=" (src/deriving.ml[19,529+26]..[19,529+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[19,529+12]..[19,529+25])
                                      Pexp_ident "keep_w32_impl" (src/deriving.ml[19,529+12]..[19,529+25])
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[19,529+29]..[19,529+33])
                                      Pexp_construct "true" (src/deriving.ml[19,529+29]..[19,529+33])
                                      None
                                ]
                              expression (src/deriving.ml[20,564+12]..[20,564+33])
                                Pexp_apply
                                expression (src/deriving.ml[20,564+26]..[20,564+28])
                                  Pexp_ident ":=" (src/deriving.ml[20,564+26]..[20,564+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[20,564+12]..[20,564+25])
                                      Pexp_ident "keep_w32_intf" (src/deriving.ml[20,564+12]..[20,564+25])
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[20,564+29]..[20,564+33])
                                      Pexp_construct "true" (src/deriving.ml[20,564+29]..[20,564+33])
                                      None
                                ]
                          <case>
                            pattern (src/deriving.ml[21,598+10]..[21,598+11])
                              Ppat_any
                            expression (src/deriving.ml[21,598+15]..[21,598+27])
                              Pexp_assert
                              expression (src/deriving.ml[21,598+22]..[21,598+27])
                                Pexp_construct "false" (src/deriving.ml[21,598+22]..[21,598+27])
                                None
                        ]
                    ]
          ]
          expression (src/deriving.ml[23,633+2]..[38,1288+56])
            Pexp_let Nonrec
            [
              <def>
                pattern (src/deriving.ml[23,633+6]..[23,633+19])
                  Ppat_var "conv_w32_spec" (src/deriving.ml[23,633+6]..[23,633+19])
                expression (src/deriving.ml[24,655+4]..[29,859+29])
                  Pexp_construct "Stdlib.Arg.Symbol" (src/deriving.ml[24,655+4]..[24,655+21])
                  Some
                    expression (src/deriving.ml[25,677+6]..[29,859+29])
                      Pexp_tuple
                      [
                        expression (src/deriving.ml[25,677+8]..[25,677+31])
                          Pexp_construct "::" (src/deriving.ml[25,677+10]..[25,677+31]) ghost
                          Some
                            expression (src/deriving.ml[25,677+10]..[25,677+31]) ghost
                              Pexp_tuple
                              [
                                expression (src/deriving.ml[25,677+10]..[25,677+16])
                                  Pexp_constant PConst_string("code",(src/deriving.ml[25,677+11]..[25,677+15]),None)
                                expression (src/deriving.ml[25,677+18]..[25,677+31]) ghost
                                  Pexp_construct "::" (src/deriving.ml[25,677+18]..[25,677+31]) ghost
                                  Some
                                    expression (src/deriving.ml[25,677+18]..[25,677+31]) ghost
                                      Pexp_tuple
                                      [
                                        expression (src/deriving.ml[25,677+18]..[25,677+29])
                                          Pexp_constant PConst_string("attribute",(src/deriving.ml[25,677+19]..[25,677+28]),None)
                                        expression (src/deriving.ml[25,677+30]..[25,677+31]) ghost
                                          Pexp_construct "[]" (src/deriving.ml[25,677+30]..[25,677+31]) ghost
                                          None
                                      ]
                              ]
                        expression (src/deriving.ml[26,710+8]..[29,859+27])
                          Pexp_function
                          [
                            <case>
                              pattern (src/deriving.ml[27,727+10]..[27,727+16])
                                Ppat_constant PConst_string("code",(src/deriving.ml[27,727+11]..[27,727+15]),None)
                              expression (src/deriving.ml[27,727+20]..[27,727+63])
                                Pexp_apply
                                expression (src/deriving.ml[27,727+55]..[27,727+57])
                                  Pexp_ident ":=" (src/deriving.ml[27,727+55]..[27,727+57])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[27,727+20]..[27,727+54])
                                      Pexp_ident "do_insert_unused_warning_attribute" (src/deriving.ml[27,727+20]..[27,727+54])
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[27,727+58]..[27,727+63])
                                      Pexp_construct "false" (src/deriving.ml[27,727+58]..[27,727+63])
                                      None
                                ]
                            <case>
                              pattern (src/deriving.ml[28,791+10]..[28,791+21])
                                Ppat_constant PConst_string("attribute",(src/deriving.ml[28,791+11]..[28,791+20]),None)
                              expression (src/deriving.ml[28,791+25]..[28,791+67])
                                Pexp_apply
                                expression (src/deriving.ml[28,791+60]..[28,791+62])
                                  Pexp_ident ":=" (src/deriving.ml[28,791+60]..[28,791+62])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[28,791+25]..[28,791+59])
                                      Pexp_ident "do_insert_unused_warning_attribute" (src/deriving.ml[28,791+25]..[28,791+59])
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[28,791+63]..[28,791+67])
                                      Pexp_construct "true" (src/deriving.ml[28,791+63]..[28,791+67])
                                      None
                                ]
                            <case>
                              pattern (src/deriving.ml[29,859+10]..[29,859+11])
                                Ppat_any
                              expression (src/deriving.ml[29,859+15]..[29,859+27])
                                Pexp_assert
                                expression (src/deriving.ml[29,859+22]..[29,859+27])
                                  Pexp_construct "false" (src/deriving.ml[29,859+22]..[29,859+27])
                                  None
                          ]
                      ]
            ]
            expression (src/deriving.ml[31,894+2]..[38,1288+56])
              Pexp_sequence
              expression (src/deriving.ml[31,894+2]..[32,946+67])
                Pexp_apply
                expression (src/deriving.ml[31,894+2]..[31,894+16])
                  Pexp_ident "Driver.add_arg" (src/deriving.ml[31,894+2]..[31,894+16])
                [
                  <arg>
                  Nolabel
                    expression (src/deriving.ml[31,894+17]..[31,894+37])
                      Pexp_constant PConst_string("-deriving-keep-w32",(src/deriving.ml[31,894+18]..[31,894+36]),None)
                  <arg>
                  Nolabel
                    expression (src/deriving.ml[31,894+38]..[31,894+51])
                      Pexp_ident "keep_w32_spec" (src/deriving.ml[31,894+38]..[31,894+51])
                  <arg>
                  Labelled "doc"
                    expression (src/deriving.ml[32,946+9]..[32,946+67])
                      Pexp_constant PConst_string(" Do not try to disable warning 32 for the generated code",(src/deriving.ml[32,946+10]..[32,946+66]),None)
                ]
              expression (src/deriving.ml[33,1015+2]..[38,1288+56])
                Pexp_sequence
                expression (src/deriving.ml[33,1015+2]..[34,1077+60])
                  Pexp_apply
                  expression (src/deriving.ml[33,1015+2]..[33,1015+16])
                    Pexp_ident "Driver.add_arg" (src/deriving.ml[33,1015+2]..[33,1015+16])
                  [
                    <arg>
                    Nolabel
                      expression (src/deriving.ml[33,1015+17]..[33,1015+47])
                        Pexp_constant PConst_string("-deriving-disable-w32-method",(src/deriving.ml[33,1015+18]..[33,1015+46]),None)
                    <arg>
                    Nolabel
                      expression (src/deriving.ml[33,1015+48]..[33,1015+61])
                        Pexp_ident "conv_w32_spec" (src/deriving.ml[33,1015+48]..[33,1015+61])
                    <arg>
                    Labelled "doc"
                      expression (src/deriving.ml[34,1077+9]..[34,1077+60])
                        Pexp_constant PConst_string(" How to disable warning 32 for the generated code",(src/deriving.ml[34,1077+10]..[34,1077+59]),None)
                  ]
                expression (src/deriving.ml[35,1139+2]..[38,1288+56])
                  Pexp_sequence
                  expression (src/deriving.ml[35,1139+2]..[36,1192+46])
                    Pexp_apply
                    expression (src/deriving.ml[35,1139+2]..[35,1139+16])
                      Pexp_ident "Driver.add_arg" (src/deriving.ml[35,1139+2]..[35,1139+16])
                    [
                      <arg>
                      Nolabel
                        expression (src/deriving.ml[35,1139+17]..[35,1139+38])
                          Pexp_constant PConst_string("-type-conv-keep-w32",(src/deriving.ml[35,1139+18]..[35,1139+37]),None)
                      <arg>
                      Nolabel
                        expression (src/deriving.ml[35,1139+39]..[35,1139+52])
                          Pexp_ident "keep_w32_spec" (src/deriving.ml[35,1139+39]..[35,1139+52])
                      <arg>
                      Labelled "doc"
                        expression (src/deriving.ml[36,1192+9]..[36,1192+46])
                          Pexp_constant PConst_string(" Deprecated, use -deriving-keep-w32",(src/deriving.ml[36,1192+10]..[36,1192+45]),None)
                    ]
                  expression (src/deriving.ml[37,1240+2]..[38,1288+56])
                    Pexp_apply
                    expression (src/deriving.ml[37,1240+2]..[37,1240+16])
                      Pexp_ident "Driver.add_arg" (src/deriving.ml[37,1240+2]..[37,1240+16])
                    [
                      <arg>
                      Nolabel
                        expression (src/deriving.ml[37,1240+17]..[37,1240+33])
                          Pexp_constant PConst_string("-type-conv-w32",(src/deriving.ml[37,1240+18]..[37,1240+32]),None)
                      <arg>
                      Nolabel
                        expression (src/deriving.ml[37,1240+34]..[37,1240+47])
                          Pexp_ident "conv_w32_spec" (src/deriving.ml[37,1240+34]..[37,1240+47])
                      <arg>
                      Labelled "doc"
                        expression (src/deriving.ml[38,1288+9]..[38,1288+56])
                          Pexp_constant PConst_string(" Deprecated, use -deriving-disable-w32-method",(src/deriving.ml[38,1288+10]..[38,1288+55]),None)
                    ]
    ]
  structure_item (src/deriving.ml[40,1346+0]..[40,1346+57])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[40,1346+4]..[40,1346+17])
          Ppat_var "keep_w32_impl" (src/deriving.ml[40,1346+4]..[40,1346+17])
        expression (src/deriving.ml[40,1346+18]..[40,1346+57]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/deriving.ml[40,1346+18]..[40,1346+20])
            Ppat_construct "()" (src/deriving.ml[40,1346+18]..[40,1346+20])
            None
          expression (src/deriving.ml[40,1346+23]..[40,1346+57])
            Pexp_apply
            expression (src/deriving.ml[40,1346+38]..[40,1346+40])
              Pexp_ident "||" (src/deriving.ml[40,1346+38]..[40,1346+40])
            [
              <arg>
              Nolabel
                expression (src/deriving.ml[40,1346+23]..[40,1346+37])
                  Pexp_apply
                  expression (src/deriving.ml[40,1346+23]..[40,1346+24])
                    Pexp_ident "!" (src/deriving.ml[40,1346+23]..[40,1346+24])
                  [
                    <arg>
                    Nolabel
                      expression (src/deriving.ml[40,1346+24]..[40,1346+37])
                        Pexp_ident "keep_w32_impl" (src/deriving.ml[40,1346+24]..[40,1346+37])
                  ]
              <arg>
              Nolabel
                expression (src/deriving.ml[40,1346+41]..[40,1346+57])
                  Pexp_apply
                  expression (src/deriving.ml[40,1346+41]..[40,1346+54])
                    Pexp_ident "Driver.pretty" (src/deriving.ml[40,1346+41]..[40,1346+54])
                  [
                    <arg>
                    Nolabel
                      expression (src/deriving.ml[40,1346+55]..[40,1346+57])
                        Pexp_construct "()" (src/deriving.ml[40,1346+55]..[40,1346+57])
                        None
                  ]
            ]
    ]
  structure_item (src/deriving.ml[41,1404+0]..[41,1404+57])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[41,1404+4]..[41,1404+17])
          Ppat_var "keep_w32_intf" (src/deriving.ml[41,1404+4]..[41,1404+17])
        expression (src/deriving.ml[41,1404+18]..[41,1404+57]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/deriving.ml[41,1404+18]..[41,1404+20])
            Ppat_construct "()" (src/deriving.ml[41,1404+18]..[41,1404+20])
            None
          expression (src/deriving.ml[41,1404+23]..[41,1404+57])
            Pexp_apply
            expression (src/deriving.ml[41,1404+38]..[41,1404+40])
              Pexp_ident "||" (src/deriving.ml[41,1404+38]..[41,1404+40])
            [
              <arg>
              Nolabel
                expression (src/deriving.ml[41,1404+23]..[41,1404+37])
                  Pexp_apply
                  expression (src/deriving.ml[41,1404+23]..[41,1404+24])
                    Pexp_ident "!" (src/deriving.ml[41,1404+23]..[41,1404+24])
                  [
                    <arg>
                    Nolabel
                      expression (src/deriving.ml[41,1404+24]..[41,1404+37])
                        Pexp_ident "keep_w32_intf" (src/deriving.ml[41,1404+24]..[41,1404+37])
                  ]
              <arg>
              Nolabel
                expression (src/deriving.ml[41,1404+41]..[41,1404+57])
                  Pexp_apply
                  expression (src/deriving.ml[41,1404+41]..[41,1404+54])
                    Pexp_ident "Driver.pretty" (src/deriving.ml[41,1404+41]..[41,1404+54])
                  [
                    <arg>
                    Nolabel
                      expression (src/deriving.ml[41,1404+55]..[41,1404+57])
                        Pexp_construct "()" (src/deriving.ml[41,1404+55]..[41,1404+57])
                        None
                  ]
            ]
    ]
  structure_item (src/deriving.ml[42,1462+0]..[42,1462+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[42,1462+4]..[42,1462+17])
          Ppat_var "keep_w60_impl" (src/deriving.ml[42,1462+4]..[42,1462+17])
        expression (src/deriving.ml[42,1462+20]..[42,1462+29])
          Pexp_apply
          expression (src/deriving.ml[42,1462+20]..[42,1462+23])
            Pexp_ident "ref" (src/deriving.ml[42,1462+20]..[42,1462+23])
          [
            <arg>
            Nolabel
              expression (src/deriving.ml[42,1462+24]..[42,1462+29])
                Pexp_construct "false" (src/deriving.ml[42,1462+24]..[42,1462+29])
                None
          ]
    ]
  structure_item (src/deriving.ml[43,1492+0]..[43,1492+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[43,1492+4]..[43,1492+17])
          Ppat_var "keep_w60_intf" (src/deriving.ml[43,1492+4]..[43,1492+17])
        expression (src/deriving.ml[43,1492+20]..[43,1492+29])
          Pexp_apply
          expression (src/deriving.ml[43,1492+20]..[43,1492+23])
            Pexp_ident "ref" (src/deriving.ml[43,1492+20]..[43,1492+23])
          [
            <arg>
            Nolabel
              expression (src/deriving.ml[43,1492+24]..[43,1492+29])
                Pexp_construct "false" (src/deriving.ml[43,1492+24]..[43,1492+29])
                None
          ]
    ]
  structure_item (src/deriving.ml[45,1523+0]..[58,1889+67])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[45,1523+4]..[45,1523+6])
          Ppat_construct "()" (src/deriving.ml[45,1523+4]..[45,1523+6])
          None
        expression (src/deriving.ml[46,1532+2]..[58,1889+67])
          Pexp_let Nonrec
          [
            <def>
              pattern (src/deriving.ml[46,1532+6]..[46,1532+19])
                Ppat_var "keep_w60_spec" (src/deriving.ml[46,1532+6]..[46,1532+19])
              expression (src/deriving.ml[47,1554+4]..[55,1802+29])
                Pexp_construct "Stdlib.Arg.Symbol" (src/deriving.ml[47,1554+4]..[47,1554+21])
                Some
                  expression (src/deriving.ml[48,1576+6]..[55,1802+29])
                    Pexp_tuple
                    [
                      expression (src/deriving.ml[48,1576+8]..[48,1576+34])
                        Pexp_construct "::" (src/deriving.ml[48,1576+10]..[48,1576+34]) ghost
                        Some
                          expression (src/deriving.ml[48,1576+10]..[48,1576+34]) ghost
                            Pexp_tuple
                            [
                              expression (src/deriving.ml[48,1576+10]..[48,1576+16])
                                Pexp_constant PConst_string("impl",(src/deriving.ml[48,1576+11]..[48,1576+15]),None)
                              expression (src/deriving.ml[48,1576+18]..[48,1576+34]) ghost
                                Pexp_construct "::" (src/deriving.ml[48,1576+18]..[48,1576+34]) ghost
                                Some
                                  expression (src/deriving.ml[48,1576+18]..[48,1576+34]) ghost
                                    Pexp_tuple
                                    [
                                      expression (src/deriving.ml[48,1576+18]..[48,1576+24])
                                        Pexp_constant PConst_string("intf",(src/deriving.ml[48,1576+19]..[48,1576+23]),None)
                                      expression (src/deriving.ml[48,1576+26]..[48,1576+34]) ghost
                                        Pexp_construct "::" (src/deriving.ml[48,1576+26]..[48,1576+34]) ghost
                                        Some
                                          expression (src/deriving.ml[48,1576+26]..[48,1576+34]) ghost
                                            Pexp_tuple
                                            [
                                              expression (src/deriving.ml[48,1576+26]..[48,1576+32])
                                                Pexp_constant PConst_string("both",(src/deriving.ml[48,1576+27]..[48,1576+31]),None)
                                              expression (src/deriving.ml[48,1576+33]..[48,1576+34]) ghost
                                                Pexp_construct "[]" (src/deriving.ml[48,1576+33]..[48,1576+34]) ghost
                                                None
                                            ]
                                    ]
                            ]
                      expression (src/deriving.ml[49,1612+8]..[55,1802+27])
                        Pexp_function
                        [
                          <case>
                            pattern (src/deriving.ml[50,1629+10]..[50,1629+16])
                              Ppat_constant PConst_string("impl",(src/deriving.ml[50,1629+11]..[50,1629+15]),None)
                            expression (src/deriving.ml[50,1629+20]..[50,1629+41])
                              Pexp_apply
                              expression (src/deriving.ml[50,1629+34]..[50,1629+36])
                                Pexp_ident ":=" (src/deriving.ml[50,1629+34]..[50,1629+36])
                              [
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[50,1629+20]..[50,1629+33])
                                    Pexp_ident "keep_w60_impl" (src/deriving.ml[50,1629+20]..[50,1629+33])
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[50,1629+37]..[50,1629+41])
                                    Pexp_construct "true" (src/deriving.ml[50,1629+37]..[50,1629+41])
                                    None
                              ]
                          <case>
                            pattern (src/deriving.ml[51,1671+10]..[51,1671+16])
                              Ppat_constant PConst_string("intf",(src/deriving.ml[51,1671+11]..[51,1671+15]),None)
                            expression (src/deriving.ml[51,1671+20]..[51,1671+41])
                              Pexp_apply
                              expression (src/deriving.ml[51,1671+34]..[51,1671+36])
                                Pexp_ident ":=" (src/deriving.ml[51,1671+34]..[51,1671+36])
                              [
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[51,1671+20]..[51,1671+33])
                                    Pexp_ident "keep_w60_intf" (src/deriving.ml[51,1671+20]..[51,1671+33])
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[51,1671+37]..[51,1671+41])
                                    Pexp_construct "true" (src/deriving.ml[51,1671+37]..[51,1671+41])
                                    None
                              ]
                          <case>
                            pattern (src/deriving.ml[52,1713+10]..[52,1713+16])
                              Ppat_constant PConst_string("both",(src/deriving.ml[52,1713+11]..[52,1713+15]),None)
                            expression (src/deriving.ml[53,1733+12]..[54,1768+33])
                              Pexp_sequence
                              expression (src/deriving.ml[53,1733+12]..[53,1733+33])
                                Pexp_apply
                                expression (src/deriving.ml[53,1733+26]..[53,1733+28])
                                  Pexp_ident ":=" (src/deriving.ml[53,1733+26]..[53,1733+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[53,1733+12]..[53,1733+25])
                                      Pexp_ident "keep_w60_impl" (src/deriving.ml[53,1733+12]..[53,1733+25])
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[53,1733+29]..[53,1733+33])
                                      Pexp_construct "true" (src/deriving.ml[53,1733+29]..[53,1733+33])
                                      None
                                ]
                              expression (src/deriving.ml[54,1768+12]..[54,1768+33])
                                Pexp_apply
                                expression (src/deriving.ml[54,1768+26]..[54,1768+28])
                                  Pexp_ident ":=" (src/deriving.ml[54,1768+26]..[54,1768+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[54,1768+12]..[54,1768+25])
                                      Pexp_ident "keep_w60_intf" (src/deriving.ml[54,1768+12]..[54,1768+25])
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[54,1768+29]..[54,1768+33])
                                      Pexp_construct "true" (src/deriving.ml[54,1768+29]..[54,1768+33])
                                      None
                                ]
                          <case>
                            pattern (src/deriving.ml[55,1802+10]..[55,1802+11])
                              Ppat_any
                            expression (src/deriving.ml[55,1802+15]..[55,1802+27])
                              Pexp_assert
                              expression (src/deriving.ml[55,1802+22]..[55,1802+27])
                                Pexp_construct "false" (src/deriving.ml[55,1802+22]..[55,1802+27])
                                None
                        ]
                    ]
          ]
          expression (src/deriving.ml[57,1837+2]..[58,1889+67])
            Pexp_apply
            expression (src/deriving.ml[57,1837+2]..[57,1837+16])
              Pexp_ident "Driver.add_arg" (src/deriving.ml[57,1837+2]..[57,1837+16])
            [
              <arg>
              Nolabel
                expression (src/deriving.ml[57,1837+17]..[57,1837+37])
                  Pexp_constant PConst_string("-deriving-keep-w60",(src/deriving.ml[57,1837+18]..[57,1837+36]),None)
              <arg>
              Nolabel
                expression (src/deriving.ml[57,1837+38]..[57,1837+51])
                  Pexp_ident "keep_w60_spec" (src/deriving.ml[57,1837+38]..[57,1837+51])
              <arg>
              Labelled "doc"
                expression (src/deriving.ml[58,1889+9]..[58,1889+67])
                  Pexp_constant PConst_string(" Do not try to disable warning 60 for the generated code",(src/deriving.ml[58,1889+10]..[58,1889+66]),None)
            ]
    ]
  structure_item (src/deriving.ml[60,1958+0]..[60,1958+57])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[60,1958+4]..[60,1958+17])
          Ppat_var "keep_w60_impl" (src/deriving.ml[60,1958+4]..[60,1958+17])
        expression (src/deriving.ml[60,1958+18]..[60,1958+57]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/deriving.ml[60,1958+18]..[60,1958+20])
            Ppat_construct "()" (src/deriving.ml[60,1958+18]..[60,1958+20])
            None
          expression (src/deriving.ml[60,1958+23]..[60,1958+57])
            Pexp_apply
            expression (src/deriving.ml[60,1958+38]..[60,1958+40])
              Pexp_ident "||" (src/deriving.ml[60,1958+38]..[60,1958+40])
            [
              <arg>
              Nolabel
                expression (src/deriving.ml[60,1958+23]..[60,1958+37])
                  Pexp_apply
                  expression (src/deriving.ml[60,1958+23]..[60,1958+24])
                    Pexp_ident "!" (src/deriving.ml[60,1958+23]..[60,1958+24])
                  [
                    <arg>
                    Nolabel
                      expression (src/deriving.ml[60,1958+24]..[60,1958+37])
                        Pexp_ident "keep_w60_impl" (src/deriving.ml[60,1958+24]..[60,1958+37])
                  ]
              <arg>
              Nolabel
                expression (src/deriving.ml[60,1958+41]..[60,1958+57])
                  Pexp_apply
                  expression (src/deriving.ml[60,1958+41]..[60,1958+54])
                    Pexp_ident "Driver.pretty" (src/deriving.ml[60,1958+41]..[60,1958+54])
                  [
                    <arg>
                    Nolabel
                      expression (src/deriving.ml[60,1958+55]..[60,1958+57])
                        Pexp_construct "()" (src/deriving.ml[60,1958+55]..[60,1958+57])
                        None
                  ]
            ]
    ]
  structure_item (src/deriving.ml[61,2016+0]..[61,2016+57])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[61,2016+4]..[61,2016+17])
          Ppat_var "keep_w60_intf" (src/deriving.ml[61,2016+4]..[61,2016+17])
        expression (src/deriving.ml[61,2016+18]..[61,2016+57]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/deriving.ml[61,2016+18]..[61,2016+20])
            Ppat_construct "()" (src/deriving.ml[61,2016+18]..[61,2016+20])
            None
          expression (src/deriving.ml[61,2016+23]..[61,2016+57])
            Pexp_apply
            expression (src/deriving.ml[61,2016+38]..[61,2016+40])
              Pexp_ident "||" (src/deriving.ml[61,2016+38]..[61,2016+40])
            [
              <arg>
              Nolabel
                expression (src/deriving.ml[61,2016+23]..[61,2016+37])
                  Pexp_apply
                  expression (src/deriving.ml[61,2016+23]..[61,2016+24])
                    Pexp_ident "!" (src/deriving.ml[61,2016+23]..[61,2016+24])
                  [
                    <arg>
                    Nolabel
                      expression (src/deriving.ml[61,2016+24]..[61,2016+37])
                        Pexp_ident "keep_w60_intf" (src/deriving.ml[61,2016+24]..[61,2016+37])
                  ]
              <arg>
              Nolabel
                expression (src/deriving.ml[61,2016+41]..[61,2016+57])
                  Pexp_apply
                  expression (src/deriving.ml[61,2016+41]..[61,2016+54])
                    Pexp_ident "Driver.pretty" (src/deriving.ml[61,2016+41]..[61,2016+54])
                  [
                    <arg>
                    Nolabel
                      expression (src/deriving.ml[61,2016+55]..[61,2016+57])
                        Pexp_construct "()" (src/deriving.ml[61,2016+55]..[61,2016+57])
                        None
                  ]
            ]
    ]
  structure_item (src/deriving.ml[62,2074+0]..[62,2074+79])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[62,2074+4]..[62,2074+30])
          Ppat_var "allow_unused_code_warnings" (src/deriving.ml[62,2074+4]..[62,2074+30])
        expression (src/deriving.ml[62,2074+33]..[62,2074+79])
          Pexp_apply
          expression (src/deriving.ml[62,2074+33]..[62,2074+36])
            Pexp_ident "ref" (src/deriving.ml[62,2074+33]..[62,2074+36])
          [
            <arg>
            Nolabel
              expression (src/deriving.ml[62,2074+37]..[62,2074+79])
                Pexp_ident "Options.default_allow_unused_code_warnings" (src/deriving.ml[62,2074+37]..[62,2074+79])
          ]
    ]
  structure_item (src/deriving.ml[64,2155+0]..[67,2252+62])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[64,2155+4]..[64,2155+6])
          Ppat_construct "()" (src/deriving.ml[64,2155+4]..[64,2155+6])
          None
        expression (src/deriving.ml[65,2164+2]..[67,2252+62])
          Pexp_apply
          expression (src/deriving.ml[65,2164+2]..[65,2164+16])
            Pexp_ident "Driver.add_arg" (src/deriving.ml[65,2164+2]..[65,2164+16])
          [
            <arg>
            Nolabel
              expression (src/deriving.ml[65,2164+17]..[65,2164+40])
                Pexp_constant PConst_string("-unused-code-warnings",(src/deriving.ml[65,2164+18]..[65,2164+39]),None)
            <arg>
            Nolabel
              expression (src/deriving.ml[66,2205+4]..[66,2205+46])
                Pexp_construct "Bool" (src/deriving.ml[66,2205+5]..[66,2205+9])
                Some
                  expression (src/deriving.ml[66,2205+10]..[66,2205+45])
                    Pexp_apply
                    expression (src/deriving.ml[66,2205+11]..[66,2205+17])
                      Pexp_ident ":=" (src/deriving.ml[66,2205+11]..[66,2205+17])
                    [
                      <arg>
                      Nolabel
                        expression (src/deriving.ml[66,2205+18]..[66,2205+44])
                          Pexp_ident "allow_unused_code_warnings" (src/deriving.ml[66,2205+18]..[66,2205+44])
                    ]
            <arg>
            Labelled "doc"
              expression (src/deriving.ml[67,2252+9]..[67,2252+62])
                Pexp_constant PConst_string("_ Allow ppx derivers to enable unused code warnings",(src/deriving.ml[67,2252+10]..[67,2252+61]),None)
          ]
    ]
  structure_item (src/deriving.ml[69,2316+0]..[69,2316+63])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[69,2316+4]..[69,2316+30])
          Ppat_var "allow_unused_code_warnings" (src/deriving.ml[69,2316+4]..[69,2316+30])
        expression (src/deriving.ml[69,2316+31]..[69,2316+63]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/deriving.ml[69,2316+31]..[69,2316+33])
            Ppat_construct "()" (src/deriving.ml[69,2316+31]..[69,2316+33])
            None
          expression (src/deriving.ml[69,2316+36]..[69,2316+63])
            Pexp_apply
            expression (src/deriving.ml[69,2316+36]..[69,2316+37])
              Pexp_ident "!" (src/deriving.ml[69,2316+36]..[69,2316+37])
            [
              <arg>
              Nolabel
                expression (src/deriving.ml[69,2316+37]..[69,2316+63])
                  Pexp_ident "allow_unused_code_warnings" (src/deriving.ml[69,2316+37]..[69,2316+63])
            ]
    ]
  structure_item (src/deriving.ml[71,2381+0]..[130,4028+3])
    Pstr_module
    "Args" (src/deriving.ml[71,2381+7]..[71,2381+11])
      module_expr (src/deriving.ml[71,2381+14]..[130,4028+3])
        Pmod_structure
        [
          structure_item (src/deriving.ml[72,2402+2]..[77,2498+61])
            Pstr_include            module_expr (src/deriving.ml[72,2402+10]..[77,2498+61])
              Pmod_constraint
              module_expr (src/deriving.ml[73,2414+4]..[73,2414+15])
                Pmod_ident "Ast_pattern" (src/deriving.ml[73,2414+4]..[73,2414+15])
              module_type (src/deriving.ml[74,2432+6]..[77,2498+60])
                Pmty_with
                module_type (src/deriving.ml[74,2432+6]..[76,2488+9])
                  Pmty_typeof
                  module_expr (src/deriving.ml[74,2432+21]..[76,2488+9])
                    Pmod_structure
                    [
                      structure_item (src/deriving.ml[75,2460+8]..[75,2460+27])
                        Pstr_include                        module_expr (src/deriving.ml[75,2460+16]..[75,2460+27])
                          Pmod_ident "Ast_pattern" (src/deriving.ml[75,2460+16]..[75,2460+27])
                    ]
                [
                  Pwith_typesubst "t" (src/deriving.ml[77,2498+29]..[77,2498+30])
                    type_declaration "t" (src/deriving.ml[77,2498+29]..[77,2498+30]) (src/deriving.ml[77,2498+11]..[77,2498+60])
                      ptype_params =
                        [
                          core_type (src/deriving.ml[77,2498+17]..[77,2498+19])
                            Ptyp_var a
                          core_type (src/deriving.ml[77,2498+21]..[77,2498+23])
                            Ptyp_var b
                          core_type (src/deriving.ml[77,2498+25]..[77,2498+27])
                            Ptyp_var c
                        ]
                      ptype_cstrs =
                        []
                      ptype_kind =
                        Ptype_abstract
                      ptype_private = Public
                      ptype_manifest =
                        Some
                          core_type (src/deriving.ml[77,2498+34]..[77,2498+60])
                            Ptyp_constr "Ast_pattern.t" (src/deriving.ml[77,2498+47]..[77,2498+60])
                            [
                              core_type (src/deriving.ml[77,2498+35]..[77,2498+37])
                                Ptyp_var a
                              core_type (src/deriving.ml[77,2498+39]..[77,2498+41])
                                Ptyp_var b
                              core_type (src/deriving.ml[77,2498+43]..[77,2498+45])
                                Ptyp_var c
                            ]
                ]
          structure_item (src/deriving.ml[79,2561+2]..[83,2671+3])
            Pstr_type Rec
            [
              type_declaration "param" (src/deriving.ml[79,2561+10]..[79,2561+15]) (src/deriving.ml[79,2561+2]..[83,2671+3])
                ptype_params =
                  [
                    core_type (src/deriving.ml[79,2561+7]..[79,2561+9])
                      Ptyp_var a
                  ]
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_record
                    [
                      (src/deriving.ml[80,2581+4]..[80,2581+18])
                        Immutable
                        "name" (src/deriving.ml[80,2581+4]..[80,2581+8])                        core_type (src/deriving.ml[80,2581+11]..[80,2581+17])
                          Ptyp_constr "string" (src/deriving.ml[80,2581+11]..[80,2581+17])
                          []
                      (src/deriving.ml[81,2600+4]..[81,2600+52])
                        Immutable
                        "pattern" (src/deriving.ml[81,2600+4]..[81,2600+11])                        core_type (src/deriving.ml[81,2600+14]..[81,2600+51])
                          Ptyp_constr "Ast_pattern.Packed.t" (src/deriving.ml[81,2600+31]..[81,2600+51])
                          [
                            core_type (src/deriving.ml[81,2600+15]..[81,2600+25])
                              Ptyp_constr "expression" (src/deriving.ml[81,2600+15]..[81,2600+25])
                              []
                            core_type (src/deriving.ml[81,2600+27]..[81,2600+29])
                              Ptyp_var a
                          ]
                      (src/deriving.ml[82,2653+4]..[82,2653+17])
                        Immutable
                        "default" (src/deriving.ml[82,2653+4]..[82,2653+11])                        core_type (src/deriving.ml[82,2653+14]..[82,2653+16])
                          Ptyp_var a
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (src/deriving.ml[85,2676+2]..[90,2810+5])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[85,2676+6]..[85,2676+9])
                  Ppat_var "arg" (src/deriving.ml[85,2676+6]..[85,2676+9])
                expression (src/deriving.ml[85,2676+10]..[90,2810+5]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/deriving.ml[85,2676+10]..[85,2676+14])
                    Ppat_var "name" (src/deriving.ml[85,2676+10]..[85,2676+14])
                  expression (src/deriving.ml[85,2676+15]..[90,2810+5]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/deriving.ml[85,2676+15]..[85,2676+22])
                      Ppat_var "pattern" (src/deriving.ml[85,2676+15]..[85,2676+22])
                    expression (src/deriving.ml[86,2701+4]..[90,2810+5])
                      Pexp_record
                      [
                        "name" (src/deriving.ml[87,2707+6]..[87,2707+10])
                          expression (src/deriving.ml[87,2707+6]..[87,2707+10]) ghost
                            Pexp_ident "name" (src/deriving.ml[87,2707+6]..[87,2707+10]) ghost
                        "default" (src/deriving.ml[88,2719+6]..[88,2719+13])
                          expression (src/deriving.ml[88,2719+16]..[88,2719+20])
                            Pexp_construct "None" (src/deriving.ml[88,2719+16]..[88,2719+20])
                            None
                        "pattern" (src/deriving.ml[89,2741+6]..[89,2741+13])
                          expression (src/deriving.ml[89,2741+16]..[89,2741+67])
                            Pexp_apply
                            expression (src/deriving.ml[89,2741+16]..[89,2741+41])
                              Pexp_ident "Ast_pattern.Packed.create" (src/deriving.ml[89,2741+16]..[89,2741+41])
                            [
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[89,2741+42]..[89,2741+49])
                                  Pexp_ident "pattern" (src/deriving.ml[89,2741+42]..[89,2741+49])
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[89,2741+50]..[89,2741+67])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/deriving.ml[89,2741+55]..[89,2741+56])
                                    Ppat_var "x" (src/deriving.ml[89,2741+55]..[89,2741+56])
                                  expression (src/deriving.ml[89,2741+60]..[89,2741+66])
                                    Pexp_construct "Some" (src/deriving.ml[89,2741+60]..[89,2741+64])
                                    Some
                                      expression (src/deriving.ml[89,2741+65]..[89,2741+66])
                                        Pexp_ident "x" (src/deriving.ml[89,2741+65]..[89,2741+66])
                            ]
                      ]
                      None
            ]
          structure_item (src/deriving.ml[92,2817+2]..[94,2890+79])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[92,2817+6]..[92,2817+10])
                  Ppat_var "flag" (src/deriving.ml[92,2817+6]..[92,2817+10])
                expression (src/deriving.ml[92,2817+11]..[94,2890+79]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/deriving.ml[92,2817+11]..[92,2817+15])
                    Ppat_var "name" (src/deriving.ml[92,2817+11]..[92,2817+15])
                  expression (src/deriving.ml[93,2835+4]..[94,2890+79])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/deriving.ml[93,2835+8]..[93,2835+15])
                          Ppat_var "pattern" (src/deriving.ml[93,2835+8]..[93,2835+15])
                        expression (src/deriving.ml[93,2835+18]..[93,2835+51])
                          Pexp_apply
                          expression (src/deriving.ml[93,2835+18]..[93,2835+28])
                            Pexp_ident "pexp_ident" (src/deriving.ml[93,2835+18]..[93,2835+28])
                          [
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[93,2835+29]..[93,2835+51])
                                Pexp_apply
                                expression (src/deriving.ml[93,2835+30]..[93,2835+36])
                                  Pexp_ident "lident" (src/deriving.ml[93,2835+30]..[93,2835+36])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[93,2835+37]..[93,2835+50])
                                      Pexp_apply
                                      expression (src/deriving.ml[93,2835+38]..[93,2835+44])
                                        Pexp_ident "string" (src/deriving.ml[93,2835+38]..[93,2835+44])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/deriving.ml[93,2835+45]..[93,2835+49])
                                            Pexp_ident "name" (src/deriving.ml[93,2835+45]..[93,2835+49])
                                      ]
                                ]
                          ]
                    ]
                    expression (src/deriving.ml[94,2890+4]..[94,2890+79])
                      Pexp_record
                      [
                        "name" (src/deriving.ml[94,2890+6]..[94,2890+10])
                          expression (src/deriving.ml[94,2890+6]..[94,2890+10]) ghost
                            Pexp_ident "name" (src/deriving.ml[94,2890+6]..[94,2890+10]) ghost
                        "default" (src/deriving.ml[94,2890+12]..[94,2890+19])
                          expression (src/deriving.ml[94,2890+22]..[94,2890+27])
                            Pexp_construct "false" (src/deriving.ml[94,2890+22]..[94,2890+27])
                            None
                        "pattern" (src/deriving.ml[94,2890+29]..[94,2890+36])
                          expression (src/deriving.ml[94,2890+39]..[94,2890+77])
                            Pexp_apply
                            expression (src/deriving.ml[94,2890+39]..[94,2890+64])
                              Pexp_ident "Ast_pattern.Packed.create" (src/deriving.ml[94,2890+39]..[94,2890+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[94,2890+65]..[94,2890+72])
                                  Pexp_ident "pattern" (src/deriving.ml[94,2890+65]..[94,2890+72])
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[94,2890+73]..[94,2890+77])
                                  Pexp_construct "true" (src/deriving.ml[94,2890+73]..[94,2890+77])
                                  None
                            ]
                      ]
                      None
            ]
          structure_item (src/deriving.ml[96,2971+2]..[98,3012+58])
            Pstr_type Rec
            [
              type_declaration "t" (src/deriving.ml[96,2971+14]..[96,2971+15]) (src/deriving.ml[96,2971+2]..[98,3012+58])
                ptype_params =
                  [
                    core_type (src/deriving.ml[96,2971+8]..[96,2971+9])
                      Ptyp_any
                    core_type (src/deriving.ml[96,2971+11]..[96,2971+12])
                      Ptyp_any
                  ]
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (src/deriving.ml[97,2989+4]..[97,2989+22])
                        "Nil" (src/deriving.ml[97,2989+6]..[97,2989+9])
                        []
                        Some
                          core_type (src/deriving.ml[97,2989+12]..[97,2989+22])
                            Ptyp_constr "t" (src/deriving.ml[97,2989+21]..[97,2989+22])
                            [
                              core_type (src/deriving.ml[97,2989+13]..[97,2989+15])
                                Ptyp_var m
                              core_type (src/deriving.ml[97,2989+17]..[97,2989+19])
                                Ptyp_var m
                            ]
                      (src/deriving.ml[98,3012+4]..[98,3012+58])
                        "Cons" (src/deriving.ml[98,3012+6]..[98,3012+10])
                        [
                          core_type (src/deriving.ml[98,3012+13]..[98,3012+31])
                            Ptyp_constr "t" (src/deriving.ml[98,3012+30]..[98,3012+31])
                            [
                              core_type (src/deriving.ml[98,3012+14]..[98,3012+17])
                                Ptyp_var m1
                              core_type (src/deriving.ml[98,3012+19]..[98,3012+28])
                                Ptyp_arrow
                                Nolabel
                                core_type (src/deriving.ml[98,3012+19]..[98,3012+21])
                                  Ptyp_var a
                                core_type (src/deriving.ml[98,3012+25]..[98,3012+28])
                                  Ptyp_var m2
                            ]
                          core_type (src/deriving.ml[98,3012+34]..[98,3012+42])
                            Ptyp_constr "param" (src/deriving.ml[98,3012+37]..[98,3012+42])
                            [
                              core_type (src/deriving.ml[98,3012+34]..[98,3012+36])
                                Ptyp_var a
                            ]
                        ]
                        Some
                          core_type (src/deriving.ml[98,3012+46]..[98,3012+58])
                            Ptyp_constr "t" (src/deriving.ml[98,3012+57]..[98,3012+58])
                            [
                              core_type (src/deriving.ml[98,3012+47]..[98,3012+50])
                                Ptyp_var m1
                              core_type (src/deriving.ml[98,3012+52]..[98,3012+55])
                                Ptyp_var m2
                            ]
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (src/deriving.ml[100,3072+2]..[100,3072+17])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[100,3072+6]..[100,3072+11])
                  Ppat_var "empty" (src/deriving.ml[100,3072+6]..[100,3072+11])
                expression (src/deriving.ml[100,3072+14]..[100,3072+17])
                  Pexp_construct "Nil" (src/deriving.ml[100,3072+14]..[100,3072+17])
                  None
            ]
          structure_item (src/deriving.ml[101,3090+2]..[101,3090+30])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[101,3090+6]..[101,3090+12])
                  Ppat_var "+>" (src/deriving.ml[101,3090+6]..[101,3090+12])
                expression (src/deriving.ml[101,3090+13]..[101,3090+30]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/deriving.ml[101,3090+13]..[101,3090+14])
                    Ppat_var "a" (src/deriving.ml[101,3090+13]..[101,3090+14])
                  expression (src/deriving.ml[101,3090+15]..[101,3090+30]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/deriving.ml[101,3090+15]..[101,3090+16])
                      Ppat_var "b" (src/deriving.ml[101,3090+15]..[101,3090+16])
                    expression (src/deriving.ml[101,3090+19]..[101,3090+30])
                      Pexp_construct "Cons" (src/deriving.ml[101,3090+19]..[101,3090+23])
                      Some
                        expression (src/deriving.ml[101,3090+24]..[101,3090+30])
                          Pexp_tuple
                          [
                            expression (src/deriving.ml[101,3090+25]..[101,3090+26])
                              Pexp_ident "a" (src/deriving.ml[101,3090+25]..[101,3090+26])
                            expression (src/deriving.ml[101,3090+28]..[101,3090+29])
                              Pexp_ident "b" (src/deriving.ml[101,3090+28]..[101,3090+29])
                          ]
            ]
          structure_item (src/deriving.ml[103,3122+2]..[105,3201+38])
            Pstr_value Rec
            [
              <def>
                pattern (src/deriving.ml[103,3122+10]..[103,3122+51]) ghost
                  Ppat_constraint
                  pattern (src/deriving.ml[103,3122+10]..[103,3122+15])
                    Ppat_var "names" (src/deriving.ml[103,3122+10]..[103,3122+15])
                  core_type (src/deriving.ml[103,3122+10]..[105,3201+38]) ghost
                    Ptyp_poly 'a 'b
                    core_type (src/deriving.ml[103,3122+28]..[103,3122+51])
                      Ptyp_arrow
                      Nolabel
                      core_type (src/deriving.ml[103,3122+28]..[103,3122+36])
                        Ptyp_constr "t" (src/deriving.ml[103,3122+35]..[103,3122+36])
                        [
                          core_type (src/deriving.ml[103,3122+29]..[103,3122+30])
                            Ptyp_var a
                          core_type (src/deriving.ml[103,3122+32]..[103,3122+33])
                            Ptyp_var b
                        ]
                      core_type (src/deriving.ml[103,3122+40]..[103,3122+51])
                        Ptyp_constr "list" (src/deriving.ml[103,3122+47]..[103,3122+51])
                        [
                          core_type (src/deriving.ml[103,3122+40]..[103,3122+46])
                            Ptyp_constr "string" (src/deriving.ml[103,3122+40]..[103,3122+46])
                            []
                        ]
                expression (src/deriving.ml[103,3122+10]..[105,3201+38])
                  Pexp_newtype "a"
                  expression (src/deriving.ml[103,3122+10]..[105,3201+38])
                    Pexp_newtype "b"
                    expression (src/deriving.ml[103,3122+10]..[105,3201+38])
                      Pexp_constraint
                      expression (src/deriving.ml[103,3122+54]..[105,3201+38])
                        Pexp_function
                        [
                          <case>
                            pattern (src/deriving.ml[104,3185+6]..[104,3185+9])
                              Ppat_construct "Nil" (src/deriving.ml[104,3185+6]..[104,3185+9])
                              None
                            expression (src/deriving.ml[104,3185+13]..[104,3185+15])
                              Pexp_construct "[]" (src/deriving.ml[104,3185+13]..[104,3185+15])
                              None
                          <case>
                            pattern (src/deriving.ml[105,3201+6]..[105,3201+17])
                              Ppat_construct "Cons" (src/deriving.ml[105,3201+6]..[105,3201+10])
                              Some
                                pattern (src/deriving.ml[105,3201+11]..[105,3201+17])
                                  Ppat_tuple
                                  [
                                    pattern (src/deriving.ml[105,3201+12]..[105,3201+13])
                                      Ppat_var "t" (src/deriving.ml[105,3201+12]..[105,3201+13])
                                    pattern (src/deriving.ml[105,3201+15]..[105,3201+16])
                                      Ppat_var "p" (src/deriving.ml[105,3201+15]..[105,3201+16])
                                  ]
                            expression (src/deriving.ml[105,3201+21]..[105,3201+38])
                              Pexp_construct "::" (src/deriving.ml[105,3201+28]..[105,3201+30])
                              Some
                                expression (src/deriving.ml[105,3201+21]..[105,3201+38]) ghost
                                  Pexp_tuple
                                  [
                                    expression (src/deriving.ml[105,3201+21]..[105,3201+27])
                                      Pexp_field
                                      expression (src/deriving.ml[105,3201+21]..[105,3201+22])
                                        Pexp_ident "p" (src/deriving.ml[105,3201+21]..[105,3201+22])
                                      "name" (src/deriving.ml[105,3201+23]..[105,3201+27])
                                    expression (src/deriving.ml[105,3201+31]..[105,3201+38])
                                      Pexp_apply
                                      expression (src/deriving.ml[105,3201+31]..[105,3201+36])
                                        Pexp_ident "names" (src/deriving.ml[105,3201+31]..[105,3201+36])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/deriving.ml[105,3201+37]..[105,3201+38])
                                            Pexp_ident "t" (src/deriving.ml[105,3201+37]..[105,3201+38])
                                      ]
                                  ]
                        ]
                      core_type (src/deriving.ml[103,3122+28]..[103,3122+51])
                        Ptyp_arrow
                        Nolabel
                        core_type (src/deriving.ml[103,3122+28]..[103,3122+36])
                          Ptyp_constr "t" (src/deriving.ml[103,3122+35]..[103,3122+36])
                          [
                            core_type (src/deriving.ml[103,3122+29]..[103,3122+30])
                              Ptyp_constr "a" (src/deriving.ml[103,3122+29]..[103,3122+30])
                              []
                            core_type (src/deriving.ml[103,3122+32]..[103,3122+33])
                              Ptyp_constr "b" (src/deriving.ml[103,3122+32]..[103,3122+33])
                              []
                          ]
                        core_type (src/deriving.ml[103,3122+40]..[103,3122+51])
                          Ptyp_constr "list" (src/deriving.ml[103,3122+47]..[103,3122+51])
                          [
                            core_type (src/deriving.ml[103,3122+40]..[103,3122+46])
                              Ptyp_constr "string" (src/deriving.ml[103,3122+40]..[103,3122+46])
                              []
                          ]
            ]
          structure_item (src/deriving.ml[107,3241+2]..[127,3956+5])
            Pstr_module
            "Instance" (src/deriving.ml[107,3241+9]..[107,3241+17])
              module_expr (src/deriving.ml[107,3241+20]..[127,3956+5])
                Pmod_structure
                [
                  structure_item (src/deriving.ml[108,3268+4]..[110,3329+70])
                    Pstr_type Rec
                    [
                      type_declaration "instance" (src/deriving.ml[108,3268+16]..[108,3268+24]) (src/deriving.ml[108,3268+4]..[110,3329+70])
                        ptype_params =
                          [
                            core_type (src/deriving.ml[108,3268+10]..[108,3268+11])
                              Ptyp_any
                            core_type (src/deriving.ml[108,3268+13]..[108,3268+14])
                              Ptyp_any
                          ]
                        ptype_cstrs =
                          []
                        ptype_kind =
                          Ptype_variant
                            [
                              (src/deriving.ml[109,3295+6]..[109,3295+33])
                                "I_nil" (src/deriving.ml[109,3295+8]..[109,3295+13])
                                []
                                Some
                                  core_type (src/deriving.ml[109,3295+16]..[109,3295+33])
                                    Ptyp_constr "instance" (src/deriving.ml[109,3295+25]..[109,3295+33])
                                    [
                                      core_type (src/deriving.ml[109,3295+17]..[109,3295+19])
                                        Ptyp_var m
                                      core_type (src/deriving.ml[109,3295+21]..[109,3295+23])
                                        Ptyp_var m
                                    ]
                              (src/deriving.ml[110,3329+6]..[110,3329+70])
                                "I_cons" (src/deriving.ml[110,3329+8]..[110,3329+14])
                                [
                                  core_type (src/deriving.ml[110,3329+17]..[110,3329+42])
                                    Ptyp_constr "instance" (src/deriving.ml[110,3329+34]..[110,3329+42])
                                    [
                                      core_type (src/deriving.ml[110,3329+18]..[110,3329+21])
                                        Ptyp_var m1
                                      core_type (src/deriving.ml[110,3329+23]..[110,3329+32])
                                        Ptyp_arrow
                                        Nolabel
                                        core_type (src/deriving.ml[110,3329+23]..[110,3329+25])
                                          Ptyp_var a
                                        core_type (src/deriving.ml[110,3329+29]..[110,3329+32])
                                          Ptyp_var m2
                                    ]
                                  core_type (src/deriving.ml[110,3329+45]..[110,3329+47])
                                    Ptyp_var a
                                ]
                                Some
                                  core_type (src/deriving.ml[110,3329+51]..[110,3329+70])
                                    Ptyp_constr "instance" (src/deriving.ml[110,3329+62]..[110,3329+70])
                                    [
                                      core_type (src/deriving.ml[110,3329+52]..[110,3329+55])
                                        Ptyp_var m1
                                      core_type (src/deriving.ml[110,3329+57]..[110,3329+60])
                                        Ptyp_var m2
                                    ]
                            ]
                        ptype_private = Public
                        ptype_manifest =
                          None
                    ]
                  structure_item (src/deriving.ml[112,3401+4]..[123,3786+39])
                    Pstr_value Rec
                    [
                      <def>
                        pattern (src/deriving.ml[112,3401+12]..[113,3422+75]) ghost
                          Ppat_constraint
                          pattern (src/deriving.ml[112,3401+12]..[112,3401+18])
                            Ppat_var "create" (src/deriving.ml[112,3401+12]..[112,3401+18])
                          core_type (src/deriving.ml[112,3401+12]..[123,3786+39]) ghost
                            Ptyp_poly 'a 'b
                            core_type (src/deriving.ml[113,3422+18]..[113,3422+75])
                              Ptyp_arrow
                              Nolabel
                              core_type (src/deriving.ml[113,3422+18]..[113,3422+26])
                                Ptyp_constr "t" (src/deriving.ml[113,3422+25]..[113,3422+26])
                                [
                                  core_type (src/deriving.ml[113,3422+19]..[113,3422+20])
                                    Ptyp_var a
                                  core_type (src/deriving.ml[113,3422+22]..[113,3422+23])
                                    Ptyp_var b
                                ]
                              core_type (src/deriving.ml[113,3422+30]..[113,3422+75])
                                Ptyp_arrow
                                Nolabel
                                core_type (src/deriving.ml[113,3422+30]..[113,3422+56])
                                  Ptyp_constr "list" (src/deriving.ml[113,3422+52]..[113,3422+56])
                                  [
                                    core_type (src/deriving.ml[113,3422+31]..[113,3422+50])
                                      Ptyp_tuple
                                      [
                                        core_type (src/deriving.ml[113,3422+31]..[113,3422+37])
                                          Ptyp_constr "string" (src/deriving.ml[113,3422+31]..[113,3422+37])
                                          []
                                        core_type (src/deriving.ml[113,3422+40]..[113,3422+50])
                                          Ptyp_constr "expression" (src/deriving.ml[113,3422+40]..[113,3422+50])
                                          []
                                      ]
                                  ]
                                core_type (src/deriving.ml[113,3422+60]..[113,3422+75])
                                  Ptyp_constr "instance" (src/deriving.ml[113,3422+67]..[113,3422+75])
                                  [
                                    core_type (src/deriving.ml[113,3422+61]..[113,3422+62])
                                      Ptyp_var a
                                    core_type (src/deriving.ml[113,3422+64]..[113,3422+65])
                                      Ptyp_var b
                                  ]
                        expression (src/deriving.ml[112,3401+12]..[123,3786+39])
                          Pexp_newtype "a"
                          expression (src/deriving.ml[112,3401+12]..[123,3786+39])
                            Pexp_newtype "b"
                            expression (src/deriving.ml[112,3401+12]..[123,3786+39])
                              Pexp_constraint
                              expression (src/deriving.ml[114,3500+5]..[123,3786+39])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/deriving.ml[114,3500+9]..[114,3500+13])
                                  Ppat_var "spec" (src/deriving.ml[114,3500+9]..[114,3500+13])
                                expression (src/deriving.ml[114,3500+14]..[123,3786+39]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/deriving.ml[114,3500+14]..[114,3500+18])
                                    Ppat_var "args" (src/deriving.ml[114,3500+14]..[114,3500+18])
                                  expression (src/deriving.ml[115,3522+6]..[123,3786+39])
                                    Pexp_match
                                    expression (src/deriving.ml[115,3522+12]..[115,3522+16])
                                      Pexp_ident "spec" (src/deriving.ml[115,3522+12]..[115,3522+16])
                                    [
                                      <case>
                                        pattern (src/deriving.ml[116,3544+8]..[116,3544+11])
                                          Ppat_construct "Nil" (src/deriving.ml[116,3544+8]..[116,3544+11])
                                          None
                                        expression (src/deriving.ml[116,3544+15]..[116,3544+20])
                                          Pexp_construct "I_nil" (src/deriving.ml[116,3544+15]..[116,3544+20])
                                          None
                                      <case>
                                        pattern (src/deriving.ml[117,3565+8]..[117,3565+19])
                                          Ppat_construct "Cons" (src/deriving.ml[117,3565+8]..[117,3565+12])
                                          Some
                                            pattern (src/deriving.ml[117,3565+13]..[117,3565+19])
                                              Ppat_tuple
                                              [
                                                pattern (src/deriving.ml[117,3565+14]..[117,3565+15])
                                                  Ppat_var "t" (src/deriving.ml[117,3565+14]..[117,3565+15])
                                                pattern (src/deriving.ml[117,3565+17]..[117,3565+18])
                                                  Ppat_var "p" (src/deriving.ml[117,3565+17]..[117,3565+18])
                                              ]
                                        expression (src/deriving.ml[118,3588+10]..[123,3786+39])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/deriving.ml[118,3588+14]..[118,3588+19])
                                                Ppat_var "value" (src/deriving.ml[118,3588+14]..[118,3588+19])
                                              expression (src/deriving.ml[119,3610+12]..[121,3692+80])
                                                Pexp_match
                                                expression (src/deriving.ml[119,3610+18]..[119,3610+44])
                                                  Pexp_apply
                                                  expression (src/deriving.ml[119,3610+18]..[119,3610+32])
                                                    Pexp_ident "List.assoc_opt" (src/deriving.ml[119,3610+18]..[119,3610+32])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/deriving.ml[119,3610+33]..[119,3610+39])
                                                        Pexp_field
                                                        expression (src/deriving.ml[119,3610+33]..[119,3610+34])
                                                          Pexp_ident "p" (src/deriving.ml[119,3610+33]..[119,3610+34])
                                                        "name" (src/deriving.ml[119,3610+35]..[119,3610+39])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/deriving.ml[119,3610+40]..[119,3610+44])
                                                        Pexp_ident "args" (src/deriving.ml[119,3610+40]..[119,3610+44])
                                                  ]
                                                [
                                                  <case>
                                                    pattern (src/deriving.ml[120,3660+14]..[120,3660+18])
                                                      Ppat_construct "None" (src/deriving.ml[120,3660+14]..[120,3660+18])
                                                      None
                                                    expression (src/deriving.ml[120,3660+22]..[120,3660+31])
                                                      Pexp_field
                                                      expression (src/deriving.ml[120,3660+22]..[120,3660+23])
                                                        Pexp_ident "p" (src/deriving.ml[120,3660+22]..[120,3660+23])
                                                      "default" (src/deriving.ml[120,3660+24]..[120,3660+31])
                                                  <case>
                                                    pattern (src/deriving.ml[121,3692+14]..[121,3692+23])
                                                      Ppat_construct "Some" (src/deriving.ml[121,3692+14]..[121,3692+18])
                                                      Some
                                                        pattern (src/deriving.ml[121,3692+19]..[121,3692+23])
                                                          Ppat_var "expr" (src/deriving.ml[121,3692+19]..[121,3692+23])
                                                    expression (src/deriving.ml[121,3692+27]..[121,3692+80])
                                                      Pexp_apply
                                                      expression (src/deriving.ml[121,3692+27]..[121,3692+51])
                                                        Pexp_ident "Ast_pattern.Packed.parse" (src/deriving.ml[121,3692+27]..[121,3692+51])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/deriving.ml[121,3692+52]..[121,3692+61])
                                                            Pexp_field
                                                            expression (src/deriving.ml[121,3692+52]..[121,3692+53])
                                                              Pexp_ident "p" (src/deriving.ml[121,3692+52]..[121,3692+53])
                                                            "pattern" (src/deriving.ml[121,3692+54]..[121,3692+61])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/deriving.ml[121,3692+62]..[121,3692+75])
                                                            Pexp_field
                                                            expression (src/deriving.ml[121,3692+62]..[121,3692+66])
                                                              Pexp_ident "expr" (src/deriving.ml[121,3692+62]..[121,3692+66])
                                                            "pexp_loc" (src/deriving.ml[121,3692+67]..[121,3692+75])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/deriving.ml[121,3692+76]..[121,3692+80])
                                                            Pexp_ident "expr" (src/deriving.ml[121,3692+76]..[121,3692+80])
                                                      ]
                                                ]
                                          ]
                                          expression (src/deriving.ml[123,3786+10]..[123,3786+39])
                                            Pexp_construct "I_cons" (src/deriving.ml[123,3786+10]..[123,3786+16])
                                            Some
                                              expression (src/deriving.ml[123,3786+17]..[123,3786+39])
                                                Pexp_tuple
                                                [
                                                  expression (src/deriving.ml[123,3786+18]..[123,3786+31])
                                                    Pexp_apply
                                                    expression (src/deriving.ml[123,3786+18]..[123,3786+24])
                                                      Pexp_ident "create" (src/deriving.ml[123,3786+18]..[123,3786+24])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/deriving.ml[123,3786+25]..[123,3786+26])
                                                          Pexp_ident "t" (src/deriving.ml[123,3786+25]..[123,3786+26])
                                                      <arg>
                                                      Nolabel
                                                        expression (src/deriving.ml[123,3786+27]..[123,3786+31])
                                                          Pexp_ident "args" (src/deriving.ml[123,3786+27]..[123,3786+31])
                                                    ]
                                                  expression (src/deriving.ml[123,3786+33]..[123,3786+38])
                                                    Pexp_ident "value" (src/deriving.ml[123,3786+33]..[123,3786+38])
                                                ]
                                    ]
                              core_type (src/deriving.ml[113,3422+18]..[113,3422+75])
                                Ptyp_arrow
                                Nolabel
                                core_type (src/deriving.ml[113,3422+18]..[113,3422+26])
                                  Ptyp_constr "t" (src/deriving.ml[113,3422+25]..[113,3422+26])
                                  [
                                    core_type (src/deriving.ml[113,3422+19]..[113,3422+20])
                                      Ptyp_constr "a" (src/deriving.ml[113,3422+19]..[113,3422+20])
                                      []
                                    core_type (src/deriving.ml[113,3422+22]..[113,3422+23])
                                      Ptyp_constr "b" (src/deriving.ml[113,3422+22]..[113,3422+23])
                                      []
                                  ]
                                core_type (src/deriving.ml[113,3422+30]..[113,3422+75])
                                  Ptyp_arrow
                                  Nolabel
                                  core_type (src/deriving.ml[113,3422+30]..[113,3422+56])
                                    Ptyp_constr "list" (src/deriving.ml[113,3422+52]..[113,3422+56])
                                    [
                                      core_type (src/deriving.ml[113,3422+31]..[113,3422+50])
                                        Ptyp_tuple
                                        [
                                          core_type (src/deriving.ml[113,3422+31]..[113,3422+37])
                                            Ptyp_constr "string" (src/deriving.ml[113,3422+31]..[113,3422+37])
                                            []
                                          core_type (src/deriving.ml[113,3422+40]..[113,3422+50])
                                            Ptyp_constr "expression" (src/deriving.ml[113,3422+40]..[113,3422+50])
                                            []
                                        ]
                                    ]
                                  core_type (src/deriving.ml[113,3422+60]..[113,3422+75])
                                    Ptyp_constr "instance" (src/deriving.ml[113,3422+67]..[113,3422+75])
                                    [
                                      core_type (src/deriving.ml[113,3422+61]..[113,3422+62])
                                        Ptyp_constr "a" (src/deriving.ml[113,3422+61]..[113,3422+62])
                                        []
                                      core_type (src/deriving.ml[113,3422+64]..[113,3422+65])
                                        Ptyp_constr "b" (src/deriving.ml[113,3422+64]..[113,3422+65])
                                        []
                                    ]
                    ]
                  structure_item (src/deriving.ml[125,3827+4]..[126,3885+70])
                    Pstr_value Rec
                    [
                      <def>
                        pattern (src/deriving.ml[125,3827+12]..[125,3827+55]) ghost
                          Ppat_constraint
                          pattern (src/deriving.ml[125,3827+12]..[125,3827+17])
                            Ppat_var "apply" (src/deriving.ml[125,3827+12]..[125,3827+17])
                          core_type (src/deriving.ml[125,3827+12]..[126,3885+70]) ghost
                            Ptyp_poly 'a 'b
                            core_type (src/deriving.ml[125,3827+30]..[125,3827+55])
                              Ptyp_arrow
                              Nolabel
                              core_type (src/deriving.ml[125,3827+30]..[125,3827+45])
                                Ptyp_constr "instance" (src/deriving.ml[125,3827+37]..[125,3827+45])
                                [
                                  core_type (src/deriving.ml[125,3827+31]..[125,3827+32])
                                    Ptyp_var a
                                  core_type (src/deriving.ml[125,3827+34]..[125,3827+35])
                                    Ptyp_var b
                                ]
                              core_type (src/deriving.ml[125,3827+49]..[125,3827+55])
                                Ptyp_arrow
                                Nolabel
                                core_type (src/deriving.ml[125,3827+49]..[125,3827+50])
                                  Ptyp_var a
                                core_type (src/deriving.ml[125,3827+54]..[125,3827+55])
                                  Ptyp_var b
                        expression (src/deriving.ml[125,3827+12]..[126,3885+70])
                          Pexp_newtype "a"
                          expression (src/deriving.ml[125,3827+12]..[126,3885+70])
                            Pexp_newtype "b"
                            expression (src/deriving.ml[125,3827+12]..[126,3885+70])
                              Pexp_constraint
                              expression (src/deriving.ml[126,3885+5]..[126,3885+70])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/deriving.ml[126,3885+9]..[126,3885+10])
                                  Ppat_var "t" (src/deriving.ml[126,3885+9]..[126,3885+10])
                                expression (src/deriving.ml[126,3885+11]..[126,3885+70]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/deriving.ml[126,3885+11]..[126,3885+12])
                                    Ppat_var "f" (src/deriving.ml[126,3885+11]..[126,3885+12])
                                  expression (src/deriving.ml[126,3885+16]..[126,3885+70])
                                    Pexp_match
                                    expression (src/deriving.ml[126,3885+22]..[126,3885+23])
                                      Pexp_ident "t" (src/deriving.ml[126,3885+22]..[126,3885+23])
                                    [
                                      <case>
                                        pattern (src/deriving.ml[126,3885+29]..[126,3885+34])
                                          Ppat_construct "I_nil" (src/deriving.ml[126,3885+29]..[126,3885+34])
                                          None
                                        expression (src/deriving.ml[126,3885+38]..[126,3885+39])
                                          Pexp_ident "f" (src/deriving.ml[126,3885+38]..[126,3885+39])
                                      <case>
                                        pattern (src/deriving.ml[126,3885+42]..[126,3885+55])
                                          Ppat_construct "I_cons" (src/deriving.ml[126,3885+42]..[126,3885+48])
                                          Some
                                            pattern (src/deriving.ml[126,3885+49]..[126,3885+55])
                                              Ppat_tuple
                                              [
                                                pattern (src/deriving.ml[126,3885+50]..[126,3885+51])
                                                  Ppat_var "t" (src/deriving.ml[126,3885+50]..[126,3885+51])
                                                pattern (src/deriving.ml[126,3885+53]..[126,3885+54])
                                                  Ppat_var "x" (src/deriving.ml[126,3885+53]..[126,3885+54])
                                              ]
                                        expression (src/deriving.ml[126,3885+59]..[126,3885+70])
                                          Pexp_apply
                                          expression (src/deriving.ml[126,3885+59]..[126,3885+64])
                                            Pexp_ident "apply" (src/deriving.ml[126,3885+59]..[126,3885+64])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/deriving.ml[126,3885+65]..[126,3885+66])
                                                Pexp_ident "t" (src/deriving.ml[126,3885+65]..[126,3885+66])
                                            <arg>
                                            Nolabel
                                              expression (src/deriving.ml[126,3885+67]..[126,3885+68])
                                                Pexp_ident "f" (src/deriving.ml[126,3885+67]..[126,3885+68])
                                            <arg>
                                            Nolabel
                                              expression (src/deriving.ml[126,3885+69]..[126,3885+70])
                                                Pexp_ident "x" (src/deriving.ml[126,3885+69]..[126,3885+70])
                                          ]
                                    ]
                              core_type (src/deriving.ml[125,3827+30]..[125,3827+55])
                                Ptyp_arrow
                                Nolabel
                                core_type (src/deriving.ml[125,3827+30]..[125,3827+45])
                                  Ptyp_constr "instance" (src/deriving.ml[125,3827+37]..[125,3827+45])
                                  [
                                    core_type (src/deriving.ml[125,3827+31]..[125,3827+32])
                                      Ptyp_constr "a" (src/deriving.ml[125,3827+31]..[125,3827+32])
                                      []
                                    core_type (src/deriving.ml[125,3827+34]..[125,3827+35])
                                      Ptyp_constr "b" (src/deriving.ml[125,3827+34]..[125,3827+35])
                                      []
                                  ]
                                core_type (src/deriving.ml[125,3827+49]..[125,3827+55])
                                  Ptyp_arrow
                                  Nolabel
                                  core_type (src/deriving.ml[125,3827+49]..[125,3827+50])
                                    Ptyp_constr "a" (src/deriving.ml[125,3827+49]..[125,3827+50])
                                    []
                                  core_type (src/deriving.ml[125,3827+54]..[125,3827+55])
                                    Ptyp_constr "b" (src/deriving.ml[125,3827+54]..[125,3827+55])
                                    []
                    ]
                ]
          structure_item (src/deriving.ml[129,3963+2]..[129,3963+64])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[129,3963+6]..[129,3963+11])
                  Ppat_var "apply" (src/deriving.ml[129,3963+6]..[129,3963+11])
                expression (src/deriving.ml[129,3963+12]..[129,3963+64]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/deriving.ml[129,3963+12]..[129,3963+13])
                    Ppat_var "t" (src/deriving.ml[129,3963+12]..[129,3963+13])
                  expression (src/deriving.ml[129,3963+14]..[129,3963+64]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/deriving.ml[129,3963+14]..[129,3963+18])
                      Ppat_var "args" (src/deriving.ml[129,3963+14]..[129,3963+18])
                    expression (src/deriving.ml[129,3963+19]..[129,3963+64]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/deriving.ml[129,3963+19]..[129,3963+20])
                        Ppat_var "f" (src/deriving.ml[129,3963+19]..[129,3963+20])
                      expression (src/deriving.ml[129,3963+23]..[129,3963+64])
                        Pexp_apply
                        expression (src/deriving.ml[129,3963+23]..[129,3963+37])
                          Pexp_ident "Instance.apply" (src/deriving.ml[129,3963+23]..[129,3963+37])
                        [
                          <arg>
                          Nolabel
                            expression (src/deriving.ml[129,3963+38]..[129,3963+62])
                              Pexp_apply
                              expression (src/deriving.ml[129,3963+39]..[129,3963+54])
                                Pexp_ident "Instance.create" (src/deriving.ml[129,3963+39]..[129,3963+54])
                              [
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[129,3963+55]..[129,3963+56])
                                    Pexp_ident "t" (src/deriving.ml[129,3963+55]..[129,3963+56])
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[129,3963+57]..[129,3963+61])
                                    Pexp_ident "args" (src/deriving.ml[129,3963+57]..[129,3963+61])
                              ]
                          <arg>
                          Nolabel
                            expression (src/deriving.ml[129,3963+63]..[129,3963+64])
                              Pexp_ident "f" (src/deriving.ml[129,3963+63]..[129,3963+64])
                        ]
            ]
        ]
  structure_item (src/deriving.ml[136,4250+0]..[136,4250+15])
    Pstr_type Rec
    [
      type_declaration "t" (src/deriving.ml[136,4250+5]..[136,4250+6]) (src/deriving.ml[136,4250+0]..[136,4250+15])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/deriving.ml[136,4250+9]..[136,4250+15])
              Ptyp_constr "string" (src/deriving.ml[136,4250+9]..[136,4250+15])
              []
    ]
  structure_item (src/deriving.ml[138,4267+0]..[138,4267+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[138,4267+4]..[138,4267+10])
          Ppat_var "ignore" (src/deriving.ml[138,4267+4]..[138,4267+10])
        expression (src/deriving.ml[138,4267+11]..[138,4267+23]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/deriving.ml[138,4267+11]..[138,4267+18])
            Ppat_constraint
            pattern (src/deriving.ml[138,4267+12]..[138,4267+13])
              Ppat_any
            core_type (src/deriving.ml[138,4267+16]..[138,4267+17])
              Ptyp_constr "t" (src/deriving.ml[138,4267+16]..[138,4267+17])
              []
          expression (src/deriving.ml[138,4267+21]..[138,4267+23])
            Pexp_construct "()" (src/deriving.ml[138,4267+21]..[138,4267+23])
            None
    ]
  structure_item (src/deriving.ml[140,4292+0]..[142,4350+41])
    Pstr_type Rec
    [
      type_declaration "parsed_args" (src/deriving.ml[140,4292+5]..[140,4292+16]) (src/deriving.ml[140,4292+0]..[142,4350+41])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (src/deriving.ml[141,4311+2]..[141,4311+38])
                "Args" (src/deriving.ml[141,4311+4]..[141,4311+8])
                [
                  core_type (src/deriving.ml[141,4311+12]..[141,4311+38])
                    Ptyp_constr "list" (src/deriving.ml[141,4311+34]..[141,4311+38])
                    [
                      core_type (src/deriving.ml[141,4311+13]..[141,4311+32])
                        Ptyp_tuple
                        [
                          core_type (src/deriving.ml[141,4311+13]..[141,4311+19])
                            Ptyp_constr "string" (src/deriving.ml[141,4311+13]..[141,4311+19])
                            []
                          core_type (src/deriving.ml[141,4311+22]..[141,4311+32])
                            Ptyp_constr "expression" (src/deriving.ml[141,4311+22]..[141,4311+32])
                            []
                        ]
                    ]
                ]
                None
              (src/deriving.ml[142,4350+2]..[142,4350+41])
                "Unknown_syntax" (src/deriving.ml[142,4350+4]..[142,4350+18])
                [
                  core_type (src/deriving.ml[142,4350+22]..[142,4350+32])
                    Ptyp_constr "Location.t" (src/deriving.ml[142,4350+22]..[142,4350+32])
                    []
                  core_type (src/deriving.ml[142,4350+35]..[142,4350+41])
                    Ptyp_constr "string" (src/deriving.ml[142,4350+35]..[142,4350+41])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (src/deriving.ml[144,4393+0]..[144,4393+77])
    Pstr_type Rec
    [
      type_declaration "derived_code" (src/deriving.ml[144,4393+11]..[144,4393+23]) (src/deriving.ml[144,4393+0]..[144,4393+77])
        ptype_params =
          [
            core_type (src/deriving.ml[144,4393+5]..[144,4393+10])
              Ptyp_var item
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (src/deriving.ml[144,4393+28]..[144,4393+47])
                Immutable
                "items" (src/deriving.ml[144,4393+28]..[144,4393+33])                core_type (src/deriving.ml[144,4393+36]..[144,4393+46])
                  Ptyp_constr "list" (src/deriving.ml[144,4393+42]..[144,4393+46])
                  [
                    core_type (src/deriving.ml[144,4393+36]..[144,4393+41])
                      Ptyp_var item
                  ]
              (src/deriving.ml[144,4393+48]..[144,4393+75])
                Immutable
                "unused_code_warnings" (src/deriving.ml[144,4393+48]..[144,4393+68])                core_type (src/deriving.ml[144,4393+71]..[144,4393+75])
                  Ptyp_constr "bool" (src/deriving.ml[144,4393+71]..[144,4393+75])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (src/deriving.ml[146,4472+0]..[247,8017+3])
    Pstr_module
    "Generator" (src/deriving.ml[146,4472+7]..[146,4472+16])
      module_expr (src/deriving.ml[146,4472+19]..[247,8017+3])
        Pmod_structure
        [
          structure_item (src/deriving.ml[147,4498+2]..[147,4498+18])
            Pstr_type Rec
            [
              type_declaration "deriver" (src/deriving.ml[147,4498+7]..[147,4498+14]) (src/deriving.ml[147,4498+2]..[147,4498+18])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/deriving.ml[147,4498+17]..[147,4498+18])
                      Ptyp_constr "t" (src/deriving.ml[147,4498+17]..[147,4498+18])
                      []
            ]
          structure_item (src/deriving.ml[149,4518+2]..[157,4750+21])
            Pstr_type Rec
            [
              type_declaration "t" (src/deriving.ml[149,4518+16]..[149,4518+17]) (src/deriving.ml[149,4518+2]..[157,4750+21])
                ptype_params =
                  [
                    core_type (src/deriving.ml[149,4518+8]..[149,4518+10])
                      Ptyp_var a
                    core_type (src/deriving.ml[149,4518+12]..[149,4518+14])
                      Ptyp_var b
                  ]
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (src/deriving.ml[150,4538+4]..[157,4750+21])
                        "T" (src/deriving.ml[150,4538+6]..[150,4538+7])
                        [
                          (src/deriving.ml[151,4550+8]..[151,4550+31])
                            Immutable
                            "spec" (src/deriving.ml[151,4550+8]..[151,4550+12])                            core_type (src/deriving.ml[151,4550+15]..[151,4550+30])
                              Ptyp_constr "Args.t" (src/deriving.ml[151,4550+24]..[151,4550+30])
                              [
                                core_type (src/deriving.ml[151,4550+16]..[151,4550+18])
                                  Ptyp_var c
                                core_type (src/deriving.ml[151,4550+20]..[151,4550+22])
                                  Ptyp_var a
                              ]
                          (src/deriving.ml[152,4582+8]..[152,4582+59])
                            Immutable
                            "gen" (src/deriving.ml[152,4582+8]..[152,4582+11])                            core_type (src/deriving.ml[152,4582+14]..[152,4582+58])
                              Ptyp_arrow
                              Labelled "ctxt"
                              core_type (src/deriving.ml[152,4582+19]..[152,4582+46])
                                Ptyp_constr "Expansion_context.Deriver.t" (src/deriving.ml[152,4582+19]..[152,4582+46])
                                []
                              core_type (src/deriving.ml[152,4582+50]..[152,4582+58])
                                Ptyp_arrow
                                Nolabel
                                core_type (src/deriving.ml[152,4582+50]..[152,4582+52])
                                  Ptyp_var b
                                core_type (src/deriving.ml[152,4582+56]..[152,4582+58])
                                  Ptyp_var c
                          (src/deriving.ml[153,4642+8]..[153,4642+33])
                            Immutable
                            "arg_names" (src/deriving.ml[153,4642+8]..[153,4642+17])                            core_type (src/deriving.ml[153,4642+20]..[153,4642+32])
                              Ptyp_constr "String.Set.t" (src/deriving.ml[153,4642+20]..[153,4642+32])
                              []
                          (src/deriving.ml[154,4676+8]..[154,4676+28])
                            Immutable
                            "deps" (src/deriving.ml[154,4676+8]..[154,4676+12])                            core_type (src/deriving.ml[154,4676+15]..[154,4676+27])
                              Ptyp_constr "list" (src/deriving.ml[154,4676+23]..[154,4676+27])
                              [
                                core_type (src/deriving.ml[154,4676+15]..[154,4676+22])
                                  Ptyp_constr "deriver" (src/deriving.ml[154,4676+15]..[154,4676+22])
                                  []
                              ]
                          (src/deriving.ml[155,4705+8]..[155,4705+36])
                            Immutable
                            "unused_code_warnings" (src/deriving.ml[155,4705+8]..[155,4705+28])                            core_type (src/deriving.ml[155,4705+31]..[155,4705+35])
                              Ptyp_constr "bool" (src/deriving.ml[155,4705+31]..[155,4705+35])
                              []
                        ]
                        Some
                          core_type (src/deriving.ml[157,4750+11]..[157,4750+21])
                            Ptyp_constr "t" (src/deriving.ml[157,4750+20]..[157,4750+21])
                            [
                              core_type (src/deriving.ml[157,4750+12]..[157,4750+14])
                                Ptyp_var a
                              core_type (src/deriving.ml[157,4750+16]..[157,4750+18])
                                Ptyp_var b
                            ]
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (src/deriving.ml[159,4773+2]..[159,4773+25])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[159,4773+6]..[159,4773+10])
                  Ppat_var "deps" (src/deriving.ml[159,4773+6]..[159,4773+10])
                expression (src/deriving.ml[159,4773+11]..[159,4773+25]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/deriving.ml[159,4773+11]..[159,4773+16])
                    Ppat_construct "T" (src/deriving.ml[159,4773+12]..[159,4773+13])
                    Some
                      pattern (src/deriving.ml[159,4773+14]..[159,4773+15])
                        Ppat_var "t" (src/deriving.ml[159,4773+14]..[159,4773+15])
                  expression (src/deriving.ml[159,4773+19]..[159,4773+25])
                    Pexp_field
                    expression (src/deriving.ml[159,4773+19]..[159,4773+20])
                      Pexp_ident "t" (src/deriving.ml[159,4773+19]..[159,4773+20])
                    "deps" (src/deriving.ml[159,4773+21]..[159,4773+25])
            ]
          structure_item (src/deriving.ml[161,4800+2]..[169,5174+5])
            Pstr_module
            "V2" (src/deriving.ml[161,4800+9]..[161,4800+11])
              module_expr (src/deriving.ml[161,4800+14]..[169,5174+5])
                Pmod_structure
                [
                  structure_item (src/deriving.ml[162,4821+4]..[165,4981+60])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (src/deriving.ml[162,4821+8]..[162,4821+12])
                          Ppat_var "make" (src/deriving.ml[162,4821+8]..[162,4821+12])
                        expression (src/deriving.ml[162,4821+13]..[165,4981+60]) ghost
                          Pexp_fun
                          Optional "attributes"
                          Some
                            expression (src/deriving.ml[162,4821+30]..[162,4821+32])
                              Pexp_construct "[]" (src/deriving.ml[162,4821+30]..[162,4821+32])
                              None
                          pattern (src/deriving.ml[162,4821+26]..[162,4821+27])
                            Ppat_any
                          expression (src/deriving.ml[162,4821+34]..[165,4981+60]) ghost
                            Pexp_fun
                            Optional "deps"
                            Some
                              expression (src/deriving.ml[162,4821+43]..[162,4821+45])
                                Pexp_construct "[]" (src/deriving.ml[162,4821+43]..[162,4821+45])
                                None
                            pattern (src/deriving.ml[162,4821+36]..[162,4821+40])
                              Ppat_var "deps" (src/deriving.ml[162,4821+36]..[162,4821+40])
                            expression (src/deriving.ml[162,4821+47]..[165,4981+60]) ghost
                              Pexp_fun
                              Optional "unused_code_warnings"
                              Some
                                expression (src/deriving.ml[162,4821+72]..[162,4821+77])
                                  Pexp_construct "false" (src/deriving.ml[162,4821+72]..[162,4821+77])
                                  None
                              pattern (src/deriving.ml[162,4821+49]..[162,4821+69])
                                Ppat_var "unused_code_warnings" (src/deriving.ml[162,4821+49]..[162,4821+69])
                              expression (src/deriving.ml[163,4900+8]..[165,4981+60]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/deriving.ml[163,4900+8]..[163,4900+12])
                                  Ppat_var "spec" (src/deriving.ml[163,4900+8]..[163,4900+12])
                                expression (src/deriving.ml[163,4900+13]..[165,4981+60]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/deriving.ml[163,4900+13]..[163,4900+16])
                                    Ppat_var "gen" (src/deriving.ml[163,4900+13]..[163,4900+16])
                                  expression (src/deriving.ml[164,4919+6]..[165,4981+60])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/deriving.ml[164,4919+10]..[164,4919+19])
                                          Ppat_var "arg_names" (src/deriving.ml[164,4919+10]..[164,4919+19])
                                        expression (src/deriving.ml[164,4919+22]..[164,4919+58])
                                          Pexp_apply
                                          expression (src/deriving.ml[164,4919+22]..[164,4919+40])
                                            Pexp_ident "String.Set.of_list" (src/deriving.ml[164,4919+22]..[164,4919+40])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/deriving.ml[164,4919+41]..[164,4919+58])
                                                Pexp_apply
                                                expression (src/deriving.ml[164,4919+42]..[164,4919+52])
                                                  Pexp_ident "Args.names" (src/deriving.ml[164,4919+42]..[164,4919+52])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/deriving.ml[164,4919+53]..[164,4919+57])
                                                      Pexp_ident "spec" (src/deriving.ml[164,4919+53]..[164,4919+57])
                                                ]
                                          ]
                                    ]
                                    expression (src/deriving.ml[165,4981+6]..[165,4981+60])
                                      Pexp_construct "T" (src/deriving.ml[165,4981+6]..[165,4981+7])
                                      Some
                                        expression (src/deriving.ml[165,4981+8]..[165,4981+60])
                                          Pexp_record
                                          [
                                            "spec" (src/deriving.ml[165,4981+10]..[165,4981+14])
                                              expression (src/deriving.ml[165,4981+10]..[165,4981+14]) ghost
                                                Pexp_ident "spec" (src/deriving.ml[165,4981+10]..[165,4981+14]) ghost
                                            "gen" (src/deriving.ml[165,4981+16]..[165,4981+19])
                                              expression (src/deriving.ml[165,4981+16]..[165,4981+19]) ghost
                                                Pexp_ident "gen" (src/deriving.ml[165,4981+16]..[165,4981+19]) ghost
                                            "arg_names" (src/deriving.ml[165,4981+21]..[165,4981+30])
                                              expression (src/deriving.ml[165,4981+21]..[165,4981+30]) ghost
                                                Pexp_ident "arg_names" (src/deriving.ml[165,4981+21]..[165,4981+30]) ghost
                                            "deps" (src/deriving.ml[165,4981+32]..[165,4981+36])
                                              expression (src/deriving.ml[165,4981+32]..[165,4981+36]) ghost
                                                Pexp_ident "deps" (src/deriving.ml[165,4981+32]..[165,4981+36]) ghost
                                            "unused_code_warnings" (src/deriving.ml[165,4981+38]..[165,4981+58])
                                              expression (src/deriving.ml[165,4981+38]..[165,4981+58]) ghost
                                                Pexp_ident "unused_code_warnings" (src/deriving.ml[165,4981+38]..[165,4981+58]) ghost
                                          ]
                                          None
                    ]
                  structure_item (src/deriving.ml[167,5043+4]..[168,5108+65])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (src/deriving.ml[167,5043+8]..[167,5043+18])
                          Ppat_var "make_noarg" (src/deriving.ml[167,5043+8]..[167,5043+18])
                        expression (src/deriving.ml[167,5043+19]..[168,5108+65]) ghost
                          Pexp_fun
                          Optional "attributes"
                          None
                          pattern (src/deriving.ml[167,5043+20]..[167,5043+30])
                            Ppat_var "attributes" (src/deriving.ml[167,5043+20]..[167,5043+30])
                          expression (src/deriving.ml[167,5043+31]..[168,5108+65]) ghost
                            Pexp_fun
                            Optional "deps"
                            None
                            pattern (src/deriving.ml[167,5043+32]..[167,5043+36])
                              Ppat_var "deps" (src/deriving.ml[167,5043+32]..[167,5043+36])
                            expression (src/deriving.ml[167,5043+37]..[168,5108+65]) ghost
                              Pexp_fun
                              Optional "unused_code_warnings"
                              None
                              pattern (src/deriving.ml[167,5043+38]..[167,5043+58])
                                Ppat_var "unused_code_warnings" (src/deriving.ml[167,5043+38]..[167,5043+58])
                              expression (src/deriving.ml[167,5043+59]..[168,5108+65]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/deriving.ml[167,5043+59]..[167,5043+62])
                                  Ppat_var "gen" (src/deriving.ml[167,5043+59]..[167,5043+62])
                                expression (src/deriving.ml[168,5108+6]..[168,5108+65])
                                  Pexp_apply
                                  expression (src/deriving.ml[168,5108+6]..[168,5108+10])
                                    Pexp_ident "make" (src/deriving.ml[168,5108+6]..[168,5108+10])
                                  [
                                    <arg>
                                    Optional "attributes"
                                      expression (src/deriving.ml[168,5108+12]..[168,5108+22])
                                        Pexp_ident "attributes" (src/deriving.ml[168,5108+12]..[168,5108+22])
                                    <arg>
                                    Optional "deps"
                                      expression (src/deriving.ml[168,5108+24]..[168,5108+28])
                                        Pexp_ident "deps" (src/deriving.ml[168,5108+24]..[168,5108+28])
                                    <arg>
                                    Optional "unused_code_warnings"
                                      expression (src/deriving.ml[168,5108+30]..[168,5108+50])
                                        Pexp_ident "unused_code_warnings" (src/deriving.ml[168,5108+30]..[168,5108+50])
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[168,5108+51]..[168,5108+61])
                                        Pexp_ident "Args.empty" (src/deriving.ml[168,5108+51]..[168,5108+61])
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[168,5108+62]..[168,5108+65])
                                        Pexp_ident "gen" (src/deriving.ml[168,5108+62]..[168,5108+65])
                                  ]
                    ]
                ]
          structure_item (src/deriving.ml[171,5181+2]..[173,5300+55])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[171,5181+6]..[171,5181+10])
                  Ppat_var "make" (src/deriving.ml[171,5181+6]..[171,5181+10])
                expression (src/deriving.ml[171,5181+11]..[173,5300+55]) ghost
                  Pexp_fun
                  Optional "attributes"
                  None
                  pattern (src/deriving.ml[171,5181+12]..[171,5181+22])
                    Ppat_var "attributes" (src/deriving.ml[171,5181+12]..[171,5181+22])
                  expression (src/deriving.ml[171,5181+23]..[173,5300+55]) ghost
                    Pexp_fun
                    Optional "deps"
                    None
                    pattern (src/deriving.ml[171,5181+24]..[171,5181+28])
                      Ppat_var "deps" (src/deriving.ml[171,5181+24]..[171,5181+28])
                    expression (src/deriving.ml[171,5181+29]..[173,5300+55]) ghost
                      Pexp_fun
                      Optional "unused_code_warnings"
                      None
                      pattern (src/deriving.ml[171,5181+30]..[171,5181+50])
                        Ppat_var "unused_code_warnings" (src/deriving.ml[171,5181+30]..[171,5181+50])
                      expression (src/deriving.ml[171,5181+51]..[173,5300+55]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/deriving.ml[171,5181+51]..[171,5181+55])
                          Ppat_var "spec" (src/deriving.ml[171,5181+51]..[171,5181+55])
                        expression (src/deriving.ml[171,5181+56]..[173,5300+55]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/deriving.ml[171,5181+56]..[171,5181+59])
                            Ppat_var "gen" (src/deriving.ml[171,5181+56]..[171,5181+59])
                          expression (src/deriving.ml[172,5243+4]..[173,5300+55])
                            Pexp_apply
                            expression (src/deriving.ml[172,5243+4]..[172,5243+11])
                              Pexp_ident "V2.make" (src/deriving.ml[172,5243+4]..[172,5243+11])
                            [
                              <arg>
                              Optional "attributes"
                                expression (src/deriving.ml[172,5243+13]..[172,5243+23])
                                  Pexp_ident "attributes" (src/deriving.ml[172,5243+13]..[172,5243+23])
                              <arg>
                              Optional "deps"
                                expression (src/deriving.ml[172,5243+25]..[172,5243+29])
                                  Pexp_ident "deps" (src/deriving.ml[172,5243+25]..[172,5243+29])
                              <arg>
                              Optional "unused_code_warnings"
                                expression (src/deriving.ml[172,5243+31]..[172,5243+51])
                                  Pexp_ident "unused_code_warnings" (src/deriving.ml[172,5243+31]..[172,5243+51])
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[172,5243+52]..[172,5243+56])
                                  Pexp_ident "spec" (src/deriving.ml[172,5243+52]..[172,5243+56])
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[173,5300+6]..[173,5300+55])
                                  Pexp_apply
                                  expression (src/deriving.ml[173,5300+7]..[173,5300+50])
                                    Pexp_ident "Expansion_context.Deriver.with_loc_and_path" (src/deriving.ml[173,5300+7]..[173,5300+50])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[173,5300+51]..[173,5300+54])
                                        Pexp_ident "gen" (src/deriving.ml[173,5300+51]..[173,5300+54])
                                  ]
                            ]
            ]
          structure_item (src/deriving.ml[175,5357+2]..[176,5420+63])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[175,5357+6]..[175,5357+16])
                  Ppat_var "make_noarg" (src/deriving.ml[175,5357+6]..[175,5357+16])
                expression (src/deriving.ml[175,5357+17]..[176,5420+63]) ghost
                  Pexp_fun
                  Optional "attributes"
                  None
                  pattern (src/deriving.ml[175,5357+18]..[175,5357+28])
                    Ppat_var "attributes" (src/deriving.ml[175,5357+18]..[175,5357+28])
                  expression (src/deriving.ml[175,5357+29]..[176,5420+63]) ghost
                    Pexp_fun
                    Optional "deps"
                    None
                    pattern (src/deriving.ml[175,5357+30]..[175,5357+34])
                      Ppat_var "deps" (src/deriving.ml[175,5357+30]..[175,5357+34])
                    expression (src/deriving.ml[175,5357+35]..[176,5420+63]) ghost
                      Pexp_fun
                      Optional "unused_code_warnings"
                      None
                      pattern (src/deriving.ml[175,5357+36]..[175,5357+56])
                        Ppat_var "unused_code_warnings" (src/deriving.ml[175,5357+36]..[175,5357+56])
                      expression (src/deriving.ml[175,5357+57]..[176,5420+63]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/deriving.ml[175,5357+57]..[175,5357+60])
                          Ppat_var "gen" (src/deriving.ml[175,5357+57]..[175,5357+60])
                        expression (src/deriving.ml[176,5420+4]..[176,5420+63])
                          Pexp_apply
                          expression (src/deriving.ml[176,5420+4]..[176,5420+8])
                            Pexp_ident "make" (src/deriving.ml[176,5420+4]..[176,5420+8])
                          [
                            <arg>
                            Optional "attributes"
                              expression (src/deriving.ml[176,5420+10]..[176,5420+20])
                                Pexp_ident "attributes" (src/deriving.ml[176,5420+10]..[176,5420+20])
                            <arg>
                            Optional "deps"
                              expression (src/deriving.ml[176,5420+22]..[176,5420+26])
                                Pexp_ident "deps" (src/deriving.ml[176,5420+22]..[176,5420+26])
                            <arg>
                            Optional "unused_code_warnings"
                              expression (src/deriving.ml[176,5420+28]..[176,5420+48])
                                Pexp_ident "unused_code_warnings" (src/deriving.ml[176,5420+28]..[176,5420+48])
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[176,5420+49]..[176,5420+59])
                                Pexp_ident "Args.empty" (src/deriving.ml[176,5420+49]..[176,5420+59])
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[176,5420+60]..[176,5420+63])
                                Pexp_ident "gen" (src/deriving.ml[176,5420+60]..[176,5420+63])
                          ]
            ]
          structure_item (src/deriving.ml[178,5485+2]..[183,5640+27])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[178,5485+6]..[178,5485+25])
                  Ppat_var "merge_accepted_args" (src/deriving.ml[178,5485+6]..[178,5485+25])
                expression (src/deriving.ml[178,5485+26]..[183,5640+27]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/deriving.ml[178,5485+26]..[178,5485+27])
                    Ppat_var "l" (src/deriving.ml[178,5485+26]..[178,5485+27])
                  expression (src/deriving.ml[179,5515+4]..[183,5640+27])
                    Pexp_let Rec
                    [
                      <def>
                        pattern (src/deriving.ml[179,5515+12]..[179,5515+16])
                          Ppat_var "loop" (src/deriving.ml[179,5515+12]..[179,5515+16])
                        expression (src/deriving.ml[179,5515+17]..[181,5565+67]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/deriving.ml[179,5515+17]..[179,5515+20])
                            Ppat_var "acc" (src/deriving.ml[179,5515+17]..[179,5515+20])
                          expression (src/deriving.ml[179,5515+23]..[181,5565+67])
                            Pexp_function
                            [
                              <case>
                                pattern (src/deriving.ml[180,5547+8]..[180,5547+10])
                                  Ppat_construct "[]" (src/deriving.ml[180,5547+8]..[180,5547+10])
                                  None
                                expression (src/deriving.ml[180,5547+14]..[180,5547+17])
                                  Pexp_ident "acc" (src/deriving.ml[180,5547+14]..[180,5547+17])
                              <case>
                                pattern (src/deriving.ml[181,5565+8]..[181,5565+19])
                                  Ppat_construct "::" (src/deriving.ml[181,5565+12]..[181,5565+14])
                                  Some
                                    pattern (src/deriving.ml[181,5565+8]..[181,5565+19]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (src/deriving.ml[181,5565+8]..[181,5565+11])
                                          Ppat_construct "T" (src/deriving.ml[181,5565+8]..[181,5565+9])
                                          Some
                                            pattern (src/deriving.ml[181,5565+10]..[181,5565+11])
                                              Ppat_var "t" (src/deriving.ml[181,5565+10]..[181,5565+11])
                                        pattern (src/deriving.ml[181,5565+15]..[181,5565+19])
                                          Ppat_var "rest" (src/deriving.ml[181,5565+15]..[181,5565+19])
                                      ]
                                expression (src/deriving.ml[181,5565+23]..[181,5565+67])
                                  Pexp_apply
                                  expression (src/deriving.ml[181,5565+23]..[181,5565+27])
                                    Pexp_ident "loop" (src/deriving.ml[181,5565+23]..[181,5565+27])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[181,5565+28]..[181,5565+62])
                                        Pexp_apply
                                        expression (src/deriving.ml[181,5565+29]..[181,5565+45])
                                          Pexp_ident "String.Set.union" (src/deriving.ml[181,5565+29]..[181,5565+45])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[181,5565+46]..[181,5565+49])
                                              Pexp_ident "acc" (src/deriving.ml[181,5565+46]..[181,5565+49])
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[181,5565+50]..[181,5565+61])
                                              Pexp_field
                                              expression (src/deriving.ml[181,5565+50]..[181,5565+51])
                                                Pexp_ident "t" (src/deriving.ml[181,5565+50]..[181,5565+51])
                                              "arg_names" (src/deriving.ml[181,5565+52]..[181,5565+61])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[181,5565+63]..[181,5565+67])
                                        Pexp_ident "rest" (src/deriving.ml[181,5565+63]..[181,5565+67])
                                  ]
                            ]
                    ]
                    expression (src/deriving.ml[183,5640+4]..[183,5640+27])
                      Pexp_apply
                      expression (src/deriving.ml[183,5640+4]..[183,5640+8])
                        Pexp_ident "loop" (src/deriving.ml[183,5640+4]..[183,5640+8])
                      [
                        <arg>
                        Nolabel
                          expression (src/deriving.ml[183,5640+9]..[183,5640+25])
                            Pexp_ident "String.Set.empty" (src/deriving.ml[183,5640+9]..[183,5640+25])
                        <arg>
                        Nolabel
                          expression (src/deriving.ml[183,5640+26]..[183,5640+27])
                            Pexp_ident "l" (src/deriving.ml[183,5640+26]..[183,5640+27])
                      ]
            ]
          structure_item (src/deriving.ml[185,5669+2]..[224,7152+58])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[185,5669+6]..[185,5669+21])
                  Ppat_var "check_arguments" (src/deriving.ml[185,5669+6]..[185,5669+21])
                expression (src/deriving.ml[185,5669+22]..[224,7152+58]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/deriving.ml[185,5669+22]..[185,5669+26])
                    Ppat_var "name" (src/deriving.ml[185,5669+22]..[185,5669+26])
                  expression (src/deriving.ml[185,5669+27]..[224,7152+58]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/deriving.ml[185,5669+27]..[185,5669+37])
                      Ppat_var "generators" (src/deriving.ml[185,5669+27]..[185,5669+37])
                    expression (src/deriving.ml[185,5669+38]..[224,7152+58]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/deriving.ml[185,5669+38]..[185,5669+73])
                        Ppat_constraint
                        pattern (src/deriving.ml[185,5669+39]..[185,5669+43])
                          Ppat_var "args" (src/deriving.ml[185,5669+39]..[185,5669+43])
                        core_type (src/deriving.ml[185,5669+46]..[185,5669+72])
                          Ptyp_constr "list" (src/deriving.ml[185,5669+68]..[185,5669+72])
                          [
                            core_type (src/deriving.ml[185,5669+47]..[185,5669+66])
                              Ptyp_tuple
                              [
                                core_type (src/deriving.ml[185,5669+47]..[185,5669+53])
                                  Ptyp_constr "string" (src/deriving.ml[185,5669+47]..[185,5669+53])
                                  []
                                core_type (src/deriving.ml[185,5669+56]..[185,5669+66])
                                  Ptyp_constr "expression" (src/deriving.ml[185,5669+56]..[185,5669+66])
                                  []
                              ]
                          ]
                      expression (src/deriving.ml[186,5745+4]..[224,7152+58])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/deriving.ml[186,5745+8]..[186,5745+25])
                              Ppat_var "empty_label_error" (src/deriving.ml[186,5745+8]..[186,5745+25])
                            expression (src/deriving.ml[187,5773+6]..[192,6010+20])
                              Pexp_apply
                              expression (src/deriving.ml[187,5773+6]..[187,5773+21])
                                Pexp_ident "List.filter_map" (src/deriving.ml[187,5773+6]..[187,5773+21])
                              [
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[187,5773+22]..[187,5773+26])
                                    Pexp_ident "args" (src/deriving.ml[187,5773+22]..[187,5773+26])
                                <arg>
                                Labelled "f"
                                  expression (src/deriving.ml[187,5773+30]..[192,6010+20])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (src/deriving.ml[187,5773+35]..[187,5773+45])
                                      Ppat_tuple
                                      [
                                        pattern (src/deriving.ml[187,5773+36]..[187,5773+41])
                                          Ppat_var "label" (src/deriving.ml[187,5773+36]..[187,5773+41])
                                        pattern (src/deriving.ml[187,5773+43]..[187,5773+44])
                                          Ppat_var "e" (src/deriving.ml[187,5773+43]..[187,5773+44])
                                      ]
                                    expression (src/deriving.ml[188,5822+10]..[192,6010+19])
                                      Pexp_ifthenelse
                                      expression (src/deriving.ml[188,5822+13]..[188,5822+34])
                                        Pexp_apply
                                        expression (src/deriving.ml[188,5822+13]..[188,5822+28])
                                          Pexp_ident "String.is_empty" (src/deriving.ml[188,5822+13]..[188,5822+28])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[188,5822+29]..[188,5822+34])
                                              Pexp_ident "label" (src/deriving.ml[188,5822+29]..[188,5822+34])
                                        ]
                                      expression (src/deriving.ml[189,5862+12]..[191,5936+73])
                                        Pexp_construct "Some" (src/deriving.ml[189,5862+12]..[189,5862+16])
                                        Some
                                          expression (src/deriving.ml[190,5879+14]..[191,5936+73])
                                            Pexp_apply
                                            expression (src/deriving.ml[190,5879+15]..[190,5879+40])
                                              Pexp_ident "Location.error_extensionf" (src/deriving.ml[190,5879+15]..[190,5879+40])
                                            [
                                              <arg>
                                              Labelled "loc"
                                                expression (src/deriving.ml[190,5879+46]..[190,5879+56])
                                                  Pexp_field
                                                  expression (src/deriving.ml[190,5879+46]..[190,5879+47])
                                                    Pexp_ident "e" (src/deriving.ml[190,5879+46]..[190,5879+47])
                                                  "pexp_loc" (src/deriving.ml[190,5879+48]..[190,5879+56])
                                              <arg>
                                              Nolabel
                                                expression (src/deriving.ml[191,5936+17]..[191,5936+72])
                                                  Pexp_constant PConst_string("Ppxlib.Deriving: generator arguments must be labelled",(src/deriving.ml[191,5936+18]..[191,5936+71]),None)
                                            ]
                                      Some
                                        expression (src/deriving.ml[192,6010+15]..[192,6010+19])
                                          Pexp_construct "None" (src/deriving.ml[192,6010+15]..[192,6010+19])
                                          None
                              ]
                        ]
                        expression (src/deriving.ml[194,6038+4]..[224,7152+58])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/deriving.ml[194,6038+8]..[194,6038+32])
                                Ppat_var "duplicate_argument_error" (src/deriving.ml[194,6038+8]..[194,6038+32])
                              expression (src/deriving.ml[195,6073+6]..[201,6350+23])
                                Pexp_apply
                                expression (src/deriving.ml[201,6350+6]..[201,6350+8])
                                  Pexp_ident "|>" (src/deriving.ml[201,6350+6]..[201,6350+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[195,6073+6]..[200,6331+18])
                                      Pexp_apply
                                      expression (src/deriving.ml[195,6073+6]..[195,6073+16])
                                        Pexp_ident "Option.map" (src/deriving.ml[195,6073+6]..[195,6073+16])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/deriving.ml[196,6090+8]..[196,6090+81])
                                            Pexp_apply
                                            expression (src/deriving.ml[196,6090+9]..[196,6090+24])
                                              Pexp_ident "List.find_a_dup" (src/deriving.ml[196,6090+9]..[196,6090+24])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/deriving.ml[196,6090+25]..[196,6090+29])
                                                  Pexp_ident "args" (src/deriving.ml[196,6090+25]..[196,6090+29])
                                              <arg>
                                              Labelled "compare"
                                                expression (src/deriving.ml[196,6090+39]..[196,6090+80])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (src/deriving.ml[196,6090+44]..[196,6090+50])
                                                    Ppat_tuple
                                                    [
                                                      pattern (src/deriving.ml[196,6090+45]..[196,6090+46])
                                                        Ppat_var "a" (src/deriving.ml[196,6090+45]..[196,6090+46])
                                                      pattern (src/deriving.ml[196,6090+48]..[196,6090+49])
                                                        Ppat_any
                                                    ]
                                                  expression (src/deriving.ml[196,6090+51]..[196,6090+79]) ghost
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (src/deriving.ml[196,6090+51]..[196,6090+57])
                                                      Ppat_tuple
                                                      [
                                                        pattern (src/deriving.ml[196,6090+52]..[196,6090+53])
                                                          Ppat_var "b" (src/deriving.ml[196,6090+52]..[196,6090+53])
                                                        pattern (src/deriving.ml[196,6090+55]..[196,6090+56])
                                                          Ppat_any
                                                      ]
                                                    expression (src/deriving.ml[196,6090+61]..[196,6090+79])
                                                      Pexp_apply
                                                      expression (src/deriving.ml[196,6090+61]..[196,6090+75])
                                                        Pexp_ident "String.compare" (src/deriving.ml[196,6090+61]..[196,6090+75])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/deriving.ml[196,6090+76]..[196,6090+77])
                                                            Pexp_ident "a" (src/deriving.ml[196,6090+76]..[196,6090+77])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/deriving.ml[196,6090+78]..[196,6090+79])
                                                            Pexp_ident "b" (src/deriving.ml[196,6090+78]..[196,6090+79])
                                                      ]
                                            ]
                                        <arg>
                                        Labelled "f"
                                          expression (src/deriving.ml[197,6172+11]..[200,6331+18])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (src/deriving.ml[197,6172+16]..[197,6172+26])
                                              Ppat_tuple
                                              [
                                                pattern (src/deriving.ml[197,6172+17]..[197,6172+22])
                                                  Ppat_var "label" (src/deriving.ml[197,6172+17]..[197,6172+22])
                                                pattern (src/deriving.ml[197,6172+24]..[197,6172+25])
                                                  Ppat_var "e" (src/deriving.ml[197,6172+24]..[197,6172+25])
                                              ]
                                            expression (src/deriving.ml[198,6202+10]..[200,6331+17])
                                              Pexp_apply
                                              expression (src/deriving.ml[198,6202+10]..[198,6202+35])
                                                Pexp_ident "Location.error_extensionf" (src/deriving.ml[198,6202+10]..[198,6202+35])
                                              [
                                                <arg>
                                                Labelled "loc"
                                                  expression (src/deriving.ml[198,6202+41]..[198,6202+51])
                                                    Pexp_field
                                                    expression (src/deriving.ml[198,6202+41]..[198,6202+42])
                                                      Pexp_ident "e" (src/deriving.ml[198,6202+41]..[198,6202+42])
                                                    "pexp_loc" (src/deriving.ml[198,6202+43]..[198,6202+51])
                                                <arg>
                                                Nolabel
                                                  expression (src/deriving.ml[199,6254+12]..[199,6254+76])
                                                    Pexp_constant PConst_string("Ppxlib.Deriving: argument labelled '%s' appears more than once",(src/deriving.ml[199,6254+13]..[199,6254+75]),None)
                                                <arg>
                                                Nolabel
                                                  expression (src/deriving.ml[200,6331+12]..[200,6331+17])
                                                    Pexp_ident "label" (src/deriving.ml[200,6331+12]..[200,6331+17])
                                              ]
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[201,6350+9]..[201,6350+23])
                                      Pexp_ident "Option.to_list" (src/deriving.ml[201,6350+9]..[201,6350+23])
                                ]
                          ]
                          expression (src/deriving.ml[203,6381+4]..[224,7152+58])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/deriving.ml[203,6381+8]..[203,6381+21])
                                  Ppat_var "accepted_args" (src/deriving.ml[203,6381+8]..[203,6381+21])
                                expression (src/deriving.ml[203,6381+24]..[203,6381+54])
                                  Pexp_apply
                                  expression (src/deriving.ml[203,6381+24]..[203,6381+43])
                                    Pexp_ident "merge_accepted_args" (src/deriving.ml[203,6381+24]..[203,6381+43])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[203,6381+44]..[203,6381+54])
                                        Pexp_ident "generators" (src/deriving.ml[203,6381+44]..[203,6381+54])
                                  ]
                            ]
                            expression (src/deriving.ml[204,6439+4]..[224,7152+58])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (src/deriving.ml[204,6439+8]..[204,6439+27])
                                    Ppat_var "unaccepted_argument" (src/deriving.ml[204,6439+8]..[204,6439+27])
                                  expression (src/deriving.ml[205,6469+6]..[219,7027+20])
                                    Pexp_apply
                                    expression (src/deriving.ml[205,6469+6]..[205,6469+21])
                                      Pexp_ident "List.filter_map" (src/deriving.ml[205,6469+6]..[205,6469+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/deriving.ml[205,6469+22]..[205,6469+26])
                                          Pexp_ident "args" (src/deriving.ml[205,6469+22]..[205,6469+26])
                                      <arg>
                                      Labelled "f"
                                        expression (src/deriving.ml[205,6469+30]..[219,7027+20])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (src/deriving.ml[205,6469+35]..[205,6469+45])
                                            Ppat_tuple
                                            [
                                              pattern (src/deriving.ml[205,6469+36]..[205,6469+41])
                                                Ppat_var "label" (src/deriving.ml[205,6469+36]..[205,6469+41])
                                              pattern (src/deriving.ml[205,6469+43]..[205,6469+44])
                                                Ppat_var "e" (src/deriving.ml[205,6469+43]..[205,6469+44])
                                            ]
                                          expression (src/deriving.ml[206,6518+10]..[219,7027+19])
                                            Pexp_ifthenelse
                                            expression (src/deriving.ml[206,6518+13]..[206,6518+53])
                                              Pexp_apply
                                              expression (src/deriving.ml[206,6518+13]..[206,6518+16])
                                                Pexp_ident "not" (src/deriving.ml[206,6518+13]..[206,6518+16])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/deriving.ml[206,6518+17]..[206,6518+53])
                                                    Pexp_apply
                                                    expression (src/deriving.ml[206,6518+18]..[206,6518+32])
                                                      Pexp_ident "String.Set.mem" (src/deriving.ml[206,6518+18]..[206,6518+32])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/deriving.ml[206,6518+33]..[206,6518+38])
                                                          Pexp_ident "label" (src/deriving.ml[206,6518+33]..[206,6518+38])
                                                      <arg>
                                                      Nolabel
                                                        expression (src/deriving.ml[206,6518+39]..[206,6518+52])
                                                          Pexp_ident "accepted_args" (src/deriving.ml[206,6518+39]..[206,6518+52])
                                                    ]
                                              ]
                                            expression (src/deriving.ml[207,6577+12]..[218,6983+43])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/deriving.ml[207,6577+16]..[207,6577+30])
                                                    Ppat_var "spellcheck_msg" (src/deriving.ml[207,6577+16]..[207,6577+30])
                                                  expression (src/deriving.ml[208,6610+14]..[212,6756+35])
                                                    Pexp_match
                                                    expression (src/deriving.ml[209,6630+16]..[209,6630+79])
                                                      Pexp_apply
                                                      expression (src/deriving.ml[209,6630+16]..[209,6630+37])
                                                        Pexp_ident "Spellcheck.spellcheck" (src/deriving.ml[209,6630+16]..[209,6630+37])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/deriving.ml[209,6630+38]..[209,6630+73])
                                                            Pexp_apply
                                                            expression (src/deriving.ml[209,6630+39]..[209,6630+58])
                                                              Pexp_ident "String.Set.elements" (src/deriving.ml[209,6630+39]..[209,6630+58])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/deriving.ml[209,6630+59]..[209,6630+72])
                                                                  Pexp_ident "accepted_args" (src/deriving.ml[209,6630+59]..[209,6630+72])
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (src/deriving.ml[209,6630+74]..[209,6630+79])
                                                            Pexp_ident "label" (src/deriving.ml[209,6630+74]..[209,6630+79])
                                                      ]
                                                    [
                                                      <case>
                                                        pattern (src/deriving.ml[211,6729+16]..[211,6729+20])
                                                          Ppat_construct "None" (src/deriving.ml[211,6729+16]..[211,6729+20])
                                                          None
                                                        expression (src/deriving.ml[211,6729+24]..[211,6729+26])
                                                          Pexp_constant PConst_string("",(src/deriving.ml[211,6729+25]..[211,6729+25]),None)
                                                      <case>
                                                        pattern (src/deriving.ml[212,6756+16]..[212,6756+22])
                                                          Ppat_construct "Some" (src/deriving.ml[212,6756+16]..[212,6756+20])
                                                          Some
                                                            pattern (src/deriving.ml[212,6756+21]..[212,6756+22])
                                                              Ppat_var "s" (src/deriving.ml[212,6756+21]..[212,6756+22])
                                                        expression (src/deriving.ml[212,6756+26]..[212,6756+35])
                                                          Pexp_apply
                                                          expression (src/deriving.ml[212,6756+32]..[212,6756+33])
                                                            Pexp_ident "^" (src/deriving.ml[212,6756+32]..[212,6756+33])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/deriving.ml[212,6756+26]..[212,6756+31])
                                                                Pexp_constant PConst_string(".\n",(src/deriving.ml[212,6756+27]..[212,6756+30]),None)
                                                            <arg>
                                                            Nolabel
                                                              expression (src/deriving.ml[212,6756+34]..[212,6756+35])
                                                                Pexp_ident "s" (src/deriving.ml[212,6756+34]..[212,6756+35])
                                                          ]
                                                    ]
                                              ]
                                              expression (src/deriving.ml[214,6807+12]..[218,6983+43])
                                                Pexp_construct "Some" (src/deriving.ml[214,6807+12]..[214,6807+16])
                                                Some
                                                  expression (src/deriving.ml[215,6824+14]..[218,6983+43])
                                                    Pexp_apply
                                                    expression (src/deriving.ml[215,6824+15]..[215,6824+40])
                                                      Pexp_ident "Location.error_extensionf" (src/deriving.ml[215,6824+15]..[215,6824+40])
                                                    [
                                                      <arg>
                                                      Labelled "loc"
                                                        expression (src/deriving.ml[215,6824+46]..[215,6824+56])
                                                          Pexp_field
                                                          expression (src/deriving.ml[215,6824+46]..[215,6824+47])
                                                            Pexp_ident "e" (src/deriving.ml[215,6824+46]..[215,6824+47])
                                                          "pexp_loc" (src/deriving.ml[215,6824+48]..[215,6824+56])
                                                      <arg>
                                                      Nolabel
                                                        expression (src/deriving.ml[216,6881+17]..[217,6957+25])
                                                          Pexp_constant PConst_string("Ppxlib.Deriving: generator '%s' doesn't accept argument '%s'%s",(src/deriving.ml[216,6881+18]..[217,6957+24]),None)
                                                      <arg>
                                                      Nolabel
                                                        expression (src/deriving.ml[218,6983+17]..[218,6983+21])
                                                          Pexp_ident "name" (src/deriving.ml[218,6983+17]..[218,6983+21])
                                                      <arg>
                                                      Nolabel
                                                        expression (src/deriving.ml[218,6983+22]..[218,6983+27])
                                                          Pexp_ident "label" (src/deriving.ml[218,6983+22]..[218,6983+27])
                                                      <arg>
                                                      Nolabel
                                                        expression (src/deriving.ml[218,6983+28]..[218,6983+42])
                                                          Pexp_ident "spellcheck_msg" (src/deriving.ml[218,6983+28]..[218,6983+42])
                                                    ]
                                            Some
                                              expression (src/deriving.ml[219,7027+15]..[219,7027+19])
                                                Pexp_construct "None" (src/deriving.ml[219,7027+15]..[219,7027+19])
                                                None
                                    ]
                              ]
                              expression (src/deriving.ml[221,7055+4]..[224,7152+58])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (src/deriving.ml[221,7055+8]..[221,7055+14])
                                      Ppat_var "errors" (src/deriving.ml[221,7055+8]..[221,7055+14])
                                    expression (src/deriving.ml[222,7072+6]..[222,7072+72])
                                      Pexp_apply
                                      expression (src/deriving.ml[222,7072+24]..[222,7072+25])
                                        Pexp_ident "@" (src/deriving.ml[222,7072+24]..[222,7072+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/deriving.ml[222,7072+6]..[222,7072+23])
                                            Pexp_ident "empty_label_error" (src/deriving.ml[222,7072+6]..[222,7072+23])
                                        <arg>
                                        Nolabel
                                          expression (src/deriving.ml[222,7072+26]..[222,7072+72])
                                            Pexp_apply
                                            expression (src/deriving.ml[222,7072+51]..[222,7072+52])
                                              Pexp_ident "@" (src/deriving.ml[222,7072+51]..[222,7072+52])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/deriving.ml[222,7072+26]..[222,7072+50])
                                                  Pexp_ident "duplicate_argument_error" (src/deriving.ml[222,7072+26]..[222,7072+50])
                                              <arg>
                                              Nolabel
                                                expression (src/deriving.ml[222,7072+53]..[222,7072+72])
                                                  Pexp_ident "unaccepted_argument" (src/deriving.ml[222,7072+53]..[222,7072+72])
                                            ]
                                      ]
                                ]
                                expression (src/deriving.ml[224,7152+4]..[224,7152+58])
                                  Pexp_ifthenelse
                                  expression (src/deriving.ml[224,7152+7]..[224,7152+29])
                                    Pexp_apply
                                    expression (src/deriving.ml[224,7152+26]..[224,7152+27])
                                      Pexp_ident "=" (src/deriving.ml[224,7152+26]..[224,7152+27])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/deriving.ml[224,7152+7]..[224,7152+25])
                                          Pexp_apply
                                          expression (src/deriving.ml[224,7152+7]..[224,7152+18])
                                            Pexp_ident "List.length" (src/deriving.ml[224,7152+7]..[224,7152+18])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/deriving.ml[224,7152+19]..[224,7152+25])
                                                Pexp_ident "errors" (src/deriving.ml[224,7152+19]..[224,7152+25])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (src/deriving.ml[224,7152+28]..[224,7152+29])
                                          Pexp_constant PConst_int (0,None)
                                    ]
                                  expression (src/deriving.ml[224,7152+35]..[224,7152+40])
                                    Pexp_construct "Ok" (src/deriving.ml[224,7152+35]..[224,7152+37])
                                    Some
                                      expression (src/deriving.ml[224,7152+38]..[224,7152+40])
                                        Pexp_construct "()" (src/deriving.ml[224,7152+38]..[224,7152+40])
                                        None
                                  Some
                                    expression (src/deriving.ml[224,7152+46]..[224,7152+58])
                                      Pexp_construct "Error" (src/deriving.ml[224,7152+46]..[224,7152+51])
                                      Some
                                        expression (src/deriving.ml[224,7152+52]..[224,7152+58])
                                          Pexp_ident "errors" (src/deriving.ml[224,7152+52]..[224,7152+58])
            ]
          structure_item (src/deriving.ml[226,7212+2]..[226,7212+79])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[226,7212+6]..[226,7212+11])
                  Ppat_var "apply" (src/deriving.ml[226,7212+6]..[226,7212+11])
                expression (src/deriving.ml[226,7212+12]..[226,7212+79]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/deriving.ml[226,7212+12]..[226,7212+17])
                    Ppat_construct "T" (src/deriving.ml[226,7212+13]..[226,7212+14])
                    Some
                      pattern (src/deriving.ml[226,7212+15]..[226,7212+16])
                        Ppat_var "t" (src/deriving.ml[226,7212+15]..[226,7212+16])
                  expression (src/deriving.ml[226,7212+18]..[226,7212+79]) ghost
                    Pexp_fun
                    Labelled "name"
                    None
                    pattern (src/deriving.ml[226,7212+24]..[226,7212+25])
                      Ppat_any
                    expression (src/deriving.ml[226,7212+26]..[226,7212+79]) ghost
                      Pexp_fun
                      Labelled "ctxt"
                      None
                      pattern (src/deriving.ml[226,7212+27]..[226,7212+31])
                        Ppat_var "ctxt" (src/deriving.ml[226,7212+27]..[226,7212+31])
                      expression (src/deriving.ml[226,7212+32]..[226,7212+79]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/deriving.ml[226,7212+32]..[226,7212+33])
                          Ppat_var "x" (src/deriving.ml[226,7212+32]..[226,7212+33])
                        expression (src/deriving.ml[226,7212+34]..[226,7212+79]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/deriving.ml[226,7212+34]..[226,7212+38])
                            Ppat_var "args" (src/deriving.ml[226,7212+34]..[226,7212+38])
                          expression (src/deriving.ml[226,7212+41]..[226,7212+79])
                            Pexp_apply
                            expression (src/deriving.ml[226,7212+41]..[226,7212+51])
                              Pexp_ident "Args.apply" (src/deriving.ml[226,7212+41]..[226,7212+51])
                            [
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[226,7212+52]..[226,7212+58])
                                  Pexp_field
                                  expression (src/deriving.ml[226,7212+52]..[226,7212+53])
                                    Pexp_ident "t" (src/deriving.ml[226,7212+52]..[226,7212+53])
                                  "spec" (src/deriving.ml[226,7212+54]..[226,7212+58])
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[226,7212+59]..[226,7212+63])
                                  Pexp_ident "args" (src/deriving.ml[226,7212+59]..[226,7212+63])
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[226,7212+64]..[226,7212+79])
                                  Pexp_apply
                                  expression (src/deriving.ml[226,7212+65]..[226,7212+70])
                                    Pexp_field
                                    expression (src/deriving.ml[226,7212+65]..[226,7212+66])
                                      Pexp_ident "t" (src/deriving.ml[226,7212+65]..[226,7212+66])
                                    "gen" (src/deriving.ml[226,7212+67]..[226,7212+70])
                                  [
                                    <arg>
                                    Labelled "ctxt"
                                      expression (src/deriving.ml[226,7212+72]..[226,7212+76])
                                        Pexp_ident "ctxt" (src/deriving.ml[226,7212+72]..[226,7212+76])
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[226,7212+77]..[226,7212+78])
                                        Pexp_ident "x" (src/deriving.ml[226,7212+77]..[226,7212+78])
                                  ]
                            ]
            ]
          structure_item (src/deriving.ml[228,7293+2]..[235,7601+10])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[228,7293+6]..[228,7293+15])
                  Ppat_var "apply_all" (src/deriving.ml[228,7293+6]..[228,7293+15])
                expression (src/deriving.ml[228,7293+16]..[235,7601+10]) ghost
                  Pexp_fun
                  Labelled "ctxt"
                  None
                  pattern (src/deriving.ml[228,7293+17]..[228,7293+21])
                    Ppat_var "ctxt" (src/deriving.ml[228,7293+17]..[228,7293+21])
                  expression (src/deriving.ml[228,7293+22]..[235,7601+10]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/deriving.ml[228,7293+22]..[228,7293+27])
                      Ppat_var "entry" (src/deriving.ml[228,7293+22]..[228,7293+27])
                    expression (src/deriving.ml[228,7293+28]..[235,7601+10]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/deriving.ml[228,7293+28]..[228,7293+52])
                        Ppat_tuple
                        [
                          pattern (src/deriving.ml[228,7293+29]..[228,7293+33])
                            Ppat_var "name" (src/deriving.ml[228,7293+29]..[228,7293+33])
                          pattern (src/deriving.ml[228,7293+35]..[228,7293+45])
                            Ppat_var "generators" (src/deriving.ml[228,7293+35]..[228,7293+45])
                          pattern (src/deriving.ml[228,7293+47]..[228,7293+51])
                            Ppat_var "args" (src/deriving.ml[228,7293+47]..[228,7293+51])
                        ]
                      expression (src/deriving.ml[229,7348+4]..[235,7601+10])
                        Pexp_open Fresh
                        module_expr (src/deriving.ml[229,7348+13]..[229,7348+19])
                          Pmod_ident "Result" (src/deriving.ml[229,7348+13]..[229,7348+19])
                        expression (src/deriving.ml[230,7371+4]..[235,7601+10])
                          Pexp_apply
                          expression (src/deriving.ml[230,7371+45]..[230,7371+48])
                            Pexp_ident ">>|" (src/deriving.ml[230,7371+45]..[230,7371+48])
                          [
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[230,7371+4]..[230,7371+44])
                                Pexp_apply
                                expression (src/deriving.ml[230,7371+4]..[230,7371+19])
                                  Pexp_ident "check_arguments" (src/deriving.ml[230,7371+4]..[230,7371+19])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[230,7371+20]..[230,7371+28])
                                      Pexp_field
                                      expression (src/deriving.ml[230,7371+20]..[230,7371+24])
                                        Pexp_ident "name" (src/deriving.ml[230,7371+20]..[230,7371+24])
                                      "txt" (src/deriving.ml[230,7371+25]..[230,7371+28])
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[230,7371+29]..[230,7371+39])
                                      Pexp_ident "generators" (src/deriving.ml[230,7371+29]..[230,7371+39])
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[230,7371+40]..[230,7371+44])
                                      Pexp_ident "args" (src/deriving.ml[230,7371+40]..[230,7371+44])
                                ]
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[230,7371+49]..[235,7601+10])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/deriving.ml[230,7371+53]..[230,7371+55])
                                  Ppat_construct "()" (src/deriving.ml[230,7371+53]..[230,7371+55])
                                  None
                                expression (src/deriving.ml[231,7430+4]..[235,7601+10])
                                  Pexp_apply
                                  expression (src/deriving.ml[231,7430+4]..[231,7430+12])
                                    Pexp_ident "List.map" (src/deriving.ml[231,7430+4]..[231,7430+12])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[231,7430+13]..[231,7430+23])
                                        Pexp_ident "generators" (src/deriving.ml[231,7430+13]..[231,7430+23])
                                    <arg>
                                    Labelled "f"
                                      expression (src/deriving.ml[231,7430+27]..[235,7601+10])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (src/deriving.ml[231,7430+32]..[231,7430+37])
                                          Ppat_construct "T" (src/deriving.ml[231,7430+33]..[231,7430+34])
                                          Some
                                            pattern (src/deriving.ml[231,7430+35]..[231,7430+36])
                                              Ppat_var "t" (src/deriving.ml[231,7430+35]..[231,7430+36])
                                        expression (src/deriving.ml[232,7471+8]..[235,7601+9])
                                          Pexp_record
                                          [
                                            "items" (src/deriving.ml[233,7481+10]..[233,7481+15])
                                              expression (src/deriving.ml[233,7481+18]..[233,7481+61])
                                                Pexp_apply
                                                expression (src/deriving.ml[233,7481+18]..[233,7481+23])
                                                  Pexp_ident "apply" (src/deriving.ml[233,7481+18]..[233,7481+23])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/deriving.ml[233,7481+24]..[233,7481+29])
                                                      Pexp_construct "T" (src/deriving.ml[233,7481+25]..[233,7481+26])
                                                      Some
                                                        expression (src/deriving.ml[233,7481+27]..[233,7481+28])
                                                          Pexp_ident "t" (src/deriving.ml[233,7481+27]..[233,7481+28])
                                                  <arg>
                                                  Labelled "name"
                                                    expression (src/deriving.ml[233,7481+36]..[233,7481+44])
                                                      Pexp_field
                                                      expression (src/deriving.ml[233,7481+36]..[233,7481+40])
                                                        Pexp_ident "name" (src/deriving.ml[233,7481+36]..[233,7481+40])
                                                      "txt" (src/deriving.ml[233,7481+41]..[233,7481+44])
                                                  <arg>
                                                  Labelled "ctxt"
                                                    expression (src/deriving.ml[233,7481+46]..[233,7481+50])
                                                      Pexp_ident "ctxt" (src/deriving.ml[233,7481+46]..[233,7481+50])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/deriving.ml[233,7481+51]..[233,7481+56])
                                                      Pexp_ident "entry" (src/deriving.ml[233,7481+51]..[233,7481+56])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/deriving.ml[233,7481+57]..[233,7481+61])
                                                      Pexp_ident "args" (src/deriving.ml[233,7481+57]..[233,7481+61])
                                                ]
                                            "unused_code_warnings" (src/deriving.ml[234,7544+10]..[234,7544+30])
                                              expression (src/deriving.ml[234,7544+33]..[234,7544+55])
                                                Pexp_field
                                                expression (src/deriving.ml[234,7544+33]..[234,7544+34])
                                                  Pexp_ident "t" (src/deriving.ml[234,7544+33]..[234,7544+34])
                                                "unused_code_warnings" (src/deriving.ml[234,7544+35]..[234,7544+55])
                                          ]
                                          None
                                  ]
                          ]
            ]
          structure_item (src/deriving.ml[237,7613+2]..[246,7945+71])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[237,7613+6]..[237,7613+15])
                  Ppat_var "apply_all" (src/deriving.ml[237,7613+6]..[237,7613+15])
                expression (src/deriving.ml[237,7613+16]..[246,7945+71]) ghost
                  Pexp_fun
                  Labelled "ctxt"
                  None
                  pattern (src/deriving.ml[237,7613+17]..[237,7613+21])
                    Ppat_var "ctxt" (src/deriving.ml[237,7613+17]..[237,7613+21])
                  expression (src/deriving.ml[237,7613+22]..[246,7945+71]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/deriving.ml[237,7613+22]..[237,7613+27])
                      Ppat_var "entry" (src/deriving.ml[237,7613+22]..[237,7613+27])
                    expression (src/deriving.ml[237,7613+28]..[246,7945+71]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/deriving.ml[237,7613+28]..[237,7613+38])
                        Ppat_var "generators" (src/deriving.ml[237,7613+28]..[237,7613+38])
                      expression (src/deriving.ml[237,7613+39]..[246,7945+71]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/deriving.ml[237,7613+39]..[237,7613+50])
                          Ppat_var "ext_to_item" (src/deriving.ml[237,7613+39]..[237,7613+50])
                        expression (src/deriving.ml[238,7666+4]..[246,7945+71])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/deriving.ml[238,7666+8]..[238,7666+9])
                                Ppat_var "l" (src/deriving.ml[238,7666+8]..[238,7666+9])
                              expression (src/deriving.ml[238,7666+12]..[238,7666+58])
                                Pexp_apply
                                expression (src/deriving.ml[238,7666+12]..[238,7666+20])
                                  Pexp_ident "List.map" (src/deriving.ml[238,7666+12]..[238,7666+20])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[238,7666+21]..[238,7666+31])
                                      Pexp_ident "generators" (src/deriving.ml[238,7666+21]..[238,7666+31])
                                  <arg>
                                  Labelled "f"
                                    expression (src/deriving.ml[238,7666+35]..[238,7666+58])
                                      Pexp_apply
                                      expression (src/deriving.ml[238,7666+36]..[238,7666+45])
                                        Pexp_ident "apply_all" (src/deriving.ml[238,7666+36]..[238,7666+45])
                                      [
                                        <arg>
                                        Labelled "ctxt"
                                          expression (src/deriving.ml[238,7666+47]..[238,7666+51])
                                            Pexp_ident "ctxt" (src/deriving.ml[238,7666+47]..[238,7666+51])
                                        <arg>
                                        Nolabel
                                          expression (src/deriving.ml[238,7666+52]..[238,7666+57])
                                            Pexp_ident "entry" (src/deriving.ml[238,7666+52]..[238,7666+57])
                                      ]
                                ]
                          ]
                          expression (src/deriving.ml[239,7728+4]..[246,7945+71])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/deriving.ml[239,7728+8]..[239,7728+16])
                                  Ppat_tuple
                                  [
                                    pattern (src/deriving.ml[239,7728+8]..[239,7728+10])
                                      Ppat_var "l1" (src/deriving.ml[239,7728+8]..[239,7728+10])
                                    pattern (src/deriving.ml[239,7728+12]..[239,7728+16])
                                      Ppat_var "lerr" (src/deriving.ml[239,7728+12]..[239,7728+16])
                                  ]
                                expression (src/deriving.ml[240,7747+6]..[240,7747+73])
                                  Pexp_apply
                                  expression (src/deriving.ml[240,7747+6]..[240,7747+24])
                                    Pexp_ident "List.partition_map" (src/deriving.ml[240,7747+6]..[240,7747+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[240,7747+25]..[240,7747+71])
                                        Pexp_function
                                        [
                                          <case>
                                            pattern (src/deriving.ml[240,7747+35]..[240,7747+39])
                                              Ppat_construct "Ok" (src/deriving.ml[240,7747+35]..[240,7747+37])
                                              Some
                                                pattern (src/deriving.ml[240,7747+38]..[240,7747+39])
                                                  Ppat_var "e" (src/deriving.ml[240,7747+38]..[240,7747+39])
                                            expression (src/deriving.ml[240,7747+43]..[240,7747+49])
                                              Pexp_construct "Left" (src/deriving.ml[240,7747+43]..[240,7747+47])
                                              Some
                                                expression (src/deriving.ml[240,7747+48]..[240,7747+49])
                                                  Pexp_ident "e" (src/deriving.ml[240,7747+48]..[240,7747+49])
                                          <case>
                                            pattern (src/deriving.ml[240,7747+52]..[240,7747+59])
                                              Ppat_construct "Error" (src/deriving.ml[240,7747+52]..[240,7747+57])
                                              Some
                                                pattern (src/deriving.ml[240,7747+58]..[240,7747+59])
                                                  Ppat_var "e" (src/deriving.ml[240,7747+58]..[240,7747+59])
                                            expression (src/deriving.ml[240,7747+63]..[240,7747+70])
                                              Pexp_construct "Right" (src/deriving.ml[240,7747+63]..[240,7747+68])
                                              Some
                                                expression (src/deriving.ml[240,7747+69]..[240,7747+70])
                                                  Pexp_ident "e" (src/deriving.ml[240,7747+69]..[240,7747+70])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[240,7747+72]..[240,7747+73])
                                        Pexp_ident "l" (src/deriving.ml[240,7747+72]..[240,7747+73])
                                  ]
                            ]
                            expression (src/deriving.ml[242,7828+4]..[246,7945+71])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (src/deriving.ml[242,7828+8]..[242,7828+12])
                                    Ppat_var "lerr" (src/deriving.ml[242,7828+8]..[242,7828+12])
                                  expression (src/deriving.ml[243,7843+6]..[244,7866+71])
                                    Pexp_apply
                                    expression (src/deriving.ml[244,7866+6]..[244,7866+8])
                                      Pexp_ident "|>" (src/deriving.ml[244,7866+6]..[244,7866+8])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/deriving.ml[243,7843+6]..[243,7843+22])
                                          Pexp_apply
                                          expression (src/deriving.ml[243,7843+6]..[243,7843+17])
                                            Pexp_ident "List.concat" (src/deriving.ml[243,7843+6]..[243,7843+17])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/deriving.ml[243,7843+18]..[243,7843+22])
                                                Pexp_ident "lerr" (src/deriving.ml[243,7843+18]..[243,7843+22])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (src/deriving.ml[244,7866+9]..[244,7866+71])
                                          Pexp_apply
                                          expression (src/deriving.ml[244,7866+9]..[244,7866+17])
                                            Pexp_ident "List.map" (src/deriving.ml[244,7866+9]..[244,7866+17])
                                          [
                                            <arg>
                                            Labelled "f"
                                              expression (src/deriving.ml[244,7866+21]..[244,7866+71])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (src/deriving.ml[244,7866+26]..[244,7866+29])
                                                  Ppat_var "err" (src/deriving.ml[244,7866+26]..[244,7866+29])
                                                expression (src/deriving.ml[244,7866+33]..[244,7866+70])
                                                  Pexp_apply
                                                  expression (src/deriving.ml[244,7866+33]..[244,7866+44])
                                                    Pexp_ident "ext_to_item" (src/deriving.ml[244,7866+33]..[244,7866+44])
                                                  [
                                                    <arg>
                                                    Labelled "loc"
                                                      expression (src/deriving.ml[244,7866+50]..[244,7866+63])
                                                        Pexp_ident "Location.none" (src/deriving.ml[244,7866+50]..[244,7866+63])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/deriving.ml[244,7866+64]..[244,7866+67])
                                                        Pexp_ident "err" (src/deriving.ml[244,7866+64]..[244,7866+67])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/deriving.ml[244,7866+68]..[244,7866+70])
                                                        Pexp_construct "[]" (src/deriving.ml[244,7866+68]..[244,7866+70])
                                                        None
                                                  ]
                                          ]
                                    ]
                              ]
                              expression (src/deriving.ml[246,7945+4]..[246,7945+71])
                                Pexp_apply
                                expression (src/deriving.ml[246,7945+19]..[246,7945+20])
                                  Pexp_ident "@" (src/deriving.ml[246,7945+19]..[246,7945+20])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[246,7945+4]..[246,7945+18])
                                      Pexp_apply
                                      expression (src/deriving.ml[246,7945+4]..[246,7945+15])
                                        Pexp_ident "List.concat" (src/deriving.ml[246,7945+4]..[246,7945+15])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/deriving.ml[246,7945+16]..[246,7945+18])
                                            Pexp_ident "l1" (src/deriving.ml[246,7945+16]..[246,7945+18])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[246,7945+21]..[246,7945+71])
                                      Pexp_construct "::" (src/deriving.ml[246,7945+23]..[246,7945+71]) ghost
                                      Some
                                        expression (src/deriving.ml[246,7945+23]..[246,7945+71]) ghost
                                          Pexp_tuple
                                          [
                                            expression (src/deriving.ml[246,7945+23]..[246,7945+69])
                                              Pexp_record
                                              [
                                                "items" (src/deriving.ml[246,7945+25]..[246,7945+30])
                                                  expression (src/deriving.ml[246,7945+33]..[246,7945+37])
                                                    Pexp_ident "lerr" (src/deriving.ml[246,7945+33]..[246,7945+37])
                                                "unused_code_warnings" (src/deriving.ml[246,7945+39]..[246,7945+59])
                                                  expression (src/deriving.ml[246,7945+62]..[246,7945+67])
                                                    Pexp_construct "false" (src/deriving.ml[246,7945+62]..[246,7945+67])
                                                    None
                                              ]
                                              None
                                            expression (src/deriving.ml[246,7945+70]..[246,7945+71]) ghost
                                              Pexp_construct "[]" (src/deriving.ml[246,7945+70]..[246,7945+71]) ghost
                                              None
                                          ]
                                ]
            ]
        ]
  structure_item (src/deriving.ml[249,8022+0]..[524,17260+3])
    Pstr_module
    "Deriver" (src/deriving.ml[249,8022+7]..[249,8022+14])
      module_expr (src/deriving.ml[249,8022+17]..[524,17260+3])
        Pmod_structure
        [
          structure_item (src/deriving.ml[250,8046+2]..[268,8872+5])
            Pstr_module
            "Actual_deriver" (src/deriving.ml[250,8046+9]..[250,8046+23])
              module_expr (src/deriving.ml[250,8046+26]..[268,8872+5])
                Pmod_structure
                [
                  structure_item (src/deriving.ml[251,8079+4]..[267,8866+5])
                    Pstr_type Rec
                    [
                      type_declaration "t" (src/deriving.ml[251,8079+9]..[251,8079+10]) (src/deriving.ml[251,8079+4]..[267,8866+5])
                        ptype_params =
                          []
                        ptype_cstrs =
                          []
                        ptype_kind =
                          Ptype_record
                            [
                              (src/deriving.ml[252,8094+6]..[252,8094+20])
                                Immutable
                                "name" (src/deriving.ml[252,8094+6]..[252,8094+10])                                core_type (src/deriving.ml[252,8094+13]..[252,8094+19])
                                  Ptyp_constr "string" (src/deriving.ml[252,8094+13]..[252,8094+19])
                                  []
                              (src/deriving.ml[253,8115+6]..[254,8137+73])
                                Immutable
                                "str_type_decl" (src/deriving.ml[253,8115+6]..[253,8115+19])                                core_type (src/deriving.ml[254,8137+8]..[254,8137+72])
                                  Ptyp_constr "option" (src/deriving.ml[254,8137+66]..[254,8137+72])
                                  [
                                    core_type (src/deriving.ml[254,8137+8]..[254,8137+65])
                                      Ptyp_constr "Generator.t" (src/deriving.ml[254,8137+54]..[254,8137+65])
                                      [
                                        core_type (src/deriving.ml[254,8137+9]..[254,8137+18])
                                          Ptyp_constr "structure" (src/deriving.ml[254,8137+9]..[254,8137+18])
                                          []
                                        core_type (src/deriving.ml[254,8137+20]..[254,8137+52])
                                          Ptyp_tuple
                                          [
                                            core_type (src/deriving.ml[254,8137+20]..[254,8137+28])
                                              Ptyp_constr "rec_flag" (src/deriving.ml[254,8137+20]..[254,8137+28])
                                              []
                                            core_type (src/deriving.ml[254,8137+31]..[254,8137+52])
                                              Ptyp_constr "list" (src/deriving.ml[254,8137+48]..[254,8137+52])
                                              [
                                                core_type (src/deriving.ml[254,8137+31]..[254,8137+47])
                                                  Ptyp_constr "type_declaration" (src/deriving.ml[254,8137+31]..[254,8137+47])
                                                  []
                                              ]
                                          ]
                                      ]
                                  ]
                              (src/deriving.ml[255,8211+6]..[255,8211+68])
                                Immutable
                                "str_type_ext" (src/deriving.ml[255,8211+6]..[255,8211+18])                                core_type (src/deriving.ml[255,8211+21]..[255,8211+67])
                                  Ptyp_constr "option" (src/deriving.ml[255,8211+61]..[255,8211+67])
                                  [
                                    core_type (src/deriving.ml[255,8211+21]..[255,8211+60])
                                      Ptyp_constr "Generator.t" (src/deriving.ml[255,8211+49]..[255,8211+60])
                                      [
                                        core_type (src/deriving.ml[255,8211+22]..[255,8211+31])
                                          Ptyp_constr "structure" (src/deriving.ml[255,8211+22]..[255,8211+31])
                                          []
                                        core_type (src/deriving.ml[255,8211+33]..[255,8211+47])
                                          Ptyp_constr "type_extension" (src/deriving.ml[255,8211+33]..[255,8211+47])
                                          []
                                      ]
                                  ]
                              (src/deriving.ml[256,8280+6]..[256,8280+69])
                                Immutable
                                "str_exception" (src/deriving.ml[256,8280+6]..[256,8280+19])                                core_type (src/deriving.ml[256,8280+22]..[256,8280+68])
                                  Ptyp_constr "option" (src/deriving.ml[256,8280+62]..[256,8280+68])
                                  [
                                    core_type (src/deriving.ml[256,8280+22]..[256,8280+61])
                                      Ptyp_constr "Generator.t" (src/deriving.ml[256,8280+50]..[256,8280+61])
                                      [
                                        core_type (src/deriving.ml[256,8280+23]..[256,8280+32])
                                          Ptyp_constr "structure" (src/deriving.ml[256,8280+23]..[256,8280+32])
                                          []
                                        core_type (src/deriving.ml[256,8280+34]..[256,8280+48])
                                          Ptyp_constr "type_exception" (src/deriving.ml[256,8280+34]..[256,8280+48])
                                          []
                                      ]
                                  ]
                              (src/deriving.ml[257,8350+6]..[258,8379+64])
                                Immutable
                                "str_module_type_decl" (src/deriving.ml[257,8350+6]..[257,8350+26])                                core_type (src/deriving.ml[258,8379+8]..[258,8379+63])
                                  Ptyp_constr "option" (src/deriving.ml[258,8379+57]..[258,8379+63])
                                  [
                                    core_type (src/deriving.ml[258,8379+8]..[258,8379+56])
                                      Ptyp_constr "Generator.t" (src/deriving.ml[258,8379+45]..[258,8379+56])
                                      [
                                        core_type (src/deriving.ml[258,8379+9]..[258,8379+18])
                                          Ptyp_constr "structure" (src/deriving.ml[258,8379+9]..[258,8379+18])
                                          []
                                        core_type (src/deriving.ml[258,8379+20]..[258,8379+43])
                                          Ptyp_constr "module_type_declaration" (src/deriving.ml[258,8379+20]..[258,8379+43])
                                          []
                                      ]
                                  ]
                              (src/deriving.ml[259,8444+6]..[260,8466+73])
                                Immutable
                                "sig_type_decl" (src/deriving.ml[259,8444+6]..[259,8444+19])                                core_type (src/deriving.ml[260,8466+8]..[260,8466+72])
                                  Ptyp_constr "option" (src/deriving.ml[260,8466+66]..[260,8466+72])
                                  [
                                    core_type (src/deriving.ml[260,8466+8]..[260,8466+65])
                                      Ptyp_constr "Generator.t" (src/deriving.ml[260,8466+54]..[260,8466+65])
                                      [
                                        core_type (src/deriving.ml[260,8466+9]..[260,8466+18])
                                          Ptyp_constr "signature" (src/deriving.ml[260,8466+9]..[260,8466+18])
                                          []
                                        core_type (src/deriving.ml[260,8466+20]..[260,8466+52])
                                          Ptyp_tuple
                                          [
                                            core_type (src/deriving.ml[260,8466+20]..[260,8466+28])
                                              Ptyp_constr "rec_flag" (src/deriving.ml[260,8466+20]..[260,8466+28])
                                              []
                                            core_type (src/deriving.ml[260,8466+31]..[260,8466+52])
                                              Ptyp_constr "list" (src/deriving.ml[260,8466+48]..[260,8466+52])
                                              [
                                                core_type (src/deriving.ml[260,8466+31]..[260,8466+47])
                                                  Ptyp_constr "type_declaration" (src/deriving.ml[260,8466+31]..[260,8466+47])
                                                  []
                                              ]
                                          ]
                                      ]
                                  ]
                              (src/deriving.ml[261,8540+6]..[261,8540+68])
                                Immutable
                                "sig_type_ext" (src/deriving.ml[261,8540+6]..[261,8540+18])                                core_type (src/deriving.ml[261,8540+21]..[261,8540+67])
                                  Ptyp_constr "option" (src/deriving.ml[261,8540+61]..[261,8540+67])
                                  [
                                    core_type (src/deriving.ml[261,8540+21]..[261,8540+60])
                                      Ptyp_constr "Generator.t" (src/deriving.ml[261,8540+49]..[261,8540+60])
                                      [
                                        core_type (src/deriving.ml[261,8540+22]..[261,8540+31])
                                          Ptyp_constr "signature" (src/deriving.ml[261,8540+22]..[261,8540+31])
                                          []
                                        core_type (src/deriving.ml[261,8540+33]..[261,8540+47])
                                          Ptyp_constr "type_extension" (src/deriving.ml[261,8540+33]..[261,8540+47])
                                          []
                                      ]
                                  ]
                              (src/deriving.ml[262,8609+6]..[262,8609+69])
                                Immutable
                                "sig_exception" (src/deriving.ml[262,8609+6]..[262,8609+19])                                core_type (src/deriving.ml[262,8609+22]..[262,8609+68])
                                  Ptyp_constr "option" (src/deriving.ml[262,8609+62]..[262,8609+68])
                                  [
                                    core_type (src/deriving.ml[262,8609+22]..[262,8609+61])
                                      Ptyp_constr "Generator.t" (src/deriving.ml[262,8609+50]..[262,8609+61])
                                      [
                                        core_type (src/deriving.ml[262,8609+23]..[262,8609+32])
                                          Ptyp_constr "signature" (src/deriving.ml[262,8609+23]..[262,8609+32])
                                          []
                                        core_type (src/deriving.ml[262,8609+34]..[262,8609+48])
                                          Ptyp_constr "type_exception" (src/deriving.ml[262,8609+34]..[262,8609+48])
                                          []
                                      ]
                                  ]
                              (src/deriving.ml[263,8679+6]..[264,8708+64])
                                Immutable
                                "sig_module_type_decl" (src/deriving.ml[263,8679+6]..[263,8679+26])                                core_type (src/deriving.ml[264,8708+8]..[264,8708+63])
                                  Ptyp_constr "option" (src/deriving.ml[264,8708+57]..[264,8708+63])
                                  [
                                    core_type (src/deriving.ml[264,8708+8]..[264,8708+56])
                                      Ptyp_constr "Generator.t" (src/deriving.ml[264,8708+45]..[264,8708+56])
                                      [
                                        core_type (src/deriving.ml[264,8708+9]..[264,8708+18])
                                          Ptyp_constr "signature" (src/deriving.ml[264,8708+9]..[264,8708+18])
                                          []
                                        core_type (src/deriving.ml[264,8708+20]..[264,8708+43])
                                          Ptyp_constr "module_type_declaration" (src/deriving.ml[264,8708+20]..[264,8708+43])
                                          []
                                      ]
                                  ]
                              (src/deriving.ml[265,8773+6]..[266,8791+74])
                                Immutable
                                "extension" (src/deriving.ml[265,8773+6]..[265,8773+15])                                core_type (src/deriving.ml[266,8791+8]..[266,8791+73])
                                  Ptyp_constr "option" (src/deriving.ml[266,8791+67]..[266,8791+73])
                                  [
                                    core_type (src/deriving.ml[266,8791+9]..[266,8791+65])
                                      Ptyp_arrow
                                      Labelled "loc"
                                      core_type (src/deriving.ml[266,8791+13]..[266,8791+23])
                                        Ptyp_constr "Location.t" (src/deriving.ml[266,8791+13]..[266,8791+23])
                                        []
                                      core_type (src/deriving.ml[266,8791+27]..[266,8791+65])
                                        Ptyp_arrow
                                        Labelled "path"
                                        core_type (src/deriving.ml[266,8791+32]..[266,8791+38])
                                          Ptyp_constr "string" (src/deriving.ml[266,8791+32]..[266,8791+38])
                                          []
                                        core_type (src/deriving.ml[266,8791+42]..[266,8791+65])
                                          Ptyp_arrow
                                          Nolabel
                                          core_type (src/deriving.ml[266,8791+42]..[266,8791+51])
                                            Ptyp_constr "core_type" (src/deriving.ml[266,8791+42]..[266,8791+51])
                                            []
                                          core_type (src/deriving.ml[266,8791+55]..[266,8791+65])
                                            Ptyp_constr "expression" (src/deriving.ml[266,8791+55]..[266,8791+65])
                                            []
                                  ]
                            ]
                        ptype_private = Public
                        ptype_manifest =
                          None
                    ]
                ]
          structure_item (src/deriving.ml[270,8879+2]..[281,9216+5])
            Pstr_module
            "Alias" (src/deriving.ml[270,8879+9]..[270,8879+14])
              module_expr (src/deriving.ml[270,8879+17]..[281,9216+5])
                Pmod_structure
                [
                  structure_item (src/deriving.ml[271,8903+4]..[280,9210+5])
                    Pstr_type Rec
                    [
                      type_declaration "t" (src/deriving.ml[271,8903+9]..[271,8903+10]) (src/deriving.ml[271,8903+4]..[280,9210+5])
                        ptype_params =
                          []
                        ptype_cstrs =
                          []
                        ptype_kind =
                          Ptype_record
                            [
                              (src/deriving.ml[272,8918+6]..[272,8918+34])
                                Immutable
                                "str_type_decl" (src/deriving.ml[272,8918+6]..[272,8918+19])                                core_type (src/deriving.ml[272,8918+22]..[272,8918+33])
                                  Ptyp_constr "list" (src/deriving.ml[272,8918+29]..[272,8918+33])
                                  [
                                    core_type (src/deriving.ml[272,8918+22]..[272,8918+28])
                                      Ptyp_constr "string" (src/deriving.ml[272,8918+22]..[272,8918+28])
                                      []
                                  ]
                              (src/deriving.ml[273,8953+6]..[273,8953+33])
                                Immutable
                                "str_type_ext" (src/deriving.ml[273,8953+6]..[273,8953+18])                                core_type (src/deriving.ml[273,8953+21]..[273,8953+32])
                                  Ptyp_constr "list" (src/deriving.ml[273,8953+28]..[273,8953+32])
                                  [
                                    core_type (src/deriving.ml[273,8953+21]..[273,8953+27])
                                      Ptyp_constr "string" (src/deriving.ml[273,8953+21]..[273,8953+27])
                                      []
                                  ]
                              (src/deriving.ml[274,8987+6]..[274,8987+34])
                                Immutable
                                "str_exception" (src/deriving.ml[274,8987+6]..[274,8987+19])                                core_type (src/deriving.ml[274,8987+22]..[274,8987+33])
                                  Ptyp_constr "list" (src/deriving.ml[274,8987+29]..[274,8987+33])
                                  [
                                    core_type (src/deriving.ml[274,8987+22]..[274,8987+28])
                                      Ptyp_constr "string" (src/deriving.ml[274,8987+22]..[274,8987+28])
                                      []
                                  ]
                              (src/deriving.ml[275,9022+6]..[275,9022+41])
                                Immutable
                                "str_module_type_decl" (src/deriving.ml[275,9022+6]..[275,9022+26])                                core_type (src/deriving.ml[275,9022+29]..[275,9022+40])
                                  Ptyp_constr "list" (src/deriving.ml[275,9022+36]..[275,9022+40])
                                  [
                                    core_type (src/deriving.ml[275,9022+29]..[275,9022+35])
                                      Ptyp_constr "string" (src/deriving.ml[275,9022+29]..[275,9022+35])
                                      []
                                  ]
                              (src/deriving.ml[276,9064+6]..[276,9064+34])
                                Immutable
                                "sig_type_decl" (src/deriving.ml[276,9064+6]..[276,9064+19])                                core_type (src/deriving.ml[276,9064+22]..[276,9064+33])
                                  Ptyp_constr "list" (src/deriving.ml[276,9064+29]..[276,9064+33])
                                  [
                                    core_type (src/deriving.ml[276,9064+22]..[276,9064+28])
                                      Ptyp_constr "string" (src/deriving.ml[276,9064+22]..[276,9064+28])
                                      []
                                  ]
                              (src/deriving.ml[277,9099+6]..[277,9099+33])
                                Immutable
                                "sig_type_ext" (src/deriving.ml[277,9099+6]..[277,9099+18])                                core_type (src/deriving.ml[277,9099+21]..[277,9099+32])
                                  Ptyp_constr "list" (src/deriving.ml[277,9099+28]..[277,9099+32])
                                  [
                                    core_type (src/deriving.ml[277,9099+21]..[277,9099+27])
                                      Ptyp_constr "string" (src/deriving.ml[277,9099+21]..[277,9099+27])
                                      []
                                  ]
                              (src/deriving.ml[278,9133+6]..[278,9133+34])
                                Immutable
                                "sig_exception" (src/deriving.ml[278,9133+6]..[278,9133+19])                                core_type (src/deriving.ml[278,9133+22]..[278,9133+33])
                                  Ptyp_constr "list" (src/deriving.ml[278,9133+29]..[278,9133+33])
                                  [
                                    core_type (src/deriving.ml[278,9133+22]..[278,9133+28])
                                      Ptyp_constr "string" (src/deriving.ml[278,9133+22]..[278,9133+28])
                                      []
                                  ]
                              (src/deriving.ml[279,9168+6]..[279,9168+41])
                                Immutable
                                "sig_module_type_decl" (src/deriving.ml[279,9168+6]..[279,9168+26])                                core_type (src/deriving.ml[279,9168+29]..[279,9168+40])
                                  Ptyp_constr "list" (src/deriving.ml[279,9168+36]..[279,9168+40])
                                  [
                                    core_type (src/deriving.ml[279,9168+29]..[279,9168+35])
                                      Ptyp_constr "string" (src/deriving.ml[279,9168+29]..[279,9168+35])
                                      []
                                  ]
                            ]
                        ptype_private = Public
                        ptype_manifest =
                          None
                    ]
                ]
          structure_item (src/deriving.ml[283,9223+2]..[356,10941+5])
            Pstr_module
            "Field" (src/deriving.ml[283,9223+9]..[283,9223+14])
              module_expr (src/deriving.ml[283,9223+17]..[356,10941+5])
                Pmod_structure
                [
                  structure_item (src/deriving.ml[284,9247+4]..[284,9247+25])
                    Pstr_type Rec
                    [
                      type_declaration "kind" (src/deriving.ml[284,9247+9]..[284,9247+13]) (src/deriving.ml[284,9247+4]..[284,9247+25])
                        ptype_params =
                          []
                        ptype_cstrs =
                          []
                        ptype_kind =
                          Ptype_variant
                            [
                              (src/deriving.ml[284,9247+16]..[284,9247+19])
                                "Str" (src/deriving.ml[284,9247+16]..[284,9247+19])
                                []
                                None
                              (src/deriving.ml[284,9247+20]..[284,9247+25])
                                "Sig" (src/deriving.ml[284,9247+22]..[284,9247+25])
                                []
                                None
                            ]
                        ptype_private = Public
                        ptype_manifest =
                          None
                    ]
                  structure_item (src/deriving.ml[286,9274+4]..[291,9439+5])
                    Pstr_type Rec
                    [
                      type_declaration "t" (src/deriving.ml[286,9274+18]..[286,9274+19]) (src/deriving.ml[286,9274+4]..[291,9439+5])
                        ptype_params =
                          [
                            core_type (src/deriving.ml[286,9274+10]..[286,9274+12])
                              Ptyp_var a
                            core_type (src/deriving.ml[286,9274+14]..[286,9274+16])
                              Ptyp_var b
                          ]
                        ptype_cstrs =
                          []
                        ptype_kind =
                          Ptype_record
                            [
                              (src/deriving.ml[287,9298+6]..[287,9298+20])
                                Immutable
                                "name" (src/deriving.ml[287,9298+6]..[287,9298+10])                                core_type (src/deriving.ml[287,9298+13]..[287,9298+19])
                                  Ptyp_constr "string" (src/deriving.ml[287,9298+13]..[287,9298+19])
                                  []
                              (src/deriving.ml[288,9319+6]..[288,9319+18])
                                Immutable
                                "kind" (src/deriving.ml[288,9319+6]..[288,9319+10])                                core_type (src/deriving.ml[288,9319+13]..[288,9319+17])
                                  Ptyp_constr "kind" (src/deriving.ml[288,9319+13]..[288,9319+17])
                                  []
                              (src/deriving.ml[289,9338+6]..[289,9338+60])
                                Immutable
                                "get" (src/deriving.ml[289,9338+6]..[289,9338+9])                                core_type (src/deriving.ml[289,9338+12]..[289,9338+59])
                                  Ptyp_arrow
                                  Nolabel
                                  core_type (src/deriving.ml[289,9338+12]..[289,9338+28])
                                    Ptyp_constr "Actual_deriver.t" (src/deriving.ml[289,9338+12]..[289,9338+28])
                                    []
                                  core_type (src/deriving.ml[289,9338+32]..[289,9338+59])
                                    Ptyp_constr "option" (src/deriving.ml[289,9338+53]..[289,9338+59])
                                    [
                                      core_type (src/deriving.ml[289,9338+32]..[289,9338+52])
                                        Ptyp_constr "Generator.t" (src/deriving.ml[289,9338+41]..[289,9338+52])
                                        [
                                          core_type (src/deriving.ml[289,9338+33]..[289,9338+35])
                                            Ptyp_var a
                                          core_type (src/deriving.ml[289,9338+37]..[289,9338+39])
                                            Ptyp_var b
                                        ]
                                    ]
                              (src/deriving.ml[290,9399+6]..[290,9399+39])
                                Immutable
                                "get_set" (src/deriving.ml[290,9399+6]..[290,9399+13])                                core_type (src/deriving.ml[290,9399+16]..[290,9399+38])
                                  Ptyp_arrow
                                  Nolabel
                                  core_type (src/deriving.ml[290,9399+16]..[290,9399+23])
                                    Ptyp_constr "Alias.t" (src/deriving.ml[290,9399+16]..[290,9399+23])
                                    []
                                  core_type (src/deriving.ml[290,9399+27]..[290,9399+38])
                                    Ptyp_constr "list" (src/deriving.ml[290,9399+34]..[290,9399+38])
                                    [
                                      core_type (src/deriving.ml[290,9399+27]..[290,9399+33])
                                        Ptyp_constr "string" (src/deriving.ml[290,9399+27]..[290,9399+33])
                                        []
                                    ]
                            ]
                        ptype_private = Public
                        ptype_manifest =
                          None
                    ]
                  structure_item (src/deriving.ml[293,9446+4]..[299,9609+7])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (src/deriving.ml[293,9446+8]..[293,9446+21])
                          Ppat_var "str_type_decl" (src/deriving.ml[293,9446+8]..[293,9446+21])
                        expression (src/deriving.ml[294,9470+6]..[299,9609+7])
                          Pexp_record
                          [
                            "kind" (src/deriving.ml[295,9478+8]..[295,9478+12])
                              expression (src/deriving.ml[295,9478+15]..[295,9478+18])
                                Pexp_construct "Str" (src/deriving.ml[295,9478+15]..[295,9478+18])
                                None
                            "name" (src/deriving.ml[296,9498+8]..[296,9498+12])
                              expression (src/deriving.ml[296,9498+15]..[296,9498+21])
                                Pexp_constant PConst_string("type",(src/deriving.ml[296,9498+16]..[296,9498+20]),None)
                            "get" (src/deriving.ml[297,9521+8]..[297,9521+11])
                              expression (src/deriving.ml[297,9521+14]..[297,9521+40])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/deriving.ml[297,9521+19]..[297,9521+20])
                                  Ppat_var "t" (src/deriving.ml[297,9521+19]..[297,9521+20])
                                expression (src/deriving.ml[297,9521+24]..[297,9521+39])
                                  Pexp_field
                                  expression (src/deriving.ml[297,9521+24]..[297,9521+25])
                                    Pexp_ident "t" (src/deriving.ml[297,9521+24]..[297,9521+25])
                                  "str_type_decl" (src/deriving.ml[297,9521+26]..[297,9521+39])
                            "get_set" (src/deriving.ml[298,9563+8]..[298,9563+15])
                              expression (src/deriving.ml[298,9563+18]..[298,9563+44])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/deriving.ml[298,9563+23]..[298,9563+24])
                                  Ppat_var "t" (src/deriving.ml[298,9563+23]..[298,9563+24])
                                expression (src/deriving.ml[298,9563+28]..[298,9563+43])
                                  Pexp_field
                                  expression (src/deriving.ml[298,9563+28]..[298,9563+29])
                                    Pexp_ident "t" (src/deriving.ml[298,9563+28]..[298,9563+29])
                                  "str_type_decl" (src/deriving.ml[298,9563+30]..[298,9563+43])
                          ]
                          None
                    ]
                  structure_item (src/deriving.ml[301,9618+4]..[307,9788+7])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (src/deriving.ml[301,9618+8]..[301,9618+20])
                          Ppat_var "str_type_ext" (src/deriving.ml[301,9618+8]..[301,9618+20])
                        expression (src/deriving.ml[302,9641+6]..[307,9788+7])
                          Pexp_record
                          [
                            "kind" (src/deriving.ml[303,9649+8]..[303,9649+12])
                              expression (src/deriving.ml[303,9649+15]..[303,9649+18])
                                Pexp_construct "Str" (src/deriving.ml[303,9649+15]..[303,9649+18])
                                None
                            "name" (src/deriving.ml[304,9669+8]..[304,9669+12])
                              expression (src/deriving.ml[304,9669+15]..[304,9669+31])
                                Pexp_constant PConst_string("type extension",(src/deriving.ml[304,9669+16]..[304,9669+30]),None)
                            "get" (src/deriving.ml[305,9702+8]..[305,9702+11])
                              expression (src/deriving.ml[305,9702+14]..[305,9702+39])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/deriving.ml[305,9702+19]..[305,9702+20])
                                  Ppat_var "t" (src/deriving.ml[305,9702+19]..[305,9702+20])
                                expression (src/deriving.ml[305,9702+24]..[305,9702+38])
                                  Pexp_field
                                  expression (src/deriving.ml[305,9702+24]..[305,9702+25])
                                    Pexp_ident "t" (src/deriving.ml[305,9702+24]..[305,9702+25])
                                  "str_type_ext" (src/deriving.ml[305,9702+26]..[305,9702+38])
                            "get_set" (src/deriving.ml[306,9743+8]..[306,9743+15])
                              expression (src/deriving.ml[306,9743+18]..[306,9743+43])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/deriving.ml[306,9743+23]..[306,9743+24])
                                  Ppat_var "t" (src/deriving.ml[306,9743+23]..[306,9743+24])
                                expression (src/deriving.ml[306,9743+28]..[306,9743+42])
                                  Pexp_field
                                  expression (src/deriving.ml[306,9743+28]..[306,9743+29])
                                    Pexp_ident "t" (src/deriving.ml[306,9743+28]..[306,9743+29])
                                  "str_type_ext" (src/deriving.ml[306,9743+30]..[306,9743+42])
                          ]
                          None
                    ]
                  structure_item (src/deriving.ml[309,9797+4]..[315,9965+7])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (src/deriving.ml[309,9797+8]..[309,9797+21])
                          Ppat_var "str_exception" (src/deriving.ml[309,9797+8]..[309,9797+21])
                        expression (src/deriving.ml[310,9821+6]..[315,9965+7])
                          Pexp_record
                          [
                            "kind" (src/deriving.ml[311,9829+8]..[311,9829+12])
                              expression (src/deriving.ml[311,9829+15]..[311,9829+18])
                                Pexp_construct "Str" (src/deriving.ml[311,9829+15]..[311,9829+18])
                                None
                            "name" (src/deriving.ml[312,9849+8]..[312,9849+12])
                              expression (src/deriving.ml[312,9849+15]..[312,9849+26])
                                Pexp_constant PConst_string("exception",(src/deriving.ml[312,9849+16]..[312,9849+25]),None)
                            "get" (src/deriving.ml[313,9877+8]..[313,9877+11])
                              expression (src/deriving.ml[313,9877+14]..[313,9877+40])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/deriving.ml[313,9877+19]..[313,9877+20])
                                  Ppat_var "t" (src/deriving.ml[313,9877+19]..[313,9877+20])
                                expression (src/deriving.ml[313,9877+24]..[313,9877+39])
                                  Pexp_field
                                  expression (src/deriving.ml[313,9877+24]..[313,9877+25])
                                    Pexp_ident "t" (src/deriving.ml[313,9877+24]..[313,9877+25])
                                  "str_exception" (src/deriving.ml[313,9877+26]..[313,9877+39])
                            "get_set" (src/deriving.ml[314,9919+8]..[314,9919+15])
                              expression (src/deriving.ml[314,9919+18]..[314,9919+44])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/deriving.ml[314,9919+23]..[314,9919+24])
                                  Ppat_var "t" (src/deriving.ml[314,9919+23]..[314,9919+24])
                                expression (src/deriving.ml[314,9919+28]..[314,9919+43])
                                  Pexp_field
                                  expression (src/deriving.ml[314,9919+28]..[314,9919+29])
                                    Pexp_ident "t" (src/deriving.ml[314,9919+28]..[314,9919+29])
                                  "str_exception" (src/deriving.ml[314,9919+30]..[314,9919+43])
                          ]
                          None
                    ]
                  structure_item (src/deriving.ml[317,9974+4]..[323,10165+7])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (src/deriving.ml[317,9974+8]..[317,9974+28])
                          Ppat_var "str_module_type_decl" (src/deriving.ml[317,9974+8]..[317,9974+28])
                        expression (src/deriving.ml[318,10005+6]..[323,10165+7])
                          Pexp_record
                          [
                            "kind" (src/deriving.ml[319,10013+8]..[319,10013+12])
                              expression (src/deriving.ml[319,10013+15]..[319,10013+18])
                                Pexp_construct "Str" (src/deriving.ml[319,10013+15]..[319,10013+18])
                                None
                            "name" (src/deriving.ml[320,10033+8]..[320,10033+12])
                              expression (src/deriving.ml[320,10033+15]..[320,10033+28])
                                Pexp_constant PConst_string("module type",(src/deriving.ml[320,10033+16]..[320,10033+27]),None)
                            "get" (src/deriving.ml[321,10063+8]..[321,10063+11])
                              expression (src/deriving.ml[321,10063+14]..[321,10063+47])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/deriving.ml[321,10063+19]..[321,10063+20])
                                  Ppat_var "t" (src/deriving.ml[321,10063+19]..[321,10063+20])
                                expression (src/deriving.ml[321,10063+24]..[321,10063+46])
                                  Pexp_field
                                  expression (src/deriving.ml[321,10063+24]..[321,10063+25])
                                    Pexp_ident "t" (src/deriving.ml[321,10063+24]..[321,10063+25])
                                  "str_module_type_decl" (src/deriving.ml[321,10063+26]..[321,10063+46])
                            "get_set" (src/deriving.ml[322,10112+8]..[322,10112+15])
                              expression (src/deriving.ml[322,10112+18]..[322,10112+51])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/deriving.ml[322,10112+23]..[322,10112+24])
                                  Ppat_var "t" (src/deriving.ml[322,10112+23]..[322,10112+24])
                                expression (src/deriving.ml[322,10112+28]..[322,10112+50])
                                  Pexp_field
                                  expression (src/deriving.ml[322,10112+28]..[322,10112+29])
                                    Pexp_ident "t" (src/deriving.ml[322,10112+28]..[322,10112+29])
                                  "str_module_type_decl" (src/deriving.ml[322,10112+30]..[322,10112+50])
                          ]
                          None
                    ]
                  structure_item (src/deriving.ml[325,10174+4]..[331,10347+7])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (src/deriving.ml[325,10174+8]..[325,10174+21])
                          Ppat_var "sig_type_decl" (src/deriving.ml[325,10174+8]..[325,10174+21])
                        expression (src/deriving.ml[326,10198+6]..[331,10347+7])
                          Pexp_record
                          [
                            "kind" (src/deriving.ml[327,10206+8]..[327,10206+12])
                              expression (src/deriving.ml[327,10206+15]..[327,10206+18])
                                Pexp_construct "Sig" (src/deriving.ml[327,10206+15]..[327,10206+18])
                                None
                            "name" (src/deriving.ml[328,10226+8]..[328,10226+12])
                              expression (src/deriving.ml[328,10226+15]..[328,10226+31])
                                Pexp_constant PConst_string("signature type",(src/deriving.ml[328,10226+16]..[328,10226+30]),None)
                            "get" (src/deriving.ml[329,10259+8]..[329,10259+11])
                              expression (src/deriving.ml[329,10259+14]..[329,10259+40])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/deriving.ml[329,10259+19]..[329,10259+20])
                                  Ppat_var "t" (src/deriving.ml[329,10259+19]..[329,10259+20])
                                expression (src/deriving.ml[329,10259+24]..[329,10259+39])
                                  Pexp_field
                                  expression (src/deriving.ml[329,10259+24]..[329,10259+25])
                                    Pexp_ident "t" (src/deriving.ml[329,10259+24]..[329,10259+25])
                                  "sig_type_decl" (src/deriving.ml[329,10259+26]..[329,10259+39])
                            "get_set" (src/deriving.ml[330,10301+8]..[330,10301+15])
                              expression (src/deriving.ml[330,10301+18]..[330,10301+44])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/deriving.ml[330,10301+23]..[330,10301+24])
                                  Ppat_var "t" (src/deriving.ml[330,10301+23]..[330,10301+24])
                                expression (src/deriving.ml[330,10301+28]..[330,10301+43])
                                  Pexp_field
                                  expression (src/deriving.ml[330,10301+28]..[330,10301+29])
                                    Pexp_ident "t" (src/deriving.ml[330,10301+28]..[330,10301+29])
                                  "sig_type_decl" (src/deriving.ml[330,10301+30]..[330,10301+43])
                          ]
                          None
                    ]
                  structure_item (src/deriving.ml[333,10356+4]..[339,10536+7])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (src/deriving.ml[333,10356+8]..[333,10356+20])
                          Ppat_var "sig_type_ext" (src/deriving.ml[333,10356+8]..[333,10356+20])
                        expression (src/deriving.ml[334,10379+6]..[339,10536+7])
                          Pexp_record
                          [
                            "kind" (src/deriving.ml[335,10387+8]..[335,10387+12])
                              expression (src/deriving.ml[335,10387+15]..[335,10387+18])
                                Pexp_construct "Sig" (src/deriving.ml[335,10387+15]..[335,10387+18])
                                None
                            "name" (src/deriving.ml[336,10407+8]..[336,10407+12])
                              expression (src/deriving.ml[336,10407+15]..[336,10407+41])
                                Pexp_constant PConst_string("signature type extension",(src/deriving.ml[336,10407+16]..[336,10407+40]),None)
                            "get" (src/deriving.ml[337,10450+8]..[337,10450+11])
                              expression (src/deriving.ml[337,10450+14]..[337,10450+39])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/deriving.ml[337,10450+19]..[337,10450+20])
                                  Ppat_var "t" (src/deriving.ml[337,10450+19]..[337,10450+20])
                                expression (src/deriving.ml[337,10450+24]..[337,10450+38])
                                  Pexp_field
                                  expression (src/deriving.ml[337,10450+24]..[337,10450+25])
                                    Pexp_ident "t" (src/deriving.ml[337,10450+24]..[337,10450+25])
                                  "sig_type_ext" (src/deriving.ml[337,10450+26]..[337,10450+38])
                            "get_set" (src/deriving.ml[338,10491+8]..[338,10491+15])
                              expression (src/deriving.ml[338,10491+18]..[338,10491+43])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/deriving.ml[338,10491+23]..[338,10491+24])
                                  Ppat_var "t" (src/deriving.ml[338,10491+23]..[338,10491+24])
                                expression (src/deriving.ml[338,10491+28]..[338,10491+42])
                                  Pexp_field
                                  expression (src/deriving.ml[338,10491+28]..[338,10491+29])
                                    Pexp_ident "t" (src/deriving.ml[338,10491+28]..[338,10491+29])
                                  "sig_type_ext" (src/deriving.ml[338,10491+30]..[338,10491+42])
                          ]
                          None
                    ]
                  structure_item (src/deriving.ml[341,10545+4]..[347,10723+7])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (src/deriving.ml[341,10545+8]..[341,10545+21])
                          Ppat_var "sig_exception" (src/deriving.ml[341,10545+8]..[341,10545+21])
                        expression (src/deriving.ml[342,10569+6]..[347,10723+7])
                          Pexp_record
                          [
                            "kind" (src/deriving.ml[343,10577+8]..[343,10577+12])
                              expression (src/deriving.ml[343,10577+15]..[343,10577+18])
                                Pexp_construct "Sig" (src/deriving.ml[343,10577+15]..[343,10577+18])
                                None
                            "name" (src/deriving.ml[344,10597+8]..[344,10597+12])
                              expression (src/deriving.ml[344,10597+15]..[344,10597+36])
                                Pexp_constant PConst_string("signature exception",(src/deriving.ml[344,10597+16]..[344,10597+35]),None)
                            "get" (src/deriving.ml[345,10635+8]..[345,10635+11])
                              expression (src/deriving.ml[345,10635+14]..[345,10635+40])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/deriving.ml[345,10635+19]..[345,10635+20])
                                  Ppat_var "t" (src/deriving.ml[345,10635+19]..[345,10635+20])
                                expression (src/deriving.ml[345,10635+24]..[345,10635+39])
                                  Pexp_field
                                  expression (src/deriving.ml[345,10635+24]..[345,10635+25])
                                    Pexp_ident "t" (src/deriving.ml[345,10635+24]..[345,10635+25])
                                  "sig_exception" (src/deriving.ml[345,10635+26]..[345,10635+39])
                            "get_set" (src/deriving.ml[346,10677+8]..[346,10677+15])
                              expression (src/deriving.ml[346,10677+18]..[346,10677+44])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/deriving.ml[346,10677+23]..[346,10677+24])
                                  Ppat_var "t" (src/deriving.ml[346,10677+23]..[346,10677+24])
                                expression (src/deriving.ml[346,10677+28]..[346,10677+43])
                                  Pexp_field
                                  expression (src/deriving.ml[346,10677+28]..[346,10677+29])
                                    Pexp_ident "t" (src/deriving.ml[346,10677+28]..[346,10677+29])
                                  "sig_exception" (src/deriving.ml[346,10677+30]..[346,10677+43])
                          ]
                          None
                    ]
                  structure_item (src/deriving.ml[349,10732+4]..[355,10933+7])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (src/deriving.ml[349,10732+8]..[349,10732+28])
                          Ppat_var "sig_module_type_decl" (src/deriving.ml[349,10732+8]..[349,10732+28])
                        expression (src/deriving.ml[350,10763+6]..[355,10933+7])
                          Pexp_record
                          [
                            "kind" (src/deriving.ml[351,10771+8]..[351,10771+12])
                              expression (src/deriving.ml[351,10771+15]..[351,10771+18])
                                Pexp_construct "Sig" (src/deriving.ml[351,10771+15]..[351,10771+18])
                                None
                            "name" (src/deriving.ml[352,10791+8]..[352,10791+12])
                              expression (src/deriving.ml[352,10791+15]..[352,10791+38])
                                Pexp_constant PConst_string("signature module type",(src/deriving.ml[352,10791+16]..[352,10791+37]),None)
                            "get" (src/deriving.ml[353,10831+8]..[353,10831+11])
                              expression (src/deriving.ml[353,10831+14]..[353,10831+47])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/deriving.ml[353,10831+19]..[353,10831+20])
                                  Ppat_var "t" (src/deriving.ml[353,10831+19]..[353,10831+20])
                                expression (src/deriving.ml[353,10831+24]..[353,10831+46])
                                  Pexp_field
                                  expression (src/deriving.ml[353,10831+24]..[353,10831+25])
                                    Pexp_ident "t" (src/deriving.ml[353,10831+24]..[353,10831+25])
                                  "sig_module_type_decl" (src/deriving.ml[353,10831+26]..[353,10831+46])
                            "get_set" (src/deriving.ml[354,10880+8]..[354,10880+15])
                              expression (src/deriving.ml[354,10880+18]..[354,10880+51])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/deriving.ml[354,10880+23]..[354,10880+24])
                                  Ppat_var "t" (src/deriving.ml[354,10880+23]..[354,10880+24])
                                expression (src/deriving.ml[354,10880+28]..[354,10880+50])
                                  Pexp_field
                                  expression (src/deriving.ml[354,10880+28]..[354,10880+29])
                                    Pexp_ident "t" (src/deriving.ml[354,10880+28]..[354,10880+29])
                                  "sig_module_type_decl" (src/deriving.ml[354,10880+30]..[354,10880+50])
                          ]
                          None
                    ]
                ]
          structure_item (src/deriving.ml[358,10948+2]..[358,10948+64])
            Pstr_type Rec
            [
              type_declaration "t" (src/deriving.ml[358,10948+7]..[358,10948+8]) (src/deriving.ml[358,10948+2]..[358,10948+64])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (src/deriving.ml[358,10948+11]..[358,10948+45])
                        "Actual_deriver" (src/deriving.ml[358,10948+11]..[358,10948+25])
                        [
                          core_type (src/deriving.ml[358,10948+29]..[358,10948+45])
                            Ptyp_constr "Actual_deriver.t" (src/deriving.ml[358,10948+29]..[358,10948+45])
                            []
                        ]
                        None
                      (src/deriving.ml[358,10948+46]..[358,10948+64])
                        "Alias" (src/deriving.ml[358,10948+48]..[358,10948+53])
                        [
                          core_type (src/deriving.ml[358,10948+57]..[358,10948+64])
                            Ptyp_constr "Alias.t" (src/deriving.ml[358,10948+57]..[358,10948+64])
                            []
                        ]
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (src/deriving.ml[359,11013+2]..[359,11013+37])
            Pstr_typext
            type_extension
              ptyext_path = "Ppx_derivers.deriver" (src/deriving.ml[359,11013+7]..[359,11013+27])
              ptyext_params =
                []
              ptyext_constructors =
                [
                  extension_constructor (src/deriving.ml[359,11013+31]..[359,11013+37])
                    pext_name = "T"
                    pext_kind =
                      Pext_decl
                        [
                          core_type (src/deriving.ml[359,11013+36]..[359,11013+37])
                            Ptyp_constr "t" (src/deriving.ml[359,11013+36]..[359,11013+37])
                            []
                        ]
                        None
                ]
              ptyext_private = Public
          structure_item (src/deriving.ml[361,11052+2]..[364,11168+18])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[361,11052+6]..[361,11052+14])
                  Ppat_var "derivers" (src/deriving.ml[361,11052+6]..[361,11052+14])
                expression (src/deriving.ml[361,11052+15]..[364,11168+18]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/deriving.ml[361,11052+15]..[361,11052+17])
                    Ppat_construct "()" (src/deriving.ml[361,11052+15]..[361,11052+17])
                    None
                  expression (src/deriving.ml[362,11072+4]..[364,11168+18])
                    Pexp_apply
                    expression (src/deriving.ml[362,11072+4]..[362,11072+19])
                      Pexp_ident "List.filter_map" (src/deriving.ml[362,11072+4]..[362,11072+19])
                    [
                      <arg>
                      Nolabel
                        expression (src/deriving.ml[362,11072+20]..[362,11072+46])
                          Pexp_apply
                          expression (src/deriving.ml[362,11072+21]..[362,11072+42])
                            Pexp_ident "Ppx_derivers.derivers" (src/deriving.ml[362,11072+21]..[362,11072+42])
                          [
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[362,11072+43]..[362,11072+45])
                                Pexp_construct "()" (src/deriving.ml[362,11072+43]..[362,11072+45])
                                None
                          ]
                      <arg>
                      Labelled "f"
                        expression (src/deriving.ml[362,11072+50]..[364,11168+18])
                          Pexp_function
                          [
                            <case>
                              pattern (src/deriving.ml[363,11132+8]..[363,11132+17])
                                Ppat_tuple
                                [
                                  pattern (src/deriving.ml[363,11132+8]..[363,11132+12])
                                    Ppat_var "name" (src/deriving.ml[363,11132+8]..[363,11132+12])
                                  pattern (src/deriving.ml[363,11132+14]..[363,11132+17])
                                    Ppat_construct "T" (src/deriving.ml[363,11132+14]..[363,11132+15])
                                    Some
                                      pattern (src/deriving.ml[363,11132+16]..[363,11132+17])
                                        Ppat_var "t" (src/deriving.ml[363,11132+16]..[363,11132+17])
                                ]
                              expression (src/deriving.ml[363,11132+21]..[363,11132+35])
                                Pexp_construct "Some" (src/deriving.ml[363,11132+21]..[363,11132+25])
                                Some
                                  expression (src/deriving.ml[363,11132+26]..[363,11132+35])
                                    Pexp_tuple
                                    [
                                      expression (src/deriving.ml[363,11132+27]..[363,11132+31])
                                        Pexp_ident "name" (src/deriving.ml[363,11132+27]..[363,11132+31])
                                      expression (src/deriving.ml[363,11132+33]..[363,11132+34])
                                        Pexp_ident "t" (src/deriving.ml[363,11132+33]..[363,11132+34])
                                    ]
                            <case>
                              pattern (src/deriving.ml[364,11168+8]..[364,11168+9])
                                Ppat_any
                              expression (src/deriving.ml[364,11168+13]..[364,11168+17])
                                Pexp_construct "None" (src/deriving.ml[364,11168+13]..[364,11168+17])
                                None
                          ]
                    ]
            ]
          structure_item (src/deriving.ml[366,11188+2]..[366,11188+35])
            Pstr_exception
            type_exception
              ptyext_constructor =
                extension_constructor (src/deriving.ml[366,11188+2]..[366,11188+35])
                  pext_name = "Not_supported"
                  pext_kind =
                    Pext_decl
                      [
                        core_type (src/deriving.ml[366,11188+29]..[366,11188+35])
                          Ptyp_constr "string" (src/deriving.ml[366,11188+29]..[366,11188+35])
                          []
                      ]
                      None
          structure_item (src/deriving.ml[368,11225+2]..[382,11754+27])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[368,11225+6]..[368,11225+29])
                  Ppat_var "resolve_actual_derivers" (src/deriving.ml[368,11225+6]..[368,11225+29])
                expression (src/deriving.ml[368,11225+30]..[382,11754+27]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/deriving.ml[368,11225+30]..[368,11225+54])
                    Ppat_constraint
                    pattern (src/deriving.ml[368,11225+31]..[368,11225+36])
                      Ppat_var "field" (src/deriving.ml[368,11225+31]..[368,11225+36])
                    core_type (src/deriving.ml[368,11225+39]..[368,11225+53])
                      Ptyp_constr "Field.t" (src/deriving.ml[368,11225+46]..[368,11225+53])
                      [
                        core_type (src/deriving.ml[368,11225+40]..[368,11225+41])
                          Ptyp_any
                        core_type (src/deriving.ml[368,11225+43]..[368,11225+44])
                          Ptyp_any
                      ]
                  expression (src/deriving.ml[368,11225+55]..[382,11754+27]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/deriving.ml[368,11225+55]..[368,11225+59])
                      Ppat_var "name" (src/deriving.ml[368,11225+55]..[368,11225+59])
                    expression (src/deriving.ml[369,11287+4]..[382,11754+27])
                      Pexp_let Rec
                      [
                        <def>
                          pattern (src/deriving.ml[369,11287+12]..[369,11287+16])
                            Ppat_var "loop" (src/deriving.ml[369,11287+12]..[369,11287+16])
                          expression (src/deriving.ml[369,11287+17]..[380,11705+41]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/deriving.ml[369,11287+17]..[369,11287+21])
                              Ppat_var "name" (src/deriving.ml[369,11287+17]..[369,11287+21])
                            expression (src/deriving.ml[369,11287+22]..[380,11705+41]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/deriving.ml[369,11287+22]..[369,11287+31])
                                Ppat_var "collected" (src/deriving.ml[369,11287+22]..[369,11287+31])
                              expression (src/deriving.ml[370,11321+6]..[380,11705+41])
                                Pexp_ifthenelse
                                expression (src/deriving.ml[371,11330+8]..[372,11394+37])
                                  Pexp_apply
                                  expression (src/deriving.ml[371,11330+8]..[371,11330+19])
                                    Pexp_ident "List.exists" (src/deriving.ml[371,11330+8]..[371,11330+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[371,11330+20]..[371,11330+29])
                                        Pexp_ident "collected" (src/deriving.ml[371,11330+20]..[371,11330+29])
                                    <arg>
                                    Labelled "f"
                                      expression (src/deriving.ml[371,11330+33]..[372,11394+37])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (src/deriving.ml[371,11330+38]..[371,11330+60])
                                          Ppat_constraint
                                          pattern (src/deriving.ml[371,11330+39]..[371,11330+40])
                                            Ppat_var "d" (src/deriving.ml[371,11330+39]..[371,11330+40])
                                          core_type (src/deriving.ml[371,11330+43]..[371,11330+59])
                                            Ptyp_constr "Actual_deriver.t" (src/deriving.ml[371,11330+43]..[371,11330+59])
                                            []
                                        expression (src/deriving.ml[372,11394+12]..[372,11394+36])
                                          Pexp_apply
                                          expression (src/deriving.ml[372,11394+12]..[372,11394+24])
                                            Pexp_ident "String.equal" (src/deriving.ml[372,11394+12]..[372,11394+24])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/deriving.ml[372,11394+25]..[372,11394+31])
                                                Pexp_field
                                                expression (src/deriving.ml[372,11394+25]..[372,11394+26])
                                                  Pexp_ident "d" (src/deriving.ml[372,11394+25]..[372,11394+26])
                                                "name" (src/deriving.ml[372,11394+27]..[372,11394+31])
                                            <arg>
                                            Nolabel
                                              expression (src/deriving.ml[372,11394+32]..[372,11394+36])
                                                Pexp_ident "name" (src/deriving.ml[372,11394+32]..[372,11394+36])
                                          ]
                                  ]
                                expression (src/deriving.ml[373,11432+11]..[373,11432+20])
                                  Pexp_ident "collected" (src/deriving.ml[373,11432+11]..[373,11432+20])
                                Some
                                  expression (src/deriving.ml[375,11464+8]..[380,11705+41])
                                    Pexp_match
                                    expression (src/deriving.ml[375,11464+14]..[375,11464+38])
                                      Pexp_apply
                                      expression (src/deriving.ml[375,11464+14]..[375,11464+33])
                                        Pexp_ident "Ppx_derivers.lookup" (src/deriving.ml[375,11464+14]..[375,11464+33])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/deriving.ml[375,11464+34]..[375,11464+38])
                                            Pexp_ident "name" (src/deriving.ml[375,11464+34]..[375,11464+38])
                                      ]
                                    [
                                      <case>
                                        pattern (src/deriving.ml[376,11508+10]..[376,11508+39])
                                          Ppat_construct "Some" (src/deriving.ml[376,11508+10]..[376,11508+14])
                                          Some
                                            pattern (src/deriving.ml[376,11508+15]..[376,11508+39])
                                              Ppat_construct "T" (src/deriving.ml[376,11508+16]..[376,11508+17])
                                              Some
                                                pattern (src/deriving.ml[376,11508+18]..[376,11508+38])
                                                  Ppat_construct "Actual_deriver" (src/deriving.ml[376,11508+19]..[376,11508+33])
                                                  Some
                                                    pattern (src/deriving.ml[376,11508+34]..[376,11508+37])
                                                      Ppat_var "drv" (src/deriving.ml[376,11508+34]..[376,11508+37])
                                        expression (src/deriving.ml[376,11508+43]..[376,11508+59])
                                          Pexp_construct "::" (src/deriving.ml[376,11508+47]..[376,11508+49])
                                          Some
                                            expression (src/deriving.ml[376,11508+43]..[376,11508+59]) ghost
                                              Pexp_tuple
                                              [
                                                expression (src/deriving.ml[376,11508+43]..[376,11508+46])
                                                  Pexp_ident "drv" (src/deriving.ml[376,11508+43]..[376,11508+46])
                                                expression (src/deriving.ml[376,11508+50]..[376,11508+59])
                                                  Pexp_ident "collected" (src/deriving.ml[376,11508+50]..[376,11508+59])
                                              ]
                                      <case>
                                        pattern (src/deriving.ml[377,11568+10]..[377,11568+32])
                                          Ppat_construct "Some" (src/deriving.ml[377,11568+10]..[377,11568+14])
                                          Some
                                            pattern (src/deriving.ml[377,11568+15]..[377,11568+32])
                                              Ppat_construct "T" (src/deriving.ml[377,11568+16]..[377,11568+17])
                                              Some
                                                pattern (src/deriving.ml[377,11568+18]..[377,11568+31])
                                                  Ppat_construct "Alias" (src/deriving.ml[377,11568+19]..[377,11568+24])
                                                  Some
                                                    pattern (src/deriving.ml[377,11568+25]..[377,11568+30])
                                                      Ppat_var "alias" (src/deriving.ml[377,11568+25]..[377,11568+30])
                                        expression (src/deriving.ml[378,11604+12]..[379,11649+55])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/deriving.ml[378,11604+16]..[378,11604+19])
                                                Ppat_var "set" (src/deriving.ml[378,11604+16]..[378,11604+19])
                                              expression (src/deriving.ml[378,11604+22]..[378,11604+41])
                                                Pexp_apply
                                                expression (src/deriving.ml[378,11604+22]..[378,11604+35])
                                                  Pexp_field
                                                  expression (src/deriving.ml[378,11604+22]..[378,11604+27])
                                                    Pexp_ident "field" (src/deriving.ml[378,11604+22]..[378,11604+27])
                                                  "get_set" (src/deriving.ml[378,11604+28]..[378,11604+35])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/deriving.ml[378,11604+36]..[378,11604+41])
                                                      Pexp_ident "alias" (src/deriving.ml[378,11604+36]..[378,11604+41])
                                                ]
                                          ]
                                          expression (src/deriving.ml[379,11649+12]..[379,11649+55])
                                            Pexp_apply
                                            expression (src/deriving.ml[379,11649+12]..[379,11649+27])
                                              Pexp_ident "List.fold_right" (src/deriving.ml[379,11649+12]..[379,11649+27])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/deriving.ml[379,11649+28]..[379,11649+31])
                                                  Pexp_ident "set" (src/deriving.ml[379,11649+28]..[379,11649+31])
                                              <arg>
                                              Labelled "init"
                                                expression (src/deriving.ml[379,11649+38]..[379,11649+47])
                                                  Pexp_ident "collected" (src/deriving.ml[379,11649+38]..[379,11649+47])
                                              <arg>
                                              Labelled "f"
                                                expression (src/deriving.ml[379,11649+51]..[379,11649+55])
                                                  Pexp_ident "loop" (src/deriving.ml[379,11649+51]..[379,11649+55])
                                            ]
                                      <case>
                                        pattern (src/deriving.ml[380,11705+10]..[380,11705+11])
                                          Ppat_any
                                        expression (src/deriving.ml[380,11705+15]..[380,11705+41])
                                          Pexp_apply
                                          expression (src/deriving.ml[380,11705+15]..[380,11705+20])
                                            Pexp_ident "raise" (src/deriving.ml[380,11705+15]..[380,11705+20])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/deriving.ml[380,11705+21]..[380,11705+41])
                                                Pexp_construct "Not_supported" (src/deriving.ml[380,11705+22]..[380,11705+35])
                                                Some
                                                  expression (src/deriving.ml[380,11705+36]..[380,11705+40])
                                                    Pexp_ident "name" (src/deriving.ml[380,11705+36]..[380,11705+40])
                                          ]
                                    ]
                      ]
                      expression (src/deriving.ml[382,11754+4]..[382,11754+27])
                        Pexp_apply
                        expression (src/deriving.ml[382,11754+4]..[382,11754+12])
                          Pexp_ident "List.rev" (src/deriving.ml[382,11754+4]..[382,11754+12])
                        [
                          <arg>
                          Nolabel
                            expression (src/deriving.ml[382,11754+13]..[382,11754+27])
                              Pexp_apply
                              expression (src/deriving.ml[382,11754+14]..[382,11754+18])
                                Pexp_ident "loop" (src/deriving.ml[382,11754+14]..[382,11754+18])
                              [
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[382,11754+19]..[382,11754+23])
                                    Pexp_ident "name" (src/deriving.ml[382,11754+19]..[382,11754+23])
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[382,11754+24]..[382,11754+26])
                                    Pexp_construct "[]" (src/deriving.ml[382,11754+24]..[382,11754+26])
                                    None
                              ]
                        ]
            ]
          structure_item (src/deriving.ml[384,11783+2]..[388,11981+34])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[384,11783+6]..[384,11783+22])
                  Ppat_var "resolve_internal" (src/deriving.ml[384,11783+6]..[384,11783+22])
                expression (src/deriving.ml[384,11783+23]..[388,11981+34]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/deriving.ml[384,11783+23]..[384,11783+47])
                    Ppat_constraint
                    pattern (src/deriving.ml[384,11783+24]..[384,11783+29])
                      Ppat_var "field" (src/deriving.ml[384,11783+24]..[384,11783+29])
                    core_type (src/deriving.ml[384,11783+32]..[384,11783+46])
                      Ptyp_constr "Field.t" (src/deriving.ml[384,11783+39]..[384,11783+46])
                      [
                        core_type (src/deriving.ml[384,11783+33]..[384,11783+34])
                          Ptyp_any
                        core_type (src/deriving.ml[384,11783+36]..[384,11783+37])
                          Ptyp_any
                      ]
                  expression (src/deriving.ml[384,11783+48]..[388,11981+34]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/deriving.ml[384,11783+48]..[384,11783+52])
                      Ppat_var "name" (src/deriving.ml[384,11783+48]..[384,11783+52])
                    expression (src/deriving.ml[385,11838+4]..[388,11981+34])
                      Pexp_apply
                      expression (src/deriving.ml[385,11838+4]..[385,11838+12])
                        Pexp_ident "List.map" (src/deriving.ml[385,11838+4]..[385,11838+12])
                      [
                        <arg>
                        Nolabel
                          expression (src/deriving.ml[385,11838+13]..[385,11838+49])
                            Pexp_apply
                            expression (src/deriving.ml[385,11838+14]..[385,11838+37])
                              Pexp_ident "resolve_actual_derivers" (src/deriving.ml[385,11838+14]..[385,11838+37])
                            [
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[385,11838+38]..[385,11838+43])
                                  Pexp_ident "field" (src/deriving.ml[385,11838+38]..[385,11838+43])
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[385,11838+44]..[385,11838+48])
                                  Pexp_ident "name" (src/deriving.ml[385,11838+44]..[385,11838+48])
                            ]
                        <arg>
                        Labelled "f"
                          expression (src/deriving.ml[385,11838+53]..[388,11981+34])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/deriving.ml[385,11838+58]..[385,11838+61])
                              Ppat_var "drv" (src/deriving.ml[385,11838+58]..[385,11838+61])
                            expression (src/deriving.ml[386,11903+8]..[388,11981+33])
                              Pexp_match
                              expression (src/deriving.ml[386,11903+14]..[386,11903+27])
                                Pexp_apply
                                expression (src/deriving.ml[386,11903+14]..[386,11903+23])
                                  Pexp_field
                                  expression (src/deriving.ml[386,11903+14]..[386,11903+19])
                                    Pexp_ident "field" (src/deriving.ml[386,11903+14]..[386,11903+19])
                                  "get" (src/deriving.ml[386,11903+20]..[386,11903+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[386,11903+24]..[386,11903+27])
                                      Pexp_ident "drv" (src/deriving.ml[386,11903+24]..[386,11903+27])
                                ]
                              [
                                <case>
                                  pattern (src/deriving.ml[387,11936+10]..[387,11936+14])
                                    Ppat_construct "None" (src/deriving.ml[387,11936+10]..[387,11936+14])
                                    None
                                  expression (src/deriving.ml[387,11936+18]..[387,11936+44])
                                    Pexp_apply
                                    expression (src/deriving.ml[387,11936+18]..[387,11936+23])
                                      Pexp_ident "raise" (src/deriving.ml[387,11936+18]..[387,11936+23])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/deriving.ml[387,11936+24]..[387,11936+44])
                                          Pexp_construct "Not_supported" (src/deriving.ml[387,11936+25]..[387,11936+38])
                                          Some
                                            expression (src/deriving.ml[387,11936+39]..[387,11936+43])
                                              Pexp_ident "name" (src/deriving.ml[387,11936+39]..[387,11936+43])
                                    ]
                                <case>
                                  pattern (src/deriving.ml[388,11981+10]..[388,11981+16])
                                    Ppat_construct "Some" (src/deriving.ml[388,11981+10]..[388,11981+14])
                                    Some
                                      pattern (src/deriving.ml[388,11981+15]..[388,11981+16])
                                        Ppat_var "g" (src/deriving.ml[388,11981+15]..[388,11981+16])
                                  expression (src/deriving.ml[388,11981+20]..[388,11981+33])
                                    Pexp_tuple
                                    [
                                      expression (src/deriving.ml[388,11981+21]..[388,11981+29])
                                        Pexp_field
                                        expression (src/deriving.ml[388,11981+21]..[388,11981+24])
                                          Pexp_ident "drv" (src/deriving.ml[388,11981+21]..[388,11981+24])
                                        "name" (src/deriving.ml[388,11981+25]..[388,11981+29])
                                      expression (src/deriving.ml[388,11981+31]..[388,11981+32])
                                        Pexp_ident "g" (src/deriving.ml[388,11981+31]..[388,11981+32])
                                    ]
                              ]
                      ]
            ]
          structure_item (src/deriving.ml[390,12017+2]..[395,12256+26])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[390,12017+6]..[390,12017+19])
                  Ppat_var "supported_for" (src/deriving.ml[390,12017+6]..[390,12017+19])
                expression (src/deriving.ml[390,12017+20]..[395,12256+26]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/deriving.ml[390,12017+20]..[390,12017+25])
                    Ppat_var "field" (src/deriving.ml[390,12017+20]..[390,12017+25])
                  expression (src/deriving.ml[391,12045+4]..[395,12256+26])
                    Pexp_apply
                    expression (src/deriving.ml[395,12256+4]..[395,12256+6])
                      Pexp_ident "|>" (src/deriving.ml[395,12256+4]..[395,12256+6])
                    [
                      <arg>
                      Nolabel
                        expression (src/deriving.ml[391,12045+4]..[394,12212+43])
                          Pexp_apply
                          expression (src/deriving.ml[391,12045+4]..[391,12045+18])
                            Pexp_ident "List.fold_left" (src/deriving.ml[391,12045+4]..[391,12045+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[391,12045+19]..[391,12045+32])
                                Pexp_apply
                                expression (src/deriving.ml[391,12045+20]..[391,12045+28])
                                  Pexp_ident "derivers" (src/deriving.ml[391,12045+20]..[391,12045+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[391,12045+29]..[391,12045+31])
                                      Pexp_construct "()" (src/deriving.ml[391,12045+29]..[391,12045+31])
                                      None
                                ]
                            <arg>
                            Labelled "init"
                              expression (src/deriving.ml[391,12045+39]..[391,12045+55])
                                Pexp_ident "String.Set.empty" (src/deriving.ml[391,12045+39]..[391,12045+55])
                            <arg>
                            Labelled "f"
                              expression (src/deriving.ml[391,12045+59]..[394,12212+43])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/deriving.ml[391,12045+64]..[391,12045+67])
                                  Ppat_var "acc" (src/deriving.ml[391,12045+64]..[391,12045+67])
                                expression (src/deriving.ml[391,12045+68]..[394,12212+42]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/deriving.ml[391,12045+68]..[391,12045+77])
                                    Ppat_tuple
                                    [
                                      pattern (src/deriving.ml[391,12045+69]..[391,12045+73])
                                        Ppat_var "name" (src/deriving.ml[391,12045+69]..[391,12045+73])
                                      pattern (src/deriving.ml[391,12045+75]..[391,12045+76])
                                        Ppat_any
                                    ]
                                  expression (src/deriving.ml[392,12126+8]..[394,12212+42])
                                    Pexp_match
                                    expression (src/deriving.ml[392,12126+14]..[392,12126+41])
                                      Pexp_apply
                                      expression (src/deriving.ml[392,12126+14]..[392,12126+30])
                                        Pexp_ident "resolve_internal" (src/deriving.ml[392,12126+14]..[392,12126+30])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/deriving.ml[392,12126+31]..[392,12126+36])
                                            Pexp_ident "field" (src/deriving.ml[392,12126+31]..[392,12126+36])
                                        <arg>
                                        Nolabel
                                          expression (src/deriving.ml[392,12126+37]..[392,12126+41])
                                            Pexp_ident "name" (src/deriving.ml[392,12126+37]..[392,12126+41])
                                      ]
                                    [
                                      <case>
                                        pattern (src/deriving.ml[393,12173+10]..[393,12173+11])
                                          Ppat_any
                                        expression (src/deriving.ml[393,12173+15]..[393,12173+38])
                                          Pexp_apply
                                          expression (src/deriving.ml[393,12173+15]..[393,12173+29])
                                            Pexp_ident "String.Set.add" (src/deriving.ml[393,12173+15]..[393,12173+29])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/deriving.ml[393,12173+30]..[393,12173+34])
                                                Pexp_ident "name" (src/deriving.ml[393,12173+30]..[393,12173+34])
                                            <arg>
                                            Nolabel
                                              expression (src/deriving.ml[393,12173+35]..[393,12173+38])
                                                Pexp_ident "acc" (src/deriving.ml[393,12173+35]..[393,12173+38])
                                          ]
                                      <case>
                                        pattern (src/deriving.ml[394,12212+10]..[394,12212+35])
                                          Ppat_exception
                                          pattern (src/deriving.ml[394,12212+20]..[394,12212+35])
                                            Ppat_construct "Not_supported" (src/deriving.ml[394,12212+20]..[394,12212+33])
                                            Some
                                              pattern (src/deriving.ml[394,12212+34]..[394,12212+35])
                                                Ppat_any
                                        expression (src/deriving.ml[394,12212+39]..[394,12212+42])
                                          Pexp_ident "acc" (src/deriving.ml[394,12212+39]..[394,12212+42])
                                    ]
                          ]
                      <arg>
                      Nolabel
                        expression (src/deriving.ml[395,12256+7]..[395,12256+26])
                          Pexp_ident "String.Set.elements" (src/deriving.ml[395,12256+7]..[395,12256+26])
                    ]
            ]
          structure_item (src/deriving.ml[397,12284+2]..[407,12668+40])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[397,12284+6]..[397,12284+19])
                  Ppat_var "not_supported" (src/deriving.ml[397,12284+6]..[397,12284+19])
                expression (src/deriving.ml[397,12284+20]..[407,12668+40]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/deriving.ml[397,12284+20]..[397,12284+44])
                    Ppat_constraint
                    pattern (src/deriving.ml[397,12284+21]..[397,12284+26])
                      Ppat_var "field" (src/deriving.ml[397,12284+21]..[397,12284+26])
                    core_type (src/deriving.ml[397,12284+29]..[397,12284+43])
                      Ptyp_constr "Field.t" (src/deriving.ml[397,12284+36]..[397,12284+43])
                      [
                        core_type (src/deriving.ml[397,12284+30]..[397,12284+31])
                          Ptyp_any
                        core_type (src/deriving.ml[397,12284+33]..[397,12284+34])
                          Ptyp_any
                      ]
                  expression (src/deriving.ml[397,12284+45]..[407,12668+40]) ghost
                    Pexp_fun
                    Optional "spellcheck"
                    Some
                      expression (src/deriving.ml[397,12284+60]..[397,12284+64])
                        Pexp_construct "true" (src/deriving.ml[397,12284+60]..[397,12284+64])
                        None
                    pattern (src/deriving.ml[397,12284+47]..[397,12284+57])
                      Ppat_var "spellcheck" (src/deriving.ml[397,12284+47]..[397,12284+57])
                    expression (src/deriving.ml[397,12284+66]..[407,12668+40]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/deriving.ml[397,12284+66]..[397,12284+70])
                        Ppat_var "name" (src/deriving.ml[397,12284+66]..[397,12284+70])
                      expression (src/deriving.ml[398,12357+4]..[407,12668+40])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/deriving.ml[398,12357+8]..[398,12357+22])
                              Ppat_var "spellcheck_msg" (src/deriving.ml[398,12357+8]..[398,12357+22])
                            expression (src/deriving.ml[399,12382+6]..[403,12530+13])
                              Pexp_ifthenelse
                              expression (src/deriving.ml[399,12382+9]..[399,12382+19])
                                Pexp_ident "spellcheck" (src/deriving.ml[399,12382+9]..[399,12382+19])
                              expression (src/deriving.ml[400,12407+8]..[402,12500+29])
                                Pexp_match
                                expression (src/deriving.ml[400,12407+14]..[400,12407+66])
                                  Pexp_apply
                                  expression (src/deriving.ml[400,12407+14]..[400,12407+35])
                                    Pexp_ident "Spellcheck.spellcheck" (src/deriving.ml[400,12407+14]..[400,12407+35])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[400,12407+36]..[400,12407+57])
                                        Pexp_apply
                                        expression (src/deriving.ml[400,12407+37]..[400,12407+50])
                                          Pexp_ident "supported_for" (src/deriving.ml[400,12407+37]..[400,12407+50])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[400,12407+51]..[400,12407+56])
                                              Pexp_ident "field" (src/deriving.ml[400,12407+51]..[400,12407+56])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[400,12407+58]..[400,12407+66])
                                        Pexp_field
                                        expression (src/deriving.ml[400,12407+58]..[400,12407+62])
                                          Pexp_ident "name" (src/deriving.ml[400,12407+58]..[400,12407+62])
                                        "txt" (src/deriving.ml[400,12407+63]..[400,12407+66])
                                  ]
                                [
                                  <case>
                                    pattern (src/deriving.ml[401,12479+10]..[401,12479+14])
                                      Ppat_construct "None" (src/deriving.ml[401,12479+10]..[401,12479+14])
                                      None
                                    expression (src/deriving.ml[401,12479+18]..[401,12479+20])
                                      Pexp_constant PConst_string("",(src/deriving.ml[401,12479+19]..[401,12479+19]),None)
                                  <case>
                                    pattern (src/deriving.ml[402,12500+10]..[402,12500+16])
                                      Ppat_construct "Some" (src/deriving.ml[402,12500+10]..[402,12500+14])
                                      Some
                                        pattern (src/deriving.ml[402,12500+15]..[402,12500+16])
                                          Ppat_var "s" (src/deriving.ml[402,12500+15]..[402,12500+16])
                                    expression (src/deriving.ml[402,12500+20]..[402,12500+29])
                                      Pexp_apply
                                      expression (src/deriving.ml[402,12500+26]..[402,12500+27])
                                        Pexp_ident "^" (src/deriving.ml[402,12500+26]..[402,12500+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/deriving.ml[402,12500+20]..[402,12500+25])
                                            Pexp_constant PConst_string(".\n",(src/deriving.ml[402,12500+21]..[402,12500+24]),None)
                                        <arg>
                                        Nolabel
                                          expression (src/deriving.ml[402,12500+28]..[402,12500+29])
                                            Pexp_ident "s" (src/deriving.ml[402,12500+28]..[402,12500+29])
                                      ]
                                ]
                              Some
                                expression (src/deriving.ml[403,12530+11]..[403,12530+13])
                                  Pexp_constant PConst_string("",(src/deriving.ml[403,12530+12]..[403,12530+12]),None)
                        ]
                        expression (src/deriving.ml[405,12551+4]..[407,12668+40])
                          Pexp_apply
                          expression (src/deriving.ml[405,12551+4]..[405,12551+29])
                            Pexp_ident "Location.error_extensionf" (src/deriving.ml[405,12551+4]..[405,12551+29])
                          [
                            <arg>
                            Labelled "loc"
                              expression (src/deriving.ml[405,12551+35]..[405,12551+43])
                                Pexp_field
                                expression (src/deriving.ml[405,12551+35]..[405,12551+39])
                                  Pexp_ident "name" (src/deriving.ml[405,12551+35]..[405,12551+39])
                                "loc" (src/deriving.ml[405,12551+40]..[405,12551+43])
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[406,12595+6]..[406,12595+72])
                                Pexp_constant PConst_string("Ppxlib.Deriving: '%s' is not a supported %s deriving generator%s",(src/deriving.ml[406,12595+7]..[406,12595+71]),None)
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[407,12668+6]..[407,12668+14])
                                Pexp_field
                                expression (src/deriving.ml[407,12668+6]..[407,12668+10])
                                  Pexp_ident "name" (src/deriving.ml[407,12668+6]..[407,12668+10])
                                "txt" (src/deriving.ml[407,12668+11]..[407,12668+14])
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[407,12668+15]..[407,12668+25])
                                Pexp_field
                                expression (src/deriving.ml[407,12668+15]..[407,12668+20])
                                  Pexp_ident "field" (src/deriving.ml[407,12668+15]..[407,12668+20])
                                "name" (src/deriving.ml[407,12668+21]..[407,12668+25])
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[407,12668+26]..[407,12668+40])
                                Pexp_ident "spellcheck_msg" (src/deriving.ml[407,12668+26]..[407,12668+40])
                          ]
            ]
          structure_item (src/deriving.ml[409,12710+2]..[412,12814+80])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[409,12710+6]..[409,12710+13])
                  Ppat_var "resolve" (src/deriving.ml[409,12710+6]..[409,12710+13])
                expression (src/deriving.ml[409,12710+14]..[412,12814+80]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/deriving.ml[409,12710+14]..[409,12710+19])
                    Ppat_var "field" (src/deriving.ml[409,12710+14]..[409,12710+19])
                  expression (src/deriving.ml[409,12710+20]..[412,12814+80]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/deriving.ml[409,12710+20]..[409,12710+24])
                      Ppat_var "name" (src/deriving.ml[409,12710+20]..[409,12710+24])
                    expression (src/deriving.ml[410,12737+4]..[412,12814+80])
                      Pexp_try
                      expression (src/deriving.ml[410,12737+8]..[410,12737+44])
                        Pexp_construct "Ok" (src/deriving.ml[410,12737+8]..[410,12737+10])
                        Some
                          expression (src/deriving.ml[410,12737+11]..[410,12737+44])
                            Pexp_apply
                            expression (src/deriving.ml[410,12737+12]..[410,12737+28])
                              Pexp_ident "resolve_internal" (src/deriving.ml[410,12737+12]..[410,12737+28])
                            [
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[410,12737+29]..[410,12737+34])
                                  Pexp_ident "field" (src/deriving.ml[410,12737+29]..[410,12737+34])
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[410,12737+35]..[410,12737+43])
                                  Pexp_field
                                  expression (src/deriving.ml[410,12737+35]..[410,12737+39])
                                    Pexp_ident "name" (src/deriving.ml[410,12737+35]..[410,12737+39])
                                  "txt" (src/deriving.ml[410,12737+40]..[410,12737+43])
                            ]
                      [
                        <case>
                          pattern (src/deriving.ml[411,12782+9]..[411,12782+28])
                            Ppat_construct "Not_supported" (src/deriving.ml[411,12782+9]..[411,12782+22])
                            Some
                              pattern (src/deriving.ml[411,12782+23]..[411,12782+28])
                                Ppat_var "name'" (src/deriving.ml[411,12782+23]..[411,12782+28])
                          expression (src/deriving.ml[412,12814+6]..[412,12814+80])
                            Pexp_construct "Error" (src/deriving.ml[412,12814+6]..[412,12814+11])
                            Some
                              expression (src/deriving.ml[412,12814+12]..[412,12814+80])
                                Pexp_apply
                                expression (src/deriving.ml[412,12814+13]..[412,12814+26])
                                  Pexp_ident "not_supported" (src/deriving.ml[412,12814+13]..[412,12814+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[412,12814+27]..[412,12814+32])
                                      Pexp_ident "field" (src/deriving.ml[412,12814+27]..[412,12814+32])
                                  <arg>
                                  Labelled "spellcheck"
                                    expression (src/deriving.ml[412,12814+45]..[412,12814+74])
                                      Pexp_apply
                                      expression (src/deriving.ml[412,12814+46]..[412,12814+58])
                                        Pexp_ident "String.equal" (src/deriving.ml[412,12814+46]..[412,12814+58])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/deriving.ml[412,12814+59]..[412,12814+67])
                                            Pexp_field
                                            expression (src/deriving.ml[412,12814+59]..[412,12814+63])
                                              Pexp_ident "name" (src/deriving.ml[412,12814+59]..[412,12814+63])
                                            "txt" (src/deriving.ml[412,12814+64]..[412,12814+67])
                                        <arg>
                                        Nolabel
                                          expression (src/deriving.ml[412,12814+68]..[412,12814+73])
                                            Pexp_ident "name'" (src/deriving.ml[412,12814+68]..[412,12814+73])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[412,12814+75]..[412,12814+79])
                                      Pexp_ident "name" (src/deriving.ml[412,12814+75]..[412,12814+79])
                                ]
                      ]
            ]
          structure_item (src/deriving.ml[414,12896+2]..[475,15656+51])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[414,12896+6]..[414,12896+17])
                  Ppat_var "resolve_all" (src/deriving.ml[414,12896+6]..[414,12896+17])
                expression (src/deriving.ml[414,12896+18]..[475,15656+51]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/deriving.ml[414,12896+18]..[414,12896+23])
                    Ppat_var "field" (src/deriving.ml[414,12896+18]..[414,12896+23])
                  expression (src/deriving.ml[414,12896+24]..[475,15656+51]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/deriving.ml[414,12896+24]..[414,12896+32])
                      Ppat_var "derivers" (src/deriving.ml[414,12896+24]..[414,12896+32])
                    expression (src/deriving.ml[415,12931+4]..[475,15656+51])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/deriving.ml[415,12931+8]..[415,12931+51])
                            Ppat_tuple
                            [
                              pattern (src/deriving.ml[415,12931+8]..[415,12931+25])
                                Ppat_var "derivers_and_args" (src/deriving.ml[415,12931+8]..[415,12931+25])
                              pattern (src/deriving.ml[415,12931+27]..[415,12931+51])
                                Ppat_var "derivers_and_args_errors" (src/deriving.ml[415,12931+27]..[415,12931+51])
                            ]
                          expression (src/deriving.ml[416,12985+6]..[432,13702+49])
                            Pexp_apply
                            expression (src/deriving.ml[432,13702+6]..[432,13702+8])
                              Pexp_ident "|>" (src/deriving.ml[432,13702+6]..[432,13702+8])
                            [
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[416,12985+6]..[431,13685+16])
                                  Pexp_apply
                                  expression (src/deriving.ml[416,12985+6]..[416,12985+24])
                                    Pexp_ident "List.partition_map" (src/deriving.ml[416,12985+6]..[416,12985+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[417,13010+8]..[430,13653+31])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (src/deriving.ml[417,13010+13]..[417,13010+25])
                                          Ppat_tuple
                                          [
                                            pattern (src/deriving.ml[417,13010+14]..[417,13010+18])
                                              Ppat_var "name" (src/deriving.ml[417,13010+14]..[417,13010+18])
                                            pattern (src/deriving.ml[417,13010+20]..[417,13010+24])
                                              Ppat_var "args" (src/deriving.ml[417,13010+20]..[417,13010+24])
                                          ]
                                        expression (src/deriving.ml[418,13039+10]..[430,13653+30])
                                          Pexp_match
                                          expression (src/deriving.ml[418,13039+16]..[418,13039+44])
                                            Pexp_apply
                                            expression (src/deriving.ml[418,13039+16]..[418,13039+35])
                                              Pexp_ident "Ppx_derivers.lookup" (src/deriving.ml[418,13039+16]..[418,13039+35])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/deriving.ml[418,13039+36]..[418,13039+44])
                                                  Pexp_field
                                                  expression (src/deriving.ml[418,13039+36]..[418,13039+40])
                                                    Pexp_ident "name" (src/deriving.ml[418,13039+36]..[418,13039+40])
                                                  "txt" (src/deriving.ml[418,13039+41]..[418,13039+44])
                                            ]
                                          [
                                            <case>
                                              pattern (src/deriving.ml[419,13089+12]..[419,13089+16])
                                                Ppat_construct "None" (src/deriving.ml[419,13089+12]..[419,13089+16])
                                                None
                                              expression (src/deriving.ml[419,13089+20]..[419,13089+59])
                                                Pexp_construct "Either.Right" (src/deriving.ml[419,13089+20]..[419,13089+32])
                                                Some
                                                  expression (src/deriving.ml[419,13089+33]..[419,13089+59])
                                                    Pexp_apply
                                                    expression (src/deriving.ml[419,13089+34]..[419,13089+47])
                                                      Pexp_ident "not_supported" (src/deriving.ml[419,13089+34]..[419,13089+47])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/deriving.ml[419,13089+48]..[419,13089+53])
                                                          Pexp_ident "field" (src/deriving.ml[419,13089+48]..[419,13089+53])
                                                      <arg>
                                                      Nolabel
                                                        expression (src/deriving.ml[419,13089+54]..[419,13089+58])
                                                          Pexp_ident "name" (src/deriving.ml[419,13089+54]..[419,13089+58])
                                                    ]
                                            <case>
                                              pattern (src/deriving.ml[420,13149+12]..[420,13149+22])
                                                Ppat_construct "Some" (src/deriving.ml[420,13149+12]..[420,13149+16])
                                                Some
                                                  pattern (src/deriving.ml[420,13149+17]..[420,13149+22])
                                                    Ppat_construct "T" (src/deriving.ml[420,13149+18]..[420,13149+19])
                                                    Some
                                                      pattern (src/deriving.ml[420,13149+20]..[420,13149+21])
                                                        Ppat_any
                                              expression (src/deriving.ml[420,13149+26]..[427,13498+79])
                                                Pexp_match
                                                expression (src/deriving.ml[423,13337+20]..[423,13337+24])
                                                  Pexp_ident "args" (src/deriving.ml[423,13337+20]..[423,13337+24])
                                                [
                                                  <case>
                                                    pattern (src/deriving.ml[424,13367+16]..[424,13367+22])
                                                      Ppat_construct "Args" (src/deriving.ml[424,13367+16]..[424,13367+20])
                                                      Some
                                                        pattern (src/deriving.ml[424,13367+21]..[424,13367+22])
                                                          Ppat_var "l" (src/deriving.ml[424,13367+21]..[424,13367+22])
                                                    expression (src/deriving.ml[424,13367+26]..[424,13367+54])
                                                      Pexp_construct "Either.Left" (src/deriving.ml[424,13367+26]..[424,13367+37])
                                                      Some
                                                        expression (src/deriving.ml[424,13367+38]..[424,13367+54])
                                                          Pexp_construct "Some" (src/deriving.ml[424,13367+39]..[424,13367+43])
                                                          Some
                                                            expression (src/deriving.ml[424,13367+44]..[424,13367+53])
                                                              Pexp_tuple
                                                              [
                                                                expression (src/deriving.ml[424,13367+45]..[424,13367+49])
                                                                  Pexp_ident "name" (src/deriving.ml[424,13367+45]..[424,13367+49])
                                                                expression (src/deriving.ml[424,13367+51]..[424,13367+52])
                                                                  Pexp_ident "l" (src/deriving.ml[424,13367+51]..[424,13367+52])
                                                              ]
                                                  <case>
                                                    pattern (src/deriving.ml[425,13422+16]..[425,13422+41])
                                                      Ppat_construct "Unknown_syntax" (src/deriving.ml[425,13422+16]..[425,13422+30])
                                                      Some
                                                        pattern (src/deriving.ml[425,13422+31]..[425,13422+41])
                                                          Ppat_tuple
                                                          [
                                                            pattern (src/deriving.ml[425,13422+32]..[425,13422+35])
                                                              Ppat_var "loc" (src/deriving.ml[425,13422+32]..[425,13422+35])
                                                            pattern (src/deriving.ml[425,13422+37]..[425,13422+40])
                                                              Ppat_var "msg" (src/deriving.ml[425,13422+37]..[425,13422+40])
                                                          ]
                                                    expression (src/deriving.ml[426,13467+18]..[427,13498+78])
                                                      Pexp_construct "Either.Right" (src/deriving.ml[426,13467+18]..[426,13467+30])
                                                      Some
                                                        expression (src/deriving.ml[427,13498+20]..[427,13498+78])
                                                          Pexp_apply
                                                          expression (src/deriving.ml[427,13498+21]..[427,13498+46])
                                                            Pexp_ident "Location.error_extensionf" (src/deriving.ml[427,13498+21]..[427,13498+46])
                                                          [
                                                            <arg>
                                                            Labelled "loc"
                                                              expression (src/deriving.ml[427,13498+48]..[427,13498+51])
                                                                Pexp_ident "loc" (src/deriving.ml[427,13498+48]..[427,13498+51])
                                                            <arg>
                                                            Nolabel
                                                              expression (src/deriving.ml[427,13498+52]..[427,13498+73])
                                                                Pexp_constant PConst_string("Ppxlib.Deriving: %s",(src/deriving.ml[427,13498+53]..[427,13498+72]),None)
                                                            <arg>
                                                            Nolabel
                                                              expression (src/deriving.ml[427,13498+74]..[427,13498+77])
                                                                Pexp_ident "msg" (src/deriving.ml[427,13498+74]..[427,13498+77])
                                                          ]
                                                ]
                                            <case>
                                              pattern (src/deriving.ml[428,13578+12]..[428,13578+18])
                                                Ppat_construct "Some" (src/deriving.ml[428,13578+12]..[428,13578+16])
                                                Some
                                                  pattern (src/deriving.ml[428,13578+17]..[428,13578+18])
                                                    Ppat_any
                                              expression (src/deriving.ml[430,13653+14]..[430,13653+30])
                                                Pexp_construct "Either.Left" (src/deriving.ml[430,13653+14]..[430,13653+25])
                                                Some
                                                  expression (src/deriving.ml[430,13653+26]..[430,13653+30])
                                                    Pexp_construct "None" (src/deriving.ml[430,13653+26]..[430,13653+30])
                                                    None
                                          ]
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[431,13685+8]..[431,13685+16])
                                        Pexp_ident "derivers" (src/deriving.ml[431,13685+8]..[431,13685+16])
                                  ]
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[432,13702+9]..[432,13702+49])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/deriving.ml[432,13702+13]..[432,13702+21])
                                    Ppat_tuple
                                    [
                                      pattern (src/deriving.ml[432,13702+14]..[432,13702+16])
                                        Ppat_var "l1" (src/deriving.ml[432,13702+14]..[432,13702+16])
                                      pattern (src/deriving.ml[432,13702+18]..[432,13702+20])
                                        Ppat_var "l2" (src/deriving.ml[432,13702+18]..[432,13702+20])
                                    ]
                                  expression (src/deriving.ml[432,13702+25]..[432,13702+49])
                                    Pexp_tuple
                                    [
                                      expression (src/deriving.ml[432,13702+26]..[432,13702+44])
                                        Pexp_apply
                                        expression (src/deriving.ml[432,13702+26]..[432,13702+41])
                                          Pexp_ident "List.filter_opt" (src/deriving.ml[432,13702+26]..[432,13702+41])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[432,13702+42]..[432,13702+44])
                                              Pexp_ident "l1" (src/deriving.ml[432,13702+42]..[432,13702+44])
                                        ]
                                      expression (src/deriving.ml[432,13702+46]..[432,13702+48])
                                        Pexp_ident "l2" (src/deriving.ml[432,13702+46]..[432,13702+48])
                                    ]
                            ]
                      ]
                      expression (src/deriving.ml[435,13797+4]..[475,15656+51])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/deriving.ml[435,13797+8]..[435,13797+12])
                              Ppat_var "seen" (src/deriving.ml[435,13797+8]..[435,13797+12])
                            expression (src/deriving.ml[435,13797+15]..[435,13797+32])
                              Pexp_apply
                              expression (src/deriving.ml[435,13797+15]..[435,13797+29])
                                Pexp_ident "Hashtbl.create" (src/deriving.ml[435,13797+15]..[435,13797+29])
                              [
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[435,13797+30]..[435,13797+32])
                                    Pexp_constant PConst_int (16,None)
                              ]
                        ]
                        expression (src/deriving.ml[436,13833+4]..[475,15656+51])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/deriving.ml[436,13833+8]..[436,13833+26])
                                Ppat_tuple
                                [
                                  pattern (src/deriving.ml[436,13833+8]..[436,13833+14])
                                    Ppat_var "result" (src/deriving.ml[436,13833+8]..[436,13833+14])
                                  pattern (src/deriving.ml[436,13833+16]..[436,13833+26])
                                    Ppat_var "dep_errors" (src/deriving.ml[436,13833+16]..[436,13833+26])
                                ]
                              expression (src/deriving.ml[437,13862+6]..[473,15615+33])
                                Pexp_apply
                                expression (src/deriving.ml[437,13862+6]..[437,13862+20])
                                  Pexp_ident "List.fold_left" (src/deriving.ml[437,13862+6]..[437,13862+20])
                                [
                                  <arg>
                                  Labelled "init"
                                    expression (src/deriving.ml[437,13862+27]..[437,13862+35])
                                      Pexp_tuple
                                      [
                                        expression (src/deriving.ml[437,13862+28]..[437,13862+30])
                                          Pexp_construct "[]" (src/deriving.ml[437,13862+28]..[437,13862+30])
                                          None
                                        expression (src/deriving.ml[437,13862+32]..[437,13862+34])
                                          Pexp_construct "[]" (src/deriving.ml[437,13862+32]..[437,13862+34])
                                          None
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[437,13862+36]..[437,13862+53])
                                      Pexp_ident "derivers_and_args" (src/deriving.ml[437,13862+36]..[437,13862+53])
                                  <arg>
                                  Labelled "f"
                                    expression (src/deriving.ml[438,13916+11]..[473,15615+33])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (src/deriving.ml[438,13916+16]..[438,13916+32])
                                        Ppat_tuple
                                        [
                                          pattern (src/deriving.ml[438,13916+17]..[438,13916+23])
                                            Ppat_var "result" (src/deriving.ml[438,13916+17]..[438,13916+23])
                                          pattern (src/deriving.ml[438,13916+25]..[438,13916+31])
                                            Ppat_var "errors" (src/deriving.ml[438,13916+25]..[438,13916+31])
                                        ]
                                      expression (src/deriving.ml[438,13916+33]..[473,15615+32]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (src/deriving.ml[438,13916+33]..[438,13916+45])
                                          Ppat_tuple
                                          [
                                            pattern (src/deriving.ml[438,13916+34]..[438,13916+38])
                                              Ppat_var "name" (src/deriving.ml[438,13916+34]..[438,13916+38])
                                            pattern (src/deriving.ml[438,13916+40]..[438,13916+44])
                                              Ppat_var "args" (src/deriving.ml[438,13916+40]..[438,13916+44])
                                          ]
                                        expression (src/deriving.ml[439,13965+10]..[473,15615+32])
                                          Pexp_match
                                          expression (src/deriving.ml[439,13965+16]..[439,13965+34])
                                            Pexp_apply
                                            expression (src/deriving.ml[439,13965+16]..[439,13965+23])
                                              Pexp_ident "resolve" (src/deriving.ml[439,13965+16]..[439,13965+23])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/deriving.ml[439,13965+24]..[439,13965+29])
                                                  Pexp_ident "field" (src/deriving.ml[439,13965+24]..[439,13965+29])
                                              <arg>
                                              Nolabel
                                                expression (src/deriving.ml[439,13965+30]..[439,13965+34])
                                                  Pexp_ident "name" (src/deriving.ml[439,13965+30]..[439,13965+34])
                                            ]
                                          [
                                            <case>
                                              pattern (src/deriving.ml[440,14005+12]..[440,14005+19])
                                                Ppat_construct "Error" (src/deriving.ml[440,14005+12]..[440,14005+17])
                                                Some
                                                  pattern (src/deriving.ml[440,14005+18]..[440,14005+19])
                                                    Ppat_var "e" (src/deriving.ml[440,14005+18]..[440,14005+19])
                                              expression (src/deriving.ml[440,14005+23]..[440,14005+47])
                                                Pexp_tuple
                                                [
                                                  expression (src/deriving.ml[440,14005+24]..[440,14005+30])
                                                    Pexp_ident "result" (src/deriving.ml[440,14005+24]..[440,14005+30])
                                                  expression (src/deriving.ml[440,14005+32]..[440,14005+46])
                                                    Pexp_apply
                                                    expression (src/deriving.ml[440,14005+39]..[440,14005+40])
                                                      Pexp_ident "@" (src/deriving.ml[440,14005+39]..[440,14005+40])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/deriving.ml[440,14005+32]..[440,14005+38])
                                                          Pexp_ident "errors" (src/deriving.ml[440,14005+32]..[440,14005+38])
                                                      <arg>
                                                      Nolabel
                                                        expression (src/deriving.ml[440,14005+41]..[440,14005+46])
                                                          Pexp_construct "::" (src/deriving.ml[440,14005+43]..[440,14005+46]) ghost
                                                          Some
                                                            expression (src/deriving.ml[440,14005+43]..[440,14005+46]) ghost
                                                              Pexp_tuple
                                                              [
                                                                expression (src/deriving.ml[440,14005+43]..[440,14005+44])
                                                                  Pexp_ident "e" (src/deriving.ml[440,14005+43]..[440,14005+44])
                                                                expression (src/deriving.ml[440,14005+45]..[440,14005+46]) ghost
                                                                  Pexp_construct "[]" (src/deriving.ml[440,14005+45]..[440,14005+46]) ghost
                                                                  None
                                                              ]
                                                    ]
                                                ]
                                            <case>
                                              pattern (src/deriving.ml[441,14053+12]..[441,14053+31])
                                                Ppat_construct "Ok" (src/deriving.ml[441,14053+12]..[441,14053+14])
                                                Some
                                                  pattern (src/deriving.ml[441,14053+15]..[441,14053+31])
                                                    Ppat_var "named_generators" (src/deriving.ml[441,14053+15]..[441,14053+31])
                                              expression (src/deriving.ml[442,14088+14]..[473,15615+32])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (src/deriving.ml[442,14088+18]..[442,14088+23])
                                                      Ppat_var "l_err" (src/deriving.ml[442,14088+18]..[442,14088+23])
                                                    expression (src/deriving.ml[443,14114+16]..[470,15482+38])
                                                      Pexp_apply
                                                      expression (src/deriving.ml[443,14114+16]..[443,14114+31])
                                                        Pexp_ident "List.concat_map" (src/deriving.ml[443,14114+16]..[443,14114+31])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/deriving.ml[443,14114+32]..[443,14114+48])
                                                            Pexp_ident "named_generators" (src/deriving.ml[443,14114+32]..[443,14114+48])
                                                        <arg>
                                                        Labelled "f"
                                                          expression (src/deriving.ml[444,14163+21]..[470,15482+38])
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (src/deriving.ml[444,14163+26]..[444,14163+52])
                                                              Ppat_tuple
                                                              [
                                                                pattern (src/deriving.ml[444,14163+27]..[444,14163+46])
                                                                  Ppat_var "actual_deriver_name" (src/deriving.ml[444,14163+27]..[444,14163+46])
                                                                pattern (src/deriving.ml[444,14163+48]..[444,14163+51])
                                                                  Ppat_var "gen" (src/deriving.ml[444,14163+48]..[444,14163+51])
                                                              ]
                                                            expression (src/deriving.ml[445,14219+20]..[470,15482+37])
                                                              Pexp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (src/deriving.ml[445,14219+24]..[445,14219+33])
                                                                    Ppat_var "dup_error" (src/deriving.ml[445,14219+24]..[445,14219+33])
                                                                  expression (src/deriving.ml[446,14255+22]..[454,14624+29])
                                                                    Pexp_ifthenelse
                                                                    expression (src/deriving.ml[447,14280+24]..[448,14339+63])
                                                                      Pexp_apply
                                                                      expression (src/deriving.ml[448,14339+24]..[448,14339+26])
Pexp_ident "&&" (src/deriving.ml[448,14339+24]..[448,14339+26])
                                                                      [
<arg>
Nolabel
  expression (src/deriving.ml[447,14280+24]..[447,14280+58])
    Pexp_ident "Options.fail_on_duplicate_derivers" (src/deriving.ml[447,14280+24]..[447,14280+58])
<arg>
Nolabel
  expression (src/deriving.ml[448,14339+27]..[448,14339+63])
    Pexp_apply
    expression (src/deriving.ml[448,14339+27]..[448,14339+38])
      Pexp_ident "Hashtbl.mem" (src/deriving.ml[448,14339+27]..[448,14339+38])
    [
      <arg>
      Nolabel
        expression (src/deriving.ml[448,14339+39]..[448,14339+43])
          Pexp_ident "seen" (src/deriving.ml[448,14339+39]..[448,14339+43])
      <arg>
      Nolabel
        expression (src/deriving.ml[448,14339+44]..[448,14339+63])
          Pexp_ident "actual_deriver_name" (src/deriving.ml[448,14339+44]..[448,14339+63])
    ]
                                                                      ]
                                                                    expression (src/deriving.ml[450,14430+24]..[453,14598+25])
                                                                      Pexp_construct "::" (src/deriving.ml[451,14456+26]..[453,14598+25]) ghost
                                                                      Some
expression (src/deriving.ml[451,14456+26]..[453,14598+25]) ghost
  Pexp_tuple
  [
    expression (src/deriving.ml[451,14456+26]..[452,14522+74])
      Pexp_apply
      expression (src/deriving.ml[451,14456+26]..[451,14456+51])
        Pexp_ident "Location.error_extensionf" (src/deriving.ml[451,14456+26]..[451,14456+51])
      [
        <arg>
        Labelled "loc"
          expression (src/deriving.ml[451,14456+57]..[451,14456+65])
            Pexp_field
            expression (src/deriving.ml[451,14456+57]..[451,14456+61])
              Pexp_ident "name" (src/deriving.ml[451,14456+57]..[451,14456+61])
            "loc" (src/deriving.ml[451,14456+62]..[451,14456+65])
        <arg>
        Nolabel
          expression (src/deriving.ml[452,14522+28]..[452,14522+54])
            Pexp_constant PConst_string("Deriver %s appears twice",(src/deriving.ml[452,14522+29]..[452,14522+53]),None)
        <arg>
        Nolabel
          expression (src/deriving.ml[452,14522+55]..[452,14522+74])
            Pexp_ident "actual_deriver_name" (src/deriving.ml[452,14522+55]..[452,14522+74])
      ]
    expression (src/deriving.ml[453,14598+24]..[453,14598+25]) ghost
      Pexp_construct "[]" (src/deriving.ml[453,14598+24]..[453,14598+25]) ghost
      None
  ]
                                                                    Some
                                                                      expression (src/deriving.ml[454,14624+27]..[454,14624+29])
Pexp_construct "[]" (src/deriving.ml[454,14624+27]..[454,14624+29])
None
                                                              ]
                                                              expression (src/deriving.ml[456,14677+20]..[470,15482+37])
                                                                Pexp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (src/deriving.ml[456,14677+24]..[456,14677+29])
                                                                      Ppat_var "l_err" (src/deriving.ml[456,14677+24]..[456,14677+29])
                                                                    expression (src/deriving.ml[457,14709+22]..[467,15345+41])
                                                                      Pexp_apply
                                                                      expression (src/deriving.ml[457,14709+22]..[457,14709+37])
Pexp_ident "List.concat_map" (src/deriving.ml[457,14709+22]..[457,14709+37])
                                                                      [
<arg>
Nolabel
  expression (src/deriving.ml[457,14709+38]..[457,14709+58])
    Pexp_apply
    expression (src/deriving.ml[457,14709+39]..[457,14709+53])
      Pexp_ident "Generator.deps" (src/deriving.ml[457,14709+39]..[457,14709+53])
    [
      <arg>
      Nolabel
        expression (src/deriving.ml[457,14709+54]..[457,14709+57])
          Pexp_ident "gen" (src/deriving.ml[457,14709+54]..[457,14709+57])
    ]
<arg>
Labelled "f"
  expression (src/deriving.ml[457,14709+62]..[467,15345+41])
    Pexp_fun
    Nolabel
    None
    pattern (src/deriving.ml[457,14709+67]..[457,14709+70])
      Ppat_var "dep" (src/deriving.ml[457,14709+67]..[457,14709+70])
    expression (src/deriving.ml[458,14783+26]..[467,15345+40])
      Pexp_apply
      expression (src/deriving.ml[458,14783+26]..[458,14783+41])
        Pexp_ident "List.filter_map" (src/deriving.ml[458,14783+26]..[458,14783+41])
      [
        <arg>
        Nolabel
          expression (src/deriving.ml[458,14783+42]..[458,14783+77])
            Pexp_apply
            expression (src/deriving.ml[458,14783+43]..[458,14783+66])
              Pexp_ident "resolve_actual_derivers" (src/deriving.ml[458,14783+43]..[458,14783+66])
            [
              <arg>
              Nolabel
                expression (src/deriving.ml[458,14783+67]..[458,14783+72])
                  Pexp_ident "field" (src/deriving.ml[458,14783+67]..[458,14783+72])
              <arg>
              Nolabel
                expression (src/deriving.ml[458,14783+73]..[458,14783+76])
                  Pexp_ident "dep" (src/deriving.ml[458,14783+73]..[458,14783+76])
            ]
        <arg>
        Labelled "f"
          expression (src/deriving.ml[459,14861+31]..[467,15345+40])
            Pexp_fun
            Nolabel
            None
            pattern (src/deriving.ml[459,14861+36]..[459,14861+39])
              Ppat_var "drv" (src/deriving.ml[459,14861+36]..[459,14861+39])
            expression (src/deriving.ml[460,14904+30]..[467,15345+39])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/deriving.ml[460,14904+34]..[460,14904+42])
                    Ppat_var "dep_name" (src/deriving.ml[460,14904+34]..[460,14904+42])
                  expression (src/deriving.ml[460,14904+45]..[460,14904+53])
                    Pexp_field
                    expression (src/deriving.ml[460,14904+45]..[460,14904+48])
                      Pexp_ident "drv" (src/deriving.ml[460,14904+45]..[460,14904+48])
                    "name" (src/deriving.ml[460,14904+49]..[460,14904+53])
              ]
              expression (src/deriving.ml[461,14961+30]..[467,15345+39])
                Pexp_ifthenelse
                expression (src/deriving.ml[461,14961+33]..[461,14961+64])
                  Pexp_apply
                  expression (src/deriving.ml[461,14961+33]..[461,14961+36])
                    Pexp_ident "not" (src/deriving.ml[461,14961+33]..[461,14961+36])
                  [
                    <arg>
                    Nolabel
                      expression (src/deriving.ml[461,14961+37]..[461,14961+64])
                        Pexp_apply
                        expression (src/deriving.ml[461,14961+38]..[461,14961+49])
                          Pexp_ident "Hashtbl.mem" (src/deriving.ml[461,14961+38]..[461,14961+49])
                        [
                          <arg>
                          Nolabel
                            expression (src/deriving.ml[461,14961+50]..[461,14961+54])
                              Pexp_ident "seen" (src/deriving.ml[461,14961+50]..[461,14961+54])
                          <arg>
                          Nolabel
                            expression (src/deriving.ml[461,14961+55]..[461,14961+63])
                              Pexp_ident "dep_name" (src/deriving.ml[461,14961+55]..[461,14961+63])
                        ]
                  ]
                expression (src/deriving.ml[462,15031+32]..[466,15289+55])
                  Pexp_construct "Some" (src/deriving.ml[462,15031+32]..[462,15031+36])
                  Some
                    expression (src/deriving.ml[463,15068+34]..[466,15289+55])
                      Pexp_apply
                      expression (src/deriving.ml[463,15068+35]..[463,15068+60])
                        Pexp_ident "Location.error_extensionf" (src/deriving.ml[463,15068+35]..[463,15068+60])
                      [
                        <arg>
                        Labelled "loc"
                          expression (src/deriving.ml[463,15068+66]..[463,15068+74])
                            Pexp_field
                            expression (src/deriving.ml[463,15068+66]..[463,15068+70])
                              Pexp_ident "name" (src/deriving.ml[463,15068+66]..[463,15068+70])
                            "loc" (src/deriving.ml[463,15068+71]..[463,15068+74])
                        <arg>
                        Nolabel
                          expression (src/deriving.ml[464,15143+37]..[465,15224+64])
                            Pexp_constant PConst_string("Deriver %s is needed for %s, you need to add it before in the list",(src/deriving.ml[464,15143+38]..[465,15224+63]),None)
                        <arg>
                        Nolabel
                          expression (src/deriving.ml[466,15289+37]..[466,15289+45])
                            Pexp_ident "dep_name" (src/deriving.ml[466,15289+37]..[466,15289+45])
                        <arg>
                        Nolabel
                          expression (src/deriving.ml[466,15289+46]..[466,15289+54])
                            Pexp_field
                            expression (src/deriving.ml[466,15289+46]..[466,15289+50])
                              Pexp_ident "name" (src/deriving.ml[466,15289+46]..[466,15289+50])
                            "txt" (src/deriving.ml[466,15289+51]..[466,15289+54])
                      ]
                Some
                  expression (src/deriving.ml[467,15345+35]..[467,15345+39])
                    Pexp_construct "None" (src/deriving.ml[467,15345+35]..[467,15345+39])
                    None
      ]
                                                                      ]
                                                                ]
                                                                expression (src/deriving.ml[469,15410+20]..[470,15482+37])
                                                                  Pexp_sequence
                                                                  expression (src/deriving.ml[469,15410+20]..[469,15410+70])
                                                                    Pexp_apply
                                                                    expression (src/deriving.ml[469,15410+20]..[469,15410+31])
                                                                      Pexp_ident "Hashtbl.set" (src/deriving.ml[469,15410+20]..[469,15410+31])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/deriving.ml[469,15410+32]..[469,15410+36])
  Pexp_ident "seen" (src/deriving.ml[469,15410+32]..[469,15410+36])
                                                                      <arg>
                                                                      Labelled "key"
expression (src/deriving.ml[469,15410+42]..[469,15410+61])
  Pexp_ident "actual_deriver_name" (src/deriving.ml[469,15410+42]..[469,15410+61])
                                                                      <arg>
                                                                      Labelled "data"
expression (src/deriving.ml[469,15410+68]..[469,15410+70])
  Pexp_construct "()" (src/deriving.ml[469,15410+68]..[469,15410+70])
  None
                                                                    ]
                                                                  expression (src/deriving.ml[470,15482+20]..[470,15482+37])
                                                                    Pexp_apply
                                                                    expression (src/deriving.ml[470,15482+30]..[470,15482+31])
                                                                      Pexp_ident "@" (src/deriving.ml[470,15482+30]..[470,15482+31])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/deriving.ml[470,15482+20]..[470,15482+29])
  Pexp_ident "dup_error" (src/deriving.ml[470,15482+20]..[470,15482+29])
                                                                      <arg>
                                                                      Nolabel
expression (src/deriving.ml[470,15482+32]..[470,15482+37])
  Pexp_ident "l_err" (src/deriving.ml[470,15482+32]..[470,15482+37])
                                                                    ]
                                                      ]
                                                ]
                                                expression (src/deriving.ml[472,15538+14]..[473,15615+32])
                                                  Pexp_tuple
                                                  [
                                                    expression (src/deriving.ml[472,15538+16]..[472,15538+75])
                                                      Pexp_apply
                                                      expression (src/deriving.ml[472,15538+23]..[472,15538+24])
                                                        Pexp_ident "@" (src/deriving.ml[472,15538+23]..[472,15538+24])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/deriving.ml[472,15538+16]..[472,15538+22])
                                                            Pexp_ident "result" (src/deriving.ml[472,15538+16]..[472,15538+22])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/deriving.ml[472,15538+25]..[472,15538+75])
                                                            Pexp_construct "::" (src/deriving.ml[472,15538+27]..[472,15538+75]) ghost
                                                            Some
                                                              expression (src/deriving.ml[472,15538+27]..[472,15538+75]) ghost
                                                                Pexp_tuple
                                                                [
                                                                  expression (src/deriving.ml[472,15538+27]..[472,15538+73])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (src/deriving.ml[472,15538+28]..[472,15538+32])
Pexp_ident "name" (src/deriving.ml[472,15538+28]..[472,15538+32])
                                                                      expression (src/deriving.ml[472,15538+34]..[472,15538+66])
Pexp_apply
expression (src/deriving.ml[472,15538+34]..[472,15538+42])
  Pexp_ident "List.map" (src/deriving.ml[472,15538+34]..[472,15538+42])
[
  <arg>
  Nolabel
    expression (src/deriving.ml[472,15538+43]..[472,15538+59])
      Pexp_ident "named_generators" (src/deriving.ml[472,15538+43]..[472,15538+59])
  <arg>
  Labelled "f"
    expression (src/deriving.ml[472,15538+63]..[472,15538+66])
      Pexp_ident "snd" (src/deriving.ml[472,15538+63]..[472,15538+66])
]
                                                                      expression (src/deriving.ml[472,15538+68]..[472,15538+72])
Pexp_ident "args" (src/deriving.ml[472,15538+68]..[472,15538+72])
                                                                    ]
                                                                  expression (src/deriving.ml[472,15538+74]..[472,15538+75]) ghost
                                                                    Pexp_construct "[]" (src/deriving.ml[472,15538+74]..[472,15538+75]) ghost
                                                                    None
                                                                ]
                                                      ]
                                                    expression (src/deriving.ml[473,15615+16]..[473,15615+30])
                                                      Pexp_apply
                                                      expression (src/deriving.ml[473,15615+23]..[473,15615+24])
                                                        Pexp_ident "@" (src/deriving.ml[473,15615+23]..[473,15615+24])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/deriving.ml[473,15615+16]..[473,15615+22])
                                                            Pexp_ident "errors" (src/deriving.ml[473,15615+16]..[473,15615+22])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/deriving.ml[473,15615+25]..[473,15615+30])
                                                            Pexp_ident "l_err" (src/deriving.ml[473,15615+25]..[473,15615+30])
                                                      ]
                                                  ]
                                          ]
                                ]
                          ]
                          expression (src/deriving.ml[475,15656+4]..[475,15656+51])
                            Pexp_tuple
                            [
                              expression (src/deriving.ml[475,15656+5]..[475,15656+11])
                                Pexp_ident "result" (src/deriving.ml[475,15656+5]..[475,15656+11])
                              expression (src/deriving.ml[475,15656+13]..[475,15656+50])
                                Pexp_apply
                                expression (src/deriving.ml[475,15656+38]..[475,15656+39])
                                  Pexp_ident "@" (src/deriving.ml[475,15656+38]..[475,15656+39])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[475,15656+13]..[475,15656+37])
                                      Pexp_ident "derivers_and_args_errors" (src/deriving.ml[475,15656+13]..[475,15656+37])
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[475,15656+40]..[475,15656+50])
                                      Pexp_ident "dep_errors" (src/deriving.ml[475,15656+40]..[475,15656+50])
                                ]
                            ]
            ]
          structure_item (src/deriving.ml[477,15709+2]..[504,16545+8])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[477,15709+6]..[477,15709+9])
                  Ppat_var "add" (src/deriving.ml[477,15709+6]..[477,15709+9])
                expression (src/deriving.ml[477,15709+10]..[504,16545+8]) ghost
                  Pexp_fun
                  Optional "str_type_decl"
                  None
                  pattern (src/deriving.ml[477,15709+11]..[477,15709+24])
                    Ppat_var "str_type_decl" (src/deriving.ml[477,15709+11]..[477,15709+24])
                  expression (src/deriving.ml[477,15709+25]..[504,16545+8]) ghost
                    Pexp_fun
                    Optional "str_type_ext"
                    None
                    pattern (src/deriving.ml[477,15709+26]..[477,15709+38])
                      Ppat_var "str_type_ext" (src/deriving.ml[477,15709+26]..[477,15709+38])
                    expression (src/deriving.ml[477,15709+39]..[504,16545+8]) ghost
                      Pexp_fun
                      Optional "str_exception"
                      None
                      pattern (src/deriving.ml[477,15709+40]..[477,15709+53])
                        Ppat_var "str_exception" (src/deriving.ml[477,15709+40]..[477,15709+53])
                      expression (src/deriving.ml[477,15709+54]..[504,16545+8]) ghost
                        Pexp_fun
                        Optional "str_module_type_decl"
                        None
                        pattern (src/deriving.ml[477,15709+55]..[477,15709+75])
                          Ppat_var "str_module_type_decl" (src/deriving.ml[477,15709+55]..[477,15709+75])
                        expression (src/deriving.ml[478,15785+6]..[504,16545+8]) ghost
                          Pexp_fun
                          Optional "sig_type_decl"
                          None
                          pattern (src/deriving.ml[478,15785+7]..[478,15785+20])
                            Ppat_var "sig_type_decl" (src/deriving.ml[478,15785+7]..[478,15785+20])
                          expression (src/deriving.ml[478,15785+21]..[504,16545+8]) ghost
                            Pexp_fun
                            Optional "sig_type_ext"
                            None
                            pattern (src/deriving.ml[478,15785+22]..[478,15785+34])
                              Ppat_var "sig_type_ext" (src/deriving.ml[478,15785+22]..[478,15785+34])
                            expression (src/deriving.ml[478,15785+35]..[504,16545+8]) ghost
                              Pexp_fun
                              Optional "sig_exception"
                              None
                              pattern (src/deriving.ml[478,15785+36]..[478,15785+49])
                                Ppat_var "sig_exception" (src/deriving.ml[478,15785+36]..[478,15785+49])
                              expression (src/deriving.ml[478,15785+50]..[504,16545+8]) ghost
                                Pexp_fun
                                Optional "sig_module_type_decl"
                                None
                                pattern (src/deriving.ml[478,15785+51]..[478,15785+71])
                                  Ppat_var "sig_module_type_decl" (src/deriving.ml[478,15785+51]..[478,15785+71])
                                expression (src/deriving.ml[479,15857+6]..[504,16545+8]) ghost
                                  Pexp_fun
                                  Optional "extension"
                                  None
                                  pattern (src/deriving.ml[479,15857+7]..[479,15857+16])
                                    Ppat_var "extension" (src/deriving.ml[479,15857+7]..[479,15857+16])
                                  expression (src/deriving.ml[479,15857+17]..[504,16545+8]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (src/deriving.ml[479,15857+17]..[479,15857+21])
                                      Ppat_var "name" (src/deriving.ml[479,15857+17]..[479,15857+21])
                                    expression (src/deriving.ml[480,15881+4]..[504,16545+8])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/deriving.ml[480,15881+8]..[480,15881+41]) ghost
                                            Ppat_constraint
                                            pattern (src/deriving.ml[480,15881+8]..[480,15881+22])
                                              Ppat_var "actual_deriver" (src/deriving.ml[480,15881+8]..[480,15881+22])
                                            core_type (src/deriving.ml[480,15881+25]..[480,15881+41]) ghost
                                              Ptyp_poly
                                              core_type (src/deriving.ml[480,15881+25]..[480,15881+41])
                                                Ptyp_constr "Actual_deriver.t" (src/deriving.ml[480,15881+25]..[480,15881+41])
                                                []
                                          expression (src/deriving.ml[480,15881+8]..[492,16162+7]) ghost
                                            Pexp_constraint
                                            expression (src/deriving.ml[481,15925+6]..[492,16162+7])
                                              Pexp_record
                                              [
                                                "name" (src/deriving.ml[482,15933+8]..[482,15933+12])
                                                  expression (src/deriving.ml[482,15933+8]..[482,15933+12]) ghost
                                                    Pexp_ident "name" (src/deriving.ml[482,15933+8]..[482,15933+12]) ghost
                                                "str_type_decl" (src/deriving.ml[483,15947+8]..[483,15947+21])
                                                  expression (src/deriving.ml[483,15947+8]..[483,15947+21]) ghost
                                                    Pexp_ident "str_type_decl" (src/deriving.ml[483,15947+8]..[483,15947+21]) ghost
                                                "str_type_ext" (src/deriving.ml[484,15970+8]..[484,15970+20])
                                                  expression (src/deriving.ml[484,15970+8]..[484,15970+20]) ghost
                                                    Pexp_ident "str_type_ext" (src/deriving.ml[484,15970+8]..[484,15970+20]) ghost
                                                "str_exception" (src/deriving.ml[485,15992+8]..[485,15992+21])
                                                  expression (src/deriving.ml[485,15992+8]..[485,15992+21]) ghost
                                                    Pexp_ident "str_exception" (src/deriving.ml[485,15992+8]..[485,15992+21]) ghost
                                                "str_module_type_decl" (src/deriving.ml[486,16015+8]..[486,16015+28])
                                                  expression (src/deriving.ml[486,16015+8]..[486,16015+28]) ghost
                                                    Pexp_ident "str_module_type_decl" (src/deriving.ml[486,16015+8]..[486,16015+28]) ghost
                                                "sig_type_decl" (src/deriving.ml[487,16045+8]..[487,16045+21])
                                                  expression (src/deriving.ml[487,16045+8]..[487,16045+21]) ghost
                                                    Pexp_ident "sig_type_decl" (src/deriving.ml[487,16045+8]..[487,16045+21]) ghost
                                                "sig_type_ext" (src/deriving.ml[488,16068+8]..[488,16068+20])
                                                  expression (src/deriving.ml[488,16068+8]..[488,16068+20]) ghost
                                                    Pexp_ident "sig_type_ext" (src/deriving.ml[488,16068+8]..[488,16068+20]) ghost
                                                "sig_exception" (src/deriving.ml[489,16090+8]..[489,16090+21])
                                                  expression (src/deriving.ml[489,16090+8]..[489,16090+21]) ghost
                                                    Pexp_ident "sig_exception" (src/deriving.ml[489,16090+8]..[489,16090+21]) ghost
                                                "sig_module_type_decl" (src/deriving.ml[490,16113+8]..[490,16113+28])
                                                  expression (src/deriving.ml[490,16113+8]..[490,16113+28]) ghost
                                                    Pexp_ident "sig_module_type_decl" (src/deriving.ml[490,16113+8]..[490,16113+28]) ghost
                                                "extension" (src/deriving.ml[491,16143+8]..[491,16143+17])
                                                  expression (src/deriving.ml[491,16143+8]..[491,16143+17]) ghost
                                                    Pexp_ident "extension" (src/deriving.ml[491,16143+8]..[491,16143+17]) ghost
                                              ]
                                              None
                                            core_type (src/deriving.ml[480,15881+25]..[480,15881+41])
                                              Ptyp_constr "Actual_deriver.t" (src/deriving.ml[480,15881+25]..[480,15881+41])
                                              []
                                      ]
                                      expression (src/deriving.ml[494,16177+4]..[504,16545+8])
                                        Pexp_sequence
                                        expression (src/deriving.ml[494,16177+4]..[494,16177+66])
                                          Pexp_apply
                                          expression (src/deriving.ml[494,16177+4]..[494,16177+25])
                                            Pexp_ident "Ppx_derivers.register" (src/deriving.ml[494,16177+4]..[494,16177+25])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/deriving.ml[494,16177+26]..[494,16177+30])
                                                Pexp_ident "name" (src/deriving.ml[494,16177+26]..[494,16177+30])
                                            <arg>
                                            Nolabel
                                              expression (src/deriving.ml[494,16177+31]..[494,16177+66])
                                                Pexp_construct "T" (src/deriving.ml[494,16177+32]..[494,16177+33])
                                                Some
                                                  expression (src/deriving.ml[494,16177+34]..[494,16177+65])
                                                    Pexp_construct "Actual_deriver" (src/deriving.ml[494,16177+35]..[494,16177+49])
                                                    Some
                                                      expression (src/deriving.ml[494,16177+50]..[494,16177+64])
                                                        Pexp_ident "actual_deriver" (src/deriving.ml[494,16177+50]..[494,16177+64])
                                          ]
                                        expression (src/deriving.ml[495,16245+4]..[504,16545+8])
                                          Pexp_sequence
                                          expression (src/deriving.ml[495,16245+4]..[503,16484+59])
                                            Pexp_match
                                            expression (src/deriving.ml[495,16245+11]..[495,16245+20])
                                              Pexp_ident "extension" (src/deriving.ml[495,16245+11]..[495,16245+20])
                                            [
                                              <case>
                                                pattern (src/deriving.ml[496,16271+6]..[496,16271+10])
                                                  Ppat_construct "None" (src/deriving.ml[496,16271+6]..[496,16271+10])
                                                  None
                                                expression (src/deriving.ml[496,16271+14]..[496,16271+16])
                                                  Pexp_construct "()" (src/deriving.ml[496,16271+14]..[496,16271+16])
                                                  None
                                              <case>
                                                pattern (src/deriving.ml[497,16288+6]..[497,16288+12])
                                                  Ppat_construct "Some" (src/deriving.ml[497,16288+6]..[497,16288+10])
                                                  Some
                                                    pattern (src/deriving.ml[497,16288+11]..[497,16288+12])
                                                      Ppat_var "f" (src/deriving.ml[497,16288+11]..[497,16288+12])
                                                expression (src/deriving.ml[498,16304+8]..[503,16484+58])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (src/deriving.ml[498,16304+12]..[498,16304+21])
                                                        Ppat_var "extension" (src/deriving.ml[498,16304+12]..[498,16304+21])
                                                      expression (src/deriving.ml[499,16328+10]..[499,16328+67])
                                                        Pexp_apply
                                                        expression (src/deriving.ml[499,16328+10]..[499,16328+27])
                                                          Pexp_ident "Extension.declare" (src/deriving.ml[499,16328+10]..[499,16328+27])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/deriving.ml[499,16328+28]..[499,16328+32])
                                                              Pexp_ident "name" (src/deriving.ml[499,16328+28]..[499,16328+32])
                                                          <arg>
                                                          Nolabel
                                                            expression (src/deriving.ml[499,16328+33]..[499,16328+43])
                                                              Pexp_construct "Expression" (src/deriving.ml[499,16328+33]..[499,16328+43])
                                                              None
                                                          <arg>
                                                          Nolabel
                                                            expression (src/deriving.ml[499,16328+44]..[499,16328+65])
                                                              Pexp_open Fresh
                                                              module_expr (src/deriving.ml[499,16328+44]..[499,16328+55])
                                                                Pmod_ident "Ast_pattern" (src/deriving.ml[499,16328+44]..[499,16328+55])
                                                              expression (src/deriving.ml[499,16328+57]..[499,16328+64])
                                                                Pexp_apply
                                                                expression (src/deriving.ml[499,16328+57]..[499,16328+61])
                                                                  Pexp_ident "ptyp" (src/deriving.ml[499,16328+57]..[499,16328+61])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/deriving.ml[499,16328+62]..[499,16328+64])
                                                                      Pexp_ident "__" (src/deriving.ml[499,16328+62]..[499,16328+64])
                                                                ]
                                                          <arg>
                                                          Nolabel
                                                            expression (src/deriving.ml[499,16328+66]..[499,16328+67])
                                                              Pexp_ident "f" (src/deriving.ml[499,16328+66]..[499,16328+67])
                                                        ]
                                                  ]
                                                  expression (src/deriving.ml[501,16407+8]..[503,16484+58])
                                                    Pexp_apply
                                                    expression (src/deriving.ml[501,16407+8]..[501,16407+38])
                                                      Pexp_ident "Driver.register_transformation" (src/deriving.ml[501,16407+8]..[501,16407+38])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/deriving.ml[502,16446+10]..[502,16446+37])
                                                          Pexp_apply
                                                          expression (src/deriving.ml[502,16446+30]..[502,16446+31])
                                                            Pexp_ident "^" (src/deriving.ml[502,16446+30]..[502,16446+31])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/deriving.ml[502,16446+11]..[502,16446+29])
                                                                Pexp_constant PConst_string("Ppxlib.Deriving.",(src/deriving.ml[502,16446+12]..[502,16446+28]),None)
                                                            <arg>
                                                            Nolabel
                                                              expression (src/deriving.ml[502,16446+32]..[502,16446+36])
                                                                Pexp_ident "name" (src/deriving.ml[502,16446+32]..[502,16446+36])
                                                          ]
                                                      <arg>
                                                      Labelled "rules"
                                                        expression (src/deriving.ml[503,16484+17]..[503,16484+58])
                                                          Pexp_construct "::" (src/deriving.ml[503,16484+19]..[503,16484+58]) ghost
                                                          Some
                                                            expression (src/deriving.ml[503,16484+19]..[503,16484+58]) ghost
                                                              Pexp_tuple
                                                              [
                                                                expression (src/deriving.ml[503,16484+19]..[503,16484+56])
                                                                  Pexp_apply
                                                                  expression (src/deriving.ml[503,16484+19]..[503,16484+46])
                                                                    Pexp_ident "Context_free.Rule.extension" (src/deriving.ml[503,16484+19]..[503,16484+46])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/deriving.ml[503,16484+47]..[503,16484+56])
Pexp_ident "extension" (src/deriving.ml[503,16484+47]..[503,16484+56])
                                                                  ]
                                                                expression (src/deriving.ml[503,16484+57]..[503,16484+58]) ghost
                                                                  Pexp_construct "[]" (src/deriving.ml[503,16484+57]..[503,16484+58]) ghost
                                                                  None
                                                              ]
                                                    ]
                                            ]
                                          expression (src/deriving.ml[504,16545+4]..[504,16545+8])
                                            Pexp_ident "name" (src/deriving.ml[504,16545+4]..[504,16545+8])
            ]
          structure_item (src/deriving.ml[506,16555+2]..[523,17251+8])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[506,16555+6]..[506,16555+15])
                  Ppat_var "add_alias" (src/deriving.ml[506,16555+6]..[506,16555+15])
                expression (src/deriving.ml[506,16555+16]..[523,17251+8]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/deriving.ml[506,16555+16]..[506,16555+20])
                    Ppat_var "name" (src/deriving.ml[506,16555+16]..[506,16555+20])
                  expression (src/deriving.ml[506,16555+21]..[523,17251+8]) ghost
                    Pexp_fun
                    Optional "str_type_decl"
                    None
                    pattern (src/deriving.ml[506,16555+22]..[506,16555+35])
                      Ppat_var "str_type_decl" (src/deriving.ml[506,16555+22]..[506,16555+35])
                    expression (src/deriving.ml[506,16555+36]..[523,17251+8]) ghost
                      Pexp_fun
                      Optional "str_type_ext"
                      None
                      pattern (src/deriving.ml[506,16555+37]..[506,16555+49])
                        Ppat_var "str_type_ext" (src/deriving.ml[506,16555+37]..[506,16555+49])
                      expression (src/deriving.ml[506,16555+50]..[523,17251+8]) ghost
                        Pexp_fun
                        Optional "str_exception"
                        None
                        pattern (src/deriving.ml[506,16555+51]..[506,16555+64])
                          Ppat_var "str_exception" (src/deriving.ml[506,16555+51]..[506,16555+64])
                        expression (src/deriving.ml[507,16620+6]..[523,17251+8]) ghost
                          Pexp_fun
                          Optional "str_module_type_decl"
                          None
                          pattern (src/deriving.ml[507,16620+7]..[507,16620+27])
                            Ppat_var "str_module_type_decl" (src/deriving.ml[507,16620+7]..[507,16620+27])
                          expression (src/deriving.ml[507,16620+28]..[523,17251+8]) ghost
                            Pexp_fun
                            Optional "sig_type_decl"
                            None
                            pattern (src/deriving.ml[507,16620+29]..[507,16620+42])
                              Ppat_var "sig_type_decl" (src/deriving.ml[507,16620+29]..[507,16620+42])
                            expression (src/deriving.ml[507,16620+43]..[523,17251+8]) ghost
                              Pexp_fun
                              Optional "sig_type_ext"
                              None
                              pattern (src/deriving.ml[507,16620+44]..[507,16620+56])
                                Ppat_var "sig_type_ext" (src/deriving.ml[507,16620+44]..[507,16620+56])
                              expression (src/deriving.ml[507,16620+57]..[523,17251+8]) ghost
                                Pexp_fun
                                Optional "sig_exception"
                                None
                                pattern (src/deriving.ml[507,16620+58]..[507,16620+71])
                                  Ppat_var "sig_exception" (src/deriving.ml[507,16620+58]..[507,16620+71])
                                expression (src/deriving.ml[508,16692+6]..[523,17251+8]) ghost
                                  Pexp_fun
                                  Optional "sig_module_type_decl"
                                  None
                                  pattern (src/deriving.ml[508,16692+7]..[508,16692+27])
                                    Ppat_var "sig_module_type_decl" (src/deriving.ml[508,16692+7]..[508,16692+27])
                                  expression (src/deriving.ml[508,16692+28]..[523,17251+8]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (src/deriving.ml[508,16692+28]..[508,16692+31])
                                      Ppat_var "set" (src/deriving.ml[508,16692+28]..[508,16692+31])
                                    expression (src/deriving.ml[509,16726+4]..[523,17251+8])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/deriving.ml[509,16726+8]..[509,16726+23]) ghost
                                            Ppat_constraint
                                            pattern (src/deriving.ml[509,16726+8]..[509,16726+13])
                                              Ppat_var "alias" (src/deriving.ml[509,16726+8]..[509,16726+13])
                                            core_type (src/deriving.ml[509,16726+16]..[509,16726+23]) ghost
                                              Ptyp_poly
                                              core_type (src/deriving.ml[509,16726+16]..[509,16726+23])
                                                Ptyp_constr "Alias.t" (src/deriving.ml[509,16726+16]..[509,16726+23])
                                                []
                                          expression (src/deriving.ml[509,16726+8]..[520,17186+7]) ghost
                                            Pexp_constraint
                                            expression (src/deriving.ml[510,16752+6]..[520,17186+7])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/deriving.ml[510,16752+10]..[510,16752+13])
                                                    Ppat_var "get" (src/deriving.ml[510,16752+10]..[510,16752+13])
                                                  expression (src/deriving.ml[510,16752+16]..[510,16752+54])
                                                    Pexp_function
                                                    [
                                                      <case>
                                                        pattern (src/deriving.ml[510,16752+25]..[510,16752+29])
                                                          Ppat_construct "None" (src/deriving.ml[510,16752+25]..[510,16752+29])
                                                          None
                                                        expression (src/deriving.ml[510,16752+33]..[510,16752+36])
                                                          Pexp_ident "set" (src/deriving.ml[510,16752+33]..[510,16752+36])
                                                      <case>
                                                        pattern (src/deriving.ml[510,16752+39]..[510,16752+47])
                                                          Ppat_construct "Some" (src/deriving.ml[510,16752+39]..[510,16752+43])
                                                          Some
                                                            pattern (src/deriving.ml[510,16752+44]..[510,16752+47])
                                                              Ppat_var "set" (src/deriving.ml[510,16752+44]..[510,16752+47])
                                                        expression (src/deriving.ml[510,16752+51]..[510,16752+54])
                                                          Pexp_ident "set" (src/deriving.ml[510,16752+51]..[510,16752+54])
                                                    ]
                                              ]
                                              expression (src/deriving.ml[511,16810+6]..[520,17186+7])
                                                Pexp_record
                                                [
                                                  "str_type_decl" (src/deriving.ml[512,16818+8]..[512,16818+21])
                                                    expression (src/deriving.ml[512,16818+24]..[512,16818+41])
                                                      Pexp_apply
                                                      expression (src/deriving.ml[512,16818+24]..[512,16818+27])
                                                        Pexp_ident "get" (src/deriving.ml[512,16818+24]..[512,16818+27])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/deriving.ml[512,16818+28]..[512,16818+41])
                                                            Pexp_ident "str_type_decl" (src/deriving.ml[512,16818+28]..[512,16818+41])
                                                      ]
                                                  "str_type_ext" (src/deriving.ml[513,16861+8]..[513,16861+20])
                                                    expression (src/deriving.ml[513,16861+23]..[513,16861+39])
                                                      Pexp_apply
                                                      expression (src/deriving.ml[513,16861+23]..[513,16861+26])
                                                        Pexp_ident "get" (src/deriving.ml[513,16861+23]..[513,16861+26])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/deriving.ml[513,16861+27]..[513,16861+39])
                                                            Pexp_ident "str_type_ext" (src/deriving.ml[513,16861+27]..[513,16861+39])
                                                      ]
                                                  "str_exception" (src/deriving.ml[514,16902+8]..[514,16902+21])
                                                    expression (src/deriving.ml[514,16902+24]..[514,16902+41])
                                                      Pexp_apply
                                                      expression (src/deriving.ml[514,16902+24]..[514,16902+27])
                                                        Pexp_ident "get" (src/deriving.ml[514,16902+24]..[514,16902+27])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/deriving.ml[514,16902+28]..[514,16902+41])
                                                            Pexp_ident "str_exception" (src/deriving.ml[514,16902+28]..[514,16902+41])
                                                      ]
                                                  "str_module_type_decl" (src/deriving.ml[515,16945+8]..[515,16945+28])
                                                    expression (src/deriving.ml[515,16945+31]..[515,16945+55])
                                                      Pexp_apply
                                                      expression (src/deriving.ml[515,16945+31]..[515,16945+34])
                                                        Pexp_ident "get" (src/deriving.ml[515,16945+31]..[515,16945+34])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/deriving.ml[515,16945+35]..[515,16945+55])
                                                            Pexp_ident "str_module_type_decl" (src/deriving.ml[515,16945+35]..[515,16945+55])
                                                      ]
                                                  "sig_type_decl" (src/deriving.ml[516,17002+8]..[516,17002+21])
                                                    expression (src/deriving.ml[516,17002+24]..[516,17002+41])
                                                      Pexp_apply
                                                      expression (src/deriving.ml[516,17002+24]..[516,17002+27])
                                                        Pexp_ident "get" (src/deriving.ml[516,17002+24]..[516,17002+27])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/deriving.ml[516,17002+28]..[516,17002+41])
                                                            Pexp_ident "sig_type_decl" (src/deriving.ml[516,17002+28]..[516,17002+41])
                                                      ]
                                                  "sig_type_ext" (src/deriving.ml[517,17045+8]..[517,17045+20])
                                                    expression (src/deriving.ml[517,17045+23]..[517,17045+39])
                                                      Pexp_apply
                                                      expression (src/deriving.ml[517,17045+23]..[517,17045+26])
                                                        Pexp_ident "get" (src/deriving.ml[517,17045+23]..[517,17045+26])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/deriving.ml[517,17045+27]..[517,17045+39])
                                                            Pexp_ident "sig_type_ext" (src/deriving.ml[517,17045+27]..[517,17045+39])
                                                      ]
                                                  "sig_exception" (src/deriving.ml[518,17086+8]..[518,17086+21])
                                                    expression (src/deriving.ml[518,17086+24]..[518,17086+41])
                                                      Pexp_apply
                                                      expression (src/deriving.ml[518,17086+24]..[518,17086+27])
                                                        Pexp_ident "get" (src/deriving.ml[518,17086+24]..[518,17086+27])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/deriving.ml[518,17086+28]..[518,17086+41])
                                                            Pexp_ident "sig_exception" (src/deriving.ml[518,17086+28]..[518,17086+41])
                                                      ]
                                                  "sig_module_type_decl" (src/deriving.ml[519,17129+8]..[519,17129+28])
                                                    expression (src/deriving.ml[519,17129+31]..[519,17129+55])
                                                      Pexp_apply
                                                      expression (src/deriving.ml[519,17129+31]..[519,17129+34])
                                                        Pexp_ident "get" (src/deriving.ml[519,17129+31]..[519,17129+34])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/deriving.ml[519,17129+35]..[519,17129+55])
                                                            Pexp_ident "sig_module_type_decl" (src/deriving.ml[519,17129+35]..[519,17129+55])
                                                      ]
                                                ]
                                                None
                                            core_type (src/deriving.ml[509,16726+16]..[509,16726+23])
                                              Ptyp_constr "Alias.t" (src/deriving.ml[509,16726+16]..[509,16726+23])
                                              []
                                      ]
                                      expression (src/deriving.ml[522,17201+4]..[523,17251+8])
                                        Pexp_sequence
                                        expression (src/deriving.ml[522,17201+4]..[522,17201+48])
                                          Pexp_apply
                                          expression (src/deriving.ml[522,17201+4]..[522,17201+25])
                                            Pexp_ident "Ppx_derivers.register" (src/deriving.ml[522,17201+4]..[522,17201+25])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/deriving.ml[522,17201+26]..[522,17201+30])
                                                Pexp_ident "name" (src/deriving.ml[522,17201+26]..[522,17201+30])
                                            <arg>
                                            Nolabel
                                              expression (src/deriving.ml[522,17201+31]..[522,17201+48])
                                                Pexp_construct "T" (src/deriving.ml[522,17201+32]..[522,17201+33])
                                                Some
                                                  expression (src/deriving.ml[522,17201+34]..[522,17201+47])
                                                    Pexp_construct "Alias" (src/deriving.ml[522,17201+35]..[522,17201+40])
                                                    Some
                                                      expression (src/deriving.ml[522,17201+41]..[522,17201+46])
                                                        Pexp_ident "alias" (src/deriving.ml[522,17201+41]..[522,17201+46])
                                          ]
                                        expression (src/deriving.ml[523,17251+4]..[523,17251+8])
                                          Pexp_ident "name" (src/deriving.ml[523,17251+4]..[523,17251+8])
            ]
        ]
  structure_item (src/deriving.ml[526,17265+0]..[526,17265+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[526,17265+4]..[526,17265+7])
          Ppat_var "add" (src/deriving.ml[526,17265+4]..[526,17265+7])
        expression (src/deriving.ml[526,17265+10]..[526,17265+21])
          Pexp_ident "Deriver.add" (src/deriving.ml[526,17265+10]..[526,17265+21])
    ]
  structure_item (src/deriving.ml[527,17287+0]..[527,17287+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[527,17287+4]..[527,17287+13])
          Ppat_var "add_alias" (src/deriving.ml[527,17287+4]..[527,17287+13])
        expression (src/deriving.ml[527,17287+16]..[527,17287+33])
          Pexp_ident "Deriver.add_alias" (src/deriving.ml[527,17287+16]..[527,17287+33])
    ]
  structure_item (src/deriving.ml[533,17539+0]..[534,17563+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[533,17539+4]..[533,17539+16])
          Ppat_var "invalid_with" (src/deriving.ml[533,17539+4]..[533,17539+16])
        expression (src/deriving.ml[533,17539+17]..[534,17563+69]) ghost
          Pexp_fun
          Labelled "loc"
          None
          pattern (src/deriving.ml[533,17539+18]..[533,17539+21])
            Ppat_var "loc" (src/deriving.ml[533,17539+18]..[533,17539+21])
          expression (src/deriving.ml[534,17563+2]..[534,17563+69])
            Pexp_apply
            expression (src/deriving.ml[534,17563+2]..[534,17563+23])
              Pexp_ident "Location.raise_errorf" (src/deriving.ml[534,17563+2]..[534,17563+23])
            [
              <arg>
              Labelled "loc"
                expression (src/deriving.ml[534,17563+25]..[534,17563+28])
                  Pexp_ident "loc" (src/deriving.ml[534,17563+25]..[534,17563+28])
              <arg>
              Nolabel
                expression (src/deriving.ml[534,17563+29]..[534,17563+69])
                  Pexp_constant PConst_string("invalid [@@deriving ] attribute syntax",(src/deriving.ml[534,17563+30]..[534,17563+68]),None)
            ]
    ]
  structure_item (src/deriving.ml[536,17634+0]..[539,17755+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[536,17634+4]..[536,17634+24])
          Ppat_var "generator_name_of_id" (src/deriving.ml[536,17634+4]..[536,17634+24])
        expression (src/deriving.ml[536,17634+25]..[539,17755+36]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/deriving.ml[536,17634+25]..[536,17634+28])
            Ppat_var "loc" (src/deriving.ml[536,17634+25]..[536,17634+28])
          expression (src/deriving.ml[536,17634+29]..[539,17755+36]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/deriving.ml[536,17634+29]..[536,17634+31])
              Ppat_var "id" (src/deriving.ml[536,17634+29]..[536,17634+31])
            expression (src/deriving.ml[537,17668+2]..[539,17755+36])
              Pexp_match
              expression (src/deriving.ml[537,17668+8]..[537,17668+32])
                Pexp_apply
                expression (src/deriving.ml[537,17668+8]..[537,17668+29])
                  Pexp_ident "Longident.flatten_exn" (src/deriving.ml[537,17668+8]..[537,17668+29])
                [
                  <arg>
                  Nolabel
                    expression (src/deriving.ml[537,17668+30]..[537,17668+32])
                      Pexp_ident "id" (src/deriving.ml[537,17668+30]..[537,17668+32])
                ]
              [
                <case>
                  pattern (src/deriving.ml[538,17706+4]..[538,17706+5])
                    Ppat_var "l" (src/deriving.ml[538,17706+4]..[538,17706+5])
                  expression (src/deriving.ml[538,17706+9]..[538,17706+48])
                    Pexp_record
                    [
                      "loc" (src/deriving.ml[538,17706+11]..[538,17706+14])
                        expression (src/deriving.ml[538,17706+11]..[538,17706+14]) ghost
                          Pexp_ident "loc" (src/deriving.ml[538,17706+11]..[538,17706+14]) ghost
                      "txt" (src/deriving.ml[538,17706+16]..[538,17706+19])
                        expression (src/deriving.ml[538,17706+22]..[538,17706+46])
                          Pexp_apply
                          expression (src/deriving.ml[538,17706+22]..[538,17706+35])
                            Pexp_ident "String.concat" (src/deriving.ml[538,17706+22]..[538,17706+35])
                          [
                            <arg>
                            Labelled "sep"
                              expression (src/deriving.ml[538,17706+41]..[538,17706+44])
                                Pexp_constant PConst_string(".",(src/deriving.ml[538,17706+42]..[538,17706+43]),None)
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[538,17706+45]..[538,17706+46])
                                Pexp_ident "l" (src/deriving.ml[538,17706+45]..[538,17706+46])
                          ]
                    ]
                    None
                <case>
                  pattern (src/deriving.ml[539,17755+4]..[539,17755+15])
                    Ppat_exception
                    pattern (src/deriving.ml[539,17755+14]..[539,17755+15])
                      Ppat_any
                  expression (src/deriving.ml[539,17755+19]..[539,17755+36])
                    Pexp_apply
                    expression (src/deriving.ml[539,17755+19]..[539,17755+31])
                      Pexp_ident "invalid_with" (src/deriving.ml[539,17755+19]..[539,17755+31])
                    [
                      <arg>
                      Labelled "loc"
                        expression (src/deriving.ml[539,17755+33]..[539,17755+36])
                          Pexp_ident "loc" (src/deriving.ml[539,17755+33]..[539,17755+36])
                    ]
              ]
    ]
  structure_item (src/deriving.ml[541,17793+0]..[541,17793+47])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (src/deriving.ml[541,17793+0]..[541,17793+47])
          pext_name = "Unknown_syntax"
          pext_kind =
            Pext_decl
              [
                core_type (src/deriving.ml[541,17793+28]..[541,17793+38])
                  Ptyp_constr "Location.t" (src/deriving.ml[541,17793+28]..[541,17793+38])
                  []
                core_type (src/deriving.ml[541,17793+41]..[541,17793+47])
                  Ptyp_constr "string" (src/deriving.ml[541,17793+41]..[541,17793+47])
                  []
              ]
              None
  structure_item (src/deriving.ml[543,17842+0]..[572,18852+61])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[543,17842+4]..[543,17842+19])
          Ppat_var "parse_arguments" (src/deriving.ml[543,17842+4]..[543,17842+19])
        expression (src/deriving.ml[543,17842+20]..[572,18852+61]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/deriving.ml[543,17842+20]..[543,17842+21])
            Ppat_var "l" (src/deriving.ml[543,17842+20]..[543,17842+21])
          expression (src/deriving.ml[544,17866+2]..[572,18852+61])
            Pexp_try
            expression (src/deriving.ml[545,17872+4]..[571,18767+84])
              Pexp_construct "Args" (src/deriving.ml[545,17872+4]..[545,17872+8])
              Some
                expression (src/deriving.ml[546,17881+6]..[571,18767+84])
                  Pexp_match
                  expression (src/deriving.ml[546,17881+13]..[546,17881+14])
                    Pexp_ident "l" (src/deriving.ml[546,17881+13]..[546,17881+14])
                  [
                    <case>
                      pattern (src/deriving.ml[547,17901+8]..[547,17901+24])
                        Ppat_construct "::" (src/deriving.ml[547,17901+10]..[547,17901+24]) ghost
                        Some
                          pattern (src/deriving.ml[547,17901+10]..[547,17901+24]) ghost
                            Ppat_tuple
                            [
                              pattern (src/deriving.ml[547,17901+10]..[547,17901+22])
                                Ppat_tuple
                                [
                                  pattern (src/deriving.ml[547,17901+11]..[547,17901+18])
                                    Ppat_construct "Nolabel" (src/deriving.ml[547,17901+11]..[547,17901+18])
                                    None
                                  pattern (src/deriving.ml[547,17901+20]..[547,17901+21])
                                    Ppat_var "e" (src/deriving.ml[547,17901+20]..[547,17901+21])
                                ]
                              pattern (src/deriving.ml[547,17901+23]..[547,17901+24]) ghost
                                Ppat_construct "[]" (src/deriving.ml[547,17901+23]..[547,17901+24]) ghost
                                None
                            ]
                      expression (src/deriving.ml[547,17901+28]..[563,18471+76])
                        Pexp_match
                        expression (src/deriving.ml[548,17931+16]..[548,17931+27])
                          Pexp_field
                          expression (src/deriving.ml[548,17931+16]..[548,17931+17])
                            Pexp_ident "e" (src/deriving.ml[548,17931+16]..[548,17931+17])
                          "pexp_desc" (src/deriving.ml[548,17931+18]..[548,17931+27])
                        [
                          <case>
                            pattern (src/deriving.ml[549,17964+12]..[549,17964+38])
                              Ppat_construct "Pexp_record" (src/deriving.ml[549,17964+12]..[549,17964+23])
                              Some
                                pattern (src/deriving.ml[549,17964+24]..[549,17964+38])
                                  Ppat_tuple
                                  [
                                    pattern (src/deriving.ml[549,17964+25]..[549,17964+31])
                                      Ppat_var "fields" (src/deriving.ml[549,17964+25]..[549,17964+31])
                                    pattern (src/deriving.ml[549,17964+33]..[549,17964+37])
                                      Ppat_construct "None" (src/deriving.ml[549,17964+33]..[549,17964+37])
                                      None
                                  ]
                            expression (src/deriving.ml[550,18006+14]..[558,18329+31])
                              Pexp_apply
                              expression (src/deriving.ml[550,18006+14]..[550,18006+22])
                                Pexp_ident "List.map" (src/deriving.ml[550,18006+14]..[550,18006+22])
                              [
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[550,18006+23]..[550,18006+29])
                                    Pexp_ident "fields" (src/deriving.ml[550,18006+23]..[550,18006+29])
                                <arg>
                                Labelled "f"
                                  expression (src/deriving.ml[550,18006+33]..[558,18329+31])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (src/deriving.ml[550,18006+38]..[550,18006+48])
                                      Ppat_tuple
                                      [
                                        pattern (src/deriving.ml[550,18006+39]..[550,18006+41])
                                          Ppat_var "id" (src/deriving.ml[550,18006+39]..[550,18006+41])
                                        pattern (src/deriving.ml[550,18006+43]..[550,18006+47])
                                          Ppat_var "expr" (src/deriving.ml[550,18006+43]..[550,18006+47])
                                      ]
                                    expression (src/deriving.ml[551,18058+18]..[558,18329+30])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/deriving.ml[551,18058+22]..[551,18058+26])
                                            Ppat_var "name" (src/deriving.ml[551,18058+22]..[551,18058+26])
                                          expression (src/deriving.ml[552,18087+20]..[556,18226+81])
                                            Pexp_match
                                            expression (src/deriving.ml[552,18087+26]..[552,18087+32])
                                              Pexp_field
                                              expression (src/deriving.ml[552,18087+26]..[552,18087+28])
                                                Pexp_ident "id" (src/deriving.ml[552,18087+26]..[552,18087+28])
                                              "txt" (src/deriving.ml[552,18087+29]..[552,18087+32])
                                            [
                                              <case>
                                                pattern (src/deriving.ml[553,18125+22]..[553,18125+30])
                                                  Ppat_construct "Lident" (src/deriving.ml[553,18125+22]..[553,18125+28])
                                                  Some
                                                    pattern (src/deriving.ml[553,18125+29]..[553,18125+30])
                                                      Ppat_var "s" (src/deriving.ml[553,18125+29]..[553,18125+30])
                                                expression (src/deriving.ml[553,18125+34]..[553,18125+35])
                                                  Pexp_ident "s" (src/deriving.ml[553,18125+34]..[553,18125+35])
                                              <case>
                                                pattern (src/deriving.ml[554,18161+22]..[554,18161+23])
                                                  Ppat_any
                                                expression (src/deriving.ml[555,18188+24]..[556,18226+81])
                                                  Pexp_apply
                                                  expression (src/deriving.ml[555,18188+24]..[555,18188+37])
                                                    Pexp_ident "raise_notrace" (src/deriving.ml[555,18188+24]..[555,18188+37])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/deriving.ml[556,18226+26]..[556,18226+81])
                                                        Pexp_construct "Unknown_syntax" (src/deriving.ml[556,18226+27]..[556,18226+41])
                                                        Some
                                                          expression (src/deriving.ml[556,18226+42]..[556,18226+80])
                                                            Pexp_tuple
                                                            [
                                                              expression (src/deriving.ml[556,18226+43]..[556,18226+49])
                                                                Pexp_field
                                                                expression (src/deriving.ml[556,18226+43]..[556,18226+45])
                                                                  Pexp_ident "id" (src/deriving.ml[556,18226+43]..[556,18226+45])
                                                                "loc" (src/deriving.ml[556,18226+46]..[556,18226+49])
                                                              expression (src/deriving.ml[556,18226+51]..[556,18226+79])
                                                                Pexp_constant PConst_string("simple identifier expected",(src/deriving.ml[556,18226+52]..[556,18226+78]),None)
                                                            ]
                                                  ]
                                            ]
                                      ]
                                      expression (src/deriving.ml[558,18329+18]..[558,18329+30])
                                        Pexp_tuple
                                        [
                                          expression (src/deriving.ml[558,18329+19]..[558,18329+23])
                                            Pexp_ident "name" (src/deriving.ml[558,18329+19]..[558,18329+23])
                                          expression (src/deriving.ml[558,18329+25]..[558,18329+29])
                                            Pexp_ident "expr" (src/deriving.ml[558,18329+25]..[558,18329+29])
                                        ]
                              ]
                          <case>
                            pattern (src/deriving.ml[559,18361+12]..[559,18361+13])
                              Ppat_any
                            expression (src/deriving.ml[560,18378+14]..[563,18471+75])
                              Pexp_apply
                              expression (src/deriving.ml[560,18378+14]..[560,18378+27])
                                Pexp_ident "raise_notrace" (src/deriving.ml[560,18378+14]..[560,18378+27])
                              [
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[561,18406+16]..[563,18471+75])
                                    Pexp_construct "Unknown_syntax" (src/deriving.ml[561,18406+17]..[561,18406+31])
                                    Some
                                      expression (src/deriving.ml[562,18438+19]..[563,18471+74])
                                        Pexp_tuple
                                        [
                                          expression (src/deriving.ml[562,18438+21]..[562,18438+31])
                                            Pexp_field
                                            expression (src/deriving.ml[562,18438+21]..[562,18438+22])
                                              Pexp_ident "e" (src/deriving.ml[562,18438+21]..[562,18438+22])
                                            "pexp_loc" (src/deriving.ml[562,18438+23]..[562,18438+31])
                                          expression (src/deriving.ml[563,18471+21]..[563,18471+72])
                                            Pexp_constant PConst_string("non-optional labelled argument or record expected",(src/deriving.ml[563,18471+22]..[563,18471+71]),None)
                                        ]
                              ]
                        ]
                    <case>
                      pattern (src/deriving.ml[564,18548+8]..[564,18548+9])
                        Ppat_var "l" (src/deriving.ml[564,18548+8]..[564,18548+9])
                      expression (src/deriving.ml[565,18561+10]..[571,18767+83])
                        Pexp_apply
                        expression (src/deriving.ml[565,18561+10]..[565,18561+18])
                          Pexp_ident "List.map" (src/deriving.ml[565,18561+10]..[565,18561+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/deriving.ml[565,18561+19]..[565,18561+20])
                              Pexp_ident "l" (src/deriving.ml[565,18561+19]..[565,18561+20])
                          <arg>
                          Labelled "f"
                            expression (src/deriving.ml[565,18561+24]..[571,18767+83])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/deriving.ml[565,18561+29]..[565,18561+42])
                                Ppat_tuple
                                [
                                  pattern (src/deriving.ml[565,18561+30]..[565,18561+35])
                                    Ppat_var "label" (src/deriving.ml[565,18561+30]..[565,18561+35])
                                  pattern (src/deriving.ml[565,18561+37]..[565,18561+41])
                                    Ppat_var "expr" (src/deriving.ml[565,18561+37]..[565,18561+41])
                                ]
                              expression (src/deriving.ml[566,18607+14]..[571,18767+82])
                                Pexp_match
                                expression (src/deriving.ml[566,18607+20]..[566,18607+25])
                                  Pexp_ident "label" (src/deriving.ml[566,18607+20]..[566,18607+25])
                                [
                                  <case>
                                    pattern (src/deriving.ml[567,18638+16]..[567,18638+26])
                                      Ppat_construct "Labelled" (src/deriving.ml[567,18638+16]..[567,18638+24])
                                      Some
                                        pattern (src/deriving.ml[567,18638+25]..[567,18638+26])
                                          Ppat_var "s" (src/deriving.ml[567,18638+25]..[567,18638+26])
                                    expression (src/deriving.ml[567,18638+30]..[567,18638+39])
                                      Pexp_tuple
                                      [
                                        expression (src/deriving.ml[567,18638+31]..[567,18638+32])
                                          Pexp_ident "s" (src/deriving.ml[567,18638+31]..[567,18638+32])
                                        expression (src/deriving.ml[567,18638+34]..[567,18638+38])
                                          Pexp_ident "expr" (src/deriving.ml[567,18638+34]..[567,18638+38])
                                      ]
                                  <case>
                                    pattern (src/deriving.ml[568,18678+16]..[568,18678+17])
                                      Ppat_any
                                    expression (src/deriving.ml[569,18699+18]..[571,18767+82])
                                      Pexp_apply
                                      expression (src/deriving.ml[569,18699+18]..[569,18699+31])
                                        Pexp_ident "raise_notrace" (src/deriving.ml[569,18699+18]..[569,18699+31])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/deriving.ml[570,18731+20]..[571,18767+82])
                                            Pexp_construct "Unknown_syntax" (src/deriving.ml[570,18731+21]..[570,18731+35])
                                            Some
                                              expression (src/deriving.ml[571,18767+23]..[571,18767+81])
                                                Pexp_tuple
                                                [
                                                  expression (src/deriving.ml[571,18767+24]..[571,18767+37])
                                                    Pexp_field
                                                    expression (src/deriving.ml[571,18767+24]..[571,18767+28])
                                                      Pexp_ident "expr" (src/deriving.ml[571,18767+24]..[571,18767+28])
                                                    "pexp_loc" (src/deriving.ml[571,18767+29]..[571,18767+37])
                                                  expression (src/deriving.ml[571,18767+39]..[571,18767+80])
                                                    Pexp_constant PConst_string("non-optional labelled argument expected",(src/deriving.ml[571,18767+40]..[571,18767+79]),None)
                                                ]
                                      ]
                                ]
                        ]
                  ]
            [
              <case>
                pattern (src/deriving.ml[572,18852+7]..[572,18852+32])
                  Ppat_construct "Unknown_syntax" (src/deriving.ml[572,18852+7]..[572,18852+21])
                  Some
                    pattern (src/deriving.ml[572,18852+22]..[572,18852+32])
                      Ppat_tuple
                      [
                        pattern (src/deriving.ml[572,18852+23]..[572,18852+26])
                          Ppat_var "loc" (src/deriving.ml[572,18852+23]..[572,18852+26])
                        pattern (src/deriving.ml[572,18852+28]..[572,18852+31])
                          Ppat_var "msg" (src/deriving.ml[572,18852+28]..[572,18852+31])
                      ]
                expression (src/deriving.ml[572,18852+36]..[572,18852+61])
                  Pexp_construct "Unknown_syntax" (src/deriving.ml[572,18852+36]..[572,18852+50])
                  Some
                    expression (src/deriving.ml[572,18852+51]..[572,18852+61])
                      Pexp_tuple
                      [
                        expression (src/deriving.ml[572,18852+52]..[572,18852+55])
                          Pexp_ident "loc" (src/deriving.ml[572,18852+52]..[572,18852+55])
                        expression (src/deriving.ml[572,18852+57]..[572,18852+60])
                          Pexp_ident "msg" (src/deriving.ml[572,18852+57]..[572,18852+60])
                      ]
            ]
    ]
  structure_item (src/deriving.ml[574,18915+0]..[594,19570+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[574,18915+4]..[574,18915+20])
          Ppat_var "mk_deriving_attr" (src/deriving.ml[574,18915+4]..[574,18915+20])
        expression (src/deriving.ml[574,18915+21]..[594,19570+16]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/deriving.ml[574,18915+21]..[574,18915+28])
            Ppat_var "context" (src/deriving.ml[574,18915+21]..[574,18915+28])
          expression (src/deriving.ml[574,18915+29]..[594,19570+16]) ghost
            Pexp_fun
            Labelled "prefix"
            None
            pattern (src/deriving.ml[574,18915+30]..[574,18915+36])
              Ppat_var "prefix" (src/deriving.ml[574,18915+30]..[574,18915+36])
            expression (src/deriving.ml[574,18915+37]..[594,19570+16]) ghost
              Pexp_fun
              Labelled "suffix"
              None
              pattern (src/deriving.ml[574,18915+38]..[574,18915+44])
                Ppat_var "suffix" (src/deriving.ml[574,18915+38]..[574,18915+44])
              expression (src/deriving.ml[575,18962+2]..[594,19570+16])
                Pexp_apply
                expression (src/deriving.ml[575,18962+2]..[575,18962+19])
                  Pexp_ident "Attribute.declare" (src/deriving.ml[575,18962+2]..[575,18962+19])
                [
                  <arg>
                  Nolabel
                    expression (src/deriving.ml[576,18982+4]..[576,18982+34])
                      Pexp_apply
                      expression (src/deriving.ml[576,18982+12]..[576,18982+13])
                        Pexp_ident "^" (src/deriving.ml[576,18982+12]..[576,18982+13])
                      [
                        <arg>
                        Nolabel
                          expression (src/deriving.ml[576,18982+5]..[576,18982+11])
                            Pexp_ident "prefix" (src/deriving.ml[576,18982+5]..[576,18982+11])
                        <arg>
                        Nolabel
                          expression (src/deriving.ml[576,18982+14]..[576,18982+33])
                            Pexp_apply
                            expression (src/deriving.ml[576,18982+25]..[576,18982+26])
                              Pexp_ident "^" (src/deriving.ml[576,18982+25]..[576,18982+26])
                            [
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[576,18982+14]..[576,18982+24])
                                  Pexp_constant PConst_string("deriving",(src/deriving.ml[576,18982+15]..[576,18982+23]),None)
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[576,18982+27]..[576,18982+33])
                                  Pexp_ident "suffix" (src/deriving.ml[576,18982+27]..[576,18982+33])
                            ]
                      ]
                  <arg>
                  Nolabel
                    expression (src/deriving.ml[577,19017+4]..[577,19017+11])
                      Pexp_ident "context" (src/deriving.ml[577,19017+4]..[577,19017+11])
                  <arg>
                  Nolabel
                    expression (src/deriving.ml[578,19029+4]..[593,19523+46])
                      Pexp_open Fresh
                      module_expr (src/deriving.ml[578,19029+4]..[578,19029+15])
                        Pmod_ident "Ast_pattern" (src/deriving.ml[578,19029+4]..[578,19029+15])
                      expression (src/deriving.ml[579,19047+6]..[593,19523+45])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/deriving.ml[579,19047+10]..[579,19047+24])
                              Ppat_var "generator_name" (src/deriving.ml[579,19047+10]..[579,19047+24])
                            expression (src/deriving.ml[579,19047+25]..[581,19126+44]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/deriving.ml[579,19047+25]..[579,19047+27])
                                Ppat_construct "()" (src/deriving.ml[579,19047+25]..[579,19047+27])
                                None
                              expression (src/deriving.ml[580,19077+8]..[581,19126+44])
                                Pexp_apply
                                expression (src/deriving.ml[580,19077+8]..[580,19077+12])
                                  Pexp_ident "map'" (src/deriving.ml[580,19077+8]..[580,19077+12])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[580,19077+13]..[580,19077+28])
                                      Pexp_apply
                                      expression (src/deriving.ml[580,19077+14]..[580,19077+24])
                                        Pexp_ident "pexp_ident" (src/deriving.ml[580,19077+14]..[580,19077+24])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/deriving.ml[580,19077+25]..[580,19077+27])
                                            Pexp_ident "__" (src/deriving.ml[580,19077+25]..[580,19077+27])
                                      ]
                                  <arg>
                                  Labelled "f"
                                    expression (src/deriving.ml[580,19077+32]..[581,19126+44])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (src/deriving.ml[580,19077+37]..[580,19077+40])
                                        Ppat_var "loc" (src/deriving.ml[580,19077+37]..[580,19077+40])
                                      expression (src/deriving.ml[580,19077+41]..[581,19126+43]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (src/deriving.ml[580,19077+41]..[580,19077+42])
                                          Ppat_var "f" (src/deriving.ml[580,19077+41]..[580,19077+42])
                                        expression (src/deriving.ml[580,19077+43]..[581,19126+43]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (src/deriving.ml[580,19077+43]..[580,19077+45])
                                            Ppat_var "id" (src/deriving.ml[580,19077+43]..[580,19077+45])
                                          expression (src/deriving.ml[581,19126+12]..[581,19126+43])
                                            Pexp_apply
                                            expression (src/deriving.ml[581,19126+12]..[581,19126+13])
                                              Pexp_ident "f" (src/deriving.ml[581,19126+12]..[581,19126+13])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/deriving.ml[581,19126+14]..[581,19126+43])
                                                  Pexp_apply
                                                  expression (src/deriving.ml[581,19126+15]..[581,19126+35])
                                                    Pexp_ident "generator_name_of_id" (src/deriving.ml[581,19126+15]..[581,19126+35])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/deriving.ml[581,19126+36]..[581,19126+39])
                                                        Pexp_ident "loc" (src/deriving.ml[581,19126+36]..[581,19126+39])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/deriving.ml[581,19126+40]..[581,19126+42])
                                                        Pexp_ident "id" (src/deriving.ml[581,19126+40]..[581,19126+42])
                                                  ]
                                            ]
                                ]
                        ]
                        expression (src/deriving.ml[583,19180+6]..[593,19523+45])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/deriving.ml[583,19180+10]..[583,19180+19])
                                Ppat_var "generator" (src/deriving.ml[583,19180+10]..[583,19180+19])
                              expression (src/deriving.ml[583,19180+20]..[587,19332+53]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/deriving.ml[583,19180+20]..[583,19180+22])
                                  Ppat_construct "()" (src/deriving.ml[583,19180+20]..[583,19180+22])
                                  None
                                expression (src/deriving.ml[584,19205+8]..[587,19332+53])
                                  Pexp_apply
                                  expression (src/deriving.ml[585,19268+8]..[585,19268+11])
                                    Pexp_ident "|||" (src/deriving.ml[585,19268+8]..[585,19268+11])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[584,19205+8]..[584,19205+62])
                                        Pexp_apply
                                        expression (src/deriving.ml[584,19205+8]..[584,19205+11])
                                          Pexp_ident "map" (src/deriving.ml[584,19205+8]..[584,19205+11])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[584,19205+12]..[584,19205+31])
                                              Pexp_apply
                                              expression (src/deriving.ml[584,19205+13]..[584,19205+27])
                                                Pexp_ident "generator_name" (src/deriving.ml[584,19205+13]..[584,19205+27])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/deriving.ml[584,19205+28]..[584,19205+30])
                                                    Pexp_construct "()" (src/deriving.ml[584,19205+28]..[584,19205+30])
                                                    None
                                              ]
                                          <arg>
                                          Labelled "f"
                                            expression (src/deriving.ml[584,19205+35]..[584,19205+62])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (src/deriving.ml[584,19205+40]..[584,19205+41])
                                                Ppat_var "f" (src/deriving.ml[584,19205+40]..[584,19205+41])
                                              expression (src/deriving.ml[584,19205+42]..[584,19205+61]) ghost
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (src/deriving.ml[584,19205+42]..[584,19205+43])
                                                  Ppat_var "x" (src/deriving.ml[584,19205+42]..[584,19205+43])
                                                expression (src/deriving.ml[584,19205+47]..[584,19205+61])
                                                  Pexp_apply
                                                  expression (src/deriving.ml[584,19205+47]..[584,19205+48])
                                                    Pexp_ident "f" (src/deriving.ml[584,19205+47]..[584,19205+48])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/deriving.ml[584,19205+49]..[584,19205+61])
                                                        Pexp_tuple
                                                        [
                                                          expression (src/deriving.ml[584,19205+50]..[584,19205+51])
                                                            Pexp_ident "x" (src/deriving.ml[584,19205+50]..[584,19205+51])
                                                          expression (src/deriving.ml[584,19205+53]..[584,19205+60])
                                                            Pexp_construct "Args" (src/deriving.ml[584,19205+53]..[584,19205+57])
                                                            Some
                                                              expression (src/deriving.ml[584,19205+58]..[584,19205+60])
                                                                Pexp_construct "[]" (src/deriving.ml[584,19205+58]..[584,19205+60])
                                                                None
                                                        ]
                                                  ]
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[585,19268+12]..[587,19332+53])
                                        Pexp_apply
                                        expression (src/deriving.ml[585,19268+12]..[585,19268+17])
                                          Pexp_ident "pack2" (src/deriving.ml[585,19268+12]..[585,19268+17])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[586,19286+14]..[587,19332+53])
                                              Pexp_apply
                                              expression (src/deriving.ml[586,19286+15]..[586,19286+25])
                                                Pexp_ident "pexp_apply" (src/deriving.ml[586,19286+15]..[586,19286+25])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/deriving.ml[586,19286+26]..[586,19286+45])
                                                    Pexp_apply
                                                    expression (src/deriving.ml[586,19286+27]..[586,19286+41])
                                                      Pexp_ident "generator_name" (src/deriving.ml[586,19286+27]..[586,19286+41])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/deriving.ml[586,19286+42]..[586,19286+44])
                                                          Pexp_construct "()" (src/deriving.ml[586,19286+42]..[586,19286+44])
                                                          None
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (src/deriving.ml[587,19332+17]..[587,19332+52])
                                                    Pexp_apply
                                                    expression (src/deriving.ml[587,19332+18]..[587,19332+22])
                                                      Pexp_ident "map1" (src/deriving.ml[587,19332+18]..[587,19332+22])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/deriving.ml[587,19332+23]..[587,19332+32])
                                                          Pexp_apply
                                                          expression (src/deriving.ml[587,19332+24]..[587,19332+28])
                                                            Pexp_ident "many" (src/deriving.ml[587,19332+24]..[587,19332+28])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/deriving.ml[587,19332+29]..[587,19332+31])
                                                                Pexp_ident "__" (src/deriving.ml[587,19332+29]..[587,19332+31])
                                                          ]
                                                      <arg>
                                                      Labelled "f"
                                                        expression (src/deriving.ml[587,19332+36]..[587,19332+51])
                                                          Pexp_ident "parse_arguments" (src/deriving.ml[587,19332+36]..[587,19332+51])
                                                    ]
                                              ]
                                        ]
                                  ]
                          ]
                          expression (src/deriving.ml[589,19395+6]..[593,19523+45])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/deriving.ml[589,19395+10]..[589,19395+20])
                                  Ppat_var "generators" (src/deriving.ml[589,19395+10]..[589,19395+20])
                                expression (src/deriving.ml[590,19418+8]..[591,19459+54])
                                  Pexp_apply
                                  expression (src/deriving.ml[591,19459+8]..[591,19459+11])
                                    Pexp_ident "|||" (src/deriving.ml[591,19459+8]..[591,19459+11])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[590,19418+8]..[590,19418+40])
                                        Pexp_apply
                                        expression (src/deriving.ml[590,19418+8]..[590,19418+18])
                                          Pexp_ident "pexp_tuple" (src/deriving.ml[590,19418+8]..[590,19418+18])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[590,19418+19]..[590,19418+40])
                                              Pexp_apply
                                              expression (src/deriving.ml[590,19418+20]..[590,19418+24])
                                                Pexp_ident "many" (src/deriving.ml[590,19418+20]..[590,19418+24])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/deriving.ml[590,19418+25]..[590,19418+39])
                                                    Pexp_apply
                                                    expression (src/deriving.ml[590,19418+26]..[590,19418+35])
                                                      Pexp_ident "generator" (src/deriving.ml[590,19418+26]..[590,19418+35])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/deriving.ml[590,19418+36]..[590,19418+38])
                                                          Pexp_construct "()" (src/deriving.ml[590,19418+36]..[590,19418+38])
                                                          None
                                                    ]
                                              ]
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[591,19459+12]..[591,19459+54])
                                        Pexp_apply
                                        expression (src/deriving.ml[591,19459+12]..[591,19459+15])
                                          Pexp_ident "map" (src/deriving.ml[591,19459+12]..[591,19459+15])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[591,19459+16]..[591,19459+30])
                                              Pexp_apply
                                              expression (src/deriving.ml[591,19459+17]..[591,19459+26])
                                                Pexp_ident "generator" (src/deriving.ml[591,19459+17]..[591,19459+26])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/deriving.ml[591,19459+27]..[591,19459+29])
                                                    Pexp_construct "()" (src/deriving.ml[591,19459+27]..[591,19459+29])
                                                    None
                                              ]
                                          <arg>
                                          Labelled "f"
                                            expression (src/deriving.ml[591,19459+34]..[591,19459+54])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (src/deriving.ml[591,19459+39]..[591,19459+40])
                                                Ppat_var "f" (src/deriving.ml[591,19459+39]..[591,19459+40])
                                              expression (src/deriving.ml[591,19459+41]..[591,19459+53]) ghost
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (src/deriving.ml[591,19459+41]..[591,19459+42])
                                                  Ppat_var "x" (src/deriving.ml[591,19459+41]..[591,19459+42])
                                                expression (src/deriving.ml[591,19459+46]..[591,19459+53])
                                                  Pexp_apply
                                                  expression (src/deriving.ml[591,19459+46]..[591,19459+47])
                                                    Pexp_ident "f" (src/deriving.ml[591,19459+46]..[591,19459+47])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/deriving.ml[591,19459+48]..[591,19459+53])
                                                        Pexp_construct "::" (src/deriving.ml[591,19459+50]..[591,19459+53]) ghost
                                                        Some
                                                          expression (src/deriving.ml[591,19459+50]..[591,19459+53]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (src/deriving.ml[591,19459+50]..[591,19459+51])
                                                                Pexp_ident "x" (src/deriving.ml[591,19459+50]..[591,19459+51])
                                                              expression (src/deriving.ml[591,19459+52]..[591,19459+53]) ghost
                                                                Pexp_construct "[]" (src/deriving.ml[591,19459+52]..[591,19459+53]) ghost
                                                                None
                                                            ]
                                                  ]
                                        ]
                                  ]
                            ]
                            expression (src/deriving.ml[593,19523+6]..[593,19523+45])
                              Pexp_apply
                              expression (src/deriving.ml[593,19523+6]..[593,19523+10])
                                Pexp_ident "pstr" (src/deriving.ml[593,19523+6]..[593,19523+10])
                              [
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[593,19523+11]..[593,19523+45])
                                    Pexp_apply
                                    expression (src/deriving.ml[593,19523+37]..[593,19523+40])
                                      Pexp_ident "^::" (src/deriving.ml[593,19523+37]..[593,19523+40])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/deriving.ml[593,19523+12]..[593,19523+36])
                                          Pexp_apply
                                          expression (src/deriving.ml[593,19523+12]..[593,19523+21])
                                            Pexp_ident "pstr_eval" (src/deriving.ml[593,19523+12]..[593,19523+21])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/deriving.ml[593,19523+22]..[593,19523+32])
                                                Pexp_ident "generators" (src/deriving.ml[593,19523+22]..[593,19523+32])
                                            <arg>
                                            Nolabel
                                              expression (src/deriving.ml[593,19523+33]..[593,19523+36])
                                                Pexp_ident "nil" (src/deriving.ml[593,19523+33]..[593,19523+36])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (src/deriving.ml[593,19523+41]..[593,19523+44])
                                          Pexp_ident "nil" (src/deriving.ml[593,19523+41]..[593,19523+44])
                                    ]
                              ]
                  <arg>
                  Nolabel
                    expression (src/deriving.ml[594,19570+4]..[594,19570+16])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/deriving.ml[594,19570+9]..[594,19570+10])
                        Ppat_var "x" (src/deriving.ml[594,19570+9]..[594,19570+10])
                      expression (src/deriving.ml[594,19570+14]..[594,19570+15])
                        Pexp_ident "x" (src/deriving.ml[594,19570+14]..[594,19570+15])
                ]
    ]
  structure_item (src/deriving.ml[600,19805+0]..[611,20170+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[600,19805+4]..[600,19805+30])
          Ppat_var "disable_warnings_attribute" (src/deriving.ml[600,19805+4]..[600,19805+30])
        expression (src/deriving.ml[600,19805+31]..[611,20170+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/deriving.ml[600,19805+31]..[600,19805+39])
            Ppat_var "warnings" (src/deriving.ml[600,19805+31]..[600,19805+39])
          expression (src/deriving.ml[601,19847+2]..[611,20170+3])
            Pexp_let Nonrec
            [
              <def>
                pattern (src/deriving.ml[601,19847+6]..[601,19847+9])
                  Ppat_var "loc" (src/deriving.ml[601,19847+6]..[601,19847+9])
                expression (src/deriving.ml[601,19847+12]..[601,19847+25])
                  Pexp_ident "Location.none" (src/deriving.ml[601,19847+12]..[601,19847+25])
            ]
            expression (src/deriving.ml[602,19876+2]..[611,20170+3])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/deriving.ml[602,19876+6]..[602,19876+12])
                    Ppat_var "string" (src/deriving.ml[602,19876+6]..[602,19876+12])
                  expression (src/deriving.ml[603,19891+4]..[605,19995+28])
                    Pexp_apply
                    expression (src/deriving.ml[605,19995+4]..[605,19995+6])
                      Pexp_ident "|>" (src/deriving.ml[605,19995+4]..[605,19995+6])
                    [
                      <arg>
                      Nolabel
                        expression (src/deriving.ml[603,19891+4]..[604,19931+63])
                          Pexp_apply
                          expression (src/deriving.ml[604,19931+4]..[604,19931+6])
                            Pexp_ident "|>" (src/deriving.ml[604,19931+4]..[604,19931+6])
                          [
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[603,19891+4]..[603,19891+39])
                                Pexp_apply
                                expression (src/deriving.ml[603,19891+4]..[603,19891+13])
                                  Pexp_ident "List.sort" (src/deriving.ml[603,19891+4]..[603,19891+13])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[603,19891+14]..[603,19891+22])
                                      Pexp_ident "warnings" (src/deriving.ml[603,19891+14]..[603,19891+22])
                                  <arg>
                                  Labelled "cmp"
                                    expression (src/deriving.ml[603,19891+28]..[603,19891+39])
                                      Pexp_ident "Int.compare" (src/deriving.ml[603,19891+28]..[603,19891+39])
                                ]
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[604,19931+7]..[604,19931+63])
                                Pexp_apply
                                expression (src/deriving.ml[604,19931+7]..[604,19931+15])
                                  Pexp_ident "List.map" (src/deriving.ml[604,19931+7]..[604,19931+15])
                                [
                                  <arg>
                                  Labelled "f"
                                    expression (src/deriving.ml[604,19931+19]..[604,19931+63])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (src/deriving.ml[604,19931+24]..[604,19931+31])
                                        Ppat_var "warning" (src/deriving.ml[604,19931+24]..[604,19931+31])
                                      expression (src/deriving.ml[604,19931+35]..[604,19931+62])
                                        Pexp_apply
                                        expression (src/deriving.ml[604,19931+39]..[604,19931+40])
                                          Pexp_ident "^" (src/deriving.ml[604,19931+39]..[604,19931+40])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[604,19931+35]..[604,19931+38])
                                              Pexp_constant PConst_string("-",(src/deriving.ml[604,19931+36]..[604,19931+37]),None)
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[604,19931+41]..[604,19931+62])
                                              Pexp_apply
                                              expression (src/deriving.ml[604,19931+41]..[604,19931+54])
                                                Pexp_ident "Int.to_string" (src/deriving.ml[604,19931+41]..[604,19931+54])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/deriving.ml[604,19931+55]..[604,19931+62])
                                                    Pexp_ident "warning" (src/deriving.ml[604,19931+55]..[604,19931+62])
                                              ]
                                        ]
                                ]
                          ]
                      <arg>
                      Nolabel
                        expression (src/deriving.ml[605,19995+7]..[605,19995+28])
                          Pexp_apply
                          expression (src/deriving.ml[605,19995+7]..[605,19995+20])
                            Pexp_ident "String.concat" (src/deriving.ml[605,19995+7]..[605,19995+20])
                          [
                            <arg>
                            Labelled "sep"
                              expression (src/deriving.ml[605,19995+26]..[605,19995+28])
                                Pexp_constant PConst_string("",(src/deriving.ml[605,19995+27]..[605,19995+27]),None)
                          ]
                    ]
              ]
              expression (src/deriving.ml[607,20029+2]..[611,20170+3])
                Pexp_record
                [
                  "attr_name" (src/deriving.ml[608,20033+4]..[608,20033+13])
                    expression (src/deriving.ml[608,20033+16]..[608,20033+46])
                      Pexp_record
                      [
                        "txt" (src/deriving.ml[608,20033+18]..[608,20033+21])
                          expression (src/deriving.ml[608,20033+24]..[608,20033+39])
                            Pexp_constant PConst_string("ocaml.warning",(src/deriving.ml[608,20033+25]..[608,20033+38]),None)
                        "loc" (src/deriving.ml[608,20033+41]..[608,20033+44])
                          expression (src/deriving.ml[608,20033+41]..[608,20033+44]) ghost
                            Pexp_ident "loc" (src/deriving.ml[608,20033+41]..[608,20033+44]) ghost
                      ]
                      None
                  "attr_payload" (src/deriving.ml[609,20081+4]..[609,20081+16])
                    expression (src/deriving.ml[609,20081+19]..[609,20081+67])
                      Pexp_construct "PStr" (src/deriving.ml[609,20081+19]..[609,20081+23])
                      Some
                        expression (src/deriving.ml[609,20081+24]..[609,20081+67])
                          Pexp_construct "::" (src/deriving.ml[609,20081+26]..[609,20081+67]) ghost
                          Some
                            expression (src/deriving.ml[609,20081+26]..[609,20081+67]) ghost
                              Pexp_tuple
                              [
                                expression (src/deriving.ml[609,20081+26]..[609,20081+65])
                                  Pexp_apply
                                  expression (src/deriving.ml[609,20081+26]..[609,20081+35])
                                    Pexp_ident "pstr_eval" (src/deriving.ml[609,20081+26]..[609,20081+35])
                                  [
                                    <arg>
                                    Labelled "loc"
                                      expression (src/deriving.ml[609,20081+37]..[609,20081+40])
                                        Pexp_ident "loc" (src/deriving.ml[609,20081+37]..[609,20081+40])
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[609,20081+41]..[609,20081+62])
                                        Pexp_apply
                                        expression (src/deriving.ml[609,20081+42]..[609,20081+49])
                                          Pexp_ident "estring" (src/deriving.ml[609,20081+42]..[609,20081+49])
                                        [
                                          <arg>
                                          Labelled "loc"
                                            expression (src/deriving.ml[609,20081+51]..[609,20081+54])
                                              Pexp_ident "loc" (src/deriving.ml[609,20081+51]..[609,20081+54])
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[609,20081+55]..[609,20081+61])
                                              Pexp_ident "string" (src/deriving.ml[609,20081+55]..[609,20081+61])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[609,20081+63]..[609,20081+65])
                                        Pexp_construct "[]" (src/deriving.ml[609,20081+63]..[609,20081+65])
                                        None
                                  ]
                                expression (src/deriving.ml[609,20081+66]..[609,20081+67]) ghost
                                  Pexp_construct "[]" (src/deriving.ml[609,20081+66]..[609,20081+67]) ghost
                                  None
                              ]
                  "attr_loc" (src/deriving.ml[610,20150+4]..[610,20150+12])
                    expression (src/deriving.ml[610,20150+15]..[610,20150+18])
                      Pexp_ident "loc" (src/deriving.ml[610,20150+15]..[610,20150+18])
                ]
                None
    ]
  structure_item (src/deriving.ml[613,20175+0]..[619,20366+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[613,20175+4]..[613,20175+19])
          Ppat_var "inline_doc_attr" (src/deriving.ml[613,20175+4]..[613,20175+19])
        expression (src/deriving.ml[614,20197+2]..[619,20366+3])
          Pexp_let Nonrec
          [
            <def>
              pattern (src/deriving.ml[614,20197+6]..[614,20197+9])
                Ppat_var "loc" (src/deriving.ml[614,20197+6]..[614,20197+9])
              expression (src/deriving.ml[614,20197+12]..[614,20197+25])
                Pexp_ident "Location.none" (src/deriving.ml[614,20197+12]..[614,20197+25])
          ]
          expression (src/deriving.ml[615,20226+2]..[619,20366+3])
            Pexp_record
            [
              "attr_name" (src/deriving.ml[616,20230+4]..[616,20230+13])
                expression (src/deriving.ml[616,20230+16]..[616,20230+42])
                  Pexp_record
                  [
                    "txt" (src/deriving.ml[616,20230+18]..[616,20230+21])
                      expression (src/deriving.ml[616,20230+24]..[616,20230+35])
                        Pexp_constant PConst_string("ocaml.doc",(src/deriving.ml[616,20230+25]..[616,20230+34]),None)
                    "loc" (src/deriving.ml[616,20230+37]..[616,20230+40])
                      expression (src/deriving.ml[616,20230+37]..[616,20230+40]) ghost
                        Pexp_ident "loc" (src/deriving.ml[616,20230+37]..[616,20230+40]) ghost
                  ]
                  None
              "attr_payload" (src/deriving.ml[617,20274+4]..[617,20274+16])
                expression (src/deriving.ml[617,20274+19]..[617,20274+70])
                  Pexp_construct "PStr" (src/deriving.ml[617,20274+19]..[617,20274+23])
                  Some
                    expression (src/deriving.ml[617,20274+24]..[617,20274+70])
                      Pexp_construct "::" (src/deriving.ml[617,20274+26]..[617,20274+70]) ghost
                      Some
                        expression (src/deriving.ml[617,20274+26]..[617,20274+70]) ghost
                          Pexp_tuple
                          [
                            expression (src/deriving.ml[617,20274+26]..[617,20274+68])
                              Pexp_apply
                              expression (src/deriving.ml[617,20274+26]..[617,20274+35])
                                Pexp_ident "pstr_eval" (src/deriving.ml[617,20274+26]..[617,20274+35])
                              [
                                <arg>
                                Labelled "loc"
                                  expression (src/deriving.ml[617,20274+37]..[617,20274+40])
                                    Pexp_ident "loc" (src/deriving.ml[617,20274+37]..[617,20274+40])
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[617,20274+41]..[617,20274+65])
                                    Pexp_apply
                                    expression (src/deriving.ml[617,20274+42]..[617,20274+49])
                                      Pexp_ident "estring" (src/deriving.ml[617,20274+42]..[617,20274+49])
                                    [
                                      <arg>
                                      Labelled "loc"
                                        expression (src/deriving.ml[617,20274+51]..[617,20274+54])
                                          Pexp_ident "loc" (src/deriving.ml[617,20274+51]..[617,20274+54])
                                      <arg>
                                      Nolabel
                                        expression (src/deriving.ml[617,20274+55]..[617,20274+64])
                                          Pexp_constant PConst_string("@inline",(src/deriving.ml[617,20274+56]..[617,20274+63]),None)
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[617,20274+66]..[617,20274+68])
                                    Pexp_construct "[]" (src/deriving.ml[617,20274+66]..[617,20274+68])
                                    None
                              ]
                            expression (src/deriving.ml[617,20274+69]..[617,20274+70]) ghost
                              Pexp_construct "[]" (src/deriving.ml[617,20274+69]..[617,20274+70]) ghost
                              None
                          ]
              "attr_loc" (src/deriving.ml[618,20346+4]..[618,20346+12])
                expression (src/deriving.ml[618,20346+15]..[618,20346+18])
                  Pexp_ident "loc" (src/deriving.ml[618,20346+15]..[618,20346+18])
            ]
            None
    ]
  structure_item (src/deriving.ml[622,20414+0]..[628,20639+63])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[622,20414+4]..[622,20414+12])
          Ppat_var "wrap_str" (src/deriving.ml[622,20414+4]..[622,20414+12])
        expression (src/deriving.ml[622,20414+13]..[628,20639+63]) ghost
          Pexp_fun
          Labelled "loc"
          None
          pattern (src/deriving.ml[622,20414+14]..[622,20414+17])
            Ppat_var "loc" (src/deriving.ml[622,20414+14]..[622,20414+17])
          expression (src/deriving.ml[622,20414+18]..[628,20639+63]) ghost
            Pexp_fun
            Labelled "hide"
            None
            pattern (src/deriving.ml[622,20414+19]..[622,20414+23])
              Ppat_var "hide" (src/deriving.ml[622,20414+19]..[622,20414+23])
            expression (src/deriving.ml[622,20414+24]..[628,20639+63]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/deriving.ml[622,20414+24]..[622,20414+26])
                Ppat_var "st" (src/deriving.ml[622,20414+24]..[622,20414+26])
              expression (src/deriving.ml[623,20443+2]..[628,20639+63])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/deriving.ml[623,20443+6]..[623,20443+19])
                      Ppat_var "include_infos" (src/deriving.ml[623,20443+6]..[623,20443+19])
                    expression (src/deriving.ml[623,20443+22]..[623,20443+65])
                      Pexp_apply
                      expression (src/deriving.ml[623,20443+22]..[623,20443+35])
                        Pexp_ident "include_infos" (src/deriving.ml[623,20443+22]..[623,20443+35])
                      [
                        <arg>
                        Labelled "loc"
                          expression (src/deriving.ml[623,20443+37]..[623,20443+40])
                            Pexp_ident "loc" (src/deriving.ml[623,20443+37]..[623,20443+40])
                        <arg>
                        Nolabel
                          expression (src/deriving.ml[623,20443+41]..[623,20443+65])
                            Pexp_apply
                            expression (src/deriving.ml[623,20443+42]..[623,20443+56])
                              Pexp_ident "pmod_structure" (src/deriving.ml[623,20443+42]..[623,20443+56])
                            [
                              <arg>
                              Labelled "loc"
                                expression (src/deriving.ml[623,20443+58]..[623,20443+61])
                                  Pexp_ident "loc" (src/deriving.ml[623,20443+58]..[623,20443+61])
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[623,20443+62]..[623,20443+64])
                                  Pexp_ident "st" (src/deriving.ml[623,20443+62]..[623,20443+64])
                            ]
                      ]
                ]
                expression (src/deriving.ml[624,20512+2]..[628,20639+63])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/deriving.ml[624,20512+6]..[624,20512+22])
                        Ppat_var "pincl_attributes" (src/deriving.ml[624,20512+6]..[624,20512+22])
                      expression (src/deriving.ml[625,20537+4]..[626,20605+28])
                        Pexp_ifthenelse
                        expression (src/deriving.ml[625,20537+7]..[625,20537+11])
                          Pexp_ident "hide" (src/deriving.ml[625,20537+7]..[625,20537+11])
                        expression (src/deriving.ml[625,20537+17]..[625,20537+67])
                          Pexp_construct "::" (src/deriving.ml[625,20537+19]..[625,20537+67]) ghost
                          Some
                            expression (src/deriving.ml[625,20537+19]..[625,20537+67]) ghost
                              Pexp_tuple
                              [
                                expression (src/deriving.ml[625,20537+19]..[625,20537+34])
                                  Pexp_ident "inline_doc_attr" (src/deriving.ml[625,20537+19]..[625,20537+34])
                                expression (src/deriving.ml[625,20537+36]..[625,20537+67]) ghost
                                  Pexp_construct "::" (src/deriving.ml[625,20537+36]..[625,20537+67]) ghost
                                  Some
                                    expression (src/deriving.ml[625,20537+36]..[625,20537+67]) ghost
                                      Pexp_tuple
                                      [
                                        expression (src/deriving.ml[625,20537+36]..[625,20537+65])
                                          Pexp_ident "Merlin_helpers.hide_attribute" (src/deriving.ml[625,20537+36]..[625,20537+65])
                                        expression (src/deriving.ml[625,20537+66]..[625,20537+67]) ghost
                                          Pexp_construct "[]" (src/deriving.ml[625,20537+66]..[625,20537+67]) ghost
                                          None
                                      ]
                              ]
                        Some
                          expression (src/deriving.ml[626,20605+9]..[626,20605+28])
                            Pexp_construct "::" (src/deriving.ml[626,20605+11]..[626,20605+28]) ghost
                            Some
                              expression (src/deriving.ml[626,20605+11]..[626,20605+28]) ghost
                                Pexp_tuple
                                [
                                  expression (src/deriving.ml[626,20605+11]..[626,20605+26])
                                    Pexp_ident "inline_doc_attr" (src/deriving.ml[626,20605+11]..[626,20605+26])
                                  expression (src/deriving.ml[626,20605+27]..[626,20605+28]) ghost
                                    Pexp_construct "[]" (src/deriving.ml[626,20605+27]..[626,20605+28]) ghost
                                    None
                                ]
                  ]
                  expression (src/deriving.ml[628,20639+2]..[628,20639+63])
                    Pexp_construct "::" (src/deriving.ml[628,20639+4]..[628,20639+63]) ghost
                    Some
                      expression (src/deriving.ml[628,20639+4]..[628,20639+63]) ghost
                        Pexp_tuple
                        [
                          expression (src/deriving.ml[628,20639+4]..[628,20639+61])
                            Pexp_apply
                            expression (src/deriving.ml[628,20639+4]..[628,20639+16])
                              Pexp_ident "pstr_include" (src/deriving.ml[628,20639+4]..[628,20639+16])
                            [
                              <arg>
                              Labelled "loc"
                                expression (src/deriving.ml[628,20639+18]..[628,20639+21])
                                  Pexp_ident "loc" (src/deriving.ml[628,20639+18]..[628,20639+21])
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[628,20639+22]..[628,20639+61])
                                  Pexp_record
                                  [
                                    "pincl_attributes" (src/deriving.ml[628,20639+43]..[628,20639+59])
                                      expression (src/deriving.ml[628,20639+43]..[628,20639+59]) ghost
                                        Pexp_ident "pincl_attributes" (src/deriving.ml[628,20639+43]..[628,20639+59]) ghost
                                  ]
                                  Some
                                    expression (src/deriving.ml[628,20639+24]..[628,20639+37])
                                      Pexp_ident "include_infos" (src/deriving.ml[628,20639+24]..[628,20639+37])
                            ]
                          expression (src/deriving.ml[628,20639+62]..[628,20639+63]) ghost
                            Pexp_construct "[]" (src/deriving.ml[628,20639+62]..[628,20639+63]) ghost
                            None
                        ]
    ]
  structure_item (src/deriving.ml[631,20773+0]..[653,21559+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[631,20773+4]..[631,20773+12])
          Ppat_var "wrap_str" (src/deriving.ml[631,20773+4]..[631,20773+12])
        expression (src/deriving.ml[631,20773+13]..[653,21559+45]) ghost
          Pexp_fun
          Labelled "loc"
          None
          pattern (src/deriving.ml[631,20773+14]..[631,20773+17])
            Ppat_var "loc" (src/deriving.ml[631,20773+14]..[631,20773+17])
          expression (src/deriving.ml[631,20773+18]..[653,21559+45]) ghost
            Pexp_fun
            Labelled "hide"
            None
            pattern (src/deriving.ml[631,20773+19]..[631,20773+23])
              Ppat_var "hide" (src/deriving.ml[631,20773+19]..[631,20773+23])
            expression (src/deriving.ml[631,20773+24]..[653,21559+45]) ghost
              Pexp_fun
              Labelled "unused_code_warnings"
              None
              pattern (src/deriving.ml[631,20773+25]..[631,20773+45])
                Ppat_var "unused_code_warnings" (src/deriving.ml[631,20773+25]..[631,20773+45])
              expression (src/deriving.ml[631,20773+46]..[653,21559+45]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (src/deriving.ml[631,20773+46]..[631,20773+48])
                  Ppat_var "st" (src/deriving.ml[631,20773+46]..[631,20773+48])
                expression (src/deriving.ml[632,20824+2]..[653,21559+45])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/deriving.ml[632,20824+6]..[632,20824+9])
                        Ppat_var "loc" (src/deriving.ml[632,20824+6]..[632,20824+9])
                      expression (src/deriving.ml[632,20824+12]..[632,20824+41])
                        Pexp_record
                        [
                          "loc_ghost" (src/deriving.ml[632,20824+23]..[632,20824+32])
                            expression (src/deriving.ml[632,20824+35]..[632,20824+39])
                              Pexp_construct "true" (src/deriving.ml[632,20824+35]..[632,20824+39])
                              None
                        ]
                        Some
                          expression (src/deriving.ml[632,20824+14]..[632,20824+17])
                            Pexp_ident "loc" (src/deriving.ml[632,20824+14]..[632,20824+17])
                  ]
                  expression (src/deriving.ml[633,20869+2]..[653,21559+45])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/deriving.ml[633,20869+6]..[633,20869+26])
                          Ppat_var "unused_code_warnings" (src/deriving.ml[633,20869+6]..[633,20869+26])
                        expression (src/deriving.ml[634,20898+4]..[634,20898+57])
                          Pexp_apply
                          expression (src/deriving.ml[634,20898+25]..[634,20898+27])
                            Pexp_ident "&&" (src/deriving.ml[634,20898+25]..[634,20898+27])
                          [
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[634,20898+4]..[634,20898+24])
                                Pexp_ident "unused_code_warnings" (src/deriving.ml[634,20898+4]..[634,20898+24])
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[634,20898+28]..[634,20898+57])
                                Pexp_apply
                                expression (src/deriving.ml[634,20898+28]..[634,20898+54])
                                  Pexp_ident "allow_unused_code_warnings" (src/deriving.ml[634,20898+28]..[634,20898+54])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[634,20898+55]..[634,20898+57])
                                      Pexp_construct "()" (src/deriving.ml[634,20898+55]..[634,20898+57])
                                      None
                                ]
                          ]
                    ]
                    expression (src/deriving.ml[636,20961+2]..[653,21559+45])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/deriving.ml[636,20961+6]..[636,20961+18])
                            Ppat_tuple
                            [
                              pattern (src/deriving.ml[636,20961+6]..[636,20961+14])
                                Ppat_var "warnings" (src/deriving.ml[636,20961+6]..[636,20961+14])
                              pattern (src/deriving.ml[636,20961+16]..[636,20961+18])
                                Ppat_var "st" (src/deriving.ml[636,20961+16]..[636,20961+18])
                            ]
                          expression (src/deriving.ml[637,20982+4]..[640,21174+21])
                            Pexp_ifthenelse
                            expression (src/deriving.ml[637,20982+7]..[637,20982+47])
                              Pexp_apply
                              expression (src/deriving.ml[637,20982+24]..[637,20982+26])
                                Pexp_ident "||" (src/deriving.ml[637,20982+24]..[637,20982+26])
                              [
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[637,20982+7]..[637,20982+23])
                                    Pexp_apply
                                    expression (src/deriving.ml[637,20982+7]..[637,20982+20])
                                      Pexp_ident "keep_w32_impl" (src/deriving.ml[637,20982+7]..[637,20982+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/deriving.ml[637,20982+21]..[637,20982+23])
                                          Pexp_construct "()" (src/deriving.ml[637,20982+21]..[637,20982+23])
                                          None
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[637,20982+27]..[637,20982+47])
                                    Pexp_ident "unused_code_warnings" (src/deriving.ml[637,20982+27]..[637,20982+47])
                              ]
                            expression (src/deriving.ml[637,20982+53]..[637,20982+61])
                              Pexp_tuple
                              [
                                expression (src/deriving.ml[637,20982+54]..[637,20982+56])
                                  Pexp_construct "[]" (src/deriving.ml[637,20982+54]..[637,20982+56])
                                  None
                                expression (src/deriving.ml[637,20982+58]..[637,20982+60])
                                  Pexp_ident "st" (src/deriving.ml[637,20982+58]..[637,20982+60])
                              ]
                            Some
                              expression (src/deriving.ml[638,21044+9]..[640,21174+21])
                                Pexp_ifthenelse
                                expression (src/deriving.ml[638,21044+12]..[638,21044+51])
                                  Pexp_apply
                                  expression (src/deriving.ml[638,21044+12]..[638,21044+15])
                                    Pexp_ident "not" (src/deriving.ml[638,21044+12]..[638,21044+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[638,21044+16]..[638,21044+51])
                                        Pexp_apply
                                        expression (src/deriving.ml[638,21044+16]..[638,21044+17])
                                          Pexp_ident "!" (src/deriving.ml[638,21044+16]..[638,21044+17])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[638,21044+17]..[638,21044+51])
                                              Pexp_ident "do_insert_unused_warning_attribute" (src/deriving.ml[638,21044+17]..[638,21044+51])
                                        ]
                                  ]
                                expression (src/deriving.ml[639,21101+6]..[639,21101+72])
                                  Pexp_tuple
                                  [
                                    expression (src/deriving.ml[639,21101+7]..[639,21101+9])
                                      Pexp_construct "[]" (src/deriving.ml[639,21101+7]..[639,21101+9])
                                      None
                                    expression (src/deriving.ml[639,21101+11]..[639,21101+71])
                                      Pexp_apply
                                      expression (src/deriving.ml[639,21101+11]..[639,21101+68])
                                        Pexp_send "structure"
                                        expression (src/deriving.ml[639,21101+11]..[639,21101+58])
                                          Pexp_ident "Ignore_unused_warning.add_dummy_user_for_values" (src/deriving.ml[639,21101+11]..[639,21101+58])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/deriving.ml[639,21101+69]..[639,21101+71])
                                            Pexp_ident "st" (src/deriving.ml[639,21101+69]..[639,21101+71])
                                      ]
                                  ]
                                Some
                                  expression (src/deriving.ml[640,21174+9]..[640,21174+21])
                                    Pexp_tuple
                                    [
                                      expression (src/deriving.ml[640,21174+10]..[640,21174+16])
                                        Pexp_construct "::" (src/deriving.ml[640,21174+12]..[640,21174+16]) ghost
                                        Some
                                          expression (src/deriving.ml[640,21174+12]..[640,21174+16]) ghost
                                            Pexp_tuple
                                            [
                                              expression (src/deriving.ml[640,21174+12]..[640,21174+14])
                                                Pexp_constant PConst_int (32,None)
                                              expression (src/deriving.ml[640,21174+15]..[640,21174+16]) ghost
                                                Pexp_construct "[]" (src/deriving.ml[640,21174+15]..[640,21174+16]) ghost
                                                None
                                            ]
                                      expression (src/deriving.ml[640,21174+18]..[640,21174+20])
                                        Pexp_ident "st" (src/deriving.ml[640,21174+18]..[640,21174+20])
                                    ]
                      ]
                      expression (src/deriving.ml[642,21201+2]..[653,21559+45])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/deriving.ml[642,21201+6]..[642,21201+18])
                              Ppat_tuple
                              [
                                pattern (src/deriving.ml[642,21201+6]..[642,21201+14])
                                  Ppat_var "warnings" (src/deriving.ml[642,21201+6]..[642,21201+14])
                                pattern (src/deriving.ml[642,21201+16]..[642,21201+18])
                                  Ppat_var "st" (src/deriving.ml[642,21201+16]..[642,21201+18])
                              ]
                            expression (src/deriving.ml[643,21222+4]..[647,21375+29])
                              Pexp_ifthenelse
                              expression (src/deriving.ml[644,21229+6]..[645,21276+74])
                                Pexp_apply
                                expression (src/deriving.ml[644,21229+23]..[644,21229+25])
                                  Pexp_ident "||" (src/deriving.ml[644,21229+23]..[644,21229+25])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[644,21229+6]..[644,21229+22])
                                      Pexp_apply
                                      expression (src/deriving.ml[644,21229+6]..[644,21229+19])
                                        Pexp_ident "keep_w60_impl" (src/deriving.ml[644,21229+6]..[644,21229+19])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/deriving.ml[644,21229+20]..[644,21229+22])
                                            Pexp_construct "()" (src/deriving.ml[644,21229+20]..[644,21229+22])
                                            None
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[644,21229+26]..[645,21276+74])
                                      Pexp_apply
                                      expression (src/deriving.ml[645,21276+6]..[645,21276+8])
                                        Pexp_ident "||" (src/deriving.ml[645,21276+6]..[645,21276+8])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/deriving.ml[644,21229+26]..[644,21229+46])
                                            Pexp_ident "unused_code_warnings" (src/deriving.ml[644,21229+26]..[644,21229+46])
                                        <arg>
                                        Nolabel
                                          expression (src/deriving.ml[645,21276+9]..[645,21276+74])
                                            Pexp_apply
                                            expression (src/deriving.ml[645,21276+9]..[645,21276+12])
                                              Pexp_ident "not" (src/deriving.ml[645,21276+9]..[645,21276+12])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/deriving.ml[645,21276+13]..[645,21276+74])
                                                  Pexp_apply
                                                  expression (src/deriving.ml[645,21276+14]..[645,21276+64])
                                                    Pexp_send "structure"
                                                    expression (src/deriving.ml[645,21276+14]..[645,21276+54])
                                                      Pexp_ident "Ignore_unused_warning.binds_module_names" (src/deriving.ml[645,21276+14]..[645,21276+54])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/deriving.ml[645,21276+65]..[645,21276+67])
                                                        Pexp_ident "st" (src/deriving.ml[645,21276+65]..[645,21276+67])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/deriving.ml[645,21276+68]..[645,21276+73])
                                                        Pexp_construct "false" (src/deriving.ml[645,21276+68]..[645,21276+73])
                                                        None
                                                  ]
                                            ]
                                      ]
                                ]
                              expression (src/deriving.ml[646,21351+9]..[646,21351+23])
                                Pexp_tuple
                                [
                                  expression (src/deriving.ml[646,21351+10]..[646,21351+18])
                                    Pexp_ident "warnings" (src/deriving.ml[646,21351+10]..[646,21351+18])
                                  expression (src/deriving.ml[646,21351+20]..[646,21351+22])
                                    Pexp_ident "st" (src/deriving.ml[646,21351+20]..[646,21351+22])
                                ]
                              Some
                                expression (src/deriving.ml[647,21375+9]..[647,21375+29])
                                  Pexp_tuple
                                  [
                                    expression (src/deriving.ml[647,21375+10]..[647,21375+24])
                                      Pexp_construct "::" (src/deriving.ml[647,21375+13]..[647,21375+15])
                                      Some
                                        expression (src/deriving.ml[647,21375+10]..[647,21375+24]) ghost
                                          Pexp_tuple
                                          [
                                            expression (src/deriving.ml[647,21375+10]..[647,21375+12])
                                              Pexp_constant PConst_int (60,None)
                                            expression (src/deriving.ml[647,21375+16]..[647,21375+24])
                                              Pexp_ident "warnings" (src/deriving.ml[647,21375+16]..[647,21375+24])
                                          ]
                                    expression (src/deriving.ml[647,21375+26]..[647,21375+28])
                                      Pexp_ident "st" (src/deriving.ml[647,21375+26]..[647,21375+28])
                                  ]
                        ]
                        expression (src/deriving.ml[649,21410+2]..[653,21559+45])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/deriving.ml[649,21410+6]..[649,21410+14])
                                Ppat_tuple
                                [
                                  pattern (src/deriving.ml[649,21410+6]..[649,21410+10])
                                    Ppat_var "wrap" (src/deriving.ml[649,21410+6]..[649,21410+10])
                                  pattern (src/deriving.ml[649,21410+12]..[649,21410+14])
                                    Ppat_var "st" (src/deriving.ml[649,21410+12]..[649,21410+14])
                                ]
                              expression (src/deriving.ml[650,21427+4]..[651,21473+80])
                                Pexp_ifthenelse
                                expression (src/deriving.ml[650,21427+7]..[650,21427+29])
                                  Pexp_apply
                                  expression (src/deriving.ml[650,21427+7]..[650,21427+20])
                                    Pexp_ident "List.is_empty" (src/deriving.ml[650,21427+7]..[650,21427+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[650,21427+21]..[650,21427+29])
                                        Pexp_ident "warnings" (src/deriving.ml[650,21427+21]..[650,21427+29])
                                  ]
                                expression (src/deriving.ml[650,21427+35]..[650,21427+45])
                                  Pexp_tuple
                                  [
                                    expression (src/deriving.ml[650,21427+36]..[650,21427+40])
                                      Pexp_ident "hide" (src/deriving.ml[650,21427+36]..[650,21427+40])
                                    expression (src/deriving.ml[650,21427+42]..[650,21427+44])
                                      Pexp_ident "st" (src/deriving.ml[650,21427+42]..[650,21427+44])
                                  ]
                                Some
                                  expression (src/deriving.ml[651,21473+9]..[651,21473+80])
                                    Pexp_tuple
                                    [
                                      expression (src/deriving.ml[651,21473+10]..[651,21473+14])
                                        Pexp_construct "true" (src/deriving.ml[651,21473+10]..[651,21473+14])
                                        None
                                      expression (src/deriving.ml[651,21473+16]..[651,21473+79])
                                        Pexp_construct "::" (src/deriving.ml[651,21473+74]..[651,21473+76])
                                        Some
                                          expression (src/deriving.ml[651,21473+16]..[651,21473+79]) ghost
                                            Pexp_tuple
                                            [
                                              expression (src/deriving.ml[651,21473+16]..[651,21473+73])
                                                Pexp_apply
                                                expression (src/deriving.ml[651,21473+16]..[651,21473+30])
                                                  Pexp_ident "pstr_attribute" (src/deriving.ml[651,21473+16]..[651,21473+30])
                                                [
                                                  <arg>
                                                  Labelled "loc"
                                                    expression (src/deriving.ml[651,21473+32]..[651,21473+35])
                                                      Pexp_ident "loc" (src/deriving.ml[651,21473+32]..[651,21473+35])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/deriving.ml[651,21473+36]..[651,21473+73])
                                                      Pexp_apply
                                                      expression (src/deriving.ml[651,21473+37]..[651,21473+63])
                                                        Pexp_ident "disable_warnings_attribute" (src/deriving.ml[651,21473+37]..[651,21473+63])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/deriving.ml[651,21473+64]..[651,21473+72])
                                                            Pexp_ident "warnings" (src/deriving.ml[651,21473+64]..[651,21473+72])
                                                      ]
                                                ]
                                              expression (src/deriving.ml[651,21473+77]..[651,21473+79])
                                                Pexp_ident "st" (src/deriving.ml[651,21473+77]..[651,21473+79])
                                            ]
                                    ]
                          ]
                          expression (src/deriving.ml[653,21559+2]..[653,21559+45])
                            Pexp_ifthenelse
                            expression (src/deriving.ml[653,21559+5]..[653,21559+9])
                              Pexp_ident "wrap" (src/deriving.ml[653,21559+5]..[653,21559+9])
                            expression (src/deriving.ml[653,21559+15]..[653,21559+37])
                              Pexp_apply
                              expression (src/deriving.ml[653,21559+15]..[653,21559+23])
                                Pexp_ident "wrap_str" (src/deriving.ml[653,21559+15]..[653,21559+23])
                              [
                                <arg>
                                Labelled "loc"
                                  expression (src/deriving.ml[653,21559+25]..[653,21559+28])
                                    Pexp_ident "loc" (src/deriving.ml[653,21559+25]..[653,21559+28])
                                <arg>
                                Labelled "hide"
                                  expression (src/deriving.ml[653,21559+30]..[653,21559+34])
                                    Pexp_ident "hide" (src/deriving.ml[653,21559+30]..[653,21559+34])
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[653,21559+35]..[653,21559+37])
                                    Pexp_ident "st" (src/deriving.ml[653,21559+35]..[653,21559+37])
                              ]
                            Some
                              expression (src/deriving.ml[653,21559+43]..[653,21559+45])
                                Pexp_ident "st" (src/deriving.ml[653,21559+43]..[653,21559+45])
    ]
  structure_item (src/deriving.ml[656,21688+0]..[659,21822+59])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[656,21688+4]..[656,21688+12])
          Ppat_var "wrap_str" (src/deriving.ml[656,21688+4]..[656,21688+12])
        expression (src/deriving.ml[656,21688+13]..[659,21822+59]) ghost
          Pexp_fun
          Labelled "loc"
          None
          pattern (src/deriving.ml[656,21688+14]..[656,21688+17])
            Ppat_var "loc" (src/deriving.ml[656,21688+14]..[656,21688+17])
          expression (src/deriving.ml[656,21688+18]..[659,21822+59]) ghost
            Pexp_fun
            Labelled "hide"
            None
            pattern (src/deriving.ml[656,21688+19]..[656,21688+23])
              Ppat_var "hide" (src/deriving.ml[656,21688+19]..[656,21688+23])
            expression (src/deriving.ml[656,21688+24]..[659,21822+59]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/deriving.ml[656,21688+24]..[656,21688+28])
                Ppat_var "list" (src/deriving.ml[656,21688+24]..[656,21688+28])
              expression (src/deriving.ml[657,21719+2]..[659,21822+59])
                Pexp_apply
                expression (src/deriving.ml[657,21719+2]..[657,21719+17])
                  Pexp_ident "List.concat_map" (src/deriving.ml[657,21719+2]..[657,21719+17])
                [
                  <arg>
                  Nolabel
                    expression (src/deriving.ml[657,21719+18]..[657,21719+22])
                      Pexp_ident "list" (src/deriving.ml[657,21719+18]..[657,21719+22])
                  <arg>
                  Labelled "f"
                    expression (src/deriving.ml[657,21719+26]..[659,21822+59])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/deriving.ml[657,21719+31]..[657,21719+62])
                        Ppat_record Closed
                        [
                          "items" (src/deriving.ml[657,21719+33]..[657,21719+38]) ghost
                            pattern (src/deriving.ml[657,21719+33]..[657,21719+38])
                              Ppat_var "items" (src/deriving.ml[657,21719+33]..[657,21719+38])
                          "unused_code_warnings" (src/deriving.ml[657,21719+40]..[657,21719+60]) ghost
                            pattern (src/deriving.ml[657,21719+40]..[657,21719+60])
                              Ppat_var "unused_code_warnings" (src/deriving.ml[657,21719+40]..[657,21719+60])
                        ]
                      expression (src/deriving.ml[658,21785+6]..[659,21822+58])
                        Pexp_ifthenelse
                        expression (src/deriving.ml[658,21785+9]..[658,21785+28])
                          Pexp_apply
                          expression (src/deriving.ml[658,21785+9]..[658,21785+22])
                            Pexp_ident "List.is_empty" (src/deriving.ml[658,21785+9]..[658,21785+22])
                          [
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[658,21785+23]..[658,21785+28])
                                Pexp_ident "items" (src/deriving.ml[658,21785+23]..[658,21785+28])
                          ]
                        expression (src/deriving.ml[658,21785+34]..[658,21785+36])
                          Pexp_construct "[]" (src/deriving.ml[658,21785+34]..[658,21785+36])
                          None
                        Some
                          expression (src/deriving.ml[659,21822+11]..[659,21822+58])
                            Pexp_apply
                            expression (src/deriving.ml[659,21822+11]..[659,21822+19])
                              Pexp_ident "wrap_str" (src/deriving.ml[659,21822+11]..[659,21822+19])
                            [
                              <arg>
                              Labelled "loc"
                                expression (src/deriving.ml[659,21822+21]..[659,21822+24])
                                  Pexp_ident "loc" (src/deriving.ml[659,21822+21]..[659,21822+24])
                              <arg>
                              Labelled "hide"
                                expression (src/deriving.ml[659,21822+26]..[659,21822+30])
                                  Pexp_ident "hide" (src/deriving.ml[659,21822+26]..[659,21822+30])
                              <arg>
                              Labelled "unused_code_warnings"
                                expression (src/deriving.ml[659,21822+32]..[659,21822+52])
                                  Pexp_ident "unused_code_warnings" (src/deriving.ml[659,21822+32]..[659,21822+52])
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[659,21822+53]..[659,21822+58])
                                  Pexp_ident "items" (src/deriving.ml[659,21822+53]..[659,21822+58])
                            ]
                ]
    ]
  structure_item (src/deriving.ml[662,21926+0]..[668,22151+63])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[662,21926+4]..[662,21926+12])
          Ppat_var "wrap_sig" (src/deriving.ml[662,21926+4]..[662,21926+12])
        expression (src/deriving.ml[662,21926+13]..[668,22151+63]) ghost
          Pexp_fun
          Labelled "loc"
          None
          pattern (src/deriving.ml[662,21926+14]..[662,21926+17])
            Ppat_var "loc" (src/deriving.ml[662,21926+14]..[662,21926+17])
          expression (src/deriving.ml[662,21926+18]..[668,22151+63]) ghost
            Pexp_fun
            Labelled "hide"
            None
            pattern (src/deriving.ml[662,21926+19]..[662,21926+23])
              Ppat_var "hide" (src/deriving.ml[662,21926+19]..[662,21926+23])
            expression (src/deriving.ml[662,21926+24]..[668,22151+63]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/deriving.ml[662,21926+24]..[662,21926+26])
                Ppat_var "st" (src/deriving.ml[662,21926+24]..[662,21926+26])
              expression (src/deriving.ml[663,21955+2]..[668,22151+63])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/deriving.ml[663,21955+6]..[663,21955+19])
                      Ppat_var "include_infos" (src/deriving.ml[663,21955+6]..[663,21955+19])
                    expression (src/deriving.ml[663,21955+22]..[663,21955+65])
                      Pexp_apply
                      expression (src/deriving.ml[663,21955+22]..[663,21955+35])
                        Pexp_ident "include_infos" (src/deriving.ml[663,21955+22]..[663,21955+35])
                      [
                        <arg>
                        Labelled "loc"
                          expression (src/deriving.ml[663,21955+37]..[663,21955+40])
                            Pexp_ident "loc" (src/deriving.ml[663,21955+37]..[663,21955+40])
                        <arg>
                        Nolabel
                          expression (src/deriving.ml[663,21955+41]..[663,21955+65])
                            Pexp_apply
                            expression (src/deriving.ml[663,21955+42]..[663,21955+56])
                              Pexp_ident "pmty_signature" (src/deriving.ml[663,21955+42]..[663,21955+56])
                            [
                              <arg>
                              Labelled "loc"
                                expression (src/deriving.ml[663,21955+58]..[663,21955+61])
                                  Pexp_ident "loc" (src/deriving.ml[663,21955+58]..[663,21955+61])
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[663,21955+62]..[663,21955+64])
                                  Pexp_ident "st" (src/deriving.ml[663,21955+62]..[663,21955+64])
                            ]
                      ]
                ]
                expression (src/deriving.ml[664,22024+2]..[668,22151+63])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/deriving.ml[664,22024+6]..[664,22024+22])
                        Ppat_var "pincl_attributes" (src/deriving.ml[664,22024+6]..[664,22024+22])
                      expression (src/deriving.ml[665,22049+4]..[666,22117+28])
                        Pexp_ifthenelse
                        expression (src/deriving.ml[665,22049+7]..[665,22049+11])
                          Pexp_ident "hide" (src/deriving.ml[665,22049+7]..[665,22049+11])
                        expression (src/deriving.ml[665,22049+17]..[665,22049+67])
                          Pexp_construct "::" (src/deriving.ml[665,22049+19]..[665,22049+67]) ghost
                          Some
                            expression (src/deriving.ml[665,22049+19]..[665,22049+67]) ghost
                              Pexp_tuple
                              [
                                expression (src/deriving.ml[665,22049+19]..[665,22049+34])
                                  Pexp_ident "inline_doc_attr" (src/deriving.ml[665,22049+19]..[665,22049+34])
                                expression (src/deriving.ml[665,22049+36]..[665,22049+67]) ghost
                                  Pexp_construct "::" (src/deriving.ml[665,22049+36]..[665,22049+67]) ghost
                                  Some
                                    expression (src/deriving.ml[665,22049+36]..[665,22049+67]) ghost
                                      Pexp_tuple
                                      [
                                        expression (src/deriving.ml[665,22049+36]..[665,22049+65])
                                          Pexp_ident "Merlin_helpers.hide_attribute" (src/deriving.ml[665,22049+36]..[665,22049+65])
                                        expression (src/deriving.ml[665,22049+66]..[665,22049+67]) ghost
                                          Pexp_construct "[]" (src/deriving.ml[665,22049+66]..[665,22049+67]) ghost
                                          None
                                      ]
                              ]
                        Some
                          expression (src/deriving.ml[666,22117+9]..[666,22117+28])
                            Pexp_construct "::" (src/deriving.ml[666,22117+11]..[666,22117+28]) ghost
                            Some
                              expression (src/deriving.ml[666,22117+11]..[666,22117+28]) ghost
                                Pexp_tuple
                                [
                                  expression (src/deriving.ml[666,22117+11]..[666,22117+26])
                                    Pexp_ident "inline_doc_attr" (src/deriving.ml[666,22117+11]..[666,22117+26])
                                  expression (src/deriving.ml[666,22117+27]..[666,22117+28]) ghost
                                    Pexp_construct "[]" (src/deriving.ml[666,22117+27]..[666,22117+28]) ghost
                                    None
                                ]
                  ]
                  expression (src/deriving.ml[668,22151+2]..[668,22151+63])
                    Pexp_construct "::" (src/deriving.ml[668,22151+4]..[668,22151+63]) ghost
                    Some
                      expression (src/deriving.ml[668,22151+4]..[668,22151+63]) ghost
                        Pexp_tuple
                        [
                          expression (src/deriving.ml[668,22151+4]..[668,22151+61])
                            Pexp_apply
                            expression (src/deriving.ml[668,22151+4]..[668,22151+16])
                              Pexp_ident "psig_include" (src/deriving.ml[668,22151+4]..[668,22151+16])
                            [
                              <arg>
                              Labelled "loc"
                                expression (src/deriving.ml[668,22151+18]..[668,22151+21])
                                  Pexp_ident "loc" (src/deriving.ml[668,22151+18]..[668,22151+21])
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[668,22151+22]..[668,22151+61])
                                  Pexp_record
                                  [
                                    "pincl_attributes" (src/deriving.ml[668,22151+43]..[668,22151+59])
                                      expression (src/deriving.ml[668,22151+43]..[668,22151+59]) ghost
                                        Pexp_ident "pincl_attributes" (src/deriving.ml[668,22151+43]..[668,22151+59]) ghost
                                  ]
                                  Some
                                    expression (src/deriving.ml[668,22151+24]..[668,22151+37])
                                      Pexp_ident "include_infos" (src/deriving.ml[668,22151+24]..[668,22151+37])
                            ]
                          expression (src/deriving.ml[668,22151+62]..[668,22151+63]) ghost
                            Pexp_construct "[]" (src/deriving.ml[668,22151+62]..[668,22151+63]) ghost
                            None
                        ]
    ]
  structure_item (src/deriving.ml[671,22285+0]..[691,22913+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[671,22285+4]..[671,22285+12])
          Ppat_var "wrap_sig" (src/deriving.ml[671,22285+4]..[671,22285+12])
        expression (src/deriving.ml[671,22285+13]..[691,22913+45]) ghost
          Pexp_fun
          Labelled "loc"
          None
          pattern (src/deriving.ml[671,22285+14]..[671,22285+17])
            Ppat_var "loc" (src/deriving.ml[671,22285+14]..[671,22285+17])
          expression (src/deriving.ml[671,22285+18]..[691,22913+45]) ghost
            Pexp_fun
            Labelled "hide"
            None
            pattern (src/deriving.ml[671,22285+19]..[671,22285+23])
              Ppat_var "hide" (src/deriving.ml[671,22285+19]..[671,22285+23])
            expression (src/deriving.ml[671,22285+24]..[691,22913+45]) ghost
              Pexp_fun
              Labelled "unused_code_warnings"
              None
              pattern (src/deriving.ml[671,22285+25]..[671,22285+45])
                Ppat_var "unused_code_warnings" (src/deriving.ml[671,22285+25]..[671,22285+45])
              expression (src/deriving.ml[671,22285+46]..[691,22913+45]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (src/deriving.ml[671,22285+46]..[671,22285+48])
                  Ppat_var "sg" (src/deriving.ml[671,22285+46]..[671,22285+48])
                expression (src/deriving.ml[672,22336+2]..[691,22913+45])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/deriving.ml[672,22336+6]..[672,22336+9])
                        Ppat_var "loc" (src/deriving.ml[672,22336+6]..[672,22336+9])
                      expression (src/deriving.ml[672,22336+12]..[672,22336+41])
                        Pexp_record
                        [
                          "loc_ghost" (src/deriving.ml[672,22336+23]..[672,22336+32])
                            expression (src/deriving.ml[672,22336+35]..[672,22336+39])
                              Pexp_construct "true" (src/deriving.ml[672,22336+35]..[672,22336+39])
                              None
                        ]
                        Some
                          expression (src/deriving.ml[672,22336+14]..[672,22336+17])
                            Pexp_ident "loc" (src/deriving.ml[672,22336+14]..[672,22336+17])
                  ]
                  expression (src/deriving.ml[673,22381+2]..[691,22913+45])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/deriving.ml[673,22381+6]..[673,22381+26])
                          Ppat_var "unused_code_warnings" (src/deriving.ml[673,22381+6]..[673,22381+26])
                        expression (src/deriving.ml[674,22410+4]..[674,22410+57])
                          Pexp_apply
                          expression (src/deriving.ml[674,22410+25]..[674,22410+27])
                            Pexp_ident "&&" (src/deriving.ml[674,22410+25]..[674,22410+27])
                          [
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[674,22410+4]..[674,22410+24])
                                Pexp_ident "unused_code_warnings" (src/deriving.ml[674,22410+4]..[674,22410+24])
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[674,22410+28]..[674,22410+57])
                                Pexp_apply
                                expression (src/deriving.ml[674,22410+28]..[674,22410+54])
                                  Pexp_ident "allow_unused_code_warnings" (src/deriving.ml[674,22410+28]..[674,22410+54])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[674,22410+55]..[674,22410+57])
                                      Pexp_construct "()" (src/deriving.ml[674,22410+55]..[674,22410+57])
                                      None
                                ]
                          ]
                    ]
                    expression (src/deriving.ml[676,22473+2]..[691,22913+45])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/deriving.ml[676,22473+6]..[676,22473+14])
                            Ppat_var "warnings" (src/deriving.ml[676,22473+6]..[676,22473+14])
                          expression (src/deriving.ml[677,22490+4]..[677,22490+67])
                            Pexp_ifthenelse
                            expression (src/deriving.ml[677,22490+7]..[677,22490+47])
                              Pexp_apply
                              expression (src/deriving.ml[677,22490+24]..[677,22490+26])
                                Pexp_ident "||" (src/deriving.ml[677,22490+24]..[677,22490+26])
                              [
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[677,22490+7]..[677,22490+23])
                                    Pexp_apply
                                    expression (src/deriving.ml[677,22490+7]..[677,22490+20])
                                      Pexp_ident "keep_w32_intf" (src/deriving.ml[677,22490+7]..[677,22490+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/deriving.ml[677,22490+21]..[677,22490+23])
                                          Pexp_construct "()" (src/deriving.ml[677,22490+21]..[677,22490+23])
                                          None
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[677,22490+27]..[677,22490+47])
                                    Pexp_ident "unused_code_warnings" (src/deriving.ml[677,22490+27]..[677,22490+47])
                              ]
                            expression (src/deriving.ml[677,22490+53]..[677,22490+55])
                              Pexp_construct "[]" (src/deriving.ml[677,22490+53]..[677,22490+55])
                              None
                            Some
                              expression (src/deriving.ml[677,22490+61]..[677,22490+67])
                                Pexp_construct "::" (src/deriving.ml[677,22490+63]..[677,22490+67]) ghost
                                Some
                                  expression (src/deriving.ml[677,22490+63]..[677,22490+67]) ghost
                                    Pexp_tuple
                                    [
                                      expression (src/deriving.ml[677,22490+63]..[677,22490+65])
                                        Pexp_constant PConst_int (32,None)
                                      expression (src/deriving.ml[677,22490+66]..[677,22490+67]) ghost
                                        Pexp_construct "[]" (src/deriving.ml[677,22490+66]..[677,22490+67]) ghost
                                        None
                                    ]
                      ]
                      expression (src/deriving.ml[679,22563+2]..[691,22913+45])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/deriving.ml[679,22563+6]..[679,22563+14])
                              Ppat_var "warnings" (src/deriving.ml[679,22563+6]..[679,22563+14])
                            expression (src/deriving.ml[680,22580+4]..[685,22735+23])
                              Pexp_ifthenelse
                              expression (src/deriving.ml[681,22587+6]..[683,22687+29])
                                Pexp_apply
                                expression (src/deriving.ml[682,22610+6]..[682,22610+8])
                                  Pexp_ident "||" (src/deriving.ml[682,22610+6]..[682,22610+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[681,22587+6]..[681,22587+22])
                                      Pexp_apply
                                      expression (src/deriving.ml[681,22587+6]..[681,22587+19])
                                        Pexp_ident "keep_w60_intf" (src/deriving.ml[681,22587+6]..[681,22587+19])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/deriving.ml[681,22587+20]..[681,22587+22])
                                            Pexp_construct "()" (src/deriving.ml[681,22587+20]..[681,22587+22])
                                            None
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[682,22610+9]..[683,22687+29])
                                      Pexp_apply
                                      expression (src/deriving.ml[683,22687+6]..[683,22687+8])
                                        Pexp_ident "||" (src/deriving.ml[683,22687+6]..[683,22687+8])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/deriving.ml[682,22610+9]..[682,22610+76])
                                            Pexp_apply
                                            expression (src/deriving.ml[682,22610+10]..[682,22610+13])
                                              Pexp_ident "not" (src/deriving.ml[682,22610+10]..[682,22610+13])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/deriving.ml[682,22610+14]..[682,22610+75])
                                                  Pexp_apply
                                                  expression (src/deriving.ml[682,22610+15]..[682,22610+65])
                                                    Pexp_send "signature"
                                                    expression (src/deriving.ml[682,22610+15]..[682,22610+55])
                                                      Pexp_ident "Ignore_unused_warning.binds_module_names" (src/deriving.ml[682,22610+15]..[682,22610+55])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/deriving.ml[682,22610+66]..[682,22610+68])
                                                        Pexp_ident "sg" (src/deriving.ml[682,22610+66]..[682,22610+68])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/deriving.ml[682,22610+69]..[682,22610+74])
                                                        Pexp_construct "false" (src/deriving.ml[682,22610+69]..[682,22610+74])
                                                        None
                                                  ]
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (src/deriving.ml[683,22687+9]..[683,22687+29])
                                            Pexp_ident "unused_code_warnings" (src/deriving.ml[683,22687+9]..[683,22687+29])
                                      ]
                                ]
                              expression (src/deriving.ml[684,22717+9]..[684,22717+17])
                                Pexp_ident "warnings" (src/deriving.ml[684,22717+9]..[684,22717+17])
                              Some
                                expression (src/deriving.ml[685,22735+9]..[685,22735+23])
                                  Pexp_construct "::" (src/deriving.ml[685,22735+12]..[685,22735+14])
                                  Some
                                    expression (src/deriving.ml[685,22735+9]..[685,22735+23]) ghost
                                      Pexp_tuple
                                      [
                                        expression (src/deriving.ml[685,22735+9]..[685,22735+11])
                                          Pexp_constant PConst_int (60,None)
                                        expression (src/deriving.ml[685,22735+15]..[685,22735+23])
                                          Pexp_ident "warnings" (src/deriving.ml[685,22735+15]..[685,22735+23])
                                      ]
                        ]
                        expression (src/deriving.ml[687,22764+2]..[691,22913+45])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/deriving.ml[687,22764+6]..[687,22764+14])
                                Ppat_tuple
                                [
                                  pattern (src/deriving.ml[687,22764+6]..[687,22764+10])
                                    Ppat_var "wrap" (src/deriving.ml[687,22764+6]..[687,22764+10])
                                  pattern (src/deriving.ml[687,22764+12]..[687,22764+14])
                                    Ppat_var "sg" (src/deriving.ml[687,22764+12]..[687,22764+14])
                                ]
                              expression (src/deriving.ml[688,22781+4]..[689,22827+80])
                                Pexp_ifthenelse
                                expression (src/deriving.ml[688,22781+7]..[688,22781+29])
                                  Pexp_apply
                                  expression (src/deriving.ml[688,22781+7]..[688,22781+20])
                                    Pexp_ident "List.is_empty" (src/deriving.ml[688,22781+7]..[688,22781+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[688,22781+21]..[688,22781+29])
                                        Pexp_ident "warnings" (src/deriving.ml[688,22781+21]..[688,22781+29])
                                  ]
                                expression (src/deriving.ml[688,22781+35]..[688,22781+45])
                                  Pexp_tuple
                                  [
                                    expression (src/deriving.ml[688,22781+36]..[688,22781+40])
                                      Pexp_ident "hide" (src/deriving.ml[688,22781+36]..[688,22781+40])
                                    expression (src/deriving.ml[688,22781+42]..[688,22781+44])
                                      Pexp_ident "sg" (src/deriving.ml[688,22781+42]..[688,22781+44])
                                  ]
                                Some
                                  expression (src/deriving.ml[689,22827+9]..[689,22827+80])
                                    Pexp_tuple
                                    [
                                      expression (src/deriving.ml[689,22827+10]..[689,22827+14])
                                        Pexp_construct "true" (src/deriving.ml[689,22827+10]..[689,22827+14])
                                        None
                                      expression (src/deriving.ml[689,22827+16]..[689,22827+79])
                                        Pexp_construct "::" (src/deriving.ml[689,22827+74]..[689,22827+76])
                                        Some
                                          expression (src/deriving.ml[689,22827+16]..[689,22827+79]) ghost
                                            Pexp_tuple
                                            [
                                              expression (src/deriving.ml[689,22827+16]..[689,22827+73])
                                                Pexp_apply
                                                expression (src/deriving.ml[689,22827+16]..[689,22827+30])
                                                  Pexp_ident "psig_attribute" (src/deriving.ml[689,22827+16]..[689,22827+30])
                                                [
                                                  <arg>
                                                  Labelled "loc"
                                                    expression (src/deriving.ml[689,22827+32]..[689,22827+35])
                                                      Pexp_ident "loc" (src/deriving.ml[689,22827+32]..[689,22827+35])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/deriving.ml[689,22827+36]..[689,22827+73])
                                                      Pexp_apply
                                                      expression (src/deriving.ml[689,22827+37]..[689,22827+63])
                                                        Pexp_ident "disable_warnings_attribute" (src/deriving.ml[689,22827+37]..[689,22827+63])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/deriving.ml[689,22827+64]..[689,22827+72])
                                                            Pexp_ident "warnings" (src/deriving.ml[689,22827+64]..[689,22827+72])
                                                      ]
                                                ]
                                              expression (src/deriving.ml[689,22827+77]..[689,22827+79])
                                                Pexp_ident "sg" (src/deriving.ml[689,22827+77]..[689,22827+79])
                                            ]
                                    ]
                          ]
                          expression (src/deriving.ml[691,22913+2]..[691,22913+45])
                            Pexp_ifthenelse
                            expression (src/deriving.ml[691,22913+5]..[691,22913+9])
                              Pexp_ident "wrap" (src/deriving.ml[691,22913+5]..[691,22913+9])
                            expression (src/deriving.ml[691,22913+15]..[691,22913+37])
                              Pexp_apply
                              expression (src/deriving.ml[691,22913+15]..[691,22913+23])
                                Pexp_ident "wrap_sig" (src/deriving.ml[691,22913+15]..[691,22913+23])
                              [
                                <arg>
                                Labelled "loc"
                                  expression (src/deriving.ml[691,22913+25]..[691,22913+28])
                                    Pexp_ident "loc" (src/deriving.ml[691,22913+25]..[691,22913+28])
                                <arg>
                                Labelled "hide"
                                  expression (src/deriving.ml[691,22913+30]..[691,22913+34])
                                    Pexp_ident "hide" (src/deriving.ml[691,22913+30]..[691,22913+34])
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[691,22913+35]..[691,22913+37])
                                    Pexp_ident "sg" (src/deriving.ml[691,22913+35]..[691,22913+37])
                              ]
                            Some
                              expression (src/deriving.ml[691,22913+43]..[691,22913+45])
                                Pexp_ident "sg" (src/deriving.ml[691,22913+43]..[691,22913+45])
    ]
  structure_item (src/deriving.ml[694,23042+0]..[697,23176+59])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[694,23042+4]..[694,23042+12])
          Ppat_var "wrap_sig" (src/deriving.ml[694,23042+4]..[694,23042+12])
        expression (src/deriving.ml[694,23042+13]..[697,23176+59]) ghost
          Pexp_fun
          Labelled "loc"
          None
          pattern (src/deriving.ml[694,23042+14]..[694,23042+17])
            Ppat_var "loc" (src/deriving.ml[694,23042+14]..[694,23042+17])
          expression (src/deriving.ml[694,23042+18]..[697,23176+59]) ghost
            Pexp_fun
            Labelled "hide"
            None
            pattern (src/deriving.ml[694,23042+19]..[694,23042+23])
              Ppat_var "hide" (src/deriving.ml[694,23042+19]..[694,23042+23])
            expression (src/deriving.ml[694,23042+24]..[697,23176+59]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/deriving.ml[694,23042+24]..[694,23042+28])
                Ppat_var "list" (src/deriving.ml[694,23042+24]..[694,23042+28])
              expression (src/deriving.ml[695,23073+2]..[697,23176+59])
                Pexp_apply
                expression (src/deriving.ml[695,23073+2]..[695,23073+17])
                  Pexp_ident "List.concat_map" (src/deriving.ml[695,23073+2]..[695,23073+17])
                [
                  <arg>
                  Nolabel
                    expression (src/deriving.ml[695,23073+18]..[695,23073+22])
                      Pexp_ident "list" (src/deriving.ml[695,23073+18]..[695,23073+22])
                  <arg>
                  Labelled "f"
                    expression (src/deriving.ml[695,23073+26]..[697,23176+59])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/deriving.ml[695,23073+31]..[695,23073+62])
                        Ppat_record Closed
                        [
                          "items" (src/deriving.ml[695,23073+33]..[695,23073+38]) ghost
                            pattern (src/deriving.ml[695,23073+33]..[695,23073+38])
                              Ppat_var "items" (src/deriving.ml[695,23073+33]..[695,23073+38])
                          "unused_code_warnings" (src/deriving.ml[695,23073+40]..[695,23073+60]) ghost
                            pattern (src/deriving.ml[695,23073+40]..[695,23073+60])
                              Ppat_var "unused_code_warnings" (src/deriving.ml[695,23073+40]..[695,23073+60])
                        ]
                      expression (src/deriving.ml[696,23139+6]..[697,23176+58])
                        Pexp_ifthenelse
                        expression (src/deriving.ml[696,23139+9]..[696,23139+28])
                          Pexp_apply
                          expression (src/deriving.ml[696,23139+9]..[696,23139+22])
                            Pexp_ident "List.is_empty" (src/deriving.ml[696,23139+9]..[696,23139+22])
                          [
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[696,23139+23]..[696,23139+28])
                                Pexp_ident "items" (src/deriving.ml[696,23139+23]..[696,23139+28])
                          ]
                        expression (src/deriving.ml[696,23139+34]..[696,23139+36])
                          Pexp_construct "[]" (src/deriving.ml[696,23139+34]..[696,23139+36])
                          None
                        Some
                          expression (src/deriving.ml[697,23176+11]..[697,23176+58])
                            Pexp_apply
                            expression (src/deriving.ml[697,23176+11]..[697,23176+19])
                              Pexp_ident "wrap_sig" (src/deriving.ml[697,23176+11]..[697,23176+19])
                            [
                              <arg>
                              Labelled "loc"
                                expression (src/deriving.ml[697,23176+21]..[697,23176+24])
                                  Pexp_ident "loc" (src/deriving.ml[697,23176+21]..[697,23176+24])
                              <arg>
                              Labelled "hide"
                                expression (src/deriving.ml[697,23176+26]..[697,23176+30])
                                  Pexp_ident "hide" (src/deriving.ml[697,23176+26]..[697,23176+30])
                              <arg>
                              Labelled "unused_code_warnings"
                                expression (src/deriving.ml[697,23176+32]..[697,23176+52])
                                  Pexp_ident "unused_code_warnings" (src/deriving.ml[697,23176+32]..[697,23176+52])
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[697,23176+53]..[697,23176+58])
                                  Pexp_ident "items" (src/deriving.ml[697,23176+53]..[697,23176+58])
                            ]
                ]
    ]
  structure_item (src/deriving.ml[703,23454+0]..[716,23960+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[703,23454+4]..[703,23454+26])
          Ppat_var "types_used_by_deriving" (src/deriving.ml[703,23454+4]..[703,23454+26])
        expression (src/deriving.ml[703,23454+27]..[716,23960+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/deriving.ml[703,23454+27]..[703,23454+56])
            Ppat_constraint
            pattern (src/deriving.ml[703,23454+28]..[703,23454+31])
              Ppat_var "tds" (src/deriving.ml[703,23454+28]..[703,23454+31])
            core_type (src/deriving.ml[703,23454+34]..[703,23454+55])
              Ptyp_constr "list" (src/deriving.ml[703,23454+51]..[703,23454+55])
              [
                core_type (src/deriving.ml[703,23454+34]..[703,23454+50])
                  Ptyp_constr "type_declaration" (src/deriving.ml[703,23454+34]..[703,23454+50])
                  []
              ]
          expression (src/deriving.ml[703,23454+57]..[716,23960+12]) ghost
            Pexp_constraint
            expression (src/deriving.ml[704,23535+2]..[716,23960+12])
              Pexp_ifthenelse
              expression (src/deriving.ml[704,23535+5]..[704,23535+21])
                Pexp_apply
                expression (src/deriving.ml[704,23535+5]..[704,23535+18])
                  Pexp_ident "keep_w32_impl" (src/deriving.ml[704,23535+5]..[704,23535+18])
                [
                  <arg>
                  Nolabel
                    expression (src/deriving.ml[704,23535+19]..[704,23535+21])
                      Pexp_construct "()" (src/deriving.ml[704,23535+19]..[704,23535+21])
                      None
                ]
              expression (src/deriving.ml[704,23535+27]..[704,23535+29])
                Pexp_construct "[]" (src/deriving.ml[704,23535+27]..[704,23535+29])
                None
              Some
                expression (src/deriving.ml[706,23572+4]..[716,23960+12])
                  Pexp_apply
                  expression (src/deriving.ml[706,23572+4]..[706,23572+12])
                    Pexp_ident "List.map" (src/deriving.ml[706,23572+4]..[706,23572+12])
                  [
                    <arg>
                    Nolabel
                      expression (src/deriving.ml[706,23572+13]..[706,23572+16])
                        Pexp_ident "tds" (src/deriving.ml[706,23572+13]..[706,23572+16])
                    <arg>
                    Labelled "f"
                      expression (src/deriving.ml[706,23572+20]..[716,23960+12])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/deriving.ml[706,23572+25]..[706,23572+27])
                          Ppat_var "td" (src/deriving.ml[706,23572+25]..[706,23572+27])
                        expression (src/deriving.ml[707,23603+8]..[716,23960+11])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/deriving.ml[707,23603+12]..[707,23603+15])
                                Ppat_var "typ" (src/deriving.ml[707,23603+12]..[707,23603+15])
                              expression (src/deriving.ml[707,23603+18]..[707,23603+57])
                                Pexp_apply
                                expression (src/deriving.ml[707,23603+18]..[707,23603+54])
                                  Pexp_ident "Common.core_type_of_type_declaration" (src/deriving.ml[707,23603+18]..[707,23603+54])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[707,23603+55]..[707,23603+57])
                                      Pexp_ident "td" (src/deriving.ml[707,23603+55]..[707,23603+57])
                                ]
                          ]
                          expression (src/deriving.ml[708,23664+8]..[716,23960+11])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/deriving.ml[708,23664+12]..[708,23664+15])
                                  Ppat_var "loc" (src/deriving.ml[708,23664+12]..[708,23664+15])
                                expression (src/deriving.ml[708,23664+18]..[708,23664+30])
                                  Pexp_field
                                  expression (src/deriving.ml[708,23664+18]..[708,23664+20])
                                    Pexp_ident "td" (src/deriving.ml[708,23664+18]..[708,23664+20])
                                  "ptype_loc" (src/deriving.ml[708,23664+21]..[708,23664+30])
                            ]
                            expression (src/deriving.ml[709,23698+8]..[716,23960+11])
                              Pexp_apply
                              expression (src/deriving.ml[709,23698+8]..[709,23698+18])
                                Pexp_ident "pstr_value" (src/deriving.ml[709,23698+8]..[709,23698+18])
                              [
                                <arg>
                                Labelled "loc"
                                  expression (src/deriving.ml[709,23698+20]..[709,23698+23])
                                    Pexp_ident "loc" (src/deriving.ml[709,23698+20]..[709,23698+23])
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[709,23698+24]..[709,23698+36])
                                    Pexp_construct "Nonrecursive" (src/deriving.ml[709,23698+24]..[709,23698+36])
                                    None
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[710,23735+10]..[716,23960+11])
                                    Pexp_construct "::" (src/deriving.ml[711,23747+12]..[716,23960+11]) ghost
                                    Some
                                      expression (src/deriving.ml[711,23747+12]..[716,23960+11]) ghost
                                        Pexp_tuple
                                        [
                                          expression (src/deriving.ml[711,23747+12]..[715,23926+32])
                                            Pexp_apply
                                            expression (src/deriving.ml[711,23747+12]..[711,23747+25])
                                              Pexp_ident "value_binding" (src/deriving.ml[711,23747+12]..[711,23747+25])
                                            [
                                              <arg>
                                              Labelled "loc"
                                                expression (src/deriving.ml[711,23747+27]..[711,23747+30])
                                                  Pexp_ident "loc" (src/deriving.ml[711,23747+27]..[711,23747+30])
                                              <arg>
                                              Labelled "pat"
                                                expression (src/deriving.ml[711,23747+36]..[711,23747+51])
                                                  Pexp_apply
                                                  expression (src/deriving.ml[711,23747+37]..[711,23747+45])
                                                    Pexp_ident "ppat_any" (src/deriving.ml[711,23747+37]..[711,23747+45])
                                                  [
                                                    <arg>
                                                    Labelled "loc"
                                                      expression (src/deriving.ml[711,23747+47]..[711,23747+50])
                                                        Pexp_ident "loc" (src/deriving.ml[711,23747+47]..[711,23747+50])
                                                  ]
                                              <arg>
                                              Labelled "expr"
                                                expression (src/deriving.ml[713,23820+16]..[715,23926+32])
                                                  Pexp_apply
                                                  expression (src/deriving.ml[713,23820+17]..[713,23820+25])
                                                    Pexp_ident "pexp_fun" (src/deriving.ml[713,23820+17]..[713,23820+25])
                                                  [
                                                    <arg>
                                                    Labelled "loc"
                                                      expression (src/deriving.ml[713,23820+27]..[713,23820+30])
                                                        Pexp_ident "loc" (src/deriving.ml[713,23820+27]..[713,23820+30])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/deriving.ml[713,23820+31]..[713,23820+38])
                                                        Pexp_construct "Nolabel" (src/deriving.ml[713,23820+31]..[713,23820+38])
                                                        None
                                                    <arg>
                                                    Nolabel
                                                      expression (src/deriving.ml[713,23820+39]..[713,23820+43])
                                                        Pexp_construct "None" (src/deriving.ml[713,23820+39]..[713,23820+43])
                                                        None
                                                    <arg>
                                                    Nolabel
                                                      expression (src/deriving.ml[714,23864+19]..[714,23864+61])
                                                        Pexp_apply
                                                        expression (src/deriving.ml[714,23864+20]..[714,23864+35])
                                                          Pexp_ident "ppat_constraint" (src/deriving.ml[714,23864+20]..[714,23864+35])
                                                        [
                                                          <arg>
                                                          Labelled "loc"
                                                            expression (src/deriving.ml[714,23864+37]..[714,23864+40])
                                                              Pexp_ident "loc" (src/deriving.ml[714,23864+37]..[714,23864+40])
                                                          <arg>
                                                          Nolabel
                                                            expression (src/deriving.ml[714,23864+41]..[714,23864+56])
                                                              Pexp_apply
                                                              expression (src/deriving.ml[714,23864+42]..[714,23864+50])
                                                                Pexp_ident "ppat_any" (src/deriving.ml[714,23864+42]..[714,23864+50])
                                                              [
                                                                <arg>
                                                                Labelled "loc"
                                                                  expression (src/deriving.ml[714,23864+52]..[714,23864+55])
                                                                    Pexp_ident "loc" (src/deriving.ml[714,23864+52]..[714,23864+55])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (src/deriving.ml[714,23864+57]..[714,23864+60])
                                                              Pexp_ident "typ" (src/deriving.ml[714,23864+57]..[714,23864+60])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (src/deriving.ml[715,23926+19]..[715,23926+31])
                                                        Pexp_apply
                                                        expression (src/deriving.ml[715,23926+20]..[715,23926+25])
                                                          Pexp_ident "eunit" (src/deriving.ml[715,23926+20]..[715,23926+25])
                                                        [
                                                          <arg>
                                                          Labelled "loc"
                                                            expression (src/deriving.ml[715,23926+27]..[715,23926+30])
                                                              Pexp_ident "loc" (src/deriving.ml[715,23926+27]..[715,23926+30])
                                                        ]
                                                  ]
                                            ]
                                          expression (src/deriving.ml[716,23960+10]..[716,23960+11]) ghost
                                            Pexp_construct "[]" (src/deriving.ml[716,23960+10]..[716,23960+11]) ghost
                                            None
                                        ]
                              ]
                  ]
            core_type (src/deriving.ml[703,23454+59]..[703,23454+78])
              Ptyp_constr "list" (src/deriving.ml[703,23454+74]..[703,23454+78])
              [
                core_type (src/deriving.ml[703,23454+59]..[703,23454+73])
                  Ptyp_constr "structure_item" (src/deriving.ml[703,23454+59]..[703,23454+73])
                  []
              ]
    ]
  structure_item (src/deriving.ml[718,23974+0]..[719,24005+79])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[718,23974+4]..[718,23974+20])
          Ppat_var "merge_generators" (src/deriving.ml[718,23974+4]..[718,23974+20])
        expression (src/deriving.ml[718,23974+21]..[719,24005+79]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/deriving.ml[718,23974+21]..[718,23974+26])
            Ppat_var "field" (src/deriving.ml[718,23974+21]..[718,23974+26])
          expression (src/deriving.ml[718,23974+27]..[719,24005+79]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/deriving.ml[718,23974+27]..[718,23974+28])
              Ppat_var "l" (src/deriving.ml[718,23974+27]..[718,23974+28])
            expression (src/deriving.ml[719,24005+2]..[719,24005+79])
              Pexp_apply
              expression (src/deriving.ml[719,24005+51]..[719,24005+53])
                Pexp_ident "|>" (src/deriving.ml[719,24005+51]..[719,24005+53])
              [
                <arg>
                Nolabel
                  expression (src/deriving.ml[719,24005+2]..[719,24005+50])
                    Pexp_apply
                    expression (src/deriving.ml[719,24005+36]..[719,24005+38])
                      Pexp_ident "|>" (src/deriving.ml[719,24005+36]..[719,24005+38])
                    [
                      <arg>
                      Nolabel
                        expression (src/deriving.ml[719,24005+2]..[719,24005+35])
                          Pexp_apply
                          expression (src/deriving.ml[719,24005+2]..[719,24005+17])
                            Pexp_ident "List.filter_map" (src/deriving.ml[719,24005+2]..[719,24005+17])
                          [
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[719,24005+18]..[719,24005+19])
                                Pexp_ident "l" (src/deriving.ml[719,24005+18]..[719,24005+19])
                            <arg>
                            Labelled "f"
                              expression (src/deriving.ml[719,24005+23]..[719,24005+35])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/deriving.ml[719,24005+28]..[719,24005+29])
                                  Ppat_var "x" (src/deriving.ml[719,24005+28]..[719,24005+29])
                                expression (src/deriving.ml[719,24005+33]..[719,24005+34])
                                  Pexp_ident "x" (src/deriving.ml[719,24005+33]..[719,24005+34])
                          ]
                      <arg>
                      Nolabel
                        expression (src/deriving.ml[719,24005+39]..[719,24005+50])
                          Pexp_ident "List.concat" (src/deriving.ml[719,24005+39]..[719,24005+50])
                    ]
                <arg>
                Nolabel
                  expression (src/deriving.ml[719,24005+54]..[719,24005+79])
                    Pexp_apply
                    expression (src/deriving.ml[719,24005+54]..[719,24005+73])
                      Pexp_ident "Deriver.resolve_all" (src/deriving.ml[719,24005+54]..[719,24005+73])
                    [
                      <arg>
                      Nolabel
                        expression (src/deriving.ml[719,24005+74]..[719,24005+79])
                          Pexp_ident "field" (src/deriving.ml[719,24005+74]..[719,24005+79])
                    ]
              ]
    ]
  structure_item (src/deriving.ml[723,24261+0]..[730,24550+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[723,24261+4]..[723,24261+17])
          Ppat_var "merge_derived" (src/deriving.ml[723,24261+4]..[723,24261+17])
        expression (src/deriving.ml[723,24261+18]..[730,24550+28]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/deriving.ml[723,24261+18]..[723,24261+23])
            Ppat_var "lists" (src/deriving.ml[723,24261+18]..[723,24261+23])
          expression (src/deriving.ml[724,24287+2]..[730,24550+28])
            Pexp_apply
            expression (src/deriving.ml[724,24287+2]..[724,24287+17])
              Pexp_ident "List.fold_right" (src/deriving.ml[724,24287+2]..[724,24287+17])
            [
              <arg>
              Nolabel
                expression (src/deriving.ml[724,24287+18]..[724,24287+23])
                  Pexp_ident "lists" (src/deriving.ml[724,24287+18]..[724,24287+23])
              <arg>
              Labelled "init"
                expression (src/deriving.ml[724,24287+30]..[724,24287+32])
                  Pexp_construct "[]" (src/deriving.ml[724,24287+30]..[724,24287+32])
                  None
              <arg>
              Labelled "f"
                expression (src/deriving.ml[724,24287+36]..[730,24550+28])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/deriving.ml[724,24287+41]..[724,24287+48])
                    Ppat_var "derived" (src/deriving.ml[724,24287+41]..[724,24287+48])
                  expression (src/deriving.ml[724,24287+49]..[730,24550+27]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/deriving.ml[724,24287+49]..[724,24287+52])
                      Ppat_var "acc" (src/deriving.ml[724,24287+49]..[724,24287+52])
                    expression (src/deriving.ml[725,24343+6]..[730,24550+27])
                      Pexp_match
                      expression (src/deriving.ml[725,24343+12]..[725,24343+15])
                        Pexp_ident "acc" (src/deriving.ml[725,24343+12]..[725,24343+15])
                      [
                        <case>
                          pattern (src/deriving.ml[726,24364+8]..[726,24364+23])
                            Ppat_construct "::" (src/deriving.ml[726,24364+14]..[726,24364+16])
                            Some
                              pattern (src/deriving.ml[726,24364+8]..[726,24364+23]) ghost
                                Ppat_tuple
                                [
                                  pattern (src/deriving.ml[726,24364+8]..[726,24364+13])
                                    Ppat_var "other" (src/deriving.ml[726,24364+8]..[726,24364+13])
                                  pattern (src/deriving.ml[726,24364+17]..[726,24364+23])
                                    Ppat_var "others" (src/deriving.ml[726,24364+17]..[726,24364+23])
                                ]
                          <when>
                            expression (src/deriving.ml[727,24388+13]..[727,24388+79])
                              Pexp_apply
                              expression (src/deriving.ml[727,24388+13]..[727,24388+23])
                                Pexp_ident "Bool.equal" (src/deriving.ml[727,24388+13]..[727,24388+23])
                              [
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[727,24388+24]..[727,24388+52])
                                    Pexp_field
                                    expression (src/deriving.ml[727,24388+24]..[727,24388+31])
                                      Pexp_ident "derived" (src/deriving.ml[727,24388+24]..[727,24388+31])
                                    "unused_code_warnings" (src/deriving.ml[727,24388+32]..[727,24388+52])
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[727,24388+53]..[727,24388+79])
                                    Pexp_field
                                    expression (src/deriving.ml[727,24388+53]..[727,24388+58])
                                      Pexp_ident "other" (src/deriving.ml[727,24388+53]..[727,24388+58])
                                    "unused_code_warnings" (src/deriving.ml[727,24388+59]..[727,24388+79])
                              ]
                          expression (src/deriving.ml[729,24479+10]..[729,24479+70])
                            Pexp_construct "::" (src/deriving.ml[729,24479+61]..[729,24479+63])
                            Some
                              expression (src/deriving.ml[729,24479+10]..[729,24479+70]) ghost
                                Pexp_tuple
                                [
                                  expression (src/deriving.ml[729,24479+10]..[729,24479+60])
                                    Pexp_record
                                    [
                                      "items" (src/deriving.ml[729,24479+23]..[729,24479+28])
                                        expression (src/deriving.ml[729,24479+31]..[729,24479+58])
                                          Pexp_apply
                                          expression (src/deriving.ml[729,24479+45]..[729,24479+46])
                                            Pexp_ident "@" (src/deriving.ml[729,24479+45]..[729,24479+46])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/deriving.ml[729,24479+31]..[729,24479+44])
                                                Pexp_field
                                                expression (src/deriving.ml[729,24479+31]..[729,24479+38])
                                                  Pexp_ident "derived" (src/deriving.ml[729,24479+31]..[729,24479+38])
                                                "items" (src/deriving.ml[729,24479+39]..[729,24479+44])
                                            <arg>
                                            Nolabel
                                              expression (src/deriving.ml[729,24479+47]..[729,24479+58])
                                                Pexp_field
                                                expression (src/deriving.ml[729,24479+47]..[729,24479+52])
                                                  Pexp_ident "other" (src/deriving.ml[729,24479+47]..[729,24479+52])
                                                "items" (src/deriving.ml[729,24479+53]..[729,24479+58])
                                          ]
                                    ]
                                    Some
                                      expression (src/deriving.ml[729,24479+12]..[729,24479+17])
                                        Pexp_ident "other" (src/deriving.ml[729,24479+12]..[729,24479+17])
                                  expression (src/deriving.ml[729,24479+64]..[729,24479+70])
                                    Pexp_ident "others" (src/deriving.ml[729,24479+64]..[729,24479+70])
                                ]
                        <case>
                          pattern (src/deriving.ml[730,24550+8]..[730,24550+9])
                            Ppat_any
                          expression (src/deriving.ml[730,24550+13]..[730,24550+27])
                            Pexp_construct "::" (src/deriving.ml[730,24550+21]..[730,24550+23])
                            Some
                              expression (src/deriving.ml[730,24550+13]..[730,24550+27]) ghost
                                Pexp_tuple
                                [
                                  expression (src/deriving.ml[730,24550+13]..[730,24550+20])
                                    Pexp_ident "derived" (src/deriving.ml[730,24550+13]..[730,24550+20])
                                  expression (src/deriving.ml[730,24550+24]..[730,24550+27])
                                    Pexp_ident "acc" (src/deriving.ml[730,24550+24]..[730,24550+27])
                                ]
                      ]
            ]
    ]
  structure_item (src/deriving.ml[732,24580+0]..[751,25319+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[732,24580+4]..[732,24580+25])
          Ppat_var "expand_str_type_decls" (src/deriving.ml[732,24580+4]..[732,24580+25])
        expression (src/deriving.ml[732,24580+26]..[751,25319+13]) ghost
          Pexp_fun
          Labelled "ctxt"
          None
          pattern (src/deriving.ml[732,24580+27]..[732,24580+31])
            Ppat_var "ctxt" (src/deriving.ml[732,24580+27]..[732,24580+31])
          expression (src/deriving.ml[732,24580+32]..[751,25319+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/deriving.ml[732,24580+32]..[732,24580+40])
              Ppat_var "rec_flag" (src/deriving.ml[732,24580+32]..[732,24580+40])
            expression (src/deriving.ml[732,24580+41]..[751,25319+13]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/deriving.ml[732,24580+41]..[732,24580+44])
                Ppat_var "tds" (src/deriving.ml[732,24580+41]..[732,24580+44])
              expression (src/deriving.ml[732,24580+45]..[751,25319+13]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (src/deriving.ml[732,24580+45]..[732,24580+51])
                  Ppat_var "values" (src/deriving.ml[732,24580+45]..[732,24580+51])
                expression (src/deriving.ml[733,24634+2]..[751,25319+13])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/deriving.ml[733,24634+6]..[733,24634+23])
                        Ppat_tuple
                        [
                          pattern (src/deriving.ml[733,24634+6]..[733,24634+16])
                            Ppat_var "generators" (src/deriving.ml[733,24634+6]..[733,24634+16])
                          pattern (src/deriving.ml[733,24634+18]..[733,24634+23])
                            Ppat_var "l_err" (src/deriving.ml[733,24634+18]..[733,24634+23])
                        ]
                      expression (src/deriving.ml[733,24634+26]..[733,24634+77])
                        Pexp_apply
                        expression (src/deriving.ml[733,24634+26]..[733,24634+42])
                          Pexp_ident "merge_generators" (src/deriving.ml[733,24634+26]..[733,24634+42])
                        [
                          <arg>
                          Nolabel
                            expression (src/deriving.ml[733,24634+43]..[733,24634+70])
                              Pexp_ident "Deriver.Field.str_type_decl" (src/deriving.ml[733,24634+43]..[733,24634+70])
                          <arg>
                          Nolabel
                            expression (src/deriving.ml[733,24634+71]..[733,24634+77])
                              Pexp_ident "values" (src/deriving.ml[733,24634+71]..[733,24634+77])
                        ]
                  ]
                  expression (src/deriving.ml[734,24715+2]..[751,25319+13])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/deriving.ml[734,24715+6]..[734,24715+11])
                          Ppat_var "l_err" (src/deriving.ml[734,24715+6]..[734,24715+11])
                        expression (src/deriving.ml[735,24729+4]..[738,24833+11])
                          Pexp_apply
                          expression (src/deriving.ml[735,24729+4]..[735,24729+12])
                            Pexp_ident "List.map" (src/deriving.ml[735,24729+4]..[735,24729+12])
                          [
                            <arg>
                            Labelled "f"
                              expression (src/deriving.ml[736,24742+9]..[737,24763+69])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/deriving.ml[736,24742+14]..[736,24742+17])
                                  Ppat_var "err" (src/deriving.ml[736,24742+14]..[736,24742+17])
                                expression (src/deriving.ml[737,24763+8]..[737,24763+68])
                                  Pexp_apply
                                  expression (src/deriving.ml[737,24763+8]..[737,24763+42])
                                    Pexp_ident "Ast_builder.Default.pstr_extension" (src/deriving.ml[737,24763+8]..[737,24763+42])
                                  [
                                    <arg>
                                    Labelled "loc"
                                      expression (src/deriving.ml[737,24763+48]..[737,24763+61])
                                        Pexp_ident "Location.none" (src/deriving.ml[737,24763+48]..[737,24763+61])
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[737,24763+62]..[737,24763+65])
                                        Pexp_ident "err" (src/deriving.ml[737,24763+62]..[737,24763+65])
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[737,24763+66]..[737,24763+68])
                                        Pexp_construct "[]" (src/deriving.ml[737,24763+66]..[737,24763+68])
                                        None
                                  ]
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[738,24833+6]..[738,24833+11])
                                Pexp_ident "l_err" (src/deriving.ml[738,24833+6]..[738,24833+11])
                          ]
                    ]
                    expression (src/deriving.ml[742,24963+2]..[751,25319+13])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/deriving.ml[742,24963+6]..[742,24963+15])
                            Ppat_var "generated" (src/deriving.ml[742,24963+6]..[742,24963+15])
                          expression (src/deriving.ml[743,24981+4]..[746,25166+20])
                            Pexp_apply
                            expression (src/deriving.ml[746,25166+4]..[746,25166+6])
                              Pexp_ident "|>" (src/deriving.ml[746,25166+4]..[746,25166+6])
                            [
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[743,24981+4]..[745,25122+43])
                                  Pexp_construct "::" (src/deriving.ml[744,25062+4]..[744,25062+6])
                                  Some
                                    expression (src/deriving.ml[743,24981+4]..[745,25122+43]) ghost
                                      Pexp_tuple
                                      [
                                        expression (src/deriving.ml[743,24981+4]..[743,24981+80])
                                          Pexp_record
                                          [
                                            "items" (src/deriving.ml[743,24981+6]..[743,24981+11])
                                              expression (src/deriving.ml[743,24981+14]..[743,24981+48])
                                                Pexp_apply
                                                expression (src/deriving.ml[743,24981+41]..[743,24981+42])
                                                  Pexp_ident "@" (src/deriving.ml[743,24981+41]..[743,24981+42])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/deriving.ml[743,24981+14]..[743,24981+40])
                                                      Pexp_apply
                                                      expression (src/deriving.ml[743,24981+14]..[743,24981+36])
                                                        Pexp_ident "types_used_by_deriving" (src/deriving.ml[743,24981+14]..[743,24981+36])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/deriving.ml[743,24981+37]..[743,24981+40])
                                                            Pexp_ident "tds" (src/deriving.ml[743,24981+37]..[743,24981+40])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (src/deriving.ml[743,24981+43]..[743,24981+48])
                                                      Pexp_ident "l_err" (src/deriving.ml[743,24981+43]..[743,24981+48])
                                                ]
                                            "unused_code_warnings" (src/deriving.ml[743,24981+50]..[743,24981+70])
                                              expression (src/deriving.ml[743,24981+73]..[743,24981+78])
                                                Pexp_construct "false" (src/deriving.ml[743,24981+73]..[743,24981+78])
                                                None
                                          ]
                                          None
                                        expression (src/deriving.ml[744,25062+7]..[745,25122+43])
                                          Pexp_apply
                                          expression (src/deriving.ml[744,25062+7]..[744,25062+26])
                                            Pexp_ident "Generator.apply_all" (src/deriving.ml[744,25062+7]..[744,25062+26])
                                          [
                                            <arg>
                                            Labelled "ctxt"
                                              expression (src/deriving.ml[744,25062+28]..[744,25062+32])
                                                Pexp_ident "ctxt" (src/deriving.ml[744,25062+28]..[744,25062+32])
                                            <arg>
                                            Nolabel
                                              expression (src/deriving.ml[744,25062+33]..[744,25062+48])
                                                Pexp_tuple
                                                [
                                                  expression (src/deriving.ml[744,25062+34]..[744,25062+42])
                                                    Pexp_ident "rec_flag" (src/deriving.ml[744,25062+34]..[744,25062+42])
                                                  expression (src/deriving.ml[744,25062+44]..[744,25062+47])
                                                    Pexp_ident "tds" (src/deriving.ml[744,25062+44]..[744,25062+47])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (src/deriving.ml[744,25062+49]..[744,25062+59])
                                                Pexp_ident "generators" (src/deriving.ml[744,25062+49]..[744,25062+59])
                                            <arg>
                                            Nolabel
                                              expression (src/deriving.ml[745,25122+9]..[745,25122+43])
                                                Pexp_ident "Ast_builder.Default.pstr_extension" (src/deriving.ml[745,25122+9]..[745,25122+43])
                                          ]
                                      ]
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[746,25166+7]..[746,25166+20])
                                  Pexp_ident "merge_derived" (src/deriving.ml[746,25166+7]..[746,25166+20])
                            ]
                      ]
                      expression (src/deriving.ml[748,25192+2]..[751,25319+13])
                        Pexp_apply
                        expression (src/deriving.ml[748,25192+2]..[748,25192+10])
                          Pexp_ident "wrap_str" (src/deriving.ml[748,25192+2]..[748,25192+10])
                        [
                          <arg>
                          Labelled "loc"
                            expression (src/deriving.ml[749,25203+9]..[749,25203+58])
                              Pexp_apply
                              expression (src/deriving.ml[749,25203+10]..[749,25203+52])
                                Pexp_ident "Expansion_context.Deriver.derived_item_loc" (src/deriving.ml[749,25203+10]..[749,25203+52])
                              [
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[749,25203+53]..[749,25203+57])
                                    Pexp_ident "ctxt" (src/deriving.ml[749,25203+53]..[749,25203+57])
                              ]
                          <arg>
                          Labelled "hide"
                            expression (src/deriving.ml[750,25262+10]..[750,25262+56])
                              Pexp_apply
                              expression (src/deriving.ml[750,25262+15]..[750,25262+17])
                                Pexp_ident "@@" (src/deriving.ml[750,25262+15]..[750,25262+17])
                              [
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[750,25262+11]..[750,25262+14])
                                    Pexp_ident "not" (src/deriving.ml[750,25262+11]..[750,25262+14])
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[750,25262+18]..[750,25262+55])
                                    Pexp_apply
                                    expression (src/deriving.ml[750,25262+18]..[750,25262+50])
                                      Pexp_ident "Expansion_context.Deriver.inline" (src/deriving.ml[750,25262+18]..[750,25262+50])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/deriving.ml[750,25262+51]..[750,25262+55])
                                          Pexp_ident "ctxt" (src/deriving.ml[750,25262+51]..[750,25262+55])
                                    ]
                              ]
                          <arg>
                          Nolabel
                            expression (src/deriving.ml[751,25319+4]..[751,25319+13])
                              Pexp_ident "generated" (src/deriving.ml[751,25319+4]..[751,25319+13])
                        ]
    ]
  structure_item (src/deriving.ml[753,25334+0]..[770,25931+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[753,25334+4]..[753,25334+25])
          Ppat_var "expand_sig_type_decls" (src/deriving.ml[753,25334+4]..[753,25334+25])
        expression (src/deriving.ml[753,25334+26]..[770,25931+13]) ghost
          Pexp_fun
          Labelled "ctxt"
          None
          pattern (src/deriving.ml[753,25334+27]..[753,25334+31])
            Ppat_var "ctxt" (src/deriving.ml[753,25334+27]..[753,25334+31])
          expression (src/deriving.ml[753,25334+32]..[770,25931+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/deriving.ml[753,25334+32]..[753,25334+40])
              Ppat_var "rec_flag" (src/deriving.ml[753,25334+32]..[753,25334+40])
            expression (src/deriving.ml[753,25334+41]..[770,25931+13]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/deriving.ml[753,25334+41]..[753,25334+44])
                Ppat_var "tds" (src/deriving.ml[753,25334+41]..[753,25334+44])
              expression (src/deriving.ml[753,25334+45]..[770,25931+13]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (src/deriving.ml[753,25334+45]..[753,25334+51])
                  Ppat_var "values" (src/deriving.ml[753,25334+45]..[753,25334+51])
                expression (src/deriving.ml[754,25388+2]..[770,25931+13])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/deriving.ml[754,25388+6]..[754,25388+23])
                        Ppat_tuple
                        [
                          pattern (src/deriving.ml[754,25388+6]..[754,25388+16])
                            Ppat_var "generators" (src/deriving.ml[754,25388+6]..[754,25388+16])
                          pattern (src/deriving.ml[754,25388+18]..[754,25388+23])
                            Ppat_var "l_err" (src/deriving.ml[754,25388+18]..[754,25388+23])
                        ]
                      expression (src/deriving.ml[754,25388+26]..[754,25388+77])
                        Pexp_apply
                        expression (src/deriving.ml[754,25388+26]..[754,25388+42])
                          Pexp_ident "merge_generators" (src/deriving.ml[754,25388+26]..[754,25388+42])
                        [
                          <arg>
                          Nolabel
                            expression (src/deriving.ml[754,25388+43]..[754,25388+70])
                              Pexp_ident "Deriver.Field.sig_type_decl" (src/deriving.ml[754,25388+43]..[754,25388+70])
                          <arg>
                          Nolabel
                            expression (src/deriving.ml[754,25388+71]..[754,25388+77])
                              Pexp_ident "values" (src/deriving.ml[754,25388+71]..[754,25388+77])
                        ]
                  ]
                  expression (src/deriving.ml[755,25469+2]..[770,25931+13])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/deriving.ml[755,25469+6]..[755,25469+11])
                          Ppat_var "l_err" (src/deriving.ml[755,25469+6]..[755,25469+11])
                        expression (src/deriving.ml[756,25483+4]..[759,25587+11])
                          Pexp_apply
                          expression (src/deriving.ml[756,25483+4]..[756,25483+12])
                            Pexp_ident "List.map" (src/deriving.ml[756,25483+4]..[756,25483+12])
                          [
                            <arg>
                            Labelled "f"
                              expression (src/deriving.ml[757,25496+9]..[758,25517+69])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/deriving.ml[757,25496+14]..[757,25496+17])
                                  Ppat_var "err" (src/deriving.ml[757,25496+14]..[757,25496+17])
                                expression (src/deriving.ml[758,25517+8]..[758,25517+68])
                                  Pexp_apply
                                  expression (src/deriving.ml[758,25517+8]..[758,25517+42])
                                    Pexp_ident "Ast_builder.Default.psig_extension" (src/deriving.ml[758,25517+8]..[758,25517+42])
                                  [
                                    <arg>
                                    Labelled "loc"
                                      expression (src/deriving.ml[758,25517+48]..[758,25517+61])
                                        Pexp_ident "Location.none" (src/deriving.ml[758,25517+48]..[758,25517+61])
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[758,25517+62]..[758,25517+65])
                                        Pexp_ident "err" (src/deriving.ml[758,25517+62]..[758,25517+65])
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[758,25517+66]..[758,25517+68])
                                        Pexp_construct "[]" (src/deriving.ml[758,25517+66]..[758,25517+68])
                                        None
                                  ]
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[759,25587+6]..[759,25587+11])
                                Pexp_ident "l_err" (src/deriving.ml[759,25587+6]..[759,25587+11])
                          ]
                    ]
                    expression (src/deriving.ml[761,25604+2]..[770,25931+13])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/deriving.ml[761,25604+6]..[761,25604+15])
                            Ppat_var "generated" (src/deriving.ml[761,25604+6]..[761,25604+15])
                          expression (src/deriving.ml[762,25622+4]..[765,25778+20])
                            Pexp_apply
                            expression (src/deriving.ml[765,25778+4]..[765,25778+6])
                              Pexp_ident "|>" (src/deriving.ml[765,25778+4]..[765,25778+6])
                            [
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[762,25622+4]..[764,25734+43])
                                  Pexp_construct "::" (src/deriving.ml[763,25674+4]..[763,25674+6])
                                  Some
                                    expression (src/deriving.ml[762,25622+4]..[764,25734+43]) ghost
                                      Pexp_tuple
                                      [
                                        expression (src/deriving.ml[762,25622+4]..[762,25622+51])
                                          Pexp_record
                                          [
                                            "items" (src/deriving.ml[762,25622+6]..[762,25622+11])
                                              expression (src/deriving.ml[762,25622+14]..[762,25622+19])
                                                Pexp_ident "l_err" (src/deriving.ml[762,25622+14]..[762,25622+19])
                                            "unused_code_warnings" (src/deriving.ml[762,25622+21]..[762,25622+41])
                                              expression (src/deriving.ml[762,25622+44]..[762,25622+49])
                                                Pexp_construct "false" (src/deriving.ml[762,25622+44]..[762,25622+49])
                                                None
                                          ]
                                          None
                                        expression (src/deriving.ml[763,25674+7]..[764,25734+43])
                                          Pexp_apply
                                          expression (src/deriving.ml[763,25674+7]..[763,25674+26])
                                            Pexp_ident "Generator.apply_all" (src/deriving.ml[763,25674+7]..[763,25674+26])
                                          [
                                            <arg>
                                            Labelled "ctxt"
                                              expression (src/deriving.ml[763,25674+28]..[763,25674+32])
                                                Pexp_ident "ctxt" (src/deriving.ml[763,25674+28]..[763,25674+32])
                                            <arg>
                                            Nolabel
                                              expression (src/deriving.ml[763,25674+33]..[763,25674+48])
                                                Pexp_tuple
                                                [
                                                  expression (src/deriving.ml[763,25674+34]..[763,25674+42])
                                                    Pexp_ident "rec_flag" (src/deriving.ml[763,25674+34]..[763,25674+42])
                                                  expression (src/deriving.ml[763,25674+44]..[763,25674+47])
                                                    Pexp_ident "tds" (src/deriving.ml[763,25674+44]..[763,25674+47])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (src/deriving.ml[763,25674+49]..[763,25674+59])
                                                Pexp_ident "generators" (src/deriving.ml[763,25674+49]..[763,25674+59])
                                            <arg>
                                            Nolabel
                                              expression (src/deriving.ml[764,25734+9]..[764,25734+43])
                                                Pexp_ident "Ast_builder.Default.psig_extension" (src/deriving.ml[764,25734+9]..[764,25734+43])
                                          ]
                                      ]
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[765,25778+7]..[765,25778+20])
                                  Pexp_ident "merge_derived" (src/deriving.ml[765,25778+7]..[765,25778+20])
                            ]
                      ]
                      expression (src/deriving.ml[767,25804+2]..[770,25931+13])
                        Pexp_apply
                        expression (src/deriving.ml[767,25804+2]..[767,25804+10])
                          Pexp_ident "wrap_sig" (src/deriving.ml[767,25804+2]..[767,25804+10])
                        [
                          <arg>
                          Labelled "loc"
                            expression (src/deriving.ml[768,25815+9]..[768,25815+58])
                              Pexp_apply
                              expression (src/deriving.ml[768,25815+10]..[768,25815+52])
                                Pexp_ident "Expansion_context.Deriver.derived_item_loc" (src/deriving.ml[768,25815+10]..[768,25815+52])
                              [
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[768,25815+53]..[768,25815+57])
                                    Pexp_ident "ctxt" (src/deriving.ml[768,25815+53]..[768,25815+57])
                              ]
                          <arg>
                          Labelled "hide"
                            expression (src/deriving.ml[769,25874+10]..[769,25874+56])
                              Pexp_apply
                              expression (src/deriving.ml[769,25874+15]..[769,25874+17])
                                Pexp_ident "@@" (src/deriving.ml[769,25874+15]..[769,25874+17])
                              [
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[769,25874+11]..[769,25874+14])
                                    Pexp_ident "not" (src/deriving.ml[769,25874+11]..[769,25874+14])
                                <arg>
                                Nolabel
                                  expression (src/deriving.ml[769,25874+18]..[769,25874+55])
                                    Pexp_apply
                                    expression (src/deriving.ml[769,25874+18]..[769,25874+50])
                                      Pexp_ident "Expansion_context.Deriver.inline" (src/deriving.ml[769,25874+18]..[769,25874+50])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/deriving.ml[769,25874+51]..[769,25874+55])
                                          Pexp_ident "ctxt" (src/deriving.ml[769,25874+51]..[769,25874+55])
                                    ]
                              ]
                          <arg>
                          Nolabel
                            expression (src/deriving.ml[770,25931+4]..[770,25931+13])
                              Pexp_ident "generated" (src/deriving.ml[770,25931+4]..[770,25931+13])
                        ]
    ]
  structure_item (src/deriving.ml[772,25946+0]..[791,26552+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[772,25946+4]..[772,25946+31])
          Ppat_var "expand_str_module_type_decl" (src/deriving.ml[772,25946+4]..[772,25946+31])
        expression (src/deriving.ml[772,25946+32]..[791,26552+13]) ghost
          Pexp_fun
          Labelled "ctxt"
          None
          pattern (src/deriving.ml[772,25946+33]..[772,25946+37])
            Ppat_var "ctxt" (src/deriving.ml[772,25946+33]..[772,25946+37])
          expression (src/deriving.ml[772,25946+38]..[791,26552+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/deriving.ml[772,25946+38]..[772,25946+41])
              Ppat_var "mtd" (src/deriving.ml[772,25946+38]..[772,25946+41])
            expression (src/deriving.ml[772,25946+42]..[791,26552+13]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/deriving.ml[772,25946+42]..[772,25946+52])
                Ppat_var "generators" (src/deriving.ml[772,25946+42]..[772,25946+52])
              expression (src/deriving.ml[773,26001+2]..[791,26552+13])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/deriving.ml[773,26001+6]..[773,26001+23])
                      Ppat_tuple
                      [
                        pattern (src/deriving.ml[773,26001+6]..[773,26001+16])
                          Ppat_var "generators" (src/deriving.ml[773,26001+6]..[773,26001+16])
                        pattern (src/deriving.ml[773,26001+18]..[773,26001+23])
                          Ppat_var "l_err" (src/deriving.ml[773,26001+18]..[773,26001+23])
                      ]
                    expression (src/deriving.ml[774,26027+4]..[774,26027+69])
                      Pexp_apply
                      expression (src/deriving.ml[774,26027+4]..[774,26027+23])
                        Pexp_ident "Deriver.resolve_all" (src/deriving.ml[774,26027+4]..[774,26027+23])
                      [
                        <arg>
                        Nolabel
                          expression (src/deriving.ml[774,26027+24]..[774,26027+58])
                            Pexp_ident "Deriver.Field.str_module_type_decl" (src/deriving.ml[774,26027+24]..[774,26027+58])
                        <arg>
                        Nolabel
                          expression (src/deriving.ml[774,26027+59]..[774,26027+69])
                            Pexp_ident "generators" (src/deriving.ml[774,26027+59]..[774,26027+69])
                      ]
                ]
                expression (src/deriving.ml[776,26102+2]..[791,26552+13])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/deriving.ml[776,26102+6]..[776,26102+11])
                        Ppat_var "l_err" (src/deriving.ml[776,26102+6]..[776,26102+11])
                      expression (src/deriving.ml[777,26116+4]..[780,26220+11])
                        Pexp_apply
                        expression (src/deriving.ml[777,26116+4]..[777,26116+12])
                          Pexp_ident "List.map" (src/deriving.ml[777,26116+4]..[777,26116+12])
                        [
                          <arg>
                          Labelled "f"
                            expression (src/deriving.ml[778,26129+9]..[779,26150+69])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/deriving.ml[778,26129+14]..[778,26129+17])
                                Ppat_var "err" (src/deriving.ml[778,26129+14]..[778,26129+17])
                              expression (src/deriving.ml[779,26150+8]..[779,26150+68])
                                Pexp_apply
                                expression (src/deriving.ml[779,26150+8]..[779,26150+42])
                                  Pexp_ident "Ast_builder.Default.pstr_extension" (src/deriving.ml[779,26150+8]..[779,26150+42])
                                [
                                  <arg>
                                  Labelled "loc"
                                    expression (src/deriving.ml[779,26150+48]..[779,26150+61])
                                      Pexp_ident "Location.none" (src/deriving.ml[779,26150+48]..[779,26150+61])
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[779,26150+62]..[779,26150+65])
                                      Pexp_ident "err" (src/deriving.ml[779,26150+62]..[779,26150+65])
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[779,26150+66]..[779,26150+68])
                                      Pexp_construct "[]" (src/deriving.ml[779,26150+66]..[779,26150+68])
                                      None
                                ]
                          <arg>
                          Nolabel
                            expression (src/deriving.ml[780,26220+6]..[780,26220+11])
                              Pexp_ident "l_err" (src/deriving.ml[780,26220+6]..[780,26220+11])
                        ]
                  ]
                  expression (src/deriving.ml[782,26237+2]..[791,26552+13])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/deriving.ml[782,26237+6]..[782,26237+15])
                          Ppat_var "generated" (src/deriving.ml[782,26237+6]..[782,26237+15])
                        expression (src/deriving.ml[783,26255+4]..[786,26399+20])
                          Pexp_apply
                          expression (src/deriving.ml[786,26399+4]..[786,26399+6])
                            Pexp_ident "|>" (src/deriving.ml[786,26399+4]..[786,26399+6])
                          [
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[783,26255+4]..[785,26355+43])
                                Pexp_construct "::" (src/deriving.ml[784,26307+4]..[784,26307+6])
                                Some
                                  expression (src/deriving.ml[783,26255+4]..[785,26355+43]) ghost
                                    Pexp_tuple
                                    [
                                      expression (src/deriving.ml[783,26255+4]..[783,26255+51])
                                        Pexp_record
                                        [
                                          "items" (src/deriving.ml[783,26255+6]..[783,26255+11])
                                            expression (src/deriving.ml[783,26255+14]..[783,26255+19])
                                              Pexp_ident "l_err" (src/deriving.ml[783,26255+14]..[783,26255+19])
                                          "unused_code_warnings" (src/deriving.ml[783,26255+21]..[783,26255+41])
                                            expression (src/deriving.ml[783,26255+44]..[783,26255+49])
                                              Pexp_construct "false" (src/deriving.ml[783,26255+44]..[783,26255+49])
                                              None
                                        ]
                                        None
                                      expression (src/deriving.ml[784,26307+7]..[785,26355+43])
                                        Pexp_apply
                                        expression (src/deriving.ml[784,26307+7]..[784,26307+26])
                                          Pexp_ident "Generator.apply_all" (src/deriving.ml[784,26307+7]..[784,26307+26])
                                        [
                                          <arg>
                                          Labelled "ctxt"
                                            expression (src/deriving.ml[784,26307+28]..[784,26307+32])
                                              Pexp_ident "ctxt" (src/deriving.ml[784,26307+28]..[784,26307+32])
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[784,26307+33]..[784,26307+36])
                                              Pexp_ident "mtd" (src/deriving.ml[784,26307+33]..[784,26307+36])
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[784,26307+37]..[784,26307+47])
                                              Pexp_ident "generators" (src/deriving.ml[784,26307+37]..[784,26307+47])
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[785,26355+9]..[785,26355+43])
                                              Pexp_ident "Ast_builder.Default.pstr_extension" (src/deriving.ml[785,26355+9]..[785,26355+43])
                                        ]
                                    ]
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[786,26399+7]..[786,26399+20])
                                Pexp_ident "merge_derived" (src/deriving.ml[786,26399+7]..[786,26399+20])
                          ]
                    ]
                    expression (src/deriving.ml[788,26425+2]..[791,26552+13])
                      Pexp_apply
                      expression (src/deriving.ml[788,26425+2]..[788,26425+10])
                        Pexp_ident "wrap_str" (src/deriving.ml[788,26425+2]..[788,26425+10])
                      [
                        <arg>
                        Labelled "loc"
                          expression (src/deriving.ml[789,26436+9]..[789,26436+58])
                            Pexp_apply
                            expression (src/deriving.ml[789,26436+10]..[789,26436+52])
                              Pexp_ident "Expansion_context.Deriver.derived_item_loc" (src/deriving.ml[789,26436+10]..[789,26436+52])
                            [
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[789,26436+53]..[789,26436+57])
                                  Pexp_ident "ctxt" (src/deriving.ml[789,26436+53]..[789,26436+57])
                            ]
                        <arg>
                        Labelled "hide"
                          expression (src/deriving.ml[790,26495+10]..[790,26495+56])
                            Pexp_apply
                            expression (src/deriving.ml[790,26495+15]..[790,26495+17])
                              Pexp_ident "@@" (src/deriving.ml[790,26495+15]..[790,26495+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[790,26495+11]..[790,26495+14])
                                  Pexp_ident "not" (src/deriving.ml[790,26495+11]..[790,26495+14])
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[790,26495+18]..[790,26495+55])
                                  Pexp_apply
                                  expression (src/deriving.ml[790,26495+18]..[790,26495+50])
                                    Pexp_ident "Expansion_context.Deriver.inline" (src/deriving.ml[790,26495+18]..[790,26495+50])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[790,26495+51]..[790,26495+55])
                                        Pexp_ident "ctxt" (src/deriving.ml[790,26495+51]..[790,26495+55])
                                  ]
                            ]
                        <arg>
                        Nolabel
                          expression (src/deriving.ml[791,26552+4]..[791,26552+13])
                            Pexp_ident "generated" (src/deriving.ml[791,26552+4]..[791,26552+13])
                      ]
    ]
  structure_item (src/deriving.ml[793,26567+0]..[812,27173+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[793,26567+4]..[793,26567+31])
          Ppat_var "expand_sig_module_type_decl" (src/deriving.ml[793,26567+4]..[793,26567+31])
        expression (src/deriving.ml[793,26567+32]..[812,27173+13]) ghost
          Pexp_fun
          Labelled "ctxt"
          None
          pattern (src/deriving.ml[793,26567+33]..[793,26567+37])
            Ppat_var "ctxt" (src/deriving.ml[793,26567+33]..[793,26567+37])
          expression (src/deriving.ml[793,26567+38]..[812,27173+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/deriving.ml[793,26567+38]..[793,26567+41])
              Ppat_var "mtd" (src/deriving.ml[793,26567+38]..[793,26567+41])
            expression (src/deriving.ml[793,26567+42]..[812,27173+13]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/deriving.ml[793,26567+42]..[793,26567+52])
                Ppat_var "generators" (src/deriving.ml[793,26567+42]..[793,26567+52])
              expression (src/deriving.ml[794,26622+2]..[812,27173+13])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/deriving.ml[794,26622+6]..[794,26622+23])
                      Ppat_tuple
                      [
                        pattern (src/deriving.ml[794,26622+6]..[794,26622+16])
                          Ppat_var "generators" (src/deriving.ml[794,26622+6]..[794,26622+16])
                        pattern (src/deriving.ml[794,26622+18]..[794,26622+23])
                          Ppat_var "l_err" (src/deriving.ml[794,26622+18]..[794,26622+23])
                      ]
                    expression (src/deriving.ml[795,26648+4]..[795,26648+69])
                      Pexp_apply
                      expression (src/deriving.ml[795,26648+4]..[795,26648+23])
                        Pexp_ident "Deriver.resolve_all" (src/deriving.ml[795,26648+4]..[795,26648+23])
                      [
                        <arg>
                        Nolabel
                          expression (src/deriving.ml[795,26648+24]..[795,26648+58])
                            Pexp_ident "Deriver.Field.sig_module_type_decl" (src/deriving.ml[795,26648+24]..[795,26648+58])
                        <arg>
                        Nolabel
                          expression (src/deriving.ml[795,26648+59]..[795,26648+69])
                            Pexp_ident "generators" (src/deriving.ml[795,26648+59]..[795,26648+69])
                      ]
                ]
                expression (src/deriving.ml[797,26723+2]..[812,27173+13])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/deriving.ml[797,26723+6]..[797,26723+11])
                        Ppat_var "l_err" (src/deriving.ml[797,26723+6]..[797,26723+11])
                      expression (src/deriving.ml[798,26737+4]..[801,26841+11])
                        Pexp_apply
                        expression (src/deriving.ml[798,26737+4]..[798,26737+12])
                          Pexp_ident "List.map" (src/deriving.ml[798,26737+4]..[798,26737+12])
                        [
                          <arg>
                          Labelled "f"
                            expression (src/deriving.ml[799,26750+9]..[800,26771+69])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/deriving.ml[799,26750+14]..[799,26750+17])
                                Ppat_var "err" (src/deriving.ml[799,26750+14]..[799,26750+17])
                              expression (src/deriving.ml[800,26771+8]..[800,26771+68])
                                Pexp_apply
                                expression (src/deriving.ml[800,26771+8]..[800,26771+42])
                                  Pexp_ident "Ast_builder.Default.psig_extension" (src/deriving.ml[800,26771+8]..[800,26771+42])
                                [
                                  <arg>
                                  Labelled "loc"
                                    expression (src/deriving.ml[800,26771+48]..[800,26771+61])
                                      Pexp_ident "Location.none" (src/deriving.ml[800,26771+48]..[800,26771+61])
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[800,26771+62]..[800,26771+65])
                                      Pexp_ident "err" (src/deriving.ml[800,26771+62]..[800,26771+65])
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[800,26771+66]..[800,26771+68])
                                      Pexp_construct "[]" (src/deriving.ml[800,26771+66]..[800,26771+68])
                                      None
                                ]
                          <arg>
                          Nolabel
                            expression (src/deriving.ml[801,26841+6]..[801,26841+11])
                              Pexp_ident "l_err" (src/deriving.ml[801,26841+6]..[801,26841+11])
                        ]
                  ]
                  expression (src/deriving.ml[803,26858+2]..[812,27173+13])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/deriving.ml[803,26858+6]..[803,26858+15])
                          Ppat_var "generated" (src/deriving.ml[803,26858+6]..[803,26858+15])
                        expression (src/deriving.ml[804,26876+4]..[807,27020+20])
                          Pexp_apply
                          expression (src/deriving.ml[807,27020+4]..[807,27020+6])
                            Pexp_ident "|>" (src/deriving.ml[807,27020+4]..[807,27020+6])
                          [
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[804,26876+4]..[806,26976+43])
                                Pexp_construct "::" (src/deriving.ml[805,26928+4]..[805,26928+6])
                                Some
                                  expression (src/deriving.ml[804,26876+4]..[806,26976+43]) ghost
                                    Pexp_tuple
                                    [
                                      expression (src/deriving.ml[804,26876+4]..[804,26876+51])
                                        Pexp_record
                                        [
                                          "items" (src/deriving.ml[804,26876+6]..[804,26876+11])
                                            expression (src/deriving.ml[804,26876+14]..[804,26876+19])
                                              Pexp_ident "l_err" (src/deriving.ml[804,26876+14]..[804,26876+19])
                                          "unused_code_warnings" (src/deriving.ml[804,26876+21]..[804,26876+41])
                                            expression (src/deriving.ml[804,26876+44]..[804,26876+49])
                                              Pexp_construct "false" (src/deriving.ml[804,26876+44]..[804,26876+49])
                                              None
                                        ]
                                        None
                                      expression (src/deriving.ml[805,26928+7]..[806,26976+43])
                                        Pexp_apply
                                        expression (src/deriving.ml[805,26928+7]..[805,26928+26])
                                          Pexp_ident "Generator.apply_all" (src/deriving.ml[805,26928+7]..[805,26928+26])
                                        [
                                          <arg>
                                          Labelled "ctxt"
                                            expression (src/deriving.ml[805,26928+28]..[805,26928+32])
                                              Pexp_ident "ctxt" (src/deriving.ml[805,26928+28]..[805,26928+32])
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[805,26928+33]..[805,26928+36])
                                              Pexp_ident "mtd" (src/deriving.ml[805,26928+33]..[805,26928+36])
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[805,26928+37]..[805,26928+47])
                                              Pexp_ident "generators" (src/deriving.ml[805,26928+37]..[805,26928+47])
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[806,26976+9]..[806,26976+43])
                                              Pexp_ident "Ast_builder.Default.psig_extension" (src/deriving.ml[806,26976+9]..[806,26976+43])
                                        ]
                                    ]
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[807,27020+7]..[807,27020+20])
                                Pexp_ident "merge_derived" (src/deriving.ml[807,27020+7]..[807,27020+20])
                          ]
                    ]
                    expression (src/deriving.ml[809,27046+2]..[812,27173+13])
                      Pexp_apply
                      expression (src/deriving.ml[809,27046+2]..[809,27046+10])
                        Pexp_ident "wrap_sig" (src/deriving.ml[809,27046+2]..[809,27046+10])
                      [
                        <arg>
                        Labelled "loc"
                          expression (src/deriving.ml[810,27057+9]..[810,27057+58])
                            Pexp_apply
                            expression (src/deriving.ml[810,27057+10]..[810,27057+52])
                              Pexp_ident "Expansion_context.Deriver.derived_item_loc" (src/deriving.ml[810,27057+10]..[810,27057+52])
                            [
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[810,27057+53]..[810,27057+57])
                                  Pexp_ident "ctxt" (src/deriving.ml[810,27057+53]..[810,27057+57])
                            ]
                        <arg>
                        Labelled "hide"
                          expression (src/deriving.ml[811,27116+10]..[811,27116+56])
                            Pexp_apply
                            expression (src/deriving.ml[811,27116+15]..[811,27116+17])
                              Pexp_ident "@@" (src/deriving.ml[811,27116+15]..[811,27116+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[811,27116+11]..[811,27116+14])
                                  Pexp_ident "not" (src/deriving.ml[811,27116+11]..[811,27116+14])
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[811,27116+18]..[811,27116+55])
                                  Pexp_apply
                                  expression (src/deriving.ml[811,27116+18]..[811,27116+50])
                                    Pexp_ident "Expansion_context.Deriver.inline" (src/deriving.ml[811,27116+18]..[811,27116+50])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[811,27116+51]..[811,27116+55])
                                        Pexp_ident "ctxt" (src/deriving.ml[811,27116+51]..[811,27116+55])
                                  ]
                            ]
                        <arg>
                        Nolabel
                          expression (src/deriving.ml[812,27173+4]..[812,27173+13])
                            Pexp_ident "generated" (src/deriving.ml[812,27173+4]..[812,27173+13])
                      ]
    ]
  structure_item (src/deriving.ml[814,27188+0]..[833,27778+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[814,27188+4]..[814,27188+24])
          Ppat_var "expand_str_exception" (src/deriving.ml[814,27188+4]..[814,27188+24])
        expression (src/deriving.ml[814,27188+25]..[833,27778+13]) ghost
          Pexp_fun
          Labelled "ctxt"
          None
          pattern (src/deriving.ml[814,27188+26]..[814,27188+30])
            Ppat_var "ctxt" (src/deriving.ml[814,27188+26]..[814,27188+30])
          expression (src/deriving.ml[814,27188+31]..[833,27778+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/deriving.ml[814,27188+31]..[814,27188+33])
              Ppat_var "ec" (src/deriving.ml[814,27188+31]..[814,27188+33])
            expression (src/deriving.ml[814,27188+34]..[833,27778+13]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/deriving.ml[814,27188+34]..[814,27188+44])
                Ppat_var "generators" (src/deriving.ml[814,27188+34]..[814,27188+44])
              expression (src/deriving.ml[815,27235+2]..[833,27778+13])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/deriving.ml[815,27235+6]..[815,27235+23])
                      Ppat_tuple
                      [
                        pattern (src/deriving.ml[815,27235+6]..[815,27235+16])
                          Ppat_var "generators" (src/deriving.ml[815,27235+6]..[815,27235+16])
                        pattern (src/deriving.ml[815,27235+18]..[815,27235+23])
                          Ppat_var "l_err" (src/deriving.ml[815,27235+18]..[815,27235+23])
                      ]
                    expression (src/deriving.ml[816,27261+4]..[816,27261+62])
                      Pexp_apply
                      expression (src/deriving.ml[816,27261+4]..[816,27261+23])
                        Pexp_ident "Deriver.resolve_all" (src/deriving.ml[816,27261+4]..[816,27261+23])
                      [
                        <arg>
                        Nolabel
                          expression (src/deriving.ml[816,27261+24]..[816,27261+51])
                            Pexp_ident "Deriver.Field.str_exception" (src/deriving.ml[816,27261+24]..[816,27261+51])
                        <arg>
                        Nolabel
                          expression (src/deriving.ml[816,27261+52]..[816,27261+62])
                            Pexp_ident "generators" (src/deriving.ml[816,27261+52]..[816,27261+62])
                      ]
                ]
                expression (src/deriving.ml[818,27329+2]..[833,27778+13])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/deriving.ml[818,27329+6]..[818,27329+11])
                        Ppat_var "l_err" (src/deriving.ml[818,27329+6]..[818,27329+11])
                      expression (src/deriving.ml[819,27343+4]..[822,27447+11])
                        Pexp_apply
                        expression (src/deriving.ml[819,27343+4]..[819,27343+12])
                          Pexp_ident "List.map" (src/deriving.ml[819,27343+4]..[819,27343+12])
                        [
                          <arg>
                          Labelled "f"
                            expression (src/deriving.ml[820,27356+9]..[821,27377+69])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/deriving.ml[820,27356+14]..[820,27356+17])
                                Ppat_var "err" (src/deriving.ml[820,27356+14]..[820,27356+17])
                              expression (src/deriving.ml[821,27377+8]..[821,27377+68])
                                Pexp_apply
                                expression (src/deriving.ml[821,27377+8]..[821,27377+42])
                                  Pexp_ident "Ast_builder.Default.pstr_extension" (src/deriving.ml[821,27377+8]..[821,27377+42])
                                [
                                  <arg>
                                  Labelled "loc"
                                    expression (src/deriving.ml[821,27377+48]..[821,27377+61])
                                      Pexp_ident "Location.none" (src/deriving.ml[821,27377+48]..[821,27377+61])
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[821,27377+62]..[821,27377+65])
                                      Pexp_ident "err" (src/deriving.ml[821,27377+62]..[821,27377+65])
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[821,27377+66]..[821,27377+68])
                                      Pexp_construct "[]" (src/deriving.ml[821,27377+66]..[821,27377+68])
                                      None
                                ]
                          <arg>
                          Nolabel
                            expression (src/deriving.ml[822,27447+6]..[822,27447+11])
                              Pexp_ident "l_err" (src/deriving.ml[822,27447+6]..[822,27447+11])
                        ]
                  ]
                  expression (src/deriving.ml[824,27464+2]..[833,27778+13])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/deriving.ml[824,27464+6]..[824,27464+15])
                          Ppat_var "generated" (src/deriving.ml[824,27464+6]..[824,27464+15])
                        expression (src/deriving.ml[825,27482+4]..[828,27625+20])
                          Pexp_apply
                          expression (src/deriving.ml[828,27625+4]..[828,27625+6])
                            Pexp_ident "|>" (src/deriving.ml[828,27625+4]..[828,27625+6])
                          [
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[825,27482+4]..[827,27581+43])
                                Pexp_construct "::" (src/deriving.ml[826,27534+4]..[826,27534+6])
                                Some
                                  expression (src/deriving.ml[825,27482+4]..[827,27581+43]) ghost
                                    Pexp_tuple
                                    [
                                      expression (src/deriving.ml[825,27482+4]..[825,27482+51])
                                        Pexp_record
                                        [
                                          "items" (src/deriving.ml[825,27482+6]..[825,27482+11])
                                            expression (src/deriving.ml[825,27482+14]..[825,27482+19])
                                              Pexp_ident "l_err" (src/deriving.ml[825,27482+14]..[825,27482+19])
                                          "unused_code_warnings" (src/deriving.ml[825,27482+21]..[825,27482+41])
                                            expression (src/deriving.ml[825,27482+44]..[825,27482+49])
                                              Pexp_construct "false" (src/deriving.ml[825,27482+44]..[825,27482+49])
                                              None
                                        ]
                                        None
                                      expression (src/deriving.ml[826,27534+7]..[827,27581+43])
                                        Pexp_apply
                                        expression (src/deriving.ml[826,27534+7]..[826,27534+26])
                                          Pexp_ident "Generator.apply_all" (src/deriving.ml[826,27534+7]..[826,27534+26])
                                        [
                                          <arg>
                                          Labelled "ctxt"
                                            expression (src/deriving.ml[826,27534+28]..[826,27534+32])
                                              Pexp_ident "ctxt" (src/deriving.ml[826,27534+28]..[826,27534+32])
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[826,27534+33]..[826,27534+35])
                                              Pexp_ident "ec" (src/deriving.ml[826,27534+33]..[826,27534+35])
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[826,27534+36]..[826,27534+46])
                                              Pexp_ident "generators" (src/deriving.ml[826,27534+36]..[826,27534+46])
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[827,27581+9]..[827,27581+43])
                                              Pexp_ident "Ast_builder.Default.pstr_extension" (src/deriving.ml[827,27581+9]..[827,27581+43])
                                        ]
                                    ]
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[828,27625+7]..[828,27625+20])
                                Pexp_ident "merge_derived" (src/deriving.ml[828,27625+7]..[828,27625+20])
                          ]
                    ]
                    expression (src/deriving.ml[830,27651+2]..[833,27778+13])
                      Pexp_apply
                      expression (src/deriving.ml[830,27651+2]..[830,27651+10])
                        Pexp_ident "wrap_str" (src/deriving.ml[830,27651+2]..[830,27651+10])
                      [
                        <arg>
                        Labelled "loc"
                          expression (src/deriving.ml[831,27662+9]..[831,27662+58])
                            Pexp_apply
                            expression (src/deriving.ml[831,27662+10]..[831,27662+52])
                              Pexp_ident "Expansion_context.Deriver.derived_item_loc" (src/deriving.ml[831,27662+10]..[831,27662+52])
                            [
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[831,27662+53]..[831,27662+57])
                                  Pexp_ident "ctxt" (src/deriving.ml[831,27662+53]..[831,27662+57])
                            ]
                        <arg>
                        Labelled "hide"
                          expression (src/deriving.ml[832,27721+10]..[832,27721+56])
                            Pexp_apply
                            expression (src/deriving.ml[832,27721+15]..[832,27721+17])
                              Pexp_ident "@@" (src/deriving.ml[832,27721+15]..[832,27721+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[832,27721+11]..[832,27721+14])
                                  Pexp_ident "not" (src/deriving.ml[832,27721+11]..[832,27721+14])
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[832,27721+18]..[832,27721+55])
                                  Pexp_apply
                                  expression (src/deriving.ml[832,27721+18]..[832,27721+50])
                                    Pexp_ident "Expansion_context.Deriver.inline" (src/deriving.ml[832,27721+18]..[832,27721+50])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[832,27721+51]..[832,27721+55])
                                        Pexp_ident "ctxt" (src/deriving.ml[832,27721+51]..[832,27721+55])
                                  ]
                            ]
                        <arg>
                        Nolabel
                          expression (src/deriving.ml[833,27778+4]..[833,27778+13])
                            Pexp_ident "generated" (src/deriving.ml[833,27778+4]..[833,27778+13])
                      ]
    ]
  structure_item (src/deriving.ml[835,27793+0]..[854,28383+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[835,27793+4]..[835,27793+24])
          Ppat_var "expand_sig_exception" (src/deriving.ml[835,27793+4]..[835,27793+24])
        expression (src/deriving.ml[835,27793+25]..[854,28383+13]) ghost
          Pexp_fun
          Labelled "ctxt"
          None
          pattern (src/deriving.ml[835,27793+26]..[835,27793+30])
            Ppat_var "ctxt" (src/deriving.ml[835,27793+26]..[835,27793+30])
          expression (src/deriving.ml[835,27793+31]..[854,28383+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/deriving.ml[835,27793+31]..[835,27793+33])
              Ppat_var "ec" (src/deriving.ml[835,27793+31]..[835,27793+33])
            expression (src/deriving.ml[835,27793+34]..[854,28383+13]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/deriving.ml[835,27793+34]..[835,27793+44])
                Ppat_var "generators" (src/deriving.ml[835,27793+34]..[835,27793+44])
              expression (src/deriving.ml[836,27840+2]..[854,28383+13])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/deriving.ml[836,27840+6]..[836,27840+23])
                      Ppat_tuple
                      [
                        pattern (src/deriving.ml[836,27840+6]..[836,27840+16])
                          Ppat_var "generators" (src/deriving.ml[836,27840+6]..[836,27840+16])
                        pattern (src/deriving.ml[836,27840+18]..[836,27840+23])
                          Ppat_var "l_err" (src/deriving.ml[836,27840+18]..[836,27840+23])
                      ]
                    expression (src/deriving.ml[837,27866+4]..[837,27866+62])
                      Pexp_apply
                      expression (src/deriving.ml[837,27866+4]..[837,27866+23])
                        Pexp_ident "Deriver.resolve_all" (src/deriving.ml[837,27866+4]..[837,27866+23])
                      [
                        <arg>
                        Nolabel
                          expression (src/deriving.ml[837,27866+24]..[837,27866+51])
                            Pexp_ident "Deriver.Field.sig_exception" (src/deriving.ml[837,27866+24]..[837,27866+51])
                        <arg>
                        Nolabel
                          expression (src/deriving.ml[837,27866+52]..[837,27866+62])
                            Pexp_ident "generators" (src/deriving.ml[837,27866+52]..[837,27866+62])
                      ]
                ]
                expression (src/deriving.ml[839,27934+2]..[854,28383+13])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/deriving.ml[839,27934+6]..[839,27934+11])
                        Ppat_var "l_err" (src/deriving.ml[839,27934+6]..[839,27934+11])
                      expression (src/deriving.ml[840,27948+4]..[843,28052+11])
                        Pexp_apply
                        expression (src/deriving.ml[840,27948+4]..[840,27948+12])
                          Pexp_ident "List.map" (src/deriving.ml[840,27948+4]..[840,27948+12])
                        [
                          <arg>
                          Labelled "f"
                            expression (src/deriving.ml[841,27961+9]..[842,27982+69])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/deriving.ml[841,27961+14]..[841,27961+17])
                                Ppat_var "err" (src/deriving.ml[841,27961+14]..[841,27961+17])
                              expression (src/deriving.ml[842,27982+8]..[842,27982+68])
                                Pexp_apply
                                expression (src/deriving.ml[842,27982+8]..[842,27982+42])
                                  Pexp_ident "Ast_builder.Default.psig_extension" (src/deriving.ml[842,27982+8]..[842,27982+42])
                                [
                                  <arg>
                                  Labelled "loc"
                                    expression (src/deriving.ml[842,27982+48]..[842,27982+61])
                                      Pexp_ident "Location.none" (src/deriving.ml[842,27982+48]..[842,27982+61])
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[842,27982+62]..[842,27982+65])
                                      Pexp_ident "err" (src/deriving.ml[842,27982+62]..[842,27982+65])
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[842,27982+66]..[842,27982+68])
                                      Pexp_construct "[]" (src/deriving.ml[842,27982+66]..[842,27982+68])
                                      None
                                ]
                          <arg>
                          Nolabel
                            expression (src/deriving.ml[843,28052+6]..[843,28052+11])
                              Pexp_ident "l_err" (src/deriving.ml[843,28052+6]..[843,28052+11])
                        ]
                  ]
                  expression (src/deriving.ml[845,28069+2]..[854,28383+13])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/deriving.ml[845,28069+6]..[845,28069+15])
                          Ppat_var "generated" (src/deriving.ml[845,28069+6]..[845,28069+15])
                        expression (src/deriving.ml[846,28087+4]..[849,28230+20])
                          Pexp_apply
                          expression (src/deriving.ml[849,28230+4]..[849,28230+6])
                            Pexp_ident "|>" (src/deriving.ml[849,28230+4]..[849,28230+6])
                          [
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[846,28087+4]..[848,28186+43])
                                Pexp_construct "::" (src/deriving.ml[847,28139+4]..[847,28139+6])
                                Some
                                  expression (src/deriving.ml[846,28087+4]..[848,28186+43]) ghost
                                    Pexp_tuple
                                    [
                                      expression (src/deriving.ml[846,28087+4]..[846,28087+51])
                                        Pexp_record
                                        [
                                          "items" (src/deriving.ml[846,28087+6]..[846,28087+11])
                                            expression (src/deriving.ml[846,28087+14]..[846,28087+19])
                                              Pexp_ident "l_err" (src/deriving.ml[846,28087+14]..[846,28087+19])
                                          "unused_code_warnings" (src/deriving.ml[846,28087+21]..[846,28087+41])
                                            expression (src/deriving.ml[846,28087+44]..[846,28087+49])
                                              Pexp_construct "false" (src/deriving.ml[846,28087+44]..[846,28087+49])
                                              None
                                        ]
                                        None
                                      expression (src/deriving.ml[847,28139+7]..[848,28186+43])
                                        Pexp_apply
                                        expression (src/deriving.ml[847,28139+7]..[847,28139+26])
                                          Pexp_ident "Generator.apply_all" (src/deriving.ml[847,28139+7]..[847,28139+26])
                                        [
                                          <arg>
                                          Labelled "ctxt"
                                            expression (src/deriving.ml[847,28139+28]..[847,28139+32])
                                              Pexp_ident "ctxt" (src/deriving.ml[847,28139+28]..[847,28139+32])
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[847,28139+33]..[847,28139+35])
                                              Pexp_ident "ec" (src/deriving.ml[847,28139+33]..[847,28139+35])
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[847,28139+36]..[847,28139+46])
                                              Pexp_ident "generators" (src/deriving.ml[847,28139+36]..[847,28139+46])
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[848,28186+9]..[848,28186+43])
                                              Pexp_ident "Ast_builder.Default.psig_extension" (src/deriving.ml[848,28186+9]..[848,28186+43])
                                        ]
                                    ]
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[849,28230+7]..[849,28230+20])
                                Pexp_ident "merge_derived" (src/deriving.ml[849,28230+7]..[849,28230+20])
                          ]
                    ]
                    expression (src/deriving.ml[851,28256+2]..[854,28383+13])
                      Pexp_apply
                      expression (src/deriving.ml[851,28256+2]..[851,28256+10])
                        Pexp_ident "wrap_sig" (src/deriving.ml[851,28256+2]..[851,28256+10])
                      [
                        <arg>
                        Labelled "loc"
                          expression (src/deriving.ml[852,28267+9]..[852,28267+58])
                            Pexp_apply
                            expression (src/deriving.ml[852,28267+10]..[852,28267+52])
                              Pexp_ident "Expansion_context.Deriver.derived_item_loc" (src/deriving.ml[852,28267+10]..[852,28267+52])
                            [
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[852,28267+53]..[852,28267+57])
                                  Pexp_ident "ctxt" (src/deriving.ml[852,28267+53]..[852,28267+57])
                            ]
                        <arg>
                        Labelled "hide"
                          expression (src/deriving.ml[853,28326+10]..[853,28326+56])
                            Pexp_apply
                            expression (src/deriving.ml[853,28326+15]..[853,28326+17])
                              Pexp_ident "@@" (src/deriving.ml[853,28326+15]..[853,28326+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[853,28326+11]..[853,28326+14])
                                  Pexp_ident "not" (src/deriving.ml[853,28326+11]..[853,28326+14])
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[853,28326+18]..[853,28326+55])
                                  Pexp_apply
                                  expression (src/deriving.ml[853,28326+18]..[853,28326+50])
                                    Pexp_ident "Expansion_context.Deriver.inline" (src/deriving.ml[853,28326+18]..[853,28326+50])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[853,28326+51]..[853,28326+55])
                                        Pexp_ident "ctxt" (src/deriving.ml[853,28326+51]..[853,28326+55])
                                  ]
                            ]
                        <arg>
                        Nolabel
                          expression (src/deriving.ml[854,28383+4]..[854,28383+13])
                            Pexp_ident "generated" (src/deriving.ml[854,28383+4]..[854,28383+13])
                      ]
    ]
  structure_item (src/deriving.ml[856,28398+0]..[875,28986+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[856,28398+4]..[856,28398+23])
          Ppat_var "expand_str_type_ext" (src/deriving.ml[856,28398+4]..[856,28398+23])
        expression (src/deriving.ml[856,28398+24]..[875,28986+13]) ghost
          Pexp_fun
          Labelled "ctxt"
          None
          pattern (src/deriving.ml[856,28398+25]..[856,28398+29])
            Ppat_var "ctxt" (src/deriving.ml[856,28398+25]..[856,28398+29])
          expression (src/deriving.ml[856,28398+30]..[875,28986+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/deriving.ml[856,28398+30]..[856,28398+32])
              Ppat_var "te" (src/deriving.ml[856,28398+30]..[856,28398+32])
            expression (src/deriving.ml[856,28398+33]..[875,28986+13]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/deriving.ml[856,28398+33]..[856,28398+43])
                Ppat_var "generators" (src/deriving.ml[856,28398+33]..[856,28398+43])
              expression (src/deriving.ml[857,28444+2]..[875,28986+13])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/deriving.ml[857,28444+6]..[857,28444+23])
                      Ppat_tuple
                      [
                        pattern (src/deriving.ml[857,28444+6]..[857,28444+16])
                          Ppat_var "generators" (src/deriving.ml[857,28444+6]..[857,28444+16])
                        pattern (src/deriving.ml[857,28444+18]..[857,28444+23])
                          Ppat_var "l_err" (src/deriving.ml[857,28444+18]..[857,28444+23])
                      ]
                    expression (src/deriving.ml[858,28470+4]..[858,28470+61])
                      Pexp_apply
                      expression (src/deriving.ml[858,28470+4]..[858,28470+23])
                        Pexp_ident "Deriver.resolve_all" (src/deriving.ml[858,28470+4]..[858,28470+23])
                      [
                        <arg>
                        Nolabel
                          expression (src/deriving.ml[858,28470+24]..[858,28470+50])
                            Pexp_ident "Deriver.Field.str_type_ext" (src/deriving.ml[858,28470+24]..[858,28470+50])
                        <arg>
                        Nolabel
                          expression (src/deriving.ml[858,28470+51]..[858,28470+61])
                            Pexp_ident "generators" (src/deriving.ml[858,28470+51]..[858,28470+61])
                      ]
                ]
                expression (src/deriving.ml[860,28537+2]..[875,28986+13])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/deriving.ml[860,28537+6]..[860,28537+11])
                        Ppat_var "l_err" (src/deriving.ml[860,28537+6]..[860,28537+11])
                      expression (src/deriving.ml[861,28551+4]..[864,28655+11])
                        Pexp_apply
                        expression (src/deriving.ml[861,28551+4]..[861,28551+12])
                          Pexp_ident "List.map" (src/deriving.ml[861,28551+4]..[861,28551+12])
                        [
                          <arg>
                          Labelled "f"
                            expression (src/deriving.ml[862,28564+9]..[863,28585+69])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/deriving.ml[862,28564+14]..[862,28564+17])
                                Ppat_var "err" (src/deriving.ml[862,28564+14]..[862,28564+17])
                              expression (src/deriving.ml[863,28585+8]..[863,28585+68])
                                Pexp_apply
                                expression (src/deriving.ml[863,28585+8]..[863,28585+42])
                                  Pexp_ident "Ast_builder.Default.pstr_extension" (src/deriving.ml[863,28585+8]..[863,28585+42])
                                [
                                  <arg>
                                  Labelled "loc"
                                    expression (src/deriving.ml[863,28585+48]..[863,28585+61])
                                      Pexp_ident "Location.none" (src/deriving.ml[863,28585+48]..[863,28585+61])
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[863,28585+62]..[863,28585+65])
                                      Pexp_ident "err" (src/deriving.ml[863,28585+62]..[863,28585+65])
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[863,28585+66]..[863,28585+68])
                                      Pexp_construct "[]" (src/deriving.ml[863,28585+66]..[863,28585+68])
                                      None
                                ]
                          <arg>
                          Nolabel
                            expression (src/deriving.ml[864,28655+6]..[864,28655+11])
                              Pexp_ident "l_err" (src/deriving.ml[864,28655+6]..[864,28655+11])
                        ]
                  ]
                  expression (src/deriving.ml[866,28672+2]..[875,28986+13])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/deriving.ml[866,28672+6]..[866,28672+15])
                          Ppat_var "generated" (src/deriving.ml[866,28672+6]..[866,28672+15])
                        expression (src/deriving.ml[867,28690+4]..[870,28833+20])
                          Pexp_apply
                          expression (src/deriving.ml[870,28833+4]..[870,28833+6])
                            Pexp_ident "|>" (src/deriving.ml[870,28833+4]..[870,28833+6])
                          [
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[867,28690+4]..[869,28789+43])
                                Pexp_construct "::" (src/deriving.ml[868,28742+4]..[868,28742+6])
                                Some
                                  expression (src/deriving.ml[867,28690+4]..[869,28789+43]) ghost
                                    Pexp_tuple
                                    [
                                      expression (src/deriving.ml[867,28690+4]..[867,28690+51])
                                        Pexp_record
                                        [
                                          "items" (src/deriving.ml[867,28690+6]..[867,28690+11])
                                            expression (src/deriving.ml[867,28690+14]..[867,28690+19])
                                              Pexp_ident "l_err" (src/deriving.ml[867,28690+14]..[867,28690+19])
                                          "unused_code_warnings" (src/deriving.ml[867,28690+21]..[867,28690+41])
                                            expression (src/deriving.ml[867,28690+44]..[867,28690+49])
                                              Pexp_construct "false" (src/deriving.ml[867,28690+44]..[867,28690+49])
                                              None
                                        ]
                                        None
                                      expression (src/deriving.ml[868,28742+7]..[869,28789+43])
                                        Pexp_apply
                                        expression (src/deriving.ml[868,28742+7]..[868,28742+26])
                                          Pexp_ident "Generator.apply_all" (src/deriving.ml[868,28742+7]..[868,28742+26])
                                        [
                                          <arg>
                                          Labelled "ctxt"
                                            expression (src/deriving.ml[868,28742+28]..[868,28742+32])
                                              Pexp_ident "ctxt" (src/deriving.ml[868,28742+28]..[868,28742+32])
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[868,28742+33]..[868,28742+35])
                                              Pexp_ident "te" (src/deriving.ml[868,28742+33]..[868,28742+35])
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[868,28742+36]..[868,28742+46])
                                              Pexp_ident "generators" (src/deriving.ml[868,28742+36]..[868,28742+46])
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[869,28789+9]..[869,28789+43])
                                              Pexp_ident "Ast_builder.Default.pstr_extension" (src/deriving.ml[869,28789+9]..[869,28789+43])
                                        ]
                                    ]
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[870,28833+7]..[870,28833+20])
                                Pexp_ident "merge_derived" (src/deriving.ml[870,28833+7]..[870,28833+20])
                          ]
                    ]
                    expression (src/deriving.ml[872,28859+2]..[875,28986+13])
                      Pexp_apply
                      expression (src/deriving.ml[872,28859+2]..[872,28859+10])
                        Pexp_ident "wrap_str" (src/deriving.ml[872,28859+2]..[872,28859+10])
                      [
                        <arg>
                        Labelled "loc"
                          expression (src/deriving.ml[873,28870+9]..[873,28870+58])
                            Pexp_apply
                            expression (src/deriving.ml[873,28870+10]..[873,28870+52])
                              Pexp_ident "Expansion_context.Deriver.derived_item_loc" (src/deriving.ml[873,28870+10]..[873,28870+52])
                            [
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[873,28870+53]..[873,28870+57])
                                  Pexp_ident "ctxt" (src/deriving.ml[873,28870+53]..[873,28870+57])
                            ]
                        <arg>
                        Labelled "hide"
                          expression (src/deriving.ml[874,28929+10]..[874,28929+56])
                            Pexp_apply
                            expression (src/deriving.ml[874,28929+15]..[874,28929+17])
                              Pexp_ident "@@" (src/deriving.ml[874,28929+15]..[874,28929+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[874,28929+11]..[874,28929+14])
                                  Pexp_ident "not" (src/deriving.ml[874,28929+11]..[874,28929+14])
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[874,28929+18]..[874,28929+55])
                                  Pexp_apply
                                  expression (src/deriving.ml[874,28929+18]..[874,28929+50])
                                    Pexp_ident "Expansion_context.Deriver.inline" (src/deriving.ml[874,28929+18]..[874,28929+50])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[874,28929+51]..[874,28929+55])
                                        Pexp_ident "ctxt" (src/deriving.ml[874,28929+51]..[874,28929+55])
                                  ]
                            ]
                        <arg>
                        Nolabel
                          expression (src/deriving.ml[875,28986+4]..[875,28986+13])
                            Pexp_ident "generated" (src/deriving.ml[875,28986+4]..[875,28986+13])
                      ]
    ]
  structure_item (src/deriving.ml[877,29001+0]..[896,29589+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[877,29001+4]..[877,29001+23])
          Ppat_var "expand_sig_type_ext" (src/deriving.ml[877,29001+4]..[877,29001+23])
        expression (src/deriving.ml[877,29001+24]..[896,29589+13]) ghost
          Pexp_fun
          Labelled "ctxt"
          None
          pattern (src/deriving.ml[877,29001+25]..[877,29001+29])
            Ppat_var "ctxt" (src/deriving.ml[877,29001+25]..[877,29001+29])
          expression (src/deriving.ml[877,29001+30]..[896,29589+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/deriving.ml[877,29001+30]..[877,29001+32])
              Ppat_var "te" (src/deriving.ml[877,29001+30]..[877,29001+32])
            expression (src/deriving.ml[877,29001+33]..[896,29589+13]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/deriving.ml[877,29001+33]..[877,29001+43])
                Ppat_var "generators" (src/deriving.ml[877,29001+33]..[877,29001+43])
              expression (src/deriving.ml[878,29047+2]..[896,29589+13])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/deriving.ml[878,29047+6]..[878,29047+23])
                      Ppat_tuple
                      [
                        pattern (src/deriving.ml[878,29047+6]..[878,29047+16])
                          Ppat_var "generators" (src/deriving.ml[878,29047+6]..[878,29047+16])
                        pattern (src/deriving.ml[878,29047+18]..[878,29047+23])
                          Ppat_var "l_err" (src/deriving.ml[878,29047+18]..[878,29047+23])
                      ]
                    expression (src/deriving.ml[879,29073+4]..[879,29073+61])
                      Pexp_apply
                      expression (src/deriving.ml[879,29073+4]..[879,29073+23])
                        Pexp_ident "Deriver.resolve_all" (src/deriving.ml[879,29073+4]..[879,29073+23])
                      [
                        <arg>
                        Nolabel
                          expression (src/deriving.ml[879,29073+24]..[879,29073+50])
                            Pexp_ident "Deriver.Field.sig_type_ext" (src/deriving.ml[879,29073+24]..[879,29073+50])
                        <arg>
                        Nolabel
                          expression (src/deriving.ml[879,29073+51]..[879,29073+61])
                            Pexp_ident "generators" (src/deriving.ml[879,29073+51]..[879,29073+61])
                      ]
                ]
                expression (src/deriving.ml[881,29140+2]..[896,29589+13])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/deriving.ml[881,29140+6]..[881,29140+11])
                        Ppat_var "l_err" (src/deriving.ml[881,29140+6]..[881,29140+11])
                      expression (src/deriving.ml[882,29154+4]..[885,29258+11])
                        Pexp_apply
                        expression (src/deriving.ml[882,29154+4]..[882,29154+12])
                          Pexp_ident "List.map" (src/deriving.ml[882,29154+4]..[882,29154+12])
                        [
                          <arg>
                          Labelled "f"
                            expression (src/deriving.ml[883,29167+9]..[884,29188+69])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/deriving.ml[883,29167+14]..[883,29167+17])
                                Ppat_var "err" (src/deriving.ml[883,29167+14]..[883,29167+17])
                              expression (src/deriving.ml[884,29188+8]..[884,29188+68])
                                Pexp_apply
                                expression (src/deriving.ml[884,29188+8]..[884,29188+42])
                                  Pexp_ident "Ast_builder.Default.psig_extension" (src/deriving.ml[884,29188+8]..[884,29188+42])
                                [
                                  <arg>
                                  Labelled "loc"
                                    expression (src/deriving.ml[884,29188+48]..[884,29188+61])
                                      Pexp_ident "Location.none" (src/deriving.ml[884,29188+48]..[884,29188+61])
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[884,29188+62]..[884,29188+65])
                                      Pexp_ident "err" (src/deriving.ml[884,29188+62]..[884,29188+65])
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[884,29188+66]..[884,29188+68])
                                      Pexp_construct "[]" (src/deriving.ml[884,29188+66]..[884,29188+68])
                                      None
                                ]
                          <arg>
                          Nolabel
                            expression (src/deriving.ml[885,29258+6]..[885,29258+11])
                              Pexp_ident "l_err" (src/deriving.ml[885,29258+6]..[885,29258+11])
                        ]
                  ]
                  expression (src/deriving.ml[887,29275+2]..[896,29589+13])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/deriving.ml[887,29275+6]..[887,29275+15])
                          Ppat_var "generated" (src/deriving.ml[887,29275+6]..[887,29275+15])
                        expression (src/deriving.ml[888,29293+4]..[891,29436+20])
                          Pexp_apply
                          expression (src/deriving.ml[891,29436+4]..[891,29436+6])
                            Pexp_ident "|>" (src/deriving.ml[891,29436+4]..[891,29436+6])
                          [
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[888,29293+4]..[890,29392+43])
                                Pexp_construct "::" (src/deriving.ml[889,29345+4]..[889,29345+6])
                                Some
                                  expression (src/deriving.ml[888,29293+4]..[890,29392+43]) ghost
                                    Pexp_tuple
                                    [
                                      expression (src/deriving.ml[888,29293+4]..[888,29293+51])
                                        Pexp_record
                                        [
                                          "items" (src/deriving.ml[888,29293+6]..[888,29293+11])
                                            expression (src/deriving.ml[888,29293+14]..[888,29293+19])
                                              Pexp_ident "l_err" (src/deriving.ml[888,29293+14]..[888,29293+19])
                                          "unused_code_warnings" (src/deriving.ml[888,29293+21]..[888,29293+41])
                                            expression (src/deriving.ml[888,29293+44]..[888,29293+49])
                                              Pexp_construct "false" (src/deriving.ml[888,29293+44]..[888,29293+49])
                                              None
                                        ]
                                        None
                                      expression (src/deriving.ml[889,29345+7]..[890,29392+43])
                                        Pexp_apply
                                        expression (src/deriving.ml[889,29345+7]..[889,29345+26])
                                          Pexp_ident "Generator.apply_all" (src/deriving.ml[889,29345+7]..[889,29345+26])
                                        [
                                          <arg>
                                          Labelled "ctxt"
                                            expression (src/deriving.ml[889,29345+28]..[889,29345+32])
                                              Pexp_ident "ctxt" (src/deriving.ml[889,29345+28]..[889,29345+32])
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[889,29345+33]..[889,29345+35])
                                              Pexp_ident "te" (src/deriving.ml[889,29345+33]..[889,29345+35])
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[889,29345+36]..[889,29345+46])
                                              Pexp_ident "generators" (src/deriving.ml[889,29345+36]..[889,29345+46])
                                          <arg>
                                          Nolabel
                                            expression (src/deriving.ml[890,29392+9]..[890,29392+43])
                                              Pexp_ident "Ast_builder.Default.psig_extension" (src/deriving.ml[890,29392+9]..[890,29392+43])
                                        ]
                                    ]
                            <arg>
                            Nolabel
                              expression (src/deriving.ml[891,29436+7]..[891,29436+20])
                                Pexp_ident "merge_derived" (src/deriving.ml[891,29436+7]..[891,29436+20])
                          ]
                    ]
                    expression (src/deriving.ml[893,29462+2]..[896,29589+13])
                      Pexp_apply
                      expression (src/deriving.ml[893,29462+2]..[893,29462+10])
                        Pexp_ident "wrap_sig" (src/deriving.ml[893,29462+2]..[893,29462+10])
                      [
                        <arg>
                        Labelled "loc"
                          expression (src/deriving.ml[894,29473+9]..[894,29473+58])
                            Pexp_apply
                            expression (src/deriving.ml[894,29473+10]..[894,29473+52])
                              Pexp_ident "Expansion_context.Deriver.derived_item_loc" (src/deriving.ml[894,29473+10]..[894,29473+52])
                            [
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[894,29473+53]..[894,29473+57])
                                  Pexp_ident "ctxt" (src/deriving.ml[894,29473+53]..[894,29473+57])
                            ]
                        <arg>
                        Labelled "hide"
                          expression (src/deriving.ml[895,29532+10]..[895,29532+56])
                            Pexp_apply
                            expression (src/deriving.ml[895,29532+15]..[895,29532+17])
                              Pexp_ident "@@" (src/deriving.ml[895,29532+15]..[895,29532+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[895,29532+11]..[895,29532+14])
                                  Pexp_ident "not" (src/deriving.ml[895,29532+11]..[895,29532+14])
                              <arg>
                              Nolabel
                                expression (src/deriving.ml[895,29532+18]..[895,29532+55])
                                  Pexp_apply
                                  expression (src/deriving.ml[895,29532+18]..[895,29532+50])
                                    Pexp_ident "Expansion_context.Deriver.inline" (src/deriving.ml[895,29532+18]..[895,29532+50])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[895,29532+51]..[895,29532+55])
                                        Pexp_ident "ctxt" (src/deriving.ml[895,29532+51]..[895,29532+55])
                                  ]
                            ]
                        <arg>
                        Nolabel
                          expression (src/deriving.ml[896,29589+4]..[896,29589+13])
                            Pexp_ident "generated" (src/deriving.ml[896,29589+4]..[896,29589+13])
                      ]
    ]
  structure_item (src/deriving.ml[898,29604+0]..[908,30063+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[898,29604+4]..[898,29604+9])
          Ppat_var "rules" (src/deriving.ml[898,29604+4]..[898,29604+9])
        expression (src/deriving.ml[898,29604+10]..[908,30063+3]) ghost
          Pexp_fun
          Labelled "typ"
          None
          pattern (src/deriving.ml[898,29604+11]..[898,29604+14])
            Ppat_var "typ" (src/deriving.ml[898,29604+11]..[898,29604+14])
          expression (src/deriving.ml[898,29604+15]..[908,30063+3]) ghost
            Pexp_fun
            Labelled "expand_sig"
            None
            pattern (src/deriving.ml[898,29604+16]..[898,29604+26])
              Ppat_var "expand_sig" (src/deriving.ml[898,29604+16]..[898,29604+26])
            expression (src/deriving.ml[898,29604+27]..[908,30063+3]) ghost
              Pexp_fun
              Labelled "expand_str"
              None
              pattern (src/deriving.ml[898,29604+28]..[898,29604+38])
                Ppat_var "expand_str" (src/deriving.ml[898,29604+28]..[898,29604+38])
              expression (src/deriving.ml[898,29604+39]..[908,30063+3]) ghost
                Pexp_fun
                Labelled "rule_str"
                None
                pattern (src/deriving.ml[898,29604+40]..[898,29604+48])
                  Ppat_var "rule_str" (src/deriving.ml[898,29604+40]..[898,29604+48])
                expression (src/deriving.ml[898,29604+49]..[908,30063+3]) ghost
                  Pexp_fun
                  Labelled "rule_sig"
                  None
                  pattern (src/deriving.ml[898,29604+50]..[898,29604+58])
                    Ppat_var "rule_sig" (src/deriving.ml[898,29604+50]..[898,29604+58])
                  expression (src/deriving.ml[898,29604+59]..[908,30063+3]) ghost
                    Pexp_fun
                    Labelled "rule_str_expect"
                    None
                    pattern (src/deriving.ml[898,29604+60]..[898,29604+75])
                      Ppat_var "rule_str_expect" (src/deriving.ml[898,29604+60]..[898,29604+75])
                    expression (src/deriving.ml[899,29680+4]..[908,30063+3]) ghost
                      Pexp_fun
                      Labelled "rule_sig_expect"
                      None
                      pattern (src/deriving.ml[899,29680+5]..[899,29680+20])
                        Ppat_var "rule_sig_expect" (src/deriving.ml[899,29680+5]..[899,29680+20])
                      expression (src/deriving.ml[900,29703+2]..[908,30063+3])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/deriving.ml[900,29703+6]..[900,29703+12])
                              Ppat_var "prefix" (src/deriving.ml[900,29703+6]..[900,29703+12])
                            expression (src/deriving.ml[900,29703+15]..[900,29703+24])
                              Pexp_constant PConst_string("ppxlib.",(src/deriving.ml[900,29703+16]..[900,29703+23]),None)
                        ]
                        expression (src/deriving.ml[901,29731+2]..[908,30063+3])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/deriving.ml[901,29731+6]..[901,29731+19])
                                Ppat_var "deriving_attr" (src/deriving.ml[901,29731+6]..[901,29731+19])
                              expression (src/deriving.ml[901,29731+22]..[901,29731+61])
                                Pexp_apply
                                expression (src/deriving.ml[901,29731+22]..[901,29731+38])
                                  Pexp_ident "mk_deriving_attr" (src/deriving.ml[901,29731+22]..[901,29731+38])
                                [
                                  <arg>
                                  Labelled "suffix"
                                    expression (src/deriving.ml[901,29731+47]..[901,29731+49])
                                      Pexp_constant PConst_string("",(src/deriving.ml[901,29731+48]..[901,29731+48]),None)
                                  <arg>
                                  Labelled "prefix"
                                    expression (src/deriving.ml[901,29731+51]..[901,29731+57])
                                      Pexp_ident "prefix" (src/deriving.ml[901,29731+51]..[901,29731+57])
                                  <arg>
                                  Nolabel
                                    expression (src/deriving.ml[901,29731+58]..[901,29731+61])
                                      Pexp_ident "typ" (src/deriving.ml[901,29731+58]..[901,29731+61])
                                ]
                          ]
                          expression (src/deriving.ml[902,29796+2]..[908,30063+3])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/deriving.ml[902,29796+6]..[902,29796+26])
                                  Ppat_var "deriving_attr_expect" (src/deriving.ml[902,29796+6]..[902,29796+26])
                                expression (src/deriving.ml[902,29796+29]..[902,29796+75])
                                  Pexp_apply
                                  expression (src/deriving.ml[902,29796+29]..[902,29796+45])
                                    Pexp_ident "mk_deriving_attr" (src/deriving.ml[902,29796+29]..[902,29796+45])
                                  [
                                    <arg>
                                    Labelled "suffix"
                                      expression (src/deriving.ml[902,29796+54]..[902,29796+63])
                                        Pexp_constant PConst_string("_inline",(src/deriving.ml[902,29796+55]..[902,29796+62]),None)
                                    <arg>
                                    Labelled "prefix"
                                      expression (src/deriving.ml[902,29796+65]..[902,29796+71])
                                        Pexp_ident "prefix" (src/deriving.ml[902,29796+65]..[902,29796+71])
                                    <arg>
                                    Nolabel
                                      expression (src/deriving.ml[902,29796+72]..[902,29796+75])
                                        Pexp_ident "typ" (src/deriving.ml[902,29796+72]..[902,29796+75])
                                  ]
                            ]
                            expression (src/deriving.ml[903,29875+2]..[908,30063+3])
                              Pexp_construct "::" (src/deriving.ml[904,29879+4]..[908,30063+3]) ghost
                              Some
                                expression (src/deriving.ml[904,29879+4]..[908,30063+3]) ghost
                                  Pexp_tuple
                                  [
                                    expression (src/deriving.ml[904,29879+4]..[904,29879+37])
                                      Pexp_apply
                                      expression (src/deriving.ml[904,29879+4]..[904,29879+12])
                                        Pexp_ident "rule_sig" (src/deriving.ml[904,29879+4]..[904,29879+12])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/deriving.ml[904,29879+13]..[904,29879+26])
                                            Pexp_ident "deriving_attr" (src/deriving.ml[904,29879+13]..[904,29879+26])
                                        <arg>
                                        Nolabel
                                          expression (src/deriving.ml[904,29879+27]..[904,29879+37])
                                            Pexp_ident "expand_sig" (src/deriving.ml[904,29879+27]..[904,29879+37])
                                      ]
                                    expression (src/deriving.ml[905,29918+4]..[908,30063+3]) ghost
                                      Pexp_construct "::" (src/deriving.ml[905,29918+4]..[908,30063+3]) ghost
                                      Some
                                        expression (src/deriving.ml[905,29918+4]..[908,30063+3]) ghost
                                          Pexp_tuple
                                          [
                                            expression (src/deriving.ml[905,29918+4]..[905,29918+37])
                                              Pexp_apply
                                              expression (src/deriving.ml[905,29918+4]..[905,29918+12])
                                                Pexp_ident "rule_str" (src/deriving.ml[905,29918+4]..[905,29918+12])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/deriving.ml[905,29918+13]..[905,29918+26])
                                                    Pexp_ident "deriving_attr" (src/deriving.ml[905,29918+13]..[905,29918+26])
                                                <arg>
                                                Nolabel
                                                  expression (src/deriving.ml[905,29918+27]..[905,29918+37])
                                                    Pexp_ident "expand_str" (src/deriving.ml[905,29918+27]..[905,29918+37])
                                              ]
                                            expression (src/deriving.ml[906,29957+4]..[908,30063+3]) ghost
                                              Pexp_construct "::" (src/deriving.ml[906,29957+4]..[908,30063+3]) ghost
                                              Some
                                                expression (src/deriving.ml[906,29957+4]..[908,30063+3]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (src/deriving.ml[906,29957+4]..[906,29957+51])
                                                      Pexp_apply
                                                      expression (src/deriving.ml[906,29957+4]..[906,29957+19])
                                                        Pexp_ident "rule_str_expect" (src/deriving.ml[906,29957+4]..[906,29957+19])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/deriving.ml[906,29957+20]..[906,29957+40])
                                                            Pexp_ident "deriving_attr_expect" (src/deriving.ml[906,29957+20]..[906,29957+40])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/deriving.ml[906,29957+41]..[906,29957+51])
                                                            Pexp_ident "expand_str" (src/deriving.ml[906,29957+41]..[906,29957+51])
                                                      ]
                                                    expression (src/deriving.ml[907,30010+4]..[908,30063+3]) ghost
                                                      Pexp_construct "::" (src/deriving.ml[907,30010+4]..[908,30063+3]) ghost
                                                      Some
                                                        expression (src/deriving.ml[907,30010+4]..[908,30063+3]) ghost
                                                          Pexp_tuple
                                                          [
                                                            expression (src/deriving.ml[907,30010+4]..[907,30010+51])
                                                              Pexp_apply
                                                              expression (src/deriving.ml[907,30010+4]..[907,30010+19])
                                                                Pexp_ident "rule_sig_expect" (src/deriving.ml[907,30010+4]..[907,30010+19])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/deriving.ml[907,30010+20]..[907,30010+40])
                                                                    Pexp_ident "deriving_attr_expect" (src/deriving.ml[907,30010+20]..[907,30010+40])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/deriving.ml[907,30010+41]..[907,30010+51])
                                                                    Pexp_ident "expand_sig" (src/deriving.ml[907,30010+41]..[907,30010+51])
                                                              ]
                                                            expression (src/deriving.ml[908,30063+2]..[908,30063+3]) ghost
                                                              Pexp_construct "[]" (src/deriving.ml[908,30063+2]..[908,30063+3]) ghost
                                                              None
                                                          ]
                                                  ]
                                          ]
                                  ]
    ]
  structure_item (src/deriving.ml[910,30068+0]..[916,30359+64])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[910,30068+4]..[910,30068+19])
          Ppat_var "rules_type_decl" (src/deriving.ml[910,30068+4]..[910,30068+19])
        expression (src/deriving.ml[911,30090+2]..[916,30359+64])
          Pexp_apply
          expression (src/deriving.ml[911,30090+2]..[911,30090+7])
            Pexp_ident "rules" (src/deriving.ml[911,30090+2]..[911,30090+7])
          [
            <arg>
            Labelled "typ"
              expression (src/deriving.ml[911,30090+13]..[911,30090+29])
                Pexp_construct "Type_declaration" (src/deriving.ml[911,30090+13]..[911,30090+29])
                None
            <arg>
            Labelled "expand_str"
              expression (src/deriving.ml[911,30090+42]..[911,30090+63])
                Pexp_ident "expand_str_type_decls" (src/deriving.ml[911,30090+42]..[911,30090+63])
            <arg>
            Labelled "expand_sig"
              expression (src/deriving.ml[912,30154+16]..[912,30154+37])
                Pexp_ident "expand_sig_type_decls" (src/deriving.ml[912,30154+16]..[912,30154+37])
            <arg>
            Labelled "rule_str"
              expression (src/deriving.ml[913,30192+14]..[913,30192+50])
                Pexp_ident "Context_free.Rule.attr_str_type_decl" (src/deriving.ml[913,30192+14]..[913,30192+50])
            <arg>
            Labelled "rule_sig"
              expression (src/deriving.ml[914,30243+14]..[914,30243+50])
                Pexp_ident "Context_free.Rule.attr_sig_type_decl" (src/deriving.ml[914,30243+14]..[914,30243+50])
            <arg>
            Labelled "rule_str_expect"
              expression (src/deriving.ml[915,30294+21]..[915,30294+64])
                Pexp_ident "Context_free.Rule.attr_str_type_decl_expect" (src/deriving.ml[915,30294+21]..[915,30294+64])
            <arg>
            Labelled "rule_sig_expect"
              expression (src/deriving.ml[916,30359+21]..[916,30359+64])
                Pexp_ident "Context_free.Rule.attr_sig_type_decl_expect" (src/deriving.ml[916,30359+21]..[916,30359+64])
          ]
    ]
  structure_item (src/deriving.ml[918,30425+0]..[924,30706+63])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[918,30425+4]..[918,30425+18])
          Ppat_var "rules_type_ext" (src/deriving.ml[918,30425+4]..[918,30425+18])
        expression (src/deriving.ml[919,30446+2]..[924,30706+63])
          Pexp_apply
          expression (src/deriving.ml[919,30446+2]..[919,30446+7])
            Pexp_ident "rules" (src/deriving.ml[919,30446+2]..[919,30446+7])
          [
            <arg>
            Labelled "typ"
              expression (src/deriving.ml[919,30446+13]..[919,30446+27])
                Pexp_construct "Type_extension" (src/deriving.ml[919,30446+13]..[919,30446+27])
                None
            <arg>
            Labelled "expand_str"
              expression (src/deriving.ml[919,30446+40]..[919,30446+59])
                Pexp_ident "expand_str_type_ext" (src/deriving.ml[919,30446+40]..[919,30446+59])
            <arg>
            Labelled "expand_sig"
              expression (src/deriving.ml[920,30506+16]..[920,30506+35])
                Pexp_ident "expand_sig_type_ext" (src/deriving.ml[920,30506+16]..[920,30506+35])
            <arg>
            Labelled "rule_str"
              expression (src/deriving.ml[921,30542+14]..[921,30542+49])
                Pexp_ident "Context_free.Rule.attr_str_type_ext" (src/deriving.ml[921,30542+14]..[921,30542+49])
            <arg>
            Labelled "rule_sig"
              expression (src/deriving.ml[922,30592+14]..[922,30592+49])
                Pexp_ident "Context_free.Rule.attr_sig_type_ext" (src/deriving.ml[922,30592+14]..[922,30592+49])
            <arg>
            Labelled "rule_str_expect"
              expression (src/deriving.ml[923,30642+21]..[923,30642+63])
                Pexp_ident "Context_free.Rule.attr_str_type_ext_expect" (src/deriving.ml[923,30642+21]..[923,30642+63])
            <arg>
            Labelled "rule_sig_expect"
              expression (src/deriving.ml[924,30706+21]..[924,30706+63])
                Pexp_ident "Context_free.Rule.attr_sig_type_ext_expect" (src/deriving.ml[924,30706+21]..[924,30706+63])
          ]
    ]
  structure_item (src/deriving.ml[926,30771+0]..[932,31058+64])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[926,30771+4]..[926,30771+19])
          Ppat_var "rules_exception" (src/deriving.ml[926,30771+4]..[926,30771+19])
        expression (src/deriving.ml[927,30793+2]..[932,31058+64])
          Pexp_apply
          expression (src/deriving.ml[927,30793+2]..[927,30793+7])
            Pexp_ident "rules" (src/deriving.ml[927,30793+2]..[927,30793+7])
          [
            <arg>
            Labelled "typ"
              expression (src/deriving.ml[927,30793+13]..[927,30793+27])
                Pexp_construct "Type_exception" (src/deriving.ml[927,30793+13]..[927,30793+27])
                None
            <arg>
            Labelled "expand_str"
              expression (src/deriving.ml[927,30793+40]..[927,30793+60])
                Pexp_ident "expand_str_exception" (src/deriving.ml[927,30793+40]..[927,30793+60])
            <arg>
            Labelled "expand_sig"
              expression (src/deriving.ml[928,30854+16]..[928,30854+36])
                Pexp_ident "expand_sig_exception" (src/deriving.ml[928,30854+16]..[928,30854+36])
            <arg>
            Labelled "rule_str"
              expression (src/deriving.ml[929,30891+14]..[929,30891+50])
                Pexp_ident "Context_free.Rule.attr_str_exception" (src/deriving.ml[929,30891+14]..[929,30891+50])
            <arg>
            Labelled "rule_sig"
              expression (src/deriving.ml[930,30942+14]..[930,30942+50])
                Pexp_ident "Context_free.Rule.attr_sig_exception" (src/deriving.ml[930,30942+14]..[930,30942+50])
            <arg>
            Labelled "rule_str_expect"
              expression (src/deriving.ml[931,30993+21]..[931,30993+64])
                Pexp_ident "Context_free.Rule.attr_str_exception_expect" (src/deriving.ml[931,30993+21]..[931,30993+64])
            <arg>
            Labelled "rule_sig_expect"
              expression (src/deriving.ml[932,31058+21]..[932,31058+64])
                Pexp_ident "Context_free.Rule.attr_sig_exception_expect" (src/deriving.ml[932,31058+21]..[932,31058+64])
          ]
    ]
  structure_item (src/deriving.ml[934,31124+0]..[940,31462+71])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[934,31124+4]..[934,31124+26])
          Ppat_var "rules_module_type_decl" (src/deriving.ml[934,31124+4]..[934,31124+26])
        expression (src/deriving.ml[935,31153+2]..[940,31462+71])
          Pexp_apply
          expression (src/deriving.ml[935,31153+2]..[935,31153+7])
            Pexp_ident "rules" (src/deriving.ml[935,31153+2]..[935,31153+7])
          [
            <arg>
            Labelled "typ"
              expression (src/deriving.ml[935,31153+13]..[935,31153+36])
                Pexp_construct "Module_type_declaration" (src/deriving.ml[935,31153+13]..[935,31153+36])
                None
            <arg>
            Labelled "expand_str"
              expression (src/deriving.ml[935,31153+49]..[935,31153+76])
                Pexp_ident "expand_str_module_type_decl" (src/deriving.ml[935,31153+49]..[935,31153+76])
            <arg>
            Labelled "expand_sig"
              expression (src/deriving.ml[936,31230+16]..[936,31230+43])
                Pexp_ident "expand_sig_module_type_decl" (src/deriving.ml[936,31230+16]..[936,31230+43])
            <arg>
            Labelled "rule_str"
              expression (src/deriving.ml[937,31274+14]..[937,31274+57])
                Pexp_ident "Context_free.Rule.attr_str_module_type_decl" (src/deriving.ml[937,31274+14]..[937,31274+57])
            <arg>
            Labelled "rule_sig"
              expression (src/deriving.ml[938,31332+14]..[938,31332+57])
                Pexp_ident "Context_free.Rule.attr_sig_module_type_decl" (src/deriving.ml[938,31332+14]..[938,31332+57])
            <arg>
            Labelled "rule_str_expect"
              expression (src/deriving.ml[939,31390+21]..[939,31390+71])
                Pexp_ident "Context_free.Rule.attr_str_module_type_decl_expect" (src/deriving.ml[939,31390+21]..[939,31390+71])
            <arg>
            Labelled "rule_sig_expect"
              expression (src/deriving.ml[940,31462+21]..[940,31462+71])
                Pexp_ident "Context_free.Rule.attr_sig_module_type_decl_expect" (src/deriving.ml[940,31462+21]..[940,31462+71])
          ]
    ]
  structure_item (src/deriving.ml[942,31535+0]..[947,31663+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[942,31535+4]..[942,31535+6])
          Ppat_construct "()" (src/deriving.ml[942,31535+4]..[942,31535+6])
          None
        expression (src/deriving.ml[943,31544+2]..[947,31663+75])
          Pexp_let Nonrec
          [
            <def>
              pattern (src/deriving.ml[943,31544+6]..[943,31544+11])
                Ppat_var "rules" (src/deriving.ml[943,31544+6]..[943,31544+11])
              expression (src/deriving.ml[944,31558+4]..[945,31639+18])
                Pexp_apply
                expression (src/deriving.ml[945,31639+4]..[945,31639+6])
                  Pexp_ident "|>" (src/deriving.ml[945,31639+4]..[945,31639+6])
                [
                  <arg>
                  Nolabel
                    expression (src/deriving.ml[944,31558+4]..[944,31558+80])
                      Pexp_construct "::" (src/deriving.ml[944,31558+6]..[944,31558+80]) ghost
                      Some
                        expression (src/deriving.ml[944,31558+6]..[944,31558+80]) ghost
                          Pexp_tuple
                          [
                            expression (src/deriving.ml[944,31558+6]..[944,31558+21])
                              Pexp_ident "rules_type_decl" (src/deriving.ml[944,31558+6]..[944,31558+21])
                            expression (src/deriving.ml[944,31558+23]..[944,31558+80]) ghost
                              Pexp_construct "::" (src/deriving.ml[944,31558+23]..[944,31558+80]) ghost
                              Some
                                expression (src/deriving.ml[944,31558+23]..[944,31558+80]) ghost
                                  Pexp_tuple
                                  [
                                    expression (src/deriving.ml[944,31558+23]..[944,31558+37])
                                      Pexp_ident "rules_type_ext" (src/deriving.ml[944,31558+23]..[944,31558+37])
                                    expression (src/deriving.ml[944,31558+39]..[944,31558+80]) ghost
                                      Pexp_construct "::" (src/deriving.ml[944,31558+39]..[944,31558+80]) ghost
                                      Some
                                        expression (src/deriving.ml[944,31558+39]..[944,31558+80]) ghost
                                          Pexp_tuple
                                          [
                                            expression (src/deriving.ml[944,31558+39]..[944,31558+54])
                                              Pexp_ident "rules_exception" (src/deriving.ml[944,31558+39]..[944,31558+54])
                                            expression (src/deriving.ml[944,31558+56]..[944,31558+80]) ghost
                                              Pexp_construct "::" (src/deriving.ml[944,31558+56]..[944,31558+80]) ghost
                                              Some
                                                expression (src/deriving.ml[944,31558+56]..[944,31558+80]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (src/deriving.ml[944,31558+56]..[944,31558+78])
                                                      Pexp_ident "rules_module_type_decl" (src/deriving.ml[944,31558+56]..[944,31558+78])
                                                    expression (src/deriving.ml[944,31558+79]..[944,31558+80]) ghost
                                                      Pexp_construct "[]" (src/deriving.ml[944,31558+79]..[944,31558+80]) ghost
                                                      None
                                                  ]
                                          ]
                                  ]
                          ]
                  <arg>
                  Nolabel
                    expression (src/deriving.ml[945,31639+7]..[945,31639+18])
                      Pexp_ident "List.concat" (src/deriving.ml[945,31639+7]..[945,31639+18])
                ]
          ]
          expression (src/deriving.ml[947,31663+2]..[947,31663+75])
            Pexp_apply
            expression (src/deriving.ml[947,31663+2]..[947,31663+32])
              Pexp_ident "Driver.register_transformation" (src/deriving.ml[947,31663+2]..[947,31663+32])
            [
              <arg>
              Nolabel
                expression (src/deriving.ml[947,31663+33]..[947,31663+43])
                  Pexp_constant PConst_string("deriving",(src/deriving.ml[947,31663+34]..[947,31663+42]),None)
              <arg>
              Labelled "aliases"
                expression (src/deriving.ml[947,31663+53]..[947,31663+68])
                  Pexp_construct "::" (src/deriving.ml[947,31663+55]..[947,31663+68]) ghost
                  Some
                    expression (src/deriving.ml[947,31663+55]..[947,31663+68]) ghost
                      Pexp_tuple
                      [
                        expression (src/deriving.ml[947,31663+55]..[947,31663+66])
                          Pexp_constant PConst_string("type_conv",(src/deriving.ml[947,31663+56]..[947,31663+65]),None)
                        expression (src/deriving.ml[947,31663+67]..[947,31663+68]) ghost
                          Pexp_construct "[]" (src/deriving.ml[947,31663+67]..[947,31663+68]) ghost
                          None
                      ]
              <arg>
              Labelled "rules"
                expression (src/deriving.ml[947,31663+70]..[947,31663+75])
                  Pexp_ident "rules" (src/deriving.ml[947,31663+70]..[947,31663+75])
            ]
    ]
]

open Import
open Ast_builder.Default
let do_insert_unused_warning_attribute = ref false
let keep_w32_impl = ref false
let keep_w32_intf = ref false
let () =
  let keep_w32_spec =
    Stdlib.Arg.Symbol
      (["impl"; "intf"; "both"],
        (function
         | "impl" -> keep_w32_impl := true
         | "intf" -> keep_w32_intf := true
         | "both" -> (keep_w32_impl := true; keep_w32_intf := true)
         | _ -> assert false)) in
  let conv_w32_spec =
    Stdlib.Arg.Symbol
      (["code"; "attribute"],
        (function
         | "code" -> do_insert_unused_warning_attribute := false
         | "attribute" -> do_insert_unused_warning_attribute := true
         | _ -> assert false)) in
  Driver.add_arg "-deriving-keep-w32" keep_w32_spec
    ~doc:" Do not try to disable warning 32 for the generated code";
  Driver.add_arg "-deriving-disable-w32-method" conv_w32_spec
    ~doc:" How to disable warning 32 for the generated code";
  Driver.add_arg "-type-conv-keep-w32" keep_w32_spec
    ~doc:" Deprecated, use -deriving-keep-w32";
  Driver.add_arg "-type-conv-w32" conv_w32_spec
    ~doc:" Deprecated, use -deriving-disable-w32-method"
let keep_w32_impl () = (!keep_w32_impl) || (Driver.pretty ())
let keep_w32_intf () = (!keep_w32_intf) || (Driver.pretty ())
let keep_w60_impl = ref false
let keep_w60_intf = ref false
let () =
  let keep_w60_spec =
    Stdlib.Arg.Symbol
      (["impl"; "intf"; "both"],
        (function
         | "impl" -> keep_w60_impl := true
         | "intf" -> keep_w60_intf := true
         | "both" -> (keep_w60_impl := true; keep_w60_intf := true)
         | _ -> assert false)) in
  Driver.add_arg "-deriving-keep-w60" keep_w60_spec
    ~doc:" Do not try to disable warning 60 for the generated code"
let keep_w60_impl () = (!keep_w60_impl) || (Driver.pretty ())
let keep_w60_intf () = (!keep_w60_intf) || (Driver.pretty ())
let allow_unused_code_warnings =
  ref Options.default_allow_unused_code_warnings
let () =
  Driver.add_arg "-unused-code-warnings"
    (Bool ((:=) allow_unused_code_warnings))
    ~doc:"_ Allow ppx derivers to enable unused code warnings"
let allow_unused_code_warnings () = !allow_unused_code_warnings
module Args =
  struct
    include
      (Ast_pattern :
        module type of struct include Ast_pattern end with type
          ('a,'b,'c) t :=  ('a, 'b, 'c) Ast_pattern.t)
    type 'a param =
      {
      name: string ;
      pattern: (expression, 'a) Ast_pattern.Packed.t ;
      default: 'a }
    let arg name pattern =
      {
        name;
        default = None;
        pattern = (Ast_pattern.Packed.create pattern (fun x -> Some x))
      }
    let flag name =
      let pattern = pexp_ident (lident (string name)) in
      {
        name;
        default = false;
        pattern = (Ast_pattern.Packed.create pattern true)
      }
    type (_, _) t =
      | Nil: ('m, 'm) t 
      | Cons: ('m1, 'a -> 'm2) t * 'a param -> ('m1, 'm2) t 
    let empty = Nil
    let (+>) a b = Cons (a, b)
    let rec names : type a b. (a, b) t -> string list =
      function | Nil -> [] | Cons (t, p) -> (p.name) :: (names t)
    module Instance =
      struct
        type (_, _) instance =
          | I_nil: ('m, 'm) instance 
          | I_cons: ('m1, 'a -> 'm2) instance * 'a -> ('m1, 'm2) instance 
        let rec create : type a b.
          (a, b) t -> (string * expression) list -> (a, b) instance =
          fun spec ->
            fun args ->
              match spec with
              | Nil -> I_nil
              | Cons (t, p) ->
                  let value =
                    match List.assoc_opt p.name args with
                    | None -> p.default
                    | Some expr ->
                        Ast_pattern.Packed.parse p.pattern expr.pexp_loc expr in
                  I_cons ((create t args), value)
        let rec apply : type a b. (a, b) instance -> a -> b =
          fun t ->
            fun f -> match t with | I_nil -> f | I_cons (t, x) -> apply t f x
      end
    let apply t args f = Instance.apply (Instance.create t args) f
  end
type t = string
let ignore (_ : t) = ()
type parsed_args =
  | Args of (string * expression) list 
  | Unknown_syntax of Location.t * string 
type 'item derived_code = {
  items: 'item list ;
  unused_code_warnings: bool }
module Generator =
  struct
    type deriver = t
    type ('a, 'b) t =
      | T:
      {
      spec: ('c, 'a) Args.t ;
      gen: ctxt:Expansion_context.Deriver.t -> 'b -> 'c ;
      arg_names: String.Set.t ;
      deps: deriver list ;
      unused_code_warnings: bool } -> ('a, 'b) t 
    let deps (T t) = t.deps
    module V2 =
      struct
        let make ?attributes:(_= [])  ?(deps= [])  ?(unused_code_warnings=
          false)  spec gen =
          let arg_names = String.Set.of_list (Args.names spec) in
          T { spec; gen; arg_names; deps; unused_code_warnings }
        let make_noarg ?attributes  ?deps  ?unused_code_warnings  gen =
          make ?attributes ?deps ?unused_code_warnings Args.empty gen
      end
    let make ?attributes  ?deps  ?unused_code_warnings  spec gen =
      V2.make ?attributes ?deps ?unused_code_warnings spec
        (Expansion_context.Deriver.with_loc_and_path gen)
    let make_noarg ?attributes  ?deps  ?unused_code_warnings  gen =
      make ?attributes ?deps ?unused_code_warnings Args.empty gen
    let merge_accepted_args l =
      let rec loop acc =
        function
        | [] -> acc
        | (T t)::rest -> loop (String.Set.union acc t.arg_names) rest in
      loop String.Set.empty l
    let check_arguments name generators (args : (string * expression) list) =
      let empty_label_error =
        List.filter_map args
          ~f:(fun (label, e) ->
                if String.is_empty label
                then
                  Some
                    (Location.error_extensionf ~loc:(e.pexp_loc)
                       "Ppxlib.Deriving: generator arguments must be labelled")
                else None) in
      let duplicate_argument_error =
        (Option.map
           (List.find_a_dup args
              ~compare:(fun (a, _) -> fun (b, _) -> String.compare a b))
           ~f:(fun (label, e) ->
                 Location.error_extensionf ~loc:(e.pexp_loc)
                   "Ppxlib.Deriving: argument labelled '%s' appears more than once"
                   label))
          |> Option.to_list in
      let accepted_args = merge_accepted_args generators in
      let unaccepted_argument =
        List.filter_map args
          ~f:(fun (label, e) ->
                if not (String.Set.mem label accepted_args)
                then
                  let spellcheck_msg =
                    match Spellcheck.spellcheck
                            (String.Set.elements accepted_args) label
                    with
                    | None -> ""
                    | Some s -> ".\n" ^ s in
                  Some
                    (Location.error_extensionf ~loc:(e.pexp_loc)
                       "Ppxlib.Deriving: generator '%s' doesn't accept argument '%s'%s"
                       name label spellcheck_msg)
                else None) in
      let errors =
        empty_label_error @ (duplicate_argument_error @ unaccepted_argument) in
      if (List.length errors) = 0 then Ok () else Error errors
    let apply (T t) ~name:_  ~ctxt  x args =
      Args.apply t.spec args (t.gen ~ctxt x)
    let apply_all ~ctxt  entry (name, generators, args) =
      let open Result in
        (check_arguments name.txt generators args) >>|
          (fun () ->
             List.map generators
               ~f:(fun (T t) ->
                     {
                       items =
                         (apply (T t) ~name:(name.txt) ~ctxt entry args);
                       unused_code_warnings = (t.unused_code_warnings)
                     }))
    let apply_all ~ctxt  entry generators ext_to_item =
      let l = List.map generators ~f:(apply_all ~ctxt entry) in
      let (l1, lerr) =
        List.partition_map (function | Ok e -> Left e | Error e -> Right e) l in
      let lerr =
        (List.concat lerr) |>
          (List.map ~f:(fun err -> ext_to_item ~loc:Location.none err [])) in
      (List.concat l1) @ [{ items = lerr; unused_code_warnings = false }]
  end
module Deriver =
  struct
    module Actual_deriver =
      struct
        type t =
          {
          name: string ;
          str_type_decl:
            (structure, (rec_flag * type_declaration list)) Generator.t
              option
            ;
          str_type_ext: (structure, type_extension) Generator.t option ;
          str_exception: (structure, type_exception) Generator.t option ;
          str_module_type_decl:
            (structure, module_type_declaration) Generator.t option ;
          sig_type_decl:
            (signature, (rec_flag * type_declaration list)) Generator.t
              option
            ;
          sig_type_ext: (signature, type_extension) Generator.t option ;
          sig_exception: (signature, type_exception) Generator.t option ;
          sig_module_type_decl:
            (signature, module_type_declaration) Generator.t option ;
          extension:
            (loc:Location.t -> path:string -> core_type -> expression) option }
      end
    module Alias =
      struct
        type t =
          {
          str_type_decl: string list ;
          str_type_ext: string list ;
          str_exception: string list ;
          str_module_type_decl: string list ;
          sig_type_decl: string list ;
          sig_type_ext: string list ;
          sig_exception: string list ;
          sig_module_type_decl: string list }
      end
    module Field =
      struct
        type kind =
          | Str 
          | Sig 
        type ('a, 'b) t =
          {
          name: string ;
          kind: kind ;
          get: Actual_deriver.t -> ('a, 'b) Generator.t option ;
          get_set: Alias.t -> string list }
        let str_type_decl =
          {
            kind = Str;
            name = "type";
            get = (fun t -> t.str_type_decl);
            get_set = (fun t -> t.str_type_decl)
          }
        let str_type_ext =
          {
            kind = Str;
            name = "type extension";
            get = (fun t -> t.str_type_ext);
            get_set = (fun t -> t.str_type_ext)
          }
        let str_exception =
          {
            kind = Str;
            name = "exception";
            get = (fun t -> t.str_exception);
            get_set = (fun t -> t.str_exception)
          }
        let str_module_type_decl =
          {
            kind = Str;
            name = "module type";
            get = (fun t -> t.str_module_type_decl);
            get_set = (fun t -> t.str_module_type_decl)
          }
        let sig_type_decl =
          {
            kind = Sig;
            name = "signature type";
            get = (fun t -> t.sig_type_decl);
            get_set = (fun t -> t.sig_type_decl)
          }
        let sig_type_ext =
          {
            kind = Sig;
            name = "signature type extension";
            get = (fun t -> t.sig_type_ext);
            get_set = (fun t -> t.sig_type_ext)
          }
        let sig_exception =
          {
            kind = Sig;
            name = "signature exception";
            get = (fun t -> t.sig_exception);
            get_set = (fun t -> t.sig_exception)
          }
        let sig_module_type_decl =
          {
            kind = Sig;
            name = "signature module type";
            get = (fun t -> t.sig_module_type_decl);
            get_set = (fun t -> t.sig_module_type_decl)
          }
      end
    type t =
      | Actual_deriver of Actual_deriver.t 
      | Alias of Alias.t 
    type Ppx_derivers.deriver +=  
      | T of t 
    let derivers () =
      List.filter_map (Ppx_derivers.derivers ())
        ~f:(function | (name, T t) -> Some (name, t) | _ -> None)
    exception Not_supported of string 
    let resolve_actual_derivers (field : (_, _) Field.t) name =
      let rec loop name collected =
        if
          List.exists collected
            ~f:(fun (d : Actual_deriver.t) -> String.equal d.name name)
        then collected
        else
          (match Ppx_derivers.lookup name with
           | Some (T (Actual_deriver drv)) -> drv :: collected
           | Some (T (Alias alias)) ->
               let set = field.get_set alias in
               List.fold_right set ~init:collected ~f:loop
           | _ -> raise (Not_supported name)) in
      List.rev (loop name [])
    let resolve_internal (field : (_, _) Field.t) name =
      List.map (resolve_actual_derivers field name)
        ~f:(fun drv ->
              match field.get drv with
              | None -> raise (Not_supported name)
              | Some g -> ((drv.name), g))
    let supported_for field =
      (List.fold_left (derivers ()) ~init:String.Set.empty
         ~f:(fun acc ->
               fun (name, _) ->
                 match resolve_internal field name with
                 | _ -> String.Set.add name acc
                 | exception Not_supported _ -> acc))
        |> String.Set.elements
    let not_supported (field : (_, _) Field.t) ?(spellcheck= true)  name =
      let spellcheck_msg =
        if spellcheck
        then
          match Spellcheck.spellcheck (supported_for field) name.txt with
          | None -> ""
          | Some s -> ".\n" ^ s
        else "" in
      Location.error_extensionf ~loc:(name.loc)
        "Ppxlib.Deriving: '%s' is not a supported %s deriving generator%s"
        name.txt field.name spellcheck_msg
    let resolve field name =
      try Ok (resolve_internal field name.txt)
      with
      | Not_supported name' ->
          Error
            (not_supported field ~spellcheck:(String.equal name.txt name')
               name)
    let resolve_all field derivers =
      let (derivers_and_args, derivers_and_args_errors) =
        (List.partition_map
           (fun (name, args) ->
              match Ppx_derivers.lookup name.txt with
              | None -> Either.Right (not_supported field name)
              | Some (T _) ->
                  (match args with
                   | Args l -> Either.Left (Some (name, l))
                   | Unknown_syntax (loc, msg) ->
                       Either.Right
                         (Location.error_extensionf ~loc
                            "Ppxlib.Deriving: %s" msg))
              | Some _ -> Either.Left None) derivers)
          |> (fun (l1, l2) -> ((List.filter_opt l1), l2)) in
      let seen = Hashtbl.create 16 in
      let (result, dep_errors) =
        List.fold_left ~init:([], []) derivers_and_args
          ~f:(fun (result, errors) ->
                fun (name, args) ->
                  match resolve field name with
                  | Error e -> (result, (errors @ [e]))
                  | Ok named_generators ->
                      let l_err =
                        List.concat_map named_generators
                          ~f:(fun (actual_deriver_name, gen) ->
                                let dup_error =
                                  if
                                    Options.fail_on_duplicate_derivers &&
                                      (Hashtbl.mem seen actual_deriver_name)
                                  then
                                    [Location.error_extensionf
                                       ~loc:(name.loc)
                                       "Deriver %s appears twice"
                                       actual_deriver_name]
                                  else [] in
                                let l_err =
                                  List.concat_map (Generator.deps gen)
                                    ~f:(fun dep ->
                                          List.filter_map
                                            (resolve_actual_derivers field
                                               dep)
                                            ~f:(fun drv ->
                                                  let dep_name = drv.name in
                                                  if
                                                    not
                                                      (Hashtbl.mem seen
                                                         dep_name)
                                                  then
                                                    Some
                                                      (Location.error_extensionf
                                                         ~loc:(name.loc)
                                                         "Deriver %s is needed for %s, you need to add it before in the list"
                                                         dep_name name.txt)
                                                  else None)) in
                                Hashtbl.set seen ~key:actual_deriver_name
                                  ~data:();
                                dup_error @ l_err) in
                      ((result @
                          [(name, (List.map named_generators ~f:snd), args)]),
                        (errors @ l_err))) in
      (result, (derivers_and_args_errors @ dep_errors))
    let add ?str_type_decl  ?str_type_ext  ?str_exception 
      ?str_module_type_decl  ?sig_type_decl  ?sig_type_ext  ?sig_exception 
      ?sig_module_type_decl  ?extension  name =
      let actual_deriver : Actual_deriver.t =
        {
          name;
          str_type_decl;
          str_type_ext;
          str_exception;
          str_module_type_decl;
          sig_type_decl;
          sig_type_ext;
          sig_exception;
          sig_module_type_decl;
          extension
        } in
      Ppx_derivers.register name (T (Actual_deriver actual_deriver));
      (match extension with
       | None -> ()
       | Some f ->
           let extension =
             Extension.declare name Expression
               (let open Ast_pattern in ptyp __) f in
           Driver.register_transformation ("Ppxlib.Deriving." ^ name)
             ~rules:[Context_free.Rule.extension extension]);
      name
    let add_alias name ?str_type_decl  ?str_type_ext  ?str_exception 
      ?str_module_type_decl  ?sig_type_decl  ?sig_type_ext  ?sig_exception 
      ?sig_module_type_decl  set =
      let alias : Alias.t =
        let get = function | None -> set | Some set -> set in
        {
          str_type_decl = (get str_type_decl);
          str_type_ext = (get str_type_ext);
          str_exception = (get str_exception);
          str_module_type_decl = (get str_module_type_decl);
          sig_type_decl = (get sig_type_decl);
          sig_type_ext = (get sig_type_ext);
          sig_exception = (get sig_exception);
          sig_module_type_decl = (get sig_module_type_decl)
        } in
      Ppx_derivers.register name (T (Alias alias)); name
  end
let add = Deriver.add
let add_alias = Deriver.add_alias
let invalid_with ~loc  =
  Location.raise_errorf ~loc "invalid [@@deriving ] attribute syntax"
let generator_name_of_id loc id =
  match Longident.flatten_exn id with
  | l -> { loc; txt = (String.concat ~sep:"." l) }
  | exception _ -> invalid_with ~loc
exception Unknown_syntax of Location.t * string 
let parse_arguments l =
  try
    Args
      (match l with
       | (Nolabel, e)::[] ->
           (match e.pexp_desc with
            | Pexp_record (fields, None) ->
                List.map fields
                  ~f:(fun (id, expr) ->
                        let name =
                          match id.txt with
                          | Lident s -> s
                          | _ ->
                              raise_notrace
                                (Unknown_syntax
                                   ((id.loc), "simple identifier expected")) in
                        (name, expr))
            | _ ->
                raise_notrace
                  (Unknown_syntax
                     ((e.pexp_loc),
                       "non-optional labelled argument or record expected")))
       | l ->
           List.map l
             ~f:(fun (label, expr) ->
                   match label with
                   | Labelled s -> (s, expr)
                   | _ ->
                       raise_notrace
                         (Unknown_syntax
                            ((expr.pexp_loc),
                              "non-optional labelled argument expected"))))
  with | Unknown_syntax (loc, msg) -> Unknown_syntax (loc, msg)
let mk_deriving_attr context ~prefix  ~suffix  =
  Attribute.declare (prefix ^ ("deriving" ^ suffix)) context
    (let open Ast_pattern in
       let generator_name () =
         map' (pexp_ident __)
           ~f:(fun loc -> fun f -> fun id -> f (generator_name_of_id loc id)) in
       let generator () =
         (map (generator_name ()) ~f:(fun f -> fun x -> f (x, (Args []))))
           |||
           (pack2
              (pexp_apply (generator_name ())
                 (map1 (many __) ~f:parse_arguments))) in
       let generators =
         (pexp_tuple (many (generator ()))) |||
           (map (generator ()) ~f:(fun f -> fun x -> f [x])) in
       pstr ((pstr_eval generators nil) ^:: nil)) (fun x -> x)
let disable_warnings_attribute warnings =
  let loc = Location.none in
  let string =
    ((List.sort warnings ~cmp:Int.compare) |>
       (List.map ~f:(fun warning -> "-" ^ (Int.to_string warning))))
      |> (String.concat ~sep:"") in
  {
    attr_name = { txt = "ocaml.warning"; loc };
    attr_payload = (PStr [pstr_eval ~loc (estring ~loc string) []]);
    attr_loc = loc
  }
let inline_doc_attr =
  let loc = Location.none in
  {
    attr_name = { txt = "ocaml.doc"; loc };
    attr_payload = (PStr [pstr_eval ~loc (estring ~loc "@inline") []]);
    attr_loc = loc
  }
let wrap_str ~loc  ~hide  st =
  let include_infos = include_infos ~loc (pmod_structure ~loc st) in
  let pincl_attributes =
    if hide
    then [inline_doc_attr; Merlin_helpers.hide_attribute]
    else [inline_doc_attr] in
  [pstr_include ~loc { include_infos with pincl_attributes }]
let wrap_str ~loc  ~hide  ~unused_code_warnings  st =
  let loc = { loc with loc_ghost = true } in
  let unused_code_warnings =
    unused_code_warnings && (allow_unused_code_warnings ()) in
  let (warnings, st) =
    if (keep_w32_impl ()) || unused_code_warnings
    then ([], st)
    else
      if not (!do_insert_unused_warning_attribute)
      then
        ([], (Ignore_unused_warning.add_dummy_user_for_values#structure st))
      else ([32], st) in
  let (warnings, st) =
    if
      (keep_w60_impl ()) ||
        (unused_code_warnings ||
           (not (Ignore_unused_warning.binds_module_names#structure st false)))
    then (warnings, st)
    else ((60 :: warnings), st) in
  let (wrap, st) =
    if List.is_empty warnings
    then (hide, st)
    else
      (true, ((pstr_attribute ~loc (disable_warnings_attribute warnings)) ::
        st)) in
  if wrap then wrap_str ~loc ~hide st else st
let wrap_str ~loc  ~hide  list =
  List.concat_map list
    ~f:(fun { items; unused_code_warnings } ->
          if List.is_empty items
          then []
          else wrap_str ~loc ~hide ~unused_code_warnings items)
let wrap_sig ~loc  ~hide  st =
  let include_infos = include_infos ~loc (pmty_signature ~loc st) in
  let pincl_attributes =
    if hide
    then [inline_doc_attr; Merlin_helpers.hide_attribute]
    else [inline_doc_attr] in
  [psig_include ~loc { include_infos with pincl_attributes }]
let wrap_sig ~loc  ~hide  ~unused_code_warnings  sg =
  let loc = { loc with loc_ghost = true } in
  let unused_code_warnings =
    unused_code_warnings && (allow_unused_code_warnings ()) in
  let warnings =
    if (keep_w32_intf ()) || unused_code_warnings then [] else [32] in
  let warnings =
    if
      (keep_w60_intf ()) ||
        ((not (Ignore_unused_warning.binds_module_names#signature sg false))
           || unused_code_warnings)
    then warnings
    else 60 :: warnings in
  let (wrap, sg) =
    if List.is_empty warnings
    then (hide, sg)
    else
      (true, ((psig_attribute ~loc (disable_warnings_attribute warnings)) ::
        sg)) in
  if wrap then wrap_sig ~loc ~hide sg else sg
let wrap_sig ~loc  ~hide  list =
  List.concat_map list
    ~f:(fun { items; unused_code_warnings } ->
          if List.is_empty items
          then []
          else wrap_sig ~loc ~hide ~unused_code_warnings items)
let types_used_by_deriving (tds : type_declaration list) =
  (if keep_w32_impl ()
   then []
   else
     List.map tds
       ~f:(fun td ->
             let typ = Common.core_type_of_type_declaration td in
             let loc = td.ptype_loc in
             pstr_value ~loc Nonrecursive
               [value_binding ~loc ~pat:(ppat_any ~loc)
                  ~expr:(pexp_fun ~loc Nolabel None
                           (ppat_constraint ~loc (ppat_any ~loc) typ)
                           (eunit ~loc))]) : structure_item list)
let merge_generators field l =
  ((List.filter_map l ~f:(fun x -> x)) |> List.concat) |>
    (Deriver.resolve_all field)
let merge_derived lists =
  List.fold_right lists ~init:[]
    ~f:(fun derived ->
          fun acc ->
            match acc with
            | other::others when
                Bool.equal derived.unused_code_warnings
                  other.unused_code_warnings
                -> { other with items = (derived.items @ other.items) } ::
                others
            | _ -> derived :: acc)
let expand_str_type_decls ~ctxt  rec_flag tds values =
  let (generators, l_err) =
    merge_generators Deriver.Field.str_type_decl values in
  let l_err =
    List.map
      ~f:(fun err ->
            Ast_builder.Default.pstr_extension ~loc:Location.none err [])
      l_err in
  let generated =
    ({
       items = ((types_used_by_deriving tds) @ l_err);
       unused_code_warnings = false
     } ::
      (Generator.apply_all ~ctxt (rec_flag, tds) generators
         Ast_builder.Default.pstr_extension))
      |> merge_derived in
  wrap_str ~loc:(Expansion_context.Deriver.derived_item_loc ctxt)
    ~hide:(not @@ (Expansion_context.Deriver.inline ctxt)) generated
let expand_sig_type_decls ~ctxt  rec_flag tds values =
  let (generators, l_err) =
    merge_generators Deriver.Field.sig_type_decl values in
  let l_err =
    List.map
      ~f:(fun err ->
            Ast_builder.Default.psig_extension ~loc:Location.none err [])
      l_err in
  let generated =
    ({ items = l_err; unused_code_warnings = false } ::
      (Generator.apply_all ~ctxt (rec_flag, tds) generators
         Ast_builder.Default.psig_extension))
      |> merge_derived in
  wrap_sig ~loc:(Expansion_context.Deriver.derived_item_loc ctxt)
    ~hide:(not @@ (Expansion_context.Deriver.inline ctxt)) generated
let expand_str_module_type_decl ~ctxt  mtd generators =
  let (generators, l_err) =
    Deriver.resolve_all Deriver.Field.str_module_type_decl generators in
  let l_err =
    List.map
      ~f:(fun err ->
            Ast_builder.Default.pstr_extension ~loc:Location.none err [])
      l_err in
  let generated =
    ({ items = l_err; unused_code_warnings = false } ::
      (Generator.apply_all ~ctxt mtd generators
         Ast_builder.Default.pstr_extension))
      |> merge_derived in
  wrap_str ~loc:(Expansion_context.Deriver.derived_item_loc ctxt)
    ~hide:(not @@ (Expansion_context.Deriver.inline ctxt)) generated
let expand_sig_module_type_decl ~ctxt  mtd generators =
  let (generators, l_err) =
    Deriver.resolve_all Deriver.Field.sig_module_type_decl generators in
  let l_err =
    List.map
      ~f:(fun err ->
            Ast_builder.Default.psig_extension ~loc:Location.none err [])
      l_err in
  let generated =
    ({ items = l_err; unused_code_warnings = false } ::
      (Generator.apply_all ~ctxt mtd generators
         Ast_builder.Default.psig_extension))
      |> merge_derived in
  wrap_sig ~loc:(Expansion_context.Deriver.derived_item_loc ctxt)
    ~hide:(not @@ (Expansion_context.Deriver.inline ctxt)) generated
let expand_str_exception ~ctxt  ec generators =
  let (generators, l_err) =
    Deriver.resolve_all Deriver.Field.str_exception generators in
  let l_err =
    List.map
      ~f:(fun err ->
            Ast_builder.Default.pstr_extension ~loc:Location.none err [])
      l_err in
  let generated =
    ({ items = l_err; unused_code_warnings = false } ::
      (Generator.apply_all ~ctxt ec generators
         Ast_builder.Default.pstr_extension))
      |> merge_derived in
  wrap_str ~loc:(Expansion_context.Deriver.derived_item_loc ctxt)
    ~hide:(not @@ (Expansion_context.Deriver.inline ctxt)) generated
let expand_sig_exception ~ctxt  ec generators =
  let (generators, l_err) =
    Deriver.resolve_all Deriver.Field.sig_exception generators in
  let l_err =
    List.map
      ~f:(fun err ->
            Ast_builder.Default.psig_extension ~loc:Location.none err [])
      l_err in
  let generated =
    ({ items = l_err; unused_code_warnings = false } ::
      (Generator.apply_all ~ctxt ec generators
         Ast_builder.Default.psig_extension))
      |> merge_derived in
  wrap_sig ~loc:(Expansion_context.Deriver.derived_item_loc ctxt)
    ~hide:(not @@ (Expansion_context.Deriver.inline ctxt)) generated
let expand_str_type_ext ~ctxt  te generators =
  let (generators, l_err) =
    Deriver.resolve_all Deriver.Field.str_type_ext generators in
  let l_err =
    List.map
      ~f:(fun err ->
            Ast_builder.Default.pstr_extension ~loc:Location.none err [])
      l_err in
  let generated =
    ({ items = l_err; unused_code_warnings = false } ::
      (Generator.apply_all ~ctxt te generators
         Ast_builder.Default.pstr_extension))
      |> merge_derived in
  wrap_str ~loc:(Expansion_context.Deriver.derived_item_loc ctxt)
    ~hide:(not @@ (Expansion_context.Deriver.inline ctxt)) generated
let expand_sig_type_ext ~ctxt  te generators =
  let (generators, l_err) =
    Deriver.resolve_all Deriver.Field.sig_type_ext generators in
  let l_err =
    List.map
      ~f:(fun err ->
            Ast_builder.Default.psig_extension ~loc:Location.none err [])
      l_err in
  let generated =
    ({ items = l_err; unused_code_warnings = false } ::
      (Generator.apply_all ~ctxt te generators
         Ast_builder.Default.psig_extension))
      |> merge_derived in
  wrap_sig ~loc:(Expansion_context.Deriver.derived_item_loc ctxt)
    ~hide:(not @@ (Expansion_context.Deriver.inline ctxt)) generated
let rules ~typ  ~expand_sig  ~expand_str  ~rule_str  ~rule_sig 
  ~rule_str_expect  ~rule_sig_expect  =
  let prefix = "ppxlib." in
  let deriving_attr = mk_deriving_attr ~suffix:"" ~prefix typ in
  let deriving_attr_expect = mk_deriving_attr ~suffix:"_inline" ~prefix typ in
  [rule_sig deriving_attr expand_sig;
  rule_str deriving_attr expand_str;
  rule_str_expect deriving_attr_expect expand_str;
  rule_sig_expect deriving_attr_expect expand_sig]
let rules_type_decl =
  rules ~typ:Type_declaration ~expand_str:expand_str_type_decls
    ~expand_sig:expand_sig_type_decls
    ~rule_str:Context_free.Rule.attr_str_type_decl
    ~rule_sig:Context_free.Rule.attr_sig_type_decl
    ~rule_str_expect:Context_free.Rule.attr_str_type_decl_expect
    ~rule_sig_expect:Context_free.Rule.attr_sig_type_decl_expect
let rules_type_ext =
  rules ~typ:Type_extension ~expand_str:expand_str_type_ext
    ~expand_sig:expand_sig_type_ext
    ~rule_str:Context_free.Rule.attr_str_type_ext
    ~rule_sig:Context_free.Rule.attr_sig_type_ext
    ~rule_str_expect:Context_free.Rule.attr_str_type_ext_expect
    ~rule_sig_expect:Context_free.Rule.attr_sig_type_ext_expect
let rules_exception =
  rules ~typ:Type_exception ~expand_str:expand_str_exception
    ~expand_sig:expand_sig_exception
    ~rule_str:Context_free.Rule.attr_str_exception
    ~rule_sig:Context_free.Rule.attr_sig_exception
    ~rule_str_expect:Context_free.Rule.attr_str_exception_expect
    ~rule_sig_expect:Context_free.Rule.attr_sig_exception_expect
let rules_module_type_decl =
  rules ~typ:Module_type_declaration ~expand_str:expand_str_module_type_decl
    ~expand_sig:expand_sig_module_type_decl
    ~rule_str:Context_free.Rule.attr_str_module_type_decl
    ~rule_sig:Context_free.Rule.attr_sig_module_type_decl
    ~rule_str_expect:Context_free.Rule.attr_str_module_type_decl_expect
    ~rule_sig_expect:Context_free.Rule.attr_sig_module_type_decl_expect
let () =
  let rules =
    [rules_type_decl;
    rules_type_ext;
    rules_exception;
    rules_module_type_decl] |> List.concat in
  Driver.register_transformation "deriving" ~aliases:["type_conv"] ~rules
[
  structure_item (src/deriving.ml[1,0+0]..src/deriving.ml[1,0+11])
    Tstr_open Fresh
    module_expr (src/deriving.ml[1,0+5]..src/deriving.ml[1,0+11])
      Tmod_ident "Ppxlib__!.Import"
  structure_item (src/deriving.ml[2,12+0]..src/deriving.ml[2,12+24])
    Tstr_open Fresh
    module_expr (src/deriving.ml[2,12+5]..src/deriving.ml[2,12+24])
      Tmod_ident "Ppxlib__!.Ast_builder.Default"
  structure_item (src/deriving.ml[7,207+0]..src/deriving.ml[7,207+50])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[7,207+4]..src/deriving.ml[7,207+38])
          Tpat_var "do_insert_unused_warning_attribute/2083"
        expression (src/deriving.ml[7,207+41]..src/deriving.ml[7,207+50])
          Texp_apply
          expression (src/deriving.ml[7,207+41]..src/deriving.ml[7,207+44])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (src/deriving.ml[7,207+45]..src/deriving.ml[7,207+50])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (src/deriving.ml[8,258+0]..src/deriving.ml[8,258+29])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[8,258+4]..src/deriving.ml[8,258+17])
          Tpat_var "keep_w32_impl/2084"
        expression (src/deriving.ml[8,258+20]..src/deriving.ml[8,258+29])
          Texp_apply
          expression (src/deriving.ml[8,258+20]..src/deriving.ml[8,258+23])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (src/deriving.ml[8,258+24]..src/deriving.ml[8,258+29])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (src/deriving.ml[9,288+0]..src/deriving.ml[9,288+29])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[9,288+4]..src/deriving.ml[9,288+17])
          Tpat_var "keep_w32_intf/2085"
        expression (src/deriving.ml[9,288+20]..src/deriving.ml[9,288+29])
          Texp_apply
          expression (src/deriving.ml[9,288+20]..src/deriving.ml[9,288+23])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (src/deriving.ml[9,288+24]..src/deriving.ml[9,288+29])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (src/deriving.ml[11,319+0]..src/deriving.ml[38,1288+56])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[11,319+4]..src/deriving.ml[11,319+6])
          Tpat_construct "()"
          []
        expression (src/deriving.ml[12,328+2]..src/deriving.ml[38,1288+56])
          Texp_let Nonrec
          [
            <def>
              pattern (src/deriving.ml[12,328+6]..src/deriving.ml[12,328+19])
                Tpat_var "keep_w32_spec/2086"
              expression (src/deriving.ml[13,350+4]..src/deriving.ml[21,598+29])
                Texp_construct "Stdlib.Arg.Symbol"
                [
                  expression (src/deriving.ml[14,372+8]..src/deriving.ml[14,372+34])
                    Texp_construct "::"
                    [
                      expression (src/deriving.ml[14,372+10]..src/deriving.ml[14,372+16])
                        Texp_constant Const_string("impl",(src/deriving.ml[14,372+11]..src/deriving.ml[14,372+15]),None)
                      expression (src/deriving.ml[14,372+18]..src/deriving.ml[14,372+34]) ghost
                        Texp_construct "::"
                        [
                          expression (src/deriving.ml[14,372+18]..src/deriving.ml[14,372+24])
                            Texp_constant Const_string("intf",(src/deriving.ml[14,372+19]..src/deriving.ml[14,372+23]),None)
                          expression (src/deriving.ml[14,372+26]..src/deriving.ml[14,372+34]) ghost
                            Texp_construct "::"
                            [
                              expression (src/deriving.ml[14,372+26]..src/deriving.ml[14,372+32])
                                Texp_constant Const_string("both",(src/deriving.ml[14,372+27]..src/deriving.ml[14,372+31]),None)
                              expression (src/deriving.ml[14,372+33]..src/deriving.ml[14,372+34]) ghost
                                Texp_construct "[]"
                                []
                            ]
                        ]
                    ]
                  expression (src/deriving.ml[15,408+8]..src/deriving.ml[21,598+27])
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/deriving.ml[16,425+10]..src/deriving.ml[16,425+16])
                          Tpat_constant Const_string("impl",(src/deriving.ml[16,425+11]..src/deriving.ml[16,425+15]),None)
                        expression (src/deriving.ml[16,425+20]..src/deriving.ml[16,425+41])
                          Texp_apply
                          expression (src/deriving.ml[16,425+34]..src/deriving.ml[16,425+36])
                            Texp_ident "Stdlib!.:="
                          [
                            <arg>
                              Nolabel
                              expression (src/deriving.ml[16,425+20]..src/deriving.ml[16,425+33])
                                Texp_ident "keep_w32_impl/2084"
                            <arg>
                              Nolabel
                              expression (src/deriving.ml[16,425+37]..src/deriving.ml[16,425+41])
                                Texp_construct "true"
                                []
                          ]
                      <case>
                        pattern (src/deriving.ml[17,467+10]..src/deriving.ml[17,467+16])
                          Tpat_constant Const_string("intf",(src/deriving.ml[17,467+11]..src/deriving.ml[17,467+15]),None)
                        expression (src/deriving.ml[17,467+20]..src/deriving.ml[17,467+41])
                          Texp_apply
                          expression (src/deriving.ml[17,467+34]..src/deriving.ml[17,467+36])
                            Texp_ident "Stdlib!.:="
                          [
                            <arg>
                              Nolabel
                              expression (src/deriving.ml[17,467+20]..src/deriving.ml[17,467+33])
                                Texp_ident "keep_w32_intf/2085"
                            <arg>
                              Nolabel
                              expression (src/deriving.ml[17,467+37]..src/deriving.ml[17,467+41])
                                Texp_construct "true"
                                []
                          ]
                      <case>
                        pattern (src/deriving.ml[18,509+10]..src/deriving.ml[18,509+16])
                          Tpat_constant Const_string("both",(src/deriving.ml[18,509+11]..src/deriving.ml[18,509+15]),None)
                        expression (src/deriving.ml[19,529+12]..src/deriving.ml[20,564+33])
                          Texp_sequence
                          expression (src/deriving.ml[19,529+12]..src/deriving.ml[19,529+33])
                            Texp_apply
                            expression (src/deriving.ml[19,529+26]..src/deriving.ml[19,529+28])
                              Texp_ident "Stdlib!.:="
                            [
                              <arg>
                                Nolabel
                                expression (src/deriving.ml[19,529+12]..src/deriving.ml[19,529+25])
                                  Texp_ident "keep_w32_impl/2084"
                              <arg>
                                Nolabel
                                expression (src/deriving.ml[19,529+29]..src/deriving.ml[19,529+33])
                                  Texp_construct "true"
                                  []
                            ]
                          expression (src/deriving.ml[20,564+12]..src/deriving.ml[20,564+33])
                            Texp_apply
                            expression (src/deriving.ml[20,564+26]..src/deriving.ml[20,564+28])
                              Texp_ident "Stdlib!.:="
                            [
                              <arg>
                                Nolabel
                                expression (src/deriving.ml[20,564+12]..src/deriving.ml[20,564+25])
                                  Texp_ident "keep_w32_intf/2085"
                              <arg>
                                Nolabel
                                expression (src/deriving.ml[20,564+29]..src/deriving.ml[20,564+33])
                                  Texp_construct "true"
                                  []
                            ]
                      <case>
                        pattern (src/deriving.ml[21,598+10]..src/deriving.ml[21,598+11])
                          Tpat_any
                        expression (src/deriving.ml[21,598+15]..src/deriving.ml[21,598+27])
                          Texp_assert                          expression (src/deriving.ml[21,598+22]..src/deriving.ml[21,598+27])
                            Texp_construct "false"
                            []
                    ]
                ]
          ]
          expression (src/deriving.ml[23,633+2]..src/deriving.ml[38,1288+56])
            Texp_let Nonrec
            [
              <def>
                pattern (src/deriving.ml[23,633+6]..src/deriving.ml[23,633+19])
                  Tpat_var "conv_w32_spec/2116"
                expression (src/deriving.ml[24,655+4]..src/deriving.ml[29,859+29])
                  Texp_construct "Stdlib.Arg.Symbol"
                  [
                    expression (src/deriving.ml[25,677+8]..src/deriving.ml[25,677+31])
                      Texp_construct "::"
                      [
                        expression (src/deriving.ml[25,677+10]..src/deriving.ml[25,677+16])
                          Texp_constant Const_string("code",(src/deriving.ml[25,677+11]..src/deriving.ml[25,677+15]),None)
                        expression (src/deriving.ml[25,677+18]..src/deriving.ml[25,677+31]) ghost
                          Texp_construct "::"
                          [
                            expression (src/deriving.ml[25,677+18]..src/deriving.ml[25,677+29])
                              Texp_constant Const_string("attribute",(src/deriving.ml[25,677+19]..src/deriving.ml[25,677+28]),None)
                            expression (src/deriving.ml[25,677+30]..src/deriving.ml[25,677+31]) ghost
                              Texp_construct "[]"
                              []
                          ]
                      ]
                    expression (src/deriving.ml[26,710+8]..src/deriving.ml[29,859+27])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/deriving.ml[27,727+10]..src/deriving.ml[27,727+16])
                            Tpat_constant Const_string("code",(src/deriving.ml[27,727+11]..src/deriving.ml[27,727+15]),None)
                          expression (src/deriving.ml[27,727+20]..src/deriving.ml[27,727+63])
                            Texp_apply
                            expression (src/deriving.ml[27,727+55]..src/deriving.ml[27,727+57])
                              Texp_ident "Stdlib!.:="
                            [
                              <arg>
                                Nolabel
                                expression (src/deriving.ml[27,727+20]..src/deriving.ml[27,727+54])
                                  Texp_ident "do_insert_unused_warning_attribute/2083"
                              <arg>
                                Nolabel
                                expression (src/deriving.ml[27,727+58]..src/deriving.ml[27,727+63])
                                  Texp_construct "false"
                                  []
                            ]
                        <case>
                          pattern (src/deriving.ml[28,791+10]..src/deriving.ml[28,791+21])
                            Tpat_constant Const_string("attribute",(src/deriving.ml[28,791+11]..src/deriving.ml[28,791+20]),None)
                          expression (src/deriving.ml[28,791+25]..src/deriving.ml[28,791+67])
                            Texp_apply
                            expression (src/deriving.ml[28,791+60]..src/deriving.ml[28,791+62])
                              Texp_ident "Stdlib!.:="
                            [
                              <arg>
                                Nolabel
                                expression (src/deriving.ml[28,791+25]..src/deriving.ml[28,791+59])
                                  Texp_ident "do_insert_unused_warning_attribute/2083"
                              <arg>
                                Nolabel
                                expression (src/deriving.ml[28,791+63]..src/deriving.ml[28,791+67])
                                  Texp_construct "true"
                                  []
                            ]
                        <case>
                          pattern (src/deriving.ml[29,859+10]..src/deriving.ml[29,859+11])
                            Tpat_any
                          expression (src/deriving.ml[29,859+15]..src/deriving.ml[29,859+27])
                            Texp_assert                            expression (src/deriving.ml[29,859+22]..src/deriving.ml[29,859+27])
                              Texp_construct "false"
                              []
                      ]
                  ]
            ]
            expression (src/deriving.ml[31,894+2]..src/deriving.ml[38,1288+56])
              Texp_sequence
              expression (src/deriving.ml[31,894+2]..src/deriving.ml[32,946+67])
                Texp_apply
                expression (src/deriving.ml[31,894+2]..src/deriving.ml[31,894+16])
                  Texp_ident "Ppxlib__!.Driver.add_arg"
                [
                  <arg>
                    Nolabel
                    expression (src/deriving.ml[31,894+17]..src/deriving.ml[31,894+37])
                      Texp_constant Const_string("-deriving-keep-w32",(src/deriving.ml[31,894+18]..src/deriving.ml[31,894+36]),None)
                  <arg>
                    Nolabel
                    expression (src/deriving.ml[31,894+38]..src/deriving.ml[31,894+51])
                      Texp_ident "keep_w32_spec/2086"
                  <arg>
                    Labelled "doc"
                    expression (src/deriving.ml[32,946+9]..src/deriving.ml[32,946+67])
                      Texp_constant Const_string(" Do not try to disable warning 32 for the generated code",(src/deriving.ml[32,946+10]..src/deriving.ml[32,946+66]),None)
                ]
              expression (src/deriving.ml[33,1015+2]..src/deriving.ml[38,1288+56])
                Texp_sequence
                expression (src/deriving.ml[33,1015+2]..src/deriving.ml[34,1077+60])
                  Texp_apply
                  expression (src/deriving.ml[33,1015+2]..src/deriving.ml[33,1015+16])
                    Texp_ident "Ppxlib__!.Driver.add_arg"
                  [
                    <arg>
                      Nolabel
                      expression (src/deriving.ml[33,1015+17]..src/deriving.ml[33,1015+47])
                        Texp_constant Const_string("-deriving-disable-w32-method",(src/deriving.ml[33,1015+18]..src/deriving.ml[33,1015+46]),None)
                    <arg>
                      Nolabel
                      expression (src/deriving.ml[33,1015+48]..src/deriving.ml[33,1015+61])
                        Texp_ident "conv_w32_spec/2116"
                    <arg>
                      Labelled "doc"
                      expression (src/deriving.ml[34,1077+9]..src/deriving.ml[34,1077+60])
                        Texp_constant Const_string(" How to disable warning 32 for the generated code",(src/deriving.ml[34,1077+10]..src/deriving.ml[34,1077+59]),None)
                  ]
                expression (src/deriving.ml[35,1139+2]..src/deriving.ml[38,1288+56])
                  Texp_sequence
                  expression (src/deriving.ml[35,1139+2]..src/deriving.ml[36,1192+46])
                    Texp_apply
                    expression (src/deriving.ml[35,1139+2]..src/deriving.ml[35,1139+16])
                      Texp_ident "Ppxlib__!.Driver.add_arg"
                    [
                      <arg>
                        Nolabel
                        expression (src/deriving.ml[35,1139+17]..src/deriving.ml[35,1139+38])
                          Texp_constant Const_string("-type-conv-keep-w32",(src/deriving.ml[35,1139+18]..src/deriving.ml[35,1139+37]),None)
                      <arg>
                        Nolabel
                        expression (src/deriving.ml[35,1139+39]..src/deriving.ml[35,1139+52])
                          Texp_ident "keep_w32_spec/2086"
                      <arg>
                        Labelled "doc"
                        expression (src/deriving.ml[36,1192+9]..src/deriving.ml[36,1192+46])
                          Texp_constant Const_string(" Deprecated, use -deriving-keep-w32",(src/deriving.ml[36,1192+10]..src/deriving.ml[36,1192+45]),None)
                    ]
                  expression (src/deriving.ml[37,1240+2]..src/deriving.ml[38,1288+56])
                    Texp_apply
                    expression (src/deriving.ml[37,1240+2]..src/deriving.ml[37,1240+16])
                      Texp_ident "Ppxlib__!.Driver.add_arg"
                    [
                      <arg>
                        Nolabel
                        expression (src/deriving.ml[37,1240+17]..src/deriving.ml[37,1240+33])
                          Texp_constant Const_string("-type-conv-w32",(src/deriving.ml[37,1240+18]..src/deriving.ml[37,1240+32]),None)
                      <arg>
                        Nolabel
                        expression (src/deriving.ml[37,1240+34]..src/deriving.ml[37,1240+47])
                          Texp_ident "conv_w32_spec/2116"
                      <arg>
                        Labelled "doc"
                        expression (src/deriving.ml[38,1288+9]..src/deriving.ml[38,1288+56])
                          Texp_constant Const_string(" Deprecated, use -deriving-disable-w32-method",(src/deriving.ml[38,1288+10]..src/deriving.ml[38,1288+55]),None)
                    ]
    ]
  structure_item (src/deriving.ml[40,1346+0]..src/deriving.ml[40,1346+57])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[40,1346+4]..src/deriving.ml[40,1346+17])
          Tpat_var "keep_w32_impl/2169"
        expression (src/deriving.ml[40,1346+18]..src/deriving.ml[40,1346+57]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/deriving.ml[40,1346+18]..src/deriving.ml[40,1346+20])
                Tpat_construct "()"
                []
              expression (src/deriving.ml[40,1346+23]..src/deriving.ml[40,1346+57])
                Texp_apply
                expression (src/deriving.ml[40,1346+38]..src/deriving.ml[40,1346+40])
                  Texp_ident "Stdlib!.||"
                [
                  <arg>
                    Nolabel
                    expression (src/deriving.ml[40,1346+23]..src/deriving.ml[40,1346+37])
                      Texp_apply
                      expression (src/deriving.ml[40,1346+23]..src/deriving.ml[40,1346+24])
                        Texp_ident "Stdlib!.!"
                      [
                        <arg>
                          Nolabel
                          expression (src/deriving.ml[40,1346+24]..src/deriving.ml[40,1346+37])
                            Texp_ident "keep_w32_impl/2084"
                      ]
                  <arg>
                    Nolabel
                    expression (src/deriving.ml[40,1346+41]..src/deriving.ml[40,1346+57])
                      Texp_apply
                      expression (src/deriving.ml[40,1346+41]..src/deriving.ml[40,1346+54])
                        Texp_ident "Ppxlib__!.Driver.pretty"
                      [
                        <arg>
                          Nolabel
                          expression (src/deriving.ml[40,1346+55]..src/deriving.ml[40,1346+57])
                            Texp_construct "()"
                            []
                      ]
                ]
          ]
    ]
  structure_item (src/deriving.ml[41,1404+0]..src/deriving.ml[41,1404+57])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[41,1404+4]..src/deriving.ml[41,1404+17])
          Tpat_var "keep_w32_intf/2171"
        expression (src/deriving.ml[41,1404+18]..src/deriving.ml[41,1404+57]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/deriving.ml[41,1404+18]..src/deriving.ml[41,1404+20])
                Tpat_construct "()"
                []
              expression (src/deriving.ml[41,1404+23]..src/deriving.ml[41,1404+57])
                Texp_apply
                expression (src/deriving.ml[41,1404+38]..src/deriving.ml[41,1404+40])
                  Texp_ident "Stdlib!.||"
                [
                  <arg>
                    Nolabel
                    expression (src/deriving.ml[41,1404+23]..src/deriving.ml[41,1404+37])
                      Texp_apply
                      expression (src/deriving.ml[41,1404+23]..src/deriving.ml[41,1404+24])
                        Texp_ident "Stdlib!.!"
                      [
                        <arg>
                          Nolabel
                          expression (src/deriving.ml[41,1404+24]..src/deriving.ml[41,1404+37])
                            Texp_ident "keep_w32_intf/2085"
                      ]
                  <arg>
                    Nolabel
                    expression (src/deriving.ml[41,1404+41]..src/deriving.ml[41,1404+57])
                      Texp_apply
                      expression (src/deriving.ml[41,1404+41]..src/deriving.ml[41,1404+54])
                        Texp_ident "Ppxlib__!.Driver.pretty"
                      [
                        <arg>
                          Nolabel
                          expression (src/deriving.ml[41,1404+55]..src/deriving.ml[41,1404+57])
                            Texp_construct "()"
                            []
                      ]
                ]
          ]
    ]
  structure_item (src/deriving.ml[42,1462+0]..src/deriving.ml[42,1462+29])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[42,1462+4]..src/deriving.ml[42,1462+17])
          Tpat_var "keep_w60_impl/2173"
        expression (src/deriving.ml[42,1462+20]..src/deriving.ml[42,1462+29])
          Texp_apply
          expression (src/deriving.ml[42,1462+20]..src/deriving.ml[42,1462+23])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (src/deriving.ml[42,1462+24]..src/deriving.ml[42,1462+29])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (src/deriving.ml[43,1492+0]..src/deriving.ml[43,1492+29])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[43,1492+4]..src/deriving.ml[43,1492+17])
          Tpat_var "keep_w60_intf/2174"
        expression (src/deriving.ml[43,1492+20]..src/deriving.ml[43,1492+29])
          Texp_apply
          expression (src/deriving.ml[43,1492+20]..src/deriving.ml[43,1492+23])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (src/deriving.ml[43,1492+24]..src/deriving.ml[43,1492+29])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (src/deriving.ml[45,1523+0]..src/deriving.ml[58,1889+67])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[45,1523+4]..src/deriving.ml[45,1523+6])
          Tpat_construct "()"
          []
        expression (src/deriving.ml[46,1532+2]..src/deriving.ml[58,1889+67])
          Texp_let Nonrec
          [
            <def>
              pattern (src/deriving.ml[46,1532+6]..src/deriving.ml[46,1532+19])
                Tpat_var "keep_w60_spec/2175"
              expression (src/deriving.ml[47,1554+4]..src/deriving.ml[55,1802+29])
                Texp_construct "Stdlib.Arg.Symbol"
                [
                  expression (src/deriving.ml[48,1576+8]..src/deriving.ml[48,1576+34])
                    Texp_construct "::"
                    [
                      expression (src/deriving.ml[48,1576+10]..src/deriving.ml[48,1576+16])
                        Texp_constant Const_string("impl",(src/deriving.ml[48,1576+11]..src/deriving.ml[48,1576+15]),None)
                      expression (src/deriving.ml[48,1576+18]..src/deriving.ml[48,1576+34]) ghost
                        Texp_construct "::"
                        [
                          expression (src/deriving.ml[48,1576+18]..src/deriving.ml[48,1576+24])
                            Texp_constant Const_string("intf",(src/deriving.ml[48,1576+19]..src/deriving.ml[48,1576+23]),None)
                          expression (src/deriving.ml[48,1576+26]..src/deriving.ml[48,1576+34]) ghost
                            Texp_construct "::"
                            [
                              expression (src/deriving.ml[48,1576+26]..src/deriving.ml[48,1576+32])
                                Texp_constant Const_string("both",(src/deriving.ml[48,1576+27]..src/deriving.ml[48,1576+31]),None)
                              expression (src/deriving.ml[48,1576+33]..src/deriving.ml[48,1576+34]) ghost
                                Texp_construct "[]"
                                []
                            ]
                        ]
                    ]
                  expression (src/deriving.ml[49,1612+8]..src/deriving.ml[55,1802+27])
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/deriving.ml[50,1629+10]..src/deriving.ml[50,1629+16])
                          Tpat_constant Const_string("impl",(src/deriving.ml[50,1629+11]..src/deriving.ml[50,1629+15]),None)
                        expression (src/deriving.ml[50,1629+20]..src/deriving.ml[50,1629+41])
                          Texp_apply
                          expression (src/deriving.ml[50,1629+34]..src/deriving.ml[50,1629+36])
                            Texp_ident "Stdlib!.:="
                          [
                            <arg>
                              Nolabel
                              expression (src/deriving.ml[50,1629+20]..src/deriving.ml[50,1629+33])
                                Texp_ident "keep_w60_impl/2173"
                            <arg>
                              Nolabel
                              expression (src/deriving.ml[50,1629+37]..src/deriving.ml[50,1629+41])
                                Texp_construct "true"
                                []
                          ]
                      <case>
                        pattern (src/deriving.ml[51,1671+10]..src/deriving.ml[51,1671+16])
                          Tpat_constant Const_string("intf",(src/deriving.ml[51,1671+11]..src/deriving.ml[51,1671+15]),None)
                        expression (src/deriving.ml[51,1671+20]..src/deriving.ml[51,1671+41])
                          Texp_apply
                          expression (src/deriving.ml[51,1671+34]..src/deriving.ml[51,1671+36])
                            Texp_ident "Stdlib!.:="
                          [
                            <arg>
                              Nolabel
                              expression (src/deriving.ml[51,1671+20]..src/deriving.ml[51,1671+33])
                                Texp_ident "keep_w60_intf/2174"
                            <arg>
                              Nolabel
                              expression (src/deriving.ml[51,1671+37]..src/deriving.ml[51,1671+41])
                                Texp_construct "true"
                                []
                          ]
                      <case>
                        pattern (src/deriving.ml[52,1713+10]..src/deriving.ml[52,1713+16])
                          Tpat_constant Const_string("both",(src/deriving.ml[52,1713+11]..src/deriving.ml[52,1713+15]),None)
                        expression (src/deriving.ml[53,1733+12]..src/deriving.ml[54,1768+33])
                          Texp_sequence
                          expression (src/deriving.ml[53,1733+12]..src/deriving.ml[53,1733+33])
                            Texp_apply
                            expression (src/deriving.ml[53,1733+26]..src/deriving.ml[53,1733+28])
                              Texp_ident "Stdlib!.:="
                            [
                              <arg>
                                Nolabel
                                expression (src/deriving.ml[53,1733+12]..src/deriving.ml[53,1733+25])
                                  Texp_ident "keep_w60_impl/2173"
                              <arg>
                                Nolabel
                                expression (src/deriving.ml[53,1733+29]..src/deriving.ml[53,1733+33])
                                  Texp_construct "true"
                                  []
                            ]
                          expression (src/deriving.ml[54,1768+12]..src/deriving.ml[54,1768+33])
                            Texp_apply
                            expression (src/deriving.ml[54,1768+26]..src/deriving.ml[54,1768+28])
                              Texp_ident "Stdlib!.:="
                            [
                              <arg>
                                Nolabel
                                expression (src/deriving.ml[54,1768+12]..src/deriving.ml[54,1768+25])
                                  Texp_ident "keep_w60_intf/2174"
                              <arg>
                                Nolabel
                                expression (src/deriving.ml[54,1768+29]..src/deriving.ml[54,1768+33])
                                  Texp_construct "true"
                                  []
                            ]
                      <case>
                        pattern (src/deriving.ml[55,1802+10]..src/deriving.ml[55,1802+11])
                          Tpat_any
                        expression (src/deriving.ml[55,1802+15]..src/deriving.ml[55,1802+27])
                          Texp_assert                          expression (src/deriving.ml[55,1802+22]..src/deriving.ml[55,1802+27])
                            Texp_construct "false"
                            []
                    ]
                ]
          ]
          expression (src/deriving.ml[57,1837+2]..src/deriving.ml[58,1889+67])
            Texp_apply
            expression (src/deriving.ml[57,1837+2]..src/deriving.ml[57,1837+16])
              Texp_ident "Ppxlib__!.Driver.add_arg"
            [
              <arg>
                Nolabel
                expression (src/deriving.ml[57,1837+17]..src/deriving.ml[57,1837+37])
                  Texp_constant Const_string("-deriving-keep-w60",(src/deriving.ml[57,1837+18]..src/deriving.ml[57,1837+36]),None)
              <arg>
                Nolabel
                expression (src/deriving.ml[57,1837+38]..src/deriving.ml[57,1837+51])
                  Texp_ident "keep_w60_spec/2175"
              <arg>
                Labelled "doc"
                expression (src/deriving.ml[58,1889+9]..src/deriving.ml[58,1889+67])
                  Texp_constant Const_string(" Do not try to disable warning 60 for the generated code",(src/deriving.ml[58,1889+10]..src/deriving.ml[58,1889+66]),None)
            ]
    ]
  structure_item (src/deriving.ml[60,1958+0]..src/deriving.ml[60,1958+57])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[60,1958+4]..src/deriving.ml[60,1958+17])
          Tpat_var "keep_w60_impl/2177"
        expression (src/deriving.ml[60,1958+18]..src/deriving.ml[60,1958+57]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/deriving.ml[60,1958+18]..src/deriving.ml[60,1958+20])
                Tpat_construct "()"
                []
              expression (src/deriving.ml[60,1958+23]..src/deriving.ml[60,1958+57])
                Texp_apply
                expression (src/deriving.ml[60,1958+38]..src/deriving.ml[60,1958+40])
                  Texp_ident "Stdlib!.||"
                [
                  <arg>
                    Nolabel
                    expression (src/deriving.ml[60,1958+23]..src/deriving.ml[60,1958+37])
                      Texp_apply
                      expression (src/deriving.ml[60,1958+23]..src/deriving.ml[60,1958+24])
                        Texp_ident "Stdlib!.!"
                      [
                        <arg>
                          Nolabel
                          expression (src/deriving.ml[60,1958+24]..src/deriving.ml[60,1958+37])
                            Texp_ident "keep_w60_impl/2173"
                      ]
                  <arg>
                    Nolabel
                    expression (src/deriving.ml[60,1958+41]..src/deriving.ml[60,1958+57])
                      Texp_apply
                      expression (src/deriving.ml[60,1958+41]..src/deriving.ml[60,1958+54])
                        Texp_ident "Ppxlib__!.Driver.pretty"
                      [
                        <arg>
                          Nolabel
                          expression (src/deriving.ml[60,1958+55]..src/deriving.ml[60,1958+57])
                            Texp_construct "()"
                            []
                      ]
                ]
          ]
    ]
  structure_item (src/deriving.ml[61,2016+0]..src/deriving.ml[61,2016+57])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[61,2016+4]..src/deriving.ml[61,2016+17])
          Tpat_var "keep_w60_intf/2179"
        expression (src/deriving.ml[61,2016+18]..src/deriving.ml[61,2016+57]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/deriving.ml[61,2016+18]..src/deriving.ml[61,2016+20])
                Tpat_construct "()"
                []
              expression (src/deriving.ml[61,2016+23]..src/deriving.ml[61,2016+57])
                Texp_apply
                expression (src/deriving.ml[61,2016+38]..src/deriving.ml[61,2016+40])
                  Texp_ident "Stdlib!.||"
                [
                  <arg>
                    Nolabel
                    expression (src/deriving.ml[61,2016+23]..src/deriving.ml[61,2016+37])
                      Texp_apply
                      expression (src/deriving.ml[61,2016+23]..src/deriving.ml[61,2016+24])
                        Texp_ident "Stdlib!.!"
                      [
                        <arg>
                          Nolabel
                          expression (src/deriving.ml[61,2016+24]..src/deriving.ml[61,2016+37])
                            Texp_ident "keep_w60_intf/2174"
                      ]
                  <arg>
                    Nolabel
                    expression (src/deriving.ml[61,2016+41]..src/deriving.ml[61,2016+57])
                      Texp_apply
                      expression (src/deriving.ml[61,2016+41]..src/deriving.ml[61,2016+54])
                        Texp_ident "Ppxlib__!.Driver.pretty"
                      [
                        <arg>
                          Nolabel
                          expression (src/deriving.ml[61,2016+55]..src/deriving.ml[61,2016+57])
                            Texp_construct "()"
                            []
                      ]
                ]
          ]
    ]
  structure_item (src/deriving.ml[62,2074+0]..src/deriving.ml[62,2074+79])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[62,2074+4]..src/deriving.ml[62,2074+30])
          Tpat_var "allow_unused_code_warnings/2181"
        expression (src/deriving.ml[62,2074+33]..src/deriving.ml[62,2074+79])
          Texp_apply
          expression (src/deriving.ml[62,2074+33]..src/deriving.ml[62,2074+36])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (src/deriving.ml[62,2074+37]..src/deriving.ml[62,2074+79])
                Texp_ident "Ppxlib__!.Options.default_allow_unused_code_warnings"
          ]
    ]
  structure_item (src/deriving.ml[64,2155+0]..src/deriving.ml[67,2252+62])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[64,2155+4]..src/deriving.ml[64,2155+6])
          Tpat_construct "()"
          []
        expression (src/deriving.ml[65,2164+2]..src/deriving.ml[67,2252+62])
          Texp_apply
          expression (src/deriving.ml[65,2164+2]..src/deriving.ml[65,2164+16])
            Texp_ident "Ppxlib__!.Driver.add_arg"
          [
            <arg>
              Nolabel
              expression (src/deriving.ml[65,2164+17]..src/deriving.ml[65,2164+40])
                Texp_constant Const_string("-unused-code-warnings",(src/deriving.ml[65,2164+18]..src/deriving.ml[65,2164+39]),None)
            <arg>
              Nolabel
              expression (src/deriving.ml[66,2205+4]..src/deriving.ml[66,2205+46])
                Texp_construct "Bool"
                [
                  expression (src/deriving.ml[66,2205+10]..src/deriving.ml[66,2205+45])
                    Texp_apply
                    expression (src/deriving.ml[66,2205+11]..src/deriving.ml[66,2205+17])
                      Texp_ident "Stdlib!.:="
                    [
                      <arg>
                        Nolabel
                        expression (src/deriving.ml[66,2205+18]..src/deriving.ml[66,2205+44])
                          Texp_ident "allow_unused_code_warnings/2181"
                    ]
                ]
            <arg>
              Labelled "doc"
              expression (src/deriving.ml[67,2252+9]..src/deriving.ml[67,2252+62])
                Texp_constant Const_string("_ Allow ppx derivers to enable unused code warnings",(src/deriving.ml[67,2252+10]..src/deriving.ml[67,2252+61]),None)
          ]
    ]
  structure_item (src/deriving.ml[69,2316+0]..src/deriving.ml[69,2316+63])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[69,2316+4]..src/deriving.ml[69,2316+30])
          Tpat_var "allow_unused_code_warnings/2188"
        expression (src/deriving.ml[69,2316+31]..src/deriving.ml[69,2316+63]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/deriving.ml[69,2316+31]..src/deriving.ml[69,2316+33])
                Tpat_construct "()"
                []
              expression (src/deriving.ml[69,2316+36]..src/deriving.ml[69,2316+63])
                Texp_apply
                expression (src/deriving.ml[69,2316+36]..src/deriving.ml[69,2316+37])
                  Texp_ident "Stdlib!.!"
                [
                  <arg>
                    Nolabel
                    expression (src/deriving.ml[69,2316+37]..src/deriving.ml[69,2316+63])
                      Texp_ident "allow_unused_code_warnings/2181"
                ]
          ]
    ]
  structure_item (src/deriving.ml[71,2381+0]..src/deriving.ml[130,4028+3])
    Tstr_module
    Args/4923
      module_expr (src/deriving.ml[71,2381+14]..src/deriving.ml[130,4028+3])
        Tmod_structure
        [
          structure_item (src/deriving.ml[72,2402+2]..src/deriving.ml[77,2498+61])
            Tstr_include            module_expr (src/deriving.ml[72,2402+10]..src/deriving.ml[77,2498+61])
              Tmod_constraint
              module_expr (src/deriving.ml[73,2414+4]..src/deriving.ml[73,2414+15])
                module_expr (src/deriving.ml[73,2414+4]..src/deriving.ml[73,2414+15])
                  Tmod_ident "Ppxlib__!.Ast_pattern"
              module_type (src/deriving.ml[74,2432+6]..src/deriving.ml[77,2498+60])
                Tmty_with
                module_type (src/deriving.ml[74,2432+6]..src/deriving.ml[76,2488+9])
                  Tmty_typeof
                  module_expr (src/deriving.ml[74,2432+21]..src/deriving.ml[76,2488+9])
                    Tmod_structure
                    [
                      structure_item (src/deriving.ml[75,2460+8]..src/deriving.ml[75,2460+27])
                        Tstr_include                        module_expr (src/deriving.ml[75,2460+16]..src/deriving.ml[75,2460+27])
                          module_expr (src/deriving.ml[75,2460+16]..src/deriving.ml[75,2460+27])
                            Tmod_ident "Ppxlib__!.Ast_pattern"
                    ]
                [
                  "t/2527"
                    Twith_typesubst
                      type_declaration t/2527 (src/deriving.ml[77,2498+11]..src/deriving.ml[77,2498+60])
                        ptype_params =
                          [
                            core_type (src/deriving.ml[77,2498+17]..src/deriving.ml[77,2498+19])
                              Ttyp_var a
                            core_type (src/deriving.ml[77,2498+21]..src/deriving.ml[77,2498+23])
                              Ttyp_var b
                            core_type (src/deriving.ml[77,2498+25]..src/deriving.ml[77,2498+27])
                              Ttyp_var c
                          ]
                        ptype_cstrs =
                          []
                        ptype_kind =
                          Ttype_abstract
                        ptype_private = Public
                        ptype_manifest =
                          Some
                            core_type (src/deriving.ml[77,2498+34]..src/deriving.ml[77,2498+60])
                              Ttyp_constr "Ppxlib__!.Ast_pattern.t"
                              [
                                core_type (src/deriving.ml[77,2498+35]..src/deriving.ml[77,2498+37])
                                  Ttyp_var a
                                core_type (src/deriving.ml[77,2498+39]..src/deriving.ml[77,2498+41])
                                  Ttyp_var b
                                core_type (src/deriving.ml[77,2498+43]..src/deriving.ml[77,2498+45])
                                  Ttyp_var c
                              ]
                ]
          structure_item (src/deriving.ml[79,2561+2]..src/deriving.ml[83,2671+3])
            Tstr_type Rec
            [
              type_declaration param/4750 (src/deriving.ml[79,2561+2]..src/deriving.ml[83,2671+3])
                ptype_params =
                  [
                    core_type (src/deriving.ml[79,2561+7]..src/deriving.ml[79,2561+9])
                      Ttyp_var a
                  ]
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_record
                    [
                      (src/deriving.ml[80,2581+4]..src/deriving.ml[80,2581+18])
                        Immutable
                        name/4751                        core_type (src/deriving.ml[80,2581+11]..src/deriving.ml[80,2581+17])
                          Ttyp_poly
                          core_type (src/deriving.ml[80,2581+11]..src/deriving.ml[80,2581+17])
                            Ttyp_constr "string/17!"
                            []
                      (src/deriving.ml[81,2600+4]..src/deriving.ml[81,2600+52])
                        Immutable
                        pattern/4757                        core_type (src/deriving.ml[81,2600+14]..src/deriving.ml[81,2600+51])
                          Ttyp_poly
                          core_type (src/deriving.ml[81,2600+14]..src/deriving.ml[81,2600+51])
                            Ttyp_constr "Ppxlib__!.Ast_pattern.Packed.t"
                            [
                              core_type (src/deriving.ml[81,2600+15]..src/deriving.ml[81,2600+25])
                                Ttyp_constr "Ppxlib__!.Import.expression"
                                []
                              core_type (src/deriving.ml[81,2600+27]..src/deriving.ml[81,2600+29])
                                Ttyp_var a
                            ]
                      (src/deriving.ml[82,2653+4]..src/deriving.ml[82,2653+17])
                        Immutable
                        default/4758                        core_type (src/deriving.ml[82,2653+14]..src/deriving.ml[82,2653+16])
                          Ttyp_poly
                          core_type (src/deriving.ml[82,2653+14]..src/deriving.ml[82,2653+16])
                            Ttyp_var a
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (src/deriving.ml[85,2676+2]..src/deriving.ml[90,2810+5])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[85,2676+6]..src/deriving.ml[85,2676+9])
                  Tpat_var "arg/4760"
                expression (src/deriving.ml[85,2676+10]..src/deriving.ml[90,2810+5]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/deriving.ml[85,2676+10]..src/deriving.ml[85,2676+14])
                        Tpat_var "name/4762"
                      expression (src/deriving.ml[85,2676+15]..src/deriving.ml[90,2810+5]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/deriving.ml[85,2676+15]..src/deriving.ml[85,2676+22])
                              Tpat_var "pattern/4763"
                            expression (src/deriving.ml[86,2701+4]..src/deriving.ml[90,2810+5])
                              Texp_record
                                fields =
                                  [
                                    "name"
                                      expression (src/deriving.ml[87,2707+6]..src/deriving.ml[87,2707+10]) ghost
                                        Texp_ident "name/4762"
                                    "pattern"
                                      expression (src/deriving.ml[89,2741+16]..src/deriving.ml[89,2741+67])
                                        Texp_apply
                                        expression (src/deriving.ml[89,2741+16]..src/deriving.ml[89,2741+41])
                                          Texp_ident "Ppxlib__!.Ast_pattern.Packed.create"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[89,2741+42]..src/deriving.ml[89,2741+49])
                                              Texp_ident "pattern/4763"
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[89,2741+50]..src/deriving.ml[89,2741+67])
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/deriving.ml[89,2741+55]..src/deriving.ml[89,2741+56])
                                                    Tpat_var "x/4764"
                                                  expression (src/deriving.ml[89,2741+60]..src/deriving.ml[89,2741+66])
                                                    Texp_construct "Some"
                                                    [
                                                      expression (src/deriving.ml[89,2741+65]..src/deriving.ml[89,2741+66])
                                                        Texp_ident "x/4764"
                                                    ]
                                              ]
                                        ]
                                    "default"
                                      expression (src/deriving.ml[88,2719+16]..src/deriving.ml[88,2719+20])
                                        Texp_construct "None"
                                        []
                                  ]
                                representation =
                                  Record_regular
                                extended_expression =
                                  None
                        ]
                  ]
            ]
          structure_item (src/deriving.ml[92,2817+2]..src/deriving.ml[94,2890+79])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[92,2817+6]..src/deriving.ml[92,2817+10])
                  Tpat_var "flag/4765"
                expression (src/deriving.ml[92,2817+11]..src/deriving.ml[94,2890+79]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/deriving.ml[92,2817+11]..src/deriving.ml[92,2817+15])
                        Tpat_var "name/4767"
                      expression (src/deriving.ml[93,2835+4]..src/deriving.ml[94,2890+79])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/deriving.ml[93,2835+8]..src/deriving.ml[93,2835+15])
                              Tpat_var "pattern/4768"
                            expression (src/deriving.ml[93,2835+18]..src/deriving.ml[93,2835+51])
                              Texp_apply
                              expression (src/deriving.ml[93,2835+18]..src/deriving.ml[93,2835+28])
                                Texp_ident "pexp_ident/4541"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/deriving.ml[93,2835+29]..src/deriving.ml[93,2835+51])
                                    Texp_apply
                                    expression (src/deriving.ml[93,2835+30]..src/deriving.ml[93,2835+36])
                                      Texp_ident "lident/4592"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/deriving.ml[93,2835+37]..src/deriving.ml[93,2835+50])
                                          Texp_apply
                                          expression (src/deriving.ml[93,2835+38]..src/deriving.ml[93,2835+44])
                                            Texp_ident "string/4445"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/deriving.ml[93,2835+45]..src/deriving.ml[93,2835+49])
                                                Texp_ident "name/4767"
                                          ]
                                    ]
                              ]
                        ]
                        expression (src/deriving.ml[94,2890+4]..src/deriving.ml[94,2890+79])
                          Texp_record
                            fields =
                              [
                                "name"
                                  expression (src/deriving.ml[94,2890+6]..src/deriving.ml[94,2890+10]) ghost
                                    Texp_ident "name/4767"
                                "pattern"
                                  expression (src/deriving.ml[94,2890+39]..src/deriving.ml[94,2890+77])
                                    Texp_apply
                                    expression (src/deriving.ml[94,2890+39]..src/deriving.ml[94,2890+64])
                                      Texp_ident "Ppxlib__!.Ast_pattern.Packed.create"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/deriving.ml[94,2890+65]..src/deriving.ml[94,2890+72])
                                          Texp_ident "pattern/4768"
                                      <arg>
                                        Nolabel
                                        expression (src/deriving.ml[94,2890+73]..src/deriving.ml[94,2890+77])
                                          Texp_construct "true"
                                          []
                                    ]
                                "default"
                                  expression (src/deriving.ml[94,2890+22]..src/deriving.ml[94,2890+27])
                                    Texp_construct "false"
                                    []
                              ]
                            representation =
                              Record_regular
                            extended_expression =
                              None
                  ]
            ]
          structure_item (src/deriving.ml[96,2971+2]..src/deriving.ml[98,3012+58])
            Tstr_type Rec
            [
              type_declaration t/4769 (src/deriving.ml[96,2971+2]..src/deriving.ml[98,3012+58])
                ptype_params =
                  [
                    core_type (src/deriving.ml[96,2971+8]..src/deriving.ml[96,2971+9])
                      Ttyp_any
                    core_type (src/deriving.ml[96,2971+11]..src/deriving.ml[96,2971+12])
                      Ttyp_any
                  ]
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_variant
                    [
                      (src/deriving.ml[97,2989+4]..src/deriving.ml[97,2989+22])
                        Nil/4770
                        []
                        Some
                          core_type (src/deriving.ml[97,2989+12]..src/deriving.ml[97,2989+22])
                            Ttyp_constr "t/4769"
                            [
                              core_type (src/deriving.ml[97,2989+13]..src/deriving.ml[97,2989+15])
                                Ttyp_var m
                              core_type (src/deriving.ml[97,2989+17]..src/deriving.ml[97,2989+19])
                                Ttyp_var m
                            ]
                      (src/deriving.ml[98,3012+4]..src/deriving.ml[98,3012+58])
                        Cons/4771
                        [
                          core_type (src/deriving.ml[98,3012+13]..src/deriving.ml[98,3012+31])
                            Ttyp_constr "t/4769"
                            [
                              core_type (src/deriving.ml[98,3012+14]..src/deriving.ml[98,3012+17])
                                Ttyp_var m1
                              core_type (src/deriving.ml[98,3012+19]..src/deriving.ml[98,3012+28])
                                Ttyp_arrow
                                Nolabel
                                core_type (src/deriving.ml[98,3012+19]..src/deriving.ml[98,3012+21])
                                  Ttyp_var a
                                core_type (src/deriving.ml[98,3012+25]..src/deriving.ml[98,3012+28])
                                  Ttyp_var m2
                            ]
                          core_type (src/deriving.ml[98,3012+34]..src/deriving.ml[98,3012+42])
                            Ttyp_constr "param/4750"
                            [
                              core_type (src/deriving.ml[98,3012+34]..src/deriving.ml[98,3012+36])
                                Ttyp_var a
                            ]
                        ]
                        Some
                          core_type (src/deriving.ml[98,3012+46]..src/deriving.ml[98,3012+58])
                            Ttyp_constr "t/4769"
                            [
                              core_type (src/deriving.ml[98,3012+47]..src/deriving.ml[98,3012+50])
                                Ttyp_var m1
                              core_type (src/deriving.ml[98,3012+52]..src/deriving.ml[98,3012+55])
                                Ttyp_var m2
                            ]
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (src/deriving.ml[100,3072+2]..src/deriving.ml[100,3072+17])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[100,3072+6]..src/deriving.ml[100,3072+11])
                  Tpat_var "empty/4772"
                expression (src/deriving.ml[100,3072+14]..src/deriving.ml[100,3072+17])
                  Texp_construct "Nil"
                  []
            ]
          structure_item (src/deriving.ml[101,3090+2]..src/deriving.ml[101,3090+30])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[101,3090+6]..src/deriving.ml[101,3090+12])
                  Tpat_var "+>/4773"
                expression (src/deriving.ml[101,3090+13]..src/deriving.ml[101,3090+30]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/deriving.ml[101,3090+13]..src/deriving.ml[101,3090+14])
                        Tpat_var "a/4775"
                      expression (src/deriving.ml[101,3090+15]..src/deriving.ml[101,3090+30]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/deriving.ml[101,3090+15]..src/deriving.ml[101,3090+16])
                              Tpat_var "b/4776"
                            expression (src/deriving.ml[101,3090+19]..src/deriving.ml[101,3090+30])
                              Texp_construct "Cons"
                              [
                                expression (src/deriving.ml[101,3090+25]..src/deriving.ml[101,3090+26])
                                  Texp_ident "a/4775"
                                expression (src/deriving.ml[101,3090+28]..src/deriving.ml[101,3090+29])
                                  Texp_ident "b/4776"
                              ]
                        ]
                  ]
            ]
          structure_item (src/deriving.ml[103,3122+2]..src/deriving.ml[105,3201+38])
            Tstr_value Rec
            [
              <def>
                pattern (src/deriving.ml[103,3122+10]..src/deriving.ml[103,3122+15])
                  Tpat_extra_constraint
                  core_type (src/deriving.ml[103,3122+10]..src/deriving.ml[105,3201+38]) ghost
                    Ttyp_poly 'a 'b
                    core_type (src/deriving.ml[103,3122+28]..src/deriving.ml[103,3122+51])
                      Ttyp_arrow
                      Nolabel
                      core_type (src/deriving.ml[103,3122+28]..src/deriving.ml[103,3122+36])
                        Ttyp_constr "t/4769"
                        [
                          core_type (src/deriving.ml[103,3122+29]..src/deriving.ml[103,3122+30])
                            Ttyp_var a
                          core_type (src/deriving.ml[103,3122+32]..src/deriving.ml[103,3122+33])
                            Ttyp_var b
                        ]
                      core_type (src/deriving.ml[103,3122+40]..src/deriving.ml[103,3122+51])
                        Ttyp_constr "list/11!"
                        [
                          core_type (src/deriving.ml[103,3122+40]..src/deriving.ml[103,3122+46])
                            Ttyp_constr "string/17!"
                            []
                        ]
                  pattern (src/deriving.ml[103,3122+10]..src/deriving.ml[103,3122+15])
                    Tpat_var "names/4777"
                expression (src/deriving.ml[103,3122+10]..src/deriving.ml[105,3201+38])
                  Texp_newtype "a"
                    Texp_newtype "b"
                      Texp_constraint
                      core_type (src/deriving.ml[103,3122+28]..src/deriving.ml[103,3122+51])
                        Ttyp_arrow
                        Nolabel
                        core_type (src/deriving.ml[103,3122+28]..src/deriving.ml[103,3122+36])
                          Ttyp_constr "t/4769"
                          [
                            core_type (src/deriving.ml[103,3122+29]..src/deriving.ml[103,3122+30])
                              Ttyp_constr "a/4778"
                              []
                            core_type (src/deriving.ml[103,3122+32]..src/deriving.ml[103,3122+33])
                              Ttyp_constr "b/4779"
                              []
                          ]
                        core_type (src/deriving.ml[103,3122+40]..src/deriving.ml[103,3122+51])
                          Ttyp_constr "list/11!"
                          [
                            core_type (src/deriving.ml[103,3122+40]..src/deriving.ml[103,3122+46])
                              Ttyp_constr "string/17!"
                              []
                          ]
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/deriving.ml[104,3185+6]..src/deriving.ml[104,3185+9])
                              Tpat_construct "Nil"
                              []
                            expression (src/deriving.ml[104,3185+13]..src/deriving.ml[104,3185+15])
                              Texp_construct "[]"
                              []
                          <case>
                            pattern (src/deriving.ml[105,3201+6]..src/deriving.ml[105,3201+17])
                              Tpat_construct "Cons"
                              [
                                pattern (src/deriving.ml[105,3201+12]..src/deriving.ml[105,3201+13])
                                  Tpat_var "t/4781"
                                pattern (src/deriving.ml[105,3201+15]..src/deriving.ml[105,3201+16])
                                  Tpat_var "p/4782"
                              ]
                            expression (src/deriving.ml[105,3201+21]..src/deriving.ml[105,3201+38])
                              Texp_construct "::"
                              [
                                expression (src/deriving.ml[105,3201+21]..src/deriving.ml[105,3201+27])
                                  Texp_field
                                  expression (src/deriving.ml[105,3201+21]..src/deriving.ml[105,3201+22])
                                    Texp_ident "p/4782"
                                  "name"
                                expression (src/deriving.ml[105,3201+31]..src/deriving.ml[105,3201+38])
                                  Texp_apply
                                  expression (src/deriving.ml[105,3201+31]..src/deriving.ml[105,3201+36])
                                    Texp_ident "names/4777"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/deriving.ml[105,3201+37]..src/deriving.ml[105,3201+38])
                                        Texp_ident "t/4781"
                                  ]
                              ]
                        ]
            ]
          structure_item (src/deriving.ml[107,3241+2]..src/deriving.ml[127,3956+5])
            Tstr_module
            Instance/4917
              module_expr (src/deriving.ml[107,3241+20]..src/deriving.ml[127,3956+5])
                Tmod_structure
                [
                  structure_item (src/deriving.ml[108,3268+4]..src/deriving.ml[110,3329+70])
                    Tstr_type Rec
                    [
                      type_declaration instance/4785 (src/deriving.ml[108,3268+4]..src/deriving.ml[110,3329+70])
                        ptype_params =
                          [
                            core_type (src/deriving.ml[108,3268+10]..src/deriving.ml[108,3268+11])
                              Ttyp_any
                            core_type (src/deriving.ml[108,3268+13]..src/deriving.ml[108,3268+14])
                              Ttyp_any
                          ]
                        ptype_cstrs =
                          []
                        ptype_kind =
                          Ttype_variant
                            [
                              (src/deriving.ml[109,3295+6]..src/deriving.ml[109,3295+33])
                                I_nil/4786
                                []
                                Some
                                  core_type (src/deriving.ml[109,3295+16]..src/deriving.ml[109,3295+33])
                                    Ttyp_constr "instance/4785"
                                    [
                                      core_type (src/deriving.ml[109,3295+17]..src/deriving.ml[109,3295+19])
                                        Ttyp_var m
                                      core_type (src/deriving.ml[109,3295+21]..src/deriving.ml[109,3295+23])
                                        Ttyp_var m
                                    ]
                              (src/deriving.ml[110,3329+6]..src/deriving.ml[110,3329+70])
                                I_cons/4787
                                [
                                  core_type (src/deriving.ml[110,3329+17]..src/deriving.ml[110,3329+42])
                                    Ttyp_constr "instance/4785"
                                    [
                                      core_type (src/deriving.ml[110,3329+18]..src/deriving.ml[110,3329+21])
                                        Ttyp_var m1
                                      core_type (src/deriving.ml[110,3329+23]..src/deriving.ml[110,3329+32])
                                        Ttyp_arrow
                                        Nolabel
                                        core_type (src/deriving.ml[110,3329+23]..src/deriving.ml[110,3329+25])
                                          Ttyp_var a
                                        core_type (src/deriving.ml[110,3329+29]..src/deriving.ml[110,3329+32])
                                          Ttyp_var m2
                                    ]
                                  core_type (src/deriving.ml[110,3329+45]..src/deriving.ml[110,3329+47])
                                    Ttyp_var a
                                ]
                                Some
                                  core_type (src/deriving.ml[110,3329+51]..src/deriving.ml[110,3329+70])
                                    Ttyp_constr "instance/4785"
                                    [
                                      core_type (src/deriving.ml[110,3329+52]..src/deriving.ml[110,3329+55])
                                        Ttyp_var m1
                                      core_type (src/deriving.ml[110,3329+57]..src/deriving.ml[110,3329+60])
                                        Ttyp_var m2
                                    ]
                            ]
                        ptype_private = Public
                        ptype_manifest =
                          None
                    ]
                  structure_item (src/deriving.ml[112,3401+4]..src/deriving.ml[123,3786+39])
                    Tstr_value Rec
                    [
                      <def>
                        pattern (src/deriving.ml[112,3401+12]..src/deriving.ml[112,3401+18])
                          Tpat_extra_constraint
                          core_type (src/deriving.ml[112,3401+12]..src/deriving.ml[123,3786+39]) ghost
                            Ttyp_poly 'a 'b
                            core_type (src/deriving.ml[113,3422+18]..src/deriving.ml[113,3422+75])
                              Ttyp_arrow
                              Nolabel
                              core_type (src/deriving.ml[113,3422+18]..src/deriving.ml[113,3422+26])
                                Ttyp_constr "t/4769"
                                [
                                  core_type (src/deriving.ml[113,3422+19]..src/deriving.ml[113,3422+20])
                                    Ttyp_var a
                                  core_type (src/deriving.ml[113,3422+22]..src/deriving.ml[113,3422+23])
                                    Ttyp_var b
                                ]
                              core_type (src/deriving.ml[113,3422+30]..src/deriving.ml[113,3422+75])
                                Ttyp_arrow
                                Nolabel
                                core_type (src/deriving.ml[113,3422+30]..src/deriving.ml[113,3422+56])
                                  Ttyp_constr "list/11!"
                                  [
                                    core_type (src/deriving.ml[113,3422+31]..src/deriving.ml[113,3422+50])
                                      Ttyp_tuple
                                      [
                                        core_type (src/deriving.ml[113,3422+31]..src/deriving.ml[113,3422+37])
                                          Ttyp_constr "string/17!"
                                          []
                                        core_type (src/deriving.ml[113,3422+40]..src/deriving.ml[113,3422+50])
                                          Ttyp_constr "Ppxlib__!.Import.expression"
                                          []
                                      ]
                                  ]
                                core_type (src/deriving.ml[113,3422+60]..src/deriving.ml[113,3422+75])
                                  Ttyp_constr "instance/4785"
                                  [
                                    core_type (src/deriving.ml[113,3422+61]..src/deriving.ml[113,3422+62])
                                      Ttyp_var a
                                    core_type (src/deriving.ml[113,3422+64]..src/deriving.ml[113,3422+65])
                                      Ttyp_var b
                                  ]
                          pattern (src/deriving.ml[112,3401+12]..src/deriving.ml[112,3401+18])
                            Tpat_var "create/4788"
                        expression (src/deriving.ml[112,3401+12]..src/deriving.ml[123,3786+39])
                          Texp_newtype "a"
                            Texp_newtype "b"
                              Texp_constraint
                              core_type (src/deriving.ml[113,3422+18]..src/deriving.ml[113,3422+75])
                                Ttyp_arrow
                                Nolabel
                                core_type (src/deriving.ml[113,3422+18]..src/deriving.ml[113,3422+26])
                                  Ttyp_constr "t/4769"
                                  [
                                    core_type (src/deriving.ml[113,3422+19]..src/deriving.ml[113,3422+20])
                                      Ttyp_constr "a/4789"
                                      []
                                    core_type (src/deriving.ml[113,3422+22]..src/deriving.ml[113,3422+23])
                                      Ttyp_constr "b/4790"
                                      []
                                  ]
                                core_type (src/deriving.ml[113,3422+30]..src/deriving.ml[113,3422+75])
                                  Ttyp_arrow
                                  Nolabel
                                  core_type (src/deriving.ml[113,3422+30]..src/deriving.ml[113,3422+56])
                                    Ttyp_constr "list/11!"
                                    [
                                      core_type (src/deriving.ml[113,3422+31]..src/deriving.ml[113,3422+50])
                                        Ttyp_tuple
                                        [
                                          core_type (src/deriving.ml[113,3422+31]..src/deriving.ml[113,3422+37])
                                            Ttyp_constr "string/17!"
                                            []
                                          core_type (src/deriving.ml[113,3422+40]..src/deriving.ml[113,3422+50])
                                            Ttyp_constr "Ppxlib__!.Import.expression"
                                            []
                                        ]
                                    ]
                                  core_type (src/deriving.ml[113,3422+60]..src/deriving.ml[113,3422+75])
                                    Ttyp_constr "instance/4785"
                                    [
                                      core_type (src/deriving.ml[113,3422+61]..src/deriving.ml[113,3422+62])
                                        Ttyp_constr "a/4789"
                                        []
                                      core_type (src/deriving.ml[113,3422+64]..src/deriving.ml[113,3422+65])
                                        Ttyp_constr "b/4790"
                                        []
                                    ]
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/deriving.ml[114,3500+9]..src/deriving.ml[114,3500+13])
                                      Tpat_var "spec/4791"
                                    expression (src/deriving.ml[114,3500+14]..src/deriving.ml[123,3786+39]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (src/deriving.ml[114,3500+14]..src/deriving.ml[114,3500+18])
                                            Tpat_var "args/4792"
                                          expression (src/deriving.ml[115,3522+6]..src/deriving.ml[123,3786+39])
                                            Texp_match
                                            expression (src/deriving.ml[115,3522+12]..src/deriving.ml[115,3522+16])
                                              Texp_ident "spec/4791"
                                            [
                                              <case>
                                                pattern (src/deriving.ml[116,3544+8]..src/deriving.ml[116,3544+11])
                                                  Tpat_value
                                                  pattern (src/deriving.ml[116,3544+8]..src/deriving.ml[116,3544+11])
                                                    Tpat_construct "Nil"
                                                    []
                                                expression (src/deriving.ml[116,3544+15]..src/deriving.ml[116,3544+20])
                                                  Texp_construct "I_nil"
                                                  []
                                              <case>
                                                pattern (src/deriving.ml[117,3565+8]..src/deriving.ml[117,3565+19])
                                                  Tpat_value
                                                  pattern (src/deriving.ml[117,3565+8]..src/deriving.ml[117,3565+19])
                                                    Tpat_construct "Cons"
                                                    [
                                                      pattern (src/deriving.ml[117,3565+14]..src/deriving.ml[117,3565+15])
                                                        Tpat_var "t/4794"
                                                      pattern (src/deriving.ml[117,3565+17]..src/deriving.ml[117,3565+18])
                                                        Tpat_var "p/4795"
                                                    ]
                                                expression (src/deriving.ml[118,3588+10]..src/deriving.ml[123,3786+39])
                                                  Texp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (src/deriving.ml[118,3588+14]..src/deriving.ml[118,3588+19])
                                                        Tpat_var "value/4796"
                                                      expression (src/deriving.ml[119,3610+12]..src/deriving.ml[121,3692+80])
                                                        Texp_match
                                                        expression (src/deriving.ml[119,3610+18]..src/deriving.ml[119,3610+44])
                                                          Texp_apply
                                                          expression (src/deriving.ml[119,3610+18]..src/deriving.ml[119,3610+32])
                                                            Texp_ident "Ppxlib__!.Import.List.assoc_opt"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/deriving.ml[119,3610+33]..src/deriving.ml[119,3610+39])
                                                                Texp_field
                                                                expression (src/deriving.ml[119,3610+33]..src/deriving.ml[119,3610+34])
                                                                  Texp_ident "p/4795"
                                                                "name"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/deriving.ml[119,3610+40]..src/deriving.ml[119,3610+44])
                                                                Texp_ident "args/4792"
                                                          ]
                                                        [
                                                          <case>
                                                            pattern (src/deriving.ml[120,3660+14]..src/deriving.ml[120,3660+18])
                                                              Tpat_value
                                                              pattern (src/deriving.ml[120,3660+14]..src/deriving.ml[120,3660+18])
                                                                Tpat_construct "None"
                                                                []
                                                            expression (src/deriving.ml[120,3660+22]..src/deriving.ml[120,3660+31])
                                                              Texp_field
                                                              expression (src/deriving.ml[120,3660+22]..src/deriving.ml[120,3660+23])
                                                                Texp_ident "p/4795"
                                                              "default"
                                                          <case>
                                                            pattern (src/deriving.ml[121,3692+14]..src/deriving.ml[121,3692+23])
                                                              Tpat_value
                                                              pattern (src/deriving.ml[121,3692+14]..src/deriving.ml[121,3692+23])
                                                                Tpat_construct "Some"
                                                                [
                                                                  pattern (src/deriving.ml[121,3692+19]..src/deriving.ml[121,3692+23])
                                                                    Tpat_var "expr/4870"
                                                                ]
                                                            expression (src/deriving.ml[121,3692+27]..src/deriving.ml[121,3692+80])
                                                              Texp_apply
                                                              expression (src/deriving.ml[121,3692+27]..src/deriving.ml[121,3692+51])
                                                                Texp_ident "Ppxlib__!.Ast_pattern.Packed.parse"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/deriving.ml[121,3692+52]..src/deriving.ml[121,3692+61])
                                                                    Texp_field
                                                                    expression (src/deriving.ml[121,3692+52]..src/deriving.ml[121,3692+53])
                                                                      Texp_ident "p/4795"
                                                                    "pattern"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/deriving.ml[121,3692+62]..src/deriving.ml[121,3692+75])
                                                                    Texp_field
                                                                    expression (src/deriving.ml[121,3692+62]..src/deriving.ml[121,3692+66])
                                                                      Texp_ident "expr/4870"
                                                                    "pexp_loc"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/deriving.ml[121,3692+76]..src/deriving.ml[121,3692+80])
                                                                    Texp_ident "expr/4870"
                                                              ]
                                                        ]
                                                        []
                                                  ]
                                                  expression (src/deriving.ml[123,3786+10]..src/deriving.ml[123,3786+39])
                                                    Texp_construct "I_cons"
                                                    [
                                                      expression (src/deriving.ml[123,3786+18]..src/deriving.ml[123,3786+31])
                                                        Texp_apply
                                                        expression (src/deriving.ml[123,3786+18]..src/deriving.ml[123,3786+24])
                                                          Texp_ident "create/4788"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/deriving.ml[123,3786+25]..src/deriving.ml[123,3786+26])
                                                              Texp_ident "t/4794"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/deriving.ml[123,3786+27]..src/deriving.ml[123,3786+31])
                                                              Texp_ident "args/4792"
                                                        ]
                                                      expression (src/deriving.ml[123,3786+33]..src/deriving.ml[123,3786+38])
                                                        Texp_ident "value/4796"
                                                    ]
                                            ]
                                            []
                                      ]
                                ]
                    ]
                  structure_item (src/deriving.ml[125,3827+4]..src/deriving.ml[126,3885+70])
                    Tstr_value Rec
                    [
                      <def>
                        pattern (src/deriving.ml[125,3827+12]..src/deriving.ml[125,3827+17])
                          Tpat_extra_constraint
                          core_type (src/deriving.ml[125,3827+12]..src/deriving.ml[126,3885+70]) ghost
                            Ttyp_poly 'a 'b
                            core_type (src/deriving.ml[125,3827+30]..src/deriving.ml[125,3827+55])
                              Ttyp_arrow
                              Nolabel
                              core_type (src/deriving.ml[125,3827+30]..src/deriving.ml[125,3827+45])
                                Ttyp_constr "instance/4785"
                                [
                                  core_type (src/deriving.ml[125,3827+31]..src/deriving.ml[125,3827+32])
                                    Ttyp_var a
                                  core_type (src/deriving.ml[125,3827+34]..src/deriving.ml[125,3827+35])
                                    Ttyp_var b
                                ]
                              core_type (src/deriving.ml[125,3827+49]..src/deriving.ml[125,3827+55])
                                Ttyp_arrow
                                Nolabel
                                core_type (src/deriving.ml[125,3827+49]..src/deriving.ml[125,3827+50])
                                  Ttyp_var a
                                core_type (src/deriving.ml[125,3827+54]..src/deriving.ml[125,3827+55])
                                  Ttyp_var b
                          pattern (src/deriving.ml[125,3827+12]..src/deriving.ml[125,3827+17])
                            Tpat_var "apply/4908"
                        expression (src/deriving.ml[125,3827+12]..src/deriving.ml[126,3885+70])
                          Texp_newtype "a"
                            Texp_newtype "b"
                              Texp_constraint
                              core_type (src/deriving.ml[125,3827+30]..src/deriving.ml[125,3827+55])
                                Ttyp_arrow
                                Nolabel
                                core_type (src/deriving.ml[125,3827+30]..src/deriving.ml[125,3827+45])
                                  Ttyp_constr "instance/4785"
                                  [
                                    core_type (src/deriving.ml[125,3827+31]..src/deriving.ml[125,3827+32])
                                      Ttyp_constr "a/4909"
                                      []
                                    core_type (src/deriving.ml[125,3827+34]..src/deriving.ml[125,3827+35])
                                      Ttyp_constr "b/4910"
                                      []
                                  ]
                                core_type (src/deriving.ml[125,3827+49]..src/deriving.ml[125,3827+55])
                                  Ttyp_arrow
                                  Nolabel
                                  core_type (src/deriving.ml[125,3827+49]..src/deriving.ml[125,3827+50])
                                    Ttyp_constr "a/4909"
                                    []
                                  core_type (src/deriving.ml[125,3827+54]..src/deriving.ml[125,3827+55])
                                    Ttyp_constr "b/4910"
                                    []
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/deriving.ml[126,3885+9]..src/deriving.ml[126,3885+10])
                                      Tpat_var "t/4911"
                                    expression (src/deriving.ml[126,3885+11]..src/deriving.ml[126,3885+70]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (src/deriving.ml[126,3885+11]..src/deriving.ml[126,3885+12])
                                            Tpat_var "f/4912"
                                          expression (src/deriving.ml[126,3885+16]..src/deriving.ml[126,3885+70])
                                            Texp_match
                                            expression (src/deriving.ml[126,3885+22]..src/deriving.ml[126,3885+23])
                                              Texp_ident "t/4911"
                                            [
                                              <case>
                                                pattern (src/deriving.ml[126,3885+29]..src/deriving.ml[126,3885+34])
                                                  Tpat_value
                                                  pattern (src/deriving.ml[126,3885+29]..src/deriving.ml[126,3885+34])
                                                    Tpat_construct "I_nil"
                                                    []
                                                expression (src/deriving.ml[126,3885+38]..src/deriving.ml[126,3885+39])
                                                  Texp_ident "f/4912"
                                              <case>
                                                pattern (src/deriving.ml[126,3885+42]..src/deriving.ml[126,3885+55])
                                                  Tpat_value
                                                  pattern (src/deriving.ml[126,3885+42]..src/deriving.ml[126,3885+55])
                                                    Tpat_construct "I_cons"
                                                    [
                                                      pattern (src/deriving.ml[126,3885+50]..src/deriving.ml[126,3885+51])
                                                        Tpat_var "t/4914"
                                                      pattern (src/deriving.ml[126,3885+53]..src/deriving.ml[126,3885+54])
                                                        Tpat_var "x/4915"
                                                    ]
                                                expression (src/deriving.ml[126,3885+59]..src/deriving.ml[126,3885+70])
                                                  Texp_apply
                                                  expression (src/deriving.ml[126,3885+59]..src/deriving.ml[126,3885+64])
                                                    Texp_ident "apply/4908"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/deriving.ml[126,3885+65]..src/deriving.ml[126,3885+66])
                                                        Texp_ident "t/4914"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/deriving.ml[126,3885+67]..src/deriving.ml[126,3885+68])
                                                        Texp_ident "f/4912"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/deriving.ml[126,3885+69]..src/deriving.ml[126,3885+70])
                                                        Texp_ident "x/4915"
                                                  ]
                                            ]
                                            []
                                      ]
                                ]
                    ]
                ]
          structure_item (src/deriving.ml[129,3963+2]..src/deriving.ml[129,3963+64])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[129,3963+6]..src/deriving.ml[129,3963+11])
                  Tpat_var "apply/4918"
                expression (src/deriving.ml[129,3963+12]..src/deriving.ml[129,3963+64]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/deriving.ml[129,3963+12]..src/deriving.ml[129,3963+13])
                        Tpat_var "t/4920"
                      expression (src/deriving.ml[129,3963+14]..src/deriving.ml[129,3963+64]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/deriving.ml[129,3963+14]..src/deriving.ml[129,3963+18])
                              Tpat_var "args/4921"
                            expression (src/deriving.ml[129,3963+19]..src/deriving.ml[129,3963+64]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/deriving.ml[129,3963+19]..src/deriving.ml[129,3963+20])
                                    Tpat_var "f/4922"
                                  expression (src/deriving.ml[129,3963+23]..src/deriving.ml[129,3963+64])
                                    Texp_apply
                                    expression (src/deriving.ml[129,3963+23]..src/deriving.ml[129,3963+37])
                                      Texp_ident "Instance/4917.apply"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/deriving.ml[129,3963+38]..src/deriving.ml[129,3963+62])
                                          Texp_apply
                                          expression (src/deriving.ml[129,3963+39]..src/deriving.ml[129,3963+54])
                                            Texp_ident "Instance/4917.create"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/deriving.ml[129,3963+55]..src/deriving.ml[129,3963+56])
                                                Texp_ident "t/4920"
                                            <arg>
                                              Nolabel
                                              expression (src/deriving.ml[129,3963+57]..src/deriving.ml[129,3963+61])
                                                Texp_ident "args/4921"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/deriving.ml[129,3963+63]..src/deriving.ml[129,3963+64])
                                          Texp_ident "f/4922"
                                    ]
                              ]
                        ]
                  ]
            ]
        ]
  structure_item (src/deriving.ml[136,4250+0]..src/deriving.ml[136,4250+15])
    Tstr_type Rec
    [
      type_declaration t/4924 (src/deriving.ml[136,4250+0]..src/deriving.ml[136,4250+15])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/deriving.ml[136,4250+9]..src/deriving.ml[136,4250+15])
              Ttyp_constr "string/17!"
              []
    ]
  structure_item (src/deriving.ml[138,4267+0]..src/deriving.ml[138,4267+23])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[138,4267+4]..src/deriving.ml[138,4267+10])
          Tpat_var "ignore/4925"
        expression (src/deriving.ml[138,4267+11]..src/deriving.ml[138,4267+23]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/deriving.ml[138,4267+12]..src/deriving.ml[138,4267+13])
                Tpat_extra_constraint
                core_type (src/deriving.ml[138,4267+16]..src/deriving.ml[138,4267+17])
                  Ttyp_constr "t/4924"
                  []
                pattern (src/deriving.ml[138,4267+12]..src/deriving.ml[138,4267+13])
                  Tpat_any
              expression (src/deriving.ml[138,4267+21]..src/deriving.ml[138,4267+23])
                Texp_construct "()"
                []
          ]
    ]
  structure_item (src/deriving.ml[140,4292+0]..src/deriving.ml[142,4350+41])
    Tstr_type Rec
    [
      type_declaration parsed_args/4927 (src/deriving.ml[140,4292+0]..src/deriving.ml[142,4350+41])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (src/deriving.ml[141,4311+2]..src/deriving.ml[141,4311+38])
                Args/4928
                [
                  core_type (src/deriving.ml[141,4311+12]..src/deriving.ml[141,4311+38])
                    Ttyp_constr "list/11!"
                    [
                      core_type (src/deriving.ml[141,4311+13]..src/deriving.ml[141,4311+32])
                        Ttyp_tuple
                        [
                          core_type (src/deriving.ml[141,4311+13]..src/deriving.ml[141,4311+19])
                            Ttyp_constr "string/17!"
                            []
                          core_type (src/deriving.ml[141,4311+22]..src/deriving.ml[141,4311+32])
                            Ttyp_constr "Ppxlib__!.Import.expression"
                            []
                        ]
                    ]
                ]
                None
              (src/deriving.ml[142,4350+2]..src/deriving.ml[142,4350+41])
                Unknown_syntax/4929
                [
                  core_type (src/deriving.ml[142,4350+22]..src/deriving.ml[142,4350+32])
                    Ttyp_constr "Ppxlib__!.Location.t"
                    []
                  core_type (src/deriving.ml[142,4350+35]..src/deriving.ml[142,4350+41])
                    Ttyp_constr "string/17!"
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (src/deriving.ml[144,4393+0]..src/deriving.ml[144,4393+77])
    Tstr_type Rec
    [
      type_declaration derived_code/4930 (src/deriving.ml[144,4393+0]..src/deriving.ml[144,4393+77])
        ptype_params =
          [
            core_type (src/deriving.ml[144,4393+5]..src/deriving.ml[144,4393+10])
              Ttyp_var item
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (src/deriving.ml[144,4393+28]..src/deriving.ml[144,4393+47])
                Immutable
                items/4931                core_type (src/deriving.ml[144,4393+36]..src/deriving.ml[144,4393+46])
                  Ttyp_poly
                  core_type (src/deriving.ml[144,4393+36]..src/deriving.ml[144,4393+46])
                    Ttyp_constr "list/11!"
                    [
                      core_type (src/deriving.ml[144,4393+36]..src/deriving.ml[144,4393+41])
                        Ttyp_var item
                    ]
              (src/deriving.ml[144,4393+48]..src/deriving.ml[144,4393+75])
                Immutable
                unused_code_warnings/4932                core_type (src/deriving.ml[144,4393+71]..src/deriving.ml[144,4393+75])
                  Ttyp_poly
                  core_type (src/deriving.ml[144,4393+71]..src/deriving.ml[144,4393+75])
                    Ttyp_constr "bool/5!"
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (src/deriving.ml[146,4472+0]..src/deriving.ml[247,8017+3])
    Tstr_module
    Generator/6276
      module_expr (src/deriving.ml[146,4472+19]..src/deriving.ml[247,8017+3])
        module_expr (src/deriving.ml[146,4472+19]..src/deriving.ml[247,8017+3])
          Tmod_structure
          [
            structure_item (src/deriving.ml[147,4498+2]..src/deriving.ml[147,4498+18])
              Tstr_type Rec
              [
                type_declaration deriver/4933 (src/deriving.ml[147,4498+2]..src/deriving.ml[147,4498+18])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ttype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (src/deriving.ml[147,4498+17]..src/deriving.ml[147,4498+18])
                        Ttyp_constr "t/4924"
                        []
              ]
            structure_item (src/deriving.ml[149,4518+2]..src/deriving.ml[157,4750+21])
              Tstr_type Rec
              [
                type_declaration t/4934 (src/deriving.ml[149,4518+2]..src/deriving.ml[157,4750+21])
                  ptype_params =
                    [
                      core_type (src/deriving.ml[149,4518+8]..src/deriving.ml[149,4518+10])
                        Ttyp_var a
                      core_type (src/deriving.ml[149,4518+12]..src/deriving.ml[149,4518+14])
                        Ttyp_var b
                    ]
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ttype_variant
                      [
                        (src/deriving.ml[150,4538+4]..src/deriving.ml[157,4750+21])
                          T/4935
                          [
                            (src/deriving.ml[151,4550+8]..src/deriving.ml[151,4550+31])
                              Immutable
                              spec/4936                              core_type (src/deriving.ml[151,4550+15]..src/deriving.ml[151,4550+30])
                                Ttyp_poly
                                core_type (src/deriving.ml[151,4550+15]..src/deriving.ml[151,4550+30])
                                  Ttyp_constr "Args/4923.t"
                                  [
                                    core_type (src/deriving.ml[151,4550+16]..src/deriving.ml[151,4550+18])
                                      Ttyp_var c
                                    core_type (src/deriving.ml[151,4550+20]..src/deriving.ml[151,4550+22])
                                      Ttyp_var a
                                  ]
                            (src/deriving.ml[152,4582+8]..src/deriving.ml[152,4582+59])
                              Immutable
                              gen/4978                              core_type (src/deriving.ml[152,4582+14]..src/deriving.ml[152,4582+58])
                                Ttyp_poly
                                core_type (src/deriving.ml[152,4582+14]..src/deriving.ml[152,4582+58])
                                  Ttyp_arrow
                                  Labelled "ctxt"
                                  core_type (src/deriving.ml[152,4582+19]..src/deriving.ml[152,4582+46])
                                    Ttyp_constr "Ppxlib__!.Expansion_context.Deriver.t"
                                    []
                                  core_type (src/deriving.ml[152,4582+50]..src/deriving.ml[152,4582+58])
                                    Ttyp_arrow
                                    Nolabel
                                    core_type (src/deriving.ml[152,4582+50]..src/deriving.ml[152,4582+52])
                                      Ttyp_var b
                                    core_type (src/deriving.ml[152,4582+56]..src/deriving.ml[152,4582+58])
                                      Ttyp_var c
                            (src/deriving.ml[153,4642+8]..src/deriving.ml[153,4642+33])
                              Immutable
                              arg_names/5184                              core_type (src/deriving.ml[153,4642+20]..src/deriving.ml[153,4642+32])
                                Ttyp_poly
                                core_type (src/deriving.ml[153,4642+20]..src/deriving.ml[153,4642+32])
                                  Ttyp_constr "Ppxlib__!.Import.String.Set.t"
                                  []
                            (src/deriving.ml[154,4676+8]..src/deriving.ml[154,4676+28])
                              Immutable
                              deps/5185                              core_type (src/deriving.ml[154,4676+15]..src/deriving.ml[154,4676+27])
                                Ttyp_poly
                                core_type (src/deriving.ml[154,4676+15]..src/deriving.ml[154,4676+27])
                                  Ttyp_constr "list/11!"
                                  [
                                    core_type (src/deriving.ml[154,4676+15]..src/deriving.ml[154,4676+22])
                                      Ttyp_constr "deriver/4933"
                                      []
                                  ]
                            (src/deriving.ml[155,4705+8]..src/deriving.ml[155,4705+36])
                              Immutable
                              unused_code_warnings/5186                              core_type (src/deriving.ml[155,4705+31]..src/deriving.ml[155,4705+35])
                                Ttyp_poly
                                core_type (src/deriving.ml[155,4705+31]..src/deriving.ml[155,4705+35])
                                  Ttyp_constr "bool/5!"
                                  []
                          ]
                          Some
                            core_type (src/deriving.ml[157,4750+11]..src/deriving.ml[157,4750+21])
                              Ttyp_constr "t/4934"
                              [
                                core_type (src/deriving.ml[157,4750+12]..src/deriving.ml[157,4750+14])
                                  Ttyp_var a
                                core_type (src/deriving.ml[157,4750+16]..src/deriving.ml[157,4750+18])
                                  Ttyp_var b
                              ]
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (src/deriving.ml[159,4773+2]..src/deriving.ml[159,4773+25])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/deriving.ml[159,4773+6]..src/deriving.ml[159,4773+10])
                    Tpat_var "deps/5187"
                  expression (src/deriving.ml[159,4773+11]..src/deriving.ml[159,4773+25]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/deriving.ml[159,4773+11]..src/deriving.ml[159,4773+16])
                          Tpat_construct "T"
                          [
                            pattern (src/deriving.ml[159,4773+14]..src/deriving.ml[159,4773+15])
                              Tpat_var "t/5190"
                          ]
                        expression (src/deriving.ml[159,4773+19]..src/deriving.ml[159,4773+25])
                          Texp_field
                          expression (src/deriving.ml[159,4773+19]..src/deriving.ml[159,4773+20])
                            Texp_ident "t/5190"
                          "deps"
                    ]
              ]
            structure_item (src/deriving.ml[161,4800+2]..src/deriving.ml[169,5174+5])
              Tstr_module
              V2/5543
                module_expr (src/deriving.ml[161,4800+14]..src/deriving.ml[169,5174+5])
                  Tmod_structure
                  [
                    structure_item (src/deriving.ml[162,4821+4]..src/deriving.ml[165,4981+60])
                      Tstr_value Nonrec
                      [
                        <def>
                          pattern (src/deriving.ml[162,4821+8]..src/deriving.ml[162,4821+12])
                            Tpat_var "make/5192"
                          expression (src/deriving.ml[162,4821+13]..src/deriving.ml[165,4981+60]) ghost
                            Texp_function
                            Optional "attributes"
                            [
                              <case>
                                pattern (src/deriving.ml[162,4821+26]..src/deriving.ml[162,4821+32]) ghost
                                  Tpat_var "*opt*/5194"
                                expression (src/deriving.ml[162,4821+13]..src/deriving.ml[165,4981+60]) ghost
                                  attribute "#default"
                                    []
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/deriving.ml[162,4821+26]..src/deriving.ml[162,4821+27])
                                        Tpat_any
                                      expression (src/deriving.ml[162,4821+26]..src/deriving.ml[162,4821+32]) ghost
                                        Texp_match
                                        expression (src/deriving.ml[162,4821+13]..src/deriving.ml[165,4981+60]) ghost
                                          Texp_ident "*opt*/5194"
                                        [
                                          <case>
                                            pattern (src/deriving.ml[162,4821+30]..src/deriving.ml[162,4821+32])
                                              Tpat_value
                                              pattern (src/deriving.ml[162,4821+30]..src/deriving.ml[162,4821+32])
                                                Tpat_construct "*predef*.Some"
                                                [
                                                  pattern (src/deriving.ml[162,4821+30]..src/deriving.ml[162,4821+32])
                                                    Tpat_var "*sth*/5195"
                                                ]
                                            expression (src/deriving.ml[162,4821+30]..src/deriving.ml[162,4821+32])
                                              Texp_ident "*sth*/5195"
                                          <case>
                                            pattern (src/deriving.ml[162,4821+30]..src/deriving.ml[162,4821+32])
                                              Tpat_value
                                              pattern (src/deriving.ml[162,4821+30]..src/deriving.ml[162,4821+32])
                                                Tpat_construct "*predef*.None"
                                                []
                                            expression (src/deriving.ml[162,4821+30]..src/deriving.ml[162,4821+32])
                                              Texp_construct "[]"
                                              []
                                        ]
                                        []
                                  ]
                                  expression (src/deriving.ml[162,4821+34]..src/deriving.ml[165,4981+60]) ghost
                                    Texp_function
                                    Optional "deps"
                                    [
                                      <case>
                                        pattern (src/deriving.ml[162,4821+36]..src/deriving.ml[162,4821+45]) ghost
                                          Tpat_var "*opt*/5196"
                                        expression (src/deriving.ml[162,4821+34]..src/deriving.ml[165,4981+60]) ghost
                                          attribute "#default"
                                            []
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/deriving.ml[162,4821+36]..src/deriving.ml[162,4821+40])
                                                Tpat_var "deps/5197"
                                              expression (src/deriving.ml[162,4821+36]..src/deriving.ml[162,4821+45]) ghost
                                                Texp_match
                                                expression (src/deriving.ml[162,4821+34]..src/deriving.ml[165,4981+60]) ghost
                                                  Texp_ident "*opt*/5196"
                                                [
                                                  <case>
                                                    pattern (src/deriving.ml[162,4821+43]..src/deriving.ml[162,4821+45])
                                                      Tpat_value
                                                      pattern (src/deriving.ml[162,4821+43]..src/deriving.ml[162,4821+45])
                                                        Tpat_construct "*predef*.Some"
                                                        [
                                                          pattern (src/deriving.ml[162,4821+43]..src/deriving.ml[162,4821+45])
                                                            Tpat_var "*sth*/5198"
                                                        ]
                                                    expression (src/deriving.ml[162,4821+43]..src/deriving.ml[162,4821+45])
                                                      Texp_ident "*sth*/5198"
                                                  <case>
                                                    pattern (src/deriving.ml[162,4821+43]..src/deriving.ml[162,4821+45])
                                                      Tpat_value
                                                      pattern (src/deriving.ml[162,4821+43]..src/deriving.ml[162,4821+45])
                                                        Tpat_construct "*predef*.None"
                                                        []
                                                    expression (src/deriving.ml[162,4821+43]..src/deriving.ml[162,4821+45])
                                                      Texp_construct "[]"
                                                      []
                                                ]
                                                []
                                          ]
                                          expression (src/deriving.ml[162,4821+47]..src/deriving.ml[165,4981+60]) ghost
                                            Texp_function
                                            Optional "unused_code_warnings"
                                            [
                                              <case>
                                                pattern (src/deriving.ml[162,4821+49]..src/deriving.ml[162,4821+77]) ghost
                                                  Tpat_var "*opt*/5199"
                                                expression (src/deriving.ml[162,4821+47]..src/deriving.ml[165,4981+60]) ghost
                                                  attribute "#default"
                                                    []
                                                  Texp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (src/deriving.ml[162,4821+49]..src/deriving.ml[162,4821+69])
                                                        Tpat_var "unused_code_warnings/5200"
                                                      expression (src/deriving.ml[162,4821+49]..src/deriving.ml[162,4821+77]) ghost
                                                        Texp_match
                                                        expression (src/deriving.ml[162,4821+47]..src/deriving.ml[165,4981+60]) ghost
                                                          Texp_ident "*opt*/5199"
                                                        [
                                                          <case>
                                                            pattern (src/deriving.ml[162,4821+72]..src/deriving.ml[162,4821+77])
                                                              Tpat_value
                                                              pattern (src/deriving.ml[162,4821+72]..src/deriving.ml[162,4821+77])
                                                                Tpat_construct "*predef*.Some"
                                                                [
                                                                  pattern (src/deriving.ml[162,4821+72]..src/deriving.ml[162,4821+77])
                                                                    Tpat_var "*sth*/5201"
                                                                ]
                                                            expression (src/deriving.ml[162,4821+72]..src/deriving.ml[162,4821+77])
                                                              Texp_ident "*sth*/5201"
                                                          <case>
                                                            pattern (src/deriving.ml[162,4821+72]..src/deriving.ml[162,4821+77])
                                                              Tpat_value
                                                              pattern (src/deriving.ml[162,4821+72]..src/deriving.ml[162,4821+77])
                                                                Tpat_construct "*predef*.None"
                                                                []
                                                            expression (src/deriving.ml[162,4821+72]..src/deriving.ml[162,4821+77])
                                                              Texp_construct "false"
                                                              []
                                                        ]
                                                        []
                                                  ]
                                                  expression (src/deriving.ml[163,4900+8]..src/deriving.ml[165,4981+60]) ghost
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (src/deriving.ml[163,4900+8]..src/deriving.ml[163,4900+12])
                                                          Tpat_var "spec/5202"
                                                        expression (src/deriving.ml[163,4900+13]..src/deriving.ml[165,4981+60]) ghost
                                                          Texp_function
                                                          Nolabel
                                                          [
                                                            <case>
                                                              pattern (src/deriving.ml[163,4900+13]..src/deriving.ml[163,4900+16])
                                                                Tpat_var "gen/5203"
                                                              expression (src/deriving.ml[164,4919+6]..src/deriving.ml[165,4981+60])
                                                                Texp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (src/deriving.ml[164,4919+10]..src/deriving.ml[164,4919+19])
                                                                      Tpat_var "arg_names/5204"
                                                                    expression (src/deriving.ml[164,4919+22]..src/deriving.ml[164,4919+58])
                                                                      Texp_apply
                                                                      expression (src/deriving.ml[164,4919+22]..src/deriving.ml[164,4919+40])
                                                                        Texp_ident "Ppxlib__!.Import.String.Set.of_list"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/deriving.ml[164,4919+41]..src/deriving.ml[164,4919+58])
                                                                            Texp_apply
                                                                            expression (src/deriving.ml[164,4919+42]..src/deriving.ml[164,4919+52])
                                                                              Texp_ident "Args/4923.names"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/deriving.ml[164,4919+53]..src/deriving.ml[164,4919+57])
                                                                                  Texp_ident "spec/5202"
                                                                            ]
                                                                      ]
                                                                ]
                                                                expression (src/deriving.ml[165,4981+6]..src/deriving.ml[165,4981+60])
                                                                  Texp_construct "T"
                                                                  [
                                                                    expression (src/deriving.ml[165,4981+8]..src/deriving.ml[165,4981+60])
                                                                      Texp_record
                                                                        fields =
                                                                          [
                                                                            "spec"
                                                                              expression (src/deriving.ml[165,4981+10]..src/deriving.ml[165,4981+14]) ghost
                                                                                Texp_ident "spec/5202"
                                                                            "gen"
                                                                              expression (src/deriving.ml[165,4981+16]..src/deriving.ml[165,4981+19]) ghost
                                                                                Texp_ident "gen/5203"
                                                                            "arg_names"
                                                                              expression (src/deriving.ml[165,4981+21]..src/deriving.ml[165,4981+30]) ghost
                                                                                Texp_ident "arg_names/5204"
                                                                            "deps"
                                                                              expression (src/deriving.ml[165,4981+32]..src/deriving.ml[165,4981+36]) ghost
                                                                                Texp_ident "deps/5197"
                                                                            "unused_code_warnings"
                                                                              expression (src/deriving.ml[165,4981+38]..src/deriving.ml[165,4981+58]) ghost
                                                                                Texp_ident "unused_code_warnings/5200"
                                                                          ]
                                                                        representation =
Record_inlined 0
                                                                        extended_expression =
                                                                          None
                                                                  ]
                                                          ]
                                                    ]
                                            ]
                                    ]
                            ]
                      ]
                    structure_item (src/deriving.ml[167,5043+4]..src/deriving.ml[168,5108+65])
                      Tstr_value Nonrec
                      [
                        <def>
                          pattern (src/deriving.ml[167,5043+8]..src/deriving.ml[167,5043+18])
                            Tpat_var "make_noarg/5537"
                          expression (src/deriving.ml[167,5043+19]..src/deriving.ml[168,5108+65]) ghost
                            Texp_function
                            Optional "attributes"
                            [
                              <case>
                                pattern (src/deriving.ml[167,5043+20]..src/deriving.ml[167,5043+30])
                                  Tpat_var "attributes/5539"
                                expression (src/deriving.ml[167,5043+31]..src/deriving.ml[168,5108+65]) ghost
                                  Texp_function
                                  Optional "deps"
                                  [
                                    <case>
                                      pattern (src/deriving.ml[167,5043+32]..src/deriving.ml[167,5043+36])
                                        Tpat_var "deps/5540"
                                      expression (src/deriving.ml[167,5043+37]..src/deriving.ml[168,5108+65]) ghost
                                        Texp_function
                                        Optional "unused_code_warnings"
                                        [
                                          <case>
                                            pattern (src/deriving.ml[167,5043+38]..src/deriving.ml[167,5043+58])
                                              Tpat_var "unused_code_warnings/5541"
                                            expression (src/deriving.ml[167,5043+59]..src/deriving.ml[168,5108+65]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/deriving.ml[167,5043+59]..src/deriving.ml[167,5043+62])
                                                    Tpat_var "gen/5542"
                                                  expression (src/deriving.ml[168,5108+6]..src/deriving.ml[168,5108+65])
                                                    Texp_apply
                                                    expression (src/deriving.ml[168,5108+6]..src/deriving.ml[168,5108+10])
                                                      Texp_ident "make/5192"
                                                    [
                                                      <arg>
                                                        Optional "attributes"
                                                        expression (src/deriving.ml[168,5108+12]..src/deriving.ml[168,5108+22])
                                                          Texp_ident "attributes/5539"
                                                      <arg>
                                                        Optional "deps"
                                                        expression (src/deriving.ml[168,5108+24]..src/deriving.ml[168,5108+28])
                                                          Texp_ident "deps/5540"
                                                      <arg>
                                                        Optional "unused_code_warnings"
                                                        expression (src/deriving.ml[168,5108+30]..src/deriving.ml[168,5108+50])
                                                          Texp_ident "unused_code_warnings/5541"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/deriving.ml[168,5108+51]..src/deriving.ml[168,5108+61])
                                                          Texp_ident "Args/4923.empty"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/deriving.ml[168,5108+62]..src/deriving.ml[168,5108+65])
                                                          Texp_ident "gen/5542"
                                                    ]
                                              ]
                                        ]
                                  ]
                            ]
                      ]
                  ]
            structure_item (src/deriving.ml[171,5181+2]..src/deriving.ml[173,5300+55])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/deriving.ml[171,5181+6]..src/deriving.ml[171,5181+10])
                    Tpat_var "make/5544"
                  expression (src/deriving.ml[171,5181+11]..src/deriving.ml[173,5300+55]) ghost
                    Texp_function
                    Optional "attributes"
                    [
                      <case>
                        pattern (src/deriving.ml[171,5181+12]..src/deriving.ml[171,5181+22])
                          Tpat_var "attributes/5546"
                        expression (src/deriving.ml[171,5181+23]..src/deriving.ml[173,5300+55]) ghost
                          Texp_function
                          Optional "deps"
                          [
                            <case>
                              pattern (src/deriving.ml[171,5181+24]..src/deriving.ml[171,5181+28])
                                Tpat_var "deps/5547"
                              expression (src/deriving.ml[171,5181+29]..src/deriving.ml[173,5300+55]) ghost
                                Texp_function
                                Optional "unused_code_warnings"
                                [
                                  <case>
                                    pattern (src/deriving.ml[171,5181+30]..src/deriving.ml[171,5181+50])
                                      Tpat_var "unused_code_warnings/5548"
                                    expression (src/deriving.ml[171,5181+51]..src/deriving.ml[173,5300+55]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (src/deriving.ml[171,5181+51]..src/deriving.ml[171,5181+55])
                                            Tpat_var "spec/5549"
                                          expression (src/deriving.ml[171,5181+56]..src/deriving.ml[173,5300+55]) ghost
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (src/deriving.ml[171,5181+56]..src/deriving.ml[171,5181+59])
                                                  Tpat_var "gen/5550"
                                                expression (src/deriving.ml[172,5243+4]..src/deriving.ml[173,5300+55])
                                                  Texp_apply
                                                  expression (src/deriving.ml[172,5243+4]..src/deriving.ml[172,5243+11])
                                                    Texp_ident "V2/5543.make"
                                                  [
                                                    <arg>
                                                      Optional "attributes"
                                                      expression (src/deriving.ml[172,5243+13]..src/deriving.ml[172,5243+23])
                                                        Texp_ident "attributes/5546"
                                                    <arg>
                                                      Optional "deps"
                                                      expression (src/deriving.ml[172,5243+25]..src/deriving.ml[172,5243+29])
                                                        Texp_ident "deps/5547"
                                                    <arg>
                                                      Optional "unused_code_warnings"
                                                      expression (src/deriving.ml[172,5243+31]..src/deriving.ml[172,5243+51])
                                                        Texp_ident "unused_code_warnings/5548"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/deriving.ml[172,5243+52]..src/deriving.ml[172,5243+56])
                                                        Texp_ident "spec/5549"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/deriving.ml[173,5300+6]..src/deriving.ml[173,5300+55])
                                                        Texp_apply
                                                        expression (src/deriving.ml[173,5300+7]..src/deriving.ml[173,5300+50])
                                                          Texp_ident "Ppxlib__!.Expansion_context.Deriver.with_loc_and_path"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/deriving.ml[173,5300+51]..src/deriving.ml[173,5300+54])
                                                              Texp_ident "gen/5550"
                                                        ]
                                                  ]
                                            ]
                                      ]
                                ]
                          ]
                    ]
              ]
            structure_item (src/deriving.ml[175,5357+2]..src/deriving.ml[176,5420+63])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/deriving.ml[175,5357+6]..src/deriving.ml[175,5357+16])
                    Tpat_var "make_noarg/5551"
                  expression (src/deriving.ml[175,5357+17]..src/deriving.ml[176,5420+63]) ghost
                    Texp_function
                    Optional "attributes"
                    [
                      <case>
                        pattern (src/deriving.ml[175,5357+18]..src/deriving.ml[175,5357+28])
                          Tpat_var "attributes/5553"
                        expression (src/deriving.ml[175,5357+29]..src/deriving.ml[176,5420+63]) ghost
                          Texp_function
                          Optional "deps"
                          [
                            <case>
                              pattern (src/deriving.ml[175,5357+30]..src/deriving.ml[175,5357+34])
                                Tpat_var "deps/5554"
                              expression (src/deriving.ml[175,5357+35]..src/deriving.ml[176,5420+63]) ghost
                                Texp_function
                                Optional "unused_code_warnings"
                                [
                                  <case>
                                    pattern (src/deriving.ml[175,5357+36]..src/deriving.ml[175,5357+56])
                                      Tpat_var "unused_code_warnings/5555"
                                    expression (src/deriving.ml[175,5357+57]..src/deriving.ml[176,5420+63]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (src/deriving.ml[175,5357+57]..src/deriving.ml[175,5357+60])
                                            Tpat_var "gen/5556"
                                          expression (src/deriving.ml[176,5420+4]..src/deriving.ml[176,5420+63])
                                            Texp_apply
                                            expression (src/deriving.ml[176,5420+4]..src/deriving.ml[176,5420+8])
                                              Texp_ident "make/5544"
                                            [
                                              <arg>
                                                Optional "attributes"
                                                expression (src/deriving.ml[176,5420+10]..src/deriving.ml[176,5420+20])
                                                  Texp_ident "attributes/5553"
                                              <arg>
                                                Optional "deps"
                                                expression (src/deriving.ml[176,5420+22]..src/deriving.ml[176,5420+26])
                                                  Texp_ident "deps/5554"
                                              <arg>
                                                Optional "unused_code_warnings"
                                                expression (src/deriving.ml[176,5420+28]..src/deriving.ml[176,5420+48])
                                                  Texp_ident "unused_code_warnings/5555"
                                              <arg>
                                                Nolabel
                                                expression (src/deriving.ml[176,5420+49]..src/deriving.ml[176,5420+59])
                                                  Texp_ident "Args/4923.empty"
                                              <arg>
                                                Nolabel
                                                expression (src/deriving.ml[176,5420+60]..src/deriving.ml[176,5420+63])
                                                  Texp_ident "gen/5556"
                                            ]
                                      ]
                                ]
                          ]
                    ]
              ]
            structure_item (src/deriving.ml[178,5485+2]..src/deriving.ml[183,5640+27])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/deriving.ml[178,5485+6]..src/deriving.ml[178,5485+25])
                    Tpat_var "merge_accepted_args/5557"
                  expression (src/deriving.ml[178,5485+26]..src/deriving.ml[183,5640+27]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/deriving.ml[178,5485+26]..src/deriving.ml[178,5485+27])
                          Tpat_var "l/5559"
                        expression (src/deriving.ml[179,5515+4]..src/deriving.ml[183,5640+27])
                          Texp_let Rec
                          [
                            <def>
                              pattern (src/deriving.ml[179,5515+12]..src/deriving.ml[179,5515+16])
                                Tpat_var "loop/5560"
                              expression (src/deriving.ml[179,5515+17]..src/deriving.ml[181,5565+67]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/deriving.ml[179,5515+17]..src/deriving.ml[179,5515+20])
                                      Tpat_var "acc/5561"
                                    expression (src/deriving.ml[179,5515+23]..src/deriving.ml[181,5565+67])
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (src/deriving.ml[180,5547+8]..src/deriving.ml[180,5547+10])
                                            Tpat_construct "[]"
                                            []
                                          expression (src/deriving.ml[180,5547+14]..src/deriving.ml[180,5547+17])
                                            Texp_ident "acc/5561"
                                        <case>
                                          pattern (src/deriving.ml[181,5565+8]..src/deriving.ml[181,5565+19])
                                            Tpat_construct "::"
                                            [
                                              pattern (src/deriving.ml[181,5565+8]..src/deriving.ml[181,5565+11])
                                                Tpat_construct "T"
                                                [
                                                  pattern (src/deriving.ml[181,5565+10]..src/deriving.ml[181,5565+11])
                                                    Tpat_var "t/5563"
                                                ]
                                              pattern (src/deriving.ml[181,5565+15]..src/deriving.ml[181,5565+19])
                                                Tpat_var "rest/5564"
                                            ]
                                          expression (src/deriving.ml[181,5565+23]..src/deriving.ml[181,5565+67])
                                            Texp_apply
                                            expression (src/deriving.ml[181,5565+23]..src/deriving.ml[181,5565+27])
                                              Texp_ident "loop/5560"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/deriving.ml[181,5565+28]..src/deriving.ml[181,5565+62])
                                                  Texp_apply
                                                  expression (src/deriving.ml[181,5565+29]..src/deriving.ml[181,5565+45])
                                                    Texp_ident "Ppxlib__!.Import.String.Set.union"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/deriving.ml[181,5565+46]..src/deriving.ml[181,5565+49])
                                                        Texp_ident "acc/5561"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/deriving.ml[181,5565+50]..src/deriving.ml[181,5565+61])
                                                        Texp_field
                                                        expression (src/deriving.ml[181,5565+50]..src/deriving.ml[181,5565+51])
                                                          Texp_ident "t/5563"
                                                        "arg_names"
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (src/deriving.ml[181,5565+63]..src/deriving.ml[181,5565+67])
                                                  Texp_ident "rest/5564"
                                            ]
                                      ]
                                ]
                          ]
                          expression (src/deriving.ml[183,5640+4]..src/deriving.ml[183,5640+27])
                            Texp_apply
                            expression (src/deriving.ml[183,5640+4]..src/deriving.ml[183,5640+8])
                              Texp_ident "loop/5560"
                            [
                              <arg>
                                Nolabel
                                expression (src/deriving.ml[183,5640+9]..src/deriving.ml[183,5640+25])
                                  Texp_ident "Ppxlib__!.Import.String.Set.empty"
                              <arg>
                                Nolabel
                                expression (src/deriving.ml[183,5640+26]..src/deriving.ml[183,5640+27])
                                  Texp_ident "l/5559"
                            ]
                    ]
              ]
            structure_item (src/deriving.ml[185,5669+2]..src/deriving.ml[224,7152+58])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/deriving.ml[185,5669+6]..src/deriving.ml[185,5669+21])
                    Tpat_var "check_arguments/5567"
                  expression (src/deriving.ml[185,5669+22]..src/deriving.ml[224,7152+58]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/deriving.ml[185,5669+22]..src/deriving.ml[185,5669+26])
                          Tpat_var "name/5569"
                        expression (src/deriving.ml[185,5669+27]..src/deriving.ml[224,7152+58]) ghost
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/deriving.ml[185,5669+27]..src/deriving.ml[185,5669+37])
                                Tpat_var "generators/5570"
                              expression (src/deriving.ml[185,5669+38]..src/deriving.ml[224,7152+58]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/deriving.ml[185,5669+39]..src/deriving.ml[185,5669+43])
                                      Tpat_extra_constraint
                                      core_type (src/deriving.ml[185,5669+46]..src/deriving.ml[185,5669+72])
                                        Ttyp_constr "list/11!"
                                        [
                                          core_type (src/deriving.ml[185,5669+47]..src/deriving.ml[185,5669+66])
                                            Ttyp_tuple
                                            [
                                              core_type (src/deriving.ml[185,5669+47]..src/deriving.ml[185,5669+53])
                                                Ttyp_constr "string/17!"
                                                []
                                              core_type (src/deriving.ml[185,5669+56]..src/deriving.ml[185,5669+66])
                                                Ttyp_constr "Ppxlib__!.Import.expression"
                                                []
                                            ]
                                        ]
                                      pattern (src/deriving.ml[185,5669+39]..src/deriving.ml[185,5669+43])
                                        Tpat_alias "args/5571"
                                        pattern (src/deriving.ml[185,5669+39]..src/deriving.ml[185,5669+43])
                                          Tpat_any
                                    expression (src/deriving.ml[186,5745+4]..src/deriving.ml[224,7152+58])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/deriving.ml[186,5745+8]..src/deriving.ml[186,5745+25])
                                            Tpat_var "empty_label_error/5572"
                                          expression (src/deriving.ml[187,5773+6]..src/deriving.ml[192,6010+20])
                                            Texp_apply
                                            expression (src/deriving.ml[187,5773+6]..src/deriving.ml[187,5773+21])
                                              Texp_ident "Ppxlib__!.Import.List.filter_map"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/deriving.ml[187,5773+22]..src/deriving.ml[187,5773+26])
                                                  Texp_ident "args/5571"
                                              <arg>
                                                Labelled "f"
                                                expression (src/deriving.ml[187,5773+30]..src/deriving.ml[192,6010+20])
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (src/deriving.ml[187,5773+35]..src/deriving.ml[187,5773+45])
                                                        Tpat_tuple
                                                        [
                                                          pattern (src/deriving.ml[187,5773+36]..src/deriving.ml[187,5773+41])
                                                            Tpat_var "label/5573"
                                                          pattern (src/deriving.ml[187,5773+43]..src/deriving.ml[187,5773+44])
                                                            Tpat_var "e/5574"
                                                        ]
                                                      expression (src/deriving.ml[188,5822+10]..src/deriving.ml[192,6010+19])
                                                        Texp_ifthenelse
                                                        expression (src/deriving.ml[188,5822+13]..src/deriving.ml[188,5822+34])
                                                          Texp_apply
                                                          expression (src/deriving.ml[188,5822+13]..src/deriving.ml[188,5822+28])
                                                            Texp_ident "Ppxlib__!.Import.String.is_empty"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/deriving.ml[188,5822+29]..src/deriving.ml[188,5822+34])
                                                                Texp_ident "label/5573"
                                                          ]
                                                        expression (src/deriving.ml[189,5862+12]..src/deriving.ml[191,5936+73])
                                                          Texp_construct "Some"
                                                          [
                                                            expression (src/deriving.ml[190,5879+14]..src/deriving.ml[191,5936+73])
                                                              Texp_apply
                                                              expression (src/deriving.ml[190,5879+15]..src/deriving.ml[190,5879+40])
                                                                Texp_ident "Ppxlib__!.Location.error_extensionf"
                                                              [
                                                                <arg>
                                                                  Labelled "loc"
                                                                  expression (src/deriving.ml[190,5879+46]..src/deriving.ml[190,5879+56])
                                                                    Texp_field
                                                                    expression (src/deriving.ml[190,5879+46]..src/deriving.ml[190,5879+47])
                                                                      Texp_ident "e/5574"
                                                                    "pexp_loc"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/deriving.ml[191,5936+17]..src/deriving.ml[191,5936+72])
                                                                    Texp_construct "CamlinternalFormatBasics.Format"
                                                                    [
                                                                      expression (src/deriving.ml[191,5936+17]..src/deriving.ml[191,5936+72]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                        [
                                                                          expression (src/deriving.ml[191,5936+17]..src/deriving.ml[191,5936+72]) ghost
                                                                            Texp_constant Const_string("Ppxlib.Deriving: generator arguments must be labelled",(src/deriving.ml[191,5936+17]..src/deriving.ml[191,5936+72]) ghost,None)
                                                                          expression (src/deriving.ml[191,5936+17]..src/deriving.ml[191,5936+72]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                            []
                                                                        ]
                                                                      expression (src/deriving.ml[191,5936+17]..src/deriving.ml[191,5936+72]) ghost
                                                                        Texp_constant Const_string("Ppxlib.Deriving: generator arguments must be labelled",(src/deriving.ml[191,5936+17]..src/deriving.ml[191,5936+72]) ghost,None)
                                                                    ]
                                                              ]
                                                          ]
                                                        Some
                                                          expression (src/deriving.ml[192,6010+15]..src/deriving.ml[192,6010+19])
                                                            Texp_construct "None"
                                                            []
                                                  ]
                                            ]
                                      ]
                                      expression (src/deriving.ml[194,6038+4]..src/deriving.ml[224,7152+58])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/deriving.ml[194,6038+8]..src/deriving.ml[194,6038+32])
                                              Tpat_var "duplicate_argument_error/5596"
                                            expression (src/deriving.ml[195,6073+6]..src/deriving.ml[201,6350+23])
                                              Texp_apply
                                              expression (src/deriving.ml[201,6350+6]..src/deriving.ml[201,6350+8])
                                                Texp_ident "Stdlib!.|>"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/deriving.ml[195,6073+6]..src/deriving.ml[200,6331+18])
                                                    Texp_apply
                                                    expression (src/deriving.ml[195,6073+6]..src/deriving.ml[195,6073+16])
                                                      Texp_ident "Ppxlib__!.Import.Option.map"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/deriving.ml[196,6090+8]..src/deriving.ml[196,6090+81])
                                                          Texp_apply
                                                          expression (src/deriving.ml[196,6090+9]..src/deriving.ml[196,6090+24])
                                                            Texp_ident "Ppxlib__!.Import.List.find_a_dup"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/deriving.ml[196,6090+25]..src/deriving.ml[196,6090+29])
                                                                Texp_ident "args/5571"
                                                            <arg>
                                                              Labelled "compare"
                                                              expression (src/deriving.ml[196,6090+39]..src/deriving.ml[196,6090+80])
                                                                Texp_function
                                                                Nolabel
                                                                [
                                                                  <case>
                                                                    pattern (src/deriving.ml[196,6090+44]..src/deriving.ml[196,6090+50])
                                                                      Tpat_tuple
                                                                      [
                                                                        pattern (src/deriving.ml[196,6090+45]..src/deriving.ml[196,6090+46])
                                                                          Tpat_var "a/5602"
                                                                        pattern (src/deriving.ml[196,6090+48]..src/deriving.ml[196,6090+49])
                                                                          Tpat_any
                                                                      ]
                                                                    expression (src/deriving.ml[196,6090+51]..src/deriving.ml[196,6090+79]) ghost
                                                                      Texp_function
                                                                      Nolabel
                                                                      [
                                                                        <case>
                                                                          pattern (src/deriving.ml[196,6090+51]..src/deriving.ml[196,6090+57])
                                                                            Tpat_tuple
                                                                            [
                                                                              pattern (src/deriving.ml[196,6090+52]..src/deriving.ml[196,6090+53])
                                                                                Tpat_var "b/5603"
                                                                              pattern (src/deriving.ml[196,6090+55]..src/deriving.ml[196,6090+56])
                                                                                Tpat_any
                                                                            ]
                                                                          expression (src/deriving.ml[196,6090+61]..src/deriving.ml[196,6090+79])
                                                                            Texp_apply
                                                                            expression (src/deriving.ml[196,6090+61]..src/deriving.ml[196,6090+75])
                                                                              Texp_ident "Ppxlib__!.Import.String.compare"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/deriving.ml[196,6090+76]..src/deriving.ml[196,6090+77])
                                                                                  Texp_ident "a/5602"
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/deriving.ml[196,6090+78]..src/deriving.ml[196,6090+79])
                                                                                  Texp_ident "b/5603"
                                                                            ]
                                                                      ]
                                                                ]
                                                          ]
                                                      <arg>
                                                        Labelled "f"
                                                        expression (src/deriving.ml[197,6172+11]..src/deriving.ml[200,6331+18])
                                                          Texp_function
                                                          Nolabel
                                                          [
                                                            <case>
                                                              pattern (src/deriving.ml[197,6172+16]..src/deriving.ml[197,6172+26])
                                                                Tpat_tuple
                                                                [
                                                                  pattern (src/deriving.ml[197,6172+17]..src/deriving.ml[197,6172+22])
                                                                    Tpat_var "label/5606"
                                                                  pattern (src/deriving.ml[197,6172+24]..src/deriving.ml[197,6172+25])
                                                                    Tpat_var "e/5607"
                                                                ]
                                                              expression (src/deriving.ml[198,6202+10]..src/deriving.ml[200,6331+17])
                                                                Texp_apply
                                                                expression (src/deriving.ml[198,6202+10]..src/deriving.ml[198,6202+35])
                                                                  Texp_ident "Ppxlib__!.Location.error_extensionf"
                                                                [
                                                                  <arg>
                                                                    Labelled "loc"
                                                                    expression (src/deriving.ml[198,6202+41]..src/deriving.ml[198,6202+51])
                                                                      Texp_field
                                                                      expression (src/deriving.ml[198,6202+41]..src/deriving.ml[198,6202+42])
                                                                        Texp_ident "e/5607"
                                                                      "pexp_loc"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/deriving.ml[199,6254+12]..src/deriving.ml[199,6254+76])
                                                                      Texp_construct "CamlinternalFormatBasics.Format"
                                                                      [
                                                                        expression (src/deriving.ml[199,6254+12]..src/deriving.ml[199,6254+76]) ghost
                                                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                          [
                                                                            expression (src/deriving.ml[199,6254+12]..src/deriving.ml[199,6254+76]) ghost
                                                                              Texp_constant Const_string("Ppxlib.Deriving: argument labelled '",(src/deriving.ml[199,6254+12]..src/deriving.ml[199,6254+76]) ghost,None)
                                                                            expression (src/deriving.ml[199,6254+12]..src/deriving.ml[199,6254+76]) ghost
                                                                              Texp_construct "CamlinternalFormatBasics.String"
                                                                              [
                                                                                expression (src/deriving.ml[199,6254+12]..src/deriving.ml[199,6254+76]) ghost
                                                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                  []
                                                                                expression (src/deriving.ml[199,6254+12]..src/deriving.ml[199,6254+76]) ghost
                                                                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                  [
                                                                                    expression (src/deriving.ml[199,6254+12]..src/deriving.ml[199,6254+76]) ghost
                                                                                      Texp_constant Const_string("' appears more than once",(src/deriving.ml[199,6254+12]..src/deriving.ml[199,6254+76]) ghost,None)
                                                                                    expression (src/deriving.ml[199,6254+12]..src/deriving.ml[199,6254+76]) ghost
                                                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                      []
                                                                                  ]
                                                                              ]
                                                                          ]
                                                                        expression (src/deriving.ml[199,6254+12]..src/deriving.ml[199,6254+76]) ghost
                                                                          Texp_constant Const_string("Ppxlib.Deriving: argument labelled '%s' appears more than once",(src/deriving.ml[199,6254+12]..src/deriving.ml[199,6254+76]) ghost,None)
                                                                      ]
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/deriving.ml[200,6331+12]..src/deriving.ml[200,6331+17])
                                                                      Texp_ident "label/5606"
                                                                ]
                                                          ]
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (src/deriving.ml[201,6350+9]..src/deriving.ml[201,6350+23])
                                                    Texp_ident "Ppxlib__!.Import.Option.to_list"
                                              ]
                                        ]
                                        expression (src/deriving.ml[203,6381+4]..src/deriving.ml[224,7152+58])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/deriving.ml[203,6381+8]..src/deriving.ml[203,6381+21])
                                                Tpat_var "accepted_args/5609"
                                              expression (src/deriving.ml[203,6381+24]..src/deriving.ml[203,6381+54])
                                                Texp_apply
                                                expression (src/deriving.ml[203,6381+24]..src/deriving.ml[203,6381+43])
                                                  Texp_ident "merge_accepted_args/5557"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[203,6381+44]..src/deriving.ml[203,6381+54])
                                                      Texp_ident "generators/5570"
                                                ]
                                          ]
                                          expression (src/deriving.ml[204,6439+4]..src/deriving.ml[224,7152+58])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/deriving.ml[204,6439+8]..src/deriving.ml[204,6439+27])
                                                  Tpat_var "unaccepted_argument/5610"
                                                expression (src/deriving.ml[205,6469+6]..src/deriving.ml[219,7027+20])
                                                  Texp_apply
                                                  expression (src/deriving.ml[205,6469+6]..src/deriving.ml[205,6469+21])
                                                    Texp_ident "Ppxlib__!.Import.List.filter_map"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/deriving.ml[205,6469+22]..src/deriving.ml[205,6469+26])
                                                        Texp_ident "args/5571"
                                                    <arg>
                                                      Labelled "f"
                                                      expression (src/deriving.ml[205,6469+30]..src/deriving.ml[219,7027+20])
                                                        Texp_function
                                                        Nolabel
                                                        [
                                                          <case>
                                                            pattern (src/deriving.ml[205,6469+35]..src/deriving.ml[205,6469+45])
                                                              Tpat_tuple
                                                              [
                                                                pattern (src/deriving.ml[205,6469+36]..src/deriving.ml[205,6469+41])
                                                                  Tpat_var "label/5611"
                                                                pattern (src/deriving.ml[205,6469+43]..src/deriving.ml[205,6469+44])
                                                                  Tpat_var "e/5612"
                                                              ]
                                                            expression (src/deriving.ml[206,6518+10]..src/deriving.ml[219,7027+19])
                                                              Texp_ifthenelse
                                                              expression (src/deriving.ml[206,6518+13]..src/deriving.ml[206,6518+53])
                                                                Texp_apply
                                                                expression (src/deriving.ml[206,6518+13]..src/deriving.ml[206,6518+16])
                                                                  Texp_ident "Stdlib!.not"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/deriving.ml[206,6518+17]..src/deriving.ml[206,6518+53])
                                                                      Texp_apply
                                                                      expression (src/deriving.ml[206,6518+18]..src/deriving.ml[206,6518+32])
                                                                        Texp_ident "Ppxlib__!.Import.String.Set.mem"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/deriving.ml[206,6518+33]..src/deriving.ml[206,6518+38])
                                                                            Texp_ident "label/5611"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/deriving.ml[206,6518+39]..src/deriving.ml[206,6518+52])
                                                                            Texp_ident "accepted_args/5609"
                                                                      ]
                                                                ]
                                                              expression (src/deriving.ml[207,6577+12]..src/deriving.ml[218,6983+43])
                                                                Texp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (src/deriving.ml[207,6577+16]..src/deriving.ml[207,6577+30])
                                                                      Tpat_var "spellcheck_msg/5613"
                                                                    expression (src/deriving.ml[208,6610+14]..src/deriving.ml[212,6756+35])
                                                                      Texp_match
                                                                      expression (src/deriving.ml[209,6630+16]..src/deriving.ml[209,6630+79])
                                                                        Texp_apply
                                                                        expression (src/deriving.ml[209,6630+16]..src/deriving.ml[209,6630+37])
                                                                          Texp_ident "Ppxlib__!.Spellcheck.spellcheck"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/deriving.ml[209,6630+38]..src/deriving.ml[209,6630+73])
                                                                              Texp_apply
                                                                              expression (src/deriving.ml[209,6630+39]..src/deriving.ml[209,6630+58])
                                                                                Texp_ident "Ppxlib__!.Import.String.Set.elements"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/deriving.ml[209,6630+59]..src/deriving.ml[209,6630+72])
                                                                                    Texp_ident "accepted_args/5609"
                                                                              ]
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/deriving.ml[209,6630+74]..src/deriving.ml[209,6630+79])
                                                                              Texp_ident "label/5611"
                                                                        ]
                                                                      [
                                                                        <case>
                                                                          pattern (src/deriving.ml[211,6729+16]..src/deriving.ml[211,6729+20])
                                                                            Tpat_value
                                                                            pattern (src/deriving.ml[211,6729+16]..src/deriving.ml[211,6729+20])
                                                                              Tpat_construct "None"
                                                                              []
                                                                          expression (src/deriving.ml[211,6729+24]..src/deriving.ml[211,6729+26])
                                                                            Texp_constant Const_string("",(src/deriving.ml[211,6729+25]..src/deriving.ml[211,6729+25]),None)
                                                                        <case>
                                                                          pattern (src/deriving.ml[212,6756+16]..src/deriving.ml[212,6756+22])
                                                                            Tpat_value
                                                                            pattern (src/deriving.ml[212,6756+16]..src/deriving.ml[212,6756+22])
                                                                              Tpat_construct "Some"
                                                                              [
                                                                                pattern (src/deriving.ml[212,6756+21]..src/deriving.ml[212,6756+22])
                                                                                  Tpat_var "s/5618"
                                                                              ]
                                                                          expression (src/deriving.ml[212,6756+26]..src/deriving.ml[212,6756+35])
                                                                            Texp_apply
                                                                            expression (src/deriving.ml[212,6756+32]..src/deriving.ml[212,6756+33])
                                                                              Texp_ident "Stdlib!.^"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/deriving.ml[212,6756+26]..src/deriving.ml[212,6756+31])
                                                                                  Texp_constant Const_string(".\n",(src/deriving.ml[212,6756+27]..src/deriving.ml[212,6756+30]),None)
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/deriving.ml[212,6756+34]..src/deriving.ml[212,6756+35])
                                                                                  Texp_ident "s/5618"
                                                                            ]
                                                                      ]
                                                                      []
                                                                ]
                                                                expression (src/deriving.ml[214,6807+12]..src/deriving.ml[218,6983+43])
                                                                  Texp_construct "Some"
                                                                  [
                                                                    expression (src/deriving.ml[215,6824+14]..src/deriving.ml[218,6983+43])
                                                                      Texp_apply
                                                                      expression (src/deriving.ml[215,6824+15]..src/deriving.ml[215,6824+40])
                                                                        Texp_ident "Ppxlib__!.Location.error_extensionf"
                                                                      [
                                                                        <arg>
                                                                          Labelled "loc"
                                                                          expression (src/deriving.ml[215,6824+46]..src/deriving.ml[215,6824+56])
                                                                            Texp_field
                                                                            expression (src/deriving.ml[215,6824+46]..src/deriving.ml[215,6824+47])
                                                                              Texp_ident "e/5612"
                                                                            "pexp_loc"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/deriving.ml[216,6881+17]..src/deriving.ml[217,6957+25])
                                                                            Texp_construct "CamlinternalFormatBasics.Format"
                                                                            [
                                                                              expression (src/deriving.ml[216,6881+17]..src/deriving.ml[217,6957+25]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                [
                                                                                  expression (src/deriving.ml[216,6881+17]..src/deriving.ml[217,6957+25]) ghost
                                                                                    Texp_constant Const_string("Ppxlib.Deriving: generator '",(src/deriving.ml[216,6881+17]..src/deriving.ml[217,6957+25]) ghost,None)
                                                                                  expression (src/deriving.ml[216,6881+17]..src/deriving.ml[217,6957+25]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.String"
                                                                                    [
                                                                                      expression (src/deriving.ml[216,6881+17]..src/deriving.ml[217,6957+25]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                        []
                                                                                      expression (src/deriving.ml[216,6881+17]..src/deriving.ml[217,6957+25]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                        [
                                                                                          expression (src/deriving.ml[216,6881+17]..src/deriving.ml[217,6957+25]) ghost
                                                                                            Texp_constant Const_string("' doesn't accept argument '",(src/deriving.ml[216,6881+17]..src/deriving.ml[217,6957+25]) ghost,None)
                                                                                          expression (src/deriving.ml[216,6881+17]..src/deriving.ml[217,6957+25]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.String"
                                                                                            [
                                                                                              expression (src/deriving.ml[216,6881+17]..src/deriving.ml[217,6957+25]) ghost
                                                                                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                []
                                                                                              expression (src/deriving.ml[216,6881+17]..src/deriving.ml[217,6957+25]) ghost
                                                                                                Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                                                [
                                                                                                  expression (src/deriving.ml[216,6881+17]..src/deriving.ml[217,6957+25]) ghost
                                                                                                    Texp_constant Const_char 27
                                                                                                  expression (src/deriving.ml[216,6881+17]..src/deriving.ml[217,6957+25]) ghost
                                                                                                    Texp_construct "CamlinternalFormatBasics.String"
                                                                                                    [
                                                                                                      expression (src/deriving.ml[216,6881+17]..src/deriving.ml[217,6957+25]) ghost
                                                                                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                        []
                                                                                                      expression (src/deriving.ml[216,6881+17]..src/deriving.ml[217,6957+25]) ghost
                                                                                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                        []
                                                                                                    ]
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                ]
                                                                              expression (src/deriving.ml[216,6881+17]..src/deriving.ml[217,6957+25]) ghost
                                                                                Texp_constant Const_string("Ppxlib.Deriving: generator '%s' doesn't accept argument '%s'%s",(src/deriving.ml[216,6881+17]..src/deriving.ml[217,6957+25]) ghost,None)
                                                                            ]
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/deriving.ml[218,6983+17]..src/deriving.ml[218,6983+21])
                                                                            Texp_ident "name/5569"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/deriving.ml[218,6983+22]..src/deriving.ml[218,6983+27])
                                                                            Texp_ident "label/5611"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/deriving.ml[218,6983+28]..src/deriving.ml[218,6983+42])
                                                                            Texp_ident "spellcheck_msg/5613"
                                                                      ]
                                                                  ]
                                                              Some
                                                                expression (src/deriving.ml[219,7027+15]..src/deriving.ml[219,7027+19])
                                                                  Texp_construct "None"
                                                                  []
                                                        ]
                                                  ]
                                            ]
                                            expression (src/deriving.ml[221,7055+4]..src/deriving.ml[224,7152+58])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/deriving.ml[221,7055+8]..src/deriving.ml[221,7055+14])
                                                    Tpat_var "errors/5620"
                                                  expression (src/deriving.ml[222,7072+6]..src/deriving.ml[222,7072+72])
                                                    Texp_apply
                                                    expression (src/deriving.ml[222,7072+24]..src/deriving.ml[222,7072+25])
                                                      Texp_ident "Ppxlib__!.Import.@"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/deriving.ml[222,7072+6]..src/deriving.ml[222,7072+23])
                                                          Texp_ident "empty_label_error/5572"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/deriving.ml[222,7072+26]..src/deriving.ml[222,7072+72])
                                                          Texp_apply
                                                          expression (src/deriving.ml[222,7072+51]..src/deriving.ml[222,7072+52])
                                                            Texp_ident "Ppxlib__!.Import.@"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/deriving.ml[222,7072+26]..src/deriving.ml[222,7072+50])
                                                                Texp_ident "duplicate_argument_error/5596"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/deriving.ml[222,7072+53]..src/deriving.ml[222,7072+72])
                                                                Texp_ident "unaccepted_argument/5610"
                                                          ]
                                                    ]
                                              ]
                                              expression (src/deriving.ml[224,7152+4]..src/deriving.ml[224,7152+58])
                                                Texp_ifthenelse
                                                expression (src/deriving.ml[224,7152+7]..src/deriving.ml[224,7152+29])
                                                  Texp_apply
                                                  expression (src/deriving.ml[224,7152+26]..src/deriving.ml[224,7152+27])
                                                    Texp_ident "Ppxlib__!.Import.="
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/deriving.ml[224,7152+7]..src/deriving.ml[224,7152+25])
                                                        Texp_apply
                                                        expression (src/deriving.ml[224,7152+7]..src/deriving.ml[224,7152+18])
                                                          Texp_ident "Ppxlib__!.Import.List.length"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/deriving.ml[224,7152+19]..src/deriving.ml[224,7152+25])
                                                              Texp_ident "errors/5620"
                                                        ]
                                                    <arg>
                                                      Nolabel
                                                      expression (src/deriving.ml[224,7152+28]..src/deriving.ml[224,7152+29])
                                                        Texp_constant Const_int 0
                                                  ]
                                                expression (src/deriving.ml[224,7152+35]..src/deriving.ml[224,7152+40])
                                                  Texp_construct "Ok"
                                                  [
                                                    expression (src/deriving.ml[224,7152+38]..src/deriving.ml[224,7152+40])
                                                      Texp_construct "()"
                                                      []
                                                  ]
                                                Some
                                                  expression (src/deriving.ml[224,7152+46]..src/deriving.ml[224,7152+58])
                                                    Texp_construct "Error"
                                                    [
                                                      expression (src/deriving.ml[224,7152+52]..src/deriving.ml[224,7152+58])
                                                        Texp_ident "errors/5620"
                                                    ]
                                ]
                          ]
                    ]
              ]
            structure_item (src/deriving.ml[226,7212+2]..src/deriving.ml[226,7212+79])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/deriving.ml[226,7212+6]..src/deriving.ml[226,7212+11])
                    Tpat_var "apply/5621"
                  expression (src/deriving.ml[226,7212+12]..src/deriving.ml[226,7212+79]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/deriving.ml[226,7212+12]..src/deriving.ml[226,7212+17])
                          Tpat_construct "T"
                          [
                            pattern (src/deriving.ml[226,7212+15]..src/deriving.ml[226,7212+16])
                              Tpat_var "t/5624"
                          ]
                        expression (src/deriving.ml[226,7212+18]..src/deriving.ml[226,7212+79]) ghost
                          Texp_function
                          Labelled "name"
                          [
                            <case>
                              pattern (src/deriving.ml[226,7212+24]..src/deriving.ml[226,7212+25])
                                Tpat_any
                              expression (src/deriving.ml[226,7212+26]..src/deriving.ml[226,7212+79]) ghost
                                Texp_function
                                Labelled "ctxt"
                                [
                                  <case>
                                    pattern (src/deriving.ml[226,7212+27]..src/deriving.ml[226,7212+31])
                                      Tpat_var "ctxt/5625"
                                    expression (src/deriving.ml[226,7212+32]..src/deriving.ml[226,7212+79]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (src/deriving.ml[226,7212+32]..src/deriving.ml[226,7212+33])
                                            Tpat_var "x/5626"
                                          expression (src/deriving.ml[226,7212+34]..src/deriving.ml[226,7212+79]) ghost
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (src/deriving.ml[226,7212+34]..src/deriving.ml[226,7212+38])
                                                  Tpat_var "args/5627"
                                                expression (src/deriving.ml[226,7212+41]..src/deriving.ml[226,7212+79])
                                                  Texp_apply
                                                  expression (src/deriving.ml[226,7212+41]..src/deriving.ml[226,7212+51])
                                                    Texp_ident "Args/4923.apply"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/deriving.ml[226,7212+52]..src/deriving.ml[226,7212+58])
                                                        Texp_field
                                                        expression (src/deriving.ml[226,7212+52]..src/deriving.ml[226,7212+53])
                                                          Texp_ident "t/5624"
                                                        "spec"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/deriving.ml[226,7212+59]..src/deriving.ml[226,7212+63])
                                                        Texp_ident "args/5627"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/deriving.ml[226,7212+64]..src/deriving.ml[226,7212+79])
                                                        Texp_apply
                                                        expression (src/deriving.ml[226,7212+65]..src/deriving.ml[226,7212+70])
                                                          Texp_field
                                                          expression (src/deriving.ml[226,7212+65]..src/deriving.ml[226,7212+66])
                                                            Texp_ident "t/5624"
                                                          "gen"
                                                        [
                                                          <arg>
                                                            Labelled "ctxt"
                                                            expression (src/deriving.ml[226,7212+72]..src/deriving.ml[226,7212+76])
                                                              Texp_ident "ctxt/5625"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/deriving.ml[226,7212+77]..src/deriving.ml[226,7212+78])
                                                              Texp_ident "x/5626"
                                                        ]
                                                  ]
                                            ]
                                      ]
                                ]
                          ]
                    ]
              ]
            structure_item (src/deriving.ml[228,7293+2]..src/deriving.ml[235,7601+10])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/deriving.ml[228,7293+6]..src/deriving.ml[228,7293+15])
                    Tpat_var "apply_all/5631"
                  expression (src/deriving.ml[228,7293+16]..src/deriving.ml[235,7601+10]) ghost
                    Texp_function
                    Labelled "ctxt"
                    [
                      <case>
                        pattern (src/deriving.ml[228,7293+17]..src/deriving.ml[228,7293+21])
                          Tpat_var "ctxt/5633"
                        expression (src/deriving.ml[228,7293+22]..src/deriving.ml[235,7601+10]) ghost
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/deriving.ml[228,7293+22]..src/deriving.ml[228,7293+27])
                                Tpat_var "entry/5634"
                              expression (src/deriving.ml[228,7293+28]..src/deriving.ml[235,7601+10]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/deriving.ml[228,7293+28]..src/deriving.ml[228,7293+52])
                                      Tpat_tuple
                                      [
                                        pattern (src/deriving.ml[228,7293+29]..src/deriving.ml[228,7293+33])
                                          Tpat_var "name/5635"
                                        pattern (src/deriving.ml[228,7293+35]..src/deriving.ml[228,7293+45])
                                          Tpat_var "generators/5636"
                                        pattern (src/deriving.ml[228,7293+47]..src/deriving.ml[228,7293+51])
                                          Tpat_var "args/5637"
                                      ]
                                    expression (src/deriving.ml[229,7348+4]..src/deriving.ml[235,7601+10])
                                      Texp_open Fresh
                                      module_expr (src/deriving.ml[229,7348+13]..src/deriving.ml[229,7348+19])
                                        Tmod_ident "Ppxlib__!.Import.Result"
                                      expression (src/deriving.ml[230,7371+4]..src/deriving.ml[235,7601+10])
                                        Texp_apply
                                        expression (src/deriving.ml[230,7371+45]..src/deriving.ml[230,7371+48])
                                          Texp_ident "Ppxlib__!.Import.Result.>>|"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[230,7371+4]..src/deriving.ml[230,7371+44])
                                              Texp_apply
                                              expression (src/deriving.ml[230,7371+4]..src/deriving.ml[230,7371+19])
                                                Texp_ident "check_arguments/5567"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/deriving.ml[230,7371+20]..src/deriving.ml[230,7371+28])
                                                    Texp_field
                                                    expression (src/deriving.ml[230,7371+20]..src/deriving.ml[230,7371+24])
                                                      Texp_ident "name/5635"
                                                    "txt"
                                                <arg>
                                                  Nolabel
                                                  expression (src/deriving.ml[230,7371+29]..src/deriving.ml[230,7371+39])
                                                    Texp_ident "generators/5636"
                                                <arg>
                                                  Nolabel
                                                  expression (src/deriving.ml[230,7371+40]..src/deriving.ml[230,7371+44])
                                                    Texp_ident "args/5637"
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[230,7371+49]..src/deriving.ml[235,7601+10])
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/deriving.ml[230,7371+53]..src/deriving.ml[230,7371+55])
                                                    Tpat_construct "()"
                                                    []
                                                  expression (src/deriving.ml[231,7430+4]..src/deriving.ml[235,7601+10])
                                                    Texp_apply
                                                    expression (src/deriving.ml[231,7430+4]..src/deriving.ml[231,7430+12])
                                                      Texp_ident "Ppxlib__!.Import.List.map"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/deriving.ml[231,7430+13]..src/deriving.ml[231,7430+23])
                                                          Texp_ident "generators/5636"
                                                      <arg>
                                                        Labelled "f"
                                                        expression (src/deriving.ml[231,7430+27]..src/deriving.ml[235,7601+10])
                                                          Texp_function
                                                          Nolabel
                                                          [
                                                            <case>
                                                              pattern (src/deriving.ml[231,7430+32]..src/deriving.ml[231,7430+37])
                                                                Tpat_construct "T"
                                                                [
                                                                  pattern (src/deriving.ml[231,7430+35]..src/deriving.ml[231,7430+36])
                                                                    Tpat_var "t/5645"
                                                                ]
                                                              expression (src/deriving.ml[232,7471+8]..src/deriving.ml[235,7601+9])
                                                                Texp_record
                                                                  fields =
                                                                    [
                                                                      "items"
                                                                        expression (src/deriving.ml[233,7481+18]..src/deriving.ml[233,7481+61])
                                                                          Texp_apply
                                                                          expression (src/deriving.ml[233,7481+18]..src/deriving.ml[233,7481+23])
                                                                            Texp_ident "apply/5621"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/deriving.ml[233,7481+24]..src/deriving.ml[233,7481+29])
                                                                                Texp_construct "T"
                                                                                [
                                                                                  expression (src/deriving.ml[233,7481+27]..src/deriving.ml[233,7481+28])
                                                                                    Texp_ident "t/5645"
                                                                                ]
                                                                            <arg>
                                                                              Labelled "name"
                                                                              expression (src/deriving.ml[233,7481+36]..src/deriving.ml[233,7481+44])
                                                                                Texp_field
                                                                                expression (src/deriving.ml[233,7481+36]..src/deriving.ml[233,7481+40])
                                                                                  Texp_ident "name/5635"
                                                                                "txt"
                                                                            <arg>
                                                                              Labelled "ctxt"
                                                                              expression (src/deriving.ml[233,7481+46]..src/deriving.ml[233,7481+50])
                                                                                Texp_ident "ctxt/5633"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/deriving.ml[233,7481+51]..src/deriving.ml[233,7481+56])
                                                                                Texp_ident "entry/5634"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/deriving.ml[233,7481+57]..src/deriving.ml[233,7481+61])
                                                                                Texp_ident "args/5637"
                                                                          ]
                                                                      "unused_code_warnings"
                                                                        expression (src/deriving.ml[234,7544+33]..src/deriving.ml[234,7544+55])
                                                                          Texp_field
                                                                          expression (src/deriving.ml[234,7544+33]..src/deriving.ml[234,7544+34])
                                                                            Texp_ident "t/5645"
                                                                          "unused_code_warnings"
                                                                    ]
                                                                  representation =
                                                                    Record_regular
                                                                  extended_expression =
                                                                    None
                                                          ]
                                                    ]
                                              ]
                                        ]
                                ]
                          ]
                    ]
              ]
            structure_item (src/deriving.ml[237,7613+2]..src/deriving.ml[246,7945+71])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/deriving.ml[237,7613+6]..src/deriving.ml[237,7613+15])
                    Tpat_var "apply_all/5649"
                  expression (src/deriving.ml[237,7613+16]..src/deriving.ml[246,7945+71]) ghost
                    Texp_function
                    Labelled "ctxt"
                    [
                      <case>
                        pattern (src/deriving.ml[237,7613+17]..src/deriving.ml[237,7613+21])
                          Tpat_var "ctxt/5650"
                        expression (src/deriving.ml[237,7613+22]..src/deriving.ml[246,7945+71]) ghost
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/deriving.ml[237,7613+22]..src/deriving.ml[237,7613+27])
                                Tpat_var "entry/5651"
                              expression (src/deriving.ml[237,7613+28]..src/deriving.ml[246,7945+71]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/deriving.ml[237,7613+28]..src/deriving.ml[237,7613+38])
                                      Tpat_var "generators/5652"
                                    expression (src/deriving.ml[237,7613+39]..src/deriving.ml[246,7945+71]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (src/deriving.ml[237,7613+39]..src/deriving.ml[237,7613+50])
                                            Tpat_var "ext_to_item/5653"
                                          expression (src/deriving.ml[238,7666+4]..src/deriving.ml[246,7945+71])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/deriving.ml[238,7666+8]..src/deriving.ml[238,7666+9])
                                                  Tpat_var "l/5654"
                                                expression (src/deriving.ml[238,7666+12]..src/deriving.ml[238,7666+58])
                                                  Texp_apply
                                                  expression (src/deriving.ml[238,7666+12]..src/deriving.ml[238,7666+20])
                                                    Texp_ident "Ppxlib__!.Import.List.map"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/deriving.ml[238,7666+21]..src/deriving.ml[238,7666+31])
                                                        Texp_ident "generators/5652"
                                                    <arg>
                                                      Labelled "f"
                                                      expression (src/deriving.ml[238,7666+35]..src/deriving.ml[238,7666+58])
                                                        Texp_apply
                                                        expression (src/deriving.ml[238,7666+36]..src/deriving.ml[238,7666+45])
                                                          Texp_ident "apply_all/5631"
                                                        [
                                                          <arg>
                                                            Labelled "ctxt"
                                                            expression (src/deriving.ml[238,7666+47]..src/deriving.ml[238,7666+51])
                                                              Texp_ident "ctxt/5650"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/deriving.ml[238,7666+52]..src/deriving.ml[238,7666+57])
                                                              Texp_ident "entry/5651"
                                                        ]
                                                  ]
                                            ]
                                            expression (src/deriving.ml[239,7728+4]..src/deriving.ml[246,7945+71])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/deriving.ml[239,7728+8]..src/deriving.ml[239,7728+16])
                                                    Tpat_tuple
                                                    [
                                                      pattern (src/deriving.ml[239,7728+8]..src/deriving.ml[239,7728+10])
                                                        Tpat_var "l1/5655"
                                                      pattern (src/deriving.ml[239,7728+12]..src/deriving.ml[239,7728+16])
                                                        Tpat_var "lerr/5656"
                                                    ]
                                                  expression (src/deriving.ml[240,7747+6]..src/deriving.ml[240,7747+73])
                                                    Texp_apply
                                                    expression (src/deriving.ml[240,7747+6]..src/deriving.ml[240,7747+24])
                                                      Texp_ident "Ppxlib__!.Import.List.partition_map"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/deriving.ml[240,7747+25]..src/deriving.ml[240,7747+71])
                                                          Texp_function
                                                          Nolabel
                                                          [
                                                            <case>
                                                              pattern (src/deriving.ml[240,7747+35]..src/deriving.ml[240,7747+39])
                                                                Tpat_construct "Ok"
                                                                [
                                                                  pattern (src/deriving.ml[240,7747+38]..src/deriving.ml[240,7747+39])
                                                                    Tpat_var "e/5658"
                                                                ]
                                                              expression (src/deriving.ml[240,7747+43]..src/deriving.ml[240,7747+49])
                                                                Texp_construct "Left"
                                                                [
                                                                  expression (src/deriving.ml[240,7747+48]..src/deriving.ml[240,7747+49])
                                                                    Texp_ident "e/5658"
                                                                ]
                                                            <case>
                                                              pattern (src/deriving.ml[240,7747+52]..src/deriving.ml[240,7747+59])
                                                                Tpat_construct "Error"
                                                                [
                                                                  pattern (src/deriving.ml[240,7747+58]..src/deriving.ml[240,7747+59])
                                                                    Tpat_var "e/5659"
                                                                ]
                                                              expression (src/deriving.ml[240,7747+63]..src/deriving.ml[240,7747+70])
                                                                Texp_construct "Right"
                                                                [
                                                                  expression (src/deriving.ml[240,7747+69]..src/deriving.ml[240,7747+70])
                                                                    Texp_ident "e/5659"
                                                                ]
                                                          ]
                                                      <arg>
                                                        Nolabel
                                                        expression (src/deriving.ml[240,7747+72]..src/deriving.ml[240,7747+73])
                                                          Texp_ident "l/5654"
                                                    ]
                                              ]
                                              expression (src/deriving.ml[242,7828+4]..src/deriving.ml[246,7945+71])
                                                Texp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (src/deriving.ml[242,7828+8]..src/deriving.ml[242,7828+12])
                                                      Tpat_var "lerr/6274"
                                                    expression (src/deriving.ml[243,7843+6]..src/deriving.ml[244,7866+71])
                                                      Texp_apply
                                                      expression (src/deriving.ml[244,7866+6]..src/deriving.ml[244,7866+8])
                                                        Texp_ident "Stdlib!.|>"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[243,7843+6]..src/deriving.ml[243,7843+22])
                                                            Texp_apply
                                                            expression (src/deriving.ml[243,7843+6]..src/deriving.ml[243,7843+17])
                                                              Texp_ident "Ppxlib__!.Import.List.concat"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/deriving.ml[243,7843+18]..src/deriving.ml[243,7843+22])
                                                                  Texp_ident "lerr/5656"
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[244,7866+9]..src/deriving.ml[244,7866+71])
                                                            Texp_apply
                                                            expression (src/deriving.ml[244,7866+9]..src/deriving.ml[244,7866+17])
                                                              Texp_ident "Ppxlib__!.Import.List.map"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                              <arg>
                                                                Labelled "f"
                                                                expression (src/deriving.ml[244,7866+21]..src/deriving.ml[244,7866+71])
                                                                  Texp_function
                                                                  Nolabel
                                                                  [
                                                                    <case>
                                                                      pattern (src/deriving.ml[244,7866+26]..src/deriving.ml[244,7866+29])
                                                                        Tpat_var "err/6275"
                                                                      expression (src/deriving.ml[244,7866+33]..src/deriving.ml[244,7866+70])
                                                                        Texp_apply
                                                                        expression (src/deriving.ml[244,7866+33]..src/deriving.ml[244,7866+44])
                                                                          Texp_ident "ext_to_item/5653"
                                                                        [
                                                                          <arg>
                                                                            Labelled "loc"
                                                                            expression (src/deriving.ml[244,7866+50]..src/deriving.ml[244,7866+63])
                                                                              Texp_ident "Ppxlib__!.Location.none"
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/deriving.ml[244,7866+64]..src/deriving.ml[244,7866+67])
                                                                              Texp_ident "err/6275"
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/deriving.ml[244,7866+68]..src/deriving.ml[244,7866+70])
                                                                              Texp_construct "[]"
                                                                              []
                                                                        ]
                                                                  ]
                                                            ]
                                                      ]
                                                ]
                                                expression (src/deriving.ml[246,7945+4]..src/deriving.ml[246,7945+71])
                                                  Texp_apply
                                                  expression (src/deriving.ml[246,7945+19]..src/deriving.ml[246,7945+20])
                                                    Texp_ident "Ppxlib__!.Import.@"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/deriving.ml[246,7945+4]..src/deriving.ml[246,7945+18])
                                                        Texp_apply
                                                        expression (src/deriving.ml[246,7945+4]..src/deriving.ml[246,7945+15])
                                                          Texp_ident "Ppxlib__!.Import.List.concat"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/deriving.ml[246,7945+16]..src/deriving.ml[246,7945+18])
                                                              Texp_ident "l1/5655"
                                                        ]
                                                    <arg>
                                                      Nolabel
                                                      expression (src/deriving.ml[246,7945+21]..src/deriving.ml[246,7945+71])
                                                        Texp_construct "::"
                                                        [
                                                          expression (src/deriving.ml[246,7945+23]..src/deriving.ml[246,7945+69])
                                                            Texp_record
                                                              fields =
                                                                [
                                                                  "items"
                                                                    expression (src/deriving.ml[246,7945+33]..src/deriving.ml[246,7945+37])
                                                                      Texp_ident "lerr/6274"
                                                                  "unused_code_warnings"
                                                                    expression (src/deriving.ml[246,7945+62]..src/deriving.ml[246,7945+67])
                                                                      Texp_construct "false"
                                                                      []
                                                                ]
                                                              representation =
                                                                Record_regular
                                                              extended_expression =
                                                                None
                                                          expression (src/deriving.ml[246,7945+70]..src/deriving.ml[246,7945+71]) ghost
                                                            Texp_construct "[]"
                                                            []
                                                        ]
                                                  ]
                                      ]
                                ]
                          ]
                    ]
              ]
          ]
  structure_item (src/deriving.ml[249,8022+0]..src/deriving.ml[524,17260+3])
    Tstr_module
    Deriver/6977
      module_expr (src/deriving.ml[249,8022+17]..src/deriving.ml[524,17260+3])
        Tmod_structure
        [
          structure_item (src/deriving.ml[250,8046+2]..src/deriving.ml[268,8872+5])
            Tstr_module
            Actual_deriver/6288
              module_expr (src/deriving.ml[250,8046+26]..src/deriving.ml[268,8872+5])
                Tmod_structure
                [
                  structure_item (src/deriving.ml[251,8079+4]..src/deriving.ml[267,8866+5])
                    Tstr_type Rec
                    [
                      type_declaration t/6277 (src/deriving.ml[251,8079+4]..src/deriving.ml[267,8866+5])
                        ptype_params =
                          []
                        ptype_cstrs =
                          []
                        ptype_kind =
                          Ttype_record
                            [
                              (src/deriving.ml[252,8094+6]..src/deriving.ml[252,8094+20])
                                Immutable
                                name/6278                                core_type (src/deriving.ml[252,8094+13]..src/deriving.ml[252,8094+19])
                                  Ttyp_poly
                                  core_type (src/deriving.ml[252,8094+13]..src/deriving.ml[252,8094+19])
                                    Ttyp_constr "string/17!"
                                    []
                              (src/deriving.ml[253,8115+6]..src/deriving.ml[254,8137+73])
                                Immutable
                                str_type_decl/6279                                core_type (src/deriving.ml[254,8137+8]..src/deriving.ml[254,8137+72])
                                  Ttyp_poly
                                  core_type (src/deriving.ml[254,8137+8]..src/deriving.ml[254,8137+72])
                                    Ttyp_constr "option/12!"
                                    [
                                      core_type (src/deriving.ml[254,8137+8]..src/deriving.ml[254,8137+65])
                                        Ttyp_constr "Generator/6276.t"
                                        [
                                          core_type (src/deriving.ml[254,8137+9]..src/deriving.ml[254,8137+18])
                                            Ttyp_constr "Ppxlib__!.Import.structure"
                                            []
                                          core_type (src/deriving.ml[254,8137+20]..src/deriving.ml[254,8137+52])
                                            Ttyp_tuple
                                            [
                                              core_type (src/deriving.ml[254,8137+20]..src/deriving.ml[254,8137+28])
                                                Ttyp_constr "Ppxlib__!.Import.rec_flag"
                                                []
                                              core_type (src/deriving.ml[254,8137+31]..src/deriving.ml[254,8137+52])
                                                Ttyp_constr "list/11!"
                                                [
                                                  core_type (src/deriving.ml[254,8137+31]..src/deriving.ml[254,8137+47])
                                                    Ttyp_constr "Ppxlib__!.Import.type_declaration"
                                                    []
                                                ]
                                            ]
                                        ]
                                    ]
                              (src/deriving.ml[255,8211+6]..src/deriving.ml[255,8211+68])
                                Immutable
                                str_type_ext/6280                                core_type (src/deriving.ml[255,8211+21]..src/deriving.ml[255,8211+67])
                                  Ttyp_poly
                                  core_type (src/deriving.ml[255,8211+21]..src/deriving.ml[255,8211+67])
                                    Ttyp_constr "option/12!"
                                    [
                                      core_type (src/deriving.ml[255,8211+21]..src/deriving.ml[255,8211+60])
                                        Ttyp_constr "Generator/6276.t"
                                        [
                                          core_type (src/deriving.ml[255,8211+22]..src/deriving.ml[255,8211+31])
                                            Ttyp_constr "Ppxlib__!.Import.structure"
                                            []
                                          core_type (src/deriving.ml[255,8211+33]..src/deriving.ml[255,8211+47])
                                            Ttyp_constr "Ppxlib__!.Import.type_extension"
                                            []
                                        ]
                                    ]
                              (src/deriving.ml[256,8280+6]..src/deriving.ml[256,8280+69])
                                Immutable
                                str_exception/6281                                core_type (src/deriving.ml[256,8280+22]..src/deriving.ml[256,8280+68])
                                  Ttyp_poly
                                  core_type (src/deriving.ml[256,8280+22]..src/deriving.ml[256,8280+68])
                                    Ttyp_constr "option/12!"
                                    [
                                      core_type (src/deriving.ml[256,8280+22]..src/deriving.ml[256,8280+61])
                                        Ttyp_constr "Generator/6276.t"
                                        [
                                          core_type (src/deriving.ml[256,8280+23]..src/deriving.ml[256,8280+32])
                                            Ttyp_constr "Ppxlib__!.Import.structure"
                                            []
                                          core_type (src/deriving.ml[256,8280+34]..src/deriving.ml[256,8280+48])
                                            Ttyp_constr "Ppxlib__!.Import.type_exception"
                                            []
                                        ]
                                    ]
                              (src/deriving.ml[257,8350+6]..src/deriving.ml[258,8379+64])
                                Immutable
                                str_module_type_decl/6282                                core_type (src/deriving.ml[258,8379+8]..src/deriving.ml[258,8379+63])
                                  Ttyp_poly
                                  core_type (src/deriving.ml[258,8379+8]..src/deriving.ml[258,8379+63])
                                    Ttyp_constr "option/12!"
                                    [
                                      core_type (src/deriving.ml[258,8379+8]..src/deriving.ml[258,8379+56])
                                        Ttyp_constr "Generator/6276.t"
                                        [
                                          core_type (src/deriving.ml[258,8379+9]..src/deriving.ml[258,8379+18])
                                            Ttyp_constr "Ppxlib__!.Import.structure"
                                            []
                                          core_type (src/deriving.ml[258,8379+20]..src/deriving.ml[258,8379+43])
                                            Ttyp_constr "Ppxlib__!.Import.module_type_declaration"
                                            []
                                        ]
                                    ]
                              (src/deriving.ml[259,8444+6]..src/deriving.ml[260,8466+73])
                                Immutable
                                sig_type_decl/6283                                core_type (src/deriving.ml[260,8466+8]..src/deriving.ml[260,8466+72])
                                  Ttyp_poly
                                  core_type (src/deriving.ml[260,8466+8]..src/deriving.ml[260,8466+72])
                                    Ttyp_constr "option/12!"
                                    [
                                      core_type (src/deriving.ml[260,8466+8]..src/deriving.ml[260,8466+65])
                                        Ttyp_constr "Generator/6276.t"
                                        [
                                          core_type (src/deriving.ml[260,8466+9]..src/deriving.ml[260,8466+18])
                                            Ttyp_constr "Ppxlib__!.Import.signature"
                                            []
                                          core_type (src/deriving.ml[260,8466+20]..src/deriving.ml[260,8466+52])
                                            Ttyp_tuple
                                            [
                                              core_type (src/deriving.ml[260,8466+20]..src/deriving.ml[260,8466+28])
                                                Ttyp_constr "Ppxlib__!.Import.rec_flag"
                                                []
                                              core_type (src/deriving.ml[260,8466+31]..src/deriving.ml[260,8466+52])
                                                Ttyp_constr "list/11!"
                                                [
                                                  core_type (src/deriving.ml[260,8466+31]..src/deriving.ml[260,8466+47])
                                                    Ttyp_constr "Ppxlib__!.Import.type_declaration"
                                                    []
                                                ]
                                            ]
                                        ]
                                    ]
                              (src/deriving.ml[261,8540+6]..src/deriving.ml[261,8540+68])
                                Immutable
                                sig_type_ext/6284                                core_type (src/deriving.ml[261,8540+21]..src/deriving.ml[261,8540+67])
                                  Ttyp_poly
                                  core_type (src/deriving.ml[261,8540+21]..src/deriving.ml[261,8540+67])
                                    Ttyp_constr "option/12!"
                                    [
                                      core_type (src/deriving.ml[261,8540+21]..src/deriving.ml[261,8540+60])
                                        Ttyp_constr "Generator/6276.t"
                                        [
                                          core_type (src/deriving.ml[261,8540+22]..src/deriving.ml[261,8540+31])
                                            Ttyp_constr "Ppxlib__!.Import.signature"
                                            []
                                          core_type (src/deriving.ml[261,8540+33]..src/deriving.ml[261,8540+47])
                                            Ttyp_constr "Ppxlib__!.Import.type_extension"
                                            []
                                        ]
                                    ]
                              (src/deriving.ml[262,8609+6]..src/deriving.ml[262,8609+69])
                                Immutable
                                sig_exception/6285                                core_type (src/deriving.ml[262,8609+22]..src/deriving.ml[262,8609+68])
                                  Ttyp_poly
                                  core_type (src/deriving.ml[262,8609+22]..src/deriving.ml[262,8609+68])
                                    Ttyp_constr "option/12!"
                                    [
                                      core_type (src/deriving.ml[262,8609+22]..src/deriving.ml[262,8609+61])
                                        Ttyp_constr "Generator/6276.t"
                                        [
                                          core_type (src/deriving.ml[262,8609+23]..src/deriving.ml[262,8609+32])
                                            Ttyp_constr "Ppxlib__!.Import.signature"
                                            []
                                          core_type (src/deriving.ml[262,8609+34]..src/deriving.ml[262,8609+48])
                                            Ttyp_constr "Ppxlib__!.Import.type_exception"
                                            []
                                        ]
                                    ]
                              (src/deriving.ml[263,8679+6]..src/deriving.ml[264,8708+64])
                                Immutable
                                sig_module_type_decl/6286                                core_type (src/deriving.ml[264,8708+8]..src/deriving.ml[264,8708+63])
                                  Ttyp_poly
                                  core_type (src/deriving.ml[264,8708+8]..src/deriving.ml[264,8708+63])
                                    Ttyp_constr "option/12!"
                                    [
                                      core_type (src/deriving.ml[264,8708+8]..src/deriving.ml[264,8708+56])
                                        Ttyp_constr "Generator/6276.t"
                                        [
                                          core_type (src/deriving.ml[264,8708+9]..src/deriving.ml[264,8708+18])
                                            Ttyp_constr "Ppxlib__!.Import.signature"
                                            []
                                          core_type (src/deriving.ml[264,8708+20]..src/deriving.ml[264,8708+43])
                                            Ttyp_constr "Ppxlib__!.Import.module_type_declaration"
                                            []
                                        ]
                                    ]
                              (src/deriving.ml[265,8773+6]..src/deriving.ml[266,8791+74])
                                Immutable
                                extension/6287                                core_type (src/deriving.ml[266,8791+8]..src/deriving.ml[266,8791+73])
                                  Ttyp_poly
                                  core_type (src/deriving.ml[266,8791+8]..src/deriving.ml[266,8791+73])
                                    Ttyp_constr "option/12!"
                                    [
                                      core_type (src/deriving.ml[266,8791+9]..src/deriving.ml[266,8791+65])
                                        Ttyp_arrow
                                        Labelled "loc"
                                        core_type (src/deriving.ml[266,8791+13]..src/deriving.ml[266,8791+23])
                                          Ttyp_constr "Ppxlib__!.Location.t"
                                          []
                                        core_type (src/deriving.ml[266,8791+27]..src/deriving.ml[266,8791+65])
                                          Ttyp_arrow
                                          Labelled "path"
                                          core_type (src/deriving.ml[266,8791+32]..src/deriving.ml[266,8791+38])
                                            Ttyp_constr "string/17!"
                                            []
                                          core_type (src/deriving.ml[266,8791+42]..src/deriving.ml[266,8791+65])
                                            Ttyp_arrow
                                            Nolabel
                                            core_type (src/deriving.ml[266,8791+42]..src/deriving.ml[266,8791+51])
                                              Ttyp_constr "Ppxlib__!.Import.core_type"
                                              []
                                            core_type (src/deriving.ml[266,8791+55]..src/deriving.ml[266,8791+65])
                                              Ttyp_constr "Ppxlib__!.Import.expression"
                                              []
                                    ]
                            ]
                        ptype_private = Public
                        ptype_manifest =
                          None
                    ]
                ]
          structure_item (src/deriving.ml[270,8879+2]..src/deriving.ml[281,9216+5])
            Tstr_module
            Alias/6298
              module_expr (src/deriving.ml[270,8879+17]..src/deriving.ml[281,9216+5])
                Tmod_structure
                [
                  structure_item (src/deriving.ml[271,8903+4]..src/deriving.ml[280,9210+5])
                    Tstr_type Rec
                    [
                      type_declaration t/6289 (src/deriving.ml[271,8903+4]..src/deriving.ml[280,9210+5])
                        ptype_params =
                          []
                        ptype_cstrs =
                          []
                        ptype_kind =
                          Ttype_record
                            [
                              (src/deriving.ml[272,8918+6]..src/deriving.ml[272,8918+34])
                                Immutable
                                str_type_decl/6290                                core_type (src/deriving.ml[272,8918+22]..src/deriving.ml[272,8918+33])
                                  Ttyp_poly
                                  core_type (src/deriving.ml[272,8918+22]..src/deriving.ml[272,8918+33])
                                    Ttyp_constr "list/11!"
                                    [
                                      core_type (src/deriving.ml[272,8918+22]..src/deriving.ml[272,8918+28])
                                        Ttyp_constr "string/17!"
                                        []
                                    ]
                              (src/deriving.ml[273,8953+6]..src/deriving.ml[273,8953+33])
                                Immutable
                                str_type_ext/6291                                core_type (src/deriving.ml[273,8953+21]..src/deriving.ml[273,8953+32])
                                  Ttyp_poly
                                  core_type (src/deriving.ml[273,8953+21]..src/deriving.ml[273,8953+32])
                                    Ttyp_constr "list/11!"
                                    [
                                      core_type (src/deriving.ml[273,8953+21]..src/deriving.ml[273,8953+27])
                                        Ttyp_constr "string/17!"
                                        []
                                    ]
                              (src/deriving.ml[274,8987+6]..src/deriving.ml[274,8987+34])
                                Immutable
                                str_exception/6292                                core_type (src/deriving.ml[274,8987+22]..src/deriving.ml[274,8987+33])
                                  Ttyp_poly
                                  core_type (src/deriving.ml[274,8987+22]..src/deriving.ml[274,8987+33])
                                    Ttyp_constr "list/11!"
                                    [
                                      core_type (src/deriving.ml[274,8987+22]..src/deriving.ml[274,8987+28])
                                        Ttyp_constr "string/17!"
                                        []
                                    ]
                              (src/deriving.ml[275,9022+6]..src/deriving.ml[275,9022+41])
                                Immutable
                                str_module_type_decl/6293                                core_type (src/deriving.ml[275,9022+29]..src/deriving.ml[275,9022+40])
                                  Ttyp_poly
                                  core_type (src/deriving.ml[275,9022+29]..src/deriving.ml[275,9022+40])
                                    Ttyp_constr "list/11!"
                                    [
                                      core_type (src/deriving.ml[275,9022+29]..src/deriving.ml[275,9022+35])
                                        Ttyp_constr "string/17!"
                                        []
                                    ]
                              (src/deriving.ml[276,9064+6]..src/deriving.ml[276,9064+34])
                                Immutable
                                sig_type_decl/6294                                core_type (src/deriving.ml[276,9064+22]..src/deriving.ml[276,9064+33])
                                  Ttyp_poly
                                  core_type (src/deriving.ml[276,9064+22]..src/deriving.ml[276,9064+33])
                                    Ttyp_constr "list/11!"
                                    [
                                      core_type (src/deriving.ml[276,9064+22]..src/deriving.ml[276,9064+28])
                                        Ttyp_constr "string/17!"
                                        []
                                    ]
                              (src/deriving.ml[277,9099+6]..src/deriving.ml[277,9099+33])
                                Immutable
                                sig_type_ext/6295                                core_type (src/deriving.ml[277,9099+21]..src/deriving.ml[277,9099+32])
                                  Ttyp_poly
                                  core_type (src/deriving.ml[277,9099+21]..src/deriving.ml[277,9099+32])
                                    Ttyp_constr "list/11!"
                                    [
                                      core_type (src/deriving.ml[277,9099+21]..src/deriving.ml[277,9099+27])
                                        Ttyp_constr "string/17!"
                                        []
                                    ]
                              (src/deriving.ml[278,9133+6]..src/deriving.ml[278,9133+34])
                                Immutable
                                sig_exception/6296                                core_type (src/deriving.ml[278,9133+22]..src/deriving.ml[278,9133+33])
                                  Ttyp_poly
                                  core_type (src/deriving.ml[278,9133+22]..src/deriving.ml[278,9133+33])
                                    Ttyp_constr "list/11!"
                                    [
                                      core_type (src/deriving.ml[278,9133+22]..src/deriving.ml[278,9133+28])
                                        Ttyp_constr "string/17!"
                                        []
                                    ]
                              (src/deriving.ml[279,9168+6]..src/deriving.ml[279,9168+41])
                                Immutable
                                sig_module_type_decl/6297                                core_type (src/deriving.ml[279,9168+29]..src/deriving.ml[279,9168+40])
                                  Ttyp_poly
                                  core_type (src/deriving.ml[279,9168+29]..src/deriving.ml[279,9168+40])
                                    Ttyp_constr "list/11!"
                                    [
                                      core_type (src/deriving.ml[279,9168+29]..src/deriving.ml[279,9168+35])
                                        Ttyp_constr "string/17!"
                                        []
                                    ]
                            ]
                        ptype_private = Public
                        ptype_manifest =
                          None
                    ]
                ]
          structure_item (src/deriving.ml[283,9223+2]..src/deriving.ml[356,10941+5])
            Tstr_module
            Field/6331
              module_expr (src/deriving.ml[283,9223+17]..src/deriving.ml[356,10941+5])
                Tmod_structure
                [
                  structure_item (src/deriving.ml[284,9247+4]..src/deriving.ml[284,9247+25])
                    Tstr_type Rec
                    [
                      type_declaration kind/6299 (src/deriving.ml[284,9247+4]..src/deriving.ml[284,9247+25])
                        ptype_params =
                          []
                        ptype_cstrs =
                          []
                        ptype_kind =
                          Ttype_variant
                            [
                              (src/deriving.ml[284,9247+16]..src/deriving.ml[284,9247+19])
                                Str/6300
                                []
                                None
                              (src/deriving.ml[284,9247+20]..src/deriving.ml[284,9247+25])
                                Sig/6301
                                []
                                None
                            ]
                        ptype_private = Public
                        ptype_manifest =
                          None
                    ]
                  structure_item (src/deriving.ml[286,9274+4]..src/deriving.ml[291,9439+5])
                    Tstr_type Rec
                    [
                      type_declaration t/6302 (src/deriving.ml[286,9274+4]..src/deriving.ml[291,9439+5])
                        ptype_params =
                          [
                            core_type (src/deriving.ml[286,9274+10]..src/deriving.ml[286,9274+12])
                              Ttyp_var a
                            core_type (src/deriving.ml[286,9274+14]..src/deriving.ml[286,9274+16])
                              Ttyp_var b
                          ]
                        ptype_cstrs =
                          []
                        ptype_kind =
                          Ttype_record
                            [
                              (src/deriving.ml[287,9298+6]..src/deriving.ml[287,9298+20])
                                Immutable
                                name/6303                                core_type (src/deriving.ml[287,9298+13]..src/deriving.ml[287,9298+19])
                                  Ttyp_poly
                                  core_type (src/deriving.ml[287,9298+13]..src/deriving.ml[287,9298+19])
                                    Ttyp_constr "string/17!"
                                    []
                              (src/deriving.ml[288,9319+6]..src/deriving.ml[288,9319+18])
                                Immutable
                                kind/6304                                core_type (src/deriving.ml[288,9319+13]..src/deriving.ml[288,9319+17])
                                  Ttyp_poly
                                  core_type (src/deriving.ml[288,9319+13]..src/deriving.ml[288,9319+17])
                                    Ttyp_constr "kind/6299"
                                    []
                              (src/deriving.ml[289,9338+6]..src/deriving.ml[289,9338+60])
                                Immutable
                                get/6305                                core_type (src/deriving.ml[289,9338+12]..src/deriving.ml[289,9338+59])
                                  Ttyp_poly
                                  core_type (src/deriving.ml[289,9338+12]..src/deriving.ml[289,9338+59])
                                    Ttyp_arrow
                                    Nolabel
                                    core_type (src/deriving.ml[289,9338+12]..src/deriving.ml[289,9338+28])
                                      Ttyp_constr "Actual_deriver/6288.t"
                                      []
                                    core_type (src/deriving.ml[289,9338+32]..src/deriving.ml[289,9338+59])
                                      Ttyp_constr "option/12!"
                                      [
                                        core_type (src/deriving.ml[289,9338+32]..src/deriving.ml[289,9338+52])
                                          Ttyp_constr "Generator/6276.t"
                                          [
                                            core_type (src/deriving.ml[289,9338+33]..src/deriving.ml[289,9338+35])
                                              Ttyp_var a
                                            core_type (src/deriving.ml[289,9338+37]..src/deriving.ml[289,9338+39])
                                              Ttyp_var b
                                          ]
                                      ]
                              (src/deriving.ml[290,9399+6]..src/deriving.ml[290,9399+39])
                                Immutable
                                get_set/6306                                core_type (src/deriving.ml[290,9399+16]..src/deriving.ml[290,9399+38])
                                  Ttyp_poly
                                  core_type (src/deriving.ml[290,9399+16]..src/deriving.ml[290,9399+38])
                                    Ttyp_arrow
                                    Nolabel
                                    core_type (src/deriving.ml[290,9399+16]..src/deriving.ml[290,9399+23])
                                      Ttyp_constr "Alias/6298.t"
                                      []
                                    core_type (src/deriving.ml[290,9399+27]..src/deriving.ml[290,9399+38])
                                      Ttyp_constr "list/11!"
                                      [
                                        core_type (src/deriving.ml[290,9399+27]..src/deriving.ml[290,9399+33])
                                          Ttyp_constr "string/17!"
                                          []
                                      ]
                            ]
                        ptype_private = Public
                        ptype_manifest =
                          None
                    ]
                  structure_item (src/deriving.ml[293,9446+4]..src/deriving.ml[299,9609+7])
                    Tstr_value Nonrec
                    [
                      <def>
                        pattern (src/deriving.ml[293,9446+8]..src/deriving.ml[293,9446+21])
                          Tpat_var "str_type_decl/6307"
                        expression (src/deriving.ml[294,9470+6]..src/deriving.ml[299,9609+7])
                          Texp_record
                            fields =
                              [
                                "name"
                                  expression (src/deriving.ml[296,9498+15]..src/deriving.ml[296,9498+21])
                                    Texp_constant Const_string("type",(src/deriving.ml[296,9498+16]..src/deriving.ml[296,9498+20]),None)
                                "kind"
                                  expression (src/deriving.ml[295,9478+15]..src/deriving.ml[295,9478+18])
                                    Texp_construct "Str"
                                    []
                                "get"
                                  expression (src/deriving.ml[297,9521+14]..src/deriving.ml[297,9521+40])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/deriving.ml[297,9521+19]..src/deriving.ml[297,9521+20])
                                          Tpat_var "t/6308"
                                        expression (src/deriving.ml[297,9521+24]..src/deriving.ml[297,9521+39])
                                          Texp_field
                                          expression (src/deriving.ml[297,9521+24]..src/deriving.ml[297,9521+25])
                                            Texp_ident "t/6308"
                                          "str_type_decl"
                                    ]
                                "get_set"
                                  expression (src/deriving.ml[298,9563+18]..src/deriving.ml[298,9563+44])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/deriving.ml[298,9563+23]..src/deriving.ml[298,9563+24])
                                          Tpat_var "t/6309"
                                        expression (src/deriving.ml[298,9563+28]..src/deriving.ml[298,9563+43])
                                          Texp_field
                                          expression (src/deriving.ml[298,9563+28]..src/deriving.ml[298,9563+29])
                                            Texp_ident "t/6309"
                                          "str_type_decl"
                                    ]
                              ]
                            representation =
                              Record_regular
                            extended_expression =
                              None
                    ]
                  structure_item (src/deriving.ml[301,9618+4]..src/deriving.ml[307,9788+7])
                    Tstr_value Nonrec
                    [
                      <def>
                        pattern (src/deriving.ml[301,9618+8]..src/deriving.ml[301,9618+20])
                          Tpat_var "str_type_ext/6310"
                        expression (src/deriving.ml[302,9641+6]..src/deriving.ml[307,9788+7])
                          Texp_record
                            fields =
                              [
                                "name"
                                  expression (src/deriving.ml[304,9669+15]..src/deriving.ml[304,9669+31])
                                    Texp_constant Const_string("type extension",(src/deriving.ml[304,9669+16]..src/deriving.ml[304,9669+30]),None)
                                "kind"
                                  expression (src/deriving.ml[303,9649+15]..src/deriving.ml[303,9649+18])
                                    Texp_construct "Str"
                                    []
                                "get"
                                  expression (src/deriving.ml[305,9702+14]..src/deriving.ml[305,9702+39])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/deriving.ml[305,9702+19]..src/deriving.ml[305,9702+20])
                                          Tpat_var "t/6311"
                                        expression (src/deriving.ml[305,9702+24]..src/deriving.ml[305,9702+38])
                                          Texp_field
                                          expression (src/deriving.ml[305,9702+24]..src/deriving.ml[305,9702+25])
                                            Texp_ident "t/6311"
                                          "str_type_ext"
                                    ]
                                "get_set"
                                  expression (src/deriving.ml[306,9743+18]..src/deriving.ml[306,9743+43])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/deriving.ml[306,9743+23]..src/deriving.ml[306,9743+24])
                                          Tpat_var "t/6312"
                                        expression (src/deriving.ml[306,9743+28]..src/deriving.ml[306,9743+42])
                                          Texp_field
                                          expression (src/deriving.ml[306,9743+28]..src/deriving.ml[306,9743+29])
                                            Texp_ident "t/6312"
                                          "str_type_ext"
                                    ]
                              ]
                            representation =
                              Record_regular
                            extended_expression =
                              None
                    ]
                  structure_item (src/deriving.ml[309,9797+4]..src/deriving.ml[315,9965+7])
                    Tstr_value Nonrec
                    [
                      <def>
                        pattern (src/deriving.ml[309,9797+8]..src/deriving.ml[309,9797+21])
                          Tpat_var "str_exception/6313"
                        expression (src/deriving.ml[310,9821+6]..src/deriving.ml[315,9965+7])
                          Texp_record
                            fields =
                              [
                                "name"
                                  expression (src/deriving.ml[312,9849+15]..src/deriving.ml[312,9849+26])
                                    Texp_constant Const_string("exception",(src/deriving.ml[312,9849+16]..src/deriving.ml[312,9849+25]),None)
                                "kind"
                                  expression (src/deriving.ml[311,9829+15]..src/deriving.ml[311,9829+18])
                                    Texp_construct "Str"
                                    []
                                "get"
                                  expression (src/deriving.ml[313,9877+14]..src/deriving.ml[313,9877+40])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/deriving.ml[313,9877+19]..src/deriving.ml[313,9877+20])
                                          Tpat_var "t/6314"
                                        expression (src/deriving.ml[313,9877+24]..src/deriving.ml[313,9877+39])
                                          Texp_field
                                          expression (src/deriving.ml[313,9877+24]..src/deriving.ml[313,9877+25])
                                            Texp_ident "t/6314"
                                          "str_exception"
                                    ]
                                "get_set"
                                  expression (src/deriving.ml[314,9919+18]..src/deriving.ml[314,9919+44])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/deriving.ml[314,9919+23]..src/deriving.ml[314,9919+24])
                                          Tpat_var "t/6315"
                                        expression (src/deriving.ml[314,9919+28]..src/deriving.ml[314,9919+43])
                                          Texp_field
                                          expression (src/deriving.ml[314,9919+28]..src/deriving.ml[314,9919+29])
                                            Texp_ident "t/6315"
                                          "str_exception"
                                    ]
                              ]
                            representation =
                              Record_regular
                            extended_expression =
                              None
                    ]
                  structure_item (src/deriving.ml[317,9974+4]..src/deriving.ml[323,10165+7])
                    Tstr_value Nonrec
                    [
                      <def>
                        pattern (src/deriving.ml[317,9974+8]..src/deriving.ml[317,9974+28])
                          Tpat_var "str_module_type_decl/6316"
                        expression (src/deriving.ml[318,10005+6]..src/deriving.ml[323,10165+7])
                          Texp_record
                            fields =
                              [
                                "name"
                                  expression (src/deriving.ml[320,10033+15]..src/deriving.ml[320,10033+28])
                                    Texp_constant Const_string("module type",(src/deriving.ml[320,10033+16]..src/deriving.ml[320,10033+27]),None)
                                "kind"
                                  expression (src/deriving.ml[319,10013+15]..src/deriving.ml[319,10013+18])
                                    Texp_construct "Str"
                                    []
                                "get"
                                  expression (src/deriving.ml[321,10063+14]..src/deriving.ml[321,10063+47])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/deriving.ml[321,10063+19]..src/deriving.ml[321,10063+20])
                                          Tpat_var "t/6317"
                                        expression (src/deriving.ml[321,10063+24]..src/deriving.ml[321,10063+46])
                                          Texp_field
                                          expression (src/deriving.ml[321,10063+24]..src/deriving.ml[321,10063+25])
                                            Texp_ident "t/6317"
                                          "str_module_type_decl"
                                    ]
                                "get_set"
                                  expression (src/deriving.ml[322,10112+18]..src/deriving.ml[322,10112+51])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/deriving.ml[322,10112+23]..src/deriving.ml[322,10112+24])
                                          Tpat_var "t/6318"
                                        expression (src/deriving.ml[322,10112+28]..src/deriving.ml[322,10112+50])
                                          Texp_field
                                          expression (src/deriving.ml[322,10112+28]..src/deriving.ml[322,10112+29])
                                            Texp_ident "t/6318"
                                          "str_module_type_decl"
                                    ]
                              ]
                            representation =
                              Record_regular
                            extended_expression =
                              None
                    ]
                  structure_item (src/deriving.ml[325,10174+4]..src/deriving.ml[331,10347+7])
                    Tstr_value Nonrec
                    [
                      <def>
                        pattern (src/deriving.ml[325,10174+8]..src/deriving.ml[325,10174+21])
                          Tpat_var "sig_type_decl/6319"
                        expression (src/deriving.ml[326,10198+6]..src/deriving.ml[331,10347+7])
                          Texp_record
                            fields =
                              [
                                "name"
                                  expression (src/deriving.ml[328,10226+15]..src/deriving.ml[328,10226+31])
                                    Texp_constant Const_string("signature type",(src/deriving.ml[328,10226+16]..src/deriving.ml[328,10226+30]),None)
                                "kind"
                                  expression (src/deriving.ml[327,10206+15]..src/deriving.ml[327,10206+18])
                                    Texp_construct "Sig"
                                    []
                                "get"
                                  expression (src/deriving.ml[329,10259+14]..src/deriving.ml[329,10259+40])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/deriving.ml[329,10259+19]..src/deriving.ml[329,10259+20])
                                          Tpat_var "t/6320"
                                        expression (src/deriving.ml[329,10259+24]..src/deriving.ml[329,10259+39])
                                          Texp_field
                                          expression (src/deriving.ml[329,10259+24]..src/deriving.ml[329,10259+25])
                                            Texp_ident "t/6320"
                                          "sig_type_decl"
                                    ]
                                "get_set"
                                  expression (src/deriving.ml[330,10301+18]..src/deriving.ml[330,10301+44])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/deriving.ml[330,10301+23]..src/deriving.ml[330,10301+24])
                                          Tpat_var "t/6321"
                                        expression (src/deriving.ml[330,10301+28]..src/deriving.ml[330,10301+43])
                                          Texp_field
                                          expression (src/deriving.ml[330,10301+28]..src/deriving.ml[330,10301+29])
                                            Texp_ident "t/6321"
                                          "sig_type_decl"
                                    ]
                              ]
                            representation =
                              Record_regular
                            extended_expression =
                              None
                    ]
                  structure_item (src/deriving.ml[333,10356+4]..src/deriving.ml[339,10536+7])
                    Tstr_value Nonrec
                    [
                      <def>
                        pattern (src/deriving.ml[333,10356+8]..src/deriving.ml[333,10356+20])
                          Tpat_var "sig_type_ext/6322"
                        expression (src/deriving.ml[334,10379+6]..src/deriving.ml[339,10536+7])
                          Texp_record
                            fields =
                              [
                                "name"
                                  expression (src/deriving.ml[336,10407+15]..src/deriving.ml[336,10407+41])
                                    Texp_constant Const_string("signature type extension",(src/deriving.ml[336,10407+16]..src/deriving.ml[336,10407+40]),None)
                                "kind"
                                  expression (src/deriving.ml[335,10387+15]..src/deriving.ml[335,10387+18])
                                    Texp_construct "Sig"
                                    []
                                "get"
                                  expression (src/deriving.ml[337,10450+14]..src/deriving.ml[337,10450+39])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/deriving.ml[337,10450+19]..src/deriving.ml[337,10450+20])
                                          Tpat_var "t/6323"
                                        expression (src/deriving.ml[337,10450+24]..src/deriving.ml[337,10450+38])
                                          Texp_field
                                          expression (src/deriving.ml[337,10450+24]..src/deriving.ml[337,10450+25])
                                            Texp_ident "t/6323"
                                          "sig_type_ext"
                                    ]
                                "get_set"
                                  expression (src/deriving.ml[338,10491+18]..src/deriving.ml[338,10491+43])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/deriving.ml[338,10491+23]..src/deriving.ml[338,10491+24])
                                          Tpat_var "t/6324"
                                        expression (src/deriving.ml[338,10491+28]..src/deriving.ml[338,10491+42])
                                          Texp_field
                                          expression (src/deriving.ml[338,10491+28]..src/deriving.ml[338,10491+29])
                                            Texp_ident "t/6324"
                                          "sig_type_ext"
                                    ]
                              ]
                            representation =
                              Record_regular
                            extended_expression =
                              None
                    ]
                  structure_item (src/deriving.ml[341,10545+4]..src/deriving.ml[347,10723+7])
                    Tstr_value Nonrec
                    [
                      <def>
                        pattern (src/deriving.ml[341,10545+8]..src/deriving.ml[341,10545+21])
                          Tpat_var "sig_exception/6325"
                        expression (src/deriving.ml[342,10569+6]..src/deriving.ml[347,10723+7])
                          Texp_record
                            fields =
                              [
                                "name"
                                  expression (src/deriving.ml[344,10597+15]..src/deriving.ml[344,10597+36])
                                    Texp_constant Const_string("signature exception",(src/deriving.ml[344,10597+16]..src/deriving.ml[344,10597+35]),None)
                                "kind"
                                  expression (src/deriving.ml[343,10577+15]..src/deriving.ml[343,10577+18])
                                    Texp_construct "Sig"
                                    []
                                "get"
                                  expression (src/deriving.ml[345,10635+14]..src/deriving.ml[345,10635+40])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/deriving.ml[345,10635+19]..src/deriving.ml[345,10635+20])
                                          Tpat_var "t/6326"
                                        expression (src/deriving.ml[345,10635+24]..src/deriving.ml[345,10635+39])
                                          Texp_field
                                          expression (src/deriving.ml[345,10635+24]..src/deriving.ml[345,10635+25])
                                            Texp_ident "t/6326"
                                          "sig_exception"
                                    ]
                                "get_set"
                                  expression (src/deriving.ml[346,10677+18]..src/deriving.ml[346,10677+44])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/deriving.ml[346,10677+23]..src/deriving.ml[346,10677+24])
                                          Tpat_var "t/6327"
                                        expression (src/deriving.ml[346,10677+28]..src/deriving.ml[346,10677+43])
                                          Texp_field
                                          expression (src/deriving.ml[346,10677+28]..src/deriving.ml[346,10677+29])
                                            Texp_ident "t/6327"
                                          "sig_exception"
                                    ]
                              ]
                            representation =
                              Record_regular
                            extended_expression =
                              None
                    ]
                  structure_item (src/deriving.ml[349,10732+4]..src/deriving.ml[355,10933+7])
                    Tstr_value Nonrec
                    [
                      <def>
                        pattern (src/deriving.ml[349,10732+8]..src/deriving.ml[349,10732+28])
                          Tpat_var "sig_module_type_decl/6328"
                        expression (src/deriving.ml[350,10763+6]..src/deriving.ml[355,10933+7])
                          Texp_record
                            fields =
                              [
                                "name"
                                  expression (src/deriving.ml[352,10791+15]..src/deriving.ml[352,10791+38])
                                    Texp_constant Const_string("signature module type",(src/deriving.ml[352,10791+16]..src/deriving.ml[352,10791+37]),None)
                                "kind"
                                  expression (src/deriving.ml[351,10771+15]..src/deriving.ml[351,10771+18])
                                    Texp_construct "Sig"
                                    []
                                "get"
                                  expression (src/deriving.ml[353,10831+14]..src/deriving.ml[353,10831+47])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/deriving.ml[353,10831+19]..src/deriving.ml[353,10831+20])
                                          Tpat_var "t/6329"
                                        expression (src/deriving.ml[353,10831+24]..src/deriving.ml[353,10831+46])
                                          Texp_field
                                          expression (src/deriving.ml[353,10831+24]..src/deriving.ml[353,10831+25])
                                            Texp_ident "t/6329"
                                          "sig_module_type_decl"
                                    ]
                                "get_set"
                                  expression (src/deriving.ml[354,10880+18]..src/deriving.ml[354,10880+51])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/deriving.ml[354,10880+23]..src/deriving.ml[354,10880+24])
                                          Tpat_var "t/6330"
                                        expression (src/deriving.ml[354,10880+28]..src/deriving.ml[354,10880+50])
                                          Texp_field
                                          expression (src/deriving.ml[354,10880+28]..src/deriving.ml[354,10880+29])
                                            Texp_ident "t/6330"
                                          "sig_module_type_decl"
                                    ]
                              ]
                            representation =
                              Record_regular
                            extended_expression =
                              None
                    ]
                ]
          structure_item (src/deriving.ml[358,10948+2]..src/deriving.ml[358,10948+64])
            Tstr_type Rec
            [
              type_declaration t/6332 (src/deriving.ml[358,10948+2]..src/deriving.ml[358,10948+64])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_variant
                    [
                      (src/deriving.ml[358,10948+11]..src/deriving.ml[358,10948+45])
                        Actual_deriver/6333
                        [
                          core_type (src/deriving.ml[358,10948+29]..src/deriving.ml[358,10948+45])
                            Ttyp_constr "Actual_deriver/6288.t"
                            []
                        ]
                        None
                      (src/deriving.ml[358,10948+46]..src/deriving.ml[358,10948+64])
                        Alias/6334
                        [
                          core_type (src/deriving.ml[358,10948+57]..src/deriving.ml[358,10948+64])
                            Ttyp_constr "Alias/6298.t"
                            []
                        ]
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (src/deriving.ml[359,11013+2]..src/deriving.ml[359,11013+37])
            Tstr_typext
            type_extension
              ptyext_path = "Ppx_derivers!.deriver"
              ptyext_params =
                []
              ptyext_constructors =
                [
                  extension_constructor (src/deriving.ml[359,11013+31]..src/deriving.ml[359,11013+37])
                    pext_name = "T/6336"
                    pext_kind =
                      Text_decl
                        [
                          core_type (src/deriving.ml[359,11013+36]..src/deriving.ml[359,11013+37])
                            Ttyp_constr "t/6332"
                            []
                        ]
                        None
                ]
              ptyext_private = Public
          structure_item (src/deriving.ml[361,11052+2]..src/deriving.ml[364,11168+18])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[361,11052+6]..src/deriving.ml[361,11052+14])
                  Tpat_var "derivers/6337"
                expression (src/deriving.ml[361,11052+15]..src/deriving.ml[364,11168+18]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/deriving.ml[361,11052+15]..src/deriving.ml[361,11052+17])
                        Tpat_construct "()"
                        []
                      expression (src/deriving.ml[362,11072+4]..src/deriving.ml[364,11168+18])
                        Texp_apply
                        expression (src/deriving.ml[362,11072+4]..src/deriving.ml[362,11072+19])
                          Texp_ident "Ppxlib__!.Import.List.filter_map"
                        [
                          <arg>
                            Nolabel
                            expression (src/deriving.ml[362,11072+20]..src/deriving.ml[362,11072+46])
                              Texp_apply
                              expression (src/deriving.ml[362,11072+21]..src/deriving.ml[362,11072+42])
                                Texp_ident "Ppx_derivers!.derivers"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/deriving.ml[362,11072+43]..src/deriving.ml[362,11072+45])
                                    Texp_construct "()"
                                    []
                              ]
                          <arg>
                            Labelled "f"
                            expression (src/deriving.ml[362,11072+50]..src/deriving.ml[364,11168+18])
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/deriving.ml[363,11132+8]..src/deriving.ml[363,11132+17])
                                    Tpat_tuple
                                    [
                                      pattern (src/deriving.ml[363,11132+8]..src/deriving.ml[363,11132+12])
                                        Tpat_var "name/6339"
                                      pattern (src/deriving.ml[363,11132+14]..src/deriving.ml[363,11132+17])
                                        Tpat_construct "T"
                                        [
                                          pattern (src/deriving.ml[363,11132+16]..src/deriving.ml[363,11132+17])
                                            Tpat_var "t/6340"
                                        ]
                                    ]
                                  expression (src/deriving.ml[363,11132+21]..src/deriving.ml[363,11132+35])
                                    Texp_construct "Some"
                                    [
                                      expression (src/deriving.ml[363,11132+26]..src/deriving.ml[363,11132+35])
                                        Texp_tuple
                                        [
                                          expression (src/deriving.ml[363,11132+27]..src/deriving.ml[363,11132+31])
                                            Texp_ident "name/6339"
                                          expression (src/deriving.ml[363,11132+33]..src/deriving.ml[363,11132+34])
                                            Texp_ident "t/6340"
                                        ]
                                    ]
                                <case>
                                  pattern (src/deriving.ml[364,11168+8]..src/deriving.ml[364,11168+9])
                                    Tpat_any
                                  expression (src/deriving.ml[364,11168+13]..src/deriving.ml[364,11168+17])
                                    Texp_construct "None"
                                    []
                              ]
                        ]
                  ]
            ]
          structure_item (src/deriving.ml[366,11188+2]..src/deriving.ml[366,11188+35])
            Tstr_exception
            type_exception
              ptyext_constructor =
                extension_constructor (src/deriving.ml[366,11188+2]..src/deriving.ml[366,11188+35])
                  pext_name = "Not_supported/6343"
                  pext_kind =
                    Text_decl
                      [
                        core_type (src/deriving.ml[366,11188+29]..src/deriving.ml[366,11188+35])
                          Ttyp_constr "string/17!"
                          []
                      ]
                      None
          structure_item (src/deriving.ml[368,11225+2]..src/deriving.ml[382,11754+27])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[368,11225+6]..src/deriving.ml[368,11225+29])
                  Tpat_var "resolve_actual_derivers/6344"
                expression (src/deriving.ml[368,11225+30]..src/deriving.ml[382,11754+27]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/deriving.ml[368,11225+31]..src/deriving.ml[368,11225+36])
                        Tpat_extra_constraint
                        core_type (src/deriving.ml[368,11225+39]..src/deriving.ml[368,11225+53])
                          Ttyp_constr "Field/6331.t"
                          [
                            core_type (src/deriving.ml[368,11225+40]..src/deriving.ml[368,11225+41])
                              Ttyp_any
                            core_type (src/deriving.ml[368,11225+43]..src/deriving.ml[368,11225+44])
                              Ttyp_any
                          ]
                        pattern (src/deriving.ml[368,11225+31]..src/deriving.ml[368,11225+36])
                          Tpat_alias "field/6346"
                          pattern (src/deriving.ml[368,11225+31]..src/deriving.ml[368,11225+36])
                            Tpat_any
                      expression (src/deriving.ml[368,11225+55]..src/deriving.ml[382,11754+27]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/deriving.ml[368,11225+55]..src/deriving.ml[368,11225+59])
                              Tpat_var "name/6347"
                            expression (src/deriving.ml[369,11287+4]..src/deriving.ml[382,11754+27])
                              Texp_let Rec
                              [
                                <def>
                                  pattern (src/deriving.ml[369,11287+12]..src/deriving.ml[369,11287+16])
                                    Tpat_var "loop/6348"
                                  expression (src/deriving.ml[369,11287+17]..src/deriving.ml[380,11705+41]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/deriving.ml[369,11287+17]..src/deriving.ml[369,11287+21])
                                          Tpat_var "name/6349"
                                        expression (src/deriving.ml[369,11287+22]..src/deriving.ml[380,11705+41]) ghost
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/deriving.ml[369,11287+22]..src/deriving.ml[369,11287+31])
                                                Tpat_var "collected/6350"
                                              expression (src/deriving.ml[370,11321+6]..src/deriving.ml[380,11705+41])
                                                Texp_ifthenelse
                                                expression (src/deriving.ml[371,11330+8]..src/deriving.ml[372,11394+37])
                                                  Texp_apply
                                                  expression (src/deriving.ml[371,11330+8]..src/deriving.ml[371,11330+19])
                                                    Texp_ident "Ppxlib__!.Import.List.exists"
                                                  [
                                                    <arg>
                                                      Labelled "f"
                                                      expression (src/deriving.ml[371,11330+33]..src/deriving.ml[372,11394+37])
                                                        Texp_function
                                                        Nolabel
                                                        [
                                                          <case>
                                                            pattern (src/deriving.ml[371,11330+39]..src/deriving.ml[371,11330+40])
                                                              Tpat_extra_constraint
                                                              core_type (src/deriving.ml[371,11330+43]..src/deriving.ml[371,11330+59])
                                                                Ttyp_constr "Actual_deriver/6288.t"
                                                                []
                                                              pattern (src/deriving.ml[371,11330+39]..src/deriving.ml[371,11330+40])
                                                                Tpat_alias "d/6351"
                                                                pattern (src/deriving.ml[371,11330+39]..src/deriving.ml[371,11330+40])
                                                                  Tpat_any
                                                            expression (src/deriving.ml[372,11394+12]..src/deriving.ml[372,11394+36])
                                                              Texp_apply
                                                              expression (src/deriving.ml[372,11394+12]..src/deriving.ml[372,11394+24])
                                                                Texp_ident "Ppxlib__!.Import.String.equal"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/deriving.ml[372,11394+25]..src/deriving.ml[372,11394+31])
                                                                    Texp_field
                                                                    expression (src/deriving.ml[372,11394+25]..src/deriving.ml[372,11394+26])
                                                                      Texp_ident "d/6351"
                                                                    "name"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/deriving.ml[372,11394+32]..src/deriving.ml[372,11394+36])
                                                                    Texp_ident "name/6349"
                                                              ]
                                                        ]
                                                    <arg>
                                                      Nolabel
                                                      expression (src/deriving.ml[371,11330+20]..src/deriving.ml[371,11330+29])
                                                        Texp_ident "collected/6350"
                                                  ]
                                                expression (src/deriving.ml[373,11432+11]..src/deriving.ml[373,11432+20])
                                                  Texp_ident "collected/6350"
                                                Some
                                                  expression (src/deriving.ml[375,11464+8]..src/deriving.ml[380,11705+41])
                                                    Texp_match
                                                    expression (src/deriving.ml[375,11464+14]..src/deriving.ml[375,11464+38])
                                                      Texp_apply
                                                      expression (src/deriving.ml[375,11464+14]..src/deriving.ml[375,11464+33])
                                                        Texp_ident "Ppx_derivers!.lookup"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[375,11464+34]..src/deriving.ml[375,11464+38])
                                                            Texp_ident "name/6349"
                                                      ]
                                                    [
                                                      <case>
                                                        pattern (src/deriving.ml[376,11508+10]..src/deriving.ml[376,11508+39])
                                                          Tpat_value
                                                          pattern (src/deriving.ml[376,11508+10]..src/deriving.ml[376,11508+39])
                                                            Tpat_construct "Some"
                                                            [
                                                              pattern (src/deriving.ml[376,11508+15]..src/deriving.ml[376,11508+39])
                                                                Tpat_construct "T"
                                                                [
                                                                  pattern (src/deriving.ml[376,11508+18]..src/deriving.ml[376,11508+38])
                                                                    Tpat_construct "Actual_deriver"
                                                                    [
                                                                      pattern (src/deriving.ml[376,11508+34]..src/deriving.ml[376,11508+37])
                                                                        Tpat_var "drv/6352"
                                                                    ]
                                                                ]
                                                            ]
                                                        expression (src/deriving.ml[376,11508+43]..src/deriving.ml[376,11508+59])
                                                          Texp_construct "::"
                                                          [
                                                            expression (src/deriving.ml[376,11508+43]..src/deriving.ml[376,11508+46])
                                                              Texp_ident "drv/6352"
                                                            expression (src/deriving.ml[376,11508+50]..src/deriving.ml[376,11508+59])
                                                              Texp_ident "collected/6350"
                                                          ]
                                                      <case>
                                                        pattern (src/deriving.ml[377,11568+10]..src/deriving.ml[377,11568+32])
                                                          Tpat_value
                                                          pattern (src/deriving.ml[377,11568+10]..src/deriving.ml[377,11568+32])
                                                            Tpat_construct "Some"
                                                            [
                                                              pattern (src/deriving.ml[377,11568+15]..src/deriving.ml[377,11568+32])
                                                                Tpat_construct "T"
                                                                [
                                                                  pattern (src/deriving.ml[377,11568+18]..src/deriving.ml[377,11568+31])
                                                                    Tpat_construct "Alias"
                                                                    [
                                                                      pattern (src/deriving.ml[377,11568+25]..src/deriving.ml[377,11568+30])
                                                                        Tpat_var "alias/6353"
                                                                    ]
                                                                ]
                                                            ]
                                                        expression (src/deriving.ml[378,11604+12]..src/deriving.ml[379,11649+55])
                                                          Texp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (src/deriving.ml[378,11604+16]..src/deriving.ml[378,11604+19])
                                                                Tpat_var "set/6354"
                                                              expression (src/deriving.ml[378,11604+22]..src/deriving.ml[378,11604+41])
                                                                Texp_apply
                                                                expression (src/deriving.ml[378,11604+22]..src/deriving.ml[378,11604+35])
                                                                  Texp_field
                                                                  expression (src/deriving.ml[378,11604+22]..src/deriving.ml[378,11604+27])
                                                                    Texp_ident "field/6346"
                                                                  "get_set"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/deriving.ml[378,11604+36]..src/deriving.ml[378,11604+41])
                                                                      Texp_ident "alias/6353"
                                                                ]
                                                          ]
                                                          expression (src/deriving.ml[379,11649+12]..src/deriving.ml[379,11649+55])
                                                            Texp_apply
                                                            expression (src/deriving.ml[379,11649+12]..src/deriving.ml[379,11649+27])
                                                              Texp_ident "Ppxlib__!.Import.List.fold_right"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/deriving.ml[379,11649+28]..src/deriving.ml[379,11649+31])
                                                                  Texp_ident "set/6354"
                                                              <arg>
                                                                Labelled "init"
                                                                expression (src/deriving.ml[379,11649+38]..src/deriving.ml[379,11649+47])
                                                                  Texp_ident "collected/6350"
                                                              <arg>
                                                                Labelled "f"
                                                                expression (src/deriving.ml[379,11649+51]..src/deriving.ml[379,11649+55])
                                                                  Texp_ident "loop/6348"
                                                            ]
                                                      <case>
                                                        pattern (src/deriving.ml[380,11705+10]..src/deriving.ml[380,11705+11])
                                                          Tpat_value
                                                          pattern (src/deriving.ml[380,11705+10]..src/deriving.ml[380,11705+11])
                                                            Tpat_any
                                                        expression (src/deriving.ml[380,11705+15]..src/deriving.ml[380,11705+41])
                                                          Texp_apply
                                                          expression (src/deriving.ml[380,11705+15]..src/deriving.ml[380,11705+20])
                                                            Texp_ident "Stdlib!.raise"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/deriving.ml[380,11705+21]..src/deriving.ml[380,11705+41])
                                                                Texp_construct "Not_supported"
                                                                [
                                                                  expression (src/deriving.ml[380,11705+36]..src/deriving.ml[380,11705+40])
                                                                    Texp_ident "name/6349"
                                                                ]
                                                          ]
                                                    ]
                                                    []
                                          ]
                                    ]
                              ]
                              expression (src/deriving.ml[382,11754+4]..src/deriving.ml[382,11754+27])
                                Texp_apply
                                expression (src/deriving.ml[382,11754+4]..src/deriving.ml[382,11754+12])
                                  Texp_ident "Ppxlib__!.Import.List.rev"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/deriving.ml[382,11754+13]..src/deriving.ml[382,11754+27])
                                      Texp_apply
                                      expression (src/deriving.ml[382,11754+14]..src/deriving.ml[382,11754+18])
                                        Texp_ident "loop/6348"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/deriving.ml[382,11754+19]..src/deriving.ml[382,11754+23])
                                            Texp_ident "name/6347"
                                        <arg>
                                          Nolabel
                                          expression (src/deriving.ml[382,11754+24]..src/deriving.ml[382,11754+26])
                                            Texp_construct "[]"
                                            []
                                      ]
                                ]
                        ]
                  ]
            ]
          structure_item (src/deriving.ml[384,11783+2]..src/deriving.ml[388,11981+34])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[384,11783+6]..src/deriving.ml[384,11783+22])
                  Tpat_var "resolve_internal/6355"
                expression (src/deriving.ml[384,11783+23]..src/deriving.ml[388,11981+34]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/deriving.ml[384,11783+24]..src/deriving.ml[384,11783+29])
                        Tpat_extra_constraint
                        core_type (src/deriving.ml[384,11783+32]..src/deriving.ml[384,11783+46])
                          Ttyp_constr "Field/6331.t"
                          [
                            core_type (src/deriving.ml[384,11783+33]..src/deriving.ml[384,11783+34])
                              Ttyp_any
                            core_type (src/deriving.ml[384,11783+36]..src/deriving.ml[384,11783+37])
                              Ttyp_any
                          ]
                        pattern (src/deriving.ml[384,11783+24]..src/deriving.ml[384,11783+29])
                          Tpat_alias "field/6357"
                          pattern (src/deriving.ml[384,11783+24]..src/deriving.ml[384,11783+29])
                            Tpat_any
                      expression (src/deriving.ml[384,11783+48]..src/deriving.ml[388,11981+34]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/deriving.ml[384,11783+48]..src/deriving.ml[384,11783+52])
                              Tpat_var "name/6358"
                            expression (src/deriving.ml[385,11838+4]..src/deriving.ml[388,11981+34])
                              Texp_apply
                              expression (src/deriving.ml[385,11838+4]..src/deriving.ml[385,11838+12])
                                Texp_ident "Ppxlib__!.Import.List.map"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/deriving.ml[385,11838+13]..src/deriving.ml[385,11838+49])
                                    Texp_apply
                                    expression (src/deriving.ml[385,11838+14]..src/deriving.ml[385,11838+37])
                                      Texp_ident "resolve_actual_derivers/6344"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/deriving.ml[385,11838+38]..src/deriving.ml[385,11838+43])
                                          Texp_ident "field/6357"
                                      <arg>
                                        Nolabel
                                        expression (src/deriving.ml[385,11838+44]..src/deriving.ml[385,11838+48])
                                          Texp_ident "name/6358"
                                    ]
                                <arg>
                                  Labelled "f"
                                  expression (src/deriving.ml[385,11838+53]..src/deriving.ml[388,11981+34])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/deriving.ml[385,11838+58]..src/deriving.ml[385,11838+61])
                                          Tpat_var "drv/6359"
                                        expression (src/deriving.ml[386,11903+8]..src/deriving.ml[388,11981+33])
                                          Texp_match
                                          expression (src/deriving.ml[386,11903+14]..src/deriving.ml[386,11903+27])
                                            Texp_apply
                                            expression (src/deriving.ml[386,11903+14]..src/deriving.ml[386,11903+23])
                                              Texp_field
                                              expression (src/deriving.ml[386,11903+14]..src/deriving.ml[386,11903+19])
                                                Texp_ident "field/6357"
                                              "get"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/deriving.ml[386,11903+24]..src/deriving.ml[386,11903+27])
                                                  Texp_ident "drv/6359"
                                            ]
                                          [
                                            <case>
                                              pattern (src/deriving.ml[387,11936+10]..src/deriving.ml[387,11936+14])
                                                Tpat_value
                                                pattern (src/deriving.ml[387,11936+10]..src/deriving.ml[387,11936+14])
                                                  Tpat_construct "None"
                                                  []
                                              expression (src/deriving.ml[387,11936+18]..src/deriving.ml[387,11936+44])
                                                Texp_apply
                                                expression (src/deriving.ml[387,11936+18]..src/deriving.ml[387,11936+23])
                                                  Texp_ident "Stdlib!.raise"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[387,11936+24]..src/deriving.ml[387,11936+44])
                                                      Texp_construct "Not_supported"
                                                      [
                                                        expression (src/deriving.ml[387,11936+39]..src/deriving.ml[387,11936+43])
                                                          Texp_ident "name/6358"
                                                      ]
                                                ]
                                            <case>
                                              pattern (src/deriving.ml[388,11981+10]..src/deriving.ml[388,11981+16])
                                                Tpat_value
                                                pattern (src/deriving.ml[388,11981+10]..src/deriving.ml[388,11981+16])
                                                  Tpat_construct "Some"
                                                  [
                                                    pattern (src/deriving.ml[388,11981+15]..src/deriving.ml[388,11981+16])
                                                      Tpat_var "g/6360"
                                                  ]
                                              expression (src/deriving.ml[388,11981+20]..src/deriving.ml[388,11981+33])
                                                Texp_tuple
                                                [
                                                  expression (src/deriving.ml[388,11981+21]..src/deriving.ml[388,11981+29])
                                                    Texp_field
                                                    expression (src/deriving.ml[388,11981+21]..src/deriving.ml[388,11981+24])
                                                      Texp_ident "drv/6359"
                                                    "name"
                                                  expression (src/deriving.ml[388,11981+31]..src/deriving.ml[388,11981+32])
                                                    Texp_ident "g/6360"
                                                ]
                                          ]
                                          []
                                    ]
                              ]
                        ]
                  ]
            ]
          structure_item (src/deriving.ml[390,12017+2]..src/deriving.ml[395,12256+26])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[390,12017+6]..src/deriving.ml[390,12017+19])
                  Tpat_var "supported_for/6362"
                expression (src/deriving.ml[390,12017+20]..src/deriving.ml[395,12256+26]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/deriving.ml[390,12017+20]..src/deriving.ml[390,12017+25])
                        Tpat_var "field/6364"
                      expression (src/deriving.ml[391,12045+4]..src/deriving.ml[395,12256+26])
                        Texp_apply
                        expression (src/deriving.ml[395,12256+4]..src/deriving.ml[395,12256+6])
                          Texp_ident "Stdlib!.|>"
                        [
                          <arg>
                            Nolabel
                            expression (src/deriving.ml[391,12045+4]..src/deriving.ml[394,12212+43])
                              Texp_apply
                              expression (src/deriving.ml[391,12045+4]..src/deriving.ml[391,12045+18])
                                Texp_ident "Ppxlib__!.Import.List.fold_left"
                              [
                                <arg>
                                  Labelled "f"
                                  expression (src/deriving.ml[391,12045+59]..src/deriving.ml[394,12212+43])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/deriving.ml[391,12045+64]..src/deriving.ml[391,12045+67])
                                          Tpat_var "acc/6365"
                                        expression (src/deriving.ml[391,12045+68]..src/deriving.ml[394,12212+42]) ghost
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/deriving.ml[391,12045+68]..src/deriving.ml[391,12045+77])
                                                Tpat_tuple
                                                [
                                                  pattern (src/deriving.ml[391,12045+69]..src/deriving.ml[391,12045+73])
                                                    Tpat_var "name/6366"
                                                  pattern (src/deriving.ml[391,12045+75]..src/deriving.ml[391,12045+76])
                                                    Tpat_any
                                                ]
                                              expression (src/deriving.ml[392,12126+8]..src/deriving.ml[394,12212+42])
                                                Texp_match
                                                expression (src/deriving.ml[392,12126+14]..src/deriving.ml[392,12126+41])
                                                  Texp_apply
                                                  expression (src/deriving.ml[392,12126+14]..src/deriving.ml[392,12126+30])
                                                    Texp_ident "resolve_internal/6355"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/deriving.ml[392,12126+31]..src/deriving.ml[392,12126+36])
                                                        Texp_ident "field/6364"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/deriving.ml[392,12126+37]..src/deriving.ml[392,12126+41])
                                                        Texp_ident "name/6366"
                                                  ]
                                                [
                                                  <case>
                                                    pattern (src/deriving.ml[393,12173+10]..src/deriving.ml[393,12173+11])
                                                      Tpat_value
                                                      pattern (src/deriving.ml[393,12173+10]..src/deriving.ml[393,12173+11])
                                                        Tpat_any
                                                    expression (src/deriving.ml[393,12173+15]..src/deriving.ml[393,12173+38])
                                                      Texp_apply
                                                      expression (src/deriving.ml[393,12173+15]..src/deriving.ml[393,12173+29])
                                                        Texp_ident "Ppxlib__!.Import.String.Set.add"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[393,12173+30]..src/deriving.ml[393,12173+34])
                                                            Texp_ident "name/6366"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[393,12173+35]..src/deriving.ml[393,12173+38])
                                                            Texp_ident "acc/6365"
                                                      ]
                                                  <case>
                                                    pattern (src/deriving.ml[394,12212+10]..src/deriving.ml[394,12212+35])
                                                      Tpat_exception
                                                      pattern (src/deriving.ml[394,12212+20]..src/deriving.ml[394,12212+35])
                                                        Tpat_construct "Not_supported"
                                                        [
                                                          pattern (src/deriving.ml[394,12212+34]..src/deriving.ml[394,12212+35])
                                                            Tpat_any
                                                        ]
                                                    expression (src/deriving.ml[394,12212+39]..src/deriving.ml[394,12212+42])
                                                      Texp_ident "acc/6365"
                                                ]
                                                []
                                          ]
                                    ]
                                <arg>
                                  Labelled "init"
                                  expression (src/deriving.ml[391,12045+39]..src/deriving.ml[391,12045+55])
                                    Texp_ident "Ppxlib__!.Import.String.Set.empty"
                                <arg>
                                  Nolabel
                                  expression (src/deriving.ml[391,12045+19]..src/deriving.ml[391,12045+32])
                                    Texp_apply
                                    expression (src/deriving.ml[391,12045+20]..src/deriving.ml[391,12045+28])
                                      Texp_ident "derivers/6337"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/deriving.ml[391,12045+29]..src/deriving.ml[391,12045+31])
                                          Texp_construct "()"
                                          []
                                    ]
                              ]
                          <arg>
                            Nolabel
                            expression (src/deriving.ml[395,12256+7]..src/deriving.ml[395,12256+26])
                              Texp_ident "Ppxlib__!.Import.String.Set.elements"
                        ]
                  ]
            ]
          structure_item (src/deriving.ml[397,12284+2]..src/deriving.ml[407,12668+40])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[397,12284+6]..src/deriving.ml[397,12284+19])
                  Tpat_var "not_supported/6368"
                expression (src/deriving.ml[397,12284+20]..src/deriving.ml[407,12668+40]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/deriving.ml[397,12284+21]..src/deriving.ml[397,12284+26])
                        Tpat_extra_constraint
                        core_type (src/deriving.ml[397,12284+29]..src/deriving.ml[397,12284+43])
                          Ttyp_constr "Field/6331.t"
                          [
                            core_type (src/deriving.ml[397,12284+30]..src/deriving.ml[397,12284+31])
                              Ttyp_any
                            core_type (src/deriving.ml[397,12284+33]..src/deriving.ml[397,12284+34])
                              Ttyp_any
                          ]
                        pattern (src/deriving.ml[397,12284+21]..src/deriving.ml[397,12284+26])
                          Tpat_alias "field/6370"
                          pattern (src/deriving.ml[397,12284+21]..src/deriving.ml[397,12284+26])
                            Tpat_any
                      expression (src/deriving.ml[397,12284+45]..src/deriving.ml[407,12668+40]) ghost
                        Texp_function
                        Optional "spellcheck"
                        [
                          <case>
                            pattern (src/deriving.ml[397,12284+47]..src/deriving.ml[397,12284+64]) ghost
                              Tpat_var "*opt*/6371"
                            expression (src/deriving.ml[397,12284+45]..src/deriving.ml[407,12668+40]) ghost
                              attribute "#default"
                                []
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/deriving.ml[397,12284+47]..src/deriving.ml[397,12284+57])
                                    Tpat_var "spellcheck/6372"
                                  expression (src/deriving.ml[397,12284+47]..src/deriving.ml[397,12284+64]) ghost
                                    Texp_match
                                    expression (src/deriving.ml[397,12284+45]..src/deriving.ml[407,12668+40]) ghost
                                      Texp_ident "*opt*/6371"
                                    [
                                      <case>
                                        pattern (src/deriving.ml[397,12284+60]..src/deriving.ml[397,12284+64])
                                          Tpat_value
                                          pattern (src/deriving.ml[397,12284+60]..src/deriving.ml[397,12284+64])
                                            Tpat_construct "*predef*.Some"
                                            [
                                              pattern (src/deriving.ml[397,12284+60]..src/deriving.ml[397,12284+64])
                                                Tpat_var "*sth*/6373"
                                            ]
                                        expression (src/deriving.ml[397,12284+60]..src/deriving.ml[397,12284+64])
                                          Texp_ident "*sth*/6373"
                                      <case>
                                        pattern (src/deriving.ml[397,12284+60]..src/deriving.ml[397,12284+64])
                                          Tpat_value
                                          pattern (src/deriving.ml[397,12284+60]..src/deriving.ml[397,12284+64])
                                            Tpat_construct "*predef*.None"
                                            []
                                        expression (src/deriving.ml[397,12284+60]..src/deriving.ml[397,12284+64])
                                          Texp_construct "true"
                                          []
                                    ]
                                    []
                              ]
                              expression (src/deriving.ml[397,12284+66]..src/deriving.ml[407,12668+40]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/deriving.ml[397,12284+66]..src/deriving.ml[397,12284+70])
                                      Tpat_var "name/6374"
                                    expression (src/deriving.ml[398,12357+4]..src/deriving.ml[407,12668+40])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/deriving.ml[398,12357+8]..src/deriving.ml[398,12357+22])
                                            Tpat_var "spellcheck_msg/6375"
                                          expression (src/deriving.ml[399,12382+6]..src/deriving.ml[403,12530+13])
                                            Texp_ifthenelse
                                            expression (src/deriving.ml[399,12382+9]..src/deriving.ml[399,12382+19])
                                              Texp_ident "spellcheck/6372"
                                            expression (src/deriving.ml[400,12407+8]..src/deriving.ml[402,12500+29])
                                              Texp_match
                                              expression (src/deriving.ml[400,12407+14]..src/deriving.ml[400,12407+66])
                                                Texp_apply
                                                expression (src/deriving.ml[400,12407+14]..src/deriving.ml[400,12407+35])
                                                  Texp_ident "Ppxlib__!.Spellcheck.spellcheck"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[400,12407+36]..src/deriving.ml[400,12407+57])
                                                      Texp_apply
                                                      expression (src/deriving.ml[400,12407+37]..src/deriving.ml[400,12407+50])
                                                        Texp_ident "supported_for/6362"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[400,12407+51]..src/deriving.ml[400,12407+56])
                                                            Texp_ident "field/6370"
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[400,12407+58]..src/deriving.ml[400,12407+66])
                                                      Texp_field
                                                      expression (src/deriving.ml[400,12407+58]..src/deriving.ml[400,12407+62])
                                                        Texp_ident "name/6374"
                                                      "txt"
                                                ]
                                              [
                                                <case>
                                                  pattern (src/deriving.ml[401,12479+10]..src/deriving.ml[401,12479+14])
                                                    Tpat_value
                                                    pattern (src/deriving.ml[401,12479+10]..src/deriving.ml[401,12479+14])
                                                      Tpat_construct "None"
                                                      []
                                                  expression (src/deriving.ml[401,12479+18]..src/deriving.ml[401,12479+20])
                                                    Texp_constant Const_string("",(src/deriving.ml[401,12479+19]..src/deriving.ml[401,12479+19]),None)
                                                <case>
                                                  pattern (src/deriving.ml[402,12500+10]..src/deriving.ml[402,12500+16])
                                                    Tpat_value
                                                    pattern (src/deriving.ml[402,12500+10]..src/deriving.ml[402,12500+16])
                                                      Tpat_construct "Some"
                                                      [
                                                        pattern (src/deriving.ml[402,12500+15]..src/deriving.ml[402,12500+16])
                                                          Tpat_var "s/6376"
                                                      ]
                                                  expression (src/deriving.ml[402,12500+20]..src/deriving.ml[402,12500+29])
                                                    Texp_apply
                                                    expression (src/deriving.ml[402,12500+26]..src/deriving.ml[402,12500+27])
                                                      Texp_ident "Stdlib!.^"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/deriving.ml[402,12500+20]..src/deriving.ml[402,12500+25])
                                                          Texp_constant Const_string(".\n",(src/deriving.ml[402,12500+21]..src/deriving.ml[402,12500+24]),None)
                                                      <arg>
                                                        Nolabel
                                                        expression (src/deriving.ml[402,12500+28]..src/deriving.ml[402,12500+29])
                                                          Texp_ident "s/6376"
                                                    ]
                                              ]
                                              []
                                            Some
                                              expression (src/deriving.ml[403,12530+11]..src/deriving.ml[403,12530+13])
                                                Texp_constant Const_string("",(src/deriving.ml[403,12530+12]..src/deriving.ml[403,12530+12]),None)
                                      ]
                                      expression (src/deriving.ml[405,12551+4]..src/deriving.ml[407,12668+40])
                                        Texp_apply
                                        expression (src/deriving.ml[405,12551+4]..src/deriving.ml[405,12551+29])
                                          Texp_ident "Ppxlib__!.Location.error_extensionf"
                                        [
                                          <arg>
                                            Labelled "loc"
                                            expression (src/deriving.ml[405,12551+35]..src/deriving.ml[405,12551+43])
                                              Texp_field
                                              expression (src/deriving.ml[405,12551+35]..src/deriving.ml[405,12551+39])
                                                Texp_ident "name/6374"
                                              "loc"
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[406,12595+6]..src/deriving.ml[406,12595+72])
                                              Texp_construct "CamlinternalFormatBasics.Format"
                                              [
                                                expression (src/deriving.ml[406,12595+6]..src/deriving.ml[406,12595+72]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                                  [
                                                    expression (src/deriving.ml[406,12595+6]..src/deriving.ml[406,12595+72]) ghost
                                                      Texp_constant Const_string("Ppxlib.Deriving: '",(src/deriving.ml[406,12595+6]..src/deriving.ml[406,12595+72]) ghost,None)
                                                    expression (src/deriving.ml[406,12595+6]..src/deriving.ml[406,12595+72]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.String"
                                                      [
                                                        expression (src/deriving.ml[406,12595+6]..src/deriving.ml[406,12595+72]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                                          []
                                                        expression (src/deriving.ml[406,12595+6]..src/deriving.ml[406,12595+72]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                                          [
                                                            expression (src/deriving.ml[406,12595+6]..src/deriving.ml[406,12595+72]) ghost
                                                              Texp_constant Const_string("' is not a supported ",(src/deriving.ml[406,12595+6]..src/deriving.ml[406,12595+72]) ghost,None)
                                                            expression (src/deriving.ml[406,12595+6]..src/deriving.ml[406,12595+72]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.String"
                                                              [
                                                                expression (src/deriving.ml[406,12595+6]..src/deriving.ml[406,12595+72]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                  []
                                                                expression (src/deriving.ml[406,12595+6]..src/deriving.ml[406,12595+72]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                  [
                                                                    expression (src/deriving.ml[406,12595+6]..src/deriving.ml[406,12595+72]) ghost
                                                                      Texp_constant Const_string(" deriving generator",(src/deriving.ml[406,12595+6]..src/deriving.ml[406,12595+72]) ghost,None)
                                                                    expression (src/deriving.ml[406,12595+6]..src/deriving.ml[406,12595+72]) ghost
                                                                      Texp_construct "CamlinternalFormatBasics.String"
                                                                      [
                                                                        expression (src/deriving.ml[406,12595+6]..src/deriving.ml[406,12595+72]) ghost
                                                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                          []
                                                                        expression (src/deriving.ml[406,12595+6]..src/deriving.ml[406,12595+72]) ghost
                                                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                          []
                                                                      ]
                                                                  ]
                                                              ]
                                                          ]
                                                      ]
                                                  ]
                                                expression (src/deriving.ml[406,12595+6]..src/deriving.ml[406,12595+72]) ghost
                                                  Texp_constant Const_string("Ppxlib.Deriving: '%s' is not a supported %s deriving generator%s",(src/deriving.ml[406,12595+6]..src/deriving.ml[406,12595+72]) ghost,None)
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[407,12668+6]..src/deriving.ml[407,12668+14])
                                              Texp_field
                                              expression (src/deriving.ml[407,12668+6]..src/deriving.ml[407,12668+10])
                                                Texp_ident "name/6374"
                                              "txt"
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[407,12668+15]..src/deriving.ml[407,12668+25])
                                              Texp_field
                                              expression (src/deriving.ml[407,12668+15]..src/deriving.ml[407,12668+20])
                                                Texp_ident "field/6370"
                                              "name"
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[407,12668+26]..src/deriving.ml[407,12668+40])
                                              Texp_ident "spellcheck_msg/6375"
                                        ]
                                ]
                        ]
                  ]
            ]
          structure_item (src/deriving.ml[409,12710+2]..src/deriving.ml[412,12814+80])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[409,12710+6]..src/deriving.ml[409,12710+13])
                  Tpat_var "resolve/6377"
                expression (src/deriving.ml[409,12710+14]..src/deriving.ml[412,12814+80]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/deriving.ml[409,12710+14]..src/deriving.ml[409,12710+19])
                        Tpat_var "field/6379"
                      expression (src/deriving.ml[409,12710+20]..src/deriving.ml[412,12814+80]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/deriving.ml[409,12710+20]..src/deriving.ml[409,12710+24])
                              Tpat_var "name/6380"
                            expression (src/deriving.ml[410,12737+4]..src/deriving.ml[412,12814+80])
                              Texp_try
                              expression (src/deriving.ml[410,12737+8]..src/deriving.ml[410,12737+44])
                                Texp_construct "Ok"
                                [
                                  expression (src/deriving.ml[410,12737+11]..src/deriving.ml[410,12737+44])
                                    Texp_apply
                                    expression (src/deriving.ml[410,12737+12]..src/deriving.ml[410,12737+28])
                                      Texp_ident "resolve_internal/6355"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/deriving.ml[410,12737+29]..src/deriving.ml[410,12737+34])
                                          Texp_ident "field/6379"
                                      <arg>
                                        Nolabel
                                        expression (src/deriving.ml[410,12737+35]..src/deriving.ml[410,12737+43])
                                          Texp_field
                                          expression (src/deriving.ml[410,12737+35]..src/deriving.ml[410,12737+39])
                                            Texp_ident "name/6380"
                                          "txt"
                                    ]
                                ]
                              [
                                <case>
                                  pattern (src/deriving.ml[411,12782+9]..src/deriving.ml[411,12782+28])
                                    Tpat_construct "Not_supported"
                                    [
                                      pattern (src/deriving.ml[411,12782+23]..src/deriving.ml[411,12782+28])
                                        Tpat_var "name'/6381"
                                    ]
                                  expression (src/deriving.ml[412,12814+6]..src/deriving.ml[412,12814+80])
                                    Texp_construct "Error"
                                    [
                                      expression (src/deriving.ml[412,12814+12]..src/deriving.ml[412,12814+80])
                                        Texp_apply
                                        expression (src/deriving.ml[412,12814+13]..src/deriving.ml[412,12814+26])
                                          Texp_ident "not_supported/6368"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[412,12814+27]..src/deriving.ml[412,12814+32])
                                              Texp_ident "field/6379"
                                          <arg>
                                            Optional "spellcheck"
                                            expression (src/deriving.ml[412,12814+45]..src/deriving.ml[412,12814+74])
                                              Texp_construct "Some"
                                              [
                                                expression (src/deriving.ml[412,12814+45]..src/deriving.ml[412,12814+74])
                                                  Texp_apply
                                                  expression (src/deriving.ml[412,12814+46]..src/deriving.ml[412,12814+58])
                                                    Texp_ident "Ppxlib__!.Import.String.equal"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/deriving.ml[412,12814+59]..src/deriving.ml[412,12814+67])
                                                        Texp_field
                                                        expression (src/deriving.ml[412,12814+59]..src/deriving.ml[412,12814+63])
                                                          Texp_ident "name/6380"
                                                        "txt"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/deriving.ml[412,12814+68]..src/deriving.ml[412,12814+73])
                                                        Texp_ident "name'/6381"
                                                  ]
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[412,12814+75]..src/deriving.ml[412,12814+79])
                                              Texp_ident "name/6380"
                                        ]
                                    ]
                              ]
                              []
                        ]
                  ]
            ]
          structure_item (src/deriving.ml[414,12896+2]..src/deriving.ml[475,15656+51])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[414,12896+6]..src/deriving.ml[414,12896+17])
                  Tpat_var "resolve_all/6382"
                expression (src/deriving.ml[414,12896+18]..src/deriving.ml[475,15656+51]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/deriving.ml[414,12896+18]..src/deriving.ml[414,12896+23])
                        Tpat_var "field/6384"
                      expression (src/deriving.ml[414,12896+24]..src/deriving.ml[475,15656+51]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/deriving.ml[414,12896+24]..src/deriving.ml[414,12896+32])
                              Tpat_var "derivers/6385"
                            expression (src/deriving.ml[415,12931+4]..src/deriving.ml[475,15656+51])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/deriving.ml[415,12931+8]..src/deriving.ml[415,12931+51])
                                    Tpat_tuple
                                    [
                                      pattern (src/deriving.ml[415,12931+8]..src/deriving.ml[415,12931+25])
                                        Tpat_var "derivers_and_args/6386"
                                      pattern (src/deriving.ml[415,12931+27]..src/deriving.ml[415,12931+51])
                                        Tpat_var "derivers_and_args_errors/6387"
                                    ]
                                  expression (src/deriving.ml[416,12985+6]..src/deriving.ml[432,13702+49])
                                    Texp_apply
                                    expression (src/deriving.ml[432,13702+6]..src/deriving.ml[432,13702+8])
                                      Texp_ident "Stdlib!.|>"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/deriving.ml[416,12985+6]..src/deriving.ml[431,13685+16])
                                          Texp_apply
                                          expression (src/deriving.ml[416,12985+6]..src/deriving.ml[416,12985+24])
                                            Texp_ident "Ppxlib__!.Import.List.partition_map"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/deriving.ml[417,13010+8]..src/deriving.ml[430,13653+31])
                                                Texp_function
                                                Nolabel
                                                [
                                                  <case>
                                                    pattern (src/deriving.ml[417,13010+13]..src/deriving.ml[417,13010+25])
                                                      Tpat_tuple
                                                      [
                                                        pattern (src/deriving.ml[417,13010+14]..src/deriving.ml[417,13010+18])
                                                          Tpat_var "name/6388"
                                                        pattern (src/deriving.ml[417,13010+20]..src/deriving.ml[417,13010+24])
                                                          Tpat_var "args/6389"
                                                      ]
                                                    expression (src/deriving.ml[418,13039+10]..src/deriving.ml[430,13653+30])
                                                      Texp_match
                                                      expression (src/deriving.ml[418,13039+16]..src/deriving.ml[418,13039+44])
                                                        Texp_apply
                                                        expression (src/deriving.ml[418,13039+16]..src/deriving.ml[418,13039+35])
                                                          Texp_ident "Ppx_derivers!.lookup"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/deriving.ml[418,13039+36]..src/deriving.ml[418,13039+44])
                                                              Texp_field
                                                              expression (src/deriving.ml[418,13039+36]..src/deriving.ml[418,13039+40])
                                                                Texp_ident "name/6388"
                                                              "txt"
                                                        ]
                                                      [
                                                        <case>
                                                          pattern (src/deriving.ml[419,13089+12]..src/deriving.ml[419,13089+16])
                                                            Tpat_value
                                                            pattern (src/deriving.ml[419,13089+12]..src/deriving.ml[419,13089+16])
                                                              Tpat_construct "None"
                                                              []
                                                          expression (src/deriving.ml[419,13089+20]..src/deriving.ml[419,13089+59])
                                                            Texp_construct "Either.Right"
                                                            [
                                                              expression (src/deriving.ml[419,13089+33]..src/deriving.ml[419,13089+59])
                                                                Texp_apply
                                                                expression (src/deriving.ml[419,13089+34]..src/deriving.ml[419,13089+47])
                                                                  Texp_ident "not_supported/6368"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/deriving.ml[419,13089+48]..src/deriving.ml[419,13089+53])
                                                                      Texp_ident "field/6384"
                                                                  <arg>
                                                                    Optional "spellcheck"
                                                                    expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                                                      Texp_construct "None"
                                                                      []
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/deriving.ml[419,13089+54]..src/deriving.ml[419,13089+58])
                                                                      Texp_ident "name/6388"
                                                                ]
                                                            ]
                                                        <case>
                                                          pattern (src/deriving.ml[420,13149+12]..src/deriving.ml[420,13149+22])
                                                            Tpat_value
                                                            pattern (src/deriving.ml[420,13149+12]..src/deriving.ml[420,13149+22])
                                                              Tpat_construct "Some"
                                                              [
                                                                pattern (src/deriving.ml[420,13149+17]..src/deriving.ml[420,13149+22])
                                                                  Tpat_construct "T"
                                                                  [
                                                                    pattern (src/deriving.ml[420,13149+20]..src/deriving.ml[420,13149+21])
                                                                      Tpat_any
                                                                  ]
                                                              ]
                                                          expression (src/deriving.ml[420,13149+26]..src/deriving.ml[427,13498+79])
                                                            Texp_match
                                                            expression (src/deriving.ml[423,13337+20]..src/deriving.ml[423,13337+24])
                                                              Texp_ident "args/6389"
                                                            [
                                                              <case>
                                                                pattern (src/deriving.ml[424,13367+16]..src/deriving.ml[424,13367+22])
                                                                  Tpat_value
                                                                  pattern (src/deriving.ml[424,13367+16]..src/deriving.ml[424,13367+22])
                                                                    Tpat_construct "Args"
                                                                    [
                                                                      pattern (src/deriving.ml[424,13367+21]..src/deriving.ml[424,13367+22])
                                                                        Tpat_var "l/6391"
                                                                    ]
                                                                expression (src/deriving.ml[424,13367+26]..src/deriving.ml[424,13367+54])
                                                                  Texp_construct "Either.Left"
                                                                  [
                                                                    expression (src/deriving.ml[424,13367+38]..src/deriving.ml[424,13367+54])
                                                                      Texp_construct "Some"
                                                                      [
                                                                        expression (src/deriving.ml[424,13367+44]..src/deriving.ml[424,13367+53])
                                                                          Texp_tuple
                                                                          [
                                                                            expression (src/deriving.ml[424,13367+45]..src/deriving.ml[424,13367+49])
                                                                              Texp_ident "name/6388"
                                                                            expression (src/deriving.ml[424,13367+51]..src/deriving.ml[424,13367+52])
                                                                              Texp_ident "l/6391"
                                                                          ]
                                                                      ]
                                                                  ]
                                                              <case>
                                                                pattern (src/deriving.ml[425,13422+16]..src/deriving.ml[425,13422+41])
                                                                  Tpat_value
                                                                  pattern (src/deriving.ml[425,13422+16]..src/deriving.ml[425,13422+41])
                                                                    Tpat_construct "Unknown_syntax"
                                                                    [
                                                                      pattern (src/deriving.ml[425,13422+32]..src/deriving.ml[425,13422+35])
                                                                        Tpat_var "loc/6392"
                                                                      pattern (src/deriving.ml[425,13422+37]..src/deriving.ml[425,13422+40])
                                                                        Tpat_var "msg/6393"
                                                                    ]
                                                                expression (src/deriving.ml[426,13467+18]..src/deriving.ml[427,13498+78])
                                                                  Texp_construct "Either.Right"
                                                                  [
                                                                    expression (src/deriving.ml[427,13498+20]..src/deriving.ml[427,13498+78])
                                                                      Texp_apply
                                                                      expression (src/deriving.ml[427,13498+21]..src/deriving.ml[427,13498+46])
                                                                        Texp_ident "Ppxlib__!.Location.error_extensionf"
                                                                      [
                                                                        <arg>
                                                                          Labelled "loc"
                                                                          expression (src/deriving.ml[427,13498+48]..src/deriving.ml[427,13498+51])
                                                                            Texp_ident "loc/6392"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/deriving.ml[427,13498+52]..src/deriving.ml[427,13498+73])
                                                                            Texp_construct "CamlinternalFormatBasics.Format"
                                                                            [
                                                                              expression (src/deriving.ml[427,13498+52]..src/deriving.ml[427,13498+73]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                [
                                                                                  expression (src/deriving.ml[427,13498+52]..src/deriving.ml[427,13498+73]) ghost
                                                                                    Texp_constant Const_string("Ppxlib.Deriving: ",(src/deriving.ml[427,13498+52]..src/deriving.ml[427,13498+73]) ghost,None)
                                                                                  expression (src/deriving.ml[427,13498+52]..src/deriving.ml[427,13498+73]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.String"
                                                                                    [
                                                                                      expression (src/deriving.ml[427,13498+52]..src/deriving.ml[427,13498+73]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                        []
                                                                                      expression (src/deriving.ml[427,13498+52]..src/deriving.ml[427,13498+73]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                        []
                                                                                    ]
                                                                                ]
                                                                              expression (src/deriving.ml[427,13498+52]..src/deriving.ml[427,13498+73]) ghost
                                                                                Texp_constant Const_string("Ppxlib.Deriving: %s",(src/deriving.ml[427,13498+52]..src/deriving.ml[427,13498+73]) ghost,None)
                                                                            ]
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/deriving.ml[427,13498+74]..src/deriving.ml[427,13498+77])
                                                                            Texp_ident "msg/6393"
                                                                      ]
                                                                  ]
                                                            ]
                                                            []
                                                        <case>
                                                          pattern (src/deriving.ml[428,13578+12]..src/deriving.ml[428,13578+18])
                                                            Tpat_value
                                                            pattern (src/deriving.ml[428,13578+12]..src/deriving.ml[428,13578+18])
                                                              Tpat_construct "Some"
                                                              [
                                                                pattern (src/deriving.ml[428,13578+17]..src/deriving.ml[428,13578+18])
                                                                  Tpat_any
                                                              ]
                                                          expression (src/deriving.ml[430,13653+14]..src/deriving.ml[430,13653+30])
                                                            Texp_construct "Either.Left"
                                                            [
                                                              expression (src/deriving.ml[430,13653+26]..src/deriving.ml[430,13653+30])
                                                                Texp_construct "None"
                                                                []
                                                            ]
                                                      ]
                                                      []
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (src/deriving.ml[431,13685+8]..src/deriving.ml[431,13685+16])
                                                Texp_ident "derivers/6385"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/deriving.ml[432,13702+9]..src/deriving.ml[432,13702+49])
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/deriving.ml[432,13702+13]..src/deriving.ml[432,13702+21])
                                                Tpat_tuple
                                                [
                                                  pattern (src/deriving.ml[432,13702+14]..src/deriving.ml[432,13702+16])
                                                    Tpat_var "l1/6395"
                                                  pattern (src/deriving.ml[432,13702+18]..src/deriving.ml[432,13702+20])
                                                    Tpat_var "l2/6396"
                                                ]
                                              expression (src/deriving.ml[432,13702+25]..src/deriving.ml[432,13702+49])
                                                Texp_tuple
                                                [
                                                  expression (src/deriving.ml[432,13702+26]..src/deriving.ml[432,13702+44])
                                                    Texp_apply
                                                    expression (src/deriving.ml[432,13702+26]..src/deriving.ml[432,13702+41])
                                                      Texp_ident "Ppxlib__!.Import.List.filter_opt"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/deriving.ml[432,13702+42]..src/deriving.ml[432,13702+44])
                                                          Texp_ident "l1/6395"
                                                    ]
                                                  expression (src/deriving.ml[432,13702+46]..src/deriving.ml[432,13702+48])
                                                    Texp_ident "l2/6396"
                                                ]
                                          ]
                                    ]
                              ]
                              expression (src/deriving.ml[435,13797+4]..src/deriving.ml[475,15656+51])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (src/deriving.ml[435,13797+8]..src/deriving.ml[435,13797+12])
                                      Tpat_var "seen/6398"
                                    expression (src/deriving.ml[435,13797+15]..src/deriving.ml[435,13797+32])
                                      Texp_apply
                                      expression (src/deriving.ml[435,13797+15]..src/deriving.ml[435,13797+29])
                                        Texp_ident "Ppxlib__!.Import.Hashtbl.create"
                                      [
                                        <arg>
                                          Optional "random"
                                          expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                            Texp_construct "None"
                                            []
                                        <arg>
                                          Nolabel
                                          expression (src/deriving.ml[435,13797+30]..src/deriving.ml[435,13797+32])
                                            Texp_constant Const_int 16
                                      ]
                                ]
                                expression (src/deriving.ml[436,13833+4]..src/deriving.ml[475,15656+51])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/deriving.ml[436,13833+8]..src/deriving.ml[436,13833+26])
                                        Tpat_tuple
                                        [
                                          pattern (src/deriving.ml[436,13833+8]..src/deriving.ml[436,13833+14])
                                            Tpat_var "result/6728"
                                          pattern (src/deriving.ml[436,13833+16]..src/deriving.ml[436,13833+26])
                                            Tpat_var "dep_errors/6729"
                                        ]
                                      expression (src/deriving.ml[437,13862+6]..src/deriving.ml[473,15615+33])
                                        Texp_apply
                                        expression (src/deriving.ml[437,13862+6]..src/deriving.ml[437,13862+20])
                                          Texp_ident "Ppxlib__!.Import.List.fold_left"
                                        [
                                          <arg>
                                            Labelled "f"
                                            expression (src/deriving.ml[438,13916+11]..src/deriving.ml[473,15615+33])
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/deriving.ml[438,13916+16]..src/deriving.ml[438,13916+32])
                                                    Tpat_tuple
                                                    [
                                                      pattern (src/deriving.ml[438,13916+17]..src/deriving.ml[438,13916+23])
                                                        Tpat_var "result/6730"
                                                      pattern (src/deriving.ml[438,13916+25]..src/deriving.ml[438,13916+31])
                                                        Tpat_var "errors/6731"
                                                    ]
                                                  expression (src/deriving.ml[438,13916+33]..src/deriving.ml[473,15615+32]) ghost
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (src/deriving.ml[438,13916+33]..src/deriving.ml[438,13916+45])
                                                          Tpat_tuple
                                                          [
                                                            pattern (src/deriving.ml[438,13916+34]..src/deriving.ml[438,13916+38])
                                                              Tpat_var "name/6732"
                                                            pattern (src/deriving.ml[438,13916+40]..src/deriving.ml[438,13916+44])
                                                              Tpat_var "args/6733"
                                                          ]
                                                        expression (src/deriving.ml[439,13965+10]..src/deriving.ml[473,15615+32])
                                                          Texp_match
                                                          expression (src/deriving.ml[439,13965+16]..src/deriving.ml[439,13965+34])
                                                            Texp_apply
                                                            expression (src/deriving.ml[439,13965+16]..src/deriving.ml[439,13965+23])
                                                              Texp_ident "resolve/6377"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/deriving.ml[439,13965+24]..src/deriving.ml[439,13965+29])
                                                                  Texp_ident "field/6384"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/deriving.ml[439,13965+30]..src/deriving.ml[439,13965+34])
                                                                  Texp_ident "name/6732"
                                                            ]
                                                          [
                                                            <case>
                                                              pattern (src/deriving.ml[440,14005+12]..src/deriving.ml[440,14005+19])
                                                                Tpat_value
                                                                pattern (src/deriving.ml[440,14005+12]..src/deriving.ml[440,14005+19])
                                                                  Tpat_construct "Error"
                                                                  [
                                                                    pattern (src/deriving.ml[440,14005+18]..src/deriving.ml[440,14005+19])
                                                                      Tpat_var "e/6734"
                                                                  ]
                                                              expression (src/deriving.ml[440,14005+23]..src/deriving.ml[440,14005+47])
                                                                Texp_tuple
                                                                [
                                                                  expression (src/deriving.ml[440,14005+24]..src/deriving.ml[440,14005+30])
                                                                    Texp_ident "result/6730"
                                                                  expression (src/deriving.ml[440,14005+32]..src/deriving.ml[440,14005+46])
                                                                    Texp_apply
                                                                    expression (src/deriving.ml[440,14005+39]..src/deriving.ml[440,14005+40])
                                                                      Texp_ident "Ppxlib__!.Import.@"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/deriving.ml[440,14005+32]..src/deriving.ml[440,14005+38])
                                                                          Texp_ident "errors/6731"
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/deriving.ml[440,14005+41]..src/deriving.ml[440,14005+46])
                                                                          Texp_construct "::"
                                                                          [
                                                                            expression (src/deriving.ml[440,14005+43]..src/deriving.ml[440,14005+44])
                                                                              Texp_ident "e/6734"
                                                                            expression (src/deriving.ml[440,14005+45]..src/deriving.ml[440,14005+46]) ghost
                                                                              Texp_construct "[]"
                                                                              []
                                                                          ]
                                                                    ]
                                                                ]
                                                            <case>
                                                              pattern (src/deriving.ml[441,14053+12]..src/deriving.ml[441,14053+31])
                                                                Tpat_value
                                                                pattern (src/deriving.ml[441,14053+12]..src/deriving.ml[441,14053+31])
                                                                  Tpat_construct "Ok"
                                                                  [
                                                                    pattern (src/deriving.ml[441,14053+15]..src/deriving.ml[441,14053+31])
                                                                      Tpat_var "named_generators/6735"
                                                                  ]
                                                              expression (src/deriving.ml[442,14088+14]..src/deriving.ml[473,15615+32])
                                                                Texp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (src/deriving.ml[442,14088+18]..src/deriving.ml[442,14088+23])
                                                                      Tpat_var "l_err/6736"
                                                                    expression (src/deriving.ml[443,14114+16]..src/deriving.ml[470,15482+38])
                                                                      Texp_apply
                                                                      expression (src/deriving.ml[443,14114+16]..src/deriving.ml[443,14114+31])
                                                                        Texp_ident "Ppxlib__!.Import.List.concat_map"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/deriving.ml[443,14114+32]..src/deriving.ml[443,14114+48])
                                                                            Texp_ident "named_generators/6735"
                                                                        <arg>
                                                                          Labelled "f"
                                                                          expression (src/deriving.ml[444,14163+21]..src/deriving.ml[470,15482+38])
                                                                            Texp_function
                                                                            Nolabel
                                                                            [
                                                                              <case>
                                                                                pattern (src/deriving.ml[444,14163+26]..src/deriving.ml[444,14163+52])
                                                                                  Tpat_tuple
                                                                                  [
                                                                                    pattern (src/deriving.ml[444,14163+27]..src/deriving.ml[444,14163+46])
                                                                                      Tpat_var "actual_deriver_name/6737"
                                                                                    pattern (src/deriving.ml[444,14163+48]..src/deriving.ml[444,14163+51])
                                                                                      Tpat_var "gen/6738"
                                                                                  ]
                                                                                expression (src/deriving.ml[445,14219+20]..src/deriving.ml[470,15482+37])
                                                                                  Texp_let Nonrec
                                                                                  [
                                                                                    <def>
                                                                                      pattern (src/deriving.ml[445,14219+24]..src/deriving.ml[445,14219+33])
                                                                                        Tpat_var "dup_error/6739"
                                                                                      expression (src/deriving.ml[446,14255+22]..src/deriving.ml[454,14624+29])
                                                                                        Texp_ifthenelse
                                                                                        expression (src/deriving.ml[447,14280+24]..src/deriving.ml[448,14339+63])
                                                                                          Texp_apply
                                                                                          expression (src/deriving.ml[448,14339+24]..src/deriving.ml[448,14339+26])
                                                                                            Texp_ident "Stdlib!.&&"
                                                                                          [
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/deriving.ml[447,14280+24]..src/deriving.ml[447,14280+58])
                                                                                                Texp_ident "Ppxlib__!.Options.fail_on_duplicate_derivers"
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/deriving.ml[448,14339+27]..src/deriving.ml[448,14339+63])
                                                                                                Texp_apply
                                                                                                expression (src/deriving.ml[448,14339+27]..src/deriving.ml[448,14339+38])
                                                                                                  Texp_ident "Ppxlib__!.Import.Hashtbl.mem"
                                                                                                [
                                                                                                  <arg>
                                                                                                    Nolabel
                                                                                                    expression (src/deriving.ml[448,14339+39]..src/deriving.ml[448,14339+43])
                                                                                                      Texp_ident "seen/6398"
                                                                                                  <arg>
                                                                                                    Nolabel
                                                                                                    expression (src/deriving.ml[448,14339+44]..src/deriving.ml[448,14339+63])
                                                                                                      Texp_ident "actual_deriver_name/6737"
                                                                                                ]
                                                                                          ]
                                                                                        expression (src/deriving.ml[450,14430+24]..src/deriving.ml[453,14598+25])
                                                                                          Texp_construct "::"
                                                                                          [
                                                                                            expression (src/deriving.ml[451,14456+26]..src/deriving.ml[452,14522+74])
                                                                                              Texp_apply
                                                                                              expression (src/deriving.ml[451,14456+26]..src/deriving.ml[451,14456+51])
                                                                                                Texp_ident "Ppxlib__!.Location.error_extensionf"
                                                                                              [
                                                                                                <arg>
                                                                                                  Labelled "loc"
                                                                                                  expression (src/deriving.ml[451,14456+57]..src/deriving.ml[451,14456+65])
                                                                                                    Texp_field
                                                                                                    expression (src/deriving.ml[451,14456+57]..src/deriving.ml[451,14456+61])
                                                                                                      Texp_ident "name/6732"
                                                                                                    "loc"
                                                                                                <arg>
                                                                                                  Nolabel
                                                                                                  expression (src/deriving.ml[452,14522+28]..src/deriving.ml[452,14522+54])
                                                                                                    Texp_construct "CamlinternalFormatBasics.Format"
                                                                                                    [
                                                                                                      expression (src/deriving.ml[452,14522+28]..src/deriving.ml[452,14522+54]) ghost
                                                                                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                        [
                                                                                                          expression (src/deriving.ml[452,14522+28]..src/deriving.ml[452,14522+54]) ghost
                                                                                                            Texp_constant Const_string("Deriver ",(src/deriving.ml[452,14522+28]..src/deriving.ml[452,14522+54]) ghost,None)
                                                                                                          expression (src/deriving.ml[452,14522+28]..src/deriving.ml[452,14522+54]) ghost
                                                                                                            Texp_construct "CamlinternalFormatBasics.String"
                                                                                                            [
                                                                                                              expression (src/deriving.ml[452,14522+28]..src/deriving.ml[452,14522+54]) ghost
                                                                                                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                                []
                                                                                                              expression (src/deriving.ml[452,14522+28]..src/deriving.ml[452,14522+54]) ghost
                                                                                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                                [
                                                                                                                  expression (src/deriving.ml[452,14522+28]..src/deriving.ml[452,14522+54]) ghost
                                                                                                                    Texp_constant Const_string(" appears twice",(src/deriving.ml[452,14522+28]..src/deriving.ml[452,14522+54]) ghost,None)
                                                                                                                  expression (src/deriving.ml[452,14522+28]..src/deriving.ml[452,14522+54]) ghost
                                                                                                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                                    []
                                                                                                                ]
                                                                                                            ]
                                                                                                        ]
                                                                                                      expression (src/deriving.ml[452,14522+28]..src/deriving.ml[452,14522+54]) ghost
                                                                                                        Texp_constant Const_string("Deriver %s appears twice",(src/deriving.ml[452,14522+28]..src/deriving.ml[452,14522+54]) ghost,None)
                                                                                                    ]
                                                                                                <arg>
                                                                                                  Nolabel
                                                                                                  expression (src/deriving.ml[452,14522+55]..src/deriving.ml[452,14522+74])
                                                                                                    Texp_ident "actual_deriver_name/6737"
                                                                                              ]
                                                                                            expression (src/deriving.ml[453,14598+24]..src/deriving.ml[453,14598+25]) ghost
                                                                                              Texp_construct "[]"
                                                                                              []
                                                                                          ]
                                                                                        Some
                                                                                          expression (src/deriving.ml[454,14624+27]..src/deriving.ml[454,14624+29])
                                                                                            Texp_construct "[]"
                                                                                            []
                                                                                  ]
                                                                                  expression (src/deriving.ml[456,14677+20]..src/deriving.ml[470,15482+37])
                                                                                    Texp_let Nonrec
                                                                                    [
                                                                                      <def>
                                                                                        pattern (src/deriving.ml[456,14677+24]..src/deriving.ml[456,14677+29])
                                                                                          Tpat_var "l_err/6740"
                                                                                        expression (src/deriving.ml[457,14709+22]..src/deriving.ml[467,15345+41])
                                                                                          Texp_apply
                                                                                          expression (src/deriving.ml[457,14709+22]..src/deriving.ml[457,14709+37])
                                                                                            Texp_ident "Ppxlib__!.Import.List.concat_map"
                                                                                          [
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/deriving.ml[457,14709+38]..src/deriving.ml[457,14709+58])
                                                                                                Texp_apply
                                                                                                expression (src/deriving.ml[457,14709+39]..src/deriving.ml[457,14709+53])
                                                                                                  Texp_ident "Generator/6276.deps"
                                                                                                [
                                                                                                  <arg>
                                                                                                    Nolabel
                                                                                                    expression (src/deriving.ml[457,14709+54]..src/deriving.ml[457,14709+57])
                                                                                                      Texp_ident "gen/6738"
                                                                                                ]
                                                                                            <arg>
                                                                                              Labelled "f"
                                                                                              expression (src/deriving.ml[457,14709+62]..src/deriving.ml[467,15345+41])
                                                                                                Texp_function
                                                                                                Nolabel
                                                                                                [
                                                                                                  <case>
                                                                                                    pattern (src/deriving.ml[457,14709+67]..src/deriving.ml[457,14709+70])
                                                                                                      Tpat_var "dep/6741"
                                                                                                    expression (src/deriving.ml[458,14783+26]..src/deriving.ml[467,15345+40])
                                                                                                      Texp_apply
                                                                                                      expression (src/deriving.ml[458,14783+26]..src/deriving.ml[458,14783+41])
                                                                                                        Texp_ident "Ppxlib__!.Import.List.filter_map"
                                                                                                      [
                                                                                                        <arg>
                                                                                                          Nolabel
                                                                                                          expression (src/deriving.ml[458,14783+42]..src/deriving.ml[458,14783+77])
                                                                                                            Texp_apply
                                                                                                            expression (src/deriving.ml[458,14783+43]..src/deriving.ml[458,14783+66])
                                                                                                              Texp_ident "resolve_actual_derivers/6344"
                                                                                                            [
                                                                                                              <arg>
                                                                                                                Nolabel
                                                                                                                expression (src/deriving.ml[458,14783+67]..src/deriving.ml[458,14783+72])
                                                                                                                  Texp_ident "field/6384"
                                                                                                              <arg>
                                                                                                                Nolabel
                                                                                                                expression (src/deriving.ml[458,14783+73]..src/deriving.ml[458,14783+76])
                                                                                                                  Texp_ident "dep/6741"
                                                                                                            ]
                                                                                                        <arg>
                                                                                                          Labelled "f"
                                                                                                          expression (src/deriving.ml[459,14861+31]..src/deriving.ml[467,15345+40])
                                                                                                            Texp_function
                                                                                                            Nolabel
                                                                                                            [
                                                                                                              <case>
                                                                                                                pattern (src/deriving.ml[459,14861+36]..src/deriving.ml[459,14861+39])
                                                                                                                  Tpat_var "drv/6742"
                                                                                                                expression (src/deriving.ml[460,14904+30]..src/deriving.ml[467,15345+39])
                                                                                                                  Texp_let Nonrec
                                                                                                                  [
                                                                                                                    <def>
                                                                                                                      pattern (src/deriving.ml[460,14904+34]..src/deriving.ml[460,14904+42])
                                                                                                                        Tpat_var "dep_name/6743"
                                                                                                                      expression (src/deriving.ml[460,14904+45]..src/deriving.ml[460,14904+53])
                                                                                                                        Texp_field
                                                                                                                        expression (src/deriving.ml[460,14904+45]..src/deriving.ml[460,14904+48])
                                                                                                                          Texp_ident "drv/6742"
                                                                                                                        "name"
                                                                                                                  ]
                                                                                                                  expression (src/deriving.ml[461,14961+30]..src/deriving.ml[467,15345+39])
                                                                                                                    Texp_ifthenelse
                                                                                                                    expression (src/deriving.ml[461,14961+33]..src/deriving.ml[461,14961+64])
                                                                                                                      Texp_apply
                                                                                                                      expression (src/deriving.ml[461,14961+33]..src/deriving.ml[461,14961+36])
                                                                                                                        Texp_ident "Stdlib!.not"
                                                                                                                      [
                                                                                                                        <arg>
                                                                                                                          Nolabel
                                                                                                                          expression (src/deriving.ml[461,14961+37]..src/deriving.ml[461,14961+64])
                                                                                                                            Texp_apply
                                                                                                                            expression (src/deriving.ml[461,14961+38]..src/deriving.ml[461,14961+49])
                                                                                                                              Texp_ident "Ppxlib__!.Import.Hashtbl.mem"
                                                                                                                            [
                                                                                                                              <arg>
                                                                                                                                Nolabel
                                                                                                                                expression (src/deriving.ml[461,14961+50]..src/deriving.ml[461,14961+54])
                                                                                                                                  Texp_ident "seen/6398"
                                                                                                                              <arg>
                                                                                                                                Nolabel
                                                                                                                                expression (src/deriving.ml[461,14961+55]..src/deriving.ml[461,14961+63])
                                                                                                                                  Texp_ident "dep_name/6743"
                                                                                                                            ]
                                                                                                                      ]
                                                                                                                    expression (src/deriving.ml[462,15031+32]..src/deriving.ml[466,15289+55])
                                                                                                                      Texp_construct "Some"
                                                                                                                      [
                                                                                                                        expression (src/deriving.ml[463,15068+34]..src/deriving.ml[466,15289+55])
                                                                                                                          Texp_apply
                                                                                                                          expression (src/deriving.ml[463,15068+35]..src/deriving.ml[463,15068+60])
                                                                                                                            Texp_ident "Ppxlib__!.Location.error_extensionf"
                                                                                                                          [
                                                                                                                            <arg>
                                                                                                                              Labelled "loc"
                                                                                                                              expression (src/deriving.ml[463,15068+66]..src/deriving.ml[463,15068+74])
                                                                                                                                Texp_field
                                                                                                                                expression (src/deriving.ml[463,15068+66]..src/deriving.ml[463,15068+70])
                                                                                                                                  Texp_ident "name/6732"
                                                                                                                                "loc"
                                                                                                                            <arg>
                                                                                                                              Nolabel
                                                                                                                              expression (src/deriving.ml[464,15143+37]..src/deriving.ml[465,15224+64])
                                                                                                                                Texp_construct "CamlinternalFormatBasics.Format"
                                                                                                                                [
                                                                                                                                  expression (src/deriving.ml[464,15143+37]..src/deriving.ml[465,15224+64]) ghost
                                                                                                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                                                    [
                                                                                                                                      expression (src/deriving.ml[464,15143+37]..src/deriving.ml[465,15224+64]) ghost
                                                                                                                                        Texp_constant Const_string("Deriver ",(src/deriving.ml[464,15143+37]..src/deriving.ml[465,15224+64]) ghost,None)
                                                                                                                                      expression (src/deriving.ml[464,15143+37]..src/deriving.ml[465,15224+64]) ghost
                                                                                                                                        Texp_construct "CamlinternalFormatBasics.String"
                                                                                                                                        [
                                                                                                                                          expression (src/deriving.ml[464,15143+37]..src/deriving.ml[465,15224+64]) ghost
                                                                                                                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                                                            []
                                                                                                                                          expression (src/deriving.ml[464,15143+37]..src/deriving.ml[465,15224+64]) ghost
                                                                                                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                                                            [
                                                                                                                                              expression (src/deriving.ml[464,15143+37]..src/deriving.ml[465,15224+64]) ghost
                                                                                                                                                Texp_constant Const_string(" is needed for ",(src/deriving.ml[464,15143+37]..src/deriving.ml[465,15224+64]) ghost,None)
                                                                                                                                              expression (src/deriving.ml[464,15143+37]..src/deriving.ml[465,15224+64]) ghost
                                                                                                                                                Texp_construct "CamlinternalFormatBasics.String"
                                                                                                                                                [
                                                                                                                                                  expression (src/deriving.ml[464,15143+37]..src/deriving.ml[465,15224+64]) ghost
                                                                                                                                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                                                                    []
                                                                                                                                                  expression (src/deriving.ml[464,15143+37]..src/deriving.ml[465,15224+64]) ghost
                                                                                                                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                                                                    [
                                                                                                                                                      expression (src/deriving.ml[464,15143+37]..src/deriving.ml[465,15224+64]) ghost
                                                                                                                                                        Texp_constant Const_string(", you need to add it before in the list",(src/deriving.ml[464,15143+37]..src/deriving.ml[465,15224+64]) ghost,None)
                                                                                                                                                      expression (src/deriving.ml[464,15143+37]..src/deriving.ml[465,15224+64]) ghost
                                                                                                                                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                                                                        []
                                                                                                                                                    ]
                                                                                                                                                ]
                                                                                                                                            ]
                                                                                                                                        ]
                                                                                                                                    ]
                                                                                                                                  expression (src/deriving.ml[464,15143+37]..src/deriving.ml[465,15224+64]) ghost
                                                                                                                                    Texp_constant Const_string("Deriver %s is needed for %s, you need to add it before in the list",(src/deriving.ml[464,15143+37]..src/deriving.ml[465,15224+64]) ghost,None)
                                                                                                                                ]
                                                                                                                            <arg>
                                                                                                                              Nolabel
                                                                                                                              expression (src/deriving.ml[466,15289+37]..src/deriving.ml[466,15289+45])
                                                                                                                                Texp_ident "dep_name/6743"
                                                                                                                            <arg>
                                                                                                                              Nolabel
                                                                                                                              expression (src/deriving.ml[466,15289+46]..src/deriving.ml[466,15289+54])
                                                                                                                                Texp_field
                                                                                                                                expression (src/deriving.ml[466,15289+46]..src/deriving.ml[466,15289+50])
                                                                                                                                  Texp_ident "name/6732"
                                                                                                                                "txt"
                                                                                                                          ]
                                                                                                                      ]
                                                                                                                    Some
                                                                                                                      expression (src/deriving.ml[467,15345+35]..src/deriving.ml[467,15345+39])
                                                                                                                        Texp_construct "None"
                                                                                                                        []
                                                                                                            ]
                                                                                                      ]
                                                                                                ]
                                                                                          ]
                                                                                    ]
                                                                                    expression (src/deriving.ml[469,15410+20]..src/deriving.ml[470,15482+37])
                                                                                      Texp_sequence
                                                                                      expression (src/deriving.ml[469,15410+20]..src/deriving.ml[469,15410+70])
                                                                                        Texp_apply
                                                                                        expression (src/deriving.ml[469,15410+20]..src/deriving.ml[469,15410+31])
                                                                                          Texp_ident "Ppxlib__!.Import.Hashtbl.set"
                                                                                        [
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (src/deriving.ml[469,15410+32]..src/deriving.ml[469,15410+36])
                                                                                              Texp_ident "seen/6398"
                                                                                          <arg>
                                                                                            Labelled "key"
                                                                                            expression (src/deriving.ml[469,15410+42]..src/deriving.ml[469,15410+61])
                                                                                              Texp_ident "actual_deriver_name/6737"
                                                                                          <arg>
                                                                                            Labelled "data"
                                                                                            expression (src/deriving.ml[469,15410+68]..src/deriving.ml[469,15410+70])
                                                                                              Texp_construct "()"
                                                                                              []
                                                                                        ]
                                                                                      expression (src/deriving.ml[470,15482+20]..src/deriving.ml[470,15482+37])
                                                                                        Texp_apply
                                                                                        expression (src/deriving.ml[470,15482+30]..src/deriving.ml[470,15482+31])
                                                                                          Texp_ident "Ppxlib__!.Import.@"
                                                                                        [
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (src/deriving.ml[470,15482+20]..src/deriving.ml[470,15482+29])
                                                                                              Texp_ident "dup_error/6739"
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (src/deriving.ml[470,15482+32]..src/deriving.ml[470,15482+37])
                                                                                              Texp_ident "l_err/6740"
                                                                                        ]
                                                                            ]
                                                                      ]
                                                                ]
                                                                expression (src/deriving.ml[472,15538+14]..src/deriving.ml[473,15615+32])
                                                                  Texp_tuple
                                                                  [
                                                                    expression (src/deriving.ml[472,15538+16]..src/deriving.ml[472,15538+75])
                                                                      Texp_apply
                                                                      expression (src/deriving.ml[472,15538+23]..src/deriving.ml[472,15538+24])
                                                                        Texp_ident "Ppxlib__!.Import.@"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/deriving.ml[472,15538+16]..src/deriving.ml[472,15538+22])
                                                                            Texp_ident "result/6730"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/deriving.ml[472,15538+25]..src/deriving.ml[472,15538+75])
                                                                            Texp_construct "::"
                                                                            [
                                                                              expression (src/deriving.ml[472,15538+27]..src/deriving.ml[472,15538+73])
                                                                                Texp_tuple
                                                                                [
                                                                                  expression (src/deriving.ml[472,15538+28]..src/deriving.ml[472,15538+32])
                                                                                    Texp_ident "name/6732"
                                                                                  expression (src/deriving.ml[472,15538+34]..src/deriving.ml[472,15538+66])
                                                                                    Texp_apply
                                                                                    expression (src/deriving.ml[472,15538+34]..src/deriving.ml[472,15538+42])
                                                                                      Texp_ident "Ppxlib__!.Import.List.map"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/deriving.ml[472,15538+43]..src/deriving.ml[472,15538+59])
                                                                                          Texp_ident "named_generators/6735"
                                                                                      <arg>
                                                                                        Labelled "f"
                                                                                        expression (src/deriving.ml[472,15538+63]..src/deriving.ml[472,15538+66])
                                                                                          Texp_ident "Stdlib!.snd"
                                                                                    ]
                                                                                  expression (src/deriving.ml[472,15538+68]..src/deriving.ml[472,15538+72])
                                                                                    Texp_ident "args/6733"
                                                                                ]
                                                                              expression (src/deriving.ml[472,15538+74]..src/deriving.ml[472,15538+75]) ghost
                                                                                Texp_construct "[]"
                                                                                []
                                                                            ]
                                                                      ]
                                                                    expression (src/deriving.ml[473,15615+16]..src/deriving.ml[473,15615+30])
                                                                      Texp_apply
                                                                      expression (src/deriving.ml[473,15615+23]..src/deriving.ml[473,15615+24])
                                                                        Texp_ident "Ppxlib__!.Import.@"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/deriving.ml[473,15615+16]..src/deriving.ml[473,15615+22])
                                                                            Texp_ident "errors/6731"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/deriving.ml[473,15615+25]..src/deriving.ml[473,15615+30])
                                                                            Texp_ident "l_err/6736"
                                                                      ]
                                                                  ]
                                                          ]
                                                          []
                                                    ]
                                              ]
                                          <arg>
                                            Labelled "init"
                                            expression (src/deriving.ml[437,13862+27]..src/deriving.ml[437,13862+35])
                                              Texp_tuple
                                              [
                                                expression (src/deriving.ml[437,13862+28]..src/deriving.ml[437,13862+30])
                                                  Texp_construct "[]"
                                                  []
                                                expression (src/deriving.ml[437,13862+32]..src/deriving.ml[437,13862+34])
                                                  Texp_construct "[]"
                                                  []
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[437,13862+36]..src/deriving.ml[437,13862+53])
                                              Texp_ident "derivers_and_args/6386"
                                        ]
                                  ]
                                  expression (src/deriving.ml[475,15656+4]..src/deriving.ml[475,15656+51])
                                    Texp_tuple
                                    [
                                      expression (src/deriving.ml[475,15656+5]..src/deriving.ml[475,15656+11])
                                        Texp_ident "result/6728"
                                      expression (src/deriving.ml[475,15656+13]..src/deriving.ml[475,15656+50])
                                        Texp_apply
                                        expression (src/deriving.ml[475,15656+38]..src/deriving.ml[475,15656+39])
                                          Texp_ident "Ppxlib__!.Import.@"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[475,15656+13]..src/deriving.ml[475,15656+37])
                                              Texp_ident "derivers_and_args_errors/6387"
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[475,15656+40]..src/deriving.ml[475,15656+50])
                                              Texp_ident "dep_errors/6729"
                                        ]
                                    ]
                        ]
                  ]
            ]
          structure_item (src/deriving.ml[477,15709+2]..src/deriving.ml[504,16545+8])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[477,15709+6]..src/deriving.ml[477,15709+9])
                  Tpat_var "add/6747"
                expression (src/deriving.ml[477,15709+10]..src/deriving.ml[504,16545+8]) ghost
                  Texp_function
                  Optional "str_type_decl"
                  [
                    <case>
                      pattern (src/deriving.ml[477,15709+11]..src/deriving.ml[477,15709+24])
                        Tpat_var "str_type_decl/6749"
                      expression (src/deriving.ml[477,15709+25]..src/deriving.ml[504,16545+8]) ghost
                        Texp_function
                        Optional "str_type_ext"
                        [
                          <case>
                            pattern (src/deriving.ml[477,15709+26]..src/deriving.ml[477,15709+38])
                              Tpat_var "str_type_ext/6750"
                            expression (src/deriving.ml[477,15709+39]..src/deriving.ml[504,16545+8]) ghost
                              Texp_function
                              Optional "str_exception"
                              [
                                <case>
                                  pattern (src/deriving.ml[477,15709+40]..src/deriving.ml[477,15709+53])
                                    Tpat_var "str_exception/6751"
                                  expression (src/deriving.ml[477,15709+54]..src/deriving.ml[504,16545+8]) ghost
                                    Texp_function
                                    Optional "str_module_type_decl"
                                    [
                                      <case>
                                        pattern (src/deriving.ml[477,15709+55]..src/deriving.ml[477,15709+75])
                                          Tpat_var "str_module_type_decl/6752"
                                        expression (src/deriving.ml[478,15785+6]..src/deriving.ml[504,16545+8]) ghost
                                          Texp_function
                                          Optional "sig_type_decl"
                                          [
                                            <case>
                                              pattern (src/deriving.ml[478,15785+7]..src/deriving.ml[478,15785+20])
                                                Tpat_var "sig_type_decl/6753"
                                              expression (src/deriving.ml[478,15785+21]..src/deriving.ml[504,16545+8]) ghost
                                                Texp_function
                                                Optional "sig_type_ext"
                                                [
                                                  <case>
                                                    pattern (src/deriving.ml[478,15785+22]..src/deriving.ml[478,15785+34])
                                                      Tpat_var "sig_type_ext/6754"
                                                    expression (src/deriving.ml[478,15785+35]..src/deriving.ml[504,16545+8]) ghost
                                                      Texp_function
                                                      Optional "sig_exception"
                                                      [
                                                        <case>
                                                          pattern (src/deriving.ml[478,15785+36]..src/deriving.ml[478,15785+49])
                                                            Tpat_var "sig_exception/6755"
                                                          expression (src/deriving.ml[478,15785+50]..src/deriving.ml[504,16545+8]) ghost
                                                            Texp_function
                                                            Optional "sig_module_type_decl"
                                                            [
                                                              <case>
                                                                pattern (src/deriving.ml[478,15785+51]..src/deriving.ml[478,15785+71])
                                                                  Tpat_var "sig_module_type_decl/6756"
                                                                expression (src/deriving.ml[479,15857+6]..src/deriving.ml[504,16545+8]) ghost
                                                                  Texp_function
                                                                  Optional "extension"
                                                                  [
                                                                    <case>
                                                                      pattern (src/deriving.ml[479,15857+7]..src/deriving.ml[479,15857+16])
                                                                        Tpat_var "extension/6757"
                                                                      expression (src/deriving.ml[479,15857+17]..src/deriving.ml[504,16545+8]) ghost
                                                                        Texp_function
                                                                        Nolabel
                                                                        [
                                                                          <case>
                                                                            pattern (src/deriving.ml[479,15857+17]..src/deriving.ml[479,15857+21])
                                                                              Tpat_var "name/6758"
                                                                            expression (src/deriving.ml[480,15881+4]..src/deriving.ml[504,16545+8])
                                                                              Texp_let Nonrec
                                                                              [
                                                                                <def>
                                                                                  pattern (src/deriving.ml[480,15881+8]..src/deriving.ml[480,15881+22])
                                                                                    Tpat_extra_constraint
                                                                                    core_type (src/deriving.ml[480,15881+25]..src/deriving.ml[480,15881+41]) ghost
                                                                                      Ttyp_poly
                                                                                      core_type (src/deriving.ml[480,15881+25]..src/deriving.ml[480,15881+41])
                                                                                        Ttyp_constr "Actual_deriver/6288.t"
                                                                                        []
                                                                                    pattern (src/deriving.ml[480,15881+8]..src/deriving.ml[480,15881+22])
                                                                                      Tpat_var "actual_deriver/6759"
                                                                                  expression (src/deriving.ml[481,15925+6]..src/deriving.ml[492,16162+7])
                                                                                    Texp_constraint
                                                                                    core_type (src/deriving.ml[480,15881+25]..src/deriving.ml[480,15881+41])
                                                                                      Ttyp_constr "Actual_deriver/6288.t"
                                                                                      []
                                                                                      Texp_record
                                                                                        fields =
                                                                                          [
                                                                                            "name"
                                                                                              expression (src/deriving.ml[482,15933+8]..src/deriving.ml[482,15933+12]) ghost
                                                                                                Texp_ident "name/6758"
                                                                                            "str_type_decl"
                                                                                              expression (src/deriving.ml[483,15947+8]..src/deriving.ml[483,15947+21]) ghost
                                                                                                Texp_ident "str_type_decl/6749"
                                                                                            "str_type_ext"
                                                                                              expression (src/deriving.ml[484,15970+8]..src/deriving.ml[484,15970+20]) ghost
                                                                                                Texp_ident "str_type_ext/6750"
                                                                                            "str_exception"
                                                                                              expression (src/deriving.ml[485,15992+8]..src/deriving.ml[485,15992+21]) ghost
                                                                                                Texp_ident "str_exception/6751"
                                                                                            "str_module_type_decl"
                                                                                              expression (src/deriving.ml[486,16015+8]..src/deriving.ml[486,16015+28]) ghost
                                                                                                Texp_ident "str_module_type_decl/6752"
                                                                                            "sig_type_decl"
                                                                                              expression (src/deriving.ml[487,16045+8]..src/deriving.ml[487,16045+21]) ghost
                                                                                                Texp_ident "sig_type_decl/6753"
                                                                                            "sig_type_ext"
                                                                                              expression (src/deriving.ml[488,16068+8]..src/deriving.ml[488,16068+20]) ghost
                                                                                                Texp_ident "sig_type_ext/6754"
                                                                                            "sig_exception"
                                                                                              expression (src/deriving.ml[489,16090+8]..src/deriving.ml[489,16090+21]) ghost
                                                                                                Texp_ident "sig_exception/6755"
                                                                                            "sig_module_type_decl"
                                                                                              expression (src/deriving.ml[490,16113+8]..src/deriving.ml[490,16113+28]) ghost
                                                                                                Texp_ident "sig_module_type_decl/6756"
                                                                                            "extension"
                                                                                              expression (src/deriving.ml[491,16143+8]..src/deriving.ml[491,16143+17]) ghost
                                                                                                Texp_ident "extension/6757"
                                                                                          ]
                                                                                        representation =
                                                                                          Record_regular
                                                                                        extended_expression =
                                                                                          None
                                                                              ]
                                                                              expression (src/deriving.ml[494,16177+4]..src/deriving.ml[504,16545+8])
                                                                                Texp_sequence
                                                                                expression (src/deriving.ml[494,16177+4]..src/deriving.ml[494,16177+66])
                                                                                  Texp_apply
                                                                                  expression (src/deriving.ml[494,16177+4]..src/deriving.ml[494,16177+25])
                                                                                    Texp_ident "Ppx_derivers!.register"
                                                                                  [
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/deriving.ml[494,16177+26]..src/deriving.ml[494,16177+30])
                                                                                        Texp_ident "name/6758"
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/deriving.ml[494,16177+31]..src/deriving.ml[494,16177+66])
                                                                                        Texp_construct "T"
                                                                                        [
                                                                                          expression (src/deriving.ml[494,16177+34]..src/deriving.ml[494,16177+65])
                                                                                            Texp_construct "Actual_deriver"
                                                                                            [
                                                                                              expression (src/deriving.ml[494,16177+50]..src/deriving.ml[494,16177+64])
                                                                                                Texp_ident "actual_deriver/6759"
                                                                                            ]
                                                                                        ]
                                                                                  ]
                                                                                expression (src/deriving.ml[495,16245+4]..src/deriving.ml[504,16545+8])
                                                                                  Texp_sequence
                                                                                  expression (src/deriving.ml[495,16245+4]..src/deriving.ml[503,16484+59])
                                                                                    Texp_match
                                                                                    expression (src/deriving.ml[495,16245+11]..src/deriving.ml[495,16245+20])
                                                                                      Texp_ident "extension/6757"
                                                                                    [
                                                                                      <case>
                                                                                        pattern (src/deriving.ml[496,16271+6]..src/deriving.ml[496,16271+10])
                                                                                          Tpat_value
                                                                                          pattern (src/deriving.ml[496,16271+6]..src/deriving.ml[496,16271+10])
                                                                                            Tpat_construct "None"
                                                                                            []
                                                                                        expression (src/deriving.ml[496,16271+14]..src/deriving.ml[496,16271+16])
                                                                                          Texp_construct "()"
                                                                                          []
                                                                                      <case>
                                                                                        pattern (src/deriving.ml[497,16288+6]..src/deriving.ml[497,16288+12])
                                                                                          Tpat_value
                                                                                          pattern (src/deriving.ml[497,16288+6]..src/deriving.ml[497,16288+12])
                                                                                            Tpat_construct "Some"
                                                                                            [
                                                                                              pattern (src/deriving.ml[497,16288+11]..src/deriving.ml[497,16288+12])
                                                                                                Tpat_var "f/6760"
                                                                                            ]
                                                                                        expression (src/deriving.ml[498,16304+8]..src/deriving.ml[503,16484+58])
                                                                                          Texp_let Nonrec
                                                                                          [
                                                                                            <def>
                                                                                              pattern (src/deriving.ml[498,16304+12]..src/deriving.ml[498,16304+21])
                                                                                                Tpat_var "extension/6761"
                                                                                              expression (src/deriving.ml[499,16328+10]..src/deriving.ml[499,16328+67])
                                                                                                Texp_apply
                                                                                                expression (src/deriving.ml[499,16328+10]..src/deriving.ml[499,16328+27])
                                                                                                  Texp_ident "Ppxlib__!.Extension.declare"
                                                                                                [
                                                                                                  <arg>
                                                                                                    Nolabel
                                                                                                    expression (src/deriving.ml[499,16328+28]..src/deriving.ml[499,16328+32])
                                                                                                      Texp_ident "name/6758"
                                                                                                  <arg>
                                                                                                    Nolabel
                                                                                                    expression (src/deriving.ml[499,16328+33]..src/deriving.ml[499,16328+43])
                                                                                                      Texp_construct "Expression"
                                                                                                      []
                                                                                                  <arg>
                                                                                                    Nolabel
                                                                                                    expression (src/deriving.ml[499,16328+44]..src/deriving.ml[499,16328+65])
                                                                                                      Texp_open Fresh
                                                                                                      module_expr (src/deriving.ml[499,16328+44]..src/deriving.ml[499,16328+55])
                                                                                                        Tmod_ident "Ppxlib__!.Ast_pattern"
                                                                                                      expression (src/deriving.ml[499,16328+57]..src/deriving.ml[499,16328+64])
                                                                                                        Texp_apply
                                                                                                        expression (src/deriving.ml[499,16328+57]..src/deriving.ml[499,16328+61])
                                                                                                          Texp_ident "Ppxlib__!.Ast_pattern.ptyp"
                                                                                                        [
                                                                                                          <arg>
                                                                                                            Nolabel
                                                                                                            expression (src/deriving.ml[499,16328+62]..src/deriving.ml[499,16328+64])
                                                                                                              Texp_ident "Ppxlib__!.Ast_pattern.__"
                                                                                                        ]
                                                                                                  <arg>
                                                                                                    Nolabel
                                                                                                    expression (src/deriving.ml[499,16328+66]..src/deriving.ml[499,16328+67])
                                                                                                      Texp_ident "f/6760"
                                                                                                ]
                                                                                          ]
                                                                                          expression (src/deriving.ml[501,16407+8]..src/deriving.ml[503,16484+58])
                                                                                            Texp_apply
                                                                                            expression (src/deriving.ml[501,16407+8]..src/deriving.ml[501,16407+38])
                                                                                              Texp_ident "Ppxlib__!.Driver.register_transformation"
                                                                                            [
                                                                                              <arg>
                                                                                                Optional "extensions"
                                                                                                expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                                                                                  Texp_construct "None"
                                                                                                  []
                                                                                              <arg>
                                                                                                Optional "rules"
                                                                                                expression (src/deriving.ml[503,16484+17]..src/deriving.ml[503,16484+58])
                                                                                                  Texp_construct "Some"
                                                                                                  [
                                                                                                    expression (src/deriving.ml[503,16484+17]..src/deriving.ml[503,16484+58])
                                                                                                      Texp_construct "::"
                                                                                                      [
                                                                                                        expression (src/deriving.ml[503,16484+19]..src/deriving.ml[503,16484+56])
                                                                                                          Texp_apply
                                                                                                          expression (src/deriving.ml[503,16484+19]..src/deriving.ml[503,16484+46])
                                                                                                            Texp_ident "Ppxlib__!.Context_free.Rule.extension"
                                                                                                          [
                                                                                                            <arg>
                                                                                                              Nolabel
                                                                                                              expression (src/deriving.ml[503,16484+47]..src/deriving.ml[503,16484+56])
                                                                                                                Texp_ident "extension/6761"
                                                                                                          ]
                                                                                                        expression (src/deriving.ml[503,16484+57]..src/deriving.ml[503,16484+58]) ghost
                                                                                                          Texp_construct "[]"
                                                                                                          []
                                                                                                      ]
                                                                                                  ]
                                                                                              <arg>
                                                                                                Optional "enclose_impl"
                                                                                                expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                                                                                  Texp_construct "None"
                                                                                                  []
                                                                                              <arg>
                                                                                                Optional "enclose_intf"
                                                                                                expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                                                                                  Texp_construct "None"
                                                                                                  []
                                                                                              <arg>
                                                                                                Optional "impl"
                                                                                                expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                                                                                  Texp_construct "None"
                                                                                                  []
                                                                                              <arg>
                                                                                                Optional "intf"
                                                                                                expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                                                                                  Texp_construct "None"
                                                                                                  []
                                                                                              <arg>
                                                                                                Optional "lint_impl"
                                                                                                expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                                                                                  Texp_construct "None"
                                                                                                  []
                                                                                              <arg>
                                                                                                Optional "lint_intf"
                                                                                                expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                                                                                  Texp_construct "None"
                                                                                                  []
                                                                                              <arg>
                                                                                                Optional "preprocess_impl"
                                                                                                expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                                                                                  Texp_construct "None"
                                                                                                  []
                                                                                              <arg>
                                                                                                Optional "preprocess_intf"
                                                                                                expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                                                                                  Texp_construct "None"
                                                                                                  []
                                                                                              <arg>
                                                                                                Optional "instrument"
                                                                                                expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                                                                                  Texp_construct "None"
                                                                                                  []
                                                                                              <arg>
                                                                                                Optional "aliases"
                                                                                                expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                                                                                  Texp_construct "None"
                                                                                                  []
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/deriving.ml[502,16446+10]..src/deriving.ml[502,16446+37])
                                                                                                  Texp_apply
                                                                                                  expression (src/deriving.ml[502,16446+30]..src/deriving.ml[502,16446+31])
                                                                                                    Texp_ident "Stdlib!.^"
                                                                                                  [
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/deriving.ml[502,16446+11]..src/deriving.ml[502,16446+29])
                                                                                                        Texp_constant Const_string("Ppxlib.Deriving.",(src/deriving.ml[502,16446+12]..src/deriving.ml[502,16446+28]),None)
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/deriving.ml[502,16446+32]..src/deriving.ml[502,16446+36])
                                                                                                        Texp_ident "name/6758"
                                                                                                  ]
                                                                                            ]
                                                                                    ]
                                                                                    []
                                                                                  expression (src/deriving.ml[504,16545+4]..src/deriving.ml[504,16545+8])
                                                                                    Texp_ident "name/6758"
                                                                        ]
                                                                  ]
                                                            ]
                                                      ]
                                                ]
                                          ]
                                    ]
                              ]
                        ]
                  ]
            ]
          structure_item (src/deriving.ml[506,16555+2]..src/deriving.ml[523,17251+8])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/deriving.ml[506,16555+6]..src/deriving.ml[506,16555+15])
                  Tpat_var "add_alias/6960"
                expression (src/deriving.ml[506,16555+16]..src/deriving.ml[523,17251+8]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/deriving.ml[506,16555+16]..src/deriving.ml[506,16555+20])
                        Tpat_var "name/6962"
                      expression (src/deriving.ml[506,16555+21]..src/deriving.ml[523,17251+8]) ghost
                        Texp_function
                        Optional "str_type_decl"
                        [
                          <case>
                            pattern (src/deriving.ml[506,16555+22]..src/deriving.ml[506,16555+35])
                              Tpat_var "str_type_decl/6963"
                            expression (src/deriving.ml[506,16555+36]..src/deriving.ml[523,17251+8]) ghost
                              Texp_function
                              Optional "str_type_ext"
                              [
                                <case>
                                  pattern (src/deriving.ml[506,16555+37]..src/deriving.ml[506,16555+49])
                                    Tpat_var "str_type_ext/6964"
                                  expression (src/deriving.ml[506,16555+50]..src/deriving.ml[523,17251+8]) ghost
                                    Texp_function
                                    Optional "str_exception"
                                    [
                                      <case>
                                        pattern (src/deriving.ml[506,16555+51]..src/deriving.ml[506,16555+64])
                                          Tpat_var "str_exception/6965"
                                        expression (src/deriving.ml[507,16620+6]..src/deriving.ml[523,17251+8]) ghost
                                          Texp_function
                                          Optional "str_module_type_decl"
                                          [
                                            <case>
                                              pattern (src/deriving.ml[507,16620+7]..src/deriving.ml[507,16620+27])
                                                Tpat_var "str_module_type_decl/6966"
                                              expression (src/deriving.ml[507,16620+28]..src/deriving.ml[523,17251+8]) ghost
                                                Texp_function
                                                Optional "sig_type_decl"
                                                [
                                                  <case>
                                                    pattern (src/deriving.ml[507,16620+29]..src/deriving.ml[507,16620+42])
                                                      Tpat_var "sig_type_decl/6967"
                                                    expression (src/deriving.ml[507,16620+43]..src/deriving.ml[523,17251+8]) ghost
                                                      Texp_function
                                                      Optional "sig_type_ext"
                                                      [
                                                        <case>
                                                          pattern (src/deriving.ml[507,16620+44]..src/deriving.ml[507,16620+56])
                                                            Tpat_var "sig_type_ext/6968"
                                                          expression (src/deriving.ml[507,16620+57]..src/deriving.ml[523,17251+8]) ghost
                                                            Texp_function
                                                            Optional "sig_exception"
                                                            [
                                                              <case>
                                                                pattern (src/deriving.ml[507,16620+58]..src/deriving.ml[507,16620+71])
                                                                  Tpat_var "sig_exception/6969"
                                                                expression (src/deriving.ml[508,16692+6]..src/deriving.ml[523,17251+8]) ghost
                                                                  Texp_function
                                                                  Optional "sig_module_type_decl"
                                                                  [
                                                                    <case>
                                                                      pattern (src/deriving.ml[508,16692+7]..src/deriving.ml[508,16692+27])
                                                                        Tpat_var "sig_module_type_decl/6970"
                                                                      expression (src/deriving.ml[508,16692+28]..src/deriving.ml[523,17251+8]) ghost
                                                                        Texp_function
                                                                        Nolabel
                                                                        [
                                                                          <case>
                                                                            pattern (src/deriving.ml[508,16692+28]..src/deriving.ml[508,16692+31])
                                                                              Tpat_var "set/6971"
                                                                            expression (src/deriving.ml[509,16726+4]..src/deriving.ml[523,17251+8])
                                                                              Texp_let Nonrec
                                                                              [
                                                                                <def>
                                                                                  pattern (src/deriving.ml[509,16726+8]..src/deriving.ml[509,16726+13])
                                                                                    Tpat_extra_constraint
                                                                                    core_type (src/deriving.ml[509,16726+16]..src/deriving.ml[509,16726+23]) ghost
                                                                                      Ttyp_poly
                                                                                      core_type (src/deriving.ml[509,16726+16]..src/deriving.ml[509,16726+23])
                                                                                        Ttyp_constr "Alias/6298.t"
                                                                                        []
                                                                                    pattern (src/deriving.ml[509,16726+8]..src/deriving.ml[509,16726+13])
                                                                                      Tpat_var "alias/6972"
                                                                                  expression (src/deriving.ml[510,16752+6]..src/deriving.ml[520,17186+7])
                                                                                    Texp_constraint
                                                                                    core_type (src/deriving.ml[509,16726+16]..src/deriving.ml[509,16726+23])
                                                                                      Ttyp_constr "Alias/6298.t"
                                                                                      []
                                                                                      Texp_let Nonrec
                                                                                      [
                                                                                        <def>
                                                                                          pattern (src/deriving.ml[510,16752+10]..src/deriving.ml[510,16752+13])
                                                                                            Tpat_var "get/6973"
                                                                                          expression (src/deriving.ml[510,16752+16]..src/deriving.ml[510,16752+54])
                                                                                            Texp_function
                                                                                            Nolabel
                                                                                            [
                                                                                              <case>
                                                                                                pattern (src/deriving.ml[510,16752+25]..src/deriving.ml[510,16752+29])
                                                                                                  Tpat_construct "None"
                                                                                                  []
                                                                                                expression (src/deriving.ml[510,16752+33]..src/deriving.ml[510,16752+36])
                                                                                                  Texp_ident "set/6971"
                                                                                              <case>
                                                                                                pattern (src/deriving.ml[510,16752+39]..src/deriving.ml[510,16752+47])
                                                                                                  Tpat_construct "Some"
                                                                                                  [
                                                                                                    pattern (src/deriving.ml[510,16752+44]..src/deriving.ml[510,16752+47])
                                                                                                      Tpat_var "set/6975"
                                                                                                  ]
                                                                                                expression (src/deriving.ml[510,16752+51]..src/deriving.ml[510,16752+54])
                                                                                                  Texp_ident "set/6975"
                                                                                            ]
                                                                                      ]
                                                                                      expression (src/deriving.ml[511,16810+6]..src/deriving.ml[520,17186+7])
                                                                                        Texp_record
                                                                                          fields =
                                                                                            [
                                                                                              "str_type_decl"
                                                                                                expression (src/deriving.ml[512,16818+24]..src/deriving.ml[512,16818+41])
                                                                                                  Texp_apply
                                                                                                  expression (src/deriving.ml[512,16818+24]..src/deriving.ml[512,16818+27])
                                                                                                    Texp_ident "get/6973"
                                                                                                  [
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/deriving.ml[512,16818+28]..src/deriving.ml[512,16818+41])
                                                                                                        Texp_ident "str_type_decl/6963"
                                                                                                  ]
                                                                                              "str_type_ext"
                                                                                                expression (src/deriving.ml[513,16861+23]..src/deriving.ml[513,16861+39])
                                                                                                  Texp_apply
                                                                                                  expression (src/deriving.ml[513,16861+23]..src/deriving.ml[513,16861+26])
                                                                                                    Texp_ident "get/6973"
                                                                                                  [
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/deriving.ml[513,16861+27]..src/deriving.ml[513,16861+39])
                                                                                                        Texp_ident "str_type_ext/6964"
                                                                                                  ]
                                                                                              "str_exception"
                                                                                                expression (src/deriving.ml[514,16902+24]..src/deriving.ml[514,16902+41])
                                                                                                  Texp_apply
                                                                                                  expression (src/deriving.ml[514,16902+24]..src/deriving.ml[514,16902+27])
                                                                                                    Texp_ident "get/6973"
                                                                                                  [
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/deriving.ml[514,16902+28]..src/deriving.ml[514,16902+41])
                                                                                                        Texp_ident "str_exception/6965"
                                                                                                  ]
                                                                                              "str_module_type_decl"
                                                                                                expression (src/deriving.ml[515,16945+31]..src/deriving.ml[515,16945+55])
                                                                                                  Texp_apply
                                                                                                  expression (src/deriving.ml[515,16945+31]..src/deriving.ml[515,16945+34])
                                                                                                    Texp_ident "get/6973"
                                                                                                  [
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/deriving.ml[515,16945+35]..src/deriving.ml[515,16945+55])
                                                                                                        Texp_ident "str_module_type_decl/6966"
                                                                                                  ]
                                                                                              "sig_type_decl"
                                                                                                expression (src/deriving.ml[516,17002+24]..src/deriving.ml[516,17002+41])
                                                                                                  Texp_apply
                                                                                                  expression (src/deriving.ml[516,17002+24]..src/deriving.ml[516,17002+27])
                                                                                                    Texp_ident "get/6973"
                                                                                                  [
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/deriving.ml[516,17002+28]..src/deriving.ml[516,17002+41])
                                                                                                        Texp_ident "sig_type_decl/6967"
                                                                                                  ]
                                                                                              "sig_type_ext"
                                                                                                expression (src/deriving.ml[517,17045+23]..src/deriving.ml[517,17045+39])
                                                                                                  Texp_apply
                                                                                                  expression (src/deriving.ml[517,17045+23]..src/deriving.ml[517,17045+26])
                                                                                                    Texp_ident "get/6973"
                                                                                                  [
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/deriving.ml[517,17045+27]..src/deriving.ml[517,17045+39])
                                                                                                        Texp_ident "sig_type_ext/6968"
                                                                                                  ]
                                                                                              "sig_exception"
                                                                                                expression (src/deriving.ml[518,17086+24]..src/deriving.ml[518,17086+41])
                                                                                                  Texp_apply
                                                                                                  expression (src/deriving.ml[518,17086+24]..src/deriving.ml[518,17086+27])
                                                                                                    Texp_ident "get/6973"
                                                                                                  [
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/deriving.ml[518,17086+28]..src/deriving.ml[518,17086+41])
                                                                                                        Texp_ident "sig_exception/6969"
                                                                                                  ]
                                                                                              "sig_module_type_decl"
                                                                                                expression (src/deriving.ml[519,17129+31]..src/deriving.ml[519,17129+55])
                                                                                                  Texp_apply
                                                                                                  expression (src/deriving.ml[519,17129+31]..src/deriving.ml[519,17129+34])
                                                                                                    Texp_ident "get/6973"
                                                                                                  [
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/deriving.ml[519,17129+35]..src/deriving.ml[519,17129+55])
                                                                                                        Texp_ident "sig_module_type_decl/6970"
                                                                                                  ]
                                                                                            ]
                                                                                          representation =
                                                                                            Record_regular
                                                                                          extended_expression =
                                                                                            None
                                                                              ]
                                                                              expression (src/deriving.ml[522,17201+4]..src/deriving.ml[523,17251+8])
                                                                                Texp_sequence
                                                                                expression (src/deriving.ml[522,17201+4]..src/deriving.ml[522,17201+48])
                                                                                  Texp_apply
                                                                                  expression (src/deriving.ml[522,17201+4]..src/deriving.ml[522,17201+25])
                                                                                    Texp_ident "Ppx_derivers!.register"
                                                                                  [
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/deriving.ml[522,17201+26]..src/deriving.ml[522,17201+30])
                                                                                        Texp_ident "name/6962"
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/deriving.ml[522,17201+31]..src/deriving.ml[522,17201+48])
                                                                                        Texp_construct "T"
                                                                                        [
                                                                                          expression (src/deriving.ml[522,17201+34]..src/deriving.ml[522,17201+47])
                                                                                            Texp_construct "Alias"
                                                                                            [
                                                                                              expression (src/deriving.ml[522,17201+41]..src/deriving.ml[522,17201+46])
                                                                                                Texp_ident "alias/6972"
                                                                                            ]
                                                                                        ]
                                                                                  ]
                                                                                expression (src/deriving.ml[523,17251+4]..src/deriving.ml[523,17251+8])
                                                                                  Texp_ident "name/6962"
                                                                        ]
                                                                  ]
                                                            ]
                                                      ]
                                                ]
                                          ]
                                    ]
                              ]
                        ]
                  ]
            ]
        ]
  structure_item (src/deriving.ml[526,17265+0]..src/deriving.ml[526,17265+21])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[526,17265+4]..src/deriving.ml[526,17265+7])
          Tpat_var "add/6978"
        expression (src/deriving.ml[526,17265+10]..src/deriving.ml[526,17265+21])
          Texp_ident "Deriver/6977.add"
    ]
  structure_item (src/deriving.ml[527,17287+0]..src/deriving.ml[527,17287+33])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[527,17287+4]..src/deriving.ml[527,17287+13])
          Tpat_var "add_alias/6979"
        expression (src/deriving.ml[527,17287+16]..src/deriving.ml[527,17287+33])
          Texp_ident "Deriver/6977.add_alias"
    ]
  structure_item (src/deriving.ml[533,17539+0]..src/deriving.ml[534,17563+69])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[533,17539+4]..src/deriving.ml[533,17539+16])
          Tpat_var "invalid_with/6980"
        expression (src/deriving.ml[533,17539+17]..src/deriving.ml[534,17563+69]) ghost
          Texp_function
          Labelled "loc"
          [
            <case>
              pattern (src/deriving.ml[533,17539+18]..src/deriving.ml[533,17539+21])
                Tpat_var "loc/6982"
              expression (src/deriving.ml[534,17563+2]..src/deriving.ml[534,17563+69])
                Texp_apply
                expression (src/deriving.ml[534,17563+2]..src/deriving.ml[534,17563+23])
                  Texp_ident "Ppxlib__!.Location.raise_errorf"
                [
                  <arg>
                    Optional "loc"
                    expression (src/deriving.ml[534,17563+25]..src/deriving.ml[534,17563+28])
                      Texp_construct "Some"
                      [
                        expression (src/deriving.ml[534,17563+25]..src/deriving.ml[534,17563+28])
                          Texp_ident "loc/6982"
                      ]
                  <arg>
                    Nolabel
                    expression (src/deriving.ml[534,17563+29]..src/deriving.ml[534,17563+69])
                      Texp_construct "CamlinternalFormatBasics.Format"
                      [
                        expression (src/deriving.ml[534,17563+29]..src/deriving.ml[534,17563+69]) ghost
                          Texp_construct "CamlinternalFormatBasics.String_literal"
                          [
                            expression (src/deriving.ml[534,17563+29]..src/deriving.ml[534,17563+69]) ghost
                              Texp_constant Const_string("invalid [",(src/deriving.ml[534,17563+29]..src/deriving.ml[534,17563+69]) ghost,None)
                            expression (src/deriving.ml[534,17563+29]..src/deriving.ml[534,17563+69]) ghost
                              Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                              [
                                expression (src/deriving.ml[534,17563+29]..src/deriving.ml[534,17563+69]) ghost
                                  Texp_construct "CamlinternalFormatBasics.Escaped_at"
                                  []
                                expression (src/deriving.ml[534,17563+29]..src/deriving.ml[534,17563+69]) ghost
                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                  [
                                    expression (src/deriving.ml[534,17563+29]..src/deriving.ml[534,17563+69]) ghost
                                      Texp_constant Const_string("deriving ] attribute syntax",(src/deriving.ml[534,17563+29]..src/deriving.ml[534,17563+69]) ghost,None)
                                    expression (src/deriving.ml[534,17563+29]..src/deriving.ml[534,17563+69]) ghost
                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                      []
                                  ]
                              ]
                          ]
                        expression (src/deriving.ml[534,17563+29]..src/deriving.ml[534,17563+69]) ghost
                          Texp_constant Const_string("invalid [@@deriving ] attribute syntax",(src/deriving.ml[534,17563+29]..src/deriving.ml[534,17563+69]) ghost,None)
                      ]
                ]
          ]
    ]
  structure_item (src/deriving.ml[536,17634+0]..src/deriving.ml[539,17755+36])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[536,17634+4]..src/deriving.ml[536,17634+24])
          Tpat_var "generator_name_of_id/6983"
        expression (src/deriving.ml[536,17634+25]..src/deriving.ml[539,17755+36]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/deriving.ml[536,17634+25]..src/deriving.ml[536,17634+28])
                Tpat_var "loc/6985"
              expression (src/deriving.ml[536,17634+29]..src/deriving.ml[539,17755+36]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/deriving.ml[536,17634+29]..src/deriving.ml[536,17634+31])
                      Tpat_var "id/6986"
                    expression (src/deriving.ml[537,17668+2]..src/deriving.ml[539,17755+36])
                      Texp_match
                      expression (src/deriving.ml[537,17668+8]..src/deriving.ml[537,17668+32])
                        Texp_apply
                        expression (src/deriving.ml[537,17668+8]..src/deriving.ml[537,17668+29])
                          Texp_ident "Ppxlib__!.Longident.flatten_exn"
                        [
                          <arg>
                            Nolabel
                            expression (src/deriving.ml[537,17668+30]..src/deriving.ml[537,17668+32])
                              Texp_ident "id/6986"
                        ]
                      [
                        <case>
                          pattern (src/deriving.ml[538,17706+4]..src/deriving.ml[538,17706+5])
                            Tpat_value
                            pattern (src/deriving.ml[538,17706+4]..src/deriving.ml[538,17706+5])
                              Tpat_var "l/7089"
                          expression (src/deriving.ml[538,17706+9]..src/deriving.ml[538,17706+48])
                            Texp_record
                              fields =
                                [
                                  "txt"
                                    expression (src/deriving.ml[538,17706+22]..src/deriving.ml[538,17706+46])
                                      Texp_apply
                                      expression (src/deriving.ml[538,17706+22]..src/deriving.ml[538,17706+35])
                                        Texp_ident "Ppxlib__!.Import.String.concat"
                                      [
                                        <arg>
                                          Labelled "sep"
                                          expression (src/deriving.ml[538,17706+41]..src/deriving.ml[538,17706+44])
                                            Texp_constant Const_string(".",(src/deriving.ml[538,17706+42]..src/deriving.ml[538,17706+43]),None)
                                        <arg>
                                          Nolabel
                                          expression (src/deriving.ml[538,17706+45]..src/deriving.ml[538,17706+46])
                                            Texp_ident "l/7089"
                                      ]
                                  "loc"
                                    expression (src/deriving.ml[538,17706+11]..src/deriving.ml[538,17706+14]) ghost
                                      Texp_ident "loc/6985"
                                ]
                              representation =
                                Record_regular
                              extended_expression =
                                None
                        <case>
                          pattern (src/deriving.ml[539,17755+4]..src/deriving.ml[539,17755+15])
                            Tpat_exception
                            pattern (src/deriving.ml[539,17755+14]..src/deriving.ml[539,17755+15])
                              Tpat_any
                          expression (src/deriving.ml[539,17755+19]..src/deriving.ml[539,17755+36])
                            Texp_apply
                            expression (src/deriving.ml[539,17755+19]..src/deriving.ml[539,17755+31])
                              Texp_ident "invalid_with/6980"
                            [
                              <arg>
                                Labelled "loc"
                                expression (src/deriving.ml[539,17755+33]..src/deriving.ml[539,17755+36])
                                  Texp_ident "loc/6985"
                            ]
                      ]
                      []
                ]
          ]
    ]
  structure_item (src/deriving.ml[541,17793+0]..src/deriving.ml[541,17793+47])
    Tstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (src/deriving.ml[541,17793+0]..src/deriving.ml[541,17793+47])
          pext_name = "Unknown_syntax/7090"
          pext_kind =
            Text_decl
              [
                core_type (src/deriving.ml[541,17793+28]..src/deriving.ml[541,17793+38])
                  Ttyp_constr "Ppxlib__!.Location.t"
                  []
                core_type (src/deriving.ml[541,17793+41]..src/deriving.ml[541,17793+47])
                  Ttyp_constr "string/17!"
                  []
              ]
              None
  structure_item (src/deriving.ml[543,17842+0]..src/deriving.ml[572,18852+61])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[543,17842+4]..src/deriving.ml[543,17842+19])
          Tpat_var "parse_arguments/7091"
        expression (src/deriving.ml[543,17842+20]..src/deriving.ml[572,18852+61]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/deriving.ml[543,17842+20]..src/deriving.ml[543,17842+21])
                Tpat_var "l/7093"
              expression (src/deriving.ml[544,17866+2]..src/deriving.ml[572,18852+61])
                Texp_try
                expression (src/deriving.ml[545,17872+4]..src/deriving.ml[571,18767+84])
                  Texp_construct "Args"
                  [
                    expression (src/deriving.ml[546,17881+6]..src/deriving.ml[571,18767+84])
                      Texp_match
                      expression (src/deriving.ml[546,17881+13]..src/deriving.ml[546,17881+14])
                        Texp_ident "l/7093"
                      [
                        <case>
                          pattern (src/deriving.ml[547,17901+8]..src/deriving.ml[547,17901+24])
                            Tpat_value
                            pattern (src/deriving.ml[547,17901+8]..src/deriving.ml[547,17901+24])
                              Tpat_construct "::"
                              [
                                pattern (src/deriving.ml[547,17901+10]..src/deriving.ml[547,17901+22])
                                  Tpat_tuple
                                  [
                                    pattern (src/deriving.ml[547,17901+11]..src/deriving.ml[547,17901+18])
                                      Tpat_construct "Nolabel"
                                      []
                                    pattern (src/deriving.ml[547,17901+20]..src/deriving.ml[547,17901+21])
                                      Tpat_var "e/7094"
                                  ]
                                pattern (src/deriving.ml[547,17901+23]..src/deriving.ml[547,17901+24]) ghost
                                  Tpat_construct "[]"
                                  []
                              ]
                          expression (src/deriving.ml[547,17901+28]..src/deriving.ml[563,18471+76])
                            Texp_match
                            expression (src/deriving.ml[548,17931+16]..src/deriving.ml[548,17931+27])
                              Texp_field
                              expression (src/deriving.ml[548,17931+16]..src/deriving.ml[548,17931+17])
                                Texp_ident "e/7094"
                              "pexp_desc"
                            [
                              <case>
                                pattern (src/deriving.ml[549,17964+12]..src/deriving.ml[549,17964+38])
                                  Tpat_value
                                  pattern (src/deriving.ml[549,17964+12]..src/deriving.ml[549,17964+38])
                                    Tpat_construct "Pexp_record"
                                    [
                                      pattern (src/deriving.ml[549,17964+25]..src/deriving.ml[549,17964+31])
                                        Tpat_var "fields/7096"
                                      pattern (src/deriving.ml[549,17964+33]..src/deriving.ml[549,17964+37])
                                        Tpat_construct "None"
                                        []
                                    ]
                                expression (src/deriving.ml[550,18006+14]..src/deriving.ml[558,18329+31])
                                  Texp_apply
                                  expression (src/deriving.ml[550,18006+14]..src/deriving.ml[550,18006+22])
                                    Texp_ident "Ppxlib__!.Import.List.map"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/deriving.ml[550,18006+23]..src/deriving.ml[550,18006+29])
                                        Texp_ident "fields/7096"
                                    <arg>
                                      Labelled "f"
                                      expression (src/deriving.ml[550,18006+33]..src/deriving.ml[558,18329+31])
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/deriving.ml[550,18006+38]..src/deriving.ml[550,18006+48])
                                              Tpat_tuple
                                              [
                                                pattern (src/deriving.ml[550,18006+39]..src/deriving.ml[550,18006+41])
                                                  Tpat_var "id/7097"
                                                pattern (src/deriving.ml[550,18006+43]..src/deriving.ml[550,18006+47])
                                                  Tpat_var "expr/7098"
                                              ]
                                            expression (src/deriving.ml[551,18058+18]..src/deriving.ml[558,18329+30])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/deriving.ml[551,18058+22]..src/deriving.ml[551,18058+26])
                                                    Tpat_var "name/7099"
                                                  expression (src/deriving.ml[552,18087+20]..src/deriving.ml[556,18226+81])
                                                    Texp_match
                                                    expression (src/deriving.ml[552,18087+26]..src/deriving.ml[552,18087+32])
                                                      Texp_field
                                                      expression (src/deriving.ml[552,18087+26]..src/deriving.ml[552,18087+28])
                                                        Texp_ident "id/7097"
                                                      "txt"
                                                    [
                                                      <case>
                                                        pattern (src/deriving.ml[553,18125+22]..src/deriving.ml[553,18125+30])
                                                          Tpat_value
                                                          pattern (src/deriving.ml[553,18125+22]..src/deriving.ml[553,18125+30])
                                                            Tpat_construct "Lident"
                                                            [
                                                              pattern (src/deriving.ml[553,18125+29]..src/deriving.ml[553,18125+30])
                                                                Tpat_var "s/7100"
                                                            ]
                                                        expression (src/deriving.ml[553,18125+34]..src/deriving.ml[553,18125+35])
                                                          Texp_ident "s/7100"
                                                      <case>
                                                        pattern (src/deriving.ml[554,18161+22]..src/deriving.ml[554,18161+23])
                                                          Tpat_value
                                                          pattern (src/deriving.ml[554,18161+22]..src/deriving.ml[554,18161+23])
                                                            Tpat_any
                                                        expression (src/deriving.ml[555,18188+24]..src/deriving.ml[556,18226+81])
                                                          Texp_apply
                                                          expression (src/deriving.ml[555,18188+24]..src/deriving.ml[555,18188+37])
                                                            Texp_ident "Stdlib!.raise_notrace"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/deriving.ml[556,18226+26]..src/deriving.ml[556,18226+81])
                                                                Texp_construct "Unknown_syntax"
                                                                [
                                                                  expression (src/deriving.ml[556,18226+43]..src/deriving.ml[556,18226+49])
                                                                    Texp_field
                                                                    expression (src/deriving.ml[556,18226+43]..src/deriving.ml[556,18226+45])
                                                                      Texp_ident "id/7097"
                                                                    "loc"
                                                                  expression (src/deriving.ml[556,18226+51]..src/deriving.ml[556,18226+79])
                                                                    Texp_constant Const_string("simple identifier expected",(src/deriving.ml[556,18226+52]..src/deriving.ml[556,18226+78]),None)
                                                                ]
                                                          ]
                                                    ]
                                                    []
                                              ]
                                              expression (src/deriving.ml[558,18329+18]..src/deriving.ml[558,18329+30])
                                                Texp_tuple
                                                [
                                                  expression (src/deriving.ml[558,18329+19]..src/deriving.ml[558,18329+23])
                                                    Texp_ident "name/7099"
                                                  expression (src/deriving.ml[558,18329+25]..src/deriving.ml[558,18329+29])
                                                    Texp_ident "expr/7098"
                                                ]
                                        ]
                                  ]
                              <case>
                                pattern (src/deriving.ml[559,18361+12]..src/deriving.ml[559,18361+13])
                                  Tpat_value
                                  pattern (src/deriving.ml[559,18361+12]..src/deriving.ml[559,18361+13])
                                    Tpat_any
                                expression (src/deriving.ml[560,18378+14]..src/deriving.ml[563,18471+75])
                                  Texp_apply
                                  expression (src/deriving.ml[560,18378+14]..src/deriving.ml[560,18378+27])
                                    Texp_ident "Stdlib!.raise_notrace"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/deriving.ml[561,18406+16]..src/deriving.ml[563,18471+75])
                                        Texp_construct "Unknown_syntax"
                                        [
                                          expression (src/deriving.ml[562,18438+21]..src/deriving.ml[562,18438+31])
                                            Texp_field
                                            expression (src/deriving.ml[562,18438+21]..src/deriving.ml[562,18438+22])
                                              Texp_ident "e/7094"
                                            "pexp_loc"
                                          expression (src/deriving.ml[563,18471+21]..src/deriving.ml[563,18471+72])
                                            Texp_constant Const_string("non-optional labelled argument or record expected",(src/deriving.ml[563,18471+22]..src/deriving.ml[563,18471+71]),None)
                                        ]
                                  ]
                            ]
                            []
                        <case>
                          pattern (src/deriving.ml[564,18548+8]..src/deriving.ml[564,18548+9])
                            Tpat_value
                            pattern (src/deriving.ml[564,18548+8]..src/deriving.ml[564,18548+9])
                              Tpat_var "l/7095"
                          expression (src/deriving.ml[565,18561+10]..src/deriving.ml[571,18767+83])
                            Texp_apply
                            expression (src/deriving.ml[565,18561+10]..src/deriving.ml[565,18561+18])
                              Texp_ident "Ppxlib__!.Import.List.map"
                            [
                              <arg>
                                Nolabel
                                expression (src/deriving.ml[565,18561+19]..src/deriving.ml[565,18561+20])
                                  Texp_ident "l/7095"
                              <arg>
                                Labelled "f"
                                expression (src/deriving.ml[565,18561+24]..src/deriving.ml[571,18767+83])
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/deriving.ml[565,18561+29]..src/deriving.ml[565,18561+42])
                                        Tpat_tuple
                                        [
                                          pattern (src/deriving.ml[565,18561+30]..src/deriving.ml[565,18561+35])
                                            Tpat_var "label/7102"
                                          pattern (src/deriving.ml[565,18561+37]..src/deriving.ml[565,18561+41])
                                            Tpat_var "expr/7103"
                                        ]
                                      expression (src/deriving.ml[566,18607+14]..src/deriving.ml[571,18767+82])
                                        Texp_match
                                        expression (src/deriving.ml[566,18607+20]..src/deriving.ml[566,18607+25])
                                          Texp_ident "label/7102"
                                        [
                                          <case>
                                            pattern (src/deriving.ml[567,18638+16]..src/deriving.ml[567,18638+26])
                                              Tpat_value
                                              pattern (src/deriving.ml[567,18638+16]..src/deriving.ml[567,18638+26])
                                                Tpat_construct "Labelled"
                                                [
                                                  pattern (src/deriving.ml[567,18638+25]..src/deriving.ml[567,18638+26])
                                                    Tpat_var "s/7156"
                                                ]
                                            expression (src/deriving.ml[567,18638+30]..src/deriving.ml[567,18638+39])
                                              Texp_tuple
                                              [
                                                expression (src/deriving.ml[567,18638+31]..src/deriving.ml[567,18638+32])
                                                  Texp_ident "s/7156"
                                                expression (src/deriving.ml[567,18638+34]..src/deriving.ml[567,18638+38])
                                                  Texp_ident "expr/7103"
                                              ]
                                          <case>
                                            pattern (src/deriving.ml[568,18678+16]..src/deriving.ml[568,18678+17])
                                              Tpat_value
                                              pattern (src/deriving.ml[568,18678+16]..src/deriving.ml[568,18678+17])
                                                Tpat_any
                                            expression (src/deriving.ml[569,18699+18]..src/deriving.ml[571,18767+82])
                                              Texp_apply
                                              expression (src/deriving.ml[569,18699+18]..src/deriving.ml[569,18699+31])
                                                Texp_ident "Stdlib!.raise_notrace"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/deriving.ml[570,18731+20]..src/deriving.ml[571,18767+82])
                                                    Texp_construct "Unknown_syntax"
                                                    [
                                                      expression (src/deriving.ml[571,18767+24]..src/deriving.ml[571,18767+37])
                                                        Texp_field
                                                        expression (src/deriving.ml[571,18767+24]..src/deriving.ml[571,18767+28])
                                                          Texp_ident "expr/7103"
                                                        "pexp_loc"
                                                      expression (src/deriving.ml[571,18767+39]..src/deriving.ml[571,18767+80])
                                                        Texp_constant Const_string("non-optional labelled argument expected",(src/deriving.ml[571,18767+40]..src/deriving.ml[571,18767+79]),None)
                                                    ]
                                              ]
                                        ]
                                        []
                                  ]
                            ]
                      ]
                      []
                  ]
                [
                  <case>
                    pattern (src/deriving.ml[572,18852+7]..src/deriving.ml[572,18852+32])
                      Tpat_construct "Unknown_syntax"
                      [
                        pattern (src/deriving.ml[572,18852+23]..src/deriving.ml[572,18852+26])
                          Tpat_var "loc/7158"
                        pattern (src/deriving.ml[572,18852+28]..src/deriving.ml[572,18852+31])
                          Tpat_var "msg/7159"
                      ]
                    expression (src/deriving.ml[572,18852+36]..src/deriving.ml[572,18852+61])
                      Texp_construct "Unknown_syntax"
                      [
                        expression (src/deriving.ml[572,18852+52]..src/deriving.ml[572,18852+55])
                          Texp_ident "loc/7158"
                        expression (src/deriving.ml[572,18852+57]..src/deriving.ml[572,18852+60])
                          Texp_ident "msg/7159"
                      ]
                ]
                []
          ]
    ]
  structure_item (src/deriving.ml[574,18915+0]..src/deriving.ml[594,19570+16])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[574,18915+4]..src/deriving.ml[574,18915+20])
          Tpat_var "mk_deriving_attr/7160"
        expression (src/deriving.ml[574,18915+21]..src/deriving.ml[594,19570+16]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/deriving.ml[574,18915+21]..src/deriving.ml[574,18915+28])
                Tpat_var "context/7162"
              expression (src/deriving.ml[574,18915+29]..src/deriving.ml[594,19570+16]) ghost
                Texp_function
                Labelled "prefix"
                [
                  <case>
                    pattern (src/deriving.ml[574,18915+30]..src/deriving.ml[574,18915+36])
                      Tpat_var "prefix/7163"
                    expression (src/deriving.ml[574,18915+37]..src/deriving.ml[594,19570+16]) ghost
                      Texp_function
                      Labelled "suffix"
                      [
                        <case>
                          pattern (src/deriving.ml[574,18915+38]..src/deriving.ml[574,18915+44])
                            Tpat_var "suffix/7164"
                          expression (src/deriving.ml[575,18962+2]..src/deriving.ml[594,19570+16])
                            Texp_apply
                            expression (src/deriving.ml[575,18962+2]..src/deriving.ml[575,18962+19])
                              Texp_ident "Ppxlib__!.Attribute.declare"
                            [
                              <arg>
                                Nolabel
                                expression (src/deriving.ml[576,18982+4]..src/deriving.ml[576,18982+34])
                                  Texp_apply
                                  expression (src/deriving.ml[576,18982+12]..src/deriving.ml[576,18982+13])
                                    Texp_ident "Stdlib!.^"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/deriving.ml[576,18982+5]..src/deriving.ml[576,18982+11])
                                        Texp_ident "prefix/7163"
                                    <arg>
                                      Nolabel
                                      expression (src/deriving.ml[576,18982+14]..src/deriving.ml[576,18982+33])
                                        Texp_apply
                                        expression (src/deriving.ml[576,18982+25]..src/deriving.ml[576,18982+26])
                                          Texp_ident "Stdlib!.^"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[576,18982+14]..src/deriving.ml[576,18982+24])
                                              Texp_constant Const_string("deriving",(src/deriving.ml[576,18982+15]..src/deriving.ml[576,18982+23]),None)
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[576,18982+27]..src/deriving.ml[576,18982+33])
                                              Texp_ident "suffix/7164"
                                        ]
                                  ]
                              <arg>
                                Nolabel
                                expression (src/deriving.ml[577,19017+4]..src/deriving.ml[577,19017+11])
                                  Texp_ident "context/7162"
                              <arg>
                                Nolabel
                                expression (src/deriving.ml[578,19029+4]..src/deriving.ml[593,19523+46])
                                  Texp_open Fresh
                                  module_expr (src/deriving.ml[578,19029+4]..src/deriving.ml[578,19029+15])
                                    Tmod_ident "Ppxlib__!.Ast_pattern"
                                  expression (src/deriving.ml[579,19047+6]..src/deriving.ml[593,19523+45])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/deriving.ml[579,19047+10]..src/deriving.ml[579,19047+24])
                                          Tpat_var "generator_name/7277"
                                        expression (src/deriving.ml[579,19047+25]..src/deriving.ml[581,19126+44]) ghost
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/deriving.ml[579,19047+25]..src/deriving.ml[579,19047+27])
                                                Tpat_construct "()"
                                                []
                                              expression (src/deriving.ml[580,19077+8]..src/deriving.ml[581,19126+44])
                                                Texp_apply
                                                expression (src/deriving.ml[580,19077+8]..src/deriving.ml[580,19077+12])
                                                  Texp_ident "Ppxlib__!.Ast_pattern.map'"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[580,19077+13]..src/deriving.ml[580,19077+28])
                                                      Texp_apply
                                                      expression (src/deriving.ml[580,19077+14]..src/deriving.ml[580,19077+24])
                                                        Texp_ident "Ppxlib__!.Ast_pattern.pexp_ident"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[580,19077+25]..src/deriving.ml[580,19077+27])
                                                            Texp_ident "Ppxlib__!.Ast_pattern.__"
                                                      ]
                                                  <arg>
                                                    Labelled "f"
                                                    expression (src/deriving.ml[580,19077+32]..src/deriving.ml[581,19126+44])
                                                      Texp_function
                                                      Nolabel
                                                      [
                                                        <case>
                                                          pattern (src/deriving.ml[580,19077+37]..src/deriving.ml[580,19077+40])
                                                            Tpat_var "loc/7279"
                                                          expression (src/deriving.ml[580,19077+41]..src/deriving.ml[581,19126+43]) ghost
                                                            Texp_function
                                                            Nolabel
                                                            [
                                                              <case>
                                                                pattern (src/deriving.ml[580,19077+41]..src/deriving.ml[580,19077+42])
                                                                  Tpat_var "f/7280"
                                                                expression (src/deriving.ml[580,19077+43]..src/deriving.ml[581,19126+43]) ghost
                                                                  Texp_function
                                                                  Nolabel
                                                                  [
                                                                    <case>
                                                                      pattern (src/deriving.ml[580,19077+43]..src/deriving.ml[580,19077+45])
                                                                        Tpat_var "id/7281"
                                                                      expression (src/deriving.ml[581,19126+12]..src/deriving.ml[581,19126+43])
                                                                        Texp_apply
                                                                        expression (src/deriving.ml[581,19126+12]..src/deriving.ml[581,19126+13])
                                                                          Texp_ident "f/7280"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/deriving.ml[581,19126+14]..src/deriving.ml[581,19126+43])
                                                                              Texp_apply
                                                                              expression (src/deriving.ml[581,19126+15]..src/deriving.ml[581,19126+35])
                                                                                Texp_ident "generator_name_of_id/6983"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/deriving.ml[581,19126+36]..src/deriving.ml[581,19126+39])
                                                                                    Texp_ident "loc/7279"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/deriving.ml[581,19126+40]..src/deriving.ml[581,19126+42])
                                                                                    Texp_ident "id/7281"
                                                                              ]
                                                                        ]
                                                                  ]
                                                            ]
                                                      ]
                                                ]
                                          ]
                                    ]
                                    expression (src/deriving.ml[583,19180+6]..src/deriving.ml[593,19523+45])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/deriving.ml[583,19180+10]..src/deriving.ml[583,19180+19])
                                            Tpat_var "generator/7283"
                                          expression (src/deriving.ml[583,19180+20]..src/deriving.ml[587,19332+53]) ghost
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (src/deriving.ml[583,19180+20]..src/deriving.ml[583,19180+22])
                                                  Tpat_construct "()"
                                                  []
                                                expression (src/deriving.ml[584,19205+8]..src/deriving.ml[587,19332+53])
                                                  Texp_apply
                                                  expression (src/deriving.ml[585,19268+8]..src/deriving.ml[585,19268+11])
                                                    Texp_ident "Ppxlib__!.Ast_pattern.|||"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/deriving.ml[584,19205+8]..src/deriving.ml[584,19205+62])
                                                        Texp_apply
                                                        expression (src/deriving.ml[584,19205+8]..src/deriving.ml[584,19205+11])
                                                          Texp_ident "Ppxlib__!.Ast_pattern.map"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/deriving.ml[584,19205+12]..src/deriving.ml[584,19205+31])
                                                              Texp_apply
                                                              expression (src/deriving.ml[584,19205+13]..src/deriving.ml[584,19205+27])
                                                                Texp_ident "generator_name/7277"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/deriving.ml[584,19205+28]..src/deriving.ml[584,19205+30])
                                                                    Texp_construct "()"
                                                                    []
                                                              ]
                                                          <arg>
                                                            Labelled "f"
                                                            expression (src/deriving.ml[584,19205+35]..src/deriving.ml[584,19205+62])
                                                              Texp_function
                                                              Nolabel
                                                              [
                                                                <case>
                                                                  pattern (src/deriving.ml[584,19205+40]..src/deriving.ml[584,19205+41])
                                                                    Tpat_var "f/7285"
                                                                  expression (src/deriving.ml[584,19205+42]..src/deriving.ml[584,19205+61]) ghost
                                                                    Texp_function
                                                                    Nolabel
                                                                    [
                                                                      <case>
                                                                        pattern (src/deriving.ml[584,19205+42]..src/deriving.ml[584,19205+43])
                                                                          Tpat_var "x/7286"
                                                                        expression (src/deriving.ml[584,19205+47]..src/deriving.ml[584,19205+61])
                                                                          Texp_apply
                                                                          expression (src/deriving.ml[584,19205+47]..src/deriving.ml[584,19205+48])
                                                                            Texp_ident "f/7285"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/deriving.ml[584,19205+49]..src/deriving.ml[584,19205+61])
                                                                                Texp_tuple
                                                                                [
                                                                                  expression (src/deriving.ml[584,19205+50]..src/deriving.ml[584,19205+51])
                                                                                    Texp_ident "x/7286"
                                                                                  expression (src/deriving.ml[584,19205+53]..src/deriving.ml[584,19205+60])
                                                                                    Texp_construct "Args"
                                                                                    [
                                                                                      expression (src/deriving.ml[584,19205+58]..src/deriving.ml[584,19205+60])
                                                                                        Texp_construct "[]"
                                                                                        []
                                                                                    ]
                                                                                ]
                                                                          ]
                                                                    ]
                                                              ]
                                                        ]
                                                    <arg>
                                                      Nolabel
                                                      expression (src/deriving.ml[585,19268+12]..src/deriving.ml[587,19332+53])
                                                        Texp_apply
                                                        expression (src/deriving.ml[585,19268+12]..src/deriving.ml[585,19268+17])
                                                          Texp_ident "Ppxlib__!.Ast_pattern.pack2"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/deriving.ml[586,19286+14]..src/deriving.ml[587,19332+53])
                                                              Texp_apply
                                                              expression (src/deriving.ml[586,19286+15]..src/deriving.ml[586,19286+25])
                                                                Texp_ident "Ppxlib__!.Ast_pattern.pexp_apply"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/deriving.ml[586,19286+26]..src/deriving.ml[586,19286+45])
                                                                    Texp_apply
                                                                    expression (src/deriving.ml[586,19286+27]..src/deriving.ml[586,19286+41])
                                                                      Texp_ident "generator_name/7277"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/deriving.ml[586,19286+42]..src/deriving.ml[586,19286+44])
                                                                          Texp_construct "()"
                                                                          []
                                                                    ]
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/deriving.ml[587,19332+17]..src/deriving.ml[587,19332+52])
                                                                    Texp_apply
                                                                    expression (src/deriving.ml[587,19332+18]..src/deriving.ml[587,19332+22])
                                                                      Texp_ident "Ppxlib__!.Ast_pattern.map1"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/deriving.ml[587,19332+23]..src/deriving.ml[587,19332+32])
                                                                          Texp_apply
                                                                          expression (src/deriving.ml[587,19332+24]..src/deriving.ml[587,19332+28])
                                                                            Texp_ident "Ppxlib__!.Ast_pattern.many"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/deriving.ml[587,19332+29]..src/deriving.ml[587,19332+31])
                                                                                Texp_ident "Ppxlib__!.Ast_pattern.__"
                                                                          ]
                                                                      <arg>
                                                                        Labelled "f"
                                                                        expression (src/deriving.ml[587,19332+36]..src/deriving.ml[587,19332+51])
                                                                          Texp_ident "parse_arguments/7091"
                                                                    ]
                                                              ]
                                                        ]
                                                  ]
                                            ]
                                      ]
                                      expression (src/deriving.ml[589,19395+6]..src/deriving.ml[593,19523+45])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/deriving.ml[589,19395+10]..src/deriving.ml[589,19395+20])
                                              Tpat_var "generators/7288"
                                            expression (src/deriving.ml[590,19418+8]..src/deriving.ml[591,19459+54])
                                              Texp_apply
                                              expression (src/deriving.ml[591,19459+8]..src/deriving.ml[591,19459+11])
                                                Texp_ident "Ppxlib__!.Ast_pattern.|||"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/deriving.ml[590,19418+8]..src/deriving.ml[590,19418+40])
                                                    Texp_apply
                                                    expression (src/deriving.ml[590,19418+8]..src/deriving.ml[590,19418+18])
                                                      Texp_ident "Ppxlib__!.Ast_pattern.pexp_tuple"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/deriving.ml[590,19418+19]..src/deriving.ml[590,19418+40])
                                                          Texp_apply
                                                          expression (src/deriving.ml[590,19418+20]..src/deriving.ml[590,19418+24])
                                                            Texp_ident "Ppxlib__!.Ast_pattern.many"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/deriving.ml[590,19418+25]..src/deriving.ml[590,19418+39])
                                                                Texp_apply
                                                                expression (src/deriving.ml[590,19418+26]..src/deriving.ml[590,19418+35])
                                                                  Texp_ident "generator/7283"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/deriving.ml[590,19418+36]..src/deriving.ml[590,19418+38])
                                                                      Texp_construct "()"
                                                                      []
                                                                ]
                                                          ]
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (src/deriving.ml[591,19459+12]..src/deriving.ml[591,19459+54])
                                                    Texp_apply
                                                    expression (src/deriving.ml[591,19459+12]..src/deriving.ml[591,19459+15])
                                                      Texp_ident "Ppxlib__!.Ast_pattern.map"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/deriving.ml[591,19459+16]..src/deriving.ml[591,19459+30])
                                                          Texp_apply
                                                          expression (src/deriving.ml[591,19459+17]..src/deriving.ml[591,19459+26])
                                                            Texp_ident "generator/7283"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/deriving.ml[591,19459+27]..src/deriving.ml[591,19459+29])
                                                                Texp_construct "()"
                                                                []
                                                          ]
                                                      <arg>
                                                        Labelled "f"
                                                        expression (src/deriving.ml[591,19459+34]..src/deriving.ml[591,19459+54])
                                                          Texp_function
                                                          Nolabel
                                                          [
                                                            <case>
                                                              pattern (src/deriving.ml[591,19459+39]..src/deriving.ml[591,19459+40])
                                                                Tpat_var "f/7289"
                                                              expression (src/deriving.ml[591,19459+41]..src/deriving.ml[591,19459+53]) ghost
                                                                Texp_function
                                                                Nolabel
                                                                [
                                                                  <case>
                                                                    pattern (src/deriving.ml[591,19459+41]..src/deriving.ml[591,19459+42])
                                                                      Tpat_var "x/7290"
                                                                    expression (src/deriving.ml[591,19459+46]..src/deriving.ml[591,19459+53])
                                                                      Texp_apply
                                                                      expression (src/deriving.ml[591,19459+46]..src/deriving.ml[591,19459+47])
                                                                        Texp_ident "f/7289"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/deriving.ml[591,19459+48]..src/deriving.ml[591,19459+53])
                                                                            Texp_construct "::"
                                                                            [
                                                                              expression (src/deriving.ml[591,19459+50]..src/deriving.ml[591,19459+51])
                                                                                Texp_ident "x/7290"
                                                                              expression (src/deriving.ml[591,19459+52]..src/deriving.ml[591,19459+53]) ghost
                                                                                Texp_construct "[]"
                                                                                []
                                                                            ]
                                                                      ]
                                                                ]
                                                          ]
                                                    ]
                                              ]
                                        ]
                                        expression (src/deriving.ml[593,19523+6]..src/deriving.ml[593,19523+45])
                                          Texp_apply
                                          expression (src/deriving.ml[593,19523+6]..src/deriving.ml[593,19523+10])
                                            Texp_ident "Ppxlib__!.Ast_pattern.pstr"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/deriving.ml[593,19523+11]..src/deriving.ml[593,19523+45])
                                                Texp_apply
                                                expression (src/deriving.ml[593,19523+37]..src/deriving.ml[593,19523+40])
                                                  Texp_ident "Ppxlib__!.Ast_pattern.^::"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[593,19523+12]..src/deriving.ml[593,19523+36])
                                                      Texp_apply
                                                      expression (src/deriving.ml[593,19523+12]..src/deriving.ml[593,19523+21])
                                                        Texp_ident "Ppxlib__!.Ast_pattern.pstr_eval"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[593,19523+22]..src/deriving.ml[593,19523+32])
                                                            Texp_ident "generators/7288"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[593,19523+33]..src/deriving.ml[593,19523+36])
                                                            Texp_ident "Ppxlib__!.Ast_pattern.nil"
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[593,19523+41]..src/deriving.ml[593,19523+44])
                                                      Texp_ident "Ppxlib__!.Ast_pattern.nil"
                                                ]
                                          ]
                              <arg>
                                Nolabel
                                expression (src/deriving.ml[594,19570+4]..src/deriving.ml[594,19570+16])
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/deriving.ml[594,19570+9]..src/deriving.ml[594,19570+10])
                                        Tpat_var "x/7291"
                                      expression (src/deriving.ml[594,19570+14]..src/deriving.ml[594,19570+15])
                                        Texp_ident "x/7291"
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/deriving.ml[600,19805+0]..src/deriving.ml[611,20170+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[600,19805+4]..src/deriving.ml[600,19805+30])
          Tpat_var "disable_warnings_attribute/7292"
        expression (src/deriving.ml[600,19805+31]..src/deriving.ml[611,20170+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/deriving.ml[600,19805+31]..src/deriving.ml[600,19805+39])
                Tpat_var "warnings/7294"
              expression (src/deriving.ml[601,19847+2]..src/deriving.ml[611,20170+3])
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/deriving.ml[601,19847+6]..src/deriving.ml[601,19847+9])
                      Tpat_var "loc/7295"
                    expression (src/deriving.ml[601,19847+12]..src/deriving.ml[601,19847+25])
                      Texp_ident "Ppxlib__!.Location.none"
                ]
                expression (src/deriving.ml[602,19876+2]..src/deriving.ml[611,20170+3])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (src/deriving.ml[602,19876+6]..src/deriving.ml[602,19876+12])
                        Tpat_var "string/7296"
                      expression (src/deriving.ml[603,19891+4]..src/deriving.ml[605,19995+28])
                        Texp_apply
                        expression (src/deriving.ml[605,19995+4]..src/deriving.ml[605,19995+6])
                          Texp_ident "Stdlib!.|>"
                        [
                          <arg>
                            Nolabel
                            expression (src/deriving.ml[603,19891+4]..src/deriving.ml[604,19931+63])
                              Texp_apply
                              expression (src/deriving.ml[604,19931+4]..src/deriving.ml[604,19931+6])
                                Texp_ident "Stdlib!.|>"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/deriving.ml[603,19891+4]..src/deriving.ml[603,19891+39])
                                    Texp_apply
                                    expression (src/deriving.ml[603,19891+4]..src/deriving.ml[603,19891+13])
                                      Texp_ident "Ppxlib__!.Import.List.sort"
                                    [
                                      <arg>
                                        Labelled "cmp"
                                        expression (src/deriving.ml[603,19891+28]..src/deriving.ml[603,19891+39])
                                          Texp_ident "Ppxlib__!.Import.Int.compare"
                                      <arg>
                                        Nolabel
                                        expression (src/deriving.ml[603,19891+14]..src/deriving.ml[603,19891+22])
                                          Texp_ident "warnings/7294"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/deriving.ml[604,19931+7]..src/deriving.ml[604,19931+63])
                                    Texp_apply
                                    expression (src/deriving.ml[604,19931+7]..src/deriving.ml[604,19931+15])
                                      Texp_ident "Ppxlib__!.Import.List.map"
                                    [
                                      <arg>
                                        Nolabel
                                      <arg>
                                        Labelled "f"
                                        expression (src/deriving.ml[604,19931+19]..src/deriving.ml[604,19931+63])
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/deriving.ml[604,19931+24]..src/deriving.ml[604,19931+31])
                                                Tpat_var "warning/7309"
                                              expression (src/deriving.ml[604,19931+35]..src/deriving.ml[604,19931+62])
                                                Texp_apply
                                                expression (src/deriving.ml[604,19931+39]..src/deriving.ml[604,19931+40])
                                                  Texp_ident "Stdlib!.^"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[604,19931+35]..src/deriving.ml[604,19931+38])
                                                      Texp_constant Const_string("-",(src/deriving.ml[604,19931+36]..src/deriving.ml[604,19931+37]),None)
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[604,19931+41]..src/deriving.ml[604,19931+62])
                                                      Texp_apply
                                                      expression (src/deriving.ml[604,19931+41]..src/deriving.ml[604,19931+54])
                                                        Texp_ident "Ppxlib__!.Import.Int.to_string"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[604,19931+55]..src/deriving.ml[604,19931+62])
                                                            Texp_ident "warning/7309"
                                                      ]
                                                ]
                                          ]
                                    ]
                              ]
                          <arg>
                            Nolabel
                            expression (src/deriving.ml[605,19995+7]..src/deriving.ml[605,19995+28])
                              Texp_apply
                              expression (src/deriving.ml[605,19995+7]..src/deriving.ml[605,19995+20])
                                Texp_ident "Ppxlib__!.Import.String.concat"
                              [
                                <arg>
                                  Labelled "sep"
                                  expression (src/deriving.ml[605,19995+26]..src/deriving.ml[605,19995+28])
                                    Texp_constant Const_string("",(src/deriving.ml[605,19995+27]..src/deriving.ml[605,19995+27]),None)
                              ]
                        ]
                  ]
                  expression (src/deriving.ml[607,20029+2]..src/deriving.ml[611,20170+3])
                    Texp_record
                      fields =
                        [
                          "attr_name"
                            expression (src/deriving.ml[608,20033+16]..src/deriving.ml[608,20033+46])
                              Texp_record
                                fields =
                                  [
                                    "txt"
                                      expression (src/deriving.ml[608,20033+24]..src/deriving.ml[608,20033+39])
                                        Texp_constant Const_string("ocaml.warning",(src/deriving.ml[608,20033+25]..src/deriving.ml[608,20033+38]),None)
                                    "loc"
                                      expression (src/deriving.ml[608,20033+41]..src/deriving.ml[608,20033+44]) ghost
                                        Texp_ident "loc/7295"
                                  ]
                                representation =
                                  Record_regular
                                extended_expression =
                                  None
                          "attr_payload"
                            expression (src/deriving.ml[609,20081+19]..src/deriving.ml[609,20081+67])
                              Texp_construct "PStr"
                              [
                                expression (src/deriving.ml[609,20081+24]..src/deriving.ml[609,20081+67])
                                  Texp_construct "::"
                                  [
                                    expression (src/deriving.ml[609,20081+26]..src/deriving.ml[609,20081+65])
                                      Texp_apply
                                      expression (src/deriving.ml[609,20081+26]..src/deriving.ml[609,20081+35])
                                        Texp_ident "Ppxlib__!.Ast_builder.Default.pstr_eval"
                                      [
                                        <arg>
                                          Labelled "loc"
                                          expression (src/deriving.ml[609,20081+37]..src/deriving.ml[609,20081+40])
                                            Texp_ident "loc/7295"
                                        <arg>
                                          Nolabel
                                          expression (src/deriving.ml[609,20081+41]..src/deriving.ml[609,20081+62])
                                            Texp_apply
                                            expression (src/deriving.ml[609,20081+42]..src/deriving.ml[609,20081+49])
                                              Texp_ident "Ppxlib__!.Ast_builder.Default.estring"
                                            [
                                              <arg>
                                                Labelled "loc"
                                                expression (src/deriving.ml[609,20081+51]..src/deriving.ml[609,20081+54])
                                                  Texp_ident "loc/7295"
                                              <arg>
                                                Nolabel
                                                expression (src/deriving.ml[609,20081+55]..src/deriving.ml[609,20081+61])
                                                  Texp_ident "string/7296"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/deriving.ml[609,20081+63]..src/deriving.ml[609,20081+65])
                                            Texp_construct "[]"
                                            []
                                      ]
                                    expression (src/deriving.ml[609,20081+66]..src/deriving.ml[609,20081+67]) ghost
                                      Texp_construct "[]"
                                      []
                                  ]
                              ]
                          "attr_loc"
                            expression (src/deriving.ml[610,20150+15]..src/deriving.ml[610,20150+18])
                              Texp_ident "loc/7295"
                        ]
                      representation =
                        Record_regular
                      extended_expression =
                        None
          ]
    ]
  structure_item (src/deriving.ml[613,20175+0]..src/deriving.ml[619,20366+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[613,20175+4]..src/deriving.ml[613,20175+19])
          Tpat_var "inline_doc_attr/8099"
        expression (src/deriving.ml[614,20197+2]..src/deriving.ml[619,20366+3])
          Texp_let Nonrec
          [
            <def>
              pattern (src/deriving.ml[614,20197+6]..src/deriving.ml[614,20197+9])
                Tpat_var "loc/8100"
              expression (src/deriving.ml[614,20197+12]..src/deriving.ml[614,20197+25])
                Texp_ident "Ppxlib__!.Location.none"
          ]
          expression (src/deriving.ml[615,20226+2]..src/deriving.ml[619,20366+3])
            Texp_record
              fields =
                [
                  "attr_name"
                    expression (src/deriving.ml[616,20230+16]..src/deriving.ml[616,20230+42])
                      Texp_record
                        fields =
                          [
                            "txt"
                              expression (src/deriving.ml[616,20230+24]..src/deriving.ml[616,20230+35])
                                Texp_constant Const_string("ocaml.doc",(src/deriving.ml[616,20230+25]..src/deriving.ml[616,20230+34]),None)
                            "loc"
                              expression (src/deriving.ml[616,20230+37]..src/deriving.ml[616,20230+40]) ghost
                                Texp_ident "loc/8100"
                          ]
                        representation =
                          Record_regular
                        extended_expression =
                          None
                  "attr_payload"
                    expression (src/deriving.ml[617,20274+19]..src/deriving.ml[617,20274+70])
                      Texp_construct "PStr"
                      [
                        expression (src/deriving.ml[617,20274+24]..src/deriving.ml[617,20274+70])
                          Texp_construct "::"
                          [
                            expression (src/deriving.ml[617,20274+26]..src/deriving.ml[617,20274+68])
                              Texp_apply
                              expression (src/deriving.ml[617,20274+26]..src/deriving.ml[617,20274+35])
                                Texp_ident "Ppxlib__!.Ast_builder.Default.pstr_eval"
                              [
                                <arg>
                                  Labelled "loc"
                                  expression (src/deriving.ml[617,20274+37]..src/deriving.ml[617,20274+40])
                                    Texp_ident "loc/8100"
                                <arg>
                                  Nolabel
                                  expression (src/deriving.ml[617,20274+41]..src/deriving.ml[617,20274+65])
                                    Texp_apply
                                    expression (src/deriving.ml[617,20274+42]..src/deriving.ml[617,20274+49])
                                      Texp_ident "Ppxlib__!.Ast_builder.Default.estring"
                                    [
                                      <arg>
                                        Labelled "loc"
                                        expression (src/deriving.ml[617,20274+51]..src/deriving.ml[617,20274+54])
                                          Texp_ident "loc/8100"
                                      <arg>
                                        Nolabel
                                        expression (src/deriving.ml[617,20274+55]..src/deriving.ml[617,20274+64])
                                          Texp_constant Const_string("@inline",(src/deriving.ml[617,20274+56]..src/deriving.ml[617,20274+63]),None)
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/deriving.ml[617,20274+66]..src/deriving.ml[617,20274+68])
                                    Texp_construct "[]"
                                    []
                              ]
                            expression (src/deriving.ml[617,20274+69]..src/deriving.ml[617,20274+70]) ghost
                              Texp_construct "[]"
                              []
                          ]
                      ]
                  "attr_loc"
                    expression (src/deriving.ml[618,20346+15]..src/deriving.ml[618,20346+18])
                      Texp_ident "loc/8100"
                ]
              representation =
                Record_regular
              extended_expression =
                None
    ]
  structure_item (src/deriving.ml[622,20414+0]..src/deriving.ml[628,20639+63])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[622,20414+4]..src/deriving.ml[622,20414+12])
          Tpat_var "wrap_str/8101"
        expression (src/deriving.ml[622,20414+13]..src/deriving.ml[628,20639+63]) ghost
          Texp_function
          Labelled "loc"
          [
            <case>
              pattern (src/deriving.ml[622,20414+14]..src/deriving.ml[622,20414+17])
                Tpat_var "loc/8103"
              expression (src/deriving.ml[622,20414+18]..src/deriving.ml[628,20639+63]) ghost
                Texp_function
                Labelled "hide"
                [
                  <case>
                    pattern (src/deriving.ml[622,20414+19]..src/deriving.ml[622,20414+23])
                      Tpat_var "hide/8104"
                    expression (src/deriving.ml[622,20414+24]..src/deriving.ml[628,20639+63]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/deriving.ml[622,20414+24]..src/deriving.ml[622,20414+26])
                            Tpat_var "st/8105"
                          expression (src/deriving.ml[623,20443+2]..src/deriving.ml[628,20639+63])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/deriving.ml[623,20443+6]..src/deriving.ml[623,20443+19])
                                  Tpat_var "include_infos/8106"
                                expression (src/deriving.ml[623,20443+22]..src/deriving.ml[623,20443+65])
                                  Texp_apply
                                  expression (src/deriving.ml[623,20443+22]..src/deriving.ml[623,20443+35])
                                    Texp_ident "Ppxlib__!.Ast_builder.Default.include_infos"
                                  [
                                    <arg>
                                      Labelled "loc"
                                      expression (src/deriving.ml[623,20443+37]..src/deriving.ml[623,20443+40])
                                        Texp_ident "loc/8103"
                                    <arg>
                                      Nolabel
                                      expression (src/deriving.ml[623,20443+41]..src/deriving.ml[623,20443+65])
                                        Texp_apply
                                        expression (src/deriving.ml[623,20443+42]..src/deriving.ml[623,20443+56])
                                          Texp_ident "Ppxlib__!.Ast_builder.Default.pmod_structure"
                                        [
                                          <arg>
                                            Labelled "loc"
                                            expression (src/deriving.ml[623,20443+58]..src/deriving.ml[623,20443+61])
                                              Texp_ident "loc/8103"
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[623,20443+62]..src/deriving.ml[623,20443+64])
                                              Texp_ident "st/8105"
                                        ]
                                  ]
                            ]
                            expression (src/deriving.ml[624,20512+2]..src/deriving.ml[628,20639+63])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/deriving.ml[624,20512+6]..src/deriving.ml[624,20512+22])
                                    Tpat_var "pincl_attributes/8107"
                                  expression (src/deriving.ml[625,20537+4]..src/deriving.ml[626,20605+28])
                                    Texp_ifthenelse
                                    expression (src/deriving.ml[625,20537+7]..src/deriving.ml[625,20537+11])
                                      Texp_ident "hide/8104"
                                    expression (src/deriving.ml[625,20537+17]..src/deriving.ml[625,20537+67])
                                      Texp_construct "::"
                                      [
                                        expression (src/deriving.ml[625,20537+19]..src/deriving.ml[625,20537+34])
                                          Texp_ident "inline_doc_attr/8099"
                                        expression (src/deriving.ml[625,20537+36]..src/deriving.ml[625,20537+67]) ghost
                                          Texp_construct "::"
                                          [
                                            expression (src/deriving.ml[625,20537+36]..src/deriving.ml[625,20537+65])
                                              Texp_ident "Ppxlib__!.Merlin_helpers.hide_attribute"
                                            expression (src/deriving.ml[625,20537+66]..src/deriving.ml[625,20537+67]) ghost
                                              Texp_construct "[]"
                                              []
                                          ]
                                      ]
                                    Some
                                      expression (src/deriving.ml[626,20605+9]..src/deriving.ml[626,20605+28])
                                        Texp_construct "::"
                                        [
                                          expression (src/deriving.ml[626,20605+11]..src/deriving.ml[626,20605+26])
                                            Texp_ident "inline_doc_attr/8099"
                                          expression (src/deriving.ml[626,20605+27]..src/deriving.ml[626,20605+28]) ghost
                                            Texp_construct "[]"
                                            []
                                        ]
                              ]
                              expression (src/deriving.ml[628,20639+2]..src/deriving.ml[628,20639+63])
                                Texp_construct "::"
                                [
                                  expression (src/deriving.ml[628,20639+4]..src/deriving.ml[628,20639+61])
                                    Texp_apply
                                    expression (src/deriving.ml[628,20639+4]..src/deriving.ml[628,20639+16])
                                      Texp_ident "Ppxlib__!.Ast_builder.Default.pstr_include"
                                    [
                                      <arg>
                                        Labelled "loc"
                                        expression (src/deriving.ml[628,20639+18]..src/deriving.ml[628,20639+21])
                                          Texp_ident "loc/8103"
                                      <arg>
                                        Nolabel
                                        expression (src/deriving.ml[628,20639+22]..src/deriving.ml[628,20639+61])
                                          Texp_record
                                            fields =
                                              [
                                                <kept>                                                <kept>                                                "pincl_attributes"
                                                  expression (src/deriving.ml[628,20639+43]..src/deriving.ml[628,20639+59]) ghost
                                                    Texp_ident "pincl_attributes/8107"
                                              ]
                                            representation =
                                              Record_regular
                                            extended_expression =
                                              Some
                                                expression (src/deriving.ml[628,20639+24]..src/deriving.ml[628,20639+37])
                                                  Texp_ident "include_infos/8106"
                                    ]
                                  expression (src/deriving.ml[628,20639+62]..src/deriving.ml[628,20639+63]) ghost
                                    Texp_construct "[]"
                                    []
                                ]
                      ]
                ]
          ]
    ]
  structure_item (src/deriving.ml[631,20773+0]..src/deriving.ml[653,21559+45])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[631,20773+4]..src/deriving.ml[631,20773+12])
          Tpat_var "wrap_str/8114"
        expression (src/deriving.ml[631,20773+13]..src/deriving.ml[653,21559+45]) ghost
          Texp_function
          Labelled "loc"
          [
            <case>
              pattern (src/deriving.ml[631,20773+14]..src/deriving.ml[631,20773+17])
                Tpat_var "loc/8115"
              expression (src/deriving.ml[631,20773+18]..src/deriving.ml[653,21559+45]) ghost
                Texp_function
                Labelled "hide"
                [
                  <case>
                    pattern (src/deriving.ml[631,20773+19]..src/deriving.ml[631,20773+23])
                      Tpat_var "hide/8116"
                    expression (src/deriving.ml[631,20773+24]..src/deriving.ml[653,21559+45]) ghost
                      Texp_function
                      Labelled "unused_code_warnings"
                      [
                        <case>
                          pattern (src/deriving.ml[631,20773+25]..src/deriving.ml[631,20773+45])
                            Tpat_var "unused_code_warnings/8117"
                          expression (src/deriving.ml[631,20773+46]..src/deriving.ml[653,21559+45]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/deriving.ml[631,20773+46]..src/deriving.ml[631,20773+48])
                                  Tpat_var "st/8118"
                                expression (src/deriving.ml[632,20824+2]..src/deriving.ml[653,21559+45])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/deriving.ml[632,20824+6]..src/deriving.ml[632,20824+9])
                                        Tpat_var "loc/8119"
                                      expression (src/deriving.ml[632,20824+12]..src/deriving.ml[632,20824+41])
                                        Texp_record
                                          fields =
                                            [
                                              <kept>                                              <kept>                                              "loc_ghost"
                                                expression (src/deriving.ml[632,20824+35]..src/deriving.ml[632,20824+39])
                                                  Texp_construct "true"
                                                  []
                                            ]
                                          representation =
                                            Record_regular
                                          extended_expression =
                                            Some
                                              expression (src/deriving.ml[632,20824+14]..src/deriving.ml[632,20824+17])
                                                Texp_ident "loc/8115"
                                  ]
                                  expression (src/deriving.ml[633,20869+2]..src/deriving.ml[653,21559+45])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/deriving.ml[633,20869+6]..src/deriving.ml[633,20869+26])
                                          Tpat_var "unused_code_warnings/8120"
                                        expression (src/deriving.ml[634,20898+4]..src/deriving.ml[634,20898+57])
                                          Texp_apply
                                          expression (src/deriving.ml[634,20898+25]..src/deriving.ml[634,20898+27])
                                            Texp_ident "Stdlib!.&&"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/deriving.ml[634,20898+4]..src/deriving.ml[634,20898+24])
                                                Texp_ident "unused_code_warnings/8117"
                                            <arg>
                                              Nolabel
                                              expression (src/deriving.ml[634,20898+28]..src/deriving.ml[634,20898+57])
                                                Texp_apply
                                                expression (src/deriving.ml[634,20898+28]..src/deriving.ml[634,20898+54])
                                                  Texp_ident "allow_unused_code_warnings/2188"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[634,20898+55]..src/deriving.ml[634,20898+57])
                                                      Texp_construct "()"
                                                      []
                                                ]
                                          ]
                                    ]
                                    expression (src/deriving.ml[636,20961+2]..src/deriving.ml[653,21559+45])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/deriving.ml[636,20961+6]..src/deriving.ml[636,20961+18])
                                            Tpat_tuple
                                            [
                                              pattern (src/deriving.ml[636,20961+6]..src/deriving.ml[636,20961+14])
                                                Tpat_var "warnings/8121"
                                              pattern (src/deriving.ml[636,20961+16]..src/deriving.ml[636,20961+18])
                                                Tpat_var "st/8122"
                                            ]
                                          expression (src/deriving.ml[637,20982+4]..src/deriving.ml[640,21174+21])
                                            Texp_ifthenelse
                                            expression (src/deriving.ml[637,20982+7]..src/deriving.ml[637,20982+47])
                                              Texp_apply
                                              expression (src/deriving.ml[637,20982+24]..src/deriving.ml[637,20982+26])
                                                Texp_ident "Stdlib!.||"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/deriving.ml[637,20982+7]..src/deriving.ml[637,20982+23])
                                                    Texp_apply
                                                    expression (src/deriving.ml[637,20982+7]..src/deriving.ml[637,20982+20])
                                                      Texp_ident "keep_w32_impl/2169"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/deriving.ml[637,20982+21]..src/deriving.ml[637,20982+23])
                                                          Texp_construct "()"
                                                          []
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (src/deriving.ml[637,20982+27]..src/deriving.ml[637,20982+47])
                                                    Texp_ident "unused_code_warnings/8120"
                                              ]
                                            expression (src/deriving.ml[637,20982+53]..src/deriving.ml[637,20982+61])
                                              Texp_tuple
                                              [
                                                expression (src/deriving.ml[637,20982+54]..src/deriving.ml[637,20982+56])
                                                  Texp_construct "[]"
                                                  []
                                                expression (src/deriving.ml[637,20982+58]..src/deriving.ml[637,20982+60])
                                                  Texp_ident "st/8118"
                                              ]
                                            Some
                                              expression (src/deriving.ml[638,21044+9]..src/deriving.ml[640,21174+21])
                                                Texp_ifthenelse
                                                expression (src/deriving.ml[638,21044+12]..src/deriving.ml[638,21044+51])
                                                  Texp_apply
                                                  expression (src/deriving.ml[638,21044+12]..src/deriving.ml[638,21044+15])
                                                    Texp_ident "Stdlib!.not"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/deriving.ml[638,21044+16]..src/deriving.ml[638,21044+51])
                                                        Texp_apply
                                                        expression (src/deriving.ml[638,21044+16]..src/deriving.ml[638,21044+17])
                                                          Texp_ident "Stdlib!.!"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/deriving.ml[638,21044+17]..src/deriving.ml[638,21044+51])
                                                              Texp_ident "do_insert_unused_warning_attribute/2083"
                                                        ]
                                                  ]
                                                expression (src/deriving.ml[639,21101+6]..src/deriving.ml[639,21101+72])
                                                  Texp_tuple
                                                  [
                                                    expression (src/deriving.ml[639,21101+7]..src/deriving.ml[639,21101+9])
                                                      Texp_construct "[]"
                                                      []
                                                    expression (src/deriving.ml[639,21101+11]..src/deriving.ml[639,21101+71])
                                                      Texp_apply
                                                      expression (src/deriving.ml[639,21101+11]..src/deriving.ml[639,21101+68])
                                                        Texp_send "structure"
                                                        expression (src/deriving.ml[639,21101+11]..src/deriving.ml[639,21101+58])
                                                          Texp_ident "Ppxlib__!.Ignore_unused_warning.add_dummy_user_for_values"
                                                        None
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[639,21101+69]..src/deriving.ml[639,21101+71])
                                                            Texp_ident "st/8118"
                                                      ]
                                                  ]
                                                Some
                                                  expression (src/deriving.ml[640,21174+9]..src/deriving.ml[640,21174+21])
                                                    Texp_tuple
                                                    [
                                                      expression (src/deriving.ml[640,21174+10]..src/deriving.ml[640,21174+16])
                                                        Texp_construct "::"
                                                        [
                                                          expression (src/deriving.ml[640,21174+12]..src/deriving.ml[640,21174+14])
                                                            Texp_constant Const_int 32
                                                          expression (src/deriving.ml[640,21174+15]..src/deriving.ml[640,21174+16]) ghost
                                                            Texp_construct "[]"
                                                            []
                                                        ]
                                                      expression (src/deriving.ml[640,21174+18]..src/deriving.ml[640,21174+20])
                                                        Texp_ident "st/8118"
                                                    ]
                                      ]
                                      expression (src/deriving.ml[642,21201+2]..src/deriving.ml[653,21559+45])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/deriving.ml[642,21201+6]..src/deriving.ml[642,21201+18])
                                              Tpat_tuple
                                              [
                                                pattern (src/deriving.ml[642,21201+6]..src/deriving.ml[642,21201+14])
                                                  Tpat_var "warnings/8448"
                                                pattern (src/deriving.ml[642,21201+16]..src/deriving.ml[642,21201+18])
                                                  Tpat_var "st/8449"
                                              ]
                                            expression (src/deriving.ml[643,21222+4]..src/deriving.ml[647,21375+29])
                                              Texp_ifthenelse
                                              expression (src/deriving.ml[644,21229+6]..src/deriving.ml[645,21276+74])
                                                Texp_apply
                                                expression (src/deriving.ml[644,21229+23]..src/deriving.ml[644,21229+25])
                                                  Texp_ident "Stdlib!.||"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[644,21229+6]..src/deriving.ml[644,21229+22])
                                                      Texp_apply
                                                      expression (src/deriving.ml[644,21229+6]..src/deriving.ml[644,21229+19])
                                                        Texp_ident "keep_w60_impl/2177"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[644,21229+20]..src/deriving.ml[644,21229+22])
                                                            Texp_construct "()"
                                                            []
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[644,21229+26]..src/deriving.ml[645,21276+74])
                                                      Texp_apply
                                                      expression (src/deriving.ml[645,21276+6]..src/deriving.ml[645,21276+8])
                                                        Texp_ident "Stdlib!.||"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[644,21229+26]..src/deriving.ml[644,21229+46])
                                                            Texp_ident "unused_code_warnings/8120"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[645,21276+9]..src/deriving.ml[645,21276+74])
                                                            Texp_apply
                                                            expression (src/deriving.ml[645,21276+9]..src/deriving.ml[645,21276+12])
                                                              Texp_ident "Stdlib!.not"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/deriving.ml[645,21276+13]..src/deriving.ml[645,21276+74])
                                                                  Texp_apply
                                                                  expression (src/deriving.ml[645,21276+14]..src/deriving.ml[645,21276+64])
                                                                    Texp_send "structure"
                                                                    expression (src/deriving.ml[645,21276+14]..src/deriving.ml[645,21276+54])
                                                                      Texp_ident "Ppxlib__!.Ignore_unused_warning.binds_module_names"
                                                                    None
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/deriving.ml[645,21276+65]..src/deriving.ml[645,21276+67])
                                                                        Texp_ident "st/8122"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/deriving.ml[645,21276+68]..src/deriving.ml[645,21276+73])
                                                                        Texp_construct "false"
                                                                        []
                                                                  ]
                                                            ]
                                                      ]
                                                ]
                                              expression (src/deriving.ml[646,21351+9]..src/deriving.ml[646,21351+23])
                                                Texp_tuple
                                                [
                                                  expression (src/deriving.ml[646,21351+10]..src/deriving.ml[646,21351+18])
                                                    Texp_ident "warnings/8121"
                                                  expression (src/deriving.ml[646,21351+20]..src/deriving.ml[646,21351+22])
                                                    Texp_ident "st/8122"
                                                ]
                                              Some
                                                expression (src/deriving.ml[647,21375+9]..src/deriving.ml[647,21375+29])
                                                  Texp_tuple
                                                  [
                                                    expression (src/deriving.ml[647,21375+10]..src/deriving.ml[647,21375+24])
                                                      Texp_construct "::"
                                                      [
                                                        expression (src/deriving.ml[647,21375+10]..src/deriving.ml[647,21375+12])
                                                          Texp_constant Const_int 60
                                                        expression (src/deriving.ml[647,21375+16]..src/deriving.ml[647,21375+24])
                                                          Texp_ident "warnings/8121"
                                                      ]
                                                    expression (src/deriving.ml[647,21375+26]..src/deriving.ml[647,21375+28])
                                                      Texp_ident "st/8122"
                                                  ]
                                        ]
                                        expression (src/deriving.ml[649,21410+2]..src/deriving.ml[653,21559+45])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/deriving.ml[649,21410+6]..src/deriving.ml[649,21410+14])
                                                Tpat_tuple
                                                [
                                                  pattern (src/deriving.ml[649,21410+6]..src/deriving.ml[649,21410+10])
                                                    Tpat_var "wrap/8450"
                                                  pattern (src/deriving.ml[649,21410+12]..src/deriving.ml[649,21410+14])
                                                    Tpat_var "st/8451"
                                                ]
                                              expression (src/deriving.ml[650,21427+4]..src/deriving.ml[651,21473+80])
                                                Texp_ifthenelse
                                                expression (src/deriving.ml[650,21427+7]..src/deriving.ml[650,21427+29])
                                                  Texp_apply
                                                  expression (src/deriving.ml[650,21427+7]..src/deriving.ml[650,21427+20])
                                                    Texp_ident "Ppxlib__!.Import.List.is_empty"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/deriving.ml[650,21427+21]..src/deriving.ml[650,21427+29])
                                                        Texp_ident "warnings/8448"
                                                  ]
                                                expression (src/deriving.ml[650,21427+35]..src/deriving.ml[650,21427+45])
                                                  Texp_tuple
                                                  [
                                                    expression (src/deriving.ml[650,21427+36]..src/deriving.ml[650,21427+40])
                                                      Texp_ident "hide/8116"
                                                    expression (src/deriving.ml[650,21427+42]..src/deriving.ml[650,21427+44])
                                                      Texp_ident "st/8449"
                                                  ]
                                                Some
                                                  expression (src/deriving.ml[651,21473+9]..src/deriving.ml[651,21473+80])
                                                    Texp_tuple
                                                    [
                                                      expression (src/deriving.ml[651,21473+10]..src/deriving.ml[651,21473+14])
                                                        Texp_construct "true"
                                                        []
                                                      expression (src/deriving.ml[651,21473+16]..src/deriving.ml[651,21473+79])
                                                        Texp_construct "::"
                                                        [
                                                          expression (src/deriving.ml[651,21473+16]..src/deriving.ml[651,21473+73])
                                                            Texp_apply
                                                            expression (src/deriving.ml[651,21473+16]..src/deriving.ml[651,21473+30])
                                                              Texp_ident "Ppxlib__!.Ast_builder.Default.pstr_attribute"
                                                            [
                                                              <arg>
                                                                Labelled "loc"
                                                                expression (src/deriving.ml[651,21473+32]..src/deriving.ml[651,21473+35])
                                                                  Texp_ident "loc/8119"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/deriving.ml[651,21473+36]..src/deriving.ml[651,21473+73])
                                                                  Texp_apply
                                                                  expression (src/deriving.ml[651,21473+37]..src/deriving.ml[651,21473+63])
                                                                    Texp_ident "disable_warnings_attribute/7292"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/deriving.ml[651,21473+64]..src/deriving.ml[651,21473+72])
                                                                        Texp_ident "warnings/8448"
                                                                  ]
                                                            ]
                                                          expression (src/deriving.ml[651,21473+77]..src/deriving.ml[651,21473+79])
                                                            Texp_ident "st/8449"
                                                        ]
                                                    ]
                                          ]
                                          expression (src/deriving.ml[653,21559+2]..src/deriving.ml[653,21559+45])
                                            Texp_ifthenelse
                                            expression (src/deriving.ml[653,21559+5]..src/deriving.ml[653,21559+9])
                                              Texp_ident "wrap/8450"
                                            expression (src/deriving.ml[653,21559+15]..src/deriving.ml[653,21559+37])
                                              Texp_apply
                                              expression (src/deriving.ml[653,21559+15]..src/deriving.ml[653,21559+23])
                                                Texp_ident "wrap_str/8101"
                                              [
                                                <arg>
                                                  Labelled "loc"
                                                  expression (src/deriving.ml[653,21559+25]..src/deriving.ml[653,21559+28])
                                                    Texp_ident "loc/8119"
                                                <arg>
                                                  Labelled "hide"
                                                  expression (src/deriving.ml[653,21559+30]..src/deriving.ml[653,21559+34])
                                                    Texp_ident "hide/8116"
                                                <arg>
                                                  Nolabel
                                                  expression (src/deriving.ml[653,21559+35]..src/deriving.ml[653,21559+37])
                                                    Texp_ident "st/8451"
                                              ]
                                            Some
                                              expression (src/deriving.ml[653,21559+43]..src/deriving.ml[653,21559+45])
                                                Texp_ident "st/8451"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/deriving.ml[656,21688+0]..src/deriving.ml[659,21822+59])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[656,21688+4]..src/deriving.ml[656,21688+12])
          Tpat_var "wrap_str/8452"
        expression (src/deriving.ml[656,21688+13]..src/deriving.ml[659,21822+59]) ghost
          Texp_function
          Labelled "loc"
          [
            <case>
              pattern (src/deriving.ml[656,21688+14]..src/deriving.ml[656,21688+17])
                Tpat_var "loc/8453"
              expression (src/deriving.ml[656,21688+18]..src/deriving.ml[659,21822+59]) ghost
                Texp_function
                Labelled "hide"
                [
                  <case>
                    pattern (src/deriving.ml[656,21688+19]..src/deriving.ml[656,21688+23])
                      Tpat_var "hide/8454"
                    expression (src/deriving.ml[656,21688+24]..src/deriving.ml[659,21822+59]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/deriving.ml[656,21688+24]..src/deriving.ml[656,21688+28])
                            Tpat_var "list/8455"
                          expression (src/deriving.ml[657,21719+2]..src/deriving.ml[659,21822+59])
                            Texp_apply
                            expression (src/deriving.ml[657,21719+2]..src/deriving.ml[657,21719+17])
                              Texp_ident "Ppxlib__!.Import.List.concat_map"
                            [
                              <arg>
                                Nolabel
                                expression (src/deriving.ml[657,21719+18]..src/deriving.ml[657,21719+22])
                                  Texp_ident "list/8455"
                              <arg>
                                Labelled "f"
                                expression (src/deriving.ml[657,21719+26]..src/deriving.ml[659,21822+59])
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/deriving.ml[657,21719+31]..src/deriving.ml[657,21719+62])
                                        Tpat_record
                                        [
                                          "items"
                                            pattern (src/deriving.ml[657,21719+33]..src/deriving.ml[657,21719+38])
                                              Tpat_var "items/8456"
                                          "unused_code_warnings"
                                            pattern (src/deriving.ml[657,21719+40]..src/deriving.ml[657,21719+60])
                                              Tpat_var "unused_code_warnings/8457"
                                        ]
                                      expression (src/deriving.ml[658,21785+6]..src/deriving.ml[659,21822+58])
                                        Texp_ifthenelse
                                        expression (src/deriving.ml[658,21785+9]..src/deriving.ml[658,21785+28])
                                          Texp_apply
                                          expression (src/deriving.ml[658,21785+9]..src/deriving.ml[658,21785+22])
                                            Texp_ident "Ppxlib__!.Import.List.is_empty"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/deriving.ml[658,21785+23]..src/deriving.ml[658,21785+28])
                                                Texp_ident "items/8456"
                                          ]
                                        expression (src/deriving.ml[658,21785+34]..src/deriving.ml[658,21785+36])
                                          Texp_construct "[]"
                                          []
                                        Some
                                          expression (src/deriving.ml[659,21822+11]..src/deriving.ml[659,21822+58])
                                            Texp_apply
                                            expression (src/deriving.ml[659,21822+11]..src/deriving.ml[659,21822+19])
                                              Texp_ident "wrap_str/8114"
                                            [
                                              <arg>
                                                Labelled "loc"
                                                expression (src/deriving.ml[659,21822+21]..src/deriving.ml[659,21822+24])
                                                  Texp_ident "loc/8453"
                                              <arg>
                                                Labelled "hide"
                                                expression (src/deriving.ml[659,21822+26]..src/deriving.ml[659,21822+30])
                                                  Texp_ident "hide/8454"
                                              <arg>
                                                Labelled "unused_code_warnings"
                                                expression (src/deriving.ml[659,21822+32]..src/deriving.ml[659,21822+52])
                                                  Texp_ident "unused_code_warnings/8457"
                                              <arg>
                                                Nolabel
                                                expression (src/deriving.ml[659,21822+53]..src/deriving.ml[659,21822+58])
                                                  Texp_ident "items/8456"
                                            ]
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/deriving.ml[662,21926+0]..src/deriving.ml[668,22151+63])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[662,21926+4]..src/deriving.ml[662,21926+12])
          Tpat_var "wrap_sig/8459"
        expression (src/deriving.ml[662,21926+13]..src/deriving.ml[668,22151+63]) ghost
          Texp_function
          Labelled "loc"
          [
            <case>
              pattern (src/deriving.ml[662,21926+14]..src/deriving.ml[662,21926+17])
                Tpat_var "loc/8461"
              expression (src/deriving.ml[662,21926+18]..src/deriving.ml[668,22151+63]) ghost
                Texp_function
                Labelled "hide"
                [
                  <case>
                    pattern (src/deriving.ml[662,21926+19]..src/deriving.ml[662,21926+23])
                      Tpat_var "hide/8462"
                    expression (src/deriving.ml[662,21926+24]..src/deriving.ml[668,22151+63]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/deriving.ml[662,21926+24]..src/deriving.ml[662,21926+26])
                            Tpat_var "st/8463"
                          expression (src/deriving.ml[663,21955+2]..src/deriving.ml[668,22151+63])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/deriving.ml[663,21955+6]..src/deriving.ml[663,21955+19])
                                  Tpat_var "include_infos/8464"
                                expression (src/deriving.ml[663,21955+22]..src/deriving.ml[663,21955+65])
                                  Texp_apply
                                  expression (src/deriving.ml[663,21955+22]..src/deriving.ml[663,21955+35])
                                    Texp_ident "Ppxlib__!.Ast_builder.Default.include_infos"
                                  [
                                    <arg>
                                      Labelled "loc"
                                      expression (src/deriving.ml[663,21955+37]..src/deriving.ml[663,21955+40])
                                        Texp_ident "loc/8461"
                                    <arg>
                                      Nolabel
                                      expression (src/deriving.ml[663,21955+41]..src/deriving.ml[663,21955+65])
                                        Texp_apply
                                        expression (src/deriving.ml[663,21955+42]..src/deriving.ml[663,21955+56])
                                          Texp_ident "Ppxlib__!.Ast_builder.Default.pmty_signature"
                                        [
                                          <arg>
                                            Labelled "loc"
                                            expression (src/deriving.ml[663,21955+58]..src/deriving.ml[663,21955+61])
                                              Texp_ident "loc/8461"
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[663,21955+62]..src/deriving.ml[663,21955+64])
                                              Texp_ident "st/8463"
                                        ]
                                  ]
                            ]
                            expression (src/deriving.ml[664,22024+2]..src/deriving.ml[668,22151+63])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/deriving.ml[664,22024+6]..src/deriving.ml[664,22024+22])
                                    Tpat_var "pincl_attributes/8465"
                                  expression (src/deriving.ml[665,22049+4]..src/deriving.ml[666,22117+28])
                                    Texp_ifthenelse
                                    expression (src/deriving.ml[665,22049+7]..src/deriving.ml[665,22049+11])
                                      Texp_ident "hide/8462"
                                    expression (src/deriving.ml[665,22049+17]..src/deriving.ml[665,22049+67])
                                      Texp_construct "::"
                                      [
                                        expression (src/deriving.ml[665,22049+19]..src/deriving.ml[665,22049+34])
                                          Texp_ident "inline_doc_attr/8099"
                                        expression (src/deriving.ml[665,22049+36]..src/deriving.ml[665,22049+67]) ghost
                                          Texp_construct "::"
                                          [
                                            expression (src/deriving.ml[665,22049+36]..src/deriving.ml[665,22049+65])
                                              Texp_ident "Ppxlib__!.Merlin_helpers.hide_attribute"
                                            expression (src/deriving.ml[665,22049+66]..src/deriving.ml[665,22049+67]) ghost
                                              Texp_construct "[]"
                                              []
                                          ]
                                      ]
                                    Some
                                      expression (src/deriving.ml[666,22117+9]..src/deriving.ml[666,22117+28])
                                        Texp_construct "::"
                                        [
                                          expression (src/deriving.ml[666,22117+11]..src/deriving.ml[666,22117+26])
                                            Texp_ident "inline_doc_attr/8099"
                                          expression (src/deriving.ml[666,22117+27]..src/deriving.ml[666,22117+28]) ghost
                                            Texp_construct "[]"
                                            []
                                        ]
                              ]
                              expression (src/deriving.ml[668,22151+2]..src/deriving.ml[668,22151+63])
                                Texp_construct "::"
                                [
                                  expression (src/deriving.ml[668,22151+4]..src/deriving.ml[668,22151+61])
                                    Texp_apply
                                    expression (src/deriving.ml[668,22151+4]..src/deriving.ml[668,22151+16])
                                      Texp_ident "Ppxlib__!.Ast_builder.Default.psig_include"
                                    [
                                      <arg>
                                        Labelled "loc"
                                        expression (src/deriving.ml[668,22151+18]..src/deriving.ml[668,22151+21])
                                          Texp_ident "loc/8461"
                                      <arg>
                                        Nolabel
                                        expression (src/deriving.ml[668,22151+22]..src/deriving.ml[668,22151+61])
                                          Texp_record
                                            fields =
                                              [
                                                <kept>                                                <kept>                                                "pincl_attributes"
                                                  expression (src/deriving.ml[668,22151+43]..src/deriving.ml[668,22151+59]) ghost
                                                    Texp_ident "pincl_attributes/8465"
                                              ]
                                            representation =
                                              Record_regular
                                            extended_expression =
                                              Some
                                                expression (src/deriving.ml[668,22151+24]..src/deriving.ml[668,22151+37])
                                                  Texp_ident "include_infos/8464"
                                    ]
                                  expression (src/deriving.ml[668,22151+62]..src/deriving.ml[668,22151+63]) ghost
                                    Texp_construct "[]"
                                    []
                                ]
                      ]
                ]
          ]
    ]
  structure_item (src/deriving.ml[671,22285+0]..src/deriving.ml[691,22913+45])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[671,22285+4]..src/deriving.ml[671,22285+12])
          Tpat_var "wrap_sig/8466"
        expression (src/deriving.ml[671,22285+13]..src/deriving.ml[691,22913+45]) ghost
          Texp_function
          Labelled "loc"
          [
            <case>
              pattern (src/deriving.ml[671,22285+14]..src/deriving.ml[671,22285+17])
                Tpat_var "loc/8467"
              expression (src/deriving.ml[671,22285+18]..src/deriving.ml[691,22913+45]) ghost
                Texp_function
                Labelled "hide"
                [
                  <case>
                    pattern (src/deriving.ml[671,22285+19]..src/deriving.ml[671,22285+23])
                      Tpat_var "hide/8468"
                    expression (src/deriving.ml[671,22285+24]..src/deriving.ml[691,22913+45]) ghost
                      Texp_function
                      Labelled "unused_code_warnings"
                      [
                        <case>
                          pattern (src/deriving.ml[671,22285+25]..src/deriving.ml[671,22285+45])
                            Tpat_var "unused_code_warnings/8469"
                          expression (src/deriving.ml[671,22285+46]..src/deriving.ml[691,22913+45]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/deriving.ml[671,22285+46]..src/deriving.ml[671,22285+48])
                                  Tpat_var "sg/8470"
                                expression (src/deriving.ml[672,22336+2]..src/deriving.ml[691,22913+45])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/deriving.ml[672,22336+6]..src/deriving.ml[672,22336+9])
                                        Tpat_var "loc/8471"
                                      expression (src/deriving.ml[672,22336+12]..src/deriving.ml[672,22336+41])
                                        Texp_record
                                          fields =
                                            [
                                              <kept>                                              <kept>                                              "loc_ghost"
                                                expression (src/deriving.ml[672,22336+35]..src/deriving.ml[672,22336+39])
                                                  Texp_construct "true"
                                                  []
                                            ]
                                          representation =
                                            Record_regular
                                          extended_expression =
                                            Some
                                              expression (src/deriving.ml[672,22336+14]..src/deriving.ml[672,22336+17])
                                                Texp_ident "loc/8467"
                                  ]
                                  expression (src/deriving.ml[673,22381+2]..src/deriving.ml[691,22913+45])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/deriving.ml[673,22381+6]..src/deriving.ml[673,22381+26])
                                          Tpat_var "unused_code_warnings/8472"
                                        expression (src/deriving.ml[674,22410+4]..src/deriving.ml[674,22410+57])
                                          Texp_apply
                                          expression (src/deriving.ml[674,22410+25]..src/deriving.ml[674,22410+27])
                                            Texp_ident "Stdlib!.&&"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/deriving.ml[674,22410+4]..src/deriving.ml[674,22410+24])
                                                Texp_ident "unused_code_warnings/8469"
                                            <arg>
                                              Nolabel
                                              expression (src/deriving.ml[674,22410+28]..src/deriving.ml[674,22410+57])
                                                Texp_apply
                                                expression (src/deriving.ml[674,22410+28]..src/deriving.ml[674,22410+54])
                                                  Texp_ident "allow_unused_code_warnings/2188"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[674,22410+55]..src/deriving.ml[674,22410+57])
                                                      Texp_construct "()"
                                                      []
                                                ]
                                          ]
                                    ]
                                    expression (src/deriving.ml[676,22473+2]..src/deriving.ml[691,22913+45])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/deriving.ml[676,22473+6]..src/deriving.ml[676,22473+14])
                                            Tpat_var "warnings/8473"
                                          expression (src/deriving.ml[677,22490+4]..src/deriving.ml[677,22490+67])
                                            Texp_ifthenelse
                                            expression (src/deriving.ml[677,22490+7]..src/deriving.ml[677,22490+47])
                                              Texp_apply
                                              expression (src/deriving.ml[677,22490+24]..src/deriving.ml[677,22490+26])
                                                Texp_ident "Stdlib!.||"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/deriving.ml[677,22490+7]..src/deriving.ml[677,22490+23])
                                                    Texp_apply
                                                    expression (src/deriving.ml[677,22490+7]..src/deriving.ml[677,22490+20])
                                                      Texp_ident "keep_w32_intf/2171"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/deriving.ml[677,22490+21]..src/deriving.ml[677,22490+23])
                                                          Texp_construct "()"
                                                          []
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (src/deriving.ml[677,22490+27]..src/deriving.ml[677,22490+47])
                                                    Texp_ident "unused_code_warnings/8472"
                                              ]
                                            expression (src/deriving.ml[677,22490+53]..src/deriving.ml[677,22490+55])
                                              Texp_construct "[]"
                                              []
                                            Some
                                              expression (src/deriving.ml[677,22490+61]..src/deriving.ml[677,22490+67])
                                                Texp_construct "::"
                                                [
                                                  expression (src/deriving.ml[677,22490+63]..src/deriving.ml[677,22490+65])
                                                    Texp_constant Const_int 32
                                                  expression (src/deriving.ml[677,22490+66]..src/deriving.ml[677,22490+67]) ghost
                                                    Texp_construct "[]"
                                                    []
                                                ]
                                      ]
                                      expression (src/deriving.ml[679,22563+2]..src/deriving.ml[691,22913+45])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/deriving.ml[679,22563+6]..src/deriving.ml[679,22563+14])
                                              Tpat_var "warnings/8474"
                                            expression (src/deriving.ml[680,22580+4]..src/deriving.ml[685,22735+23])
                                              Texp_ifthenelse
                                              expression (src/deriving.ml[681,22587+6]..src/deriving.ml[683,22687+29])
                                                Texp_apply
                                                expression (src/deriving.ml[682,22610+6]..src/deriving.ml[682,22610+8])
                                                  Texp_ident "Stdlib!.||"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[681,22587+6]..src/deriving.ml[681,22587+22])
                                                      Texp_apply
                                                      expression (src/deriving.ml[681,22587+6]..src/deriving.ml[681,22587+19])
                                                        Texp_ident "keep_w60_intf/2179"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[681,22587+20]..src/deriving.ml[681,22587+22])
                                                            Texp_construct "()"
                                                            []
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[682,22610+9]..src/deriving.ml[683,22687+29])
                                                      Texp_apply
                                                      expression (src/deriving.ml[683,22687+6]..src/deriving.ml[683,22687+8])
                                                        Texp_ident "Stdlib!.||"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[682,22610+9]..src/deriving.ml[682,22610+76])
                                                            Texp_apply
                                                            expression (src/deriving.ml[682,22610+10]..src/deriving.ml[682,22610+13])
                                                              Texp_ident "Stdlib!.not"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/deriving.ml[682,22610+14]..src/deriving.ml[682,22610+75])
                                                                  Texp_apply
                                                                  expression (src/deriving.ml[682,22610+15]..src/deriving.ml[682,22610+65])
                                                                    Texp_send "signature"
                                                                    expression (src/deriving.ml[682,22610+15]..src/deriving.ml[682,22610+55])
                                                                      Texp_ident "Ppxlib__!.Ignore_unused_warning.binds_module_names"
                                                                    None
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/deriving.ml[682,22610+66]..src/deriving.ml[682,22610+68])
                                                                        Texp_ident "sg/8470"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/deriving.ml[682,22610+69]..src/deriving.ml[682,22610+74])
                                                                        Texp_construct "false"
                                                                        []
                                                                  ]
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[683,22687+9]..src/deriving.ml[683,22687+29])
                                                            Texp_ident "unused_code_warnings/8472"
                                                      ]
                                                ]
                                              expression (src/deriving.ml[684,22717+9]..src/deriving.ml[684,22717+17])
                                                Texp_ident "warnings/8473"
                                              Some
                                                expression (src/deriving.ml[685,22735+9]..src/deriving.ml[685,22735+23])
                                                  Texp_construct "::"
                                                  [
                                                    expression (src/deriving.ml[685,22735+9]..src/deriving.ml[685,22735+11])
                                                      Texp_constant Const_int 60
                                                    expression (src/deriving.ml[685,22735+15]..src/deriving.ml[685,22735+23])
                                                      Texp_ident "warnings/8473"
                                                  ]
                                        ]
                                        expression (src/deriving.ml[687,22764+2]..src/deriving.ml[691,22913+45])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/deriving.ml[687,22764+6]..src/deriving.ml[687,22764+14])
                                                Tpat_tuple
                                                [
                                                  pattern (src/deriving.ml[687,22764+6]..src/deriving.ml[687,22764+10])
                                                    Tpat_var "wrap/8475"
                                                  pattern (src/deriving.ml[687,22764+12]..src/deriving.ml[687,22764+14])
                                                    Tpat_var "sg/8476"
                                                ]
                                              expression (src/deriving.ml[688,22781+4]..src/deriving.ml[689,22827+80])
                                                Texp_ifthenelse
                                                expression (src/deriving.ml[688,22781+7]..src/deriving.ml[688,22781+29])
                                                  Texp_apply
                                                  expression (src/deriving.ml[688,22781+7]..src/deriving.ml[688,22781+20])
                                                    Texp_ident "Ppxlib__!.Import.List.is_empty"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/deriving.ml[688,22781+21]..src/deriving.ml[688,22781+29])
                                                        Texp_ident "warnings/8474"
                                                  ]
                                                expression (src/deriving.ml[688,22781+35]..src/deriving.ml[688,22781+45])
                                                  Texp_tuple
                                                  [
                                                    expression (src/deriving.ml[688,22781+36]..src/deriving.ml[688,22781+40])
                                                      Texp_ident "hide/8468"
                                                    expression (src/deriving.ml[688,22781+42]..src/deriving.ml[688,22781+44])
                                                      Texp_ident "sg/8470"
                                                  ]
                                                Some
                                                  expression (src/deriving.ml[689,22827+9]..src/deriving.ml[689,22827+80])
                                                    Texp_tuple
                                                    [
                                                      expression (src/deriving.ml[689,22827+10]..src/deriving.ml[689,22827+14])
                                                        Texp_construct "true"
                                                        []
                                                      expression (src/deriving.ml[689,22827+16]..src/deriving.ml[689,22827+79])
                                                        Texp_construct "::"
                                                        [
                                                          expression (src/deriving.ml[689,22827+16]..src/deriving.ml[689,22827+73])
                                                            Texp_apply
                                                            expression (src/deriving.ml[689,22827+16]..src/deriving.ml[689,22827+30])
                                                              Texp_ident "Ppxlib__!.Ast_builder.Default.psig_attribute"
                                                            [
                                                              <arg>
                                                                Labelled "loc"
                                                                expression (src/deriving.ml[689,22827+32]..src/deriving.ml[689,22827+35])
                                                                  Texp_ident "loc/8471"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/deriving.ml[689,22827+36]..src/deriving.ml[689,22827+73])
                                                                  Texp_apply
                                                                  expression (src/deriving.ml[689,22827+37]..src/deriving.ml[689,22827+63])
                                                                    Texp_ident "disable_warnings_attribute/7292"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/deriving.ml[689,22827+64]..src/deriving.ml[689,22827+72])
                                                                        Texp_ident "warnings/8474"
                                                                  ]
                                                            ]
                                                          expression (src/deriving.ml[689,22827+77]..src/deriving.ml[689,22827+79])
                                                            Texp_ident "sg/8470"
                                                        ]
                                                    ]
                                          ]
                                          expression (src/deriving.ml[691,22913+2]..src/deriving.ml[691,22913+45])
                                            Texp_ifthenelse
                                            expression (src/deriving.ml[691,22913+5]..src/deriving.ml[691,22913+9])
                                              Texp_ident "wrap/8475"
                                            expression (src/deriving.ml[691,22913+15]..src/deriving.ml[691,22913+37])
                                              Texp_apply
                                              expression (src/deriving.ml[691,22913+15]..src/deriving.ml[691,22913+23])
                                                Texp_ident "wrap_sig/8459"
                                              [
                                                <arg>
                                                  Labelled "loc"
                                                  expression (src/deriving.ml[691,22913+25]..src/deriving.ml[691,22913+28])
                                                    Texp_ident "loc/8471"
                                                <arg>
                                                  Labelled "hide"
                                                  expression (src/deriving.ml[691,22913+30]..src/deriving.ml[691,22913+34])
                                                    Texp_ident "hide/8468"
                                                <arg>
                                                  Nolabel
                                                  expression (src/deriving.ml[691,22913+35]..src/deriving.ml[691,22913+37])
                                                    Texp_ident "sg/8476"
                                              ]
                                            Some
                                              expression (src/deriving.ml[691,22913+43]..src/deriving.ml[691,22913+45])
                                                Texp_ident "sg/8476"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/deriving.ml[694,23042+0]..src/deriving.ml[697,23176+59])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[694,23042+4]..src/deriving.ml[694,23042+12])
          Tpat_var "wrap_sig/8477"
        expression (src/deriving.ml[694,23042+13]..src/deriving.ml[697,23176+59]) ghost
          Texp_function
          Labelled "loc"
          [
            <case>
              pattern (src/deriving.ml[694,23042+14]..src/deriving.ml[694,23042+17])
                Tpat_var "loc/8478"
              expression (src/deriving.ml[694,23042+18]..src/deriving.ml[697,23176+59]) ghost
                Texp_function
                Labelled "hide"
                [
                  <case>
                    pattern (src/deriving.ml[694,23042+19]..src/deriving.ml[694,23042+23])
                      Tpat_var "hide/8479"
                    expression (src/deriving.ml[694,23042+24]..src/deriving.ml[697,23176+59]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/deriving.ml[694,23042+24]..src/deriving.ml[694,23042+28])
                            Tpat_var "list/8480"
                          expression (src/deriving.ml[695,23073+2]..src/deriving.ml[697,23176+59])
                            Texp_apply
                            expression (src/deriving.ml[695,23073+2]..src/deriving.ml[695,23073+17])
                              Texp_ident "Ppxlib__!.Import.List.concat_map"
                            [
                              <arg>
                                Nolabel
                                expression (src/deriving.ml[695,23073+18]..src/deriving.ml[695,23073+22])
                                  Texp_ident "list/8480"
                              <arg>
                                Labelled "f"
                                expression (src/deriving.ml[695,23073+26]..src/deriving.ml[697,23176+59])
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/deriving.ml[695,23073+31]..src/deriving.ml[695,23073+62])
                                        Tpat_record
                                        [
                                          "items"
                                            pattern (src/deriving.ml[695,23073+33]..src/deriving.ml[695,23073+38])
                                              Tpat_var "items/8481"
                                          "unused_code_warnings"
                                            pattern (src/deriving.ml[695,23073+40]..src/deriving.ml[695,23073+60])
                                              Tpat_var "unused_code_warnings/8482"
                                        ]
                                      expression (src/deriving.ml[696,23139+6]..src/deriving.ml[697,23176+58])
                                        Texp_ifthenelse
                                        expression (src/deriving.ml[696,23139+9]..src/deriving.ml[696,23139+28])
                                          Texp_apply
                                          expression (src/deriving.ml[696,23139+9]..src/deriving.ml[696,23139+22])
                                            Texp_ident "Ppxlib__!.Import.List.is_empty"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/deriving.ml[696,23139+23]..src/deriving.ml[696,23139+28])
                                                Texp_ident "items/8481"
                                          ]
                                        expression (src/deriving.ml[696,23139+34]..src/deriving.ml[696,23139+36])
                                          Texp_construct "[]"
                                          []
                                        Some
                                          expression (src/deriving.ml[697,23176+11]..src/deriving.ml[697,23176+58])
                                            Texp_apply
                                            expression (src/deriving.ml[697,23176+11]..src/deriving.ml[697,23176+19])
                                              Texp_ident "wrap_sig/8466"
                                            [
                                              <arg>
                                                Labelled "loc"
                                                expression (src/deriving.ml[697,23176+21]..src/deriving.ml[697,23176+24])
                                                  Texp_ident "loc/8478"
                                              <arg>
                                                Labelled "hide"
                                                expression (src/deriving.ml[697,23176+26]..src/deriving.ml[697,23176+30])
                                                  Texp_ident "hide/8479"
                                              <arg>
                                                Labelled "unused_code_warnings"
                                                expression (src/deriving.ml[697,23176+32]..src/deriving.ml[697,23176+52])
                                                  Texp_ident "unused_code_warnings/8482"
                                              <arg>
                                                Nolabel
                                                expression (src/deriving.ml[697,23176+53]..src/deriving.ml[697,23176+58])
                                                  Texp_ident "items/8481"
                                            ]
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/deriving.ml[703,23454+0]..src/deriving.ml[716,23960+12])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[703,23454+4]..src/deriving.ml[703,23454+26])
          Tpat_var "types_used_by_deriving/8484"
        expression (src/deriving.ml[703,23454+27]..src/deriving.ml[716,23960+12]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/deriving.ml[703,23454+28]..src/deriving.ml[703,23454+31])
                Tpat_extra_constraint
                core_type (src/deriving.ml[703,23454+34]..src/deriving.ml[703,23454+55])
                  Ttyp_constr "list/11!"
                  [
                    core_type (src/deriving.ml[703,23454+34]..src/deriving.ml[703,23454+50])
                      Ttyp_constr "Ppxlib__!.Import.type_declaration"
                      []
                  ]
                pattern (src/deriving.ml[703,23454+28]..src/deriving.ml[703,23454+31])
                  Tpat_alias "tds/8486"
                  pattern (src/deriving.ml[703,23454+28]..src/deriving.ml[703,23454+31])
                    Tpat_any
              expression (src/deriving.ml[704,23535+2]..src/deriving.ml[716,23960+12])
                Texp_constraint
                core_type (src/deriving.ml[703,23454+59]..src/deriving.ml[703,23454+78])
                  Ttyp_constr "list/11!"
                  [
                    core_type (src/deriving.ml[703,23454+59]..src/deriving.ml[703,23454+73])
                      Ttyp_constr "Ppxlib__!.Import.structure_item"
                      []
                  ]
                  Texp_ifthenelse
                  expression (src/deriving.ml[704,23535+5]..src/deriving.ml[704,23535+21])
                    Texp_apply
                    expression (src/deriving.ml[704,23535+5]..src/deriving.ml[704,23535+18])
                      Texp_ident "keep_w32_impl/2169"
                    [
                      <arg>
                        Nolabel
                        expression (src/deriving.ml[704,23535+19]..src/deriving.ml[704,23535+21])
                          Texp_construct "()"
                          []
                    ]
                  expression (src/deriving.ml[704,23535+27]..src/deriving.ml[704,23535+29])
                    Texp_construct "[]"
                    []
                  Some
                    expression (src/deriving.ml[706,23572+4]..src/deriving.ml[716,23960+12])
                      Texp_apply
                      expression (src/deriving.ml[706,23572+4]..src/deriving.ml[706,23572+12])
                        Texp_ident "Ppxlib__!.Import.List.map"
                      [
                        <arg>
                          Nolabel
                          expression (src/deriving.ml[706,23572+13]..src/deriving.ml[706,23572+16])
                            Texp_ident "tds/8486"
                        <arg>
                          Labelled "f"
                          expression (src/deriving.ml[706,23572+20]..src/deriving.ml[716,23960+12])
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/deriving.ml[706,23572+25]..src/deriving.ml[706,23572+27])
                                  Tpat_var "td/8487"
                                expression (src/deriving.ml[707,23603+8]..src/deriving.ml[716,23960+11])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/deriving.ml[707,23603+12]..src/deriving.ml[707,23603+15])
                                        Tpat_var "typ/8488"
                                      expression (src/deriving.ml[707,23603+18]..src/deriving.ml[707,23603+57])
                                        Texp_apply
                                        expression (src/deriving.ml[707,23603+18]..src/deriving.ml[707,23603+54])
                                          Texp_ident "Ppxlib__!.Common.core_type_of_type_declaration"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[707,23603+55]..src/deriving.ml[707,23603+57])
                                              Texp_ident "td/8487"
                                        ]
                                  ]
                                  expression (src/deriving.ml[708,23664+8]..src/deriving.ml[716,23960+11])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/deriving.ml[708,23664+12]..src/deriving.ml[708,23664+15])
                                          Tpat_var "loc/8526"
                                        expression (src/deriving.ml[708,23664+18]..src/deriving.ml[708,23664+30])
                                          Texp_field
                                          expression (src/deriving.ml[708,23664+18]..src/deriving.ml[708,23664+20])
                                            Texp_ident "td/8487"
                                          "ptype_loc"
                                    ]
                                    expression (src/deriving.ml[709,23698+8]..src/deriving.ml[716,23960+11])
                                      Texp_apply
                                      expression (src/deriving.ml[709,23698+8]..src/deriving.ml[709,23698+18])
                                        Texp_ident "Ppxlib__!.Ast_builder.Default.pstr_value"
                                      [
                                        <arg>
                                          Labelled "loc"
                                          expression (src/deriving.ml[709,23698+20]..src/deriving.ml[709,23698+23])
                                            Texp_ident "loc/8526"
                                        <arg>
                                          Nolabel
                                          expression (src/deriving.ml[709,23698+24]..src/deriving.ml[709,23698+36])
                                            Texp_construct "Nonrecursive"
                                            []
                                        <arg>
                                          Nolabel
                                          expression (src/deriving.ml[710,23735+10]..src/deriving.ml[716,23960+11])
                                            Texp_construct "::"
                                            [
                                              expression (src/deriving.ml[711,23747+12]..src/deriving.ml[715,23926+32])
                                                Texp_apply
                                                expression (src/deriving.ml[711,23747+12]..src/deriving.ml[711,23747+25])
                                                  Texp_ident "Ppxlib__!.Ast_builder.Default.value_binding"
                                                [
                                                  <arg>
                                                    Labelled "loc"
                                                    expression (src/deriving.ml[711,23747+27]..src/deriving.ml[711,23747+30])
                                                      Texp_ident "loc/8526"
                                                  <arg>
                                                    Labelled "pat"
                                                    expression (src/deriving.ml[711,23747+36]..src/deriving.ml[711,23747+51])
                                                      Texp_apply
                                                      expression (src/deriving.ml[711,23747+37]..src/deriving.ml[711,23747+45])
                                                        Texp_ident "Ppxlib__!.Ast_builder.Default.ppat_any"
                                                      [
                                                        <arg>
                                                          Labelled "loc"
                                                          expression (src/deriving.ml[711,23747+47]..src/deriving.ml[711,23747+50])
                                                            Texp_ident "loc/8526"
                                                      ]
                                                  <arg>
                                                    Labelled "expr"
                                                    expression (src/deriving.ml[713,23820+16]..src/deriving.ml[715,23926+32])
                                                      Texp_apply
                                                      expression (src/deriving.ml[713,23820+17]..src/deriving.ml[713,23820+25])
                                                        Texp_ident "Ppxlib__!.Ast_builder.Default.pexp_fun"
                                                      [
                                                        <arg>
                                                          Labelled "loc"
                                                          expression (src/deriving.ml[713,23820+27]..src/deriving.ml[713,23820+30])
                                                            Texp_ident "loc/8526"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[713,23820+31]..src/deriving.ml[713,23820+38])
                                                            Texp_construct "Nolabel"
                                                            []
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[713,23820+39]..src/deriving.ml[713,23820+43])
                                                            Texp_construct "None"
                                                            []
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[714,23864+19]..src/deriving.ml[714,23864+61])
                                                            Texp_apply
                                                            expression (src/deriving.ml[714,23864+20]..src/deriving.ml[714,23864+35])
                                                              Texp_ident "Ppxlib__!.Ast_builder.Default.ppat_constraint"
                                                            [
                                                              <arg>
                                                                Labelled "loc"
                                                                expression (src/deriving.ml[714,23864+37]..src/deriving.ml[714,23864+40])
                                                                  Texp_ident "loc/8526"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/deriving.ml[714,23864+41]..src/deriving.ml[714,23864+56])
                                                                  Texp_apply
                                                                  expression (src/deriving.ml[714,23864+42]..src/deriving.ml[714,23864+50])
                                                                    Texp_ident "Ppxlib__!.Ast_builder.Default.ppat_any"
                                                                  [
                                                                    <arg>
                                                                      Labelled "loc"
                                                                      expression (src/deriving.ml[714,23864+52]..src/deriving.ml[714,23864+55])
                                                                        Texp_ident "loc/8526"
                                                                  ]
                                                              <arg>
                                                                Nolabel
                                                                expression (src/deriving.ml[714,23864+57]..src/deriving.ml[714,23864+60])
                                                                  Texp_ident "typ/8488"
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[715,23926+19]..src/deriving.ml[715,23926+31])
                                                            Texp_apply
                                                            expression (src/deriving.ml[715,23926+20]..src/deriving.ml[715,23926+25])
                                                              Texp_ident "Ppxlib__!.Ast_builder.Default.eunit"
                                                            [
                                                              <arg>
                                                                Labelled "loc"
                                                                expression (src/deriving.ml[715,23926+27]..src/deriving.ml[715,23926+30])
                                                                  Texp_ident "loc/8526"
                                                            ]
                                                      ]
                                                ]
                                              expression (src/deriving.ml[716,23960+10]..src/deriving.ml[716,23960+11]) ghost
                                                Texp_construct "[]"
                                                []
                                            ]
                                      ]
                            ]
                      ]
          ]
    ]
  structure_item (src/deriving.ml[718,23974+0]..src/deriving.ml[719,24005+79])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[718,23974+4]..src/deriving.ml[718,23974+20])
          Tpat_var "merge_generators/8527"
        expression (src/deriving.ml[718,23974+21]..src/deriving.ml[719,24005+79]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/deriving.ml[718,23974+21]..src/deriving.ml[718,23974+26])
                Tpat_var "field/8529"
              expression (src/deriving.ml[718,23974+27]..src/deriving.ml[719,24005+79]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/deriving.ml[718,23974+27]..src/deriving.ml[718,23974+28])
                      Tpat_var "l/8530"
                    expression (src/deriving.ml[719,24005+2]..src/deriving.ml[719,24005+79])
                      Texp_apply
                      expression (src/deriving.ml[719,24005+51]..src/deriving.ml[719,24005+53])
                        Texp_ident "Stdlib!.|>"
                      [
                        <arg>
                          Nolabel
                          expression (src/deriving.ml[719,24005+2]..src/deriving.ml[719,24005+50])
                            Texp_apply
                            expression (src/deriving.ml[719,24005+36]..src/deriving.ml[719,24005+38])
                              Texp_ident "Stdlib!.|>"
                            [
                              <arg>
                                Nolabel
                                expression (src/deriving.ml[719,24005+2]..src/deriving.ml[719,24005+35])
                                  Texp_apply
                                  expression (src/deriving.ml[719,24005+2]..src/deriving.ml[719,24005+17])
                                    Texp_ident "Ppxlib__!.Import.List.filter_map"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/deriving.ml[719,24005+18]..src/deriving.ml[719,24005+19])
                                        Texp_ident "l/8530"
                                    <arg>
                                      Labelled "f"
                                      expression (src/deriving.ml[719,24005+23]..src/deriving.ml[719,24005+35])
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/deriving.ml[719,24005+28]..src/deriving.ml[719,24005+29])
                                              Tpat_var "x/8531"
                                            expression (src/deriving.ml[719,24005+33]..src/deriving.ml[719,24005+34])
                                              Texp_ident "x/8531"
                                        ]
                                  ]
                              <arg>
                                Nolabel
                                expression (src/deriving.ml[719,24005+39]..src/deriving.ml[719,24005+50])
                                  Texp_ident "Ppxlib__!.Import.List.concat"
                            ]
                        <arg>
                          Nolabel
                          expression (src/deriving.ml[719,24005+54]..src/deriving.ml[719,24005+79])
                            Texp_apply
                            expression (src/deriving.ml[719,24005+54]..src/deriving.ml[719,24005+73])
                              Texp_ident "Deriver/6977.resolve_all"
                            [
                              <arg>
                                Nolabel
                                expression (src/deriving.ml[719,24005+74]..src/deriving.ml[719,24005+79])
                                  Texp_ident "field/8529"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/deriving.ml[723,24261+0]..src/deriving.ml[730,24550+28])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[723,24261+4]..src/deriving.ml[723,24261+17])
          Tpat_var "merge_derived/8542"
        expression (src/deriving.ml[723,24261+18]..src/deriving.ml[730,24550+28]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/deriving.ml[723,24261+18]..src/deriving.ml[723,24261+23])
                Tpat_var "lists/8544"
              expression (src/deriving.ml[724,24287+2]..src/deriving.ml[730,24550+28])
                Texp_apply
                expression (src/deriving.ml[724,24287+2]..src/deriving.ml[724,24287+17])
                  Texp_ident "Ppxlib__!.Import.List.fold_right"
                [
                  <arg>
                    Nolabel
                    expression (src/deriving.ml[724,24287+18]..src/deriving.ml[724,24287+23])
                      Texp_ident "lists/8544"
                  <arg>
                    Labelled "init"
                    expression (src/deriving.ml[724,24287+30]..src/deriving.ml[724,24287+32])
                      Texp_construct "[]"
                      []
                  <arg>
                    Labelled "f"
                    expression (src/deriving.ml[724,24287+36]..src/deriving.ml[730,24550+28])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/deriving.ml[724,24287+41]..src/deriving.ml[724,24287+48])
                            Tpat_var "derived/8545"
                          expression (src/deriving.ml[724,24287+49]..src/deriving.ml[730,24550+27]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/deriving.ml[724,24287+49]..src/deriving.ml[724,24287+52])
                                  Tpat_var "acc/8546"
                                expression (src/deriving.ml[725,24343+6]..src/deriving.ml[730,24550+27])
                                  Texp_match
                                  expression (src/deriving.ml[725,24343+12]..src/deriving.ml[725,24343+15])
                                    Texp_ident "acc/8546"
                                  [
                                    <case>
                                      pattern (src/deriving.ml[726,24364+8]..src/deriving.ml[726,24364+23])
                                        Tpat_value
                                        pattern (src/deriving.ml[726,24364+8]..src/deriving.ml[726,24364+23])
                                          Tpat_construct "::"
                                          [
                                            pattern (src/deriving.ml[726,24364+8]..src/deriving.ml[726,24364+13])
                                              Tpat_var "other/8547"
                                            pattern (src/deriving.ml[726,24364+17]..src/deriving.ml[726,24364+23])
                                              Tpat_var "others/8548"
                                          ]
                                      <when>
                                        expression (src/deriving.ml[727,24388+13]..src/deriving.ml[727,24388+79])
                                          Texp_apply
                                          expression (src/deriving.ml[727,24388+13]..src/deriving.ml[727,24388+23])
                                            Texp_ident "Ppxlib__!.Import.Bool.equal"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/deriving.ml[727,24388+24]..src/deriving.ml[727,24388+52])
                                                Texp_field
                                                expression (src/deriving.ml[727,24388+24]..src/deriving.ml[727,24388+31])
                                                  Texp_ident "derived/8545"
                                                "unused_code_warnings"
                                            <arg>
                                              Nolabel
                                              expression (src/deriving.ml[727,24388+53]..src/deriving.ml[727,24388+79])
                                                Texp_field
                                                expression (src/deriving.ml[727,24388+53]..src/deriving.ml[727,24388+58])
                                                  Texp_ident "other/8547"
                                                "unused_code_warnings"
                                          ]
                                      expression (src/deriving.ml[729,24479+10]..src/deriving.ml[729,24479+70])
                                        Texp_construct "::"
                                        [
                                          expression (src/deriving.ml[729,24479+10]..src/deriving.ml[729,24479+60])
                                            Texp_record
                                              fields =
                                                [
                                                  "items"
                                                    expression (src/deriving.ml[729,24479+31]..src/deriving.ml[729,24479+58])
                                                      Texp_apply
                                                      expression (src/deriving.ml[729,24479+45]..src/deriving.ml[729,24479+46])
                                                        Texp_ident "Ppxlib__!.Import.@"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[729,24479+31]..src/deriving.ml[729,24479+44])
                                                            Texp_field
                                                            expression (src/deriving.ml[729,24479+31]..src/deriving.ml[729,24479+38])
                                                              Texp_ident "derived/8545"
                                                            "items"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[729,24479+47]..src/deriving.ml[729,24479+58])
                                                            Texp_field
                                                            expression (src/deriving.ml[729,24479+47]..src/deriving.ml[729,24479+52])
                                                              Texp_ident "other/8547"
                                                            "items"
                                                      ]
                                                  <kept>                                                ]
                                              representation =
                                                Record_regular
                                              extended_expression =
                                                Some
                                                  expression (src/deriving.ml[729,24479+12]..src/deriving.ml[729,24479+17])
                                                    Texp_ident "other/8547"
                                          expression (src/deriving.ml[729,24479+64]..src/deriving.ml[729,24479+70])
                                            Texp_ident "others/8548"
                                        ]
                                    <case>
                                      pattern (src/deriving.ml[730,24550+8]..src/deriving.ml[730,24550+9])
                                        Tpat_value
                                        pattern (src/deriving.ml[730,24550+8]..src/deriving.ml[730,24550+9])
                                          Tpat_any
                                      expression (src/deriving.ml[730,24550+13]..src/deriving.ml[730,24550+27])
                                        Texp_construct "::"
                                        [
                                          expression (src/deriving.ml[730,24550+13]..src/deriving.ml[730,24550+20])
                                            Texp_ident "derived/8545"
                                          expression (src/deriving.ml[730,24550+24]..src/deriving.ml[730,24550+27])
                                            Texp_ident "acc/8546"
                                        ]
                                  ]
                                  []
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/deriving.ml[732,24580+0]..src/deriving.ml[751,25319+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[732,24580+4]..src/deriving.ml[732,24580+25])
          Tpat_var "expand_str_type_decls/8560"
        expression (src/deriving.ml[732,24580+26]..src/deriving.ml[751,25319+13]) ghost
          Texp_function
          Labelled "ctxt"
          [
            <case>
              pattern (src/deriving.ml[732,24580+27]..src/deriving.ml[732,24580+31])
                Tpat_var "ctxt/8562"
              expression (src/deriving.ml[732,24580+32]..src/deriving.ml[751,25319+13]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/deriving.ml[732,24580+32]..src/deriving.ml[732,24580+40])
                      Tpat_var "rec_flag/8563"
                    expression (src/deriving.ml[732,24580+41]..src/deriving.ml[751,25319+13]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/deriving.ml[732,24580+41]..src/deriving.ml[732,24580+44])
                            Tpat_var "tds/8564"
                          expression (src/deriving.ml[732,24580+45]..src/deriving.ml[751,25319+13]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/deriving.ml[732,24580+45]..src/deriving.ml[732,24580+51])
                                  Tpat_var "values/8565"
                                expression (src/deriving.ml[733,24634+2]..src/deriving.ml[751,25319+13])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/deriving.ml[733,24634+6]..src/deriving.ml[733,24634+23])
                                        Tpat_tuple
                                        [
                                          pattern (src/deriving.ml[733,24634+6]..src/deriving.ml[733,24634+16])
                                            Tpat_var "generators/8566"
                                          pattern (src/deriving.ml[733,24634+18]..src/deriving.ml[733,24634+23])
                                            Tpat_var "l_err/8567"
                                        ]
                                      expression (src/deriving.ml[733,24634+26]..src/deriving.ml[733,24634+77])
                                        Texp_apply
                                        expression (src/deriving.ml[733,24634+26]..src/deriving.ml[733,24634+42])
                                          Texp_ident "merge_generators/8527"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[733,24634+43]..src/deriving.ml[733,24634+70])
                                              Texp_ident "Deriver/6977.Field.str_type_decl"
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[733,24634+71]..src/deriving.ml[733,24634+77])
                                              Texp_ident "values/8565"
                                        ]
                                  ]
                                  expression (src/deriving.ml[734,24715+2]..src/deriving.ml[751,25319+13])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/deriving.ml[734,24715+6]..src/deriving.ml[734,24715+11])
                                          Tpat_var "l_err/8568"
                                        expression (src/deriving.ml[735,24729+4]..src/deriving.ml[738,24833+11])
                                          Texp_apply
                                          expression (src/deriving.ml[735,24729+4]..src/deriving.ml[735,24729+12])
                                            Texp_ident "Ppxlib__!.Import.List.map"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/deriving.ml[738,24833+6]..src/deriving.ml[738,24833+11])
                                                Texp_ident "l_err/8567"
                                            <arg>
                                              Labelled "f"
                                              expression (src/deriving.ml[736,24742+9]..src/deriving.ml[737,24763+69])
                                                Texp_function
                                                Nolabel
                                                [
                                                  <case>
                                                    pattern (src/deriving.ml[736,24742+14]..src/deriving.ml[736,24742+17])
                                                      Tpat_var "err/8569"
                                                    expression (src/deriving.ml[737,24763+8]..src/deriving.ml[737,24763+68])
                                                      Texp_apply
                                                      expression (src/deriving.ml[737,24763+8]..src/deriving.ml[737,24763+42])
                                                        Texp_ident "Ppxlib__!.Ast_builder.Default.pstr_extension"
                                                      [
                                                        <arg>
                                                          Labelled "loc"
                                                          expression (src/deriving.ml[737,24763+48]..src/deriving.ml[737,24763+61])
                                                            Texp_ident "Ppxlib__!.Location.none"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[737,24763+62]..src/deriving.ml[737,24763+65])
                                                            Texp_ident "err/8569"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[737,24763+66]..src/deriving.ml[737,24763+68])
                                                            Texp_construct "[]"
                                                            []
                                                      ]
                                                ]
                                          ]
                                    ]
                                    expression (src/deriving.ml[742,24963+2]..src/deriving.ml[751,25319+13])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/deriving.ml[742,24963+6]..src/deriving.ml[742,24963+15])
                                            Tpat_var "generated/8570"
                                          expression (src/deriving.ml[743,24981+4]..src/deriving.ml[746,25166+20])
                                            Texp_apply
                                            expression (src/deriving.ml[746,25166+4]..src/deriving.ml[746,25166+6])
                                              Texp_ident "Stdlib!.|>"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/deriving.ml[743,24981+4]..src/deriving.ml[745,25122+43])
                                                  Texp_construct "::"
                                                  [
                                                    expression (src/deriving.ml[743,24981+4]..src/deriving.ml[743,24981+80])
                                                      Texp_record
                                                        fields =
                                                          [
                                                            "items"
                                                              expression (src/deriving.ml[743,24981+14]..src/deriving.ml[743,24981+48])
                                                                Texp_apply
                                                                expression (src/deriving.ml[743,24981+41]..src/deriving.ml[743,24981+42])
                                                                  Texp_ident "Ppxlib__!.Import.@"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/deriving.ml[743,24981+14]..src/deriving.ml[743,24981+40])
                                                                      Texp_apply
                                                                      expression (src/deriving.ml[743,24981+14]..src/deriving.ml[743,24981+36])
                                                                        Texp_ident "types_used_by_deriving/8484"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/deriving.ml[743,24981+37]..src/deriving.ml[743,24981+40])
                                                                            Texp_ident "tds/8564"
                                                                      ]
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/deriving.ml[743,24981+43]..src/deriving.ml[743,24981+48])
                                                                      Texp_ident "l_err/8568"
                                                                ]
                                                            "unused_code_warnings"
                                                              expression (src/deriving.ml[743,24981+73]..src/deriving.ml[743,24981+78])
                                                                Texp_construct "false"
                                                                []
                                                          ]
                                                        representation =
                                                          Record_regular
                                                        extended_expression =
                                                          None
                                                    expression (src/deriving.ml[744,25062+7]..src/deriving.ml[745,25122+43])
                                                      Texp_apply
                                                      expression (src/deriving.ml[744,25062+7]..src/deriving.ml[744,25062+26])
                                                        Texp_ident "Generator/6276.apply_all"
                                                      [
                                                        <arg>
                                                          Labelled "ctxt"
                                                          expression (src/deriving.ml[744,25062+28]..src/deriving.ml[744,25062+32])
                                                            Texp_ident "ctxt/8562"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[744,25062+33]..src/deriving.ml[744,25062+48])
                                                            Texp_tuple
                                                            [
                                                              expression (src/deriving.ml[744,25062+34]..src/deriving.ml[744,25062+42])
                                                                Texp_ident "rec_flag/8563"
                                                              expression (src/deriving.ml[744,25062+44]..src/deriving.ml[744,25062+47])
                                                                Texp_ident "tds/8564"
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[744,25062+49]..src/deriving.ml[744,25062+59])
                                                            Texp_ident "generators/8566"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[745,25122+9]..src/deriving.ml[745,25122+43])
                                                            Texp_ident "Ppxlib__!.Ast_builder.Default.pstr_extension"
                                                      ]
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (src/deriving.ml[746,25166+7]..src/deriving.ml[746,25166+20])
                                                  Texp_ident "merge_derived/8542"
                                            ]
                                      ]
                                      expression (src/deriving.ml[748,25192+2]..src/deriving.ml[751,25319+13])
                                        Texp_apply
                                        expression (src/deriving.ml[748,25192+2]..src/deriving.ml[748,25192+10])
                                          Texp_ident "wrap_str/8452"
                                        [
                                          <arg>
                                            Labelled "loc"
                                            expression (src/deriving.ml[749,25203+9]..src/deriving.ml[749,25203+58])
                                              Texp_apply
                                              expression (src/deriving.ml[749,25203+10]..src/deriving.ml[749,25203+52])
                                                Texp_ident "Ppxlib__!.Expansion_context.Deriver.derived_item_loc"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/deriving.ml[749,25203+53]..src/deriving.ml[749,25203+57])
                                                    Texp_ident "ctxt/8562"
                                              ]
                                          <arg>
                                            Labelled "hide"
                                            expression (src/deriving.ml[750,25262+10]..src/deriving.ml[750,25262+56])
                                              Texp_apply
                                              expression (src/deriving.ml[750,25262+15]..src/deriving.ml[750,25262+17])
                                                Texp_ident "Stdlib!.@@"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/deriving.ml[750,25262+11]..src/deriving.ml[750,25262+14])
                                                    Texp_ident "Stdlib!.not"
                                                <arg>
                                                  Nolabel
                                                  expression (src/deriving.ml[750,25262+18]..src/deriving.ml[750,25262+55])
                                                    Texp_apply
                                                    expression (src/deriving.ml[750,25262+18]..src/deriving.ml[750,25262+50])
                                                      Texp_ident "Ppxlib__!.Expansion_context.Deriver.inline"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/deriving.ml[750,25262+51]..src/deriving.ml[750,25262+55])
                                                          Texp_ident "ctxt/8562"
                                                    ]
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[751,25319+4]..src/deriving.ml[751,25319+13])
                                              Texp_ident "generated/8570"
                                        ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/deriving.ml[753,25334+0]..src/deriving.ml[770,25931+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[753,25334+4]..src/deriving.ml[753,25334+25])
          Tpat_var "expand_sig_type_decls/8571"
        expression (src/deriving.ml[753,25334+26]..src/deriving.ml[770,25931+13]) ghost
          Texp_function
          Labelled "ctxt"
          [
            <case>
              pattern (src/deriving.ml[753,25334+27]..src/deriving.ml[753,25334+31])
                Tpat_var "ctxt/8573"
              expression (src/deriving.ml[753,25334+32]..src/deriving.ml[770,25931+13]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/deriving.ml[753,25334+32]..src/deriving.ml[753,25334+40])
                      Tpat_var "rec_flag/8574"
                    expression (src/deriving.ml[753,25334+41]..src/deriving.ml[770,25931+13]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/deriving.ml[753,25334+41]..src/deriving.ml[753,25334+44])
                            Tpat_var "tds/8575"
                          expression (src/deriving.ml[753,25334+45]..src/deriving.ml[770,25931+13]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/deriving.ml[753,25334+45]..src/deriving.ml[753,25334+51])
                                  Tpat_var "values/8576"
                                expression (src/deriving.ml[754,25388+2]..src/deriving.ml[770,25931+13])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/deriving.ml[754,25388+6]..src/deriving.ml[754,25388+23])
                                        Tpat_tuple
                                        [
                                          pattern (src/deriving.ml[754,25388+6]..src/deriving.ml[754,25388+16])
                                            Tpat_var "generators/8577"
                                          pattern (src/deriving.ml[754,25388+18]..src/deriving.ml[754,25388+23])
                                            Tpat_var "l_err/8578"
                                        ]
                                      expression (src/deriving.ml[754,25388+26]..src/deriving.ml[754,25388+77])
                                        Texp_apply
                                        expression (src/deriving.ml[754,25388+26]..src/deriving.ml[754,25388+42])
                                          Texp_ident "merge_generators/8527"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[754,25388+43]..src/deriving.ml[754,25388+70])
                                              Texp_ident "Deriver/6977.Field.sig_type_decl"
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[754,25388+71]..src/deriving.ml[754,25388+77])
                                              Texp_ident "values/8576"
                                        ]
                                  ]
                                  expression (src/deriving.ml[755,25469+2]..src/deriving.ml[770,25931+13])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/deriving.ml[755,25469+6]..src/deriving.ml[755,25469+11])
                                          Tpat_var "l_err/8579"
                                        expression (src/deriving.ml[756,25483+4]..src/deriving.ml[759,25587+11])
                                          Texp_apply
                                          expression (src/deriving.ml[756,25483+4]..src/deriving.ml[756,25483+12])
                                            Texp_ident "Ppxlib__!.Import.List.map"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/deriving.ml[759,25587+6]..src/deriving.ml[759,25587+11])
                                                Texp_ident "l_err/8578"
                                            <arg>
                                              Labelled "f"
                                              expression (src/deriving.ml[757,25496+9]..src/deriving.ml[758,25517+69])
                                                Texp_function
                                                Nolabel
                                                [
                                                  <case>
                                                    pattern (src/deriving.ml[757,25496+14]..src/deriving.ml[757,25496+17])
                                                      Tpat_var "err/8580"
                                                    expression (src/deriving.ml[758,25517+8]..src/deriving.ml[758,25517+68])
                                                      Texp_apply
                                                      expression (src/deriving.ml[758,25517+8]..src/deriving.ml[758,25517+42])
                                                        Texp_ident "Ppxlib__!.Ast_builder.Default.psig_extension"
                                                      [
                                                        <arg>
                                                          Labelled "loc"
                                                          expression (src/deriving.ml[758,25517+48]..src/deriving.ml[758,25517+61])
                                                            Texp_ident "Ppxlib__!.Location.none"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[758,25517+62]..src/deriving.ml[758,25517+65])
                                                            Texp_ident "err/8580"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[758,25517+66]..src/deriving.ml[758,25517+68])
                                                            Texp_construct "[]"
                                                            []
                                                      ]
                                                ]
                                          ]
                                    ]
                                    expression (src/deriving.ml[761,25604+2]..src/deriving.ml[770,25931+13])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/deriving.ml[761,25604+6]..src/deriving.ml[761,25604+15])
                                            Tpat_var "generated/8581"
                                          expression (src/deriving.ml[762,25622+4]..src/deriving.ml[765,25778+20])
                                            Texp_apply
                                            expression (src/deriving.ml[765,25778+4]..src/deriving.ml[765,25778+6])
                                              Texp_ident "Stdlib!.|>"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/deriving.ml[762,25622+4]..src/deriving.ml[764,25734+43])
                                                  Texp_construct "::"
                                                  [
                                                    expression (src/deriving.ml[762,25622+4]..src/deriving.ml[762,25622+51])
                                                      Texp_record
                                                        fields =
                                                          [
                                                            "items"
                                                              expression (src/deriving.ml[762,25622+14]..src/deriving.ml[762,25622+19])
                                                                Texp_ident "l_err/8579"
                                                            "unused_code_warnings"
                                                              expression (src/deriving.ml[762,25622+44]..src/deriving.ml[762,25622+49])
                                                                Texp_construct "false"
                                                                []
                                                          ]
                                                        representation =
                                                          Record_regular
                                                        extended_expression =
                                                          None
                                                    expression (src/deriving.ml[763,25674+7]..src/deriving.ml[764,25734+43])
                                                      Texp_apply
                                                      expression (src/deriving.ml[763,25674+7]..src/deriving.ml[763,25674+26])
                                                        Texp_ident "Generator/6276.apply_all"
                                                      [
                                                        <arg>
                                                          Labelled "ctxt"
                                                          expression (src/deriving.ml[763,25674+28]..src/deriving.ml[763,25674+32])
                                                            Texp_ident "ctxt/8573"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[763,25674+33]..src/deriving.ml[763,25674+48])
                                                            Texp_tuple
                                                            [
                                                              expression (src/deriving.ml[763,25674+34]..src/deriving.ml[763,25674+42])
                                                                Texp_ident "rec_flag/8574"
                                                              expression (src/deriving.ml[763,25674+44]..src/deriving.ml[763,25674+47])
                                                                Texp_ident "tds/8575"
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[763,25674+49]..src/deriving.ml[763,25674+59])
                                                            Texp_ident "generators/8577"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/deriving.ml[764,25734+9]..src/deriving.ml[764,25734+43])
                                                            Texp_ident "Ppxlib__!.Ast_builder.Default.psig_extension"
                                                      ]
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (src/deriving.ml[765,25778+7]..src/deriving.ml[765,25778+20])
                                                  Texp_ident "merge_derived/8542"
                                            ]
                                      ]
                                      expression (src/deriving.ml[767,25804+2]..src/deriving.ml[770,25931+13])
                                        Texp_apply
                                        expression (src/deriving.ml[767,25804+2]..src/deriving.ml[767,25804+10])
                                          Texp_ident "wrap_sig/8477"
                                        [
                                          <arg>
                                            Labelled "loc"
                                            expression (src/deriving.ml[768,25815+9]..src/deriving.ml[768,25815+58])
                                              Texp_apply
                                              expression (src/deriving.ml[768,25815+10]..src/deriving.ml[768,25815+52])
                                                Texp_ident "Ppxlib__!.Expansion_context.Deriver.derived_item_loc"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/deriving.ml[768,25815+53]..src/deriving.ml[768,25815+57])
                                                    Texp_ident "ctxt/8573"
                                              ]
                                          <arg>
                                            Labelled "hide"
                                            expression (src/deriving.ml[769,25874+10]..src/deriving.ml[769,25874+56])
                                              Texp_apply
                                              expression (src/deriving.ml[769,25874+15]..src/deriving.ml[769,25874+17])
                                                Texp_ident "Stdlib!.@@"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/deriving.ml[769,25874+11]..src/deriving.ml[769,25874+14])
                                                    Texp_ident "Stdlib!.not"
                                                <arg>
                                                  Nolabel
                                                  expression (src/deriving.ml[769,25874+18]..src/deriving.ml[769,25874+55])
                                                    Texp_apply
                                                    expression (src/deriving.ml[769,25874+18]..src/deriving.ml[769,25874+50])
                                                      Texp_ident "Ppxlib__!.Expansion_context.Deriver.inline"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/deriving.ml[769,25874+51]..src/deriving.ml[769,25874+55])
                                                          Texp_ident "ctxt/8573"
                                                    ]
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[770,25931+4]..src/deriving.ml[770,25931+13])
                                              Texp_ident "generated/8581"
                                        ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/deriving.ml[772,25946+0]..src/deriving.ml[791,26552+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[772,25946+4]..src/deriving.ml[772,25946+31])
          Tpat_var "expand_str_module_type_decl/8582"
        expression (src/deriving.ml[772,25946+32]..src/deriving.ml[791,26552+13]) ghost
          Texp_function
          Labelled "ctxt"
          [
            <case>
              pattern (src/deriving.ml[772,25946+33]..src/deriving.ml[772,25946+37])
                Tpat_var "ctxt/8584"
              expression (src/deriving.ml[772,25946+38]..src/deriving.ml[791,26552+13]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/deriving.ml[772,25946+38]..src/deriving.ml[772,25946+41])
                      Tpat_var "mtd/8585"
                    expression (src/deriving.ml[772,25946+42]..src/deriving.ml[791,26552+13]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/deriving.ml[772,25946+42]..src/deriving.ml[772,25946+52])
                            Tpat_var "generators/8586"
                          expression (src/deriving.ml[773,26001+2]..src/deriving.ml[791,26552+13])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/deriving.ml[773,26001+6]..src/deriving.ml[773,26001+23])
                                  Tpat_tuple
                                  [
                                    pattern (src/deriving.ml[773,26001+6]..src/deriving.ml[773,26001+16])
                                      Tpat_var "generators/8587"
                                    pattern (src/deriving.ml[773,26001+18]..src/deriving.ml[773,26001+23])
                                      Tpat_var "l_err/8588"
                                  ]
                                expression (src/deriving.ml[774,26027+4]..src/deriving.ml[774,26027+69])
                                  Texp_apply
                                  expression (src/deriving.ml[774,26027+4]..src/deriving.ml[774,26027+23])
                                    Texp_ident "Deriver/6977.resolve_all"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/deriving.ml[774,26027+24]..src/deriving.ml[774,26027+58])
                                        Texp_ident "Deriver/6977.Field.str_module_type_decl"
                                    <arg>
                                      Nolabel
                                      expression (src/deriving.ml[774,26027+59]..src/deriving.ml[774,26027+69])
                                        Texp_ident "generators/8586"
                                  ]
                            ]
                            expression (src/deriving.ml[776,26102+2]..src/deriving.ml[791,26552+13])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/deriving.ml[776,26102+6]..src/deriving.ml[776,26102+11])
                                    Tpat_var "l_err/8589"
                                  expression (src/deriving.ml[777,26116+4]..src/deriving.ml[780,26220+11])
                                    Texp_apply
                                    expression (src/deriving.ml[777,26116+4]..src/deriving.ml[777,26116+12])
                                      Texp_ident "Ppxlib__!.Import.List.map"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/deriving.ml[780,26220+6]..src/deriving.ml[780,26220+11])
                                          Texp_ident "l_err/8588"
                                      <arg>
                                        Labelled "f"
                                        expression (src/deriving.ml[778,26129+9]..src/deriving.ml[779,26150+69])
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/deriving.ml[778,26129+14]..src/deriving.ml[778,26129+17])
                                                Tpat_var "err/8590"
                                              expression (src/deriving.ml[779,26150+8]..src/deriving.ml[779,26150+68])
                                                Texp_apply
                                                expression (src/deriving.ml[779,26150+8]..src/deriving.ml[779,26150+42])
                                                  Texp_ident "Ppxlib__!.Ast_builder.Default.pstr_extension"
                                                [
                                                  <arg>
                                                    Labelled "loc"
                                                    expression (src/deriving.ml[779,26150+48]..src/deriving.ml[779,26150+61])
                                                      Texp_ident "Ppxlib__!.Location.none"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[779,26150+62]..src/deriving.ml[779,26150+65])
                                                      Texp_ident "err/8590"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[779,26150+66]..src/deriving.ml[779,26150+68])
                                                      Texp_construct "[]"
                                                      []
                                                ]
                                          ]
                                    ]
                              ]
                              expression (src/deriving.ml[782,26237+2]..src/deriving.ml[791,26552+13])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (src/deriving.ml[782,26237+6]..src/deriving.ml[782,26237+15])
                                      Tpat_var "generated/8591"
                                    expression (src/deriving.ml[783,26255+4]..src/deriving.ml[786,26399+20])
                                      Texp_apply
                                      expression (src/deriving.ml[786,26399+4]..src/deriving.ml[786,26399+6])
                                        Texp_ident "Stdlib!.|>"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/deriving.ml[783,26255+4]..src/deriving.ml[785,26355+43])
                                            Texp_construct "::"
                                            [
                                              expression (src/deriving.ml[783,26255+4]..src/deriving.ml[783,26255+51])
                                                Texp_record
                                                  fields =
                                                    [
                                                      "items"
                                                        expression (src/deriving.ml[783,26255+14]..src/deriving.ml[783,26255+19])
                                                          Texp_ident "l_err/8589"
                                                      "unused_code_warnings"
                                                        expression (src/deriving.ml[783,26255+44]..src/deriving.ml[783,26255+49])
                                                          Texp_construct "false"
                                                          []
                                                    ]
                                                  representation =
                                                    Record_regular
                                                  extended_expression =
                                                    None
                                              expression (src/deriving.ml[784,26307+7]..src/deriving.ml[785,26355+43])
                                                Texp_apply
                                                expression (src/deriving.ml[784,26307+7]..src/deriving.ml[784,26307+26])
                                                  Texp_ident "Generator/6276.apply_all"
                                                [
                                                  <arg>
                                                    Labelled "ctxt"
                                                    expression (src/deriving.ml[784,26307+28]..src/deriving.ml[784,26307+32])
                                                      Texp_ident "ctxt/8584"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[784,26307+33]..src/deriving.ml[784,26307+36])
                                                      Texp_ident "mtd/8585"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[784,26307+37]..src/deriving.ml[784,26307+47])
                                                      Texp_ident "generators/8587"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[785,26355+9]..src/deriving.ml[785,26355+43])
                                                      Texp_ident "Ppxlib__!.Ast_builder.Default.pstr_extension"
                                                ]
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/deriving.ml[786,26399+7]..src/deriving.ml[786,26399+20])
                                            Texp_ident "merge_derived/8542"
                                      ]
                                ]
                                expression (src/deriving.ml[788,26425+2]..src/deriving.ml[791,26552+13])
                                  Texp_apply
                                  expression (src/deriving.ml[788,26425+2]..src/deriving.ml[788,26425+10])
                                    Texp_ident "wrap_str/8452"
                                  [
                                    <arg>
                                      Labelled "loc"
                                      expression (src/deriving.ml[789,26436+9]..src/deriving.ml[789,26436+58])
                                        Texp_apply
                                        expression (src/deriving.ml[789,26436+10]..src/deriving.ml[789,26436+52])
                                          Texp_ident "Ppxlib__!.Expansion_context.Deriver.derived_item_loc"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[789,26436+53]..src/deriving.ml[789,26436+57])
                                              Texp_ident "ctxt/8584"
                                        ]
                                    <arg>
                                      Labelled "hide"
                                      expression (src/deriving.ml[790,26495+10]..src/deriving.ml[790,26495+56])
                                        Texp_apply
                                        expression (src/deriving.ml[790,26495+15]..src/deriving.ml[790,26495+17])
                                          Texp_ident "Stdlib!.@@"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[790,26495+11]..src/deriving.ml[790,26495+14])
                                              Texp_ident "Stdlib!.not"
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[790,26495+18]..src/deriving.ml[790,26495+55])
                                              Texp_apply
                                              expression (src/deriving.ml[790,26495+18]..src/deriving.ml[790,26495+50])
                                                Texp_ident "Ppxlib__!.Expansion_context.Deriver.inline"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/deriving.ml[790,26495+51]..src/deriving.ml[790,26495+55])
                                                    Texp_ident "ctxt/8584"
                                              ]
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/deriving.ml[791,26552+4]..src/deriving.ml[791,26552+13])
                                        Texp_ident "generated/8591"
                                  ]
                      ]
                ]
          ]
    ]
  structure_item (src/deriving.ml[793,26567+0]..src/deriving.ml[812,27173+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[793,26567+4]..src/deriving.ml[793,26567+31])
          Tpat_var "expand_sig_module_type_decl/8592"
        expression (src/deriving.ml[793,26567+32]..src/deriving.ml[812,27173+13]) ghost
          Texp_function
          Labelled "ctxt"
          [
            <case>
              pattern (src/deriving.ml[793,26567+33]..src/deriving.ml[793,26567+37])
                Tpat_var "ctxt/8594"
              expression (src/deriving.ml[793,26567+38]..src/deriving.ml[812,27173+13]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/deriving.ml[793,26567+38]..src/deriving.ml[793,26567+41])
                      Tpat_var "mtd/8595"
                    expression (src/deriving.ml[793,26567+42]..src/deriving.ml[812,27173+13]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/deriving.ml[793,26567+42]..src/deriving.ml[793,26567+52])
                            Tpat_var "generators/8596"
                          expression (src/deriving.ml[794,26622+2]..src/deriving.ml[812,27173+13])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/deriving.ml[794,26622+6]..src/deriving.ml[794,26622+23])
                                  Tpat_tuple
                                  [
                                    pattern (src/deriving.ml[794,26622+6]..src/deriving.ml[794,26622+16])
                                      Tpat_var "generators/8597"
                                    pattern (src/deriving.ml[794,26622+18]..src/deriving.ml[794,26622+23])
                                      Tpat_var "l_err/8598"
                                  ]
                                expression (src/deriving.ml[795,26648+4]..src/deriving.ml[795,26648+69])
                                  Texp_apply
                                  expression (src/deriving.ml[795,26648+4]..src/deriving.ml[795,26648+23])
                                    Texp_ident "Deriver/6977.resolve_all"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/deriving.ml[795,26648+24]..src/deriving.ml[795,26648+58])
                                        Texp_ident "Deriver/6977.Field.sig_module_type_decl"
                                    <arg>
                                      Nolabel
                                      expression (src/deriving.ml[795,26648+59]..src/deriving.ml[795,26648+69])
                                        Texp_ident "generators/8596"
                                  ]
                            ]
                            expression (src/deriving.ml[797,26723+2]..src/deriving.ml[812,27173+13])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/deriving.ml[797,26723+6]..src/deriving.ml[797,26723+11])
                                    Tpat_var "l_err/8599"
                                  expression (src/deriving.ml[798,26737+4]..src/deriving.ml[801,26841+11])
                                    Texp_apply
                                    expression (src/deriving.ml[798,26737+4]..src/deriving.ml[798,26737+12])
                                      Texp_ident "Ppxlib__!.Import.List.map"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/deriving.ml[801,26841+6]..src/deriving.ml[801,26841+11])
                                          Texp_ident "l_err/8598"
                                      <arg>
                                        Labelled "f"
                                        expression (src/deriving.ml[799,26750+9]..src/deriving.ml[800,26771+69])
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/deriving.ml[799,26750+14]..src/deriving.ml[799,26750+17])
                                                Tpat_var "err/8600"
                                              expression (src/deriving.ml[800,26771+8]..src/deriving.ml[800,26771+68])
                                                Texp_apply
                                                expression (src/deriving.ml[800,26771+8]..src/deriving.ml[800,26771+42])
                                                  Texp_ident "Ppxlib__!.Ast_builder.Default.psig_extension"
                                                [
                                                  <arg>
                                                    Labelled "loc"
                                                    expression (src/deriving.ml[800,26771+48]..src/deriving.ml[800,26771+61])
                                                      Texp_ident "Ppxlib__!.Location.none"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[800,26771+62]..src/deriving.ml[800,26771+65])
                                                      Texp_ident "err/8600"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[800,26771+66]..src/deriving.ml[800,26771+68])
                                                      Texp_construct "[]"
                                                      []
                                                ]
                                          ]
                                    ]
                              ]
                              expression (src/deriving.ml[803,26858+2]..src/deriving.ml[812,27173+13])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (src/deriving.ml[803,26858+6]..src/deriving.ml[803,26858+15])
                                      Tpat_var "generated/8601"
                                    expression (src/deriving.ml[804,26876+4]..src/deriving.ml[807,27020+20])
                                      Texp_apply
                                      expression (src/deriving.ml[807,27020+4]..src/deriving.ml[807,27020+6])
                                        Texp_ident "Stdlib!.|>"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/deriving.ml[804,26876+4]..src/deriving.ml[806,26976+43])
                                            Texp_construct "::"
                                            [
                                              expression (src/deriving.ml[804,26876+4]..src/deriving.ml[804,26876+51])
                                                Texp_record
                                                  fields =
                                                    [
                                                      "items"
                                                        expression (src/deriving.ml[804,26876+14]..src/deriving.ml[804,26876+19])
                                                          Texp_ident "l_err/8599"
                                                      "unused_code_warnings"
                                                        expression (src/deriving.ml[804,26876+44]..src/deriving.ml[804,26876+49])
                                                          Texp_construct "false"
                                                          []
                                                    ]
                                                  representation =
                                                    Record_regular
                                                  extended_expression =
                                                    None
                                              expression (src/deriving.ml[805,26928+7]..src/deriving.ml[806,26976+43])
                                                Texp_apply
                                                expression (src/deriving.ml[805,26928+7]..src/deriving.ml[805,26928+26])
                                                  Texp_ident "Generator/6276.apply_all"
                                                [
                                                  <arg>
                                                    Labelled "ctxt"
                                                    expression (src/deriving.ml[805,26928+28]..src/deriving.ml[805,26928+32])
                                                      Texp_ident "ctxt/8594"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[805,26928+33]..src/deriving.ml[805,26928+36])
                                                      Texp_ident "mtd/8595"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[805,26928+37]..src/deriving.ml[805,26928+47])
                                                      Texp_ident "generators/8597"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[806,26976+9]..src/deriving.ml[806,26976+43])
                                                      Texp_ident "Ppxlib__!.Ast_builder.Default.psig_extension"
                                                ]
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/deriving.ml[807,27020+7]..src/deriving.ml[807,27020+20])
                                            Texp_ident "merge_derived/8542"
                                      ]
                                ]
                                expression (src/deriving.ml[809,27046+2]..src/deriving.ml[812,27173+13])
                                  Texp_apply
                                  expression (src/deriving.ml[809,27046+2]..src/deriving.ml[809,27046+10])
                                    Texp_ident "wrap_sig/8477"
                                  [
                                    <arg>
                                      Labelled "loc"
                                      expression (src/deriving.ml[810,27057+9]..src/deriving.ml[810,27057+58])
                                        Texp_apply
                                        expression (src/deriving.ml[810,27057+10]..src/deriving.ml[810,27057+52])
                                          Texp_ident "Ppxlib__!.Expansion_context.Deriver.derived_item_loc"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[810,27057+53]..src/deriving.ml[810,27057+57])
                                              Texp_ident "ctxt/8594"
                                        ]
                                    <arg>
                                      Labelled "hide"
                                      expression (src/deriving.ml[811,27116+10]..src/deriving.ml[811,27116+56])
                                        Texp_apply
                                        expression (src/deriving.ml[811,27116+15]..src/deriving.ml[811,27116+17])
                                          Texp_ident "Stdlib!.@@"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[811,27116+11]..src/deriving.ml[811,27116+14])
                                              Texp_ident "Stdlib!.not"
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[811,27116+18]..src/deriving.ml[811,27116+55])
                                              Texp_apply
                                              expression (src/deriving.ml[811,27116+18]..src/deriving.ml[811,27116+50])
                                                Texp_ident "Ppxlib__!.Expansion_context.Deriver.inline"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/deriving.ml[811,27116+51]..src/deriving.ml[811,27116+55])
                                                    Texp_ident "ctxt/8594"
                                              ]
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/deriving.ml[812,27173+4]..src/deriving.ml[812,27173+13])
                                        Texp_ident "generated/8601"
                                  ]
                      ]
                ]
          ]
    ]
  structure_item (src/deriving.ml[814,27188+0]..src/deriving.ml[833,27778+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[814,27188+4]..src/deriving.ml[814,27188+24])
          Tpat_var "expand_str_exception/8602"
        expression (src/deriving.ml[814,27188+25]..src/deriving.ml[833,27778+13]) ghost
          Texp_function
          Labelled "ctxt"
          [
            <case>
              pattern (src/deriving.ml[814,27188+26]..src/deriving.ml[814,27188+30])
                Tpat_var "ctxt/8604"
              expression (src/deriving.ml[814,27188+31]..src/deriving.ml[833,27778+13]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/deriving.ml[814,27188+31]..src/deriving.ml[814,27188+33])
                      Tpat_var "ec/8605"
                    expression (src/deriving.ml[814,27188+34]..src/deriving.ml[833,27778+13]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/deriving.ml[814,27188+34]..src/deriving.ml[814,27188+44])
                            Tpat_var "generators/8606"
                          expression (src/deriving.ml[815,27235+2]..src/deriving.ml[833,27778+13])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/deriving.ml[815,27235+6]..src/deriving.ml[815,27235+23])
                                  Tpat_tuple
                                  [
                                    pattern (src/deriving.ml[815,27235+6]..src/deriving.ml[815,27235+16])
                                      Tpat_var "generators/8607"
                                    pattern (src/deriving.ml[815,27235+18]..src/deriving.ml[815,27235+23])
                                      Tpat_var "l_err/8608"
                                  ]
                                expression (src/deriving.ml[816,27261+4]..src/deriving.ml[816,27261+62])
                                  Texp_apply
                                  expression (src/deriving.ml[816,27261+4]..src/deriving.ml[816,27261+23])
                                    Texp_ident "Deriver/6977.resolve_all"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/deriving.ml[816,27261+24]..src/deriving.ml[816,27261+51])
                                        Texp_ident "Deriver/6977.Field.str_exception"
                                    <arg>
                                      Nolabel
                                      expression (src/deriving.ml[816,27261+52]..src/deriving.ml[816,27261+62])
                                        Texp_ident "generators/8606"
                                  ]
                            ]
                            expression (src/deriving.ml[818,27329+2]..src/deriving.ml[833,27778+13])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/deriving.ml[818,27329+6]..src/deriving.ml[818,27329+11])
                                    Tpat_var "l_err/8609"
                                  expression (src/deriving.ml[819,27343+4]..src/deriving.ml[822,27447+11])
                                    Texp_apply
                                    expression (src/deriving.ml[819,27343+4]..src/deriving.ml[819,27343+12])
                                      Texp_ident "Ppxlib__!.Import.List.map"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/deriving.ml[822,27447+6]..src/deriving.ml[822,27447+11])
                                          Texp_ident "l_err/8608"
                                      <arg>
                                        Labelled "f"
                                        expression (src/deriving.ml[820,27356+9]..src/deriving.ml[821,27377+69])
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/deriving.ml[820,27356+14]..src/deriving.ml[820,27356+17])
                                                Tpat_var "err/8610"
                                              expression (src/deriving.ml[821,27377+8]..src/deriving.ml[821,27377+68])
                                                Texp_apply
                                                expression (src/deriving.ml[821,27377+8]..src/deriving.ml[821,27377+42])
                                                  Texp_ident "Ppxlib__!.Ast_builder.Default.pstr_extension"
                                                [
                                                  <arg>
                                                    Labelled "loc"
                                                    expression (src/deriving.ml[821,27377+48]..src/deriving.ml[821,27377+61])
                                                      Texp_ident "Ppxlib__!.Location.none"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[821,27377+62]..src/deriving.ml[821,27377+65])
                                                      Texp_ident "err/8610"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[821,27377+66]..src/deriving.ml[821,27377+68])
                                                      Texp_construct "[]"
                                                      []
                                                ]
                                          ]
                                    ]
                              ]
                              expression (src/deriving.ml[824,27464+2]..src/deriving.ml[833,27778+13])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (src/deriving.ml[824,27464+6]..src/deriving.ml[824,27464+15])
                                      Tpat_var "generated/8611"
                                    expression (src/deriving.ml[825,27482+4]..src/deriving.ml[828,27625+20])
                                      Texp_apply
                                      expression (src/deriving.ml[828,27625+4]..src/deriving.ml[828,27625+6])
                                        Texp_ident "Stdlib!.|>"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/deriving.ml[825,27482+4]..src/deriving.ml[827,27581+43])
                                            Texp_construct "::"
                                            [
                                              expression (src/deriving.ml[825,27482+4]..src/deriving.ml[825,27482+51])
                                                Texp_record
                                                  fields =
                                                    [
                                                      "items"
                                                        expression (src/deriving.ml[825,27482+14]..src/deriving.ml[825,27482+19])
                                                          Texp_ident "l_err/8609"
                                                      "unused_code_warnings"
                                                        expression (src/deriving.ml[825,27482+44]..src/deriving.ml[825,27482+49])
                                                          Texp_construct "false"
                                                          []
                                                    ]
                                                  representation =
                                                    Record_regular
                                                  extended_expression =
                                                    None
                                              expression (src/deriving.ml[826,27534+7]..src/deriving.ml[827,27581+43])
                                                Texp_apply
                                                expression (src/deriving.ml[826,27534+7]..src/deriving.ml[826,27534+26])
                                                  Texp_ident "Generator/6276.apply_all"
                                                [
                                                  <arg>
                                                    Labelled "ctxt"
                                                    expression (src/deriving.ml[826,27534+28]..src/deriving.ml[826,27534+32])
                                                      Texp_ident "ctxt/8604"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[826,27534+33]..src/deriving.ml[826,27534+35])
                                                      Texp_ident "ec/8605"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[826,27534+36]..src/deriving.ml[826,27534+46])
                                                      Texp_ident "generators/8607"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[827,27581+9]..src/deriving.ml[827,27581+43])
                                                      Texp_ident "Ppxlib__!.Ast_builder.Default.pstr_extension"
                                                ]
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/deriving.ml[828,27625+7]..src/deriving.ml[828,27625+20])
                                            Texp_ident "merge_derived/8542"
                                      ]
                                ]
                                expression (src/deriving.ml[830,27651+2]..src/deriving.ml[833,27778+13])
                                  Texp_apply
                                  expression (src/deriving.ml[830,27651+2]..src/deriving.ml[830,27651+10])
                                    Texp_ident "wrap_str/8452"
                                  [
                                    <arg>
                                      Labelled "loc"
                                      expression (src/deriving.ml[831,27662+9]..src/deriving.ml[831,27662+58])
                                        Texp_apply
                                        expression (src/deriving.ml[831,27662+10]..src/deriving.ml[831,27662+52])
                                          Texp_ident "Ppxlib__!.Expansion_context.Deriver.derived_item_loc"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[831,27662+53]..src/deriving.ml[831,27662+57])
                                              Texp_ident "ctxt/8604"
                                        ]
                                    <arg>
                                      Labelled "hide"
                                      expression (src/deriving.ml[832,27721+10]..src/deriving.ml[832,27721+56])
                                        Texp_apply
                                        expression (src/deriving.ml[832,27721+15]..src/deriving.ml[832,27721+17])
                                          Texp_ident "Stdlib!.@@"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[832,27721+11]..src/deriving.ml[832,27721+14])
                                              Texp_ident "Stdlib!.not"
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[832,27721+18]..src/deriving.ml[832,27721+55])
                                              Texp_apply
                                              expression (src/deriving.ml[832,27721+18]..src/deriving.ml[832,27721+50])
                                                Texp_ident "Ppxlib__!.Expansion_context.Deriver.inline"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/deriving.ml[832,27721+51]..src/deriving.ml[832,27721+55])
                                                    Texp_ident "ctxt/8604"
                                              ]
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/deriving.ml[833,27778+4]..src/deriving.ml[833,27778+13])
                                        Texp_ident "generated/8611"
                                  ]
                      ]
                ]
          ]
    ]
  structure_item (src/deriving.ml[835,27793+0]..src/deriving.ml[854,28383+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[835,27793+4]..src/deriving.ml[835,27793+24])
          Tpat_var "expand_sig_exception/8612"
        expression (src/deriving.ml[835,27793+25]..src/deriving.ml[854,28383+13]) ghost
          Texp_function
          Labelled "ctxt"
          [
            <case>
              pattern (src/deriving.ml[835,27793+26]..src/deriving.ml[835,27793+30])
                Tpat_var "ctxt/8614"
              expression (src/deriving.ml[835,27793+31]..src/deriving.ml[854,28383+13]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/deriving.ml[835,27793+31]..src/deriving.ml[835,27793+33])
                      Tpat_var "ec/8615"
                    expression (src/deriving.ml[835,27793+34]..src/deriving.ml[854,28383+13]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/deriving.ml[835,27793+34]..src/deriving.ml[835,27793+44])
                            Tpat_var "generators/8616"
                          expression (src/deriving.ml[836,27840+2]..src/deriving.ml[854,28383+13])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/deriving.ml[836,27840+6]..src/deriving.ml[836,27840+23])
                                  Tpat_tuple
                                  [
                                    pattern (src/deriving.ml[836,27840+6]..src/deriving.ml[836,27840+16])
                                      Tpat_var "generators/8617"
                                    pattern (src/deriving.ml[836,27840+18]..src/deriving.ml[836,27840+23])
                                      Tpat_var "l_err/8618"
                                  ]
                                expression (src/deriving.ml[837,27866+4]..src/deriving.ml[837,27866+62])
                                  Texp_apply
                                  expression (src/deriving.ml[837,27866+4]..src/deriving.ml[837,27866+23])
                                    Texp_ident "Deriver/6977.resolve_all"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/deriving.ml[837,27866+24]..src/deriving.ml[837,27866+51])
                                        Texp_ident "Deriver/6977.Field.sig_exception"
                                    <arg>
                                      Nolabel
                                      expression (src/deriving.ml[837,27866+52]..src/deriving.ml[837,27866+62])
                                        Texp_ident "generators/8616"
                                  ]
                            ]
                            expression (src/deriving.ml[839,27934+2]..src/deriving.ml[854,28383+13])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/deriving.ml[839,27934+6]..src/deriving.ml[839,27934+11])
                                    Tpat_var "l_err/8619"
                                  expression (src/deriving.ml[840,27948+4]..src/deriving.ml[843,28052+11])
                                    Texp_apply
                                    expression (src/deriving.ml[840,27948+4]..src/deriving.ml[840,27948+12])
                                      Texp_ident "Ppxlib__!.Import.List.map"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/deriving.ml[843,28052+6]..src/deriving.ml[843,28052+11])
                                          Texp_ident "l_err/8618"
                                      <arg>
                                        Labelled "f"
                                        expression (src/deriving.ml[841,27961+9]..src/deriving.ml[842,27982+69])
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/deriving.ml[841,27961+14]..src/deriving.ml[841,27961+17])
                                                Tpat_var "err/8620"
                                              expression (src/deriving.ml[842,27982+8]..src/deriving.ml[842,27982+68])
                                                Texp_apply
                                                expression (src/deriving.ml[842,27982+8]..src/deriving.ml[842,27982+42])
                                                  Texp_ident "Ppxlib__!.Ast_builder.Default.psig_extension"
                                                [
                                                  <arg>
                                                    Labelled "loc"
                                                    expression (src/deriving.ml[842,27982+48]..src/deriving.ml[842,27982+61])
                                                      Texp_ident "Ppxlib__!.Location.none"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[842,27982+62]..src/deriving.ml[842,27982+65])
                                                      Texp_ident "err/8620"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[842,27982+66]..src/deriving.ml[842,27982+68])
                                                      Texp_construct "[]"
                                                      []
                                                ]
                                          ]
                                    ]
                              ]
                              expression (src/deriving.ml[845,28069+2]..src/deriving.ml[854,28383+13])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (src/deriving.ml[845,28069+6]..src/deriving.ml[845,28069+15])
                                      Tpat_var "generated/8621"
                                    expression (src/deriving.ml[846,28087+4]..src/deriving.ml[849,28230+20])
                                      Texp_apply
                                      expression (src/deriving.ml[849,28230+4]..src/deriving.ml[849,28230+6])
                                        Texp_ident "Stdlib!.|>"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/deriving.ml[846,28087+4]..src/deriving.ml[848,28186+43])
                                            Texp_construct "::"
                                            [
                                              expression (src/deriving.ml[846,28087+4]..src/deriving.ml[846,28087+51])
                                                Texp_record
                                                  fields =
                                                    [
                                                      "items"
                                                        expression (src/deriving.ml[846,28087+14]..src/deriving.ml[846,28087+19])
                                                          Texp_ident "l_err/8619"
                                                      "unused_code_warnings"
                                                        expression (src/deriving.ml[846,28087+44]..src/deriving.ml[846,28087+49])
                                                          Texp_construct "false"
                                                          []
                                                    ]
                                                  representation =
                                                    Record_regular
                                                  extended_expression =
                                                    None
                                              expression (src/deriving.ml[847,28139+7]..src/deriving.ml[848,28186+43])
                                                Texp_apply
                                                expression (src/deriving.ml[847,28139+7]..src/deriving.ml[847,28139+26])
                                                  Texp_ident "Generator/6276.apply_all"
                                                [
                                                  <arg>
                                                    Labelled "ctxt"
                                                    expression (src/deriving.ml[847,28139+28]..src/deriving.ml[847,28139+32])
                                                      Texp_ident "ctxt/8614"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[847,28139+33]..src/deriving.ml[847,28139+35])
                                                      Texp_ident "ec/8615"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[847,28139+36]..src/deriving.ml[847,28139+46])
                                                      Texp_ident "generators/8617"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[848,28186+9]..src/deriving.ml[848,28186+43])
                                                      Texp_ident "Ppxlib__!.Ast_builder.Default.psig_extension"
                                                ]
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/deriving.ml[849,28230+7]..src/deriving.ml[849,28230+20])
                                            Texp_ident "merge_derived/8542"
                                      ]
                                ]
                                expression (src/deriving.ml[851,28256+2]..src/deriving.ml[854,28383+13])
                                  Texp_apply
                                  expression (src/deriving.ml[851,28256+2]..src/deriving.ml[851,28256+10])
                                    Texp_ident "wrap_sig/8477"
                                  [
                                    <arg>
                                      Labelled "loc"
                                      expression (src/deriving.ml[852,28267+9]..src/deriving.ml[852,28267+58])
                                        Texp_apply
                                        expression (src/deriving.ml[852,28267+10]..src/deriving.ml[852,28267+52])
                                          Texp_ident "Ppxlib__!.Expansion_context.Deriver.derived_item_loc"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[852,28267+53]..src/deriving.ml[852,28267+57])
                                              Texp_ident "ctxt/8614"
                                        ]
                                    <arg>
                                      Labelled "hide"
                                      expression (src/deriving.ml[853,28326+10]..src/deriving.ml[853,28326+56])
                                        Texp_apply
                                        expression (src/deriving.ml[853,28326+15]..src/deriving.ml[853,28326+17])
                                          Texp_ident "Stdlib!.@@"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[853,28326+11]..src/deriving.ml[853,28326+14])
                                              Texp_ident "Stdlib!.not"
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[853,28326+18]..src/deriving.ml[853,28326+55])
                                              Texp_apply
                                              expression (src/deriving.ml[853,28326+18]..src/deriving.ml[853,28326+50])
                                                Texp_ident "Ppxlib__!.Expansion_context.Deriver.inline"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/deriving.ml[853,28326+51]..src/deriving.ml[853,28326+55])
                                                    Texp_ident "ctxt/8614"
                                              ]
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/deriving.ml[854,28383+4]..src/deriving.ml[854,28383+13])
                                        Texp_ident "generated/8621"
                                  ]
                      ]
                ]
          ]
    ]
  structure_item (src/deriving.ml[856,28398+0]..src/deriving.ml[875,28986+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[856,28398+4]..src/deriving.ml[856,28398+23])
          Tpat_var "expand_str_type_ext/8622"
        expression (src/deriving.ml[856,28398+24]..src/deriving.ml[875,28986+13]) ghost
          Texp_function
          Labelled "ctxt"
          [
            <case>
              pattern (src/deriving.ml[856,28398+25]..src/deriving.ml[856,28398+29])
                Tpat_var "ctxt/8624"
              expression (src/deriving.ml[856,28398+30]..src/deriving.ml[875,28986+13]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/deriving.ml[856,28398+30]..src/deriving.ml[856,28398+32])
                      Tpat_var "te/8625"
                    expression (src/deriving.ml[856,28398+33]..src/deriving.ml[875,28986+13]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/deriving.ml[856,28398+33]..src/deriving.ml[856,28398+43])
                            Tpat_var "generators/8626"
                          expression (src/deriving.ml[857,28444+2]..src/deriving.ml[875,28986+13])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/deriving.ml[857,28444+6]..src/deriving.ml[857,28444+23])
                                  Tpat_tuple
                                  [
                                    pattern (src/deriving.ml[857,28444+6]..src/deriving.ml[857,28444+16])
                                      Tpat_var "generators/8627"
                                    pattern (src/deriving.ml[857,28444+18]..src/deriving.ml[857,28444+23])
                                      Tpat_var "l_err/8628"
                                  ]
                                expression (src/deriving.ml[858,28470+4]..src/deriving.ml[858,28470+61])
                                  Texp_apply
                                  expression (src/deriving.ml[858,28470+4]..src/deriving.ml[858,28470+23])
                                    Texp_ident "Deriver/6977.resolve_all"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/deriving.ml[858,28470+24]..src/deriving.ml[858,28470+50])
                                        Texp_ident "Deriver/6977.Field.str_type_ext"
                                    <arg>
                                      Nolabel
                                      expression (src/deriving.ml[858,28470+51]..src/deriving.ml[858,28470+61])
                                        Texp_ident "generators/8626"
                                  ]
                            ]
                            expression (src/deriving.ml[860,28537+2]..src/deriving.ml[875,28986+13])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/deriving.ml[860,28537+6]..src/deriving.ml[860,28537+11])
                                    Tpat_var "l_err/8629"
                                  expression (src/deriving.ml[861,28551+4]..src/deriving.ml[864,28655+11])
                                    Texp_apply
                                    expression (src/deriving.ml[861,28551+4]..src/deriving.ml[861,28551+12])
                                      Texp_ident "Ppxlib__!.Import.List.map"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/deriving.ml[864,28655+6]..src/deriving.ml[864,28655+11])
                                          Texp_ident "l_err/8628"
                                      <arg>
                                        Labelled "f"
                                        expression (src/deriving.ml[862,28564+9]..src/deriving.ml[863,28585+69])
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/deriving.ml[862,28564+14]..src/deriving.ml[862,28564+17])
                                                Tpat_var "err/8630"
                                              expression (src/deriving.ml[863,28585+8]..src/deriving.ml[863,28585+68])
                                                Texp_apply
                                                expression (src/deriving.ml[863,28585+8]..src/deriving.ml[863,28585+42])
                                                  Texp_ident "Ppxlib__!.Ast_builder.Default.pstr_extension"
                                                [
                                                  <arg>
                                                    Labelled "loc"
                                                    expression (src/deriving.ml[863,28585+48]..src/deriving.ml[863,28585+61])
                                                      Texp_ident "Ppxlib__!.Location.none"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[863,28585+62]..src/deriving.ml[863,28585+65])
                                                      Texp_ident "err/8630"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[863,28585+66]..src/deriving.ml[863,28585+68])
                                                      Texp_construct "[]"
                                                      []
                                                ]
                                          ]
                                    ]
                              ]
                              expression (src/deriving.ml[866,28672+2]..src/deriving.ml[875,28986+13])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (src/deriving.ml[866,28672+6]..src/deriving.ml[866,28672+15])
                                      Tpat_var "generated/8631"
                                    expression (src/deriving.ml[867,28690+4]..src/deriving.ml[870,28833+20])
                                      Texp_apply
                                      expression (src/deriving.ml[870,28833+4]..src/deriving.ml[870,28833+6])
                                        Texp_ident "Stdlib!.|>"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/deriving.ml[867,28690+4]..src/deriving.ml[869,28789+43])
                                            Texp_construct "::"
                                            [
                                              expression (src/deriving.ml[867,28690+4]..src/deriving.ml[867,28690+51])
                                                Texp_record
                                                  fields =
                                                    [
                                                      "items"
                                                        expression (src/deriving.ml[867,28690+14]..src/deriving.ml[867,28690+19])
                                                          Texp_ident "l_err/8629"
                                                      "unused_code_warnings"
                                                        expression (src/deriving.ml[867,28690+44]..src/deriving.ml[867,28690+49])
                                                          Texp_construct "false"
                                                          []
                                                    ]
                                                  representation =
                                                    Record_regular
                                                  extended_expression =
                                                    None
                                              expression (src/deriving.ml[868,28742+7]..src/deriving.ml[869,28789+43])
                                                Texp_apply
                                                expression (src/deriving.ml[868,28742+7]..src/deriving.ml[868,28742+26])
                                                  Texp_ident "Generator/6276.apply_all"
                                                [
                                                  <arg>
                                                    Labelled "ctxt"
                                                    expression (src/deriving.ml[868,28742+28]..src/deriving.ml[868,28742+32])
                                                      Texp_ident "ctxt/8624"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[868,28742+33]..src/deriving.ml[868,28742+35])
                                                      Texp_ident "te/8625"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[868,28742+36]..src/deriving.ml[868,28742+46])
                                                      Texp_ident "generators/8627"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[869,28789+9]..src/deriving.ml[869,28789+43])
                                                      Texp_ident "Ppxlib__!.Ast_builder.Default.pstr_extension"
                                                ]
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/deriving.ml[870,28833+7]..src/deriving.ml[870,28833+20])
                                            Texp_ident "merge_derived/8542"
                                      ]
                                ]
                                expression (src/deriving.ml[872,28859+2]..src/deriving.ml[875,28986+13])
                                  Texp_apply
                                  expression (src/deriving.ml[872,28859+2]..src/deriving.ml[872,28859+10])
                                    Texp_ident "wrap_str/8452"
                                  [
                                    <arg>
                                      Labelled "loc"
                                      expression (src/deriving.ml[873,28870+9]..src/deriving.ml[873,28870+58])
                                        Texp_apply
                                        expression (src/deriving.ml[873,28870+10]..src/deriving.ml[873,28870+52])
                                          Texp_ident "Ppxlib__!.Expansion_context.Deriver.derived_item_loc"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[873,28870+53]..src/deriving.ml[873,28870+57])
                                              Texp_ident "ctxt/8624"
                                        ]
                                    <arg>
                                      Labelled "hide"
                                      expression (src/deriving.ml[874,28929+10]..src/deriving.ml[874,28929+56])
                                        Texp_apply
                                        expression (src/deriving.ml[874,28929+15]..src/deriving.ml[874,28929+17])
                                          Texp_ident "Stdlib!.@@"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[874,28929+11]..src/deriving.ml[874,28929+14])
                                              Texp_ident "Stdlib!.not"
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[874,28929+18]..src/deriving.ml[874,28929+55])
                                              Texp_apply
                                              expression (src/deriving.ml[874,28929+18]..src/deriving.ml[874,28929+50])
                                                Texp_ident "Ppxlib__!.Expansion_context.Deriver.inline"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/deriving.ml[874,28929+51]..src/deriving.ml[874,28929+55])
                                                    Texp_ident "ctxt/8624"
                                              ]
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/deriving.ml[875,28986+4]..src/deriving.ml[875,28986+13])
                                        Texp_ident "generated/8631"
                                  ]
                      ]
                ]
          ]
    ]
  structure_item (src/deriving.ml[877,29001+0]..src/deriving.ml[896,29589+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[877,29001+4]..src/deriving.ml[877,29001+23])
          Tpat_var "expand_sig_type_ext/8632"
        expression (src/deriving.ml[877,29001+24]..src/deriving.ml[896,29589+13]) ghost
          Texp_function
          Labelled "ctxt"
          [
            <case>
              pattern (src/deriving.ml[877,29001+25]..src/deriving.ml[877,29001+29])
                Tpat_var "ctxt/8634"
              expression (src/deriving.ml[877,29001+30]..src/deriving.ml[896,29589+13]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/deriving.ml[877,29001+30]..src/deriving.ml[877,29001+32])
                      Tpat_var "te/8635"
                    expression (src/deriving.ml[877,29001+33]..src/deriving.ml[896,29589+13]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/deriving.ml[877,29001+33]..src/deriving.ml[877,29001+43])
                            Tpat_var "generators/8636"
                          expression (src/deriving.ml[878,29047+2]..src/deriving.ml[896,29589+13])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/deriving.ml[878,29047+6]..src/deriving.ml[878,29047+23])
                                  Tpat_tuple
                                  [
                                    pattern (src/deriving.ml[878,29047+6]..src/deriving.ml[878,29047+16])
                                      Tpat_var "generators/8637"
                                    pattern (src/deriving.ml[878,29047+18]..src/deriving.ml[878,29047+23])
                                      Tpat_var "l_err/8638"
                                  ]
                                expression (src/deriving.ml[879,29073+4]..src/deriving.ml[879,29073+61])
                                  Texp_apply
                                  expression (src/deriving.ml[879,29073+4]..src/deriving.ml[879,29073+23])
                                    Texp_ident "Deriver/6977.resolve_all"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/deriving.ml[879,29073+24]..src/deriving.ml[879,29073+50])
                                        Texp_ident "Deriver/6977.Field.sig_type_ext"
                                    <arg>
                                      Nolabel
                                      expression (src/deriving.ml[879,29073+51]..src/deriving.ml[879,29073+61])
                                        Texp_ident "generators/8636"
                                  ]
                            ]
                            expression (src/deriving.ml[881,29140+2]..src/deriving.ml[896,29589+13])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/deriving.ml[881,29140+6]..src/deriving.ml[881,29140+11])
                                    Tpat_var "l_err/8639"
                                  expression (src/deriving.ml[882,29154+4]..src/deriving.ml[885,29258+11])
                                    Texp_apply
                                    expression (src/deriving.ml[882,29154+4]..src/deriving.ml[882,29154+12])
                                      Texp_ident "Ppxlib__!.Import.List.map"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/deriving.ml[885,29258+6]..src/deriving.ml[885,29258+11])
                                          Texp_ident "l_err/8638"
                                      <arg>
                                        Labelled "f"
                                        expression (src/deriving.ml[883,29167+9]..src/deriving.ml[884,29188+69])
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/deriving.ml[883,29167+14]..src/deriving.ml[883,29167+17])
                                                Tpat_var "err/8640"
                                              expression (src/deriving.ml[884,29188+8]..src/deriving.ml[884,29188+68])
                                                Texp_apply
                                                expression (src/deriving.ml[884,29188+8]..src/deriving.ml[884,29188+42])
                                                  Texp_ident "Ppxlib__!.Ast_builder.Default.psig_extension"
                                                [
                                                  <arg>
                                                    Labelled "loc"
                                                    expression (src/deriving.ml[884,29188+48]..src/deriving.ml[884,29188+61])
                                                      Texp_ident "Ppxlib__!.Location.none"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[884,29188+62]..src/deriving.ml[884,29188+65])
                                                      Texp_ident "err/8640"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[884,29188+66]..src/deriving.ml[884,29188+68])
                                                      Texp_construct "[]"
                                                      []
                                                ]
                                          ]
                                    ]
                              ]
                              expression (src/deriving.ml[887,29275+2]..src/deriving.ml[896,29589+13])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (src/deriving.ml[887,29275+6]..src/deriving.ml[887,29275+15])
                                      Tpat_var "generated/8641"
                                    expression (src/deriving.ml[888,29293+4]..src/deriving.ml[891,29436+20])
                                      Texp_apply
                                      expression (src/deriving.ml[891,29436+4]..src/deriving.ml[891,29436+6])
                                        Texp_ident "Stdlib!.|>"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/deriving.ml[888,29293+4]..src/deriving.ml[890,29392+43])
                                            Texp_construct "::"
                                            [
                                              expression (src/deriving.ml[888,29293+4]..src/deriving.ml[888,29293+51])
                                                Texp_record
                                                  fields =
                                                    [
                                                      "items"
                                                        expression (src/deriving.ml[888,29293+14]..src/deriving.ml[888,29293+19])
                                                          Texp_ident "l_err/8639"
                                                      "unused_code_warnings"
                                                        expression (src/deriving.ml[888,29293+44]..src/deriving.ml[888,29293+49])
                                                          Texp_construct "false"
                                                          []
                                                    ]
                                                  representation =
                                                    Record_regular
                                                  extended_expression =
                                                    None
                                              expression (src/deriving.ml[889,29345+7]..src/deriving.ml[890,29392+43])
                                                Texp_apply
                                                expression (src/deriving.ml[889,29345+7]..src/deriving.ml[889,29345+26])
                                                  Texp_ident "Generator/6276.apply_all"
                                                [
                                                  <arg>
                                                    Labelled "ctxt"
                                                    expression (src/deriving.ml[889,29345+28]..src/deriving.ml[889,29345+32])
                                                      Texp_ident "ctxt/8634"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[889,29345+33]..src/deriving.ml[889,29345+35])
                                                      Texp_ident "te/8635"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[889,29345+36]..src/deriving.ml[889,29345+46])
                                                      Texp_ident "generators/8637"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/deriving.ml[890,29392+9]..src/deriving.ml[890,29392+43])
                                                      Texp_ident "Ppxlib__!.Ast_builder.Default.psig_extension"
                                                ]
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/deriving.ml[891,29436+7]..src/deriving.ml[891,29436+20])
                                            Texp_ident "merge_derived/8542"
                                      ]
                                ]
                                expression (src/deriving.ml[893,29462+2]..src/deriving.ml[896,29589+13])
                                  Texp_apply
                                  expression (src/deriving.ml[893,29462+2]..src/deriving.ml[893,29462+10])
                                    Texp_ident "wrap_sig/8477"
                                  [
                                    <arg>
                                      Labelled "loc"
                                      expression (src/deriving.ml[894,29473+9]..src/deriving.ml[894,29473+58])
                                        Texp_apply
                                        expression (src/deriving.ml[894,29473+10]..src/deriving.ml[894,29473+52])
                                          Texp_ident "Ppxlib__!.Expansion_context.Deriver.derived_item_loc"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[894,29473+53]..src/deriving.ml[894,29473+57])
                                              Texp_ident "ctxt/8634"
                                        ]
                                    <arg>
                                      Labelled "hide"
                                      expression (src/deriving.ml[895,29532+10]..src/deriving.ml[895,29532+56])
                                        Texp_apply
                                        expression (src/deriving.ml[895,29532+15]..src/deriving.ml[895,29532+17])
                                          Texp_ident "Stdlib!.@@"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[895,29532+11]..src/deriving.ml[895,29532+14])
                                              Texp_ident "Stdlib!.not"
                                          <arg>
                                            Nolabel
                                            expression (src/deriving.ml[895,29532+18]..src/deriving.ml[895,29532+55])
                                              Texp_apply
                                              expression (src/deriving.ml[895,29532+18]..src/deriving.ml[895,29532+50])
                                                Texp_ident "Ppxlib__!.Expansion_context.Deriver.inline"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/deriving.ml[895,29532+51]..src/deriving.ml[895,29532+55])
                                                    Texp_ident "ctxt/8634"
                                              ]
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/deriving.ml[896,29589+4]..src/deriving.ml[896,29589+13])
                                        Texp_ident "generated/8641"
                                  ]
                      ]
                ]
          ]
    ]
  structure_item (src/deriving.ml[898,29604+0]..src/deriving.ml[908,30063+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[898,29604+4]..src/deriving.ml[898,29604+9])
          Tpat_var "rules/8642"
        expression (src/deriving.ml[898,29604+10]..src/deriving.ml[908,30063+3]) ghost
          Texp_function
          Labelled "typ"
          [
            <case>
              pattern (src/deriving.ml[898,29604+11]..src/deriving.ml[898,29604+14])
                Tpat_var "typ/8644"
              expression (src/deriving.ml[898,29604+15]..src/deriving.ml[908,30063+3]) ghost
                Texp_function
                Labelled "expand_sig"
                [
                  <case>
                    pattern (src/deriving.ml[898,29604+16]..src/deriving.ml[898,29604+26])
                      Tpat_var "expand_sig/8645"
                    expression (src/deriving.ml[898,29604+27]..src/deriving.ml[908,30063+3]) ghost
                      Texp_function
                      Labelled "expand_str"
                      [
                        <case>
                          pattern (src/deriving.ml[898,29604+28]..src/deriving.ml[898,29604+38])
                            Tpat_var "expand_str/8646"
                          expression (src/deriving.ml[898,29604+39]..src/deriving.ml[908,30063+3]) ghost
                            Texp_function
                            Labelled "rule_str"
                            [
                              <case>
                                pattern (src/deriving.ml[898,29604+40]..src/deriving.ml[898,29604+48])
                                  Tpat_var "rule_str/8647"
                                expression (src/deriving.ml[898,29604+49]..src/deriving.ml[908,30063+3]) ghost
                                  Texp_function
                                  Labelled "rule_sig"
                                  [
                                    <case>
                                      pattern (src/deriving.ml[898,29604+50]..src/deriving.ml[898,29604+58])
                                        Tpat_var "rule_sig/8648"
                                      expression (src/deriving.ml[898,29604+59]..src/deriving.ml[908,30063+3]) ghost
                                        Texp_function
                                        Labelled "rule_str_expect"
                                        [
                                          <case>
                                            pattern (src/deriving.ml[898,29604+60]..src/deriving.ml[898,29604+75])
                                              Tpat_var "rule_str_expect/8649"
                                            expression (src/deriving.ml[899,29680+4]..src/deriving.ml[908,30063+3]) ghost
                                              Texp_function
                                              Labelled "rule_sig_expect"
                                              [
                                                <case>
                                                  pattern (src/deriving.ml[899,29680+5]..src/deriving.ml[899,29680+20])
                                                    Tpat_var "rule_sig_expect/8650"
                                                  expression (src/deriving.ml[900,29703+2]..src/deriving.ml[908,30063+3])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (src/deriving.ml[900,29703+6]..src/deriving.ml[900,29703+12])
                                                          Tpat_var "prefix/8651"
                                                        expression (src/deriving.ml[900,29703+15]..src/deriving.ml[900,29703+24])
                                                          Texp_constant Const_string("ppxlib.",(src/deriving.ml[900,29703+16]..src/deriving.ml[900,29703+23]),None)
                                                    ]
                                                    expression (src/deriving.ml[901,29731+2]..src/deriving.ml[908,30063+3])
                                                      Texp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (src/deriving.ml[901,29731+6]..src/deriving.ml[901,29731+19])
                                                            Tpat_var "deriving_attr/8652"
                                                          expression (src/deriving.ml[901,29731+22]..src/deriving.ml[901,29731+61])
                                                            Texp_apply
                                                            expression (src/deriving.ml[901,29731+22]..src/deriving.ml[901,29731+38])
                                                              Texp_ident "mk_deriving_attr/7160"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/deriving.ml[901,29731+58]..src/deriving.ml[901,29731+61])
                                                                  Texp_ident "typ/8644"
                                                              <arg>
                                                                Labelled "prefix"
                                                                expression (src/deriving.ml[901,29731+51]..src/deriving.ml[901,29731+57])
                                                                  Texp_ident "prefix/8651"
                                                              <arg>
                                                                Labelled "suffix"
                                                                expression (src/deriving.ml[901,29731+47]..src/deriving.ml[901,29731+49])
                                                                  Texp_constant Const_string("",(src/deriving.ml[901,29731+48]..src/deriving.ml[901,29731+48]),None)
                                                            ]
                                                      ]
                                                      expression (src/deriving.ml[902,29796+2]..src/deriving.ml[908,30063+3])
                                                        Texp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (src/deriving.ml[902,29796+6]..src/deriving.ml[902,29796+26])
                                                              Tpat_var "deriving_attr_expect/8653"
                                                            expression (src/deriving.ml[902,29796+29]..src/deriving.ml[902,29796+75])
                                                              Texp_apply
                                                              expression (src/deriving.ml[902,29796+29]..src/deriving.ml[902,29796+45])
                                                                Texp_ident "mk_deriving_attr/7160"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/deriving.ml[902,29796+72]..src/deriving.ml[902,29796+75])
                                                                    Texp_ident "typ/8644"
                                                                <arg>
                                                                  Labelled "prefix"
                                                                  expression (src/deriving.ml[902,29796+65]..src/deriving.ml[902,29796+71])
                                                                    Texp_ident "prefix/8651"
                                                                <arg>
                                                                  Labelled "suffix"
                                                                  expression (src/deriving.ml[902,29796+54]..src/deriving.ml[902,29796+63])
                                                                    Texp_constant Const_string("_inline",(src/deriving.ml[902,29796+55]..src/deriving.ml[902,29796+62]),None)
                                                              ]
                                                        ]
                                                        expression (src/deriving.ml[903,29875+2]..src/deriving.ml[908,30063+3])
                                                          Texp_construct "::"
                                                          [
                                                            expression (src/deriving.ml[904,29879+4]..src/deriving.ml[904,29879+37])
                                                              Texp_apply
                                                              expression (src/deriving.ml[904,29879+4]..src/deriving.ml[904,29879+12])
                                                                Texp_ident "rule_sig/8648"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/deriving.ml[904,29879+13]..src/deriving.ml[904,29879+26])
                                                                    Texp_ident "deriving_attr/8652"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/deriving.ml[904,29879+27]..src/deriving.ml[904,29879+37])
                                                                    Texp_ident "expand_sig/8645"
                                                              ]
                                                            expression (src/deriving.ml[905,29918+4]..src/deriving.ml[908,30063+3]) ghost
                                                              Texp_construct "::"
                                                              [
                                                                expression (src/deriving.ml[905,29918+4]..src/deriving.ml[905,29918+37])
                                                                  Texp_apply
                                                                  expression (src/deriving.ml[905,29918+4]..src/deriving.ml[905,29918+12])
                                                                    Texp_ident "rule_str/8647"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/deriving.ml[905,29918+13]..src/deriving.ml[905,29918+26])
                                                                        Texp_ident "deriving_attr/8652"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/deriving.ml[905,29918+27]..src/deriving.ml[905,29918+37])
                                                                        Texp_ident "expand_str/8646"
                                                                  ]
                                                                expression (src/deriving.ml[906,29957+4]..src/deriving.ml[908,30063+3]) ghost
                                                                  Texp_construct "::"
                                                                  [
                                                                    expression (src/deriving.ml[906,29957+4]..src/deriving.ml[906,29957+51])
                                                                      Texp_apply
                                                                      expression (src/deriving.ml[906,29957+4]..src/deriving.ml[906,29957+19])
                                                                        Texp_ident "rule_str_expect/8649"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/deriving.ml[906,29957+20]..src/deriving.ml[906,29957+40])
                                                                            Texp_ident "deriving_attr_expect/8653"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/deriving.ml[906,29957+41]..src/deriving.ml[906,29957+51])
                                                                            Texp_ident "expand_str/8646"
                                                                      ]
                                                                    expression (src/deriving.ml[907,30010+4]..src/deriving.ml[908,30063+3]) ghost
                                                                      Texp_construct "::"
                                                                      [
                                                                        expression (src/deriving.ml[907,30010+4]..src/deriving.ml[907,30010+51])
                                                                          Texp_apply
                                                                          expression (src/deriving.ml[907,30010+4]..src/deriving.ml[907,30010+19])
                                                                            Texp_ident "rule_sig_expect/8650"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/deriving.ml[907,30010+20]..src/deriving.ml[907,30010+40])
                                                                                Texp_ident "deriving_attr_expect/8653"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/deriving.ml[907,30010+41]..src/deriving.ml[907,30010+51])
                                                                                Texp_ident "expand_sig/8645"
                                                                          ]
                                                                        expression (src/deriving.ml[908,30063+2]..src/deriving.ml[908,30063+3]) ghost
                                                                          Texp_construct "[]"
                                                                          []
                                                                      ]
                                                                  ]
                                                              ]
                                                          ]
                                              ]
                                        ]
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/deriving.ml[910,30068+0]..src/deriving.ml[916,30359+64])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[910,30068+4]..src/deriving.ml[910,30068+19])
          Tpat_var "rules_type_decl/8654"
        expression (src/deriving.ml[911,30090+2]..src/deriving.ml[916,30359+64])
          Texp_apply
          expression (src/deriving.ml[911,30090+2]..src/deriving.ml[911,30090+7])
            Texp_ident "rules/8642"
          [
            <arg>
              Labelled "typ"
              expression (src/deriving.ml[911,30090+13]..src/deriving.ml[911,30090+29])
                Texp_construct "Type_declaration"
                []
            <arg>
              Labelled "expand_sig"
              expression (src/deriving.ml[912,30154+16]..src/deriving.ml[912,30154+37])
                Texp_ident "expand_sig_type_decls/8571"
            <arg>
              Labelled "expand_str"
              expression (src/deriving.ml[911,30090+42]..src/deriving.ml[911,30090+63])
                Texp_ident "expand_str_type_decls/8560"
            <arg>
              Labelled "rule_str"
              expression (src/deriving.ml[913,30192+14]..src/deriving.ml[913,30192+50])
                Texp_ident "Ppxlib__!.Context_free.Rule.attr_str_type_decl"
            <arg>
              Labelled "rule_sig"
              expression (src/deriving.ml[914,30243+14]..src/deriving.ml[914,30243+50])
                Texp_ident "Ppxlib__!.Context_free.Rule.attr_sig_type_decl"
            <arg>
              Labelled "rule_str_expect"
              expression (src/deriving.ml[915,30294+21]..src/deriving.ml[915,30294+64])
                Texp_ident "Ppxlib__!.Context_free.Rule.attr_str_type_decl_expect"
            <arg>
              Labelled "rule_sig_expect"
              expression (src/deriving.ml[916,30359+21]..src/deriving.ml[916,30359+64])
                Texp_ident "Ppxlib__!.Context_free.Rule.attr_sig_type_decl_expect"
          ]
    ]
  structure_item (src/deriving.ml[918,30425+0]..src/deriving.ml[924,30706+63])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[918,30425+4]..src/deriving.ml[918,30425+18])
          Tpat_var "rules_type_ext/8677"
        expression (src/deriving.ml[919,30446+2]..src/deriving.ml[924,30706+63])
          Texp_apply
          expression (src/deriving.ml[919,30446+2]..src/deriving.ml[919,30446+7])
            Texp_ident "rules/8642"
          [
            <arg>
              Labelled "typ"
              expression (src/deriving.ml[919,30446+13]..src/deriving.ml[919,30446+27])
                Texp_construct "Type_extension"
                []
            <arg>
              Labelled "expand_sig"
              expression (src/deriving.ml[920,30506+16]..src/deriving.ml[920,30506+35])
                Texp_ident "expand_sig_type_ext/8632"
            <arg>
              Labelled "expand_str"
              expression (src/deriving.ml[919,30446+40]..src/deriving.ml[919,30446+59])
                Texp_ident "expand_str_type_ext/8622"
            <arg>
              Labelled "rule_str"
              expression (src/deriving.ml[921,30542+14]..src/deriving.ml[921,30542+49])
                Texp_ident "Ppxlib__!.Context_free.Rule.attr_str_type_ext"
            <arg>
              Labelled "rule_sig"
              expression (src/deriving.ml[922,30592+14]..src/deriving.ml[922,30592+49])
                Texp_ident "Ppxlib__!.Context_free.Rule.attr_sig_type_ext"
            <arg>
              Labelled "rule_str_expect"
              expression (src/deriving.ml[923,30642+21]..src/deriving.ml[923,30642+63])
                Texp_ident "Ppxlib__!.Context_free.Rule.attr_str_type_ext_expect"
            <arg>
              Labelled "rule_sig_expect"
              expression (src/deriving.ml[924,30706+21]..src/deriving.ml[924,30706+63])
                Texp_ident "Ppxlib__!.Context_free.Rule.attr_sig_type_ext_expect"
          ]
    ]
  structure_item (src/deriving.ml[926,30771+0]..src/deriving.ml[932,31058+64])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[926,30771+4]..src/deriving.ml[926,30771+19])
          Tpat_var "rules_exception/8678"
        expression (src/deriving.ml[927,30793+2]..src/deriving.ml[932,31058+64])
          Texp_apply
          expression (src/deriving.ml[927,30793+2]..src/deriving.ml[927,30793+7])
            Texp_ident "rules/8642"
          [
            <arg>
              Labelled "typ"
              expression (src/deriving.ml[927,30793+13]..src/deriving.ml[927,30793+27])
                Texp_construct "Type_exception"
                []
            <arg>
              Labelled "expand_sig"
              expression (src/deriving.ml[928,30854+16]..src/deriving.ml[928,30854+36])
                Texp_ident "expand_sig_exception/8612"
            <arg>
              Labelled "expand_str"
              expression (src/deriving.ml[927,30793+40]..src/deriving.ml[927,30793+60])
                Texp_ident "expand_str_exception/8602"
            <arg>
              Labelled "rule_str"
              expression (src/deriving.ml[929,30891+14]..src/deriving.ml[929,30891+50])
                Texp_ident "Ppxlib__!.Context_free.Rule.attr_str_exception"
            <arg>
              Labelled "rule_sig"
              expression (src/deriving.ml[930,30942+14]..src/deriving.ml[930,30942+50])
                Texp_ident "Ppxlib__!.Context_free.Rule.attr_sig_exception"
            <arg>
              Labelled "rule_str_expect"
              expression (src/deriving.ml[931,30993+21]..src/deriving.ml[931,30993+64])
                Texp_ident "Ppxlib__!.Context_free.Rule.attr_str_exception_expect"
            <arg>
              Labelled "rule_sig_expect"
              expression (src/deriving.ml[932,31058+21]..src/deriving.ml[932,31058+64])
                Texp_ident "Ppxlib__!.Context_free.Rule.attr_sig_exception_expect"
          ]
    ]
  structure_item (src/deriving.ml[934,31124+0]..src/deriving.ml[940,31462+71])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[934,31124+4]..src/deriving.ml[934,31124+26])
          Tpat_var "rules_module_type_decl/8679"
        expression (src/deriving.ml[935,31153+2]..src/deriving.ml[940,31462+71])
          Texp_apply
          expression (src/deriving.ml[935,31153+2]..src/deriving.ml[935,31153+7])
            Texp_ident "rules/8642"
          [
            <arg>
              Labelled "typ"
              expression (src/deriving.ml[935,31153+13]..src/deriving.ml[935,31153+36])
                Texp_construct "Module_type_declaration"
                []
            <arg>
              Labelled "expand_sig"
              expression (src/deriving.ml[936,31230+16]..src/deriving.ml[936,31230+43])
                Texp_ident "expand_sig_module_type_decl/8592"
            <arg>
              Labelled "expand_str"
              expression (src/deriving.ml[935,31153+49]..src/deriving.ml[935,31153+76])
                Texp_ident "expand_str_module_type_decl/8582"
            <arg>
              Labelled "rule_str"
              expression (src/deriving.ml[937,31274+14]..src/deriving.ml[937,31274+57])
                Texp_ident "Ppxlib__!.Context_free.Rule.attr_str_module_type_decl"
            <arg>
              Labelled "rule_sig"
              expression (src/deriving.ml[938,31332+14]..src/deriving.ml[938,31332+57])
                Texp_ident "Ppxlib__!.Context_free.Rule.attr_sig_module_type_decl"
            <arg>
              Labelled "rule_str_expect"
              expression (src/deriving.ml[939,31390+21]..src/deriving.ml[939,31390+71])
                Texp_ident "Ppxlib__!.Context_free.Rule.attr_str_module_type_decl_expect"
            <arg>
              Labelled "rule_sig_expect"
              expression (src/deriving.ml[940,31462+21]..src/deriving.ml[940,31462+71])
                Texp_ident "Ppxlib__!.Context_free.Rule.attr_sig_module_type_decl_expect"
          ]
    ]
  structure_item (src/deriving.ml[942,31535+0]..src/deriving.ml[947,31663+75])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/deriving.ml[942,31535+4]..src/deriving.ml[942,31535+6])
          Tpat_construct "()"
          []
        expression (src/deriving.ml[943,31544+2]..src/deriving.ml[947,31663+75])
          Texp_let Nonrec
          [
            <def>
              pattern (src/deriving.ml[943,31544+6]..src/deriving.ml[943,31544+11])
                Tpat_var "rules/8680"
              expression (src/deriving.ml[944,31558+4]..src/deriving.ml[945,31639+18])
                Texp_apply
                expression (src/deriving.ml[945,31639+4]..src/deriving.ml[945,31639+6])
                  Texp_ident "Stdlib!.|>"
                [
                  <arg>
                    Nolabel
                    expression (src/deriving.ml[944,31558+4]..src/deriving.ml[944,31558+80])
                      Texp_construct "::"
                      [
                        expression (src/deriving.ml[944,31558+6]..src/deriving.ml[944,31558+21])
                          Texp_ident "rules_type_decl/8654"
                        expression (src/deriving.ml[944,31558+23]..src/deriving.ml[944,31558+80]) ghost
                          Texp_construct "::"
                          [
                            expression (src/deriving.ml[944,31558+23]..src/deriving.ml[944,31558+37])
                              Texp_ident "rules_type_ext/8677"
                            expression (src/deriving.ml[944,31558+39]..src/deriving.ml[944,31558+80]) ghost
                              Texp_construct "::"
                              [
                                expression (src/deriving.ml[944,31558+39]..src/deriving.ml[944,31558+54])
                                  Texp_ident "rules_exception/8678"
                                expression (src/deriving.ml[944,31558+56]..src/deriving.ml[944,31558+80]) ghost
                                  Texp_construct "::"
                                  [
                                    expression (src/deriving.ml[944,31558+56]..src/deriving.ml[944,31558+78])
                                      Texp_ident "rules_module_type_decl/8679"
                                    expression (src/deriving.ml[944,31558+79]..src/deriving.ml[944,31558+80]) ghost
                                      Texp_construct "[]"
                                      []
                                  ]
                              ]
                          ]
                      ]
                  <arg>
                    Nolabel
                    expression (src/deriving.ml[945,31639+7]..src/deriving.ml[945,31639+18])
                      Texp_ident "Ppxlib__!.Import.List.concat"
                ]
          ]
          expression (src/deriving.ml[947,31663+2]..src/deriving.ml[947,31663+75])
            Texp_apply
            expression (src/deriving.ml[947,31663+2]..src/deriving.ml[947,31663+32])
              Texp_ident "Ppxlib__!.Driver.register_transformation"
            [
              <arg>
                Optional "extensions"
                expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                  Texp_construct "None"
                  []
              <arg>
                Optional "rules"
                expression (src/deriving.ml[947,31663+70]..src/deriving.ml[947,31663+75])
                  Texp_construct "Some"
                  [
                    expression (src/deriving.ml[947,31663+70]..src/deriving.ml[947,31663+75])
                      Texp_ident "rules/8680"
                  ]
              <arg>
                Optional "enclose_impl"
                expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                  Texp_construct "None"
                  []
              <arg>
                Optional "enclose_intf"
                expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                  Texp_construct "None"
                  []
              <arg>
                Optional "impl"
                expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                  Texp_construct "None"
                  []
              <arg>
                Optional "intf"
                expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                  Texp_construct "None"
                  []
              <arg>
                Optional "lint_impl"
                expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                  Texp_construct "None"
                  []
              <arg>
                Optional "lint_intf"
                expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                  Texp_construct "None"
                  []
              <arg>
                Optional "preprocess_impl"
                expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                  Texp_construct "None"
                  []
              <arg>
                Optional "preprocess_intf"
                expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                  Texp_construct "None"
                  []
              <arg>
                Optional "instrument"
                expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                  Texp_construct "None"
                  []
              <arg>
                Optional "aliases"
                expression (src/deriving.ml[947,31663+53]..src/deriving.ml[947,31663+68])
                  Texp_construct "Some"
                  [
                    expression (src/deriving.ml[947,31663+53]..src/deriving.ml[947,31663+68])
                      Texp_construct "::"
                      [
                        expression (src/deriving.ml[947,31663+55]..src/deriving.ml[947,31663+66])
                          Texp_constant Const_string("type_conv",(src/deriving.ml[947,31663+56]..src/deriving.ml[947,31663+65]),None)
                        expression (src/deriving.ml[947,31663+67]..src/deriving.ml[947,31663+68]) ghost
                          Texp_construct "[]"
                          []
                      ]
                  ]
              <arg>
                Nolabel
                expression (src/deriving.ml[947,31663+33]..src/deriving.ml[947,31663+43])
                  Texp_constant Const_string("deriving",(src/deriving.ml[947,31663+34]..src/deriving.ml[947,31663+42]),None)
            ]
    ]
]

(setglobal Ppxlib__Deriving!
  (let
    (do_insert_unused_warning_attribute/2083 = (makemutable 0 0)
     keep_w32_impl/2084 = (makemutable 0 0)
     keep_w32_intf/2085 = (makemutable 0 0)
     *match*/21833 =
       (let
         (keep_w32_spec/2086 =
            (makeblock 11 [0: "impl" [0: "intf" [0: "both" 0]]]
              (function param/2115
                (funct-body Ppxlib__Deriving.(fun) src/deriving.ml(15):416-625
                  (catch
                    (stringswitch param/2115
                     case "both":
                      (before Ppxlib__Deriving.(fun) src/deriving.ml(19):541-597
                        (seq (setfield_imm 0 keep_w32_impl/2084 1)
                          (before Ppxlib__Deriving.(fun) src/deriving.ml(20):576-597
                            (setfield_imm 0 keep_w32_intf/2085 1))))
                     case "impl":
                      (before Ppxlib__Deriving.(fun) src/deriving.ml(16):445-466
                        (setfield_imm 0 keep_w32_impl/2084 1))
                     case "intf":
                      (before Ppxlib__Deriving.(fun) src/deriving.ml(17):487-508
                        (setfield_imm 0 keep_w32_intf/2085 1))
                     default: (exit 2))
                   with (2)
                    (before Ppxlib__Deriving.(fun) src/deriving.ml(21):613-625
                      (raise
                        (after Ppxlib__Deriving.(fun) src/deriving.ml(21):613-625
                          (makeblock 0 (global Assert_failure/30!)
                            [0: "src/deriving.ml" 21 15])))))))))
         (before Ppxlib__Deriving src/deriving.ml(23):635-1344
           (let
             (conv_w32_spec/2116 =
                (makeblock 11 [0: "code" [0: "attribute" 0]]
                  (function param/2117
                    (funct-body Ppxlib__Deriving.(fun) src/deriving.ml(26):718-886
                      (catch
                        (stringswitch param/2117
                         case "attribute":
                          (before Ppxlib__Deriving.(fun) src/deriving.ml(28):816-858
                            (setfield_imm 0
                              do_insert_unused_warning_attribute/2083 1))
                         case "code":
                          (before Ppxlib__Deriving.(fun) src/deriving.ml(27):747-790
                            (setfield_imm 0
                              do_insert_unused_warning_attribute/2083 0))
                         default: (exit 1))
                       with (1)
                        (before Ppxlib__Deriving.(fun) src/deriving.ml(29):874-886
                          (raise
                            (after Ppxlib__Deriving.(fun) src/deriving.ml(29):874-886
                              (makeblock 0 (global Assert_failure/30!)
                                [0: "src/deriving.ml" 29 15])))))))))
             (before Ppxlib__Deriving src/deriving.ml(31):896-1344
               (seq
                 (after Ppxlib__Deriving src/deriving.ml(31):896-1013
                   (apply (field_imm 0 (global Ppxlib__Driver!))
                     "-deriving-keep-w32" keep_w32_spec/2086
                     " Do not try to disable warning 32 for the generated code"))
                 (before Ppxlib__Deriving src/deriving.ml(33):1017-1344
                   (seq
                     (after Ppxlib__Deriving src/deriving.ml(33):1017-1137
                       (apply (field_imm 0 (global Ppxlib__Driver!))
                         "-deriving-disable-w32-method" conv_w32_spec/2116
                         " How to disable warning 32 for the generated code"))
                     (before Ppxlib__Deriving src/deriving.ml(35):1141-1344
                       (seq
                         (after Ppxlib__Deriving src/deriving.ml(35):1141-1238
                           (apply (field_imm 0 (global Ppxlib__Driver!))
                             "-type-conv-keep-w32" keep_w32_spec/2086
                             " Deprecated, use -deriving-keep-w32"))
                         (before Ppxlib__Deriving src/deriving.ml(37):1242-1344
                           (after Ppxlib__Deriving src/deriving.ml(37):1242-1344
                             (apply (field_imm 0 (global Ppxlib__Driver!))
                               "-type-conv-w32" conv_w32_spec/2116
                               " Deprecated, use -deriving-disable-w32-method"))))))))))))
     keep_w32_impl/2169 =
       (function param/2170
         (funct-body Ppxlib__Deriving.keep_w32_impl src/deriving.ml(40)<ghost>:1364-1403
           (before Ppxlib__Deriving.keep_w32_impl src/deriving.ml(40):1369-1403
             (|| (field_int 0 keep_w32_impl/2084)
               (after Ppxlib__Deriving.keep_w32_impl src/deriving.ml(40):1387-1403
                 (apply (field_imm 13 (global Ppxlib__Driver!)) 0))))))
     keep_w32_intf/2171 =
       (function param/2172
         (funct-body Ppxlib__Deriving.keep_w32_intf src/deriving.ml(41)<ghost>:1422-1461
           (before Ppxlib__Deriving.keep_w32_intf src/deriving.ml(41):1427-1461
             (|| (field_int 0 keep_w32_intf/2085)
               (after Ppxlib__Deriving.keep_w32_intf src/deriving.ml(41):1445-1461
                 (apply (field_imm 13 (global Ppxlib__Driver!)) 0))))))
     keep_w60_impl/2173 = (makemutable 0 0)
     keep_w60_intf/2174 = (makemutable 0 0)
     *match*/21831 =
       (let
         (keep_w60_spec/2175 =
            (makeblock 11 [0: "impl" [0: "intf" [0: "both" 0]]]
              (function param/2176
                (funct-body Ppxlib__Deriving.(fun) src/deriving.ml(49):1620-1829
                  (catch
                    (stringswitch param/2176
                     case "both":
                      (before Ppxlib__Deriving.(fun) src/deriving.ml(53):1745-1801
                        (seq (setfield_imm 0 keep_w60_impl/2173 1)
                          (before Ppxlib__Deriving.(fun) src/deriving.ml(54):1780-1801
                            (setfield_imm 0 keep_w60_intf/2174 1))))
                     case "impl":
                      (before Ppxlib__Deriving.(fun) src/deriving.ml(50):1649-1670
                        (setfield_imm 0 keep_w60_impl/2173 1))
                     case "intf":
                      (before Ppxlib__Deriving.(fun) src/deriving.ml(51):1691-1712
                        (setfield_imm 0 keep_w60_intf/2174 1))
                     default: (exit 3))
                   with (3)
                    (before Ppxlib__Deriving.(fun) src/deriving.ml(55):1817-1829
                      (raise
                        (after Ppxlib__Deriving.(fun) src/deriving.ml(55):1817-1829
                          (makeblock 0 (global Assert_failure/30!)
                            [0: "src/deriving.ml" 55 15])))))))))
         (before Ppxlib__Deriving src/deriving.ml(57):1839-1956
           (after Ppxlib__Deriving src/deriving.ml(57):1839-1956
             (apply (field_imm 0 (global Ppxlib__Driver!))
               "-deriving-keep-w60" keep_w60_spec/2175
               " Do not try to disable warning 60 for the generated code"))))
     keep_w60_impl/2177 =
       (function param/2178
         (funct-body Ppxlib__Deriving.keep_w60_impl src/deriving.ml(60)<ghost>:1976-2015
           (before Ppxlib__Deriving.keep_w60_impl src/deriving.ml(60):1981-2015
             (|| (field_int 0 keep_w60_impl/2173)
               (after Ppxlib__Deriving.keep_w60_impl src/deriving.ml(60):1999-2015
                 (apply (field_imm 13 (global Ppxlib__Driver!)) 0))))))
     keep_w60_intf/2179 =
       (function param/2180
         (funct-body Ppxlib__Deriving.keep_w60_intf src/deriving.ml(61)<ghost>:2034-2073
           (before Ppxlib__Deriving.keep_w60_intf src/deriving.ml(61):2039-2073
             (|| (field_int 0 keep_w60_intf/2174)
               (after Ppxlib__Deriving.keep_w60_intf src/deriving.ml(61):2057-2073
                 (apply (field_imm 13 (global Ppxlib__Driver!)) 0))))))
     allow_unused_code_warnings/2181 =
       (makemutable 0 (field_imm 0 (global Ppxlib__Options!)))
     *match*/21829 =
       (after Ppxlib__Deriving src/deriving.ml(65):2166-2314
         (apply (field_imm 0 (global Ppxlib__Driver!))
           "-unused-code-warnings"
           (makeblock 1
             (after Ppxlib__Deriving src/deriving.ml(66):2215-2250
               (apply
                 (function prim/21678 prim/21677 stub
                   (setfield_imm 0 prim/21678 prim/21677))
                 allow_unused_code_warnings/2181)))
           "_ Allow ppx derivers to enable unused code warnings"))
     allow_unused_code_warnings/2188 =
       (function param/2189
         (funct-body Ppxlib__Deriving.allow_unused_code_warnings src/deriving.ml(69)<ghost>:2347-2379
           (before Ppxlib__Deriving.allow_unused_code_warnings src/deriving.ml(69):2352-2379
             (field_int 0 allow_unused_code_warnings/2181))))
     Args/4923 =
       (module-defn(Args/4923) Ppxlib__Deriving src/deriving.ml(71):2381-4031
         (let
           (include/21679 =a
              (let
                (let/21683 = (global Ppxlib__Ast_pattern!)
                 let/21684 =a (global Ppxlib__Ast_pattern!))
                (makeblock 0 (field_mut 0 let/21684) (field_mut 1 let/21684)
                  (field_mut 3 let/21684) (field_mut 4 let/21684)
                  (field_mut 5 let/21684) (field_mut 6 let/21684)
                  (field_mut 7 let/21684) (field_mut 8 let/21684)
                  (field_mut 9 let/21684) (field_mut 10 let/21684)
                  (field_mut 11 let/21684) (field_mut 12 let/21684)
                  (field_mut 13 let/21684) (field_mut 14 let/21684)
                  (field_mut 15 let/21684) (field_mut 16 let/21684)
                  (field_mut 17 let/21684) (field_mut 18 let/21684)
                  (field_mut 19 let/21684) (field_mut 20 let/21684)
                  (field_mut 21 let/21684) (field_mut 22 let/21684)
                  (field_mut 23 let/21684) (field_mut 24 let/21684)
                  (field_mut 25 let/21684) (field_mut 26 let/21684)
                  (field_mut 27 let/21684) (field_mut 28 let/21684)
                  (field_mut 29 let/21684) (field_mut 30 let/21684)
                  (field_mut 31 let/21684) (field_mut 32 let/21684)
                  (field_mut 33 let/21684) (field_mut 34 let/21684)
                  (field_mut 35 let/21684) (field_mut 36 let/21684)
                  (field_mut 37 let/21684) (field_mut 38 let/21684)
                  (field_mut 39 let/21684) (field_mut 40 let/21684)
                  (field_mut 41 let/21684) (field_mut 42 let/21684)
                  (field_mut 43 let/21684) (field_mut 44 let/21684)
                  (field_mut 45 let/21684) (field_mut 46 let/21684)
                  (field_mut 47 let/21684) (field_mut 48 let/21684)
                  (field_mut 49 let/21684) (field_mut 50 let/21684)
                  (field_mut 51 let/21684) (field_mut 52 let/21684)
                  (field_mut 53 let/21684) (field_mut 54 let/21684)
                  (field_mut 55 let/21684) (field_mut 56 let/21684)
                  (field_mut 57 let/21684) (field_mut 58 let/21684)
                  (field_mut 59 let/21684) (field_mut 60 let/21684)
                  (field_mut 61 let/21684) (field_mut 62 let/21684)
                  (field_mut 63 let/21684) (field_mut 64 let/21684)
                  (field_mut 65 let/21684) (field_mut 66 let/21684)
                  (field_mut 67 let/21684) (field_mut 68 let/21684)
                  (field_mut 69 let/21684) (field_mut 70 let/21684)
                  (field_mut 71 let/21684) (field_mut 72 let/21684)
                  (field_mut 73 let/21684) (field_mut 74 let/21684)
                  (field_mut 75 let/21684) (field_mut 76 let/21684)
                  (field_mut 77 let/21684) (field_mut 78 let/21684)
                  (field_mut 79 let/21684) (field_mut 80 let/21684)
                  (field_mut 81 let/21684) (field_mut 82 let/21684)
                  (field_mut 83 let/21684) (field_mut 84 let/21684)
                  (field_mut 85 let/21684) (field_mut 86 let/21684)
                  (field_mut 87 let/21684) (field_mut 88 let/21684)
                  (field_mut 89 let/21684) (field_mut 90 let/21684)
                  (field_mut 91 let/21684) (field_mut 92 let/21684)
                  (field_mut 93 let/21684) (field_mut 94 let/21684)
                  (field_mut 95 let/21684) (field_mut 96 let/21684)
                  (field_mut 97 let/21684) (field_mut 98 let/21684)
                  (field_mut 99 let/21684) (field_mut 100 let/21684)
                  (field_mut 101 let/21684) (field_mut 102 let/21684)
                  (field_mut 103 let/21684) (field_mut 104 let/21684)
                  (field_mut 105 let/21684) (field_mut 106 let/21684)
                  (field_mut 107 let/21684) (field_mut 108 let/21684)
                  (field_mut 109 let/21684) (field_mut 110 let/21684)
                  (field_mut 111 let/21684) (field_mut 112 let/21684)
                  (field_mut 113 let/21684) (field_mut 114 let/21684)
                  (field_mut 115 let/21684) (field_mut 116 let/21684)
                  (field_mut 117 let/21684) (field_mut 118 let/21684)
                  (field_mut 119 let/21684) (field_mut 120 let/21684)
                  (field_mut 121 let/21684) (field_mut 122 let/21684)
                  (field_mut 123 let/21684) (field_mut 124 let/21684)
                  (field_mut 125 let/21684) (field_mut 126 let/21684)
                  (field_mut 127 let/21684) (field_mut 128 let/21684)
                  (field_mut 129 let/21684) (field_mut 130 let/21684)
                  (field_mut 131 let/21684) (field_mut 132 let/21684)
                  (field_mut 133 let/21684) (field_mut 134 let/21684)
                  (field_mut 135 let/21684) (field_mut 136 let/21684)
                  (field_mut 137 let/21684) (field_mut 138 let/21684)
                  (field_mut 139 let/21684) (field_mut 140 let/21684)
                  (field_mut 141 let/21684) (field_mut 142 let/21684)
                  (field_mut 143 let/21684) (field_mut 144 let/21684)
                  (field_mut 145 let/21684) (field_mut 146 let/21684)
                  (field_mut 147 let/21684) (field_mut 148 let/21684)
                  (field_mut 149 let/21684) (field_mut 150 let/21684)
                  (field_mut 151 let/21684) (field_mut 152 let/21684)
                  (field_mut 153 let/21684) (field_mut 154 let/21684)
                  (field_mut 155 let/21684) (field_mut 156 let/21684)
                  (field_mut 157 let/21684) (field_mut 158 let/21684)
                  (field_mut 159 let/21684) (field_mut 160 let/21684)
                  (field_mut 161 let/21684) (field_mut 162 let/21684)
                  (field_mut 163 let/21684) (field_mut 164 let/21684)
                  (field_mut 165 let/21684) (field_mut 166 let/21684)
                  (field_mut 167 let/21684) (field_mut 168 let/21684)
                  (field_mut 169 let/21684) (field_mut 170 let/21684)
                  (field_mut 171 let/21684) (field_mut 172 let/21684)
                  (field_mut 173 let/21684) (field_mut 174 let/21684)
                  (field_mut 175 let/21684) (field_mut 176 let/21684)
                  (field_mut 177 let/21684) (field_mut 178 let/21684)
                  (field_mut 179 let/21684) (field_mut 180 let/21684)
                  (field_mut 181 let/21684) (field_mut 182 let/21684)
                  (field_mut 183 let/21684) (field_mut 184 let/21684)
                  (field_mut 185 let/21684) (field_mut 186 let/21684)
                  (field_mut 187 let/21684) (field_mut 188 let/21684)
                  (field_mut 189 let/21684) (field_mut 190 let/21684)
                  (field_mut 191 let/21684) (field_mut 192 let/21684)
                  (field_mut 193 let/21684) (field_mut 194 let/21684)
                  (field_mut 195 let/21684) (field_mut 196 let/21684)
                  (field_mut 197 let/21684) (field_mut 198 let/21684)
                  (field_mut 199 let/21684) (field_mut 200 let/21684)
                  (field_mut 201 let/21684) (field_mut 202 let/21684)
                  (field_mut 203 let/21684) (field_mut 204 let/21684)
                  (field_mut 205 let/21684) (field_mut 206 let/21684)
                  (field_mut 207 let/21684) (field_mut 208 let/21684)
                  (field_mut 209 let/21684) (field_mut 210 let/21684)
                  (field_mut 211 let/21684) (field_mut 212 let/21684)
                  (field_mut 213 let/21684) (field_mut 214 let/21684)
                  (field_mut 215 let/21684) (field_mut 216 let/21684)
                  (field_mut 217 let/21684) (field_mut 218 let/21684)
                  (field_mut 219 let/21684) (field_mut 220 let/21684)
                  (field_mut 221 let/21684) (field_mut 222 let/21684)
                  (field_mut 223 let/21684) (field_mut 224 let/21684)
                  (field_mut 225 let/21684) (field_mut 226 let/21684)
                  (field_mut 227 let/21684) (field_mut 228 let/21684)
                  (field_mut 229 let/21684) (field_mut 230 let/21684)
                  (field_mut 231 let/21684) (field_mut 232 let/21684)
                  (field_mut 233 let/21684) (field_mut 234 let/21684)
                  (field_mut 235 let/21684) (field_mut 236 let/21684)
                  (field_mut 237 let/21684) (field_mut 238 let/21684)
                  (field_mut 239 let/21684) (field_mut 240 let/21684)
                  (field_mut 241 let/21684) (field_mut 242 let/21684)
                  (field_mut 243 let/21684) (field_mut 244 let/21684)
                  (field_mut 245 let/21684) (field_mut 246 let/21684)
                  (field_mut 247 let/21684) (field_mut 248 let/21684)
                  (field_mut 249 let/21684) (field_mut 250 let/21684)
                  (field_mut 251 let/21684) (field_mut 252 let/21684)
                  (field_mut 253 let/21684) (field_mut 254 let/21684)
                  (field_mut 255 let/21684) (field_mut 256 let/21684)
                  (field_mut 257 let/21684) (field_mut 258 let/21684)
                  (field_mut 259 let/21684) (field_mut 260 let/21684)
                  (field_mut 261 let/21684) (field_mut 262 let/21684)
                  (field_mut 263 let/21684) (field_mut 264 let/21684)
                  (field_mut 265 let/21684) (field_mut 266 let/21684)
                  (field_mut 267 let/21684) (field_mut 268 let/21684)
                  (field_mut 269 let/21684) (field_mut 270 let/21684)
                  (field_mut 271 let/21684) (field_mut 272 let/21684)
                  (field_mut 273 let/21684) (field_mut 274 let/21684)
                  (field_mut 275 let/21684) (field_mut 276 let/21684)
                  (field_mut 277 let/21684) (field_mut 278 let/21684)
                  (field_mut 279 let/21684) (field_mut 280 let/21684)
                  (field_mut 281 let/21684) (field_mut 282 let/21684)
                  (field_mut 283 let/21684) (field_mut 284 let/21684)
                  (field_mut 285 let/21684) (field_mut 286 let/21684)
                  (field_mut 287 let/21684) (field_mut 288 let/21684)
                  (field_mut 289 let/21684) (field_mut 290 let/21684)
                  (field_mut 291 let/21684) (field_mut 292 let/21684)
                  (field_mut 293 let/21684) (field_mut 294 let/21684)
                  (field_mut 295 let/21684) (field_mut 296 let/21684)
                  (field_mut 297 let/21684) (field_mut 298 let/21684)
                  (field_mut 299 let/21684) (field_mut 300 let/21684)
                  (field_mut 301 let/21684) (field_mut 302 let/21684)
                  (field_mut 303 let/21684) (field_mut 304 let/21684)
                  (field_mut 305 let/21684) (field_mut 306 let/21684)
                  (field_mut 307 let/21684) (field_mut 308 let/21684)
                  (field_mut 309 let/21684) (field_mut 310 let/21684)
                  (field_mut 311 let/21684) (field_mut 312 let/21684)
                  (field_mut 313 let/21684) (field_mut 314 let/21684)
                  (field_mut 315 let/21684) (field_mut 316 let/21684)
                  (field_mut 317 let/21684) (field_mut 318 let/21684)
                  (field_mut 319 let/21684) (field_mut 320 let/21684)
                  (field_mut 321 let/21684) (field_mut 322 let/21684)
                  (field_mut 323 let/21684) (field_mut 324 let/21684)
                  (field_mut 325 let/21684) (field_mut 326 let/21684)
                  (field_mut 327 let/21684) (field_mut 328 let/21684)
                  (field_mut 329 let/21684) (field_mut 330 let/21684)))
            parse/4418 =a (field_mut 0 include/21679)
            parse_res/4419 =a (field_mut 1 include/21679)
            __/4421 =a (field_mut 2 include/21679)
            __'/4422 =a (field_mut 3 include/21679)
            drop/4423 =a (field_mut 4 include/21679)
            as__/4424 =a (field_mut 5 include/21679)
            alt/4425 =a (field_mut 6 include/21679)
            alt_option/4426 =a (field_mut 7 include/21679)
            |||/4427 =a (field_mut 8 include/21679)
            map/4428 =a (field_mut 9 include/21679)
            map'/4429 =a (field_mut 10 include/21679)
            map_result/4430 =a (field_mut 11 include/21679)
            >>|/4431 =a (field_mut 12 include/21679)
            map0/4432 =a (field_mut 13 include/21679)
            map1/4433 =a (field_mut 14 include/21679)
            map2/4434 =a (field_mut 15 include/21679)
            map0'/4435 =a (field_mut 16 include/21679)
            map1'/4436 =a (field_mut 17 include/21679)
            map2'/4437 =a (field_mut 18 include/21679)
            map_value/4438 =a (field_mut 19 include/21679)
            map_value'/4439 =a (field_mut 20 include/21679)
            nil/4440 =a (field_mut 21 include/21679)
            ^::/4441 =a (field_mut 22 include/21679)
            many/4442 =a (field_mut 23 include/21679)
            int/4443 =a (field_mut 24 include/21679)
            char/4444 =a (field_mut 25 include/21679)
            string/4445 =a (field_mut 26 include/21679)
            float/4446 =a (field_mut 27 include/21679)
            int32/4447 =a (field_mut 28 include/21679)
            int64/4448 =a (field_mut 29 include/21679)
            nativeint/4449 =a (field_mut 30 include/21679)
            bool/4450 =a (field_mut 31 include/21679)
            ebool/4451 =a (field_mut 32 include/21679)
            pbool/4452 =a (field_mut 33 include/21679)
            cst/4453 =a (field_mut 34 include/21679)
            none/4454 =a (field_mut 35 include/21679)
            some/4455 =a (field_mut 36 include/21679)
            pair/4456 =a (field_mut 37 include/21679)
            **/4457 =a (field_mut 38 include/21679)
            triple/4458 =a (field_mut 39 include/21679)
            loc/4459 =a (field_mut 40 include/21679)
            pack0/4460 =a (field_mut 41 include/21679)
            pack2/4461 =a (field_mut 42 include/21679)
            pack3/4462 =a (field_mut 43 include/21679)
            nolabel/4463 =a (field_mut 44 include/21679)
            labelled/4464 =a (field_mut 45 include/21679)
            optional/4465 =a (field_mut 46 include/21679)
            binding_op/4466 =a (field_mut 47 include/21679)
            case/4467 =a (field_mut 48 include/21679)
            pcl_loc/4468 =a (field_mut 49 include/21679)
            pcl_attributes/4469 =a (field_mut 50 include/21679)
            pcl_constr/4470 =a (field_mut 51 include/21679)
            pcl_structure/4471 =a (field_mut 52 include/21679)
            pcl_fun/4472 =a (field_mut 53 include/21679)
            pcl_apply/4473 =a (field_mut 54 include/21679)
            pcl_let/4474 =a (field_mut 55 include/21679)
            pcl_constraint/4475 =a (field_mut 56 include/21679)
            pcl_extension/4476 =a (field_mut 57 include/21679)
            pcl_open/4477 =a (field_mut 58 include/21679)
            pcf_loc/4478 =a (field_mut 59 include/21679)
            pcf_attributes/4479 =a (field_mut 60 include/21679)
            pcf_inherit/4480 =a (field_mut 61 include/21679)
            pcf_val/4481 =a (field_mut 62 include/21679)
            pcf_method/4482 =a (field_mut 63 include/21679)
            pcf_constraint/4483 =a (field_mut 64 include/21679)
            pcf_initializer/4484 =a (field_mut 65 include/21679)
            pcf_attribute/4485 =a (field_mut 66 include/21679)
            pcf_extension/4486 =a (field_mut 67 include/21679)
            cfk_virtual/4487 =a (field_mut 68 include/21679)
            cfk_concrete/4488 =a (field_mut 69 include/21679)
            class_infos_attributes/4489 =a (field_mut 70 include/21679)
            class_infos/4490 =a (field_mut 71 include/21679)
            class_signature/4491 =a (field_mut 72 include/21679)
            class_structure/4492 =a (field_mut 73 include/21679)
            pcty_loc/4493 =a (field_mut 74 include/21679)
            pcty_attributes/4494 =a (field_mut 75 include/21679)
            pcty_constr/4495 =a (field_mut 76 include/21679)
            pcty_signature/4496 =a (field_mut 77 include/21679)
            pcty_arrow/4497 =a (field_mut 78 include/21679)
            pcty_extension/4498 =a (field_mut 79 include/21679)
            pcty_open/4499 =a (field_mut 80 include/21679)
            pctf_loc/4500 =a (field_mut 81 include/21679)
            pctf_attributes/4501 =a (field_mut 82 include/21679)
            pctf_inherit/4502 =a (field_mut 83 include/21679)
            pctf_val/4503 =a (field_mut 84 include/21679)
            pctf_method/4504 =a (field_mut 85 include/21679)
            pctf_constraint/4505 =a (field_mut 86 include/21679)
            pctf_attribute/4506 =a (field_mut 87 include/21679)
            pctf_extension/4507 =a (field_mut 88 include/21679)
            closed/4508 =a (field_mut 89 include/21679)
            open_/4509 =a (field_mut 90 include/21679)
            pconst_integer/4510 =a (field_mut 91 include/21679)
            pconst_char/4511 =a (field_mut 92 include/21679)
            pconst_string/4512 =a (field_mut 93 include/21679)
            pconst_float/4513 =a (field_mut 94 include/21679)
            pcstr_tuple/4514 =a (field_mut 95 include/21679)
            pcstr_record/4515 =a (field_mut 96 include/21679)
            constructor_declaration_attributes/4516 =a
              (field_mut 97 include/21679)
            constructor_declaration/4517 =a (field_mut 98 include/21679)
            ptyp_loc/4518 =a (field_mut 99 include/21679)
            ptyp_attributes/4519 =a (field_mut 100 include/21679)
            ptyp_any/4520 =a (field_mut 101 include/21679)
            ptyp_var/4521 =a (field_mut 102 include/21679)
            ptyp_arrow/4522 =a (field_mut 103 include/21679)
            ptyp_tuple/4523 =a (field_mut 104 include/21679)
            ptyp_constr/4524 =a (field_mut 105 include/21679)
            ptyp_object/4525 =a (field_mut 106 include/21679)
            ptyp_class/4526 =a (field_mut 107 include/21679)
            ptyp_alias/4527 =a (field_mut 108 include/21679)
            ptyp_variant/4528 =a (field_mut 109 include/21679)
            ptyp_poly/4529 =a (field_mut 110 include/21679)
            ptyp_package/4530 =a (field_mut 111 include/21679)
            ptyp_extension/4531 =a (field_mut 112 include/21679)
            upto/4532 =a (field_mut 113 include/21679)
            downto_/4533 =a (field_mut 114 include/21679)
            pdira_loc/4534 =a (field_mut 115 include/21679)
            pdir_string/4535 =a (field_mut 116 include/21679)
            pdir_int/4536 =a (field_mut 117 include/21679)
            pdir_ident/4537 =a (field_mut 118 include/21679)
            pdir_bool/4538 =a (field_mut 119 include/21679)
            pexp_loc/4539 =a (field_mut 120 include/21679)
            pexp_attributes/4540 =a (field_mut 121 include/21679)
            pexp_ident/4541 =a (field_mut 122 include/21679)
            pexp_constant/4542 =a (field_mut 123 include/21679)
            pexp_let/4543 =a (field_mut 124 include/21679)
            pexp_function/4544 =a (field_mut 125 include/21679)
            pexp_fun/4545 =a (field_mut 126 include/21679)
            pexp_apply/4546 =a (field_mut 127 include/21679)
            pexp_match/4547 =a (field_mut 128 include/21679)
            pexp_try/4548 =a (field_mut 129 include/21679)
            pexp_tuple/4549 =a (field_mut 130 include/21679)
            pexp_construct/4550 =a (field_mut 131 include/21679)
            pexp_variant/4551 =a (field_mut 132 include/21679)
            pexp_record/4552 =a (field_mut 133 include/21679)
            pexp_field/4553 =a (field_mut 134 include/21679)
            pexp_setfield/4554 =a (field_mut 135 include/21679)
            pexp_array/4555 =a (field_mut 136 include/21679)
            pexp_ifthenelse/4556 =a (field_mut 137 include/21679)
            pexp_sequence/4557 =a (field_mut 138 include/21679)
            pexp_while/4558 =a (field_mut 139 include/21679)
            pexp_for/4559 =a (field_mut 140 include/21679)
            pexp_constraint/4560 =a (field_mut 141 include/21679)
            pexp_coerce/4561 =a (field_mut 142 include/21679)
            pexp_send/4562 =a (field_mut 143 include/21679)
            pexp_new/4563 =a (field_mut 144 include/21679)
            pexp_setinstvar/4564 =a (field_mut 145 include/21679)
            pexp_override/4565 =a (field_mut 146 include/21679)
            pexp_letmodule/4566 =a (field_mut 147 include/21679)
            pexp_letexception/4567 =a (field_mut 148 include/21679)
            pexp_assert/4568 =a (field_mut 149 include/21679)
            pexp_lazy/4569 =a (field_mut 150 include/21679)
            pexp_poly/4570 =a (field_mut 151 include/21679)
            pexp_object/4571 =a (field_mut 152 include/21679)
            pexp_newtype/4572 =a (field_mut 153 include/21679)
            pexp_pack/4573 =a (field_mut 154 include/21679)
            pexp_open/4574 =a (field_mut 155 include/21679)
            pexp_letop/4575 =a (field_mut 156 include/21679)
            pexp_extension/4576 =a (field_mut 157 include/21679)
            pexp_unreachable/4577 =a (field_mut 158 include/21679)
            extension_constructor_attributes/4578 =a
              (field_mut 159 include/21679)
            extension_constructor/4579 =a (field_mut 160 include/21679)
            pext_decl/4580 =a (field_mut 161 include/21679)
            pext_rebind/4581 =a (field_mut 162 include/21679)
            unit/4582 =a (field_mut 163 include/21679)
            named/4583 =a (field_mut 164 include/21679)
            include_infos_attributes/4584 =a (field_mut 165 include/21679)
            include_infos/4585 =a (field_mut 166 include/21679)
            injective/4586 =a (field_mut 167 include/21679)
            noinjectivity/4587 =a (field_mut 168 include/21679)
            label_declaration_attributes/4588 =a
              (field_mut 169 include/21679)
            label_declaration/4589 =a (field_mut 170 include/21679)
            letop/4590 =a (field_mut 171 include/21679)
            location/4591 =a (field_mut 172 include/21679)
            lident/4592 =a (field_mut 173 include/21679)
            ldot/4593 =a (field_mut 174 include/21679)
            lapply/4594 =a (field_mut 175 include/21679)
            module_binding_attributes/4595 =a (field_mut 176 include/21679)
            module_binding/4596 =a (field_mut 177 include/21679)
            module_declaration_attributes/4597 =a
              (field_mut 178 include/21679)
            module_declaration/4598 =a (field_mut 179 include/21679)
            pmod_loc/4599 =a (field_mut 180 include/21679)
            pmod_attributes/4600 =a (field_mut 181 include/21679)
            pmod_ident/4601 =a (field_mut 182 include/21679)
            pmod_structure/4602 =a (field_mut 183 include/21679)
            pmod_functor/4603 =a (field_mut 184 include/21679)
            pmod_apply/4604 =a (field_mut 185 include/21679)
            pmod_constraint/4605 =a (field_mut 186 include/21679)
            pmod_unpack/4606 =a (field_mut 187 include/21679)
            pmod_extension/4607 =a (field_mut 188 include/21679)
            module_substitution_attributes/4608 =a
              (field_mut 189 include/21679)
            module_substitution/4609 =a (field_mut 190 include/21679)
            pmty_loc/4610 =a (field_mut 191 include/21679)
            pmty_attributes/4611 =a (field_mut 192 include/21679)
            pmty_ident/4612 =a (field_mut 193 include/21679)
            pmty_signature/4613 =a (field_mut 194 include/21679)
            pmty_functor/4614 =a (field_mut 195 include/21679)
            pmty_with/4615 =a (field_mut 196 include/21679)
            pmty_typeof/4616 =a (field_mut 197 include/21679)
            pmty_extension/4617 =a (field_mut 198 include/21679)
            pmty_alias/4618 =a (field_mut 199 include/21679)
            module_type_declaration_attributes/4619 =a
              (field_mut 200 include/21679)
            module_type_declaration/4620 =a (field_mut 201 include/21679)
            immutable/4621 =a (field_mut 202 include/21679)
            mutable_/4622 =a (field_mut 203 include/21679)
            pof_loc/4623 =a (field_mut 204 include/21679)
            pof_attributes/4624 =a (field_mut 205 include/21679)
            otag/4625 =a (field_mut 206 include/21679)
            oinherit/4626 =a (field_mut 207 include/21679)
            open_infos_attributes/4627 =a (field_mut 208 include/21679)
            open_infos/4628 =a (field_mut 209 include/21679)
            override/4629 =a (field_mut 210 include/21679)
            fresh/4630 =a (field_mut 211 include/21679)
            ppat_loc/4631 =a (field_mut 212 include/21679)
            ppat_attributes/4632 =a (field_mut 213 include/21679)
            ppat_any/4633 =a (field_mut 214 include/21679)
            ppat_var/4634 =a (field_mut 215 include/21679)
            ppat_alias/4635 =a (field_mut 216 include/21679)
            ppat_constant/4636 =a (field_mut 217 include/21679)
            ppat_interval/4637 =a (field_mut 218 include/21679)
            ppat_tuple/4638 =a (field_mut 219 include/21679)
            ppat_construct/4639 =a (field_mut 220 include/21679)
            ppat_variant/4640 =a (field_mut 221 include/21679)
            ppat_record/4641 =a (field_mut 222 include/21679)
            ppat_array/4642 =a (field_mut 223 include/21679)
            ppat_or/4643 =a (field_mut 224 include/21679)
            ppat_constraint/4644 =a (field_mut 225 include/21679)
            ppat_type/4645 =a (field_mut 226 include/21679)
            ppat_lazy/4646 =a (field_mut 227 include/21679)
            ppat_unpack/4647 =a (field_mut 228 include/21679)
            ppat_exception/4648 =a (field_mut 229 include/21679)
            ppat_extension/4649 =a (field_mut 230 include/21679)
            ppat_open/4650 =a (field_mut 231 include/21679)
            pstr/4651 =a (field_mut 232 include/21679)
            psig/4652 =a (field_mut 233 include/21679)
            ptyp/4653 =a (field_mut 234 include/21679)
            ppat/4654 =a (field_mut 235 include/21679)
            position/4655 =a (field_mut 236 include/21679)
            private_/4656 =a (field_mut 237 include/21679)
            public/4657 =a (field_mut 238 include/21679)
            nonrecursive/4658 =a (field_mut 239 include/21679)
            recursive/4659 =a (field_mut 240 include/21679)
            prf_loc/4660 =a (field_mut 241 include/21679)
            prf_attributes/4661 =a (field_mut 242 include/21679)
            rtag/4662 =a (field_mut 243 include/21679)
            rinherit/4663 =a (field_mut 244 include/21679)
            psig_loc/4664 =a (field_mut 245 include/21679)
            psig_value/4665 =a (field_mut 246 include/21679)
            psig_type/4666 =a (field_mut 247 include/21679)
            psig_typesubst/4667 =a (field_mut 248 include/21679)
            psig_typext/4668 =a (field_mut 249 include/21679)
            psig_exception/4669 =a (field_mut 250 include/21679)
            psig_module/4670 =a (field_mut 251 include/21679)
            psig_modsubst/4671 =a (field_mut 252 include/21679)
            psig_recmodule/4672 =a (field_mut 253 include/21679)
            psig_modtype/4673 =a (field_mut 254 include/21679)
            psig_modtypesubst/4674 =a (field_mut 255 include/21679)
            psig_open/4675 =a (field_mut 256 include/21679)
            psig_include/4676 =a (field_mut 257 include/21679)
            psig_class/4677 =a (field_mut 258 include/21679)
            psig_class_type/4678 =a (field_mut 259 include/21679)
            psig_attribute/4679 =a (field_mut 260 include/21679)
            psig_extension/4680 =a (field_mut 261 include/21679)
            pstr_loc/4681 =a (field_mut 262 include/21679)
            pstr_eval/4682 =a (field_mut 263 include/21679)
            pstr_value/4683 =a (field_mut 264 include/21679)
            pstr_primitive/4684 =a (field_mut 265 include/21679)
            pstr_type/4685 =a (field_mut 266 include/21679)
            pstr_typext/4686 =a (field_mut 267 include/21679)
            pstr_exception/4687 =a (field_mut 268 include/21679)
            pstr_module/4688 =a (field_mut 269 include/21679)
            pstr_recmodule/4689 =a (field_mut 270 include/21679)
            pstr_modtype/4690 =a (field_mut 271 include/21679)
            pstr_open/4691 =a (field_mut 272 include/21679)
            pstr_class/4692 =a (field_mut 273 include/21679)
            pstr_class_type/4693 =a (field_mut 274 include/21679)
            pstr_include/4694 =a (field_mut 275 include/21679)
            pstr_attribute/4695 =a (field_mut 276 include/21679)
            pstr_extension/4696 =a (field_mut 277 include/21679)
            toplevel_directive/4697 =a (field_mut 278 include/21679)
            ptop_def/4698 =a (field_mut 279 include/21679)
            ptop_dir/4699 =a (field_mut 280 include/21679)
            type_declaration_attributes/4700 =a (field_mut 281 include/21679)
            type_declaration/4701 =a (field_mut 282 include/21679)
            type_exception_attributes/4702 =a (field_mut 283 include/21679)
            type_exception/4703 =a (field_mut 284 include/21679)
            type_extension_attributes/4704 =a (field_mut 285 include/21679)
            type_extension/4705 =a (field_mut 286 include/21679)
            ptype_abstract/4706 =a (field_mut 287 include/21679)
            ptype_variant/4707 =a (field_mut 288 include/21679)
            ptype_record/4708 =a (field_mut 289 include/21679)
            ptype_open/4709 =a (field_mut 290 include/21679)
            value_binding_attributes/4710 =a (field_mut 291 include/21679)
            value_binding/4711 =a (field_mut 292 include/21679)
            value_description_attributes/4712 =a
              (field_mut 293 include/21679)
            value_description/4713 =a (field_mut 294 include/21679)
            covariant/4714 =a (field_mut 295 include/21679)
            contravariant/4715 =a (field_mut 296 include/21679)
            novariance/4716 =a (field_mut 297 include/21679)
            virtual_/4717 =a (field_mut 298 include/21679)
            concrete/4718 =a (field_mut 299 include/21679)
            pwith_type/4719 =a (field_mut 300 include/21679)
            pwith_module/4720 =a (field_mut 301 include/21679)
            pwith_modtype/4721 =a (field_mut 302 include/21679)
            pwith_modtypesubst/4722 =a (field_mut 303 include/21679)
            pwith_typesubst/4723 =a (field_mut 304 include/21679)
            pwith_modsubst/4724 =a (field_mut 305 include/21679)
            true_/4725 =a (field_mut 306 include/21679)
            false_/4726 =a (field_mut 307 include/21679)
            eint/4727 =a (field_mut 308 include/21679)
            echar/4728 =a (field_mut 309 include/21679)
            estring/4729 =a (field_mut 310 include/21679)
            efloat/4730 =a (field_mut 311 include/21679)
            eint32/4731 =a (field_mut 312 include/21679)
            eint64/4732 =a (field_mut 313 include/21679)
            enativeint/4733 =a (field_mut 314 include/21679)
            pint/4734 =a (field_mut 315 include/21679)
            pchar/4735 =a (field_mut 316 include/21679)
            pstring/4736 =a (field_mut 317 include/21679)
            pfloat/4737 =a (field_mut 318 include/21679)
            pint32/4738 =a (field_mut 319 include/21679)
            pint64/4739 =a (field_mut 320 include/21679)
            pnativeint/4740 =a (field_mut 321 include/21679)
            single_expr_payload/4741 =a (field_mut 322 include/21679)
            no_label/4742 =a (field_mut 323 include/21679)
            attribute/4743 =a (field_mut 324 include/21679)
            extension/4744 =a (field_mut 325 include/21679)
            elist/4745 =a (field_mut 326 include/21679)
            esequence/4746 =a (field_mut 327 include/21679)
            of_func/4748 =a (field_mut 328 include/21679)
            to_func/4749 =a (field_mut 329 include/21679)
            arg/4760 =
              (function name/4762 pattern/4763
                (funct-body Ppxlib__Deriving.Args.arg src/deriving.ml(85)<ghost>:2686-2815
                  (before Ppxlib__Deriving.Args.arg src/deriving.ml(86):2705-2815
                    (makeblock 0 name/4762
                      (after Ppxlib__Deriving.Args.arg src/deriving.ml(89):2757-2808
                        (apply
                          (field_imm 0
                            (field_imm 2 (global Ppxlib__Ast_pattern!)))
                          pattern/4763
                          (function x/4764
                            (funct-body Ppxlib__Deriving.Args.arg.(fun) src/deriving.ml(89):2791-2808
                              (before Ppxlib__Deriving.Args.arg.(fun) src/deriving.ml(89):2801-2807
                                (makeblock 0 x/4764))))))
                      0))))
            flag/4765 =
              (function name/4767
                (funct-body Ppxlib__Deriving.Args.flag src/deriving.ml(92)<ghost>:2828-2969
                  (before Ppxlib__Deriving.Args.flag src/deriving.ml(93):2839-2969
                    (let
                      (pattern/4768 =
                         (after Ppxlib__Deriving.Args.flag src/deriving.ml(93):2853-2886
                           (apply pexp_ident/4541
                             (after Ppxlib__Deriving.Args.flag src/deriving.ml(93):2864-2886
                               (apply lident/4592
                                 (after Ppxlib__Deriving.Args.flag src/deriving.ml(93):2872-2885
                                   (apply string/4445 name/4767)))))))
                      (before Ppxlib__Deriving.Args.flag src/deriving.ml(94):2894-2969
                        (makeblock 0 name/4767
                          (after Ppxlib__Deriving.Args.flag src/deriving.ml(94):2929-2967
                            (apply
                              (field_imm 0
                                (field_imm 2 (global Ppxlib__Ast_pattern!)))
                              pattern/4768 1))
                          0))))))
            empty/4772 = 0
            +>/4773 =
              (function a/4775 b/4776
                (funct-body Ppxlib__Deriving.Args.(+>) src/deriving.ml(101)<ghost>:3103-3120
                  (before Ppxlib__Deriving.Args.(+>) src/deriving.ml(101):3109-3120
                    (makeblock 0 a/4775 b/4776)))))
           (letrec
             (names/4777
                (function param/4784
                  (funct-body Ppxlib__Deriving.Args.names src/deriving.ml(103):3132-3239
                    (if param/4784
                      (let
                        (p/4782 =a (field_imm 1 param/4784)
                         t/4781 =a (field_imm 0 param/4784))
                        (before Ppxlib__Deriving.Args.names src/deriving.ml(105):3222-3239
                          (makeblock 0 (field_imm 0 p/4782)
                            (after Ppxlib__Deriving.Args.names src/deriving.ml(105):3232-3239
                              (apply names/4777 t/4781)))))
                      (before Ppxlib__Deriving.Args.names src/deriving.ml(104):3198-3200
                        0)))))
             (let
               (Instance/4917 =
                  (module-defn(Instance/4917) Ppxlib__Deriving.Args src/deriving.ml(107):3243-3961
                    (letrec
                      (create/4788
                         (function spec/4791 args/4792
                           (funct-body Ppxlib__Deriving.Args.Instance.create src/deriving.ml(112):3413-3825
                             (before Ppxlib__Deriving.Args.Instance.create src/deriving.ml(115):3528-3825
                               (if spec/4791
                                 (let
                                   (p/4795 =a (field_imm 1 spec/4791)
                                    t/4794 =a (field_imm 0 spec/4791))
                                   (before Ppxlib__Deriving.Args.Instance.create src/deriving.ml(118):3598-3825
                                     (let
                                       (value/4796 =
                                          (let
                                            (*match*/21682 =
                                               (after Ppxlib__Deriving.Args.Instance.create src/deriving.ml(119):3628-3654
                                                 (apply
                                                   (field_imm 69
                                                     (field_imm 91
                                                       (global Ppxlib__Import!)))
                                                   (field_imm 0 p/4795)
                                                   args/4792)))
                                            (if *match*/21682
                                              (let
                                                (expr/4870 =a
                                                   (field_imm 0
                                                     *match*/21682))
                                                (before Ppxlib__Deriving.Args.Instance.create src/deriving.ml(121):3719-3772
                                                  (after Ppxlib__Deriving.Args.Instance.create src/deriving.ml(121):3719-3772
                                                    (apply
                                                      (field_imm 1
                                                        (field_imm 2
                                                          (global Ppxlib__Ast_pattern!)))
                                                      (field_imm 1 p/4795)
                                                      (field_imm 1 expr/4870)
                                                      expr/4870))))
                                              (before Ppxlib__Deriving.Args.Instance.create src/deriving.ml(120):3682-3691
                                                (field_imm 2 p/4795)))))
                                       (before Ppxlib__Deriving.Args.Instance.create src/deriving.ml(123):3796-3825
                                         (makeblock 0
                                           (after Ppxlib__Deriving.Args.Instance.create src/deriving.ml(123):3804-3817
                                             (apply create/4788 t/4794
                                               args/4792))
                                           value/4796)))))
                                 (before Ppxlib__Deriving.Args.Instance.create src/deriving.ml(116):3559-3564
                                   0))))))
                      (letrec
                        (apply/4908
                           (function t/4911 f/4912
                             (funct-body Ppxlib__Deriving.Args.Instance.apply src/deriving.ml(125):3839-3955
                               (before Ppxlib__Deriving.Args.Instance.apply src/deriving.ml(126):3901-3955
                                 (if t/4911
                                   (let
                                     (x/4915 =a (field_imm 1 t/4911)
                                      t/4914 =a (field_imm 0 t/4911))
                                     (before Ppxlib__Deriving.Args.Instance.apply src/deriving.ml(126):3944-3955
                                       (after Ppxlib__Deriving.Args.Instance.apply src/deriving.ml(126):3944-3955
                                         (apply apply/4908 t/4914 f/4912
                                           x/4915))))
                                   (before Ppxlib__Deriving.Args.Instance.apply src/deriving.ml(126):3923-3924
                                     f/4912))))))
                        (pseudo Ppxlib__Deriving.Args.Instance src/deriving.ml(107):3261-3961
                          (makeblock 0 create/4788 apply/4908)))))
                apply/4918 =
                  (function t/4920 args/4921 f/4922
                    (funct-body Ppxlib__Deriving.Args.apply src/deriving.ml(129)<ghost>:3975-4027
                      (before Ppxlib__Deriving.Args.apply src/deriving.ml(129):3986-4027
                        (after Ppxlib__Deriving.Args.apply src/deriving.ml(129):3986-4027
                          (apply (field_imm 1 Instance/4917)
                            (after Ppxlib__Deriving.Args.apply src/deriving.ml(129):4001-4025
                              (apply (field_imm 0 Instance/4917) t/4920
                                args/4921))
                            f/4922))))))
               (pseudo Ppxlib__Deriving.Args src/deriving.ml(71):2395-4031
                 (makeblock 0 parse/4418 parse_res/4419 __/4421 __'/4422
                   drop/4423 as__/4424 alt/4425 alt_option/4426 |||/4427
                   map/4428 map'/4429 map_result/4430 >>|/4431 map0/4432
                   map1/4433 map2/4434 map0'/4435 map1'/4436 map2'/4437
                   map_value/4438 map_value'/4439 nil/4440 ^::/4441 many/4442
                   int/4443 char/4444 string/4445 float/4446 int32/4447
                   int64/4448 nativeint/4449 bool/4450 ebool/4451 pbool/4452
                   cst/4453 none/4454 some/4455 pair/4456 **/4457 triple/4458
                   loc/4459 pack0/4460 pack2/4461 pack3/4462 nolabel/4463
                   labelled/4464 optional/4465 binding_op/4466 case/4467
                   pcl_loc/4468 pcl_attributes/4469 pcl_constr/4470
                   pcl_structure/4471 pcl_fun/4472 pcl_apply/4473
                   pcl_let/4474 pcl_constraint/4475 pcl_extension/4476
                   pcl_open/4477 pcf_loc/4478 pcf_attributes/4479
                   pcf_inherit/4480 pcf_val/4481 pcf_method/4482
                   pcf_constraint/4483 pcf_initializer/4484
                   pcf_attribute/4485 pcf_extension/4486 cfk_virtual/4487
                   cfk_concrete/4488 class_infos_attributes/4489
                   class_infos/4490 class_signature/4491 class_structure/4492
                   pcty_loc/4493 pcty_attributes/4494 pcty_constr/4495
                   pcty_signature/4496 pcty_arrow/4497 pcty_extension/4498
                   pcty_open/4499 pctf_loc/4500 pctf_attributes/4501
                   pctf_inherit/4502 pctf_val/4503 pctf_method/4504
                   pctf_constraint/4505 pctf_attribute/4506
                   pctf_extension/4507 closed/4508 open_/4509
                   pconst_integer/4510 pconst_char/4511 pconst_string/4512
                   pconst_float/4513 pcstr_tuple/4514 pcstr_record/4515
                   constructor_declaration_attributes/4516
                   constructor_declaration/4517 ptyp_loc/4518
                   ptyp_attributes/4519 ptyp_any/4520 ptyp_var/4521
                   ptyp_arrow/4522 ptyp_tuple/4523 ptyp_constr/4524
                   ptyp_object/4525 ptyp_class/4526 ptyp_alias/4527
                   ptyp_variant/4528 ptyp_poly/4529 ptyp_package/4530
                   ptyp_extension/4531 upto/4532 downto_/4533 pdira_loc/4534
                   pdir_string/4535 pdir_int/4536 pdir_ident/4537
                   pdir_bool/4538 pexp_loc/4539 pexp_attributes/4540
                   pexp_ident/4541 pexp_constant/4542 pexp_let/4543
                   pexp_function/4544 pexp_fun/4545 pexp_apply/4546
                   pexp_match/4547 pexp_try/4548 pexp_tuple/4549
                   pexp_construct/4550 pexp_variant/4551 pexp_record/4552
                   pexp_field/4553 pexp_setfield/4554 pexp_array/4555
                   pexp_ifthenelse/4556 pexp_sequence/4557 pexp_while/4558
                   pexp_for/4559 pexp_constraint/4560 pexp_coerce/4561
                   pexp_send/4562 pexp_new/4563 pexp_setinstvar/4564
                   pexp_override/4565 pexp_letmodule/4566
                   pexp_letexception/4567 pexp_assert/4568 pexp_lazy/4569
                   pexp_poly/4570 pexp_object/4571 pexp_newtype/4572
                   pexp_pack/4573 pexp_open/4574 pexp_letop/4575
                   pexp_extension/4576 pexp_unreachable/4577
                   extension_constructor_attributes/4578
                   extension_constructor/4579 pext_decl/4580 pext_rebind/4581
                   unit/4582 named/4583 include_infos_attributes/4584
                   include_infos/4585 injective/4586 noinjectivity/4587
                   label_declaration_attributes/4588 label_declaration/4589
                   letop/4590 location/4591 lident/4592 ldot/4593 lapply/4594
                   module_binding_attributes/4595 module_binding/4596
                   module_declaration_attributes/4597 module_declaration/4598
                   pmod_loc/4599 pmod_attributes/4600 pmod_ident/4601
                   pmod_structure/4602 pmod_functor/4603 pmod_apply/4604
                   pmod_constraint/4605 pmod_unpack/4606 pmod_extension/4607
                   module_substitution_attributes/4608
                   module_substitution/4609 pmty_loc/4610
                   pmty_attributes/4611 pmty_ident/4612 pmty_signature/4613
                   pmty_functor/4614 pmty_with/4615 pmty_typeof/4616
                   pmty_extension/4617 pmty_alias/4618
                   module_type_declaration_attributes/4619
                   module_type_declaration/4620 immutable/4621 mutable_/4622
                   pof_loc/4623 pof_attributes/4624 otag/4625 oinherit/4626
                   open_infos_attributes/4627 open_infos/4628 override/4629
                   fresh/4630 ppat_loc/4631 ppat_attributes/4632
                   ppat_any/4633 ppat_var/4634 ppat_alias/4635
                   ppat_constant/4636 ppat_interval/4637 ppat_tuple/4638
                   ppat_construct/4639 ppat_variant/4640 ppat_record/4641
                   ppat_array/4642 ppat_or/4643 ppat_constraint/4644
                   ppat_type/4645 ppat_lazy/4646 ppat_unpack/4647
                   ppat_exception/4648 ppat_extension/4649 ppat_open/4650
                   pstr/4651 psig/4652 ptyp/4653 ppat/4654 position/4655
                   private_/4656 public/4657 nonrecursive/4658 recursive/4659
                   prf_loc/4660 prf_attributes/4661 rtag/4662 rinherit/4663
                   psig_loc/4664 psig_value/4665 psig_type/4666
                   psig_typesubst/4667 psig_typext/4668 psig_exception/4669
                   psig_module/4670 psig_modsubst/4671 psig_recmodule/4672
                   psig_modtype/4673 psig_modtypesubst/4674 psig_open/4675
                   psig_include/4676 psig_class/4677 psig_class_type/4678
                   psig_attribute/4679 psig_extension/4680 pstr_loc/4681
                   pstr_eval/4682 pstr_value/4683 pstr_primitive/4684
                   pstr_type/4685 pstr_typext/4686 pstr_exception/4687
                   pstr_module/4688 pstr_recmodule/4689 pstr_modtype/4690
                   pstr_open/4691 pstr_class/4692 pstr_class_type/4693
                   pstr_include/4694 pstr_attribute/4695 pstr_extension/4696
                   toplevel_directive/4697 ptop_def/4698 ptop_dir/4699
                   type_declaration_attributes/4700 type_declaration/4701
                   type_exception_attributes/4702 type_exception/4703
                   type_extension_attributes/4704 type_extension/4705
                   ptype_abstract/4706 ptype_variant/4707 ptype_record/4708
                   ptype_open/4709 value_binding_attributes/4710
                   value_binding/4711 value_description_attributes/4712
                   value_description/4713 covariant/4714 contravariant/4715
                   novariance/4716 virtual_/4717 concrete/4718
                   pwith_type/4719 pwith_module/4720 pwith_modtype/4721
                   pwith_modtypesubst/4722 pwith_typesubst/4723
                   pwith_modsubst/4724 true_/4725 false_/4726 eint/4727
                   echar/4728 estring/4729 efloat/4730 eint32/4731
                   eint64/4732 enativeint/4733 pint/4734 pchar/4735
                   pstring/4736 pfloat/4737 pint32/4738 pint64/4739
                   pnativeint/4740 single_expr_payload/4741 no_label/4742
                   attribute/4743 extension/4744 elist/4745 esequence/4746
                   of_func/4748 to_func/4749 arg/4760 flag/4765 empty/4772
                   +>/4773 names/4777 Instance/4917 apply/4918))))))
     ignore/4925 =
       (function param/4926
         (funct-body Ppxlib__Deriving.ignore src/deriving.ml(138)<ghost>:4278-4290
           (before Ppxlib__Deriving.ignore src/deriving.ml(138):4288-4290 0)))
     Generator/6276 =
       (module-defn(Generator/6276) Ppxlib__Deriving src/deriving.ml(146):4472-8020
         (let
           (deps/5187 =
              (function param/5191
                (funct-body Ppxlib__Deriving.Generator.deps src/deriving.ml(159)<ghost>:4784-4798
                  (let (t/5190 =a param/5191)
                    (before Ppxlib__Deriving.Generator.deps src/deriving.ml(159):4792-4798
                      (field_imm 3 t/5190)))))
            V2/5543 =
              (module-defn(V2/5543) Ppxlib__Deriving.Generator src/deriving.ml(161):4802-5179
                (let
                  (make/5192 =
                     (function *opt*/5194 *opt*/5196 *opt*/5199 spec/5202
                       gen/5203
                       (funct-body Ppxlib__Deriving.Generator.V2.make src/deriving.ml(162)<ghost>:4834-5041
                         (before Ppxlib__Deriving.Generator.V2.make src/deriving.ml(164):4925-5041
                           (seq
                             (if *opt*/5194
                               (let (*sth*/5195 =a (field_imm 0 *opt*/5194))
                                 (before Ppxlib__Deriving.Generator.V2.make src/deriving.ml(162):4851-4853
                                   *sth*/5195))
                               (before Ppxlib__Deriving.Generator.V2.make src/deriving.ml(162):4851-4853
                                 0))
                             (before Ppxlib__Deriving.Generator.V2.make src/deriving.ml(164):4925-5041
                               (let
                                 (deps/5197 =
                                    (if *opt*/5196
                                      (let
                                        (*sth*/5198 =a
                                           (field_imm 0 *opt*/5196))
                                        (before Ppxlib__Deriving.Generator.V2.make src/deriving.ml(162):4864-4866
                                          *sth*/5198))
                                      (before Ppxlib__Deriving.Generator.V2.make src/deriving.ml(162):4864-4866
                                        0)))
                                 (before Ppxlib__Deriving.Generator.V2.make src/deriving.ml(164):4925-5041
                                   (let
                                     (unused_code_warnings/5200 =
                                        (if *opt*/5199
                                          (let
                                            (*sth*/5201 =a
                                               (field_imm 0 *opt*/5199))
                                            (before Ppxlib__Deriving.Generator.V2.make src/deriving.ml(162):4893-4898
                                              *sth*/5201))
                                          (before Ppxlib__Deriving.Generator.V2.make src/deriving.ml(162):4893-4898
                                            0)))
                                     (before Ppxlib__Deriving.Generator.V2.make src/deriving.ml(164):4925-5041
                                       (let
                                         (arg_names/5204 =
                                            (after Ppxlib__Deriving.Generator.V2.make src/deriving.ml(164):4941-4977
                                              (apply
                                                (field_imm 36
                                                  (field_imm 57
                                                    (field_imm 96
                                                      (global Ppxlib__Import!))))
                                                (after Ppxlib__Deriving.Generator.V2.make src/deriving.ml(164):4960-4977
                                                  (apply
                                                    (field_imm 334 Args/4923)
                                                    spec/5202)))))
                                         (before Ppxlib__Deriving.Generator.V2.make src/deriving.ml(165):4987-5041
                                           (makeblock 0 spec/5202 gen/5203
                                             arg_names/5204 deps/5197
                                             unused_code_warnings/5200))))))))))))
                   make_noarg/5537 =
                     (function attributes/5539 deps/5540
                       unused_code_warnings/5541 gen/5542
                       (funct-body Ppxlib__Deriving.Generator.V2.make_noarg src/deriving.ml(167)<ghost>:5062-5173
                         (before Ppxlib__Deriving.Generator.V2.make_noarg src/deriving.ml(168):5114-5173
                           (after Ppxlib__Deriving.Generator.V2.make_noarg src/deriving.ml(168):5114-5173
                             (apply make/5192 attributes/5539 deps/5540
                               unused_code_warnings/5541
                               (field_imm 332 Args/4923) gen/5542))))))
                  (pseudo Ppxlib__Deriving.Generator.V2 src/deriving.ml(161):4814-5179
                    (makeblock 0 make/5192 make_noarg/5537))))
            make/5544 =
              (function attributes/5546 deps/5547 unused_code_warnings/5548
                spec/5549 gen/5550
                (funct-body Ppxlib__Deriving.Generator.make src/deriving.ml(171)<ghost>:5192-5355
                  (before Ppxlib__Deriving.Generator.make src/deriving.ml(172):5247-5355
                    (after Ppxlib__Deriving.Generator.make src/deriving.ml(172):5247-5355
                      (apply (field_imm 0 V2/5543) attributes/5546 deps/5547
                        unused_code_warnings/5548 spec/5549
                        (after Ppxlib__Deriving.Generator.make src/deriving.ml(173):5306-5355
                          (apply
                            (field_imm 4
                              (field_imm 2
                                (global Ppxlib__Expansion_context!)))
                            gen/5550)))))))
            make_noarg/5551 =
              (function attributes/5553 deps/5554 unused_code_warnings/5555
                gen/5556
                (funct-body Ppxlib__Deriving.Generator.make_noarg src/deriving.ml(175)<ghost>:5374-5483
                  (before Ppxlib__Deriving.Generator.make_noarg src/deriving.ml(176):5424-5483
                    (after Ppxlib__Deriving.Generator.make_noarg src/deriving.ml(176):5424-5483
                      (apply make/5544 attributes/5553 deps/5554
                        unused_code_warnings/5555 (field_imm 332 Args/4923)
                        gen/5556)))))
            merge_accepted_args/5557 =
              (function l/5559
                (funct-body Ppxlib__Deriving.Generator.merge_accepted_args src/deriving.ml(178)<ghost>:5511-5667
                  (before Ppxlib__Deriving.Generator.merge_accepted_args src/deriving.ml(179):5519-5667
                    (letrec
                      (loop/5560
                         (function acc/5561 param/5566
                           (funct-body Ppxlib__Deriving.Generator.merge_accepted_args.loop src/deriving.ml(179)<ghost>:5532-5632
                             (if param/5566
                               (let
                                 (*match*/21686 =a (field_imm 0 param/5566)
                                  t/5563 =a *match*/21686
                                  rest/5564 =a (field_imm 1 param/5566))
                                 (before Ppxlib__Deriving.Generator.merge_accepted_args.loop src/deriving.ml(181):5588-5632
                                   (after Ppxlib__Deriving.Generator.merge_accepted_args.loop src/deriving.ml(181):5588-5632
                                     (apply loop/5560
                                       (after Ppxlib__Deriving.Generator.merge_accepted_args.loop src/deriving.ml(181):5593-5627
                                         (apply
                                           (field_imm 6
                                             (field_imm 57
                                               (field_imm 96
                                                 (global Ppxlib__Import!))))
                                           acc/5561 (field_imm 2 t/5563)))
                                       rest/5564))))
                               (before Ppxlib__Deriving.Generator.merge_accepted_args.loop src/deriving.ml(180):5561-5564
                                 acc/5561)))))
                      (before Ppxlib__Deriving.Generator.merge_accepted_args src/deriving.ml(183):5644-5667
                        (after Ppxlib__Deriving.Generator.merge_accepted_args src/deriving.ml(183):5644-5667
                          (apply loop/5560
                            (field_imm 0
                              (field_imm 57
                                (field_imm 96 (global Ppxlib__Import!))))
                            l/5559)))))))
            check_arguments/5567 =
              (function name/5569 generators/5570 args/5571
                (funct-body Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(185)<ghost>:5691-7210
                  (before Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(186):5749-7210
                    (let
                      (empty_label_error/5572 =
                         (after Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(187):5779-6030
                           (apply
                             (field_imm 62
                               (field_imm 91 (global Ppxlib__Import!)))
                             args/5571
                             (function param/5595
                               (funct-body Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(187):5803-6030
                                 (let
                                   (e/5574 =a (field_imm 1 param/5595)
                                    label/5573 =a (field_imm 0 param/5595))
                                   (before Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(188):5832-6029
                                     (if
                                       (after Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(188):5835-5856
                                         (apply
                                           (field_imm 28
                                             (field_imm 96
                                               (global Ppxlib__Import!)))
                                           label/5573))
                                       (before Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(189):5874-6009
                                         (makeblock 0
                                           (after Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(190):5893-6009
                                             (apply
                                               (field_imm 13
                                                 (global Ppxlib__Location!))
                                               (field_imm 1 e/5574)
                                               [0:
                                                [11:
                                                 "Ppxlib.Deriving: generator arguments must be labelled"
                                                 0]
                                                "Ppxlib.Deriving: generator arguments must be labelled"]))))
                                       (before Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(192):6025-6029
                                         0)))))))))
                      (before Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(194):6042-7210
                        (let
                          (duplicate_argument_error/5596 =
                             (after Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(195):6079-6373
                               (revapply
                                 (after Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(195):6079-6349
                                   (apply
                                     (field_imm 2
                                       (field_imm 92
                                         (global Ppxlib__Import!)))
                                     (after Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(196):6098-6171
                                       (apply
                                         (field_imm 68
                                           (field_imm 91
                                             (global Ppxlib__Import!)))
                                         args/5571
                                         (function param/5605 param/5604
                                           : int
                                           (funct-body Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(196):6129-6170
                                             (let
                                               (*match*/21688 =a
                                                  (field_imm 1 param/5604)
                                                b/5603 =a
                                                  (field_imm 0 param/5604)
                                                *match*/21689 =a
                                                  (field_imm 1 param/5605)
                                                a/5602 =a
                                                  (field_imm 0 param/5605))
                                               (before Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(196):6151-6169
                                                 (after Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(196):6151-6169
                                                   (apply
                                                     (field_imm 46
                                                       (field_imm 96
                                                         (global Ppxlib__Import!)))
                                                     a/5602 b/5603))))))))
                                     (function param/5608
                                       (funct-body Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(197):6183-6349
                                         (let
                                           (e/5607 =a
                                              (field_imm 1 param/5608)
                                            label/5606 =a
                                              (field_imm 0 param/5608))
                                           (before Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(198):6212-6348
                                             (after Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(198):6212-6348
                                               (apply
                                                 (field_imm 13
                                                   (global Ppxlib__Location!))
                                                 (field_imm 1 e/5607)
                                                 [0:
                                                  [11:
                                                   "Ppxlib.Deriving: argument labelled '"
                                                   [2:
                                                    0
                                                    [11:
                                                     "' appears more than once"
                                                     0]]]
                                                  "Ppxlib.Deriving: argument labelled '%s' appears more than once"]
                                                 label/5606))))))))
                                 (field_imm 4
                                   (field_imm 92 (global Ppxlib__Import!))))))
                          (before Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(203):6385-7210
                            (let
                              (accepted_args/5609 =
                                 (after Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(203):6405-6435
                                   (apply merge_accepted_args/5557
                                     generators/5570)))
                              (before Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(204):6443-7210
                                (let
                                  (unaccepted_argument/5610 =
                                     (after Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(205):6475-7047
                                       (apply
                                         (field_imm 62
                                           (field_imm 91
                                             (global Ppxlib__Import!)))
                                         args/5571
                                         (function param/5619
                                           (funct-body Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(205):6499-7047
                                             (let
                                               (e/5612 =a
                                                  (field_imm 1 param/5619)
                                                label/5611 =a
                                                  (field_imm 0 param/5619))
                                               (before Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(206):6528-7046
                                                 (if
                                                   (not
                                                     (after Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(206):6535-6571
                                                       (apply
                                                         (field_imm 2
                                                           (field_imm 57
                                                             (field_imm 96
                                                               (global Ppxlib__Import!))))
                                                         label/5611
                                                         accepted_args/5609)))
                                                   (before Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(207):6589-7026
                                                     (let
                                                       (spellcheck_msg/5613 =
                                                          (let
                                                            (*match*/21687 =
                                                               (after Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(209):6646-6709
                                                                 (apply
                                                                   (field_imm 2
                                                                    (global Ppxlib__Spellcheck!))
                                                                   (after Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(209):6668-6703
                                                                    (apply
                                                                    (field_imm 22
                                                                    (field_imm 57
                                                                    (field_imm 96
                                                                    (global Ppxlib__Import!))))
                                                                    accepted_args/5609))
                                                                   label/5611)))
                                                            (if *match*/21687
                                                              (let
                                                                (s/5618 =a
                                                                   (field_imm 0
                                                                    *match*/21687))
                                                                (before Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(212):6782-6791
                                                                  (after Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(212):6782-6791
                                                                    (apply
                                                                    (field_imm 30
                                                                    (global Stdlib!))
                                                                    ".\n"
                                                                    s/5618))))
                                                              (before Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(211):6753-6755
                                                                ""))))
                                                       (before Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(214):6819-7026
                                                         (makeblock 0
                                                           (after Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(215):6838-7026
                                                             (apply
                                                               (field_imm 13
                                                                 (global Ppxlib__Location!))
                                                               (field_imm 1
                                                                 e/5612)
                                                               [0:
                                                                [11:
                                                                 "Ppxlib.Deriving: generator '"
                                                                 [2:
                                                                  0
                                                                  [11:
                                                                   "' doesn't accept argument '"
                                                                   [2:
                                                                    0
                                                                    [12:
                                                                    '\''
                                                                    [2: 0 0]]]]]]
                                                                "Ppxlib.Deriving: generator '%s' doesn't accept argument '%s'%s"]
                                                               name/5569
                                                               label/5611
                                                               spellcheck_msg/5613))))))
                                                   (before Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(219):7042-7046
                                                     0)))))))))
                                  (before Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(221):7059-7210
                                    (let
                                      (errors/5620 =
                                         (after Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(222):7078-7144
                                           (apply
                                             (field_imm 97
                                               (global Ppxlib__Import!))
                                             empty_label_error/5572
                                             (after Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(222):7098-7144
                                               (apply
                                                 (field_imm 97
                                                   (global Ppxlib__Import!))
                                                 duplicate_argument_error/5596
                                                 unaccepted_argument/5610)))))
                                      (before Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(224):7156-7210
                                        (if
                                          (after Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(224):7159-7181
                                            (apply
                                              (field_imm 73
                                                (global Ppxlib__Import!))
                                              (after Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(224):7159-7177
                                                (apply
                                                  (field_imm 0
                                                    (field_imm 91
                                                      (global Ppxlib__Import!)))
                                                  errors/5620))
                                              0))
                                          (before Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(224):7187-7192
                                            [0: 0])
                                          (before Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(224):7198-7210
                                            (makeblock 1 errors/5620))))))))))))))))
            apply/5621 =
              (function param/5630 param/5629 ctxt/5625 x/5626 args/5627
                (funct-body Ppxlib__Deriving.Generator.apply src/deriving.ml(226)<ghost>:7224-7291
                  (let (t/5624 =a param/5630)
                    (before Ppxlib__Deriving.Generator.apply src/deriving.ml(226):7253-7291
                      (after Ppxlib__Deriving.Generator.apply src/deriving.ml(226):7253-7291
                        (apply (field_imm 336 Args/4923) (field_imm 0 t/5624)
                          args/5627
                          (after Ppxlib__Deriving.Generator.apply src/deriving.ml(226):7276-7291
                            (apply (field_imm 1 t/5624) ctxt/5625 x/5626))))))))
            apply_all/5631 =
              (function ctxt/5633 entry/5634 param/5648
                (funct-body Ppxlib__Deriving.Generator.apply_all src/deriving.ml(228)<ghost>:7309-7611
                  (let
                    (args/5637 =a (field_imm 2 param/5648)
                     generators/5636 =a (field_imm 1 param/5648)
                     name/5635 =a (field_imm 0 param/5648))
                    (before Ppxlib__Deriving.Generator.apply_all src/deriving.ml(229):7352-7611
                      (after Ppxlib__Deriving.Generator.apply_all src/deriving.ml(230):7375-7611
                        (apply
                          (field_imm 4
                            (field_imm 93 (global Ppxlib__Import!)))
                          (after Ppxlib__Deriving.Generator.apply_all src/deriving.ml(230):7375-7415
                            (apply check_arguments/5567
                              (field_imm 0 name/5635) generators/5636
                              args/5637))
                          (function param/5647
                            (funct-body Ppxlib__Deriving.Generator.apply_all.(fun) src/deriving.ml(230):7420-7611
                              (before Ppxlib__Deriving.Generator.apply_all.(fun) src/deriving.ml(231):7434-7611
                                (after Ppxlib__Deriving.Generator.apply_all.(fun) src/deriving.ml(231):7434-7611
                                  (apply
                                    (field_imm 48
                                      (field_imm 91 (global Ppxlib__Import!)))
                                    generators/5636
                                    (function param/5646
                                      (funct-body Ppxlib__Deriving.Generator.apply_all.(fun) src/deriving.ml(231):7457-7611
                                        (let (t/5645 =a param/5646)
                                          (before Ppxlib__Deriving.Generator.apply_all.(fun) src/deriving.ml(232):7479-7610
                                            (makeblock 0
                                              (after Ppxlib__Deriving.Generator.apply_all.(fun) src/deriving.ml(233):7499-7542
                                                (apply apply/5621 t/5645
                                                  (field_imm 0 name/5635)
                                                  ctxt/5633 entry/5634
                                                  args/5637))
                                              (field_int 4 t/5645)))))))))))))))))
            apply_all/5649 =
              (function ctxt/5650 entry/5651 generators/5652 ext_to_item/5653
                (funct-body Ppxlib__Deriving.Generator.apply_all src/deriving.ml(237)<ghost>:7629-8016
                  (before Ppxlib__Deriving.Generator.apply_all src/deriving.ml(238):7670-8016
                    (let
                      (l/5654 =
                         (after Ppxlib__Deriving.Generator.apply_all src/deriving.ml(238):7678-7724
                           (apply
                             (field_imm 48
                               (field_imm 91 (global Ppxlib__Import!)))
                             generators/5652
                             (after Ppxlib__Deriving.Generator.apply_all src/deriving.ml(238):7701-7724
                               (apply apply_all/5631 ctxt/5650 entry/5651)))))
                      (before Ppxlib__Deriving.Generator.apply_all src/deriving.ml(239):7732-8016
                        (let
                          (*match*/21698 =
                             (after Ppxlib__Deriving.Generator.apply_all src/deriving.ml(240):7753-7820
                               (apply
                                 (field_imm 57
                                   (field_imm 91 (global Ppxlib__Import!)))
                                 (function param/6273
                                   (funct-body Ppxlib__Deriving.Generator.apply_all.(fun) src/deriving.ml(240):7772-7818
                                     (switch* param/6273
                                      case tag 0:
                                       (let
                                         (e/5658 =a (field_imm 0 param/6273))
                                         (before Ppxlib__Deriving.Generator.apply_all.(fun) src/deriving.ml(240):7790-7796
                                           (makeblock 0 e/5658)))
                                      case tag 1:
                                       (let
                                         (e/5659 =a (field_imm 0 param/6273))
                                         (before Ppxlib__Deriving.Generator.apply_all.(fun) src/deriving.ml(240):7810-7817
                                           (makeblock 1 e/5659))))))
                                 l/5654))
                           lerr/5656 =a (field_imm 1 *match*/21698)
                           l1/5655 =a (field_imm 0 *match*/21698))
                          (before Ppxlib__Deriving.Generator.apply_all src/deriving.ml(242):7832-8016
                            (let
                              (lerr/6274 =
                                 (after Ppxlib__Deriving.Generator.apply_all src/deriving.ml(243):7849-7937
                                   (revapply
                                     (after Ppxlib__Deriving.Generator.apply_all src/deriving.ml(243):7849-7865
                                       (apply
                                         (field_imm 52
                                           (field_imm 91
                                             (global Ppxlib__Import!)))
                                         lerr/5656))
                                     (after Ppxlib__Deriving.Generator.apply_all src/deriving.ml(244):7875-7937
                                       (let
                                         (func/21692 =
                                            (field_imm 48
                                              (field_imm 91
                                                (global Ppxlib__Import!)))
                                          arg/21693 =
                                            (function err/6275
                                              (funct-body Ppxlib__Deriving.Generator.apply_all.(fun) src/deriving.ml(244):7887-7937
                                                (before Ppxlib__Deriving.Generator.apply_all.(fun) src/deriving.ml(244):7899-7936
                                                  (after Ppxlib__Deriving.Generator.apply_all.(fun) src/deriving.ml(244):7899-7936
                                                    (apply ext_to_item/5653
                                                      (field_imm 2
                                                        (global Ppxlib__Location!))
                                                      err/6275 0))))))
                                         (function param/21694 stub
                                           (apply func/21692 param/21694
                                             arg/21693)))))))
                              (before Ppxlib__Deriving.Generator.apply_all src/deriving.ml(246):7949-8016
                                (after Ppxlib__Deriving.Generator.apply_all src/deriving.ml(246):7949-8016
                                  (apply
                                    (field_imm 97 (global Ppxlib__Import!))
                                    (after Ppxlib__Deriving.Generator.apply_all src/deriving.ml(246):7949-7963
                                      (apply
                                        (field_imm 52
                                          (field_imm 91
                                            (global Ppxlib__Import!)))
                                        l1/5655))
                                    (makeblock 0 (makeblock 0 lerr/6274 0) 0)))))))))))))
           (pseudo Ppxlib__Deriving.Generator src/deriving.ml(146):4491-8020
             (makeblock 0 deps/5187 V2/5543 make/5544 make_noarg/5551
               merge_accepted_args/5557 check_arguments/5567 apply/5621
               apply_all/5649))))
     Deriver/6977 =
       (module-defn(Deriver/6977) Ppxlib__Deriving src/deriving.ml(249):8022-17263
         (let
           (Actual_deriver/6288 =
              (module-defn(Actual_deriver/6288) Ppxlib__Deriving.Deriver src/deriving.ml(250):8048-8877
                (pseudo Ppxlib__Deriving.Deriver.Actual_deriver src/deriving.ml(250):8072-8877
                  (makeblock 0)))
            Alias/6298 =
              (module-defn(Alias/6298) Ppxlib__Deriving.Deriver src/deriving.ml(270):8881-9221
                (pseudo Ppxlib__Deriving.Deriver.Alias src/deriving.ml(270):8896-9221
                  (makeblock 0)))
            Field/6331 =
              (module-defn(Field/6331) Ppxlib__Deriving.Deriver src/deriving.ml(283):9225-10946
                (let
                  (str_type_decl/6307 =
                     (makeblock 0 "type" 0
                       (function t/6308
                         (funct-body Ppxlib__Deriving.Deriver.Field.str_type_decl.(fun) src/deriving.ml(297):9535-9561
                           (before Ppxlib__Deriving.Deriver.Field.str_type_decl.(fun) src/deriving.ml(297):9545-9560
                             (field_imm 1 t/6308))))
                       (function t/6309
                         (funct-body Ppxlib__Deriving.Deriver.Field.str_type_decl.(fun) src/deriving.ml(298):9581-9607
                           (before Ppxlib__Deriving.Deriver.Field.str_type_decl.(fun) src/deriving.ml(298):9591-9606
                             (field_imm 0 t/6309)))))
                   str_type_ext/6310 =
                     (makeblock 0 "type extension" 0
                       (function t/6311
                         (funct-body Ppxlib__Deriving.Deriver.Field.str_type_ext.(fun) src/deriving.ml(305):9716-9741
                           (before Ppxlib__Deriving.Deriver.Field.str_type_ext.(fun) src/deriving.ml(305):9726-9740
                             (field_imm 2 t/6311))))
                       (function t/6312
                         (funct-body Ppxlib__Deriving.Deriver.Field.str_type_ext.(fun) src/deriving.ml(306):9761-9786
                           (before Ppxlib__Deriving.Deriver.Field.str_type_ext.(fun) src/deriving.ml(306):9771-9785
                             (field_imm 1 t/6312)))))
                   str_exception/6313 =
                     (makeblock 0 "exception" 0
                       (function t/6314
                         (funct-body Ppxlib__Deriving.Deriver.Field.str_exception.(fun) src/deriving.ml(313):9891-9917
                           (before Ppxlib__Deriving.Deriver.Field.str_exception.(fun) src/deriving.ml(313):9901-9916
                             (field_imm 3 t/6314))))
                       (function t/6315
                         (funct-body Ppxlib__Deriving.Deriver.Field.str_exception.(fun) src/deriving.ml(314):9937-9963
                           (before Ppxlib__Deriving.Deriver.Field.str_exception.(fun) src/deriving.ml(314):9947-9962
                             (field_imm 2 t/6315)))))
                   str_module_type_decl/6316 =
                     (makeblock 0 "module type" 0
                       (function t/6317
                         (funct-body Ppxlib__Deriving.Deriver.Field.str_module_type_decl.(fun) src/deriving.ml(321):10077-10110
                           (before Ppxlib__Deriving.Deriver.Field.str_module_type_decl.(fun) src/deriving.ml(321):10087-10109
                             (field_imm 4 t/6317))))
                       (function t/6318
                         (funct-body Ppxlib__Deriving.Deriver.Field.str_module_type_decl.(fun) src/deriving.ml(322):10130-10163
                           (before Ppxlib__Deriving.Deriver.Field.str_module_type_decl.(fun) src/deriving.ml(322):10140-10162
                             (field_imm 3 t/6318)))))
                   sig_type_decl/6319 =
                     (makeblock 0 "signature type" 1
                       (function t/6320
                         (funct-body Ppxlib__Deriving.Deriver.Field.sig_type_decl.(fun) src/deriving.ml(329):10273-10299
                           (before Ppxlib__Deriving.Deriver.Field.sig_type_decl.(fun) src/deriving.ml(329):10283-10298
                             (field_imm 5 t/6320))))
                       (function t/6321
                         (funct-body Ppxlib__Deriving.Deriver.Field.sig_type_decl.(fun) src/deriving.ml(330):10319-10345
                           (before Ppxlib__Deriving.Deriver.Field.sig_type_decl.(fun) src/deriving.ml(330):10329-10344
                             (field_imm 4 t/6321)))))
                   sig_type_ext/6322 =
                     (makeblock 0 "signature type extension" 1
                       (function t/6323
                         (funct-body Ppxlib__Deriving.Deriver.Field.sig_type_ext.(fun) src/deriving.ml(337):10464-10489
                           (before Ppxlib__Deriving.Deriver.Field.sig_type_ext.(fun) src/deriving.ml(337):10474-10488
                             (field_imm 6 t/6323))))
                       (function t/6324
                         (funct-body Ppxlib__Deriving.Deriver.Field.sig_type_ext.(fun) src/deriving.ml(338):10509-10534
                           (before Ppxlib__Deriving.Deriver.Field.sig_type_ext.(fun) src/deriving.ml(338):10519-10533
                             (field_imm 5 t/6324)))))
                   sig_exception/6325 =
                     (makeblock 0 "signature exception" 1
                       (function t/6326
                         (funct-body Ppxlib__Deriving.Deriver.Field.sig_exception.(fun) src/deriving.ml(345):10649-10675
                           (before Ppxlib__Deriving.Deriver.Field.sig_exception.(fun) src/deriving.ml(345):10659-10674
                             (field_imm 7 t/6326))))
                       (function t/6327
                         (funct-body Ppxlib__Deriving.Deriver.Field.sig_exception.(fun) src/deriving.ml(346):10695-10721
                           (before Ppxlib__Deriving.Deriver.Field.sig_exception.(fun) src/deriving.ml(346):10705-10720
                             (field_imm 6 t/6327)))))
                   sig_module_type_decl/6328 =
                     (makeblock 0 "signature module type" 1
                       (function t/6329
                         (funct-body Ppxlib__Deriving.Deriver.Field.sig_module_type_decl.(fun) src/deriving.ml(353):10845-10878
                           (before Ppxlib__Deriving.Deriver.Field.sig_module_type_decl.(fun) src/deriving.ml(353):10855-10877
                             (field_imm 8 t/6329))))
                       (function t/6330
                         (funct-body Ppxlib__Deriving.Deriver.Field.sig_module_type_decl.(fun) src/deriving.ml(354):10898-10931
                           (before Ppxlib__Deriving.Deriver.Field.sig_module_type_decl.(fun) src/deriving.ml(354):10908-10930
                             (field_imm 7 t/6330))))))
                  (pseudo Ppxlib__Deriving.Deriver.Field src/deriving.ml(283):9240-10946
                    (makeblock 0 str_type_decl/6307 str_type_ext/6310
                      str_exception/6313 str_module_type_decl/6316
                      sig_type_decl/6319 sig_type_ext/6322 sig_exception/6325
                      sig_module_type_decl/6328))))
            T/6336 =
              (makeblock 248 "Ppxlib__Deriving.Deriver.T"
                (caml_fresh_oo_id 0))
            derivers/6337 =
              (function param/6342
                (funct-body Ppxlib__Deriving.Deriver.derivers src/deriving.ml(361)<ghost>:11067-11186
                  (before Ppxlib__Deriving.Deriver.derivers src/deriving.ml(362):11076-11186
                    (after Ppxlib__Deriving.Deriver.derivers src/deriving.ml(362):11076-11186
                      (apply
                        (field_imm 62
                          (field_imm 91 (global Ppxlib__Import!)))
                        (after Ppxlib__Deriving.Deriver.derivers src/deriving.ml(362):11092-11118
                          (apply (field_imm 2 (global Ppx_derivers!)) 0))
                        (function param/6341
                          (funct-body Ppxlib__Deriving.Deriver.derivers.(fun) src/deriving.ml(362):11122-11186
                            (catch
                              (let
                                (*match*/21707 =a (field_imm 1 param/6341)
                                 tag/21708 =a (field_imm 0 *match*/21707))
                                (if (== tag/21708 T/6336)
                                  (let
                                    (t/6340 =a (field_imm 1 *match*/21707)
                                     name/6339 =a (field_imm 0 param/6341))
                                    (before Ppxlib__Deriving.Deriver.derivers.(fun) src/deriving.ml(363):11153-11167
                                      (makeblock 0
                                        (makeblock 0 name/6339 t/6340))))
                                  (exit 7)))
                             with (7)
                              (before Ppxlib__Deriving.Deriver.derivers.(fun) src/deriving.ml(364):11181-11185
                                0)))))))))
            Not_supported/6343 =
              (makeblock 248 "Ppxlib__Deriving.Deriver.Not_supported"
                (caml_fresh_oo_id 0))
            resolve_actual_derivers/6344 =
              (function field/6346 name/6347
                (funct-body Ppxlib__Deriving.Deriver.resolve_actual_derivers src/deriving.ml(368)<ghost>:11255-11781
                  (before Ppxlib__Deriving.Deriver.resolve_actual_derivers src/deriving.ml(369):11291-11781
                    (letrec
                      (loop/6348
                         (function name/6349 collected/6350
                           (funct-body Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop src/deriving.ml(369)<ghost>:11304-11746
                             (before Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop src/deriving.ml(370):11327-11746
                               (if
                                 (after Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop src/deriving.ml(371):11338-11431
                                   (apply
                                     (field_imm 21
                                       (field_imm 91
                                         (global Ppxlib__Import!)))
                                     (function d/6351
                                       (funct-body Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop.(fun) src/deriving.ml(371):11363-11431
                                         (before Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop.(fun) src/deriving.ml(372):11406-11430
                                           (after Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop.(fun) src/deriving.ml(372):11406-11430
                                             (apply
                                               (field_imm 47
                                                 (field_imm 96
                                                   (global Ppxlib__Import!)))
                                               (field_imm 0 d/6351)
                                               name/6349)))))
                                     collected/6350))
                                 (before Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop src/deriving.ml(373):11443-11452
                                   collected/6350)
                                 (before Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop src/deriving.ml(375):11472-11746
                                   (let
                                     (*match*/21709 =
                                        (after Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop src/deriving.ml(375):11478-11502
                                          (apply
                                            (field_imm 1
                                              (global Ppx_derivers!))
                                            name/6349)))
                                     (catch
                                       (if *match*/21709
                                         (let
                                           (*match*/21710 =a
                                              (field_imm 0 *match*/21709)
                                            tag/21712 =a
                                              (field_imm 0 *match*/21710))
                                           (if (== tag/21712 T/6336)
                                             (let
                                               (*match*/21711 =a
                                                  (field_imm 1 *match*/21710))
                                               (switch* *match*/21711
                                                case tag 0:
                                                 (let
                                                   (drv/6352 =a
                                                      (field_imm 0
                                                        *match*/21711))
                                                   (before Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop src/deriving.ml(376):11551-11567
                                                     (makeblock 0 drv/6352
                                                       collected/6350)))
                                                case tag 1:
                                                 (let
                                                   (alias/6353 =a
                                                      (field_imm 0
                                                        *match*/21711))
                                                   (before Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop src/deriving.ml(378):11616-11704
                                                     (let
                                                       (set/6354 =
                                                          (after Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop src/deriving.ml(378):11626-11645
                                                            (apply
                                                              (field_imm 3
                                                                field/6346)
                                                              alias/6353)))
                                                       (before Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop src/deriving.ml(379):11661-11704
                                                         (after Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop src/deriving.ml(379):11661-11704
                                                           (apply
                                                             (field_imm 50
                                                               (field_imm 91
                                                                 (global Ppxlib__Import!)))
                                                             set/6354
                                                             collected/6350
                                                             loop/6348))))))))
                                             (exit 8)))
                                         (exit 8))
                                      with (8)
                                       (before Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop src/deriving.ml(380):11720-11746
                                         (raise
                                           (after Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop src/deriving.ml(380):11720-11746
                                             (makeblock 0 Not_supported/6343
                                               name/6349))))))))))))
                      (before Ppxlib__Deriving.Deriver.resolve_actual_derivers src/deriving.ml(382):11758-11781
                        (after Ppxlib__Deriving.Deriver.resolve_actual_derivers src/deriving.ml(382):11758-11781
                          (apply
                            (field_imm 8
                              (field_imm 91 (global Ppxlib__Import!)))
                            (after Ppxlib__Deriving.Deriver.resolve_actual_derivers src/deriving.ml(382):11767-11781
                              (apply loop/6348 name/6347 0)))))))))
            resolve_internal/6355 =
              (function field/6357 name/6358
                (funct-body Ppxlib__Deriving.Deriver.resolve_internal src/deriving.ml(384)<ghost>:11806-12015
                  (before Ppxlib__Deriving.Deriver.resolve_internal src/deriving.ml(385):11842-12015
                    (after Ppxlib__Deriving.Deriver.resolve_internal src/deriving.ml(385):11842-12015
                      (apply
                        (field_imm 48
                          (field_imm 91 (global Ppxlib__Import!)))
                        (after Ppxlib__Deriving.Deriver.resolve_internal src/deriving.ml(385):11851-11887
                          (apply resolve_actual_derivers/6344 field/6357
                            name/6358))
                        (function drv/6359
                          (funct-body Ppxlib__Deriving.Deriver.resolve_internal.(fun) src/deriving.ml(385):11891-12015
                            (before Ppxlib__Deriving.Deriver.resolve_internal.(fun) src/deriving.ml(386):11911-12014
                              (let
                                (*match*/21713 =
                                   (after Ppxlib__Deriving.Deriver.resolve_internal.(fun) src/deriving.ml(386):11917-11930
                                     (apply (field_imm 2 field/6357)
                                       drv/6359)))
                                (if *match*/21713
                                  (let
                                    (g/6360 =a (field_imm 0 *match*/21713))
                                    (before Ppxlib__Deriving.Deriver.resolve_internal.(fun) src/deriving.ml(388):12001-12014
                                      (makeblock 0 (field_imm 0 drv/6359)
                                        g/6360)))
                                  (before Ppxlib__Deriving.Deriver.resolve_internal.(fun) src/deriving.ml(387):11954-11980
                                    (raise
                                      (after Ppxlib__Deriving.Deriver.resolve_internal.(fun) src/deriving.ml(387):11954-11980
                                        (makeblock 0 Not_supported/6343
                                          name/6358))))))))))))))
            supported_for/6362 =
              (function field/6364
                (funct-body Ppxlib__Deriving.Deriver.supported_for src/deriving.ml(390)<ghost>:12037-12282
                  (before Ppxlib__Deriving.Deriver.supported_for src/deriving.ml(391):12049-12282
                    (after Ppxlib__Deriving.Deriver.supported_for src/deriving.ml(391):12049-12282
                      (revapply
                        (after Ppxlib__Deriving.Deriver.supported_for src/deriving.ml(391):12049-12255
                          (apply
                            (field_imm 16
                              (field_imm 91 (global Ppxlib__Import!)))
                            (function acc/6365 param/6367
                              (funct-body Ppxlib__Deriving.Deriver.supported_for.(fun) src/deriving.ml(391):12104-12255
                                (let
                                  (*match*/21718 =a (field_imm 1 param/6367)
                                   name/6366 =a (field_imm 0 param/6367))
                                  (before Ppxlib__Deriving.Deriver.supported_for.(fun) src/deriving.ml(392):12134-12254
                                    (catch
                                      (try
                                        (exit 9
                                          (after Ppxlib__Deriving.Deriver.supported_for.(fun) src/deriving.ml(392):12140-12167
                                            (apply resolve_internal/6355
                                              field/6364 name/6366)))
                                       with exn/21715
                                        (catch
                                          (let
                                            (tag/21717 =a
                                               (field_imm 0 exn/21715))
                                            (if
                                              (== tag/21717
                                                Not_supported/6343)
                                              (let
                                                (*match*/21716 =a
                                                   (field_imm 1 exn/21715))
                                                (before Ppxlib__Deriving.Deriver.supported_for.(fun) src/deriving.ml(394):12251-12254
                                                  acc/6365))
                                              (exit 10)))
                                         with (10) (reraise exn/21715)))
                                     with (9 val/21714)
                                      (before Ppxlib__Deriving.Deriver.supported_for.(fun) src/deriving.ml(393):12188-12211
                                        (after Ppxlib__Deriving.Deriver.supported_for.(fun) src/deriving.ml(393):12188-12211
                                          (apply
                                            (field_imm 3
                                              (field_imm 57
                                                (field_imm 96
                                                  (global Ppxlib__Import!))))
                                            name/6366 acc/6365))))))))
                            (field_imm 0
                              (field_imm 57
                                (field_imm 96 (global Ppxlib__Import!))))
                            (after Ppxlib__Deriving.Deriver.supported_for src/deriving.ml(391):12064-12077
                              (apply derivers/6337 0))))
                        (field_imm 22
                          (field_imm 57
                            (field_imm 96 (global Ppxlib__Import!)))))))))
            not_supported/6368 =
              (function field/6370 *opt*/6371 name/6374
                (funct-body Ppxlib__Deriving.Deriver.not_supported src/deriving.ml(397)<ghost>:12304-12708
                  (before Ppxlib__Deriving.Deriver.not_supported src/deriving.ml(398):12361-12708
                    (let
                      (spellcheck/6372 =
                         (if *opt*/6371
                           (let (*sth*/6373 =a (field_imm 0 *opt*/6371))
                             (before Ppxlib__Deriving.Deriver.not_supported src/deriving.ml(397):12344-12348
                               *sth*/6373))
                           (before Ppxlib__Deriving.Deriver.not_supported src/deriving.ml(397):12344-12348
                             1)))
                      (before Ppxlib__Deriving.Deriver.not_supported src/deriving.ml(398):12361-12708
                        (let
                          (spellcheck_msg/6375 =
                             (if spellcheck/6372
                               (before Ppxlib__Deriving.Deriver.not_supported src/deriving.ml(400):12415-12529
                                 (let
                                   (*match*/21719 =
                                      (after Ppxlib__Deriving.Deriver.not_supported src/deriving.ml(400):12421-12473
                                        (apply
                                          (field_imm 2
                                            (global Ppxlib__Spellcheck!))
                                          (after Ppxlib__Deriving.Deriver.not_supported src/deriving.ml(400):12443-12464
                                            (apply supported_for/6362
                                              field/6370))
                                          (field_imm 0 name/6374))))
                                   (if *match*/21719
                                     (let
                                       (s/6376 =a (field_imm 0 *match*/21719))
                                       (before Ppxlib__Deriving.Deriver.not_supported src/deriving.ml(402):12520-12529
                                         (after Ppxlib__Deriving.Deriver.not_supported src/deriving.ml(402):12520-12529
                                           (apply
                                             (field_imm 30 (global Stdlib!))
                                             ".\n" s/6376))))
                                     (before Ppxlib__Deriving.Deriver.not_supported src/deriving.ml(401):12497-12499
                                       ""))))
                               (before Ppxlib__Deriving.Deriver.not_supported src/deriving.ml(403):12541-12543
                                 "")))
                          (before Ppxlib__Deriving.Deriver.not_supported src/deriving.ml(405):12555-12708
                            (after Ppxlib__Deriving.Deriver.not_supported src/deriving.ml(405):12555-12708
                              (apply
                                (field_imm 13 (global Ppxlib__Location!))
                                (field_imm 1 name/6374)
                                [0:
                                 [11:
                                  "Ppxlib.Deriving: '"
                                  [2:
                                   0
                                   [11:
                                    "' is not a supported "
                                    [2:
                                     0 [11: " deriving generator" [2: 0 0]]]]]]
                                 "Ppxlib.Deriving: '%s' is not a supported %s deriving generator%s"]
                                (field_imm 0 name/6374)
                                (field_imm 0 field/6370) spellcheck_msg/6375)))))))))
            resolve/6377 =
              (function field/6379 name/6380
                (funct-body Ppxlib__Deriving.Deriver.resolve src/deriving.ml(409)<ghost>:12724-12894
                  (before Ppxlib__Deriving.Deriver.resolve src/deriving.ml(410):12741-12894
                    (try
                      (makeblock 0
                        (after Ppxlib__Deriving.Deriver.resolve src/deriving.ml(410):12748-12781
                          (apply resolve_internal/6355 field/6379
                            (field_imm 0 name/6380))))
                     with exn/21720
                      (catch
                        (let (tag/21721 =a (field_imm 0 exn/21720))
                          (if (== tag/21721 Not_supported/6343)
                            (let (name'/6381 =a (field_imm 1 exn/21720))
                              (before Ppxlib__Deriving.Deriver.resolve src/deriving.ml(412):12820-12894
                                (makeblock 1
                                  (after Ppxlib__Deriving.Deriver.resolve src/deriving.ml(412):12826-12894
                                    (apply not_supported/6368 field/6379
                                      (makeblock 0
                                        (after Ppxlib__Deriving.Deriver.resolve src/deriving.ml(412):12859-12888
                                          (apply
                                            (field_imm 47
                                              (field_imm 96
                                                (global Ppxlib__Import!)))
                                            (field_imm 0 name/6380)
                                            name'/6381)))
                                      name/6380)))))
                            (exit 11)))
                       with (11) (reraise exn/21720))))))
            resolve_all/6382 =
              (function field/6384 derivers/6385
                (funct-body Ppxlib__Deriving.Deriver.resolve_all src/deriving.ml(414)<ghost>:12914-15707
                  (before Ppxlib__Deriving.Deriver.resolve_all src/deriving.ml(415):12935-15707
                    (let
                      (*match*/21735 =
                         (after Ppxlib__Deriving.Deriver.resolve_all src/deriving.ml(416):12991-13751
                           (revapply
                             (after Ppxlib__Deriving.Deriver.resolve_all src/deriving.ml(416):12991-13701
                               (apply
                                 (field_imm 57
                                   (field_imm 91 (global Ppxlib__Import!)))
                                 (function param/6394
                                   (funct-body Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(417):13018-13684
                                     (let
                                       (args/6389 =a (field_imm 1 param/6394)
                                        name/6388 =a (field_imm 0 param/6394))
                                       (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(418):13049-13683
                                         (let
                                           (*match*/21728 =
                                              (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(418):13055-13083
                                                (apply
                                                  (field_imm 1
                                                    (global Ppx_derivers!))
                                                  (field_imm 0 name/6388))))
                                           (if *match*/21728
                                             (let
                                               (*match*/21729 =a
                                                  (field_imm 0 *match*/21728))
                                               (catch
                                                 (let
                                                   (tag/21731 =a
                                                      (field_imm 0
                                                        *match*/21729))
                                                   (if (== tag/21731 T/6336)
                                                     (let
                                                       (*match*/21730 =a
                                                          (field_imm 1
                                                            *match*/21729))
                                                       (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(420):13175-13577
                                                         (switch* args/6389
                                                          case tag 0:
                                                           (let
                                                             (l/6391 =a
                                                                (field_imm 0
                                                                  args/6389))
                                                             (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(424):13393-13421
                                                               (makeblock 0
                                                                 (makeblock 0
                                                                   (makeblock 0
                                                                    name/6388
                                                                    l/6391)))))
                                                          case tag 1:
                                                           (let
                                                             (msg/6393 =a
                                                                (field_imm 1
                                                                  args/6389)
                                                              loc/6392 =a
                                                                (field_imm 0
                                                                  args/6389))
                                                             (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(426):13485-13576
                                                               (makeblock 1
                                                                 (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(427):13518-13576
                                                                   (apply
                                                                    (field_imm 13
                                                                    (global Ppxlib__Location!))
                                                                    loc/6392
                                                                    [0:
                                                                    [11:
                                                                    "Ppxlib.Deriving: "
                                                                    [2: 0 0]]
                                                                    "Ppxlib.Deriving: %s"]
                                                                    msg/6393))))))))
                                                     (exit 15)))
                                                with (15)
                                                 (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(430):13667-13683
                                                   [0: 0])))
                                             (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(419):13109-13148
                                               (makeblock 1
                                                 (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(419):13122-13148
                                                   (apply not_supported/6368
                                                     field/6384 0 name/6388))))))))))
                                 derivers/6385))
                             (function param/6397
                               (funct-body Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(432):13711-13751
                                 (let
                                   (l2/6396 =a (field_imm 1 param/6397)
                                    l1/6395 =a (field_imm 0 param/6397))
                                   (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(432):13727-13751
                                     (makeblock 0
                                       (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(432):13728-13746
                                         (apply
                                           (field_imm 61
                                             (field_imm 91
                                               (global Ppxlib__Import!)))
                                           l1/6395))
                                       l2/6396)))))))
                       derivers_and_args_errors/6387 =a
                         (field_imm 1 *match*/21735)
                       derivers_and_args/6386 =a (field_imm 0 *match*/21735))
                      (before Ppxlib__Deriving.Deriver.resolve_all src/deriving.ml(435):13801-15707
                        (let
                          (seen/6398 =
                             (after Ppxlib__Deriving.Deriver.resolve_all src/deriving.ml(435):13812-13829
                               (apply
                                 (field_imm 0
                                   (field_imm 87 (global Ppxlib__Import!)))
                                 0 16)))
                          (before Ppxlib__Deriving.Deriver.resolve_all src/deriving.ml(436):13837-15707
                            (let
                              (*match*/21727 =
                                 (after Ppxlib__Deriving.Deriver.resolve_all src/deriving.ml(437):13868-15648
                                   (apply
                                     (field_imm 16
                                       (field_imm 91
                                         (global Ppxlib__Import!)))
                                     (function param/6746 param/6745
                                       (funct-body Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(438):13927-15648
                                         (let
                                           (args/6733 =a
                                              (field_imm 1 param/6745)
                                            name/6732 =a
                                              (field_imm 0 param/6745)
                                            errors/6731 =a
                                              (field_imm 1 param/6746)
                                            result/6730 =a
                                              (field_imm 0 param/6746))
                                           (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(439):13975-15647
                                             (let
                                               (*match*/21723 =
                                                  (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(439):13981-13999
                                                    (apply resolve/6377
                                                      field/6384 name/6732)))
                                               (switch* *match*/21723
                                                case tag 0:
                                                 (let
                                                   (named_generators/6735 =a
                                                      (field_imm 0
                                                        *match*/21723))
                                                   (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(442):14102-15647
                                                     (let
                                                       (l_err/6736 =
                                                          (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(443):14130-15520
                                                            (apply
                                                              (field_imm 63
                                                                (field_imm 91
                                                                  (global Ppxlib__Import!)))
                                                              named_generators/6735
                                                              (function
                                                                param/6744
                                                                (funct-body Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(444):14184-15520
                                                                  (let
                                                                    (gen/6738 =a
                                                                    (field_imm 1
                                                                    param/6744)
                                                                    actual_deriver_name/6737 =a
                                                                    (field_imm 0
                                                                    param/6744))
                                                                    (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(445):14239-15519
                                                                    (let
                                                                    (dup_error/6739 =
                                                                    (if
                                                                    (&&
                                                                    (field_imm 4
                                                                    (global Ppxlib__Options!))
                                                                    (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(448):14366-14402
                                                                    (apply
                                                                    (field_imm 6
                                                                    (field_imm 87
                                                                    (global Ppxlib__Import!)))
                                                                    seen/6398
                                                                    actual_deriver_name/6737)))
                                                                    (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(450):14454-14623
                                                                    (makeblock 0
                                                                    (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(451):14482-14596
                                                                    (apply
                                                                    (field_imm 13
                                                                    (global Ppxlib__Location!))
                                                                    (field_imm 1
                                                                    name/6732)
                                                                    [0:
                                                                    [11:
                                                                    "Deriver "
                                                                    [2:
                                                                    0
                                                                    [11:
                                                                    " appears twice"
                                                                    0]]]
                                                                    "Deriver %s appears twice"]
                                                                    actual_deriver_name/6737))
                                                                    0))
                                                                    (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(454):14651-14653
                                                                    0)))
                                                                    (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(456):14697-15519
                                                                    (let
                                                                    (l_err/6740 =
                                                                    (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(457):14731-15386
                                                                    (apply
                                                                    (field_imm 63
                                                                    (field_imm 91
                                                                    (global Ppxlib__Import!)))
                                                                    (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(457):14747-14767
                                                                    (apply
                                                                    (field_imm 0
                                                                    Generator/6276)
                                                                    gen/6738))
                                                                    (function
                                                                    dep/6741
                                                                    (funct-body Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(457):14771-15386
                                                                    (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(458):14809-15385
                                                                    (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(458):14809-15385
                                                                    (apply
                                                                    (field_imm 62
                                                                    (field_imm 91
                                                                    (global Ppxlib__Import!)))
                                                                    (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(458):14825-14860
                                                                    (apply
                                                                    resolve_actual_derivers/6344
                                                                    field/6384
                                                                    dep/6741))
                                                                    (function
                                                                    drv/6742
                                                                    (funct-body Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(459):14892-15385
                                                                    (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(460):14934-15384
                                                                    (let
                                                                    (dep_name/6743 =
                                                                    (field_imm 0
                                                                    drv/6742))
                                                                    (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(461):14991-15384
                                                                    (if
                                                                    (not
                                                                    (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(461):14998-15025
                                                                    (apply
                                                                    (field_imm 6
                                                                    (field_imm 87
                                                                    (global Ppxlib__Import!)))
                                                                    seen/6398
                                                                    dep_name/6743)))
                                                                    (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(462):15063-15344
                                                                    (makeblock 0
                                                                    (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(463):15102-15344
                                                                    (apply
                                                                    (field_imm 13
                                                                    (global Ppxlib__Location!))
                                                                    (field_imm 1
                                                                    name/6732)
                                                                    [0:
                                                                    [11:
                                                                    "Deriver "
                                                                    [2:
                                                                    0
                                                                    [11:
                                                                    " is needed for "
                                                                    [2:
                                                                    0
                                                                    [11:
                                                                    ", you need to add it before in the list"
                                                                    0]]]]]
                                                                    "Deriver %s is needed for %s, you need to add it before in the list"]
                                                                    dep_name/6743
                                                                    (field_imm 0
                                                                    name/6732)))))
                                                                    (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(467):15380-15384
                                                                    0)))))))))))))))
                                                                    (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(469):15430-15519
                                                                    (seq
                                                                    (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(469):15430-15480
                                                                    (apply
                                                                    (field_imm 29
                                                                    (field_imm 87
                                                                    (global Ppxlib__Import!)))
                                                                    seen/6398
                                                                    actual_deriver_name/6737
                                                                    0))
                                                                    (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(470):15502-15519
                                                                    (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(470):15502-15519
                                                                    (apply
                                                                    (field_imm 97
                                                                    (global Ppxlib__Import!))
                                                                    dup_error/6739
                                                                    l_err/6740)))))))))))))))
                                                       (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(472):15552-15647
                                                         (makeblock 0
                                                           (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(472):15554-15613
                                                             (apply
                                                               (field_imm 97
                                                                 (global Ppxlib__Import!))
                                                               result/6730
                                                               (makeblock 0
                                                                 (makeblock 0
                                                                   name/6732
                                                                   (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(472):15572-15604
                                                                    (apply
                                                                    (field_imm 48
                                                                    (field_imm 91
                                                                    (global Ppxlib__Import!)))
                                                                    named_generators/6735
                                                                    (function
                                                                    prim/21722
                                                                    stub
                                                                    (field_mut 1
                                                                    prim/21722))))
                                                                   args/6733)
                                                                 0)))
                                                           (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(473):15631-15645
                                                             (apply
                                                               (field_imm 97
                                                                 (global Ppxlib__Import!))
                                                               errors/6731
                                                               l_err/6736)))))))
                                                case tag 1:
                                                 (let
                                                   (e/6734 =a
                                                      (field_imm 0
                                                        *match*/21723))
                                                   (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(440):14028-14052
                                                     (makeblock 0 result/6730
                                                       (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(440):14037-14051
                                                         (apply
                                                           (field_imm 97
                                                             (global Ppxlib__Import!))
                                                           errors/6731
                                                           (makeblock 0
                                                             e/6734 0))))))))))))
                                     [0: 0 0] derivers_and_args/6386))
                               dep_errors/6729 =a (field_imm 1 *match*/21727)
                               result/6728 =a (field_imm 0 *match*/21727))
                              (before Ppxlib__Deriving.Deriver.resolve_all src/deriving.ml(475):15660-15707
                                (makeblock 0 result/6728
                                  (after Ppxlib__Deriving.Deriver.resolve_all src/deriving.ml(475):15669-15706
                                    (apply
                                      (field_imm 97 (global Ppxlib__Import!))
                                      derivers_and_args_errors/6387
                                      dep_errors/6729))))))))))))
            add/6747 =
              (function str_type_decl/6749 str_type_ext/6750
                str_exception/6751 str_module_type_decl/6752
                sig_type_decl/6753 sig_type_ext/6754 sig_exception/6755
                sig_module_type_decl/6756 extension/6757 name/6758
                (funct-body Ppxlib__Deriving.Deriver.add src/deriving.ml(477)<ghost>:15719-16553
                  (before Ppxlib__Deriving.Deriver.add src/deriving.ml(480):15885-16553
                    (let
                      (actual_deriver/6759 =
                         (makeblock 0 name/6758 str_type_decl/6749
                           str_type_ext/6750 str_exception/6751
                           str_module_type_decl/6752 sig_type_decl/6753
                           sig_type_ext/6754 sig_exception/6755
                           sig_module_type_decl/6756 extension/6757))
                      (before Ppxlib__Deriving.Deriver.add src/deriving.ml(494):16181-16553
                        (seq
                          (after Ppxlib__Deriving.Deriver.add src/deriving.ml(494):16181-16243
                            (apply (field_imm 0 (global Ppx_derivers!))
                              name/6758
                              (makeblock 0 T/6336
                                (makeblock 0 actual_deriver/6759))))
                          (before Ppxlib__Deriving.Deriver.add src/deriving.ml(495):16249-16553
                            (seq
                              (if extension/6757
                                (let (f/6760 =a (field_imm 0 extension/6757))
                                  (before Ppxlib__Deriving.Deriver.add src/deriving.ml(498):16312-16542
                                    (let
                                      (extension/6761 =
                                         (after Ppxlib__Deriving.Deriver.add src/deriving.ml(499):16338-16395
                                           (apply
                                             (field_imm 1
                                               (global Ppxlib__Extension!))
                                             name/6758 5
                                             (after Ppxlib__Deriving.Deriver.add src/deriving.ml(499):16385-16392
                                               (apply
                                                 (field_imm 235
                                                   (global Ppxlib__Ast_pattern!))
                                                 (field_imm 3
                                                   (global Ppxlib__Ast_pattern!))))
                                             f/6760)))
                                      (before Ppxlib__Deriving.Deriver.add src/deriving.ml(501):16415-16542
                                        (after Ppxlib__Deriving.Deriver.add src/deriving.ml(501):16415-16542
                                          (apply
                                            (field_imm 4
                                              (global Ppxlib__Driver!))
                                            0
                                            (makeblock 0
                                              (makeblock 0
                                                (after Ppxlib__Deriving.Deriver.add src/deriving.ml(503):16503-16540
                                                  (apply
                                                    (field_imm 0
                                                      (field_imm 0
                                                        (global Ppxlib__Context_free!)))
                                                    extension/6761))
                                                0))
                                            0 0 0 0 0 0 0 0 0 0
                                            (after Ppxlib__Deriving.Deriver.add src/deriving.ml(502):16456-16483
                                              (apply
                                                (field_imm 30
                                                  (global Stdlib!))
                                                "Ppxlib.Deriving." name/6758))))))))
                                (before Ppxlib__Deriving.Deriver.add src/deriving.ml(496):16285-16287
                                  0))
                              (before Ppxlib__Deriving.Deriver.add src/deriving.ml(504):16549-16553
                                name/6758)))))))))
            add_alias/6960 =
              (function name/6962 str_type_decl/6963 str_type_ext/6964
                str_exception/6965 str_module_type_decl/6966
                sig_type_decl/6967 sig_type_ext/6968 sig_exception/6969
                sig_module_type_decl/6970 set/6971
                (funct-body Ppxlib__Deriving.Deriver.add_alias src/deriving.ml(506)<ghost>:16571-17259
                  (before Ppxlib__Deriving.Deriver.add_alias src/deriving.ml(509):16730-17259
                    (let
                      (alias/6972 =
                         (let
                           (get/6973 =
                              (function param/6976
                                (funct-body Ppxlib__Deriving.Deriver.add_alias.get src/deriving.ml(510):16768-16806
                                  (if param/6976
                                    (let
                                      (set/6975 =a (field_imm 0 param/6976))
                                      (before Ppxlib__Deriving.Deriver.add_alias.get src/deriving.ml(510):16803-16806
                                        set/6975))
                                    (before Ppxlib__Deriving.Deriver.add_alias.get src/deriving.ml(510):16785-16788
                                      set/6971)))))
                           (before Ppxlib__Deriving.Deriver.add_alias src/deriving.ml(511):16816-17193
                             (makeblock 0
                               (after Ppxlib__Deriving.Deriver.add_alias src/deriving.ml(512):16842-16859
                                 (apply get/6973 str_type_decl/6963))
                               (after Ppxlib__Deriving.Deriver.add_alias src/deriving.ml(513):16884-16900
                                 (apply get/6973 str_type_ext/6964))
                               (after Ppxlib__Deriving.Deriver.add_alias src/deriving.ml(514):16926-16943
                                 (apply get/6973 str_exception/6965))
                               (after Ppxlib__Deriving.Deriver.add_alias src/deriving.ml(515):16976-17000
                                 (apply get/6973 str_module_type_decl/6966))
                               (after Ppxlib__Deriving.Deriver.add_alias src/deriving.ml(516):17026-17043
                                 (apply get/6973 sig_type_decl/6967))
                               (after Ppxlib__Deriving.Deriver.add_alias src/deriving.ml(517):17068-17084
                                 (apply get/6973 sig_type_ext/6968))
                               (after Ppxlib__Deriving.Deriver.add_alias src/deriving.ml(518):17110-17127
                                 (apply get/6973 sig_exception/6969))
                               (after Ppxlib__Deriving.Deriver.add_alias src/deriving.ml(519):17160-17184
                                 (apply get/6973 sig_module_type_decl/6970))))))
                      (before Ppxlib__Deriving.Deriver.add_alias src/deriving.ml(522):17205-17259
                        (seq
                          (after Ppxlib__Deriving.Deriver.add_alias src/deriving.ml(522):17205-17249
                            (apply (field_imm 0 (global Ppx_derivers!))
                              name/6962
                              (makeblock 0 T/6336 (makeblock 1 alias/6972))))
                          (before Ppxlib__Deriving.Deriver.add_alias src/deriving.ml(523):17255-17259
                            name/6962))))))))
           (pseudo Ppxlib__Deriving.Deriver src/deriving.ml(249):8039-17263
             (makeblock 0 Actual_deriver/6288 Alias/6298 Field/6331 T/6336
               derivers/6337 Not_supported/6343 resolve_actual_derivers/6344
               resolve_internal/6355 supported_for/6362 not_supported/6368
               resolve/6377 resolve_all/6382 add/6747 add_alias/6960))))
     add/6978 = (field_imm 12 Deriver/6977)
     add_alias/6979 = (field_imm 13 Deriver/6977)
     invalid_with/6980 =
       (function loc/6982
         (funct-body Ppxlib__Deriving.invalid_with src/deriving.ml(533)<ghost>:17556-17632
           (before Ppxlib__Deriving.invalid_with src/deriving.ml(534):17565-17632
             (after Ppxlib__Deriving.invalid_with src/deriving.ml(534):17565-17632
               (apply (field_imm 4 (global Ppxlib__Location!))
                 (makeblock 0 loc/6982)
                 [0:
                  [11:
                   "invalid [" [17: 5 [11: "deriving ] attribute syntax" 0]]]
                  "invalid [@@deriving ] attribute syntax"])))))
     generator_name_of_id/6983 =
       (function loc/6985 id/6986
         (funct-body Ppxlib__Deriving.generator_name_of_id src/deriving.ml(536)<ghost>:17659-17791
           (before Ppxlib__Deriving.generator_name_of_id src/deriving.ml(537):17670-17791
             (catch
               (try
                 (exit 19
                   (after Ppxlib__Deriving.generator_name_of_id src/deriving.ml(537):17676-17700
                     (apply (field_imm 2 (global Ppxlib__Longident!))
                       id/6986)))
                with exn/21739
                 (before Ppxlib__Deriving.generator_name_of_id src/deriving.ml(539):17774-17791
                   (after Ppxlib__Deriving.generator_name_of_id src/deriving.ml(539):17774-17791
                     (apply invalid_with/6980 loc/6985))))
              with (19 l/7089)
               (before Ppxlib__Deriving.generator_name_of_id src/deriving.ml(538):17715-17754
                 (makeblock 0
                   (after Ppxlib__Deriving.generator_name_of_id src/deriving.ml(538):17728-17752
                     (apply
                       (field_imm 2 (field_imm 96 (global Ppxlib__Import!)))
                       "." l/7089))
                   loc/6985))))))
     Unknown_syntax/7090 =
       (makeblock 248 "Ppxlib__Deriving.Unknown_syntax" (caml_fresh_oo_id 0))
     parse_arguments/7091 =
       (function l/7093
         (funct-body Ppxlib__Deriving.parse_arguments src/deriving.ml(543)<ghost>:17862-18913
           (before Ppxlib__Deriving.parse_arguments src/deriving.ml(544):17868-18913
             (try
               (makeblock 0
                 (catch
                   (if l/7093
                     (let
                       (*match*/21745 =a (field_imm 0 l/7093)
                        *match*/21746 =a (field_imm 0 *match*/21745))
                       (if (isint *match*/21746)
                         (let (*match*/21747 =a (field_imm 1 l/7093))
                           (if *match*/21747 (exit 25)
                             (let (e/7094 =a (field_imm 1 *match*/21745))
                               (before Ppxlib__Deriving.parse_arguments src/deriving.ml(547):17929-18547
                                 (let (*match*/21743 = (field_imm 0 e/7094))
                                   (catch
                                     (switch *match*/21743
                                      case tag 11:
                                       (let
                                         (*match*/21744 =a
                                            (field_imm 1 *match*/21743))
                                         (if *match*/21744 (exit 23)
                                           (let
                                             (fields/7096 =a
                                                (field_imm 0 *match*/21743))
                                             (before Ppxlib__Deriving.parse_arguments src/deriving.ml(550):18020-18360
                                               (after Ppxlib__Deriving.parse_arguments src/deriving.ml(550):18020-18360
                                                 (apply
                                                   (field_imm 48
                                                     (field_imm 91
                                                       (global Ppxlib__Import!)))
                                                   fields/7096
                                                   (function param/7101
                                                     (funct-body Ppxlib__Deriving.parse_arguments.(fun) src/deriving.ml(550):18039-18360
                                                       (let
                                                         (expr/7098 =a
                                                            (field_imm 1
                                                              param/7101)
                                                          id/7097 =a
                                                            (field_imm 0
                                                              param/7101))
                                                         (before Ppxlib__Deriving.parse_arguments.(fun) src/deriving.ml(551):18076-18359
                                                           (let
                                                             (name/7099 =
                                                                (let
                                                                  (*match*/21742 =
                                                                    (field_imm 0
                                                                    id/7097))
                                                                  (catch
                                                                    (switch* *match*/21742
                                                                    case tag 0:
                                                                    (let
                                                                    (s/7100 =a
                                                                    (field_imm 0
                                                                    *match*/21742))
                                                                    (before Ppxlib__Deriving.parse_arguments.(fun) src/deriving.ml(553):18159-18160
                                                                    s/7100))
                                                                    case tag 1:
                                                                    (exit 22)
                                                                    case tag 2:
                                                                    (exit 22))
                                                                   with (22)
                                                                    (before Ppxlib__Deriving.parse_arguments.(fun) src/deriving.ml(555):18212-18307
                                                                    (raise_notrace
                                                                    (after Ppxlib__Deriving.parse_arguments.(fun) src/deriving.ml(555):18212-18307
                                                                    (makeblock 0
                                                                    Unknown_syntax/7090
                                                                    (field_imm 1
                                                                    id/7097)
                                                                    "simple identifier expected")))))))
                                                             (before Ppxlib__Deriving.parse_arguments.(fun) src/deriving.ml(558):18347-18359
                                                               (makeblock 0
                                                                 name/7099
                                                                 expr/7098)))))))))))))
                                      default: (exit 23))
                                    with (23)
                                     (before Ppxlib__Deriving.parse_arguments src/deriving.ml(560):18392-18546
                                       (raise_notrace
                                         (after Ppxlib__Deriving.parse_arguments src/deriving.ml(560):18392-18546
                                           (makeblock 0 Unknown_syntax/7090
                                             (field_imm 1 e/7094)
                                             "non-optional labelled argument or record expected"))))))))))
                         (exit 25)))
                     (exit 25))
                  with (25)
                   (let (l/7095 =a l/7093)
                     (before Ppxlib__Deriving.parse_arguments src/deriving.ml(565):18571-18850
                       (after Ppxlib__Deriving.parse_arguments src/deriving.ml(565):18571-18850
                         (apply
                           (field_imm 48
                             (field_imm 91 (global Ppxlib__Import!)))
                           l/7095
                           (function param/7157
                             (funct-body Ppxlib__Deriving.parse_arguments.(fun) src/deriving.ml(565):18585-18850
                               (let
                                 (expr/7103 =a (field_imm 1 param/7157)
                                  label/7102 =a (field_imm 0 param/7157))
                                 (before Ppxlib__Deriving.parse_arguments.(fun) src/deriving.ml(566):18621-18849
                                   (catch
                                     (switch* label/7102
                                      case int 0: (exit 24)
                                      case tag 0:
                                       (let
                                         (s/7156 =a (field_imm 0 label/7102))
                                         (before Ppxlib__Deriving.parse_arguments.(fun) src/deriving.ml(567):18668-18677
                                           (makeblock 0 s/7156 expr/7103)))
                                      case tag 1: (exit 24))
                                    with (24)
                                     (before Ppxlib__Deriving.parse_arguments.(fun) src/deriving.ml(569):18717-18849
                                       (raise_notrace
                                         (after Ppxlib__Deriving.parse_arguments.(fun) src/deriving.ml(569):18717-18849
                                           (makeblock 0 Unknown_syntax/7090
                                             (field_imm 1 expr/7103)
                                             "non-optional labelled argument expected")))))))))))))))
              with exn/21740
               (catch
                 (let (tag/21741 =a (field_imm 0 exn/21740))
                   (if (== tag/21741 Unknown_syntax/7090)
                     (let
                       (msg/7159 =a (field_imm 2 exn/21740)
                        loc/7158 =a (field_imm 1 exn/21740))
                       (before Ppxlib__Deriving.parse_arguments src/deriving.ml(572):18888-18913
                         (makeblock 1 loc/7158 msg/7159)))
                     (exit 21)))
                with (21) (reraise exn/21740))))))
     mk_deriving_attr/7160 =
       (function context/7162 prefix/7163 suffix/7164
         (funct-body Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(574)<ghost>:18936-19586
           (before Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(575):18964-19586
             (after Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(575):18964-19586
               (apply (field_imm 1 (global Ppxlib__Attribute!))
                 (after Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(576):18986-19016
                   (apply (field_imm 30 (global Stdlib!)) prefix/7163
                     (after Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(576):18996-19015
                       (apply (field_imm 30 (global Stdlib!)) "deriving"
                         suffix/7164))))
                 context/7162
                 (let
                   (generator_name/7277 =
                      (function param/7282
                        (funct-body Ppxlib__Deriving.mk_deriving_attr.generator_name src/deriving.ml(579)<ghost>:19072-19170
                          (before Ppxlib__Deriving.mk_deriving_attr.generator_name src/deriving.ml(580):19085-19170
                            (after Ppxlib__Deriving.mk_deriving_attr.generator_name src/deriving.ml(580):19085-19170
                              (apply
                                (field_imm 11 (global Ppxlib__Ast_pattern!))
                                (after Ppxlib__Deriving.mk_deriving_attr.generator_name src/deriving.ml(580):19090-19105
                                  (apply
                                    (field_imm 123
                                      (global Ppxlib__Ast_pattern!))
                                    (field_imm 3
                                      (global Ppxlib__Ast_pattern!))))
                                (function loc/7279 f/7280 id/7281
                                  (funct-body Ppxlib__Deriving.mk_deriving_attr.generator_name.(fun) src/deriving.ml(580):19109-19170
                                    (before Ppxlib__Deriving.mk_deriving_attr.generator_name.(fun) src/deriving.ml(581):19138-19169
                                      (after Ppxlib__Deriving.mk_deriving_attr.generator_name.(fun) src/deriving.ml(581):19138-19169
                                        (apply f/7280
                                          (after Ppxlib__Deriving.mk_deriving_attr.generator_name.(fun) src/deriving.ml(581):19140-19169
                                            (apply generator_name_of_id/6983
                                              loc/7279 id/7281)))))))))))))
                   (before Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(583):19186-19568
                     (let
                       (generator/7283 =
                          (function param/7287
                            (funct-body Ppxlib__Deriving.mk_deriving_attr.generator src/deriving.ml(583)<ghost>:19200-19385
                              (before Ppxlib__Deriving.mk_deriving_attr.generator src/deriving.ml(584):19213-19385
                                (after Ppxlib__Deriving.mk_deriving_attr.generator src/deriving.ml(584):19213-19385
                                  (apply
                                    (field_imm 9
                                      (global Ppxlib__Ast_pattern!))
                                    (after Ppxlib__Deriving.mk_deriving_attr.generator src/deriving.ml(584):19213-19267
                                      (apply
                                        (field_imm 10
                                          (global Ppxlib__Ast_pattern!))
                                        (after Ppxlib__Deriving.mk_deriving_attr.generator src/deriving.ml(584):19217-19236
                                          (apply generator_name/7277 0))
                                        (function f/7285 x/7286
                                          (funct-body Ppxlib__Deriving.mk_deriving_attr.generator.(fun) src/deriving.ml(584):19240-19267
                                            (before Ppxlib__Deriving.mk_deriving_attr.generator.(fun) src/deriving.ml(584):19252-19266
                                              (after Ppxlib__Deriving.mk_deriving_attr.generator.(fun) src/deriving.ml(584):19252-19266
                                                (apply f/7285
                                                  (makeblock 0 x/7286 [0: 0]))))))))
                                    (after Ppxlib__Deriving.mk_deriving_attr.generator src/deriving.ml(585):19280-19385
                                      (apply
                                        (field_imm 43
                                          (global Ppxlib__Ast_pattern!))
                                        (after Ppxlib__Deriving.mk_deriving_attr.generator src/deriving.ml(586):19300-19385
                                          (apply
                                            (field_imm 128
                                              (global Ppxlib__Ast_pattern!))
                                            (after Ppxlib__Deriving.mk_deriving_attr.generator src/deriving.ml(586):19312-19331
                                              (apply generator_name/7277 0))
                                            (after Ppxlib__Deriving.mk_deriving_attr.generator src/deriving.ml(587):19349-19384
                                              (apply
                                                (field_imm 15
                                                  (global Ppxlib__Ast_pattern!))
                                                (after Ppxlib__Deriving.mk_deriving_attr.generator src/deriving.ml(587):19355-19364
                                                  (apply
                                                    (field_imm 24
                                                      (global Ppxlib__Ast_pattern!))
                                                    (field_imm 3
                                                      (global Ppxlib__Ast_pattern!))))
                                                parse_arguments/7091))))))))))))
                       (before Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(589):19401-19568
                         (let
                           (generators/7288 =
                              (after Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(590):19426-19513
                                (apply
                                  (field_imm 9 (global Ppxlib__Ast_pattern!))
                                  (after Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(590):19426-19458
                                    (apply
                                      (field_imm 131
                                        (global Ppxlib__Ast_pattern!))
                                      (after Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(590):19437-19458
                                        (apply
                                          (field_imm 24
                                            (global Ppxlib__Ast_pattern!))
                                          (after Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(590):19443-19457
                                            (apply generator/7283 0))))))
                                  (after Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(591):19471-19513
                                    (apply
                                      (field_imm 10
                                        (global Ppxlib__Ast_pattern!))
                                      (after Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(591):19475-19489
                                        (apply generator/7283 0))
                                      (function f/7289 x/7290
                                        (funct-body Ppxlib__Deriving.mk_deriving_attr.(fun) src/deriving.ml(591):19493-19513
                                          (before Ppxlib__Deriving.mk_deriving_attr.(fun) src/deriving.ml(591):19505-19512
                                            (after Ppxlib__Deriving.mk_deriving_attr.(fun) src/deriving.ml(591):19505-19512
                                              (apply f/7289
                                                (makeblock 0 x/7290 0)))))))))))
                           (before Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(593):19529-19568
                             (after Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(593):19529-19568
                               (apply
                                 (field_imm 233
                                   (global Ppxlib__Ast_pattern!))
                                 (after Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(593):19534-19568
                                   (apply
                                     (field_imm 23
                                       (global Ppxlib__Ast_pattern!))
                                     (after Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(593):19535-19559
                                       (apply
                                         (field_imm 264
                                           (global Ppxlib__Ast_pattern!))
                                         generators/7288
                                         (field_imm 22
                                           (global Ppxlib__Ast_pattern!))))
                                     (field_imm 22
                                       (global Ppxlib__Ast_pattern!))))))))))))
                 (function x/7291
                   (funct-body Ppxlib__Deriving.mk_deriving_attr.(fun) src/deriving.ml(594):19574-19586
                     (before Ppxlib__Deriving.mk_deriving_attr.(fun) src/deriving.ml(594):19584-19585
                       x/7291))))))))
     disable_warnings_attribute/7292 =
       (function warnings/7294
         (funct-body Ppxlib__Deriving.disable_warnings_attribute src/deriving.ml(600)<ghost>:19836-20173
           (before Ppxlib__Deriving.disable_warnings_attribute src/deriving.ml(601):19849-20173
             (let (loc/7295 = (field_imm 2 (global Ppxlib__Location!)))
               (before Ppxlib__Deriving.disable_warnings_attribute src/deriving.ml(602):19878-20173
                 (let
                   (string/7296 =
                      (after Ppxlib__Deriving.disable_warnings_attribute src/deriving.ml(603):19895-20023
                        (revapply
                          (after Ppxlib__Deriving.disable_warnings_attribute src/deriving.ml(603):19895-19994
                            (revapply
                              (after Ppxlib__Deriving.disable_warnings_attribute src/deriving.ml(603):19895-19930
                                (apply
                                  (field_imm 37
                                    (field_imm 91 (global Ppxlib__Import!)))
                                  (field_imm 2
                                    (field_imm 89 (global Ppxlib__Import!)))
                                  warnings/7294))
                              (after Ppxlib__Deriving.disable_warnings_attribute src/deriving.ml(604):19938-19994
                                (let
                                  (func/21750 =
                                     (field_imm 48
                                       (field_imm 91
                                         (global Ppxlib__Import!)))
                                   arg/21751 =
                                     (function warning/7309[int]
                                       (funct-body Ppxlib__Deriving.disable_warnings_attribute.(fun) src/deriving.ml(604):19950-19994
                                         (before Ppxlib__Deriving.disable_warnings_attribute.(fun) src/deriving.ml(604):19966-19993
                                           (after Ppxlib__Deriving.disable_warnings_attribute.(fun) src/deriving.ml(604):19966-19993
                                             (apply
                                               (field_imm 30
                                                 (global Stdlib!))
                                               "-"
                                               (after Ppxlib__Deriving.disable_warnings_attribute.(fun) src/deriving.ml(604):19972-19993
                                                 (apply
                                                   (field_imm 1
                                                     (field_imm 89
                                                       (global Ppxlib__Import!)))
                                                   warning/7309))))))))
                                  (function param/21752 stub
                                    (apply func/21750 param/21752 arg/21751))))))
                          (after Ppxlib__Deriving.disable_warnings_attribute src/deriving.ml(605):20002-20023
                            (apply
                              (field_imm 2
                                (field_imm 96 (global Ppxlib__Import!)))
                              "")))))
                   (before Ppxlib__Deriving.disable_warnings_attribute src/deriving.ml(607):20031-20173
                     (makeblock 0 (makeblock 0 "ocaml.warning" loc/7295)
                       (makeblock 0
                         (makeblock 0
                           (after Ppxlib__Deriving.disable_warnings_attribute src/deriving.ml(609):20107-20146
                             (apply
                               (field_imm 148
                                 (field_imm 0 (global Ppxlib__Ast_builder!)))
                               loc/7295
                               (after Ppxlib__Deriving.disable_warnings_attribute src/deriving.ml(609):20122-20143
                                 (apply
                                   (field_imm 174
                                     (field_imm 0
                                       (global Ppxlib__Ast_builder!)))
                                   loc/7295 string/7296))
                               0))
                           0))
                       loc/7295))))))))
     inline_doc_attr/8099 =
       (let (loc/8100 = (field_imm 2 (global Ppxlib__Location!)))
         (before Ppxlib__Deriving.inline_doc_attr src/deriving.ml(615):20228-20369
           (makeblock 0 (makeblock 0 "ocaml.doc" loc/8100)
             (makeblock 0
               (makeblock 0
                 (after Ppxlib__Deriving.inline_doc_attr src/deriving.ml(617):20300-20342
                   (apply
                     (field_imm 148
                       (field_imm 0 (global Ppxlib__Ast_builder!)))
                     loc/8100
                     (after Ppxlib__Deriving.inline_doc_attr src/deriving.ml(617):20315-20339
                       (apply
                         (field_imm 174
                           (field_imm 0 (global Ppxlib__Ast_builder!)))
                         loc/8100 "@inline"))
                     0))
                 0))
             loc/8100)))
     wrap_str/8101 =
       (function loc/8103 hide/8104 st/8105
         (funct-body Ppxlib__Deriving.wrap_str src/deriving.ml(622)<ghost>:20427-20702
           (before Ppxlib__Deriving.wrap_str src/deriving.ml(623):20445-20702
             (let
               (include_infos/8106 =
                  (after Ppxlib__Deriving.wrap_str src/deriving.ml(623):20465-20508
                    (apply
                      (field_imm 87
                        (field_imm 0 (global Ppxlib__Ast_builder!)))
                      loc/8103
                      (after Ppxlib__Deriving.wrap_str src/deriving.ml(623):20484-20508
                        (apply
                          (field_imm 94
                            (field_imm 0 (global Ppxlib__Ast_builder!)))
                          loc/8103 st/8105)))))
               (before Ppxlib__Deriving.wrap_str src/deriving.ml(624):20514-20702
                 (let
                   (pincl_attributes/8107 =
                      (if hide/8104
                        (before Ppxlib__Deriving.wrap_str src/deriving.ml(625):20554-20604
                          (makeblock 0 inline_doc_attr/8099
                            (makeblock 0
                              (field_imm 0 (global Ppxlib__Merlin_helpers!))
                              0)))
                        (before Ppxlib__Deriving.wrap_str src/deriving.ml(626):20614-20633
                          (makeblock 0 inline_doc_attr/8099 0))))
                   (before Ppxlib__Deriving.wrap_str src/deriving.ml(628):20641-20702
                     (makeblock 0
                       (after Ppxlib__Deriving.wrap_str src/deriving.ml(628):20643-20700
                         (apply
                           (field_imm 160
                             (field_imm 0 (global Ppxlib__Ast_builder!)))
                           loc/8103
                           (let (init/21755 = include_infos/8106)
                             (makeblock 0 (field_imm 0 init/21755)
                               (field_imm 1 init/21755)
                               pincl_attributes/8107))))
                       0))))))))
     wrap_str/8114 =
       (function loc/8115 hide/8116 unused_code_warnings/8117 st/8118
         (funct-body Ppxlib__Deriving.wrap_str src/deriving.ml(631)<ghost>:20786-21604
           (before Ppxlib__Deriving.wrap_str src/deriving.ml(632):20826-21604
             (let
               (loc/8119 =
                  (let (init/21770 = loc/8115)
                    (makeblock 0 (field_imm 0 init/21770)
                      (field_imm 1 init/21770) 1)))
               (before Ppxlib__Deriving.wrap_str src/deriving.ml(633):20871-21604
                 (let
                   (unused_code_warnings/8120 =
                      (&& unused_code_warnings/8117
                        (after Ppxlib__Deriving.wrap_str src/deriving.ml(634):20926-20955
                          (apply allow_unused_code_warnings/2188 0))))
                   (before Ppxlib__Deriving.wrap_str src/deriving.ml(636):20963-21604
                     (catch
                       (if
                         (||
                           (after Ppxlib__Deriving.wrap_str src/deriving.ml(637):20989-21005
                             (apply keep_w32_impl/2169 0))
                           unused_code_warnings/8120)
                         (before Ppxlib__Deriving.wrap_str src/deriving.ml(637):21035-21043
                           (let (st/21769 =a st/8118 warnings/21768 = 0)
                             (exit 36 warnings/21768 st/21769)))
                         (before Ppxlib__Deriving.wrap_str src/deriving.ml(638):21053-21195
                           (if
                             (not
                               (field_int 0
                                 do_insert_unused_warning_attribute/2083))
                             (before Ppxlib__Deriving.wrap_str src/deriving.ml(639):21107-21173
                               (let
                                 (st/21767 =
                                    (after Ppxlib__Deriving.wrap_str src/deriving.ml(639):21112-21172
                                      (send
                                        (field_imm 0
                                          (global Ppxlib__Ignore_unused_warning!))
                                        -951102413 st/8118))
                                  warnings/21766 = 0)
                                 (exit 36 warnings/21766 st/21767)))
                             (before Ppxlib__Deriving.wrap_str src/deriving.ml(640):21183-21195
                               (let
                                 (st/21765 =a st/8118
                                  warnings/21764 = [0: 32 0])
                                 (exit 36 warnings/21764 st/21765))))))
                      with (36 warnings/8121 st/8122)
                       (before Ppxlib__Deriving.wrap_str src/deriving.ml(642):21203-21604
                         (catch
                           (if
                             (||
                               (after Ppxlib__Deriving.wrap_str src/deriving.ml(644):21235-21251
                                 (apply keep_w60_impl/2177 0))
                               (|| unused_code_warnings/8120
                                 (not
                                   (after Ppxlib__Deriving.wrap_str src/deriving.ml(645):21289-21350
                                     (send
                                       (field_imm 1
                                         (global Ppxlib__Ignore_unused_warning!))
                                       -951102413 st/8122 0)))))
                             (before Ppxlib__Deriving.wrap_str src/deriving.ml(646):21360-21374
                               (let
                                 (st/21763 =a st/8122
                                  warnings/21762 =a warnings/8121)
                                 (exit 31 warnings/21762 st/21763)))
                             (before Ppxlib__Deriving.wrap_str src/deriving.ml(647):21384-21404
                               (let
                                 (st/21761 =a st/8122
                                  warnings/21760 =
                                    (makeblock 0 (int,*) 60 warnings/8121))
                                 (exit 31 warnings/21760 st/21761))))
                          with (31 warnings/8448 st/8449)
                           (before Ppxlib__Deriving.wrap_str src/deriving.ml(649):21412-21604
                             (catch
                               (if
                                 (after Ppxlib__Deriving.wrap_str src/deriving.ml(650):21434-21456
                                   (apply
                                     (field_imm 59
                                       (field_imm 91
                                         (global Ppxlib__Import!)))
                                     warnings/8448))
                                 (before Ppxlib__Deriving.wrap_str src/deriving.ml(650):21462-21472
                                   (let
                                     (st/21759 =a st/8449
                                      wrap/21758 =a hide/8116)
                                     (exit 26 wrap/21758 st/21759)))
                                 (before Ppxlib__Deriving.wrap_str src/deriving.ml(651):21482-21553
                                   (let
                                     (st/21757 =
                                        (makeblock 0
                                          (after Ppxlib__Deriving.wrap_str src/deriving.ml(651):21489-21546
                                            (apply
                                              (field_imm 161
                                                (field_imm 0
                                                  (global Ppxlib__Ast_builder!)))
                                              loc/8119
                                              (after Ppxlib__Deriving.wrap_str src/deriving.ml(651):21509-21546
                                                (apply
                                                  disable_warnings_attribute/7292
                                                  warnings/8448))))
                                          st/8449)
                                      wrap/21756 = 1)
                                     (exit 26 wrap/21756 st/21757))))
                              with (26 wrap/8450 st/8451)
                               (before Ppxlib__Deriving.wrap_str src/deriving.ml(653):21561-21604
                                 (if wrap/8450
                                   (before Ppxlib__Deriving.wrap_str src/deriving.ml(653):21574-21596
                                     (after Ppxlib__Deriving.wrap_str src/deriving.ml(653):21574-21596
                                       (apply wrap_str/8101 loc/8119
                                         hide/8116 st/8451)))
                                   (before Ppxlib__Deriving.wrap_str src/deriving.ml(653):21602-21604
                                     st/8451)))))))))))))))
     wrap_str/8452 =
       (function loc/8453 hide/8454 list/8455
         (funct-body Ppxlib__Deriving.wrap_str src/deriving.ml(656)<ghost>:21701-21881
           (before Ppxlib__Deriving.wrap_str src/deriving.ml(657):21721-21881
             (after Ppxlib__Deriving.wrap_str src/deriving.ml(657):21721-21881
               (apply (field_imm 63 (field_imm 91 (global Ppxlib__Import!)))
                 list/8455
                 (function param/8458
                   (funct-body Ppxlib__Deriving.wrap_str.(fun) src/deriving.ml(657):21745-21881
                     (let
                       (unused_code_warnings/8457 =a (field_int 1 param/8458)
                        items/8456 =a (field_imm 0 param/8458))
                       (before Ppxlib__Deriving.wrap_str.(fun) src/deriving.ml(658):21791-21880
                         (if
                           (after Ppxlib__Deriving.wrap_str.(fun) src/deriving.ml(658):21794-21813
                             (apply
                               (field_imm 59
                                 (field_imm 91 (global Ppxlib__Import!)))
                               items/8456))
                           (before Ppxlib__Deriving.wrap_str.(fun) src/deriving.ml(658):21819-21821
                             0)
                           (before Ppxlib__Deriving.wrap_str.(fun) src/deriving.ml(659):21833-21880
                             (after Ppxlib__Deriving.wrap_str.(fun) src/deriving.ml(659):21833-21880
                               (apply wrap_str/8114 loc/8453 hide/8454
                                 unused_code_warnings/8457 items/8456)))))))))))))
     wrap_sig/8459 =
       (function loc/8461 hide/8462 st/8463
         (funct-body Ppxlib__Deriving.wrap_sig src/deriving.ml(662)<ghost>:21939-22214
           (before Ppxlib__Deriving.wrap_sig src/deriving.ml(663):21957-22214
             (let
               (include_infos/8464 =
                  (after Ppxlib__Deriving.wrap_sig src/deriving.ml(663):21977-22020
                    (apply
                      (field_imm 87
                        (field_imm 0 (global Ppxlib__Ast_builder!)))
                      loc/8461
                      (after Ppxlib__Deriving.wrap_sig src/deriving.ml(663):21996-22020
                        (apply
                          (field_imm 102
                            (field_imm 0 (global Ppxlib__Ast_builder!)))
                          loc/8461 st/8463)))))
               (before Ppxlib__Deriving.wrap_sig src/deriving.ml(664):22026-22214
                 (let
                   (pincl_attributes/8465 =
                      (if hide/8462
                        (before Ppxlib__Deriving.wrap_sig src/deriving.ml(665):22066-22116
                          (makeblock 0 inline_doc_attr/8099
                            (makeblock 0
                              (field_imm 0 (global Ppxlib__Merlin_helpers!))
                              0)))
                        (before Ppxlib__Deriving.wrap_sig src/deriving.ml(666):22126-22145
                          (makeblock 0 inline_doc_attr/8099 0))))
                   (before Ppxlib__Deriving.wrap_sig src/deriving.ml(668):22153-22214
                     (makeblock 0
                       (after Ppxlib__Deriving.wrap_sig src/deriving.ml(668):22155-22212
                         (apply
                           (field_imm 143
                             (field_imm 0 (global Ppxlib__Ast_builder!)))
                           loc/8461
                           (let (init/21771 = include_infos/8464)
                             (makeblock 0 (field_imm 0 init/21771)
                               (field_imm 1 init/21771)
                               pincl_attributes/8465))))
                       0))))))))
     wrap_sig/8466 =
       (function loc/8467 hide/8468 unused_code_warnings/8469 sg/8470
         (funct-body Ppxlib__Deriving.wrap_sig src/deriving.ml(671)<ghost>:22298-22958
           (before Ppxlib__Deriving.wrap_sig src/deriving.ml(672):22338-22958
             (let
               (loc/8471 =
                  (let (init/21776 = loc/8467)
                    (makeblock 0 (field_imm 0 init/21776)
                      (field_imm 1 init/21776) 1)))
               (before Ppxlib__Deriving.wrap_sig src/deriving.ml(673):22383-22958
                 (let
                   (unused_code_warnings/8472 =
                      (&& unused_code_warnings/8469
                        (after Ppxlib__Deriving.wrap_sig src/deriving.ml(674):22438-22467
                          (apply allow_unused_code_warnings/2188 0))))
                   (before Ppxlib__Deriving.wrap_sig src/deriving.ml(676):22475-22958
                     (let
                       (warnings/8473 =
                          (if
                            (||
                              (after Ppxlib__Deriving.wrap_sig src/deriving.ml(677):22497-22513
                                (apply keep_w32_intf/2171 0))
                              unused_code_warnings/8472)
                            (before Ppxlib__Deriving.wrap_sig src/deriving.ml(677):22543-22545
                              0)
                            (before Ppxlib__Deriving.wrap_sig src/deriving.ml(677):22551-22557
                              [0: 32 0])))
                       (before Ppxlib__Deriving.wrap_sig src/deriving.ml(679):22565-22958
                         (let
                           (warnings/8474 =
                              (if
                                (||
                                  (after Ppxlib__Deriving.wrap_sig src/deriving.ml(681):22593-22609
                                    (apply keep_w60_intf/2179 0))
                                  (||
                                    (not
                                      (after Ppxlib__Deriving.wrap_sig src/deriving.ml(682):22624-22685
                                        (send
                                          (field_imm 1
                                            (global Ppxlib__Ignore_unused_warning!))
                                          359375608 sg/8470 0)))
                                    unused_code_warnings/8472))
                                (before Ppxlib__Deriving.wrap_sig src/deriving.ml(684):22726-22734
                                  warnings/8473)
                                (before Ppxlib__Deriving.wrap_sig src/deriving.ml(685):22744-22758
                                  (makeblock 0 (int,*) 60 warnings/8473))))
                           (before Ppxlib__Deriving.wrap_sig src/deriving.ml(687):22766-22958
                             (catch
                               (if
                                 (after Ppxlib__Deriving.wrap_sig src/deriving.ml(688):22788-22810
                                   (apply
                                     (field_imm 59
                                       (field_imm 91
                                         (global Ppxlib__Import!)))
                                     warnings/8474))
                                 (before Ppxlib__Deriving.wrap_sig src/deriving.ml(688):22816-22826
                                   (let
                                     (sg/21775 =a sg/8470
                                      wrap/21774 =a hide/8468)
                                     (exit 43 wrap/21774 sg/21775)))
                                 (before Ppxlib__Deriving.wrap_sig src/deriving.ml(689):22836-22907
                                   (let
                                     (sg/21773 =
                                        (makeblock 0
                                          (after Ppxlib__Deriving.wrap_sig src/deriving.ml(689):22843-22900
                                            (apply
                                              (field_imm 146
                                                (field_imm 0
                                                  (global Ppxlib__Ast_builder!)))
                                              loc/8471
                                              (after Ppxlib__Deriving.wrap_sig src/deriving.ml(689):22863-22900
                                                (apply
                                                  disable_warnings_attribute/7292
                                                  warnings/8474))))
                                          sg/8470)
                                      wrap/21772 = 1)
                                     (exit 43 wrap/21772 sg/21773))))
                              with (43 wrap/8475 sg/8476)
                               (before Ppxlib__Deriving.wrap_sig src/deriving.ml(691):22915-22958
                                 (if wrap/8475
                                   (before Ppxlib__Deriving.wrap_sig src/deriving.ml(691):22928-22950
                                     (after Ppxlib__Deriving.wrap_sig src/deriving.ml(691):22928-22950
                                       (apply wrap_sig/8459 loc/8471
                                         hide/8468 sg/8476)))
                                   (before Ppxlib__Deriving.wrap_sig src/deriving.ml(691):22956-22958
                                     sg/8476)))))))))))))))
     wrap_sig/8477 =
       (function loc/8478 hide/8479 list/8480
         (funct-body Ppxlib__Deriving.wrap_sig src/deriving.ml(694)<ghost>:23055-23235
           (before Ppxlib__Deriving.wrap_sig src/deriving.ml(695):23075-23235
             (after Ppxlib__Deriving.wrap_sig src/deriving.ml(695):23075-23235
               (apply (field_imm 63 (field_imm 91 (global Ppxlib__Import!)))
                 list/8480
                 (function param/8483
                   (funct-body Ppxlib__Deriving.wrap_sig.(fun) src/deriving.ml(695):23099-23235
                     (let
                       (unused_code_warnings/8482 =a (field_int 1 param/8483)
                        items/8481 =a (field_imm 0 param/8483))
                       (before Ppxlib__Deriving.wrap_sig.(fun) src/deriving.ml(696):23145-23234
                         (if
                           (after Ppxlib__Deriving.wrap_sig.(fun) src/deriving.ml(696):23148-23167
                             (apply
                               (field_imm 59
                                 (field_imm 91 (global Ppxlib__Import!)))
                               items/8481))
                           (before Ppxlib__Deriving.wrap_sig.(fun) src/deriving.ml(696):23173-23175
                             0)
                           (before Ppxlib__Deriving.wrap_sig.(fun) src/deriving.ml(697):23187-23234
                             (after Ppxlib__Deriving.wrap_sig.(fun) src/deriving.ml(697):23187-23234
                               (apply wrap_sig/8466 loc/8478 hide/8479
                                 unused_code_warnings/8482 items/8481)))))))))))))
     types_used_by_deriving/8484 =
       (function tds/8486
         (funct-body Ppxlib__Deriving.types_used_by_deriving src/deriving.ml(703)<ghost>:23481-23972
           (before Ppxlib__Deriving.types_used_by_deriving src/deriving.ml(704):23537-23972
             (if
               (after Ppxlib__Deriving.types_used_by_deriving src/deriving.ml(704):23540-23556
                 (apply keep_w32_impl/2169 0))
               (before Ppxlib__Deriving.types_used_by_deriving src/deriving.ml(704):23562-23564
                 0)
               (before Ppxlib__Deriving.types_used_by_deriving src/deriving.ml(706):23576-23972
                 (after Ppxlib__Deriving.types_used_by_deriving src/deriving.ml(706):23576-23972
                   (apply
                     (field_imm 48 (field_imm 91 (global Ppxlib__Import!)))
                     tds/8486
                     (function td/8487
                       (funct-body Ppxlib__Deriving.types_used_by_deriving.(fun) src/deriving.ml(706):23592-23972
                         (before Ppxlib__Deriving.types_used_by_deriving.(fun) src/deriving.ml(707):23611-23971
                           (let
                             (typ/8488 =
                                (after Ppxlib__Deriving.types_used_by_deriving.(fun) src/deriving.ml(707):23621-23660
                                  (apply
                                    (field_imm 1 (global Ppxlib__Common!))
                                    td/8487)))
                             (before Ppxlib__Deriving.types_used_by_deriving.(fun) src/deriving.ml(708):23672-23971
                               (let (loc/8526 = (field_imm 7 td/8487))
                                 (before Ppxlib__Deriving.types_used_by_deriving.(fun) src/deriving.ml(709):23706-23971
                                   (after Ppxlib__Deriving.types_used_by_deriving.(fun) src/deriving.ml(709):23706-23971
                                     (apply
                                       (field_imm 149
                                         (field_imm 0
                                           (global Ppxlib__Ast_builder!)))
                                       loc/8526 0
                                       (makeblock 0
                                         (after Ppxlib__Deriving.types_used_by_deriving.(fun) src/deriving.ml(711):23759-23958
                                           (apply
                                             (field_imm 167
                                               (field_imm 0
                                                 (global Ppxlib__Ast_builder!)))
                                             loc/8526
                                             (after Ppxlib__Deriving.types_used_by_deriving.(fun) src/deriving.ml(711):23783-23798
                                               (apply
                                                 (field_imm 112
                                                   (field_imm 0
                                                     (global Ppxlib__Ast_builder!)))
                                                 loc/8526))
                                             (after Ppxlib__Deriving.types_used_by_deriving.(fun) src/deriving.ml(713):23836-23958
                                               (apply
                                                 (field_imm 53
                                                   (field_imm 0
                                                     (global Ppxlib__Ast_builder!)))
                                                 loc/8526 0 0
                                                 (after Ppxlib__Deriving.types_used_by_deriving.(fun) src/deriving.ml(714):23883-23925
                                                   (apply
                                                     (field_imm 122
                                                       (field_imm 0
                                                         (global Ppxlib__Ast_builder!)))
                                                     loc/8526
                                                     (after Ppxlib__Deriving.types_used_by_deriving.(fun) src/deriving.ml(714):23905-23920
                                                       (apply
                                                         (field_imm 112
                                                           (field_imm 0
                                                             (global Ppxlib__Ast_builder!)))
                                                         loc/8526))
                                                     typ/8488))
                                                 (after Ppxlib__Deriving.types_used_by_deriving.(fun) src/deriving.ml(715):23945-23957
                                                   (apply
                                                     (field_imm 188
                                                       (field_imm 0
                                                         (global Ppxlib__Ast_builder!)))
                                                     loc/8526))))))
                                         0)))))))))))))))))
     merge_generators/8527 =
       (function field/8529 l/8530
         (funct-body Ppxlib__Deriving.merge_generators src/deriving.ml(718)<ghost>:23995-24084
           (before Ppxlib__Deriving.merge_generators src/deriving.ml(719):24007-24084
             (after Ppxlib__Deriving.merge_generators src/deriving.ml(719):24007-24084
               (revapply
                 (after Ppxlib__Deriving.merge_generators src/deriving.ml(719):24007-24055
                   (revapply
                     (after Ppxlib__Deriving.merge_generators src/deriving.ml(719):24007-24040
                       (apply
                         (field_imm 62
                           (field_imm 91 (global Ppxlib__Import!)))
                         l/8530
                         (function x/8531
                           (funct-body Ppxlib__Deriving.merge_generators.(fun) src/deriving.ml(719):24028-24040
                             (before Ppxlib__Deriving.merge_generators.(fun) src/deriving.ml(719):24038-24039
                               x/8531)))))
                     (field_imm 52 (field_imm 91 (global Ppxlib__Import!)))))
                 (after Ppxlib__Deriving.merge_generators src/deriving.ml(719):24059-24084
                   (apply (field_imm 11 Deriver/6977) field/8529)))))))
     merge_derived/8542 =
       (function lists/8544
         (funct-body Ppxlib__Deriving.merge_derived src/deriving.ml(723)<ghost>:24279-24578
           (before Ppxlib__Deriving.merge_derived src/deriving.ml(724):24289-24578
             (after Ppxlib__Deriving.merge_derived src/deriving.ml(724):24289-24578
               (apply (field_imm 50 (field_imm 91 (global Ppxlib__Import!)))
                 lists/8544 0
                 (function derived/8545 acc/8546
                   (funct-body Ppxlib__Deriving.merge_derived.(fun) src/deriving.ml(724):24323-24578
                     (before Ppxlib__Deriving.merge_derived.(fun) src/deriving.ml(725):24349-24577
                       (catch
                         (if acc/8546
                           (let
                             (others/8548 =a (field_imm 1 acc/8546)
                              other/8547 =a (field_imm 0 acc/8546))
                             (before Ppxlib__Deriving.merge_derived.(fun) src/deriving.ml(727):24401-24467
                               (if
                                 (after Ppxlib__Deriving.merge_derived.(fun) src/deriving.ml(727):24401-24467
                                   (apply
                                     (field_imm 2
                                       (field_imm 81
                                         (global Ppxlib__Import!)))
                                     (field_int 1 derived/8545)
                                     (field_int 1 other/8547)))
                                 (before Ppxlib__Deriving.merge_derived.(fun) src/deriving.ml(729):24489-24549
                                   (makeblock 0
                                     (let (init/21777 = other/8547)
                                       (makeblock 0
                                         (after Ppxlib__Deriving.merge_derived.(fun) src/deriving.ml(729):24510-24537
                                           (apply
                                             (field_imm 97
                                               (global Ppxlib__Import!))
                                             (field_imm 0 derived/8545)
                                             (field_imm 0 other/8547)))
                                         (field_int 1 init/21777)))
                                     others/8548))
                                 (exit 48))))
                           (exit 48))
                        with (48)
                         (before Ppxlib__Deriving.merge_derived.(fun) src/deriving.ml(730):24563-24577
                           (makeblock 0 derived/8545 acc/8546)))))))))))
     expand_str_type_decls/8560 =
       (function ctxt/8562 rec_flag/8563 tds/8564 values/8565
         (funct-body Ppxlib__Deriving.expand_str_type_decls src/deriving.ml(732)<ghost>:24606-25332
           (before Ppxlib__Deriving.expand_str_type_decls src/deriving.ml(733):24636-25332
             (let
               (*match*/21783 =
                  (after Ppxlib__Deriving.expand_str_type_decls src/deriving.ml(733):24660-24711
                    (apply merge_generators/8527
                      (field_imm 0 (field_imm 2 Deriver/6977)) values/8565))
                l_err/8567 =a (field_imm 1 *match*/21783)
                generators/8566 =a (field_imm 0 *match*/21783))
               (before Ppxlib__Deriving.expand_str_type_decls src/deriving.ml(734):24717-25332
                 (let
                   (l_err/8568 =
                      (after Ppxlib__Deriving.expand_str_type_decls src/deriving.ml(735):24733-24844
                        (apply
                          (field_imm 48
                            (field_imm 91 (global Ppxlib__Import!)))
                          l_err/8567
                          (function err/8569
                            (funct-body Ppxlib__Deriving.expand_str_type_decls.(fun) src/deriving.ml(736):24751-24832
                              (before Ppxlib__Deriving.expand_str_type_decls.(fun) src/deriving.ml(737):24771-24831
                                (after Ppxlib__Deriving.expand_str_type_decls.(fun) src/deriving.ml(737):24771-24831
                                  (apply
                                    (field_imm 162
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!)))
                                    (field_imm 2 (global Ppxlib__Location!))
                                    err/8569 0))))))))
                   (before Ppxlib__Deriving.expand_str_type_decls src/deriving.ml(742):24965-25332
                     (let
                       (generated/8570 =
                          (after Ppxlib__Deriving.expand_str_type_decls src/deriving.ml(743):24985-25186
                            (revapply
                              (makeblock 0
                                (makeblock 0
                                  (after Ppxlib__Deriving.expand_str_type_decls src/deriving.ml(743):24995-25029
                                    (apply
                                      (field_imm 97 (global Ppxlib__Import!))
                                      (after Ppxlib__Deriving.expand_str_type_decls src/deriving.ml(743):24995-25021
                                        (apply types_used_by_deriving/8484
                                          tds/8564))
                                      l_err/8568))
                                  0)
                                (after Ppxlib__Deriving.expand_str_type_decls src/deriving.ml(744):25069-25165
                                  (apply (field_imm 7 Generator/6276)
                                    ctxt/8562
                                    (makeblock 0 rec_flag/8563 tds/8564)
                                    generators/8566
                                    (field_imm 162
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!))))))
                              merge_derived/8542)))
                       (before Ppxlib__Deriving.expand_str_type_decls src/deriving.ml(748):25194-25332
                         (after Ppxlib__Deriving.expand_str_type_decls src/deriving.ml(748):25194-25332
                           (apply wrap_str/8452
                             (after Ppxlib__Deriving.expand_str_type_decls src/deriving.ml(749):25212-25261
                               (apply
                                 (field_imm 0
                                   (field_imm 2
                                     (global Ppxlib__Expansion_context!)))
                                 ctxt/8562))
                             (after Ppxlib__Deriving.expand_str_type_decls src/deriving.ml(750):25272-25318
                               (dirapply
                                 (function prim/21778 stub (not prim/21778))
                                 (after Ppxlib__Deriving.expand_str_type_decls src/deriving.ml(750):25280-25317
                                   (apply
                                     (field_imm 5
                                       (field_imm 2
                                         (global Ppxlib__Expansion_context!)))
                                     ctxt/8562))))
                             generated/8570)))))))))))
     expand_sig_type_decls/8571 =
       (function ctxt/8573 rec_flag/8574 tds/8575 values/8576
         (funct-body Ppxlib__Deriving.expand_sig_type_decls src/deriving.ml(753)<ghost>:25360-25944
           (before Ppxlib__Deriving.expand_sig_type_decls src/deriving.ml(754):25390-25944
             (let
               (*match*/21789 =
                  (after Ppxlib__Deriving.expand_sig_type_decls src/deriving.ml(754):25414-25465
                    (apply merge_generators/8527
                      (field_imm 4 (field_imm 2 Deriver/6977)) values/8576))
                l_err/8578 =a (field_imm 1 *match*/21789)
                generators/8577 =a (field_imm 0 *match*/21789))
               (before Ppxlib__Deriving.expand_sig_type_decls src/deriving.ml(755):25471-25944
                 (let
                   (l_err/8579 =
                      (after Ppxlib__Deriving.expand_sig_type_decls src/deriving.ml(756):25487-25598
                        (apply
                          (field_imm 48
                            (field_imm 91 (global Ppxlib__Import!)))
                          l_err/8578
                          (function err/8580
                            (funct-body Ppxlib__Deriving.expand_sig_type_decls.(fun) src/deriving.ml(757):25505-25586
                              (before Ppxlib__Deriving.expand_sig_type_decls.(fun) src/deriving.ml(758):25525-25585
                                (after Ppxlib__Deriving.expand_sig_type_decls.(fun) src/deriving.ml(758):25525-25585
                                  (apply
                                    (field_imm 147
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!)))
                                    (field_imm 2 (global Ppxlib__Location!))
                                    err/8580 0))))))))
                   (before Ppxlib__Deriving.expand_sig_type_decls src/deriving.ml(761):25606-25944
                     (let
                       (generated/8581 =
                          (after Ppxlib__Deriving.expand_sig_type_decls src/deriving.ml(762):25626-25798
                            (revapply
                              (makeblock 0 (makeblock 0 l_err/8579 0)
                                (after Ppxlib__Deriving.expand_sig_type_decls src/deriving.ml(763):25681-25777
                                  (apply (field_imm 7 Generator/6276)
                                    ctxt/8573
                                    (makeblock 0 rec_flag/8574 tds/8575)
                                    generators/8577
                                    (field_imm 147
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!))))))
                              merge_derived/8542)))
                       (before Ppxlib__Deriving.expand_sig_type_decls src/deriving.ml(767):25806-25944
                         (after Ppxlib__Deriving.expand_sig_type_decls src/deriving.ml(767):25806-25944
                           (apply wrap_sig/8477
                             (after Ppxlib__Deriving.expand_sig_type_decls src/deriving.ml(768):25824-25873
                               (apply
                                 (field_imm 0
                                   (field_imm 2
                                     (global Ppxlib__Expansion_context!)))
                                 ctxt/8573))
                             (after Ppxlib__Deriving.expand_sig_type_decls src/deriving.ml(769):25884-25930
                               (dirapply
                                 (function prim/21784 stub (not prim/21784))
                                 (after Ppxlib__Deriving.expand_sig_type_decls src/deriving.ml(769):25892-25929
                                   (apply
                                     (field_imm 5
                                       (field_imm 2
                                         (global Ppxlib__Expansion_context!)))
                                     ctxt/8573))))
                             generated/8581)))))))))))
     expand_str_module_type_decl/8582 =
       (function ctxt/8584 mtd/8585 generators/8586
         (funct-body Ppxlib__Deriving.expand_str_module_type_decl src/deriving.ml(772)<ghost>:25978-26565
           (before Ppxlib__Deriving.expand_str_module_type_decl src/deriving.ml(773):26003-26565
             (let
               (*match*/21795 =
                  (after Ppxlib__Deriving.expand_str_module_type_decl src/deriving.ml(774):26031-26096
                    (apply (field_imm 11 Deriver/6977)
                      (field_imm 3 (field_imm 2 Deriver/6977))
                      generators/8586))
                l_err/8588 =a (field_imm 1 *match*/21795)
                generators/8587 =a (field_imm 0 *match*/21795))
               (before Ppxlib__Deriving.expand_str_module_type_decl src/deriving.ml(776):26104-26565
                 (let
                   (l_err/8589 =
                      (after Ppxlib__Deriving.expand_str_module_type_decl src/deriving.ml(777):26120-26231
                        (apply
                          (field_imm 48
                            (field_imm 91 (global Ppxlib__Import!)))
                          l_err/8588
                          (function err/8590
                            (funct-body Ppxlib__Deriving.expand_str_module_type_decl.(fun) src/deriving.ml(778):26138-26219
                              (before Ppxlib__Deriving.expand_str_module_type_decl.(fun) src/deriving.ml(779):26158-26218
                                (after Ppxlib__Deriving.expand_str_module_type_decl.(fun) src/deriving.ml(779):26158-26218
                                  (apply
                                    (field_imm 162
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!)))
                                    (field_imm 2 (global Ppxlib__Location!))
                                    err/8590 0))))))))
                   (before Ppxlib__Deriving.expand_str_module_type_decl src/deriving.ml(782):26239-26565
                     (let
                       (generated/8591 =
                          (after Ppxlib__Deriving.expand_str_module_type_decl src/deriving.ml(783):26259-26419
                            (revapply
                              (makeblock 0 (makeblock 0 l_err/8589 0)
                                (after Ppxlib__Deriving.expand_str_module_type_decl src/deriving.ml(784):26314-26398
                                  (apply (field_imm 7 Generator/6276)
                                    ctxt/8584 mtd/8585 generators/8587
                                    (field_imm 162
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!))))))
                              merge_derived/8542)))
                       (before Ppxlib__Deriving.expand_str_module_type_decl src/deriving.ml(788):26427-26565
                         (after Ppxlib__Deriving.expand_str_module_type_decl src/deriving.ml(788):26427-26565
                           (apply wrap_str/8452
                             (after Ppxlib__Deriving.expand_str_module_type_decl src/deriving.ml(789):26445-26494
                               (apply
                                 (field_imm 0
                                   (field_imm 2
                                     (global Ppxlib__Expansion_context!)))
                                 ctxt/8584))
                             (after Ppxlib__Deriving.expand_str_module_type_decl src/deriving.ml(790):26505-26551
                               (dirapply
                                 (function prim/21790 stub (not prim/21790))
                                 (after Ppxlib__Deriving.expand_str_module_type_decl src/deriving.ml(790):26513-26550
                                   (apply
                                     (field_imm 5
                                       (field_imm 2
                                         (global Ppxlib__Expansion_context!)))
                                     ctxt/8584))))
                             generated/8591)))))))))))
     expand_sig_module_type_decl/8592 =
       (function ctxt/8594 mtd/8595 generators/8596
         (funct-body Ppxlib__Deriving.expand_sig_module_type_decl src/deriving.ml(793)<ghost>:26599-27186
           (before Ppxlib__Deriving.expand_sig_module_type_decl src/deriving.ml(794):26624-27186
             (let
               (*match*/21801 =
                  (after Ppxlib__Deriving.expand_sig_module_type_decl src/deriving.ml(795):26652-26717
                    (apply (field_imm 11 Deriver/6977)
                      (field_imm 7 (field_imm 2 Deriver/6977))
                      generators/8596))
                l_err/8598 =a (field_imm 1 *match*/21801)
                generators/8597 =a (field_imm 0 *match*/21801))
               (before Ppxlib__Deriving.expand_sig_module_type_decl src/deriving.ml(797):26725-27186
                 (let
                   (l_err/8599 =
                      (after Ppxlib__Deriving.expand_sig_module_type_decl src/deriving.ml(798):26741-26852
                        (apply
                          (field_imm 48
                            (field_imm 91 (global Ppxlib__Import!)))
                          l_err/8598
                          (function err/8600
                            (funct-body Ppxlib__Deriving.expand_sig_module_type_decl.(fun) src/deriving.ml(799):26759-26840
                              (before Ppxlib__Deriving.expand_sig_module_type_decl.(fun) src/deriving.ml(800):26779-26839
                                (after Ppxlib__Deriving.expand_sig_module_type_decl.(fun) src/deriving.ml(800):26779-26839
                                  (apply
                                    (field_imm 147
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!)))
                                    (field_imm 2 (global Ppxlib__Location!))
                                    err/8600 0))))))))
                   (before Ppxlib__Deriving.expand_sig_module_type_decl src/deriving.ml(803):26860-27186
                     (let
                       (generated/8601 =
                          (after Ppxlib__Deriving.expand_sig_module_type_decl src/deriving.ml(804):26880-27040
                            (revapply
                              (makeblock 0 (makeblock 0 l_err/8599 0)
                                (after Ppxlib__Deriving.expand_sig_module_type_decl src/deriving.ml(805):26935-27019
                                  (apply (field_imm 7 Generator/6276)
                                    ctxt/8594 mtd/8595 generators/8597
                                    (field_imm 147
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!))))))
                              merge_derived/8542)))
                       (before Ppxlib__Deriving.expand_sig_module_type_decl src/deriving.ml(809):27048-27186
                         (after Ppxlib__Deriving.expand_sig_module_type_decl src/deriving.ml(809):27048-27186
                           (apply wrap_sig/8477
                             (after Ppxlib__Deriving.expand_sig_module_type_decl src/deriving.ml(810):27066-27115
                               (apply
                                 (field_imm 0
                                   (field_imm 2
                                     (global Ppxlib__Expansion_context!)))
                                 ctxt/8594))
                             (after Ppxlib__Deriving.expand_sig_module_type_decl src/deriving.ml(811):27126-27172
                               (dirapply
                                 (function prim/21796 stub (not prim/21796))
                                 (after Ppxlib__Deriving.expand_sig_module_type_decl src/deriving.ml(811):27134-27171
                                   (apply
                                     (field_imm 5
                                       (field_imm 2
                                         (global Ppxlib__Expansion_context!)))
                                     ctxt/8594))))
                             generated/8601)))))))))))
     expand_str_exception/8602 =
       (function ctxt/8604 ec/8605 generators/8606
         (funct-body Ppxlib__Deriving.expand_str_exception src/deriving.ml(814)<ghost>:27213-27791
           (before Ppxlib__Deriving.expand_str_exception src/deriving.ml(815):27237-27791
             (let
               (*match*/21807 =
                  (after Ppxlib__Deriving.expand_str_exception src/deriving.ml(816):27265-27323
                    (apply (field_imm 11 Deriver/6977)
                      (field_imm 2 (field_imm 2 Deriver/6977))
                      generators/8606))
                l_err/8608 =a (field_imm 1 *match*/21807)
                generators/8607 =a (field_imm 0 *match*/21807))
               (before Ppxlib__Deriving.expand_str_exception src/deriving.ml(818):27331-27791
                 (let
                   (l_err/8609 =
                      (after Ppxlib__Deriving.expand_str_exception src/deriving.ml(819):27347-27458
                        (apply
                          (field_imm 48
                            (field_imm 91 (global Ppxlib__Import!)))
                          l_err/8608
                          (function err/8610
                            (funct-body Ppxlib__Deriving.expand_str_exception.(fun) src/deriving.ml(820):27365-27446
                              (before Ppxlib__Deriving.expand_str_exception.(fun) src/deriving.ml(821):27385-27445
                                (after Ppxlib__Deriving.expand_str_exception.(fun) src/deriving.ml(821):27385-27445
                                  (apply
                                    (field_imm 162
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!)))
                                    (field_imm 2 (global Ppxlib__Location!))
                                    err/8610 0))))))))
                   (before Ppxlib__Deriving.expand_str_exception src/deriving.ml(824):27466-27791
                     (let
                       (generated/8611 =
                          (after Ppxlib__Deriving.expand_str_exception src/deriving.ml(825):27486-27645
                            (revapply
                              (makeblock 0 (makeblock 0 l_err/8609 0)
                                (after Ppxlib__Deriving.expand_str_exception src/deriving.ml(826):27541-27624
                                  (apply (field_imm 7 Generator/6276)
                                    ctxt/8604 ec/8605 generators/8607
                                    (field_imm 162
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!))))))
                              merge_derived/8542)))
                       (before Ppxlib__Deriving.expand_str_exception src/deriving.ml(830):27653-27791
                         (after Ppxlib__Deriving.expand_str_exception src/deriving.ml(830):27653-27791
                           (apply wrap_str/8452
                             (after Ppxlib__Deriving.expand_str_exception src/deriving.ml(831):27671-27720
                               (apply
                                 (field_imm 0
                                   (field_imm 2
                                     (global Ppxlib__Expansion_context!)))
                                 ctxt/8604))
                             (after Ppxlib__Deriving.expand_str_exception src/deriving.ml(832):27731-27777
                               (dirapply
                                 (function prim/21802 stub (not prim/21802))
                                 (after Ppxlib__Deriving.expand_str_exception src/deriving.ml(832):27739-27776
                                   (apply
                                     (field_imm 5
                                       (field_imm 2
                                         (global Ppxlib__Expansion_context!)))
                                     ctxt/8604))))
                             generated/8611)))))))))))
     expand_sig_exception/8612 =
       (function ctxt/8614 ec/8615 generators/8616
         (funct-body Ppxlib__Deriving.expand_sig_exception src/deriving.ml(835)<ghost>:27818-28396
           (before Ppxlib__Deriving.expand_sig_exception src/deriving.ml(836):27842-28396
             (let
               (*match*/21813 =
                  (after Ppxlib__Deriving.expand_sig_exception src/deriving.ml(837):27870-27928
                    (apply (field_imm 11 Deriver/6977)
                      (field_imm 6 (field_imm 2 Deriver/6977))
                      generators/8616))
                l_err/8618 =a (field_imm 1 *match*/21813)
                generators/8617 =a (field_imm 0 *match*/21813))
               (before Ppxlib__Deriving.expand_sig_exception src/deriving.ml(839):27936-28396
                 (let
                   (l_err/8619 =
                      (after Ppxlib__Deriving.expand_sig_exception src/deriving.ml(840):27952-28063
                        (apply
                          (field_imm 48
                            (field_imm 91 (global Ppxlib__Import!)))
                          l_err/8618
                          (function err/8620
                            (funct-body Ppxlib__Deriving.expand_sig_exception.(fun) src/deriving.ml(841):27970-28051
                              (before Ppxlib__Deriving.expand_sig_exception.(fun) src/deriving.ml(842):27990-28050
                                (after Ppxlib__Deriving.expand_sig_exception.(fun) src/deriving.ml(842):27990-28050
                                  (apply
                                    (field_imm 147
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!)))
                                    (field_imm 2 (global Ppxlib__Location!))
                                    err/8620 0))))))))
                   (before Ppxlib__Deriving.expand_sig_exception src/deriving.ml(845):28071-28396
                     (let
                       (generated/8621 =
                          (after Ppxlib__Deriving.expand_sig_exception src/deriving.ml(846):28091-28250
                            (revapply
                              (makeblock 0 (makeblock 0 l_err/8619 0)
                                (after Ppxlib__Deriving.expand_sig_exception src/deriving.ml(847):28146-28229
                                  (apply (field_imm 7 Generator/6276)
                                    ctxt/8614 ec/8615 generators/8617
                                    (field_imm 147
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!))))))
                              merge_derived/8542)))
                       (before Ppxlib__Deriving.expand_sig_exception src/deriving.ml(851):28258-28396
                         (after Ppxlib__Deriving.expand_sig_exception src/deriving.ml(851):28258-28396
                           (apply wrap_sig/8477
                             (after Ppxlib__Deriving.expand_sig_exception src/deriving.ml(852):28276-28325
                               (apply
                                 (field_imm 0
                                   (field_imm 2
                                     (global Ppxlib__Expansion_context!)))
                                 ctxt/8614))
                             (after Ppxlib__Deriving.expand_sig_exception src/deriving.ml(853):28336-28382
                               (dirapply
                                 (function prim/21808 stub (not prim/21808))
                                 (after Ppxlib__Deriving.expand_sig_exception src/deriving.ml(853):28344-28381
                                   (apply
                                     (field_imm 5
                                       (field_imm 2
                                         (global Ppxlib__Expansion_context!)))
                                     ctxt/8614))))
                             generated/8621)))))))))))
     expand_str_type_ext/8622 =
       (function ctxt/8624 te/8625 generators/8626
         (funct-body Ppxlib__Deriving.expand_str_type_ext src/deriving.ml(856)<ghost>:28422-28999
           (before Ppxlib__Deriving.expand_str_type_ext src/deriving.ml(857):28446-28999
             (let
               (*match*/21819 =
                  (after Ppxlib__Deriving.expand_str_type_ext src/deriving.ml(858):28474-28531
                    (apply (field_imm 11 Deriver/6977)
                      (field_imm 1 (field_imm 2 Deriver/6977))
                      generators/8626))
                l_err/8628 =a (field_imm 1 *match*/21819)
                generators/8627 =a (field_imm 0 *match*/21819))
               (before Ppxlib__Deriving.expand_str_type_ext src/deriving.ml(860):28539-28999
                 (let
                   (l_err/8629 =
                      (after Ppxlib__Deriving.expand_str_type_ext src/deriving.ml(861):28555-28666
                        (apply
                          (field_imm 48
                            (field_imm 91 (global Ppxlib__Import!)))
                          l_err/8628
                          (function err/8630
                            (funct-body Ppxlib__Deriving.expand_str_type_ext.(fun) src/deriving.ml(862):28573-28654
                              (before Ppxlib__Deriving.expand_str_type_ext.(fun) src/deriving.ml(863):28593-28653
                                (after Ppxlib__Deriving.expand_str_type_ext.(fun) src/deriving.ml(863):28593-28653
                                  (apply
                                    (field_imm 162
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!)))
                                    (field_imm 2 (global Ppxlib__Location!))
                                    err/8630 0))))))))
                   (before Ppxlib__Deriving.expand_str_type_ext src/deriving.ml(866):28674-28999
                     (let
                       (generated/8631 =
                          (after Ppxlib__Deriving.expand_str_type_ext src/deriving.ml(867):28694-28853
                            (revapply
                              (makeblock 0 (makeblock 0 l_err/8629 0)
                                (after Ppxlib__Deriving.expand_str_type_ext src/deriving.ml(868):28749-28832
                                  (apply (field_imm 7 Generator/6276)
                                    ctxt/8624 te/8625 generators/8627
                                    (field_imm 162
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!))))))
                              merge_derived/8542)))
                       (before Ppxlib__Deriving.expand_str_type_ext src/deriving.ml(872):28861-28999
                         (after Ppxlib__Deriving.expand_str_type_ext src/deriving.ml(872):28861-28999
                           (apply wrap_str/8452
                             (after Ppxlib__Deriving.expand_str_type_ext src/deriving.ml(873):28879-28928
                               (apply
                                 (field_imm 0
                                   (field_imm 2
                                     (global Ppxlib__Expansion_context!)))
                                 ctxt/8624))
                             (after Ppxlib__Deriving.expand_str_type_ext src/deriving.ml(874):28939-28985
                               (dirapply
                                 (function prim/21814 stub (not prim/21814))
                                 (after Ppxlib__Deriving.expand_str_type_ext src/deriving.ml(874):28947-28984
                                   (apply
                                     (field_imm 5
                                       (field_imm 2
                                         (global Ppxlib__Expansion_context!)))
                                     ctxt/8624))))
                             generated/8631)))))))))))
     expand_sig_type_ext/8632 =
       (function ctxt/8634 te/8635 generators/8636
         (funct-body Ppxlib__Deriving.expand_sig_type_ext src/deriving.ml(877)<ghost>:29025-29602
           (before Ppxlib__Deriving.expand_sig_type_ext src/deriving.ml(878):29049-29602
             (let
               (*match*/21825 =
                  (after Ppxlib__Deriving.expand_sig_type_ext src/deriving.ml(879):29077-29134
                    (apply (field_imm 11 Deriver/6977)
                      (field_imm 5 (field_imm 2 Deriver/6977))
                      generators/8636))
                l_err/8638 =a (field_imm 1 *match*/21825)
                generators/8637 =a (field_imm 0 *match*/21825))
               (before Ppxlib__Deriving.expand_sig_type_ext src/deriving.ml(881):29142-29602
                 (let
                   (l_err/8639 =
                      (after Ppxlib__Deriving.expand_sig_type_ext src/deriving.ml(882):29158-29269
                        (apply
                          (field_imm 48
                            (field_imm 91 (global Ppxlib__Import!)))
                          l_err/8638
                          (function err/8640
                            (funct-body Ppxlib__Deriving.expand_sig_type_ext.(fun) src/deriving.ml(883):29176-29257
                              (before Ppxlib__Deriving.expand_sig_type_ext.(fun) src/deriving.ml(884):29196-29256
                                (after Ppxlib__Deriving.expand_sig_type_ext.(fun) src/deriving.ml(884):29196-29256
                                  (apply
                                    (field_imm 147
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!)))
                                    (field_imm 2 (global Ppxlib__Location!))
                                    err/8640 0))))))))
                   (before Ppxlib__Deriving.expand_sig_type_ext src/deriving.ml(887):29277-29602
                     (let
                       (generated/8641 =
                          (after Ppxlib__Deriving.expand_sig_type_ext src/deriving.ml(888):29297-29456
                            (revapply
                              (makeblock 0 (makeblock 0 l_err/8639 0)
                                (after Ppxlib__Deriving.expand_sig_type_ext src/deriving.ml(889):29352-29435
                                  (apply (field_imm 7 Generator/6276)
                                    ctxt/8634 te/8635 generators/8637
                                    (field_imm 147
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!))))))
                              merge_derived/8542)))
                       (before Ppxlib__Deriving.expand_sig_type_ext src/deriving.ml(893):29464-29602
                         (after Ppxlib__Deriving.expand_sig_type_ext src/deriving.ml(893):29464-29602
                           (apply wrap_sig/8477
                             (after Ppxlib__Deriving.expand_sig_type_ext src/deriving.ml(894):29482-29531
                               (apply
                                 (field_imm 0
                                   (field_imm 2
                                     (global Ppxlib__Expansion_context!)))
                                 ctxt/8634))
                             (after Ppxlib__Deriving.expand_sig_type_ext src/deriving.ml(895):29542-29588
                               (dirapply
                                 (function prim/21820 stub (not prim/21820))
                                 (after Ppxlib__Deriving.expand_sig_type_ext src/deriving.ml(895):29550-29587
                                   (apply
                                     (field_imm 5
                                       (field_imm 2
                                         (global Ppxlib__Expansion_context!)))
                                     ctxt/8634))))
                             generated/8641)))))))))))
     rules/8642 =
       (function typ/8644 expand_sig/8645 expand_str/8646 rule_str/8647
         rule_sig/8648 rule_str_expect/8649 rule_sig_expect/8650
         (funct-body Ppxlib__Deriving.rules src/deriving.ml(898)<ghost>:29614-30066
           (before Ppxlib__Deriving.rules src/deriving.ml(900):29705-30066
             (let (prefix/8651 = "ppxlib.")
               (before Ppxlib__Deriving.rules src/deriving.ml(901):29733-30066
                 (let
                   (deriving_attr/8652 =
                      (after Ppxlib__Deriving.rules src/deriving.ml(901):29753-29792
                        (apply mk_deriving_attr/7160 typ/8644 prefix/8651 "")))
                   (before Ppxlib__Deriving.rules src/deriving.ml(902):29798-30066
                     (let
                       (deriving_attr_expect/8653 =
                          (after Ppxlib__Deriving.rules src/deriving.ml(902):29825-29871
                            (apply mk_deriving_attr/7160 typ/8644 prefix/8651
                              "_inline")))
                       (before Ppxlib__Deriving.rules src/deriving.ml(903):29877-30066
                         (makeblock 0
                           (after Ppxlib__Deriving.rules src/deriving.ml(904):29883-29916
                             (apply rule_sig/8648 deriving_attr/8652
                               expand_sig/8645))
                           (makeblock 0
                             (after Ppxlib__Deriving.rules src/deriving.ml(905):29922-29955
                               (apply rule_str/8647 deriving_attr/8652
                                 expand_str/8646))
                             (makeblock 0
                               (after Ppxlib__Deriving.rules src/deriving.ml(906):29961-30008
                                 (apply rule_str_expect/8649
                                   deriving_attr_expect/8653 expand_str/8646))
                               (makeblock 0
                                 (after Ppxlib__Deriving.rules src/deriving.ml(907):30014-30061
                                   (apply rule_sig_expect/8650
                                     deriving_attr_expect/8653
                                     expand_sig/8645))
                                 0)))))))))))))
     rules_type_decl/8654 =
       (after Ppxlib__Deriving.rules_type_decl src/deriving.ml(911):30092-30423
         (apply rules/8642 2 expand_sig_type_decls/8571
           expand_str_type_decls/8560
           (field_imm 4 (field_imm 0 (global Ppxlib__Context_free!)))
           (field_imm 5 (field_imm 0 (global Ppxlib__Context_free!)))
           (field_imm 6 (field_imm 0 (global Ppxlib__Context_free!)))
           (field_imm 7 (field_imm 0 (global Ppxlib__Context_free!)))))
     rules_type_ext/8677 =
       (after Ppxlib__Deriving.rules_type_ext src/deriving.ml(919):30448-30769
         (apply rules/8642 4 expand_sig_type_ext/8632
           expand_str_type_ext/8622
           (field_imm 12 (field_imm 0 (global Ppxlib__Context_free!)))
           (field_imm 13 (field_imm 0 (global Ppxlib__Context_free!)))
           (field_imm 14 (field_imm 0 (global Ppxlib__Context_free!)))
           (field_imm 15 (field_imm 0 (global Ppxlib__Context_free!)))))
     rules_exception/8678 =
       (after Ppxlib__Deriving.rules_exception src/deriving.ml(927):30795-31122
         (apply rules/8642 3 expand_sig_exception/8612
           expand_str_exception/8602
           (field_imm 16 (field_imm 0 (global Ppxlib__Context_free!)))
           (field_imm 17 (field_imm 0 (global Ppxlib__Context_free!)))
           (field_imm 18 (field_imm 0 (global Ppxlib__Context_free!)))
           (field_imm 19 (field_imm 0 (global Ppxlib__Context_free!)))))
     rules_module_type_decl/8679 =
       (after Ppxlib__Deriving.rules_module_type_decl src/deriving.ml(935):31155-31533
         (apply rules/8642 17 expand_sig_module_type_decl/8592
           expand_str_module_type_decl/8582
           (field_imm 8 (field_imm 0 (global Ppxlib__Context_free!)))
           (field_imm 9 (field_imm 0 (global Ppxlib__Context_free!)))
           (field_imm 10 (field_imm 0 (global Ppxlib__Context_free!)))
           (field_imm 11 (field_imm 0 (global Ppxlib__Context_free!)))))
     *match*/21827 =
       (let
         (rules/8680 =
            (after Ppxlib__Deriving src/deriving.ml(944):31562-31657
              (revapply
                (makeblock 0 rules_type_decl/8654
                  (makeblock 0 rules_type_ext/8677
                    (makeblock 0 rules_exception/8678
                      (makeblock 0 rules_module_type_decl/8679 0))))
                (field_imm 52 (field_imm 91 (global Ppxlib__Import!))))))
         (before Ppxlib__Deriving src/deriving.ml(947):31665-31738
           (after Ppxlib__Deriving src/deriving.ml(947):31665-31738
             (apply (field_imm 4 (global Ppxlib__Driver!)) 0
               (makeblock 0 rules/8680) 0 0 0 0 0 0 0 0 0
               [0: [0: "type_conv" 0]] "deriving")))))
    (pseudo <unknown location>
      (makeblock 0
        (makeblock 0 (field_mut 332 Args/4923) (field_mut 330 Args/4923)
          (field_mut 331 Args/4923) (field_mut 333 Args/4923)
          (field_mut 0 Args/4923) (field_mut 1 Args/4923)
          (field_mut 2 Args/4923) (field_mut 3 Args/4923)
          (field_mut 4 Args/4923) (field_mut 5 Args/4923)
          (field_mut 6 Args/4923) (field_mut 7 Args/4923)
          (field_mut 8 Args/4923) (field_mut 9 Args/4923)
          (field_mut 10 Args/4923) (field_mut 11 Args/4923)
          (field_mut 12 Args/4923) (field_mut 13 Args/4923)
          (field_mut 14 Args/4923) (field_mut 15 Args/4923)
          (field_mut 16 Args/4923) (field_mut 17 Args/4923)
          (field_mut 18 Args/4923) (field_mut 19 Args/4923)
          (field_mut 20 Args/4923) (field_mut 21 Args/4923)
          (field_mut 22 Args/4923) (field_mut 23 Args/4923)
          (field_mut 24 Args/4923) (field_mut 25 Args/4923)
          (field_mut 26 Args/4923) (field_mut 27 Args/4923)
          (field_mut 28 Args/4923) (field_mut 29 Args/4923)
          (field_mut 30 Args/4923) (field_mut 31 Args/4923)
          (field_mut 32 Args/4923) (field_mut 33 Args/4923)
          (field_mut 34 Args/4923) (field_mut 35 Args/4923)
          (field_mut 36 Args/4923) (field_mut 37 Args/4923)
          (field_mut 38 Args/4923) (field_mut 39 Args/4923)
          (field_mut 40 Args/4923) (field_mut 41 Args/4923)
          (field_mut 42 Args/4923) (field_mut 43 Args/4923)
          (field_mut 44 Args/4923) (field_mut 45 Args/4923)
          (field_mut 46 Args/4923) (field_mut 47 Args/4923)
          (field_mut 48 Args/4923) (field_mut 49 Args/4923)
          (field_mut 50 Args/4923) (field_mut 51 Args/4923)
          (field_mut 52 Args/4923) (field_mut 53 Args/4923)
          (field_mut 54 Args/4923) (field_mut 55 Args/4923)
          (field_mut 56 Args/4923) (field_mut 57 Args/4923)
          (field_mut 58 Args/4923) (field_mut 59 Args/4923)
          (field_mut 60 Args/4923) (field_mut 61 Args/4923)
          (field_mut 62 Args/4923) (field_mut 63 Args/4923)
          (field_mut 64 Args/4923) (field_mut 65 Args/4923)
          (field_mut 66 Args/4923) (field_mut 67 Args/4923)
          (field_mut 68 Args/4923) (field_mut 69 Args/4923)
          (field_mut 70 Args/4923) (field_mut 71 Args/4923)
          (field_mut 72 Args/4923) (field_mut 73 Args/4923)
          (field_mut 74 Args/4923) (field_mut 75 Args/4923)
          (field_mut 76 Args/4923) (field_mut 77 Args/4923)
          (field_mut 78 Args/4923) (field_mut 79 Args/4923)
          (field_mut 80 Args/4923) (field_mut 81 Args/4923)
          (field_mut 82 Args/4923) (field_mut 83 Args/4923)
          (field_mut 84 Args/4923) (field_mut 85 Args/4923)
          (field_mut 86 Args/4923) (field_mut 87 Args/4923)
          (field_mut 88 Args/4923) (field_mut 89 Args/4923)
          (field_mut 90 Args/4923) (field_mut 91 Args/4923)
          (field_mut 92 Args/4923) (field_mut 93 Args/4923)
          (field_mut 94 Args/4923) (field_mut 95 Args/4923)
          (field_mut 96 Args/4923) (field_mut 97 Args/4923)
          (field_mut 98 Args/4923) (field_mut 99 Args/4923)
          (field_mut 100 Args/4923) (field_mut 101 Args/4923)
          (field_mut 102 Args/4923) (field_mut 103 Args/4923)
          (field_mut 104 Args/4923) (field_mut 105 Args/4923)
          (field_mut 106 Args/4923) (field_mut 107 Args/4923)
          (field_mut 108 Args/4923) (field_mut 109 Args/4923)
          (field_mut 110 Args/4923) (field_mut 111 Args/4923)
          (field_mut 112 Args/4923) (field_mut 113 Args/4923)
          (field_mut 114 Args/4923) (field_mut 115 Args/4923)
          (field_mut 116 Args/4923) (field_mut 117 Args/4923)
          (field_mut 118 Args/4923) (field_mut 119 Args/4923)
          (field_mut 120 Args/4923) (field_mut 121 Args/4923)
          (field_mut 122 Args/4923) (field_mut 123 Args/4923)
          (field_mut 124 Args/4923) (field_mut 125 Args/4923)
          (field_mut 126 Args/4923) (field_mut 127 Args/4923)
          (field_mut 128 Args/4923) (field_mut 129 Args/4923)
          (field_mut 130 Args/4923) (field_mut 131 Args/4923)
          (field_mut 132 Args/4923) (field_mut 133 Args/4923)
          (field_mut 134 Args/4923) (field_mut 135 Args/4923)
          (field_mut 136 Args/4923) (field_mut 137 Args/4923)
          (field_mut 138 Args/4923) (field_mut 139 Args/4923)
          (field_mut 140 Args/4923) (field_mut 141 Args/4923)
          (field_mut 142 Args/4923) (field_mut 143 Args/4923)
          (field_mut 144 Args/4923) (field_mut 145 Args/4923)
          (field_mut 146 Args/4923) (field_mut 147 Args/4923)
          (field_mut 148 Args/4923) (field_mut 149 Args/4923)
          (field_mut 150 Args/4923) (field_mut 151 Args/4923)
          (field_mut 152 Args/4923) (field_mut 153 Args/4923)
          (field_mut 154 Args/4923) (field_mut 155 Args/4923)
          (field_mut 156 Args/4923) (field_mut 157 Args/4923)
          (field_mut 158 Args/4923) (field_mut 159 Args/4923)
          (field_mut 160 Args/4923) (field_mut 161 Args/4923)
          (field_mut 162 Args/4923) (field_mut 163 Args/4923)
          (field_mut 164 Args/4923) (field_mut 165 Args/4923)
          (field_mut 166 Args/4923) (field_mut 167 Args/4923)
          (field_mut 168 Args/4923) (field_mut 169 Args/4923)
          (field_mut 170 Args/4923) (field_mut 171 Args/4923)
          (field_mut 172 Args/4923) (field_mut 173 Args/4923)
          (field_mut 174 Args/4923) (field_mut 175 Args/4923)
          (field_mut 176 Args/4923) (field_mut 177 Args/4923)
          (field_mut 178 Args/4923) (field_mut 179 Args/4923)
          (field_mut 180 Args/4923) (field_mut 181 Args/4923)
          (field_mut 182 Args/4923) (field_mut 183 Args/4923)
          (field_mut 184 Args/4923) (field_mut 185 Args/4923)
          (field_mut 186 Args/4923) (field_mut 187 Args/4923)
          (field_mut 188 Args/4923) (field_mut 189 Args/4923)
          (field_mut 190 Args/4923) (field_mut 191 Args/4923)
          (field_mut 192 Args/4923) (field_mut 193 Args/4923)
          (field_mut 194 Args/4923) (field_mut 195 Args/4923)
          (field_mut 196 Args/4923) (field_mut 197 Args/4923)
          (field_mut 198 Args/4923) (field_mut 199 Args/4923)
          (field_mut 200 Args/4923) (field_mut 201 Args/4923)
          (field_mut 202 Args/4923) (field_mut 203 Args/4923)
          (field_mut 204 Args/4923) (field_mut 205 Args/4923)
          (field_mut 206 Args/4923) (field_mut 207 Args/4923)
          (field_mut 208 Args/4923) (field_mut 209 Args/4923)
          (field_mut 210 Args/4923) (field_mut 211 Args/4923)
          (field_mut 212 Args/4923) (field_mut 213 Args/4923)
          (field_mut 214 Args/4923) (field_mut 215 Args/4923)
          (field_mut 216 Args/4923) (field_mut 217 Args/4923)
          (field_mut 218 Args/4923) (field_mut 219 Args/4923)
          (field_mut 220 Args/4923) (field_mut 221 Args/4923)
          (field_mut 222 Args/4923) (field_mut 223 Args/4923)
          (field_mut 224 Args/4923) (field_mut 225 Args/4923)
          (field_mut 226 Args/4923) (field_mut 227 Args/4923)
          (field_mut 228 Args/4923) (field_mut 229 Args/4923)
          (field_mut 230 Args/4923) (field_mut 231 Args/4923)
          (field_mut 232 Args/4923) (field_mut 233 Args/4923)
          (field_mut 234 Args/4923) (field_mut 235 Args/4923)
          (field_mut 236 Args/4923) (field_mut 237 Args/4923)
          (field_mut 238 Args/4923) (field_mut 239 Args/4923)
          (field_mut 240 Args/4923) (field_mut 241 Args/4923)
          (field_mut 242 Args/4923) (field_mut 243 Args/4923)
          (field_mut 244 Args/4923) (field_mut 245 Args/4923)
          (field_mut 246 Args/4923) (field_mut 247 Args/4923)
          (field_mut 248 Args/4923) (field_mut 249 Args/4923)
          (field_mut 250 Args/4923) (field_mut 251 Args/4923)
          (field_mut 252 Args/4923) (field_mut 253 Args/4923)
          (field_mut 254 Args/4923) (field_mut 255 Args/4923)
          (field_mut 256 Args/4923) (field_mut 257 Args/4923)
          (field_mut 258 Args/4923) (field_mut 259 Args/4923)
          (field_mut 260 Args/4923) (field_mut 261 Args/4923)
          (field_mut 262 Args/4923) (field_mut 263 Args/4923)
          (field_mut 264 Args/4923) (field_mut 265 Args/4923)
          (field_mut 266 Args/4923) (field_mut 267 Args/4923)
          (field_mut 268 Args/4923) (field_mut 269 Args/4923)
          (field_mut 270 Args/4923) (field_mut 271 Args/4923)
          (field_mut 272 Args/4923) (field_mut 273 Args/4923)
          (field_mut 274 Args/4923) (field_mut 275 Args/4923)
          (field_mut 276 Args/4923) (field_mut 277 Args/4923)
          (field_mut 278 Args/4923) (field_mut 279 Args/4923)
          (field_mut 280 Args/4923) (field_mut 281 Args/4923)
          (field_mut 282 Args/4923) (field_mut 283 Args/4923)
          (field_mut 284 Args/4923) (field_mut 285 Args/4923)
          (field_mut 286 Args/4923) (field_mut 287 Args/4923)
          (field_mut 288 Args/4923) (field_mut 289 Args/4923)
          (field_mut 290 Args/4923) (field_mut 291 Args/4923)
          (field_mut 292 Args/4923) (field_mut 293 Args/4923)
          (field_mut 294 Args/4923) (field_mut 295 Args/4923)
          (field_mut 296 Args/4923) (field_mut 297 Args/4923)
          (field_mut 298 Args/4923) (field_mut 299 Args/4923)
          (field_mut 300 Args/4923) (field_mut 301 Args/4923)
          (field_mut 302 Args/4923) (field_mut 303 Args/4923)
          (field_mut 304 Args/4923) (field_mut 305 Args/4923)
          (field_mut 306 Args/4923) (field_mut 307 Args/4923)
          (field_mut 308 Args/4923) (field_mut 309 Args/4923)
          (field_mut 310 Args/4923) (field_mut 311 Args/4923)
          (field_mut 312 Args/4923) (field_mut 313 Args/4923)
          (field_mut 314 Args/4923) (field_mut 315 Args/4923)
          (field_mut 316 Args/4923) (field_mut 317 Args/4923)
          (field_mut 318 Args/4923) (field_mut 319 Args/4923)
          (field_mut 320 Args/4923) (field_mut 321 Args/4923)
          (field_mut 322 Args/4923) (field_mut 323 Args/4923)
          (field_mut 324 Args/4923) (field_mut 325 Args/4923)
          (field_mut 326 Args/4923) (field_mut 327 Args/4923)
          (field_mut 328 Args/4923) (field_mut 329 Args/4923))
        (makeblock 0 (field_mut 2 Generator/6276)
          (field_mut 3 Generator/6276) (field_mut 1 Generator/6276)
          (field_mut 6 Generator/6276))
        add/6978 add_alias/6979 ignore/4925))))
(setglobal Ppxlib__Deriving!
  (let
    (do_insert_unused_warning_attribute/2083 = (makemutable 0 0)
     keep_w32_impl/2084 = (makemutable 0 0)
     keep_w32_intf/2085 = (makemutable 0 0)
     *match*/21833 =
       (let
         (keep_w32_spec/2086 =
            (makeblock 11 [0: "impl" [0: "intf" [0: "both" 0]]]
              (function param/2115
                (funct-body Ppxlib__Deriving.(fun) src/deriving.ml(15):416-625
                  (catch
                    (stringswitch param/2115
                     case "both":
                      (before Ppxlib__Deriving.(fun) src/deriving.ml(19):541-597
                        (seq (setfield_imm 0 keep_w32_impl/2084 1)
                          (before Ppxlib__Deriving.(fun) src/deriving.ml(20):576-597
                            (setfield_imm 0 keep_w32_intf/2085 1))))
                     case "impl":
                      (before Ppxlib__Deriving.(fun) src/deriving.ml(16):445-466
                        (setfield_imm 0 keep_w32_impl/2084 1))
                     case "intf":
                      (before Ppxlib__Deriving.(fun) src/deriving.ml(17):487-508
                        (setfield_imm 0 keep_w32_intf/2085 1))
                     default: (exit 2))
                   with (2)
                    (before Ppxlib__Deriving.(fun) src/deriving.ml(21):613-625
                      (raise
                        (after Ppxlib__Deriving.(fun) src/deriving.ml(21):613-625
                          (makeblock 0 (global Assert_failure/30!)
                            [0: "src/deriving.ml" 21 15])))))))))
         (before Ppxlib__Deriving src/deriving.ml(23):635-1344
           (let
             (conv_w32_spec/2116 =
                (makeblock 11 [0: "code" [0: "attribute" 0]]
                  (function param/2117
                    (funct-body Ppxlib__Deriving.(fun) src/deriving.ml(26):718-886
                      (catch
                        (stringswitch param/2117
                         case "attribute":
                          (before Ppxlib__Deriving.(fun) src/deriving.ml(28):816-858
                            (setfield_imm 0
                              do_insert_unused_warning_attribute/2083 1))
                         case "code":
                          (before Ppxlib__Deriving.(fun) src/deriving.ml(27):747-790
                            (setfield_imm 0
                              do_insert_unused_warning_attribute/2083 0))
                         default: (exit 1))
                       with (1)
                        (before Ppxlib__Deriving.(fun) src/deriving.ml(29):874-886
                          (raise
                            (after Ppxlib__Deriving.(fun) src/deriving.ml(29):874-886
                              (makeblock 0 (global Assert_failure/30!)
                                [0: "src/deriving.ml" 29 15])))))))))
             (before Ppxlib__Deriving src/deriving.ml(31):896-1344
               (seq
                 (after Ppxlib__Deriving src/deriving.ml(31):896-1013
                   (apply (field_imm 0 (global Ppxlib__Driver!))
                     "-deriving-keep-w32" keep_w32_spec/2086
                     " Do not try to disable warning 32 for the generated code"))
                 (before Ppxlib__Deriving src/deriving.ml(33):1017-1344
                   (seq
                     (after Ppxlib__Deriving src/deriving.ml(33):1017-1137
                       (apply (field_imm 0 (global Ppxlib__Driver!))
                         "-deriving-disable-w32-method" conv_w32_spec/2116
                         " How to disable warning 32 for the generated code"))
                     (before Ppxlib__Deriving src/deriving.ml(35):1141-1344
                       (seq
                         (after Ppxlib__Deriving src/deriving.ml(35):1141-1238
                           (apply (field_imm 0 (global Ppxlib__Driver!))
                             "-type-conv-keep-w32" keep_w32_spec/2086
                             " Deprecated, use -deriving-keep-w32"))
                         (before Ppxlib__Deriving src/deriving.ml(37):1242-1344
                           (after Ppxlib__Deriving src/deriving.ml(37):1242-1344
                             (apply (field_imm 0 (global Ppxlib__Driver!))
                               "-type-conv-w32" conv_w32_spec/2116
                               " Deprecated, use -deriving-disable-w32-method"))))))))))))
     keep_w32_impl/2169 =
       (function param/2170
         (funct-body Ppxlib__Deriving.keep_w32_impl src/deriving.ml(40)<ghost>:1364-1403
           (before Ppxlib__Deriving.keep_w32_impl src/deriving.ml(40):1369-1403
             (|| (field_int 0 keep_w32_impl/2084)
               (after Ppxlib__Deriving.keep_w32_impl src/deriving.ml(40):1387-1403
                 (apply (field_imm 13 (global Ppxlib__Driver!)) 0))))))
     keep_w32_intf/2171 =
       (function param/2172
         (funct-body Ppxlib__Deriving.keep_w32_intf src/deriving.ml(41)<ghost>:1422-1461
           (before Ppxlib__Deriving.keep_w32_intf src/deriving.ml(41):1427-1461
             (|| (field_int 0 keep_w32_intf/2085)
               (after Ppxlib__Deriving.keep_w32_intf src/deriving.ml(41):1445-1461
                 (apply (field_imm 13 (global Ppxlib__Driver!)) 0))))))
     keep_w60_impl/2173 = (makemutable 0 0)
     keep_w60_intf/2174 = (makemutable 0 0)
     *match*/21831 =
       (let
         (keep_w60_spec/2175 =
            (makeblock 11 [0: "impl" [0: "intf" [0: "both" 0]]]
              (function param/2176
                (funct-body Ppxlib__Deriving.(fun) src/deriving.ml(49):1620-1829
                  (catch
                    (stringswitch param/2176
                     case "both":
                      (before Ppxlib__Deriving.(fun) src/deriving.ml(53):1745-1801
                        (seq (setfield_imm 0 keep_w60_impl/2173 1)
                          (before Ppxlib__Deriving.(fun) src/deriving.ml(54):1780-1801
                            (setfield_imm 0 keep_w60_intf/2174 1))))
                     case "impl":
                      (before Ppxlib__Deriving.(fun) src/deriving.ml(50):1649-1670
                        (setfield_imm 0 keep_w60_impl/2173 1))
                     case "intf":
                      (before Ppxlib__Deriving.(fun) src/deriving.ml(51):1691-1712
                        (setfield_imm 0 keep_w60_intf/2174 1))
                     default: (exit 3))
                   with (3)
                    (before Ppxlib__Deriving.(fun) src/deriving.ml(55):1817-1829
                      (raise
                        (after Ppxlib__Deriving.(fun) src/deriving.ml(55):1817-1829
                          (makeblock 0 (global Assert_failure/30!)
                            [0: "src/deriving.ml" 55 15])))))))))
         (before Ppxlib__Deriving src/deriving.ml(57):1839-1956
           (after Ppxlib__Deriving src/deriving.ml(57):1839-1956
             (apply (field_imm 0 (global Ppxlib__Driver!))
               "-deriving-keep-w60" keep_w60_spec/2175
               " Do not try to disable warning 60 for the generated code"))))
     keep_w60_impl/2177 =
       (function param/2178
         (funct-body Ppxlib__Deriving.keep_w60_impl src/deriving.ml(60)<ghost>:1976-2015
           (before Ppxlib__Deriving.keep_w60_impl src/deriving.ml(60):1981-2015
             (|| (field_int 0 keep_w60_impl/2173)
               (after Ppxlib__Deriving.keep_w60_impl src/deriving.ml(60):1999-2015
                 (apply (field_imm 13 (global Ppxlib__Driver!)) 0))))))
     keep_w60_intf/2179 =
       (function param/2180
         (funct-body Ppxlib__Deriving.keep_w60_intf src/deriving.ml(61)<ghost>:2034-2073
           (before Ppxlib__Deriving.keep_w60_intf src/deriving.ml(61):2039-2073
             (|| (field_int 0 keep_w60_intf/2174)
               (after Ppxlib__Deriving.keep_w60_intf src/deriving.ml(61):2057-2073
                 (apply (field_imm 13 (global Ppxlib__Driver!)) 0))))))
     allow_unused_code_warnings/2181 =
       (makemutable 0 (field_imm 0 (global Ppxlib__Options!)))
     *match*/21829 =
       (after Ppxlib__Deriving src/deriving.ml(65):2166-2314
         (apply (field_imm 0 (global Ppxlib__Driver!))
           "-unused-code-warnings"
           (makeblock 1
             (after Ppxlib__Deriving src/deriving.ml(66):2215-2250
               (apply
                 (function prim/21678 prim/21677 stub
                   (setfield_imm 0 prim/21678 prim/21677))
                 allow_unused_code_warnings/2181)))
           "_ Allow ppx derivers to enable unused code warnings"))
     allow_unused_code_warnings/2188 =
       (function param/2189
         (funct-body Ppxlib__Deriving.allow_unused_code_warnings src/deriving.ml(69)<ghost>:2347-2379
           (before Ppxlib__Deriving.allow_unused_code_warnings src/deriving.ml(69):2352-2379
             (field_int 0 allow_unused_code_warnings/2181))))
     Args/4923 =
       (module-defn(Args/4923) Ppxlib__Deriving src/deriving.ml(71):2381-4031
         (let
           (include/21679 =a
              (let
                (let/21683 = (global Ppxlib__Ast_pattern!)
                 let/21684 =a (global Ppxlib__Ast_pattern!))
                (makeblock 0 (field_mut 0 let/21684) (field_mut 1 let/21684)
                  (field_mut 3 let/21684) (field_mut 4 let/21684)
                  (field_mut 5 let/21684) (field_mut 6 let/21684)
                  (field_mut 7 let/21684) (field_mut 8 let/21684)
                  (field_mut 9 let/21684) (field_mut 10 let/21684)
                  (field_mut 11 let/21684) (field_mut 12 let/21684)
                  (field_mut 13 let/21684) (field_mut 14 let/21684)
                  (field_mut 15 let/21684) (field_mut 16 let/21684)
                  (field_mut 17 let/21684) (field_mut 18 let/21684)
                  (field_mut 19 let/21684) (field_mut 20 let/21684)
                  (field_mut 21 let/21684) (field_mut 22 let/21684)
                  (field_mut 23 let/21684) (field_mut 24 let/21684)
                  (field_mut 25 let/21684) (field_mut 26 let/21684)
                  (field_mut 27 let/21684) (field_mut 28 let/21684)
                  (field_mut 29 let/21684) (field_mut 30 let/21684)
                  (field_mut 31 let/21684) (field_mut 32 let/21684)
                  (field_mut 33 let/21684) (field_mut 34 let/21684)
                  (field_mut 35 let/21684) (field_mut 36 let/21684)
                  (field_mut 37 let/21684) (field_mut 38 let/21684)
                  (field_mut 39 let/21684) (field_mut 40 let/21684)
                  (field_mut 41 let/21684) (field_mut 42 let/21684)
                  (field_mut 43 let/21684) (field_mut 44 let/21684)
                  (field_mut 45 let/21684) (field_mut 46 let/21684)
                  (field_mut 47 let/21684) (field_mut 48 let/21684)
                  (field_mut 49 let/21684) (field_mut 50 let/21684)
                  (field_mut 51 let/21684) (field_mut 52 let/21684)
                  (field_mut 53 let/21684) (field_mut 54 let/21684)
                  (field_mut 55 let/21684) (field_mut 56 let/21684)
                  (field_mut 57 let/21684) (field_mut 58 let/21684)
                  (field_mut 59 let/21684) (field_mut 60 let/21684)
                  (field_mut 61 let/21684) (field_mut 62 let/21684)
                  (field_mut 63 let/21684) (field_mut 64 let/21684)
                  (field_mut 65 let/21684) (field_mut 66 let/21684)
                  (field_mut 67 let/21684) (field_mut 68 let/21684)
                  (field_mut 69 let/21684) (field_mut 70 let/21684)
                  (field_mut 71 let/21684) (field_mut 72 let/21684)
                  (field_mut 73 let/21684) (field_mut 74 let/21684)
                  (field_mut 75 let/21684) (field_mut 76 let/21684)
                  (field_mut 77 let/21684) (field_mut 78 let/21684)
                  (field_mut 79 let/21684) (field_mut 80 let/21684)
                  (field_mut 81 let/21684) (field_mut 82 let/21684)
                  (field_mut 83 let/21684) (field_mut 84 let/21684)
                  (field_mut 85 let/21684) (field_mut 86 let/21684)
                  (field_mut 87 let/21684) (field_mut 88 let/21684)
                  (field_mut 89 let/21684) (field_mut 90 let/21684)
                  (field_mut 91 let/21684) (field_mut 92 let/21684)
                  (field_mut 93 let/21684) (field_mut 94 let/21684)
                  (field_mut 95 let/21684) (field_mut 96 let/21684)
                  (field_mut 97 let/21684) (field_mut 98 let/21684)
                  (field_mut 99 let/21684) (field_mut 100 let/21684)
                  (field_mut 101 let/21684) (field_mut 102 let/21684)
                  (field_mut 103 let/21684) (field_mut 104 let/21684)
                  (field_mut 105 let/21684) (field_mut 106 let/21684)
                  (field_mut 107 let/21684) (field_mut 108 let/21684)
                  (field_mut 109 let/21684) (field_mut 110 let/21684)
                  (field_mut 111 let/21684) (field_mut 112 let/21684)
                  (field_mut 113 let/21684) (field_mut 114 let/21684)
                  (field_mut 115 let/21684) (field_mut 116 let/21684)
                  (field_mut 117 let/21684) (field_mut 118 let/21684)
                  (field_mut 119 let/21684) (field_mut 120 let/21684)
                  (field_mut 121 let/21684) (field_mut 122 let/21684)
                  (field_mut 123 let/21684) (field_mut 124 let/21684)
                  (field_mut 125 let/21684) (field_mut 126 let/21684)
                  (field_mut 127 let/21684) (field_mut 128 let/21684)
                  (field_mut 129 let/21684) (field_mut 130 let/21684)
                  (field_mut 131 let/21684) (field_mut 132 let/21684)
                  (field_mut 133 let/21684) (field_mut 134 let/21684)
                  (field_mut 135 let/21684) (field_mut 136 let/21684)
                  (field_mut 137 let/21684) (field_mut 138 let/21684)
                  (field_mut 139 let/21684) (field_mut 140 let/21684)
                  (field_mut 141 let/21684) (field_mut 142 let/21684)
                  (field_mut 143 let/21684) (field_mut 144 let/21684)
                  (field_mut 145 let/21684) (field_mut 146 let/21684)
                  (field_mut 147 let/21684) (field_mut 148 let/21684)
                  (field_mut 149 let/21684) (field_mut 150 let/21684)
                  (field_mut 151 let/21684) (field_mut 152 let/21684)
                  (field_mut 153 let/21684) (field_mut 154 let/21684)
                  (field_mut 155 let/21684) (field_mut 156 let/21684)
                  (field_mut 157 let/21684) (field_mut 158 let/21684)
                  (field_mut 159 let/21684) (field_mut 160 let/21684)
                  (field_mut 161 let/21684) (field_mut 162 let/21684)
                  (field_mut 163 let/21684) (field_mut 164 let/21684)
                  (field_mut 165 let/21684) (field_mut 166 let/21684)
                  (field_mut 167 let/21684) (field_mut 168 let/21684)
                  (field_mut 169 let/21684) (field_mut 170 let/21684)
                  (field_mut 171 let/21684) (field_mut 172 let/21684)
                  (field_mut 173 let/21684) (field_mut 174 let/21684)
                  (field_mut 175 let/21684) (field_mut 176 let/21684)
                  (field_mut 177 let/21684) (field_mut 178 let/21684)
                  (field_mut 179 let/21684) (field_mut 180 let/21684)
                  (field_mut 181 let/21684) (field_mut 182 let/21684)
                  (field_mut 183 let/21684) (field_mut 184 let/21684)
                  (field_mut 185 let/21684) (field_mut 186 let/21684)
                  (field_mut 187 let/21684) (field_mut 188 let/21684)
                  (field_mut 189 let/21684) (field_mut 190 let/21684)
                  (field_mut 191 let/21684) (field_mut 192 let/21684)
                  (field_mut 193 let/21684) (field_mut 194 let/21684)
                  (field_mut 195 let/21684) (field_mut 196 let/21684)
                  (field_mut 197 let/21684) (field_mut 198 let/21684)
                  (field_mut 199 let/21684) (field_mut 200 let/21684)
                  (field_mut 201 let/21684) (field_mut 202 let/21684)
                  (field_mut 203 let/21684) (field_mut 204 let/21684)
                  (field_mut 205 let/21684) (field_mut 206 let/21684)
                  (field_mut 207 let/21684) (field_mut 208 let/21684)
                  (field_mut 209 let/21684) (field_mut 210 let/21684)
                  (field_mut 211 let/21684) (field_mut 212 let/21684)
                  (field_mut 213 let/21684) (field_mut 214 let/21684)
                  (field_mut 215 let/21684) (field_mut 216 let/21684)
                  (field_mut 217 let/21684) (field_mut 218 let/21684)
                  (field_mut 219 let/21684) (field_mut 220 let/21684)
                  (field_mut 221 let/21684) (field_mut 222 let/21684)
                  (field_mut 223 let/21684) (field_mut 224 let/21684)
                  (field_mut 225 let/21684) (field_mut 226 let/21684)
                  (field_mut 227 let/21684) (field_mut 228 let/21684)
                  (field_mut 229 let/21684) (field_mut 230 let/21684)
                  (field_mut 231 let/21684) (field_mut 232 let/21684)
                  (field_mut 233 let/21684) (field_mut 234 let/21684)
                  (field_mut 235 let/21684) (field_mut 236 let/21684)
                  (field_mut 237 let/21684) (field_mut 238 let/21684)
                  (field_mut 239 let/21684) (field_mut 240 let/21684)
                  (field_mut 241 let/21684) (field_mut 242 let/21684)
                  (field_mut 243 let/21684) (field_mut 244 let/21684)
                  (field_mut 245 let/21684) (field_mut 246 let/21684)
                  (field_mut 247 let/21684) (field_mut 248 let/21684)
                  (field_mut 249 let/21684) (field_mut 250 let/21684)
                  (field_mut 251 let/21684) (field_mut 252 let/21684)
                  (field_mut 253 let/21684) (field_mut 254 let/21684)
                  (field_mut 255 let/21684) (field_mut 256 let/21684)
                  (field_mut 257 let/21684) (field_mut 258 let/21684)
                  (field_mut 259 let/21684) (field_mut 260 let/21684)
                  (field_mut 261 let/21684) (field_mut 262 let/21684)
                  (field_mut 263 let/21684) (field_mut 264 let/21684)
                  (field_mut 265 let/21684) (field_mut 266 let/21684)
                  (field_mut 267 let/21684) (field_mut 268 let/21684)
                  (field_mut 269 let/21684) (field_mut 270 let/21684)
                  (field_mut 271 let/21684) (field_mut 272 let/21684)
                  (field_mut 273 let/21684) (field_mut 274 let/21684)
                  (field_mut 275 let/21684) (field_mut 276 let/21684)
                  (field_mut 277 let/21684) (field_mut 278 let/21684)
                  (field_mut 279 let/21684) (field_mut 280 let/21684)
                  (field_mut 281 let/21684) (field_mut 282 let/21684)
                  (field_mut 283 let/21684) (field_mut 284 let/21684)
                  (field_mut 285 let/21684) (field_mut 286 let/21684)
                  (field_mut 287 let/21684) (field_mut 288 let/21684)
                  (field_mut 289 let/21684) (field_mut 290 let/21684)
                  (field_mut 291 let/21684) (field_mut 292 let/21684)
                  (field_mut 293 let/21684) (field_mut 294 let/21684)
                  (field_mut 295 let/21684) (field_mut 296 let/21684)
                  (field_mut 297 let/21684) (field_mut 298 let/21684)
                  (field_mut 299 let/21684) (field_mut 300 let/21684)
                  (field_mut 301 let/21684) (field_mut 302 let/21684)
                  (field_mut 303 let/21684) (field_mut 304 let/21684)
                  (field_mut 305 let/21684) (field_mut 306 let/21684)
                  (field_mut 307 let/21684) (field_mut 308 let/21684)
                  (field_mut 309 let/21684) (field_mut 310 let/21684)
                  (field_mut 311 let/21684) (field_mut 312 let/21684)
                  (field_mut 313 let/21684) (field_mut 314 let/21684)
                  (field_mut 315 let/21684) (field_mut 316 let/21684)
                  (field_mut 317 let/21684) (field_mut 318 let/21684)
                  (field_mut 319 let/21684) (field_mut 320 let/21684)
                  (field_mut 321 let/21684) (field_mut 322 let/21684)
                  (field_mut 323 let/21684) (field_mut 324 let/21684)
                  (field_mut 325 let/21684) (field_mut 326 let/21684)
                  (field_mut 327 let/21684) (field_mut 328 let/21684)
                  (field_mut 329 let/21684) (field_mut 330 let/21684)))
            parse/4418 =a (field_mut 0 include/21679)
            parse_res/4419 =a (field_mut 1 include/21679)
            __/4421 =a (field_mut 2 include/21679)
            __'/4422 =a (field_mut 3 include/21679)
            drop/4423 =a (field_mut 4 include/21679)
            as__/4424 =a (field_mut 5 include/21679)
            alt/4425 =a (field_mut 6 include/21679)
            alt_option/4426 =a (field_mut 7 include/21679)
            |||/4427 =a (field_mut 8 include/21679)
            map/4428 =a (field_mut 9 include/21679)
            map'/4429 =a (field_mut 10 include/21679)
            map_result/4430 =a (field_mut 11 include/21679)
            >>|/4431 =a (field_mut 12 include/21679)
            map0/4432 =a (field_mut 13 include/21679)
            map1/4433 =a (field_mut 14 include/21679)
            map2/4434 =a (field_mut 15 include/21679)
            map0'/4435 =a (field_mut 16 include/21679)
            map1'/4436 =a (field_mut 17 include/21679)
            map2'/4437 =a (field_mut 18 include/21679)
            map_value/4438 =a (field_mut 19 include/21679)
            map_value'/4439 =a (field_mut 20 include/21679)
            nil/4440 =a (field_mut 21 include/21679)
            ^::/4441 =a (field_mut 22 include/21679)
            many/4442 =a (field_mut 23 include/21679)
            int/4443 =a (field_mut 24 include/21679)
            char/4444 =a (field_mut 25 include/21679)
            string/4445 =a (field_mut 26 include/21679)
            float/4446 =a (field_mut 27 include/21679)
            int32/4447 =a (field_mut 28 include/21679)
            int64/4448 =a (field_mut 29 include/21679)
            nativeint/4449 =a (field_mut 30 include/21679)
            bool/4450 =a (field_mut 31 include/21679)
            ebool/4451 =a (field_mut 32 include/21679)
            pbool/4452 =a (field_mut 33 include/21679)
            cst/4453 =a (field_mut 34 include/21679)
            none/4454 =a (field_mut 35 include/21679)
            some/4455 =a (field_mut 36 include/21679)
            pair/4456 =a (field_mut 37 include/21679)
            **/4457 =a (field_mut 38 include/21679)
            triple/4458 =a (field_mut 39 include/21679)
            loc/4459 =a (field_mut 40 include/21679)
            pack0/4460 =a (field_mut 41 include/21679)
            pack2/4461 =a (field_mut 42 include/21679)
            pack3/4462 =a (field_mut 43 include/21679)
            nolabel/4463 =a (field_mut 44 include/21679)
            labelled/4464 =a (field_mut 45 include/21679)
            optional/4465 =a (field_mut 46 include/21679)
            binding_op/4466 =a (field_mut 47 include/21679)
            case/4467 =a (field_mut 48 include/21679)
            pcl_loc/4468 =a (field_mut 49 include/21679)
            pcl_attributes/4469 =a (field_mut 50 include/21679)
            pcl_constr/4470 =a (field_mut 51 include/21679)
            pcl_structure/4471 =a (field_mut 52 include/21679)
            pcl_fun/4472 =a (field_mut 53 include/21679)
            pcl_apply/4473 =a (field_mut 54 include/21679)
            pcl_let/4474 =a (field_mut 55 include/21679)
            pcl_constraint/4475 =a (field_mut 56 include/21679)
            pcl_extension/4476 =a (field_mut 57 include/21679)
            pcl_open/4477 =a (field_mut 58 include/21679)
            pcf_loc/4478 =a (field_mut 59 include/21679)
            pcf_attributes/4479 =a (field_mut 60 include/21679)
            pcf_inherit/4480 =a (field_mut 61 include/21679)
            pcf_val/4481 =a (field_mut 62 include/21679)
            pcf_method/4482 =a (field_mut 63 include/21679)
            pcf_constraint/4483 =a (field_mut 64 include/21679)
            pcf_initializer/4484 =a (field_mut 65 include/21679)
            pcf_attribute/4485 =a (field_mut 66 include/21679)
            pcf_extension/4486 =a (field_mut 67 include/21679)
            cfk_virtual/4487 =a (field_mut 68 include/21679)
            cfk_concrete/4488 =a (field_mut 69 include/21679)
            class_infos_attributes/4489 =a (field_mut 70 include/21679)
            class_infos/4490 =a (field_mut 71 include/21679)
            class_signature/4491 =a (field_mut 72 include/21679)
            class_structure/4492 =a (field_mut 73 include/21679)
            pcty_loc/4493 =a (field_mut 74 include/21679)
            pcty_attributes/4494 =a (field_mut 75 include/21679)
            pcty_constr/4495 =a (field_mut 76 include/21679)
            pcty_signature/4496 =a (field_mut 77 include/21679)
            pcty_arrow/4497 =a (field_mut 78 include/21679)
            pcty_extension/4498 =a (field_mut 79 include/21679)
            pcty_open/4499 =a (field_mut 80 include/21679)
            pctf_loc/4500 =a (field_mut 81 include/21679)
            pctf_attributes/4501 =a (field_mut 82 include/21679)
            pctf_inherit/4502 =a (field_mut 83 include/21679)
            pctf_val/4503 =a (field_mut 84 include/21679)
            pctf_method/4504 =a (field_mut 85 include/21679)
            pctf_constraint/4505 =a (field_mut 86 include/21679)
            pctf_attribute/4506 =a (field_mut 87 include/21679)
            pctf_extension/4507 =a (field_mut 88 include/21679)
            closed/4508 =a (field_mut 89 include/21679)
            open_/4509 =a (field_mut 90 include/21679)
            pconst_integer/4510 =a (field_mut 91 include/21679)
            pconst_char/4511 =a (field_mut 92 include/21679)
            pconst_string/4512 =a (field_mut 93 include/21679)
            pconst_float/4513 =a (field_mut 94 include/21679)
            pcstr_tuple/4514 =a (field_mut 95 include/21679)
            pcstr_record/4515 =a (field_mut 96 include/21679)
            constructor_declaration_attributes/4516 =a
              (field_mut 97 include/21679)
            constructor_declaration/4517 =a (field_mut 98 include/21679)
            ptyp_loc/4518 =a (field_mut 99 include/21679)
            ptyp_attributes/4519 =a (field_mut 100 include/21679)
            ptyp_any/4520 =a (field_mut 101 include/21679)
            ptyp_var/4521 =a (field_mut 102 include/21679)
            ptyp_arrow/4522 =a (field_mut 103 include/21679)
            ptyp_tuple/4523 =a (field_mut 104 include/21679)
            ptyp_constr/4524 =a (field_mut 105 include/21679)
            ptyp_object/4525 =a (field_mut 106 include/21679)
            ptyp_class/4526 =a (field_mut 107 include/21679)
            ptyp_alias/4527 =a (field_mut 108 include/21679)
            ptyp_variant/4528 =a (field_mut 109 include/21679)
            ptyp_poly/4529 =a (field_mut 110 include/21679)
            ptyp_package/4530 =a (field_mut 111 include/21679)
            ptyp_extension/4531 =a (field_mut 112 include/21679)
            upto/4532 =a (field_mut 113 include/21679)
            downto_/4533 =a (field_mut 114 include/21679)
            pdira_loc/4534 =a (field_mut 115 include/21679)
            pdir_string/4535 =a (field_mut 116 include/21679)
            pdir_int/4536 =a (field_mut 117 include/21679)
            pdir_ident/4537 =a (field_mut 118 include/21679)
            pdir_bool/4538 =a (field_mut 119 include/21679)
            pexp_loc/4539 =a (field_mut 120 include/21679)
            pexp_attributes/4540 =a (field_mut 121 include/21679)
            pexp_ident/4541 =a (field_mut 122 include/21679)
            pexp_constant/4542 =a (field_mut 123 include/21679)
            pexp_let/4543 =a (field_mut 124 include/21679)
            pexp_function/4544 =a (field_mut 125 include/21679)
            pexp_fun/4545 =a (field_mut 126 include/21679)
            pexp_apply/4546 =a (field_mut 127 include/21679)
            pexp_match/4547 =a (field_mut 128 include/21679)
            pexp_try/4548 =a (field_mut 129 include/21679)
            pexp_tuple/4549 =a (field_mut 130 include/21679)
            pexp_construct/4550 =a (field_mut 131 include/21679)
            pexp_variant/4551 =a (field_mut 132 include/21679)
            pexp_record/4552 =a (field_mut 133 include/21679)
            pexp_field/4553 =a (field_mut 134 include/21679)
            pexp_setfield/4554 =a (field_mut 135 include/21679)
            pexp_array/4555 =a (field_mut 136 include/21679)
            pexp_ifthenelse/4556 =a (field_mut 137 include/21679)
            pexp_sequence/4557 =a (field_mut 138 include/21679)
            pexp_while/4558 =a (field_mut 139 include/21679)
            pexp_for/4559 =a (field_mut 140 include/21679)
            pexp_constraint/4560 =a (field_mut 141 include/21679)
            pexp_coerce/4561 =a (field_mut 142 include/21679)
            pexp_send/4562 =a (field_mut 143 include/21679)
            pexp_new/4563 =a (field_mut 144 include/21679)
            pexp_setinstvar/4564 =a (field_mut 145 include/21679)
            pexp_override/4565 =a (field_mut 146 include/21679)
            pexp_letmodule/4566 =a (field_mut 147 include/21679)
            pexp_letexception/4567 =a (field_mut 148 include/21679)
            pexp_assert/4568 =a (field_mut 149 include/21679)
            pexp_lazy/4569 =a (field_mut 150 include/21679)
            pexp_poly/4570 =a (field_mut 151 include/21679)
            pexp_object/4571 =a (field_mut 152 include/21679)
            pexp_newtype/4572 =a (field_mut 153 include/21679)
            pexp_pack/4573 =a (field_mut 154 include/21679)
            pexp_open/4574 =a (field_mut 155 include/21679)
            pexp_letop/4575 =a (field_mut 156 include/21679)
            pexp_extension/4576 =a (field_mut 157 include/21679)
            pexp_unreachable/4577 =a (field_mut 158 include/21679)
            extension_constructor_attributes/4578 =a
              (field_mut 159 include/21679)
            extension_constructor/4579 =a (field_mut 160 include/21679)
            pext_decl/4580 =a (field_mut 161 include/21679)
            pext_rebind/4581 =a (field_mut 162 include/21679)
            unit/4582 =a (field_mut 163 include/21679)
            named/4583 =a (field_mut 164 include/21679)
            include_infos_attributes/4584 =a (field_mut 165 include/21679)
            include_infos/4585 =a (field_mut 166 include/21679)
            injective/4586 =a (field_mut 167 include/21679)
            noinjectivity/4587 =a (field_mut 168 include/21679)
            label_declaration_attributes/4588 =a
              (field_mut 169 include/21679)
            label_declaration/4589 =a (field_mut 170 include/21679)
            letop/4590 =a (field_mut 171 include/21679)
            location/4591 =a (field_mut 172 include/21679)
            lident/4592 =a (field_mut 173 include/21679)
            ldot/4593 =a (field_mut 174 include/21679)
            lapply/4594 =a (field_mut 175 include/21679)
            module_binding_attributes/4595 =a (field_mut 176 include/21679)
            module_binding/4596 =a (field_mut 177 include/21679)
            module_declaration_attributes/4597 =a
              (field_mut 178 include/21679)
            module_declaration/4598 =a (field_mut 179 include/21679)
            pmod_loc/4599 =a (field_mut 180 include/21679)
            pmod_attributes/4600 =a (field_mut 181 include/21679)
            pmod_ident/4601 =a (field_mut 182 include/21679)
            pmod_structure/4602 =a (field_mut 183 include/21679)
            pmod_functor/4603 =a (field_mut 184 include/21679)
            pmod_apply/4604 =a (field_mut 185 include/21679)
            pmod_constraint/4605 =a (field_mut 186 include/21679)
            pmod_unpack/4606 =a (field_mut 187 include/21679)
            pmod_extension/4607 =a (field_mut 188 include/21679)
            module_substitution_attributes/4608 =a
              (field_mut 189 include/21679)
            module_substitution/4609 =a (field_mut 190 include/21679)
            pmty_loc/4610 =a (field_mut 191 include/21679)
            pmty_attributes/4611 =a (field_mut 192 include/21679)
            pmty_ident/4612 =a (field_mut 193 include/21679)
            pmty_signature/4613 =a (field_mut 194 include/21679)
            pmty_functor/4614 =a (field_mut 195 include/21679)
            pmty_with/4615 =a (field_mut 196 include/21679)
            pmty_typeof/4616 =a (field_mut 197 include/21679)
            pmty_extension/4617 =a (field_mut 198 include/21679)
            pmty_alias/4618 =a (field_mut 199 include/21679)
            module_type_declaration_attributes/4619 =a
              (field_mut 200 include/21679)
            module_type_declaration/4620 =a (field_mut 201 include/21679)
            immutable/4621 =a (field_mut 202 include/21679)
            mutable_/4622 =a (field_mut 203 include/21679)
            pof_loc/4623 =a (field_mut 204 include/21679)
            pof_attributes/4624 =a (field_mut 205 include/21679)
            otag/4625 =a (field_mut 206 include/21679)
            oinherit/4626 =a (field_mut 207 include/21679)
            open_infos_attributes/4627 =a (field_mut 208 include/21679)
            open_infos/4628 =a (field_mut 209 include/21679)
            override/4629 =a (field_mut 210 include/21679)
            fresh/4630 =a (field_mut 211 include/21679)
            ppat_loc/4631 =a (field_mut 212 include/21679)
            ppat_attributes/4632 =a (field_mut 213 include/21679)
            ppat_any/4633 =a (field_mut 214 include/21679)
            ppat_var/4634 =a (field_mut 215 include/21679)
            ppat_alias/4635 =a (field_mut 216 include/21679)
            ppat_constant/4636 =a (field_mut 217 include/21679)
            ppat_interval/4637 =a (field_mut 218 include/21679)
            ppat_tuple/4638 =a (field_mut 219 include/21679)
            ppat_construct/4639 =a (field_mut 220 include/21679)
            ppat_variant/4640 =a (field_mut 221 include/21679)
            ppat_record/4641 =a (field_mut 222 include/21679)
            ppat_array/4642 =a (field_mut 223 include/21679)
            ppat_or/4643 =a (field_mut 224 include/21679)
            ppat_constraint/4644 =a (field_mut 225 include/21679)
            ppat_type/4645 =a (field_mut 226 include/21679)
            ppat_lazy/4646 =a (field_mut 227 include/21679)
            ppat_unpack/4647 =a (field_mut 228 include/21679)
            ppat_exception/4648 =a (field_mut 229 include/21679)
            ppat_extension/4649 =a (field_mut 230 include/21679)
            ppat_open/4650 =a (field_mut 231 include/21679)
            pstr/4651 =a (field_mut 232 include/21679)
            psig/4652 =a (field_mut 233 include/21679)
            ptyp/4653 =a (field_mut 234 include/21679)
            ppat/4654 =a (field_mut 235 include/21679)
            position/4655 =a (field_mut 236 include/21679)
            private_/4656 =a (field_mut 237 include/21679)
            public/4657 =a (field_mut 238 include/21679)
            nonrecursive/4658 =a (field_mut 239 include/21679)
            recursive/4659 =a (field_mut 240 include/21679)
            prf_loc/4660 =a (field_mut 241 include/21679)
            prf_attributes/4661 =a (field_mut 242 include/21679)
            rtag/4662 =a (field_mut 243 include/21679)
            rinherit/4663 =a (field_mut 244 include/21679)
            psig_loc/4664 =a (field_mut 245 include/21679)
            psig_value/4665 =a (field_mut 246 include/21679)
            psig_type/4666 =a (field_mut 247 include/21679)
            psig_typesubst/4667 =a (field_mut 248 include/21679)
            psig_typext/4668 =a (field_mut 249 include/21679)
            psig_exception/4669 =a (field_mut 250 include/21679)
            psig_module/4670 =a (field_mut 251 include/21679)
            psig_modsubst/4671 =a (field_mut 252 include/21679)
            psig_recmodule/4672 =a (field_mut 253 include/21679)
            psig_modtype/4673 =a (field_mut 254 include/21679)
            psig_modtypesubst/4674 =a (field_mut 255 include/21679)
            psig_open/4675 =a (field_mut 256 include/21679)
            psig_include/4676 =a (field_mut 257 include/21679)
            psig_class/4677 =a (field_mut 258 include/21679)
            psig_class_type/4678 =a (field_mut 259 include/21679)
            psig_attribute/4679 =a (field_mut 260 include/21679)
            psig_extension/4680 =a (field_mut 261 include/21679)
            pstr_loc/4681 =a (field_mut 262 include/21679)
            pstr_eval/4682 =a (field_mut 263 include/21679)
            pstr_value/4683 =a (field_mut 264 include/21679)
            pstr_primitive/4684 =a (field_mut 265 include/21679)
            pstr_type/4685 =a (field_mut 266 include/21679)
            pstr_typext/4686 =a (field_mut 267 include/21679)
            pstr_exception/4687 =a (field_mut 268 include/21679)
            pstr_module/4688 =a (field_mut 269 include/21679)
            pstr_recmodule/4689 =a (field_mut 270 include/21679)
            pstr_modtype/4690 =a (field_mut 271 include/21679)
            pstr_open/4691 =a (field_mut 272 include/21679)
            pstr_class/4692 =a (field_mut 273 include/21679)
            pstr_class_type/4693 =a (field_mut 274 include/21679)
            pstr_include/4694 =a (field_mut 275 include/21679)
            pstr_attribute/4695 =a (field_mut 276 include/21679)
            pstr_extension/4696 =a (field_mut 277 include/21679)
            toplevel_directive/4697 =a (field_mut 278 include/21679)
            ptop_def/4698 =a (field_mut 279 include/21679)
            ptop_dir/4699 =a (field_mut 280 include/21679)
            type_declaration_attributes/4700 =a (field_mut 281 include/21679)
            type_declaration/4701 =a (field_mut 282 include/21679)
            type_exception_attributes/4702 =a (field_mut 283 include/21679)
            type_exception/4703 =a (field_mut 284 include/21679)
            type_extension_attributes/4704 =a (field_mut 285 include/21679)
            type_extension/4705 =a (field_mut 286 include/21679)
            ptype_abstract/4706 =a (field_mut 287 include/21679)
            ptype_variant/4707 =a (field_mut 288 include/21679)
            ptype_record/4708 =a (field_mut 289 include/21679)
            ptype_open/4709 =a (field_mut 290 include/21679)
            value_binding_attributes/4710 =a (field_mut 291 include/21679)
            value_binding/4711 =a (field_mut 292 include/21679)
            value_description_attributes/4712 =a
              (field_mut 293 include/21679)
            value_description/4713 =a (field_mut 294 include/21679)
            covariant/4714 =a (field_mut 295 include/21679)
            contravariant/4715 =a (field_mut 296 include/21679)
            novariance/4716 =a (field_mut 297 include/21679)
            virtual_/4717 =a (field_mut 298 include/21679)
            concrete/4718 =a (field_mut 299 include/21679)
            pwith_type/4719 =a (field_mut 300 include/21679)
            pwith_module/4720 =a (field_mut 301 include/21679)
            pwith_modtype/4721 =a (field_mut 302 include/21679)
            pwith_modtypesubst/4722 =a (field_mut 303 include/21679)
            pwith_typesubst/4723 =a (field_mut 304 include/21679)
            pwith_modsubst/4724 =a (field_mut 305 include/21679)
            true_/4725 =a (field_mut 306 include/21679)
            false_/4726 =a (field_mut 307 include/21679)
            eint/4727 =a (field_mut 308 include/21679)
            echar/4728 =a (field_mut 309 include/21679)
            estring/4729 =a (field_mut 310 include/21679)
            efloat/4730 =a (field_mut 311 include/21679)
            eint32/4731 =a (field_mut 312 include/21679)
            eint64/4732 =a (field_mut 313 include/21679)
            enativeint/4733 =a (field_mut 314 include/21679)
            pint/4734 =a (field_mut 315 include/21679)
            pchar/4735 =a (field_mut 316 include/21679)
            pstring/4736 =a (field_mut 317 include/21679)
            pfloat/4737 =a (field_mut 318 include/21679)
            pint32/4738 =a (field_mut 319 include/21679)
            pint64/4739 =a (field_mut 320 include/21679)
            pnativeint/4740 =a (field_mut 321 include/21679)
            single_expr_payload/4741 =a (field_mut 322 include/21679)
            no_label/4742 =a (field_mut 323 include/21679)
            attribute/4743 =a (field_mut 324 include/21679)
            extension/4744 =a (field_mut 325 include/21679)
            elist/4745 =a (field_mut 326 include/21679)
            esequence/4746 =a (field_mut 327 include/21679)
            of_func/4748 =a (field_mut 328 include/21679)
            to_func/4749 =a (field_mut 329 include/21679)
            arg/4760 =
              (function name/4762 pattern/4763
                (funct-body Ppxlib__Deriving.Args.arg src/deriving.ml(85)<ghost>:2686-2815
                  (before Ppxlib__Deriving.Args.arg src/deriving.ml(86):2705-2815
                    (makeblock 0 name/4762
                      (after Ppxlib__Deriving.Args.arg src/deriving.ml(89):2757-2808
                        (apply
                          (field_imm 0
                            (field_imm 2 (global Ppxlib__Ast_pattern!)))
                          pattern/4763
                          (function x/4764
                            (funct-body Ppxlib__Deriving.Args.arg.(fun) src/deriving.ml(89):2791-2808
                              (before Ppxlib__Deriving.Args.arg.(fun) src/deriving.ml(89):2801-2807
                                (makeblock 0 x/4764))))))
                      0))))
            flag/4765 =
              (function name/4767
                (funct-body Ppxlib__Deriving.Args.flag src/deriving.ml(92)<ghost>:2828-2969
                  (before Ppxlib__Deriving.Args.flag src/deriving.ml(93):2839-2969
                    (let
                      (pattern/4768 =
                         (after Ppxlib__Deriving.Args.flag src/deriving.ml(93):2853-2886
                           (apply pexp_ident/4541
                             (after Ppxlib__Deriving.Args.flag src/deriving.ml(93):2864-2886
                               (apply lident/4592
                                 (after Ppxlib__Deriving.Args.flag src/deriving.ml(93):2872-2885
                                   (apply string/4445 name/4767)))))))
                      (before Ppxlib__Deriving.Args.flag src/deriving.ml(94):2894-2969
                        (makeblock 0 name/4767
                          (after Ppxlib__Deriving.Args.flag src/deriving.ml(94):2929-2967
                            (apply
                              (field_imm 0
                                (field_imm 2 (global Ppxlib__Ast_pattern!)))
                              pattern/4768 1))
                          0))))))
            empty/4772 = 0
            +>/4773 =
              (function a/4775 b/4776
                (funct-body Ppxlib__Deriving.Args.(+>) src/deriving.ml(101)<ghost>:3103-3120
                  (before Ppxlib__Deriving.Args.(+>) src/deriving.ml(101):3109-3120
                    (makeblock 0 a/4775 b/4776)))))
           (letrec
             (names/4777
                (function param/4784
                  (funct-body Ppxlib__Deriving.Args.names src/deriving.ml(103):3132-3239
                    (if param/4784
                      (let
                        (p/4782 =a (field_imm 1 param/4784)
                         t/4781 =a (field_imm 0 param/4784))
                        (before Ppxlib__Deriving.Args.names src/deriving.ml(105):3222-3239
                          (makeblock 0 (field_imm 0 p/4782)
                            (after Ppxlib__Deriving.Args.names src/deriving.ml(105):3232-3239
                              (apply names/4777 t/4781)))))
                      (before Ppxlib__Deriving.Args.names src/deriving.ml(104):3198-3200
                        0)))))
             (let
               (Instance/4917 =
                  (module-defn(Instance/4917) Ppxlib__Deriving.Args src/deriving.ml(107):3243-3961
                    (letrec
                      (create/4788
                         (function spec/4791 args/4792
                           (funct-body Ppxlib__Deriving.Args.Instance.create src/deriving.ml(112):3413-3825
                             (before Ppxlib__Deriving.Args.Instance.create src/deriving.ml(115):3528-3825
                               (if spec/4791
                                 (let
                                   (p/4795 =a (field_imm 1 spec/4791)
                                    t/4794 =a (field_imm 0 spec/4791))
                                   (before Ppxlib__Deriving.Args.Instance.create src/deriving.ml(118):3598-3825
                                     (let
                                       (value/4796 =
                                          (let
                                            (*match*/21682 =
                                               (after Ppxlib__Deriving.Args.Instance.create src/deriving.ml(119):3628-3654
                                                 (apply
                                                   (field_imm 69
                                                     (field_imm 91
                                                       (global Ppxlib__Import!)))
                                                   (field_imm 0 p/4795)
                                                   args/4792)))
                                            (if *match*/21682
                                              (let
                                                (expr/4870 =a
                                                   (field_imm 0
                                                     *match*/21682))
                                                (before Ppxlib__Deriving.Args.Instance.create src/deriving.ml(121):3719-3772
                                                  (after Ppxlib__Deriving.Args.Instance.create src/deriving.ml(121):3719-3772
                                                    (apply
                                                      (field_imm 1
                                                        (field_imm 2
                                                          (global Ppxlib__Ast_pattern!)))
                                                      (field_imm 1 p/4795)
                                                      (field_imm 1 expr/4870)
                                                      expr/4870))))
                                              (before Ppxlib__Deriving.Args.Instance.create src/deriving.ml(120):3682-3691
                                                (field_imm 2 p/4795)))))
                                       (before Ppxlib__Deriving.Args.Instance.create src/deriving.ml(123):3796-3825
                                         (makeblock 0
                                           (after Ppxlib__Deriving.Args.Instance.create src/deriving.ml(123):3804-3817
                                             (apply create/4788 t/4794
                                               args/4792))
                                           value/4796)))))
                                 (before Ppxlib__Deriving.Args.Instance.create src/deriving.ml(116):3559-3564
                                   0))))))
                      (letrec
                        (apply/4908
                           (function t/4911 f/4912
                             (funct-body Ppxlib__Deriving.Args.Instance.apply src/deriving.ml(125):3839-3955
                               (before Ppxlib__Deriving.Args.Instance.apply src/deriving.ml(126):3901-3955
                                 (if t/4911
                                   (let
                                     (x/4915 =a (field_imm 1 t/4911)
                                      t/4914 =a (field_imm 0 t/4911))
                                     (before Ppxlib__Deriving.Args.Instance.apply src/deriving.ml(126):3944-3955
                                       (after Ppxlib__Deriving.Args.Instance.apply src/deriving.ml(126):3944-3955
                                         (apply apply/4908 t/4914 f/4912
                                           x/4915))))
                                   (before Ppxlib__Deriving.Args.Instance.apply src/deriving.ml(126):3923-3924
                                     f/4912))))))
                        (pseudo Ppxlib__Deriving.Args.Instance src/deriving.ml(107):3261-3961
                          (makeblock 0 create/4788 apply/4908)))))
                apply/4918 =
                  (function t/4920 args/4921 f/4922
                    (funct-body Ppxlib__Deriving.Args.apply src/deriving.ml(129)<ghost>:3975-4027
                      (before Ppxlib__Deriving.Args.apply src/deriving.ml(129):3986-4027
                        (after Ppxlib__Deriving.Args.apply src/deriving.ml(129):3986-4027
                          (apply (field_imm 1 Instance/4917)
                            (after Ppxlib__Deriving.Args.apply src/deriving.ml(129):4001-4025
                              (apply (field_imm 0 Instance/4917) t/4920
                                args/4921))
                            f/4922))))))
               (pseudo Ppxlib__Deriving.Args src/deriving.ml(71):2395-4031
                 (makeblock 0 parse/4418 parse_res/4419 __/4421 __'/4422
                   drop/4423 as__/4424 alt/4425 alt_option/4426 |||/4427
                   map/4428 map'/4429 map_result/4430 >>|/4431 map0/4432
                   map1/4433 map2/4434 map0'/4435 map1'/4436 map2'/4437
                   map_value/4438 map_value'/4439 nil/4440 ^::/4441 many/4442
                   int/4443 char/4444 string/4445 float/4446 int32/4447
                   int64/4448 nativeint/4449 bool/4450 ebool/4451 pbool/4452
                   cst/4453 none/4454 some/4455 pair/4456 **/4457 triple/4458
                   loc/4459 pack0/4460 pack2/4461 pack3/4462 nolabel/4463
                   labelled/4464 optional/4465 binding_op/4466 case/4467
                   pcl_loc/4468 pcl_attributes/4469 pcl_constr/4470
                   pcl_structure/4471 pcl_fun/4472 pcl_apply/4473
                   pcl_let/4474 pcl_constraint/4475 pcl_extension/4476
                   pcl_open/4477 pcf_loc/4478 pcf_attributes/4479
                   pcf_inherit/4480 pcf_val/4481 pcf_method/4482
                   pcf_constraint/4483 pcf_initializer/4484
                   pcf_attribute/4485 pcf_extension/4486 cfk_virtual/4487
                   cfk_concrete/4488 class_infos_attributes/4489
                   class_infos/4490 class_signature/4491 class_structure/4492
                   pcty_loc/4493 pcty_attributes/4494 pcty_constr/4495
                   pcty_signature/4496 pcty_arrow/4497 pcty_extension/4498
                   pcty_open/4499 pctf_loc/4500 pctf_attributes/4501
                   pctf_inherit/4502 pctf_val/4503 pctf_method/4504
                   pctf_constraint/4505 pctf_attribute/4506
                   pctf_extension/4507 closed/4508 open_/4509
                   pconst_integer/4510 pconst_char/4511 pconst_string/4512
                   pconst_float/4513 pcstr_tuple/4514 pcstr_record/4515
                   constructor_declaration_attributes/4516
                   constructor_declaration/4517 ptyp_loc/4518
                   ptyp_attributes/4519 ptyp_any/4520 ptyp_var/4521
                   ptyp_arrow/4522 ptyp_tuple/4523 ptyp_constr/4524
                   ptyp_object/4525 ptyp_class/4526 ptyp_alias/4527
                   ptyp_variant/4528 ptyp_poly/4529 ptyp_package/4530
                   ptyp_extension/4531 upto/4532 downto_/4533 pdira_loc/4534
                   pdir_string/4535 pdir_int/4536 pdir_ident/4537
                   pdir_bool/4538 pexp_loc/4539 pexp_attributes/4540
                   pexp_ident/4541 pexp_constant/4542 pexp_let/4543
                   pexp_function/4544 pexp_fun/4545 pexp_apply/4546
                   pexp_match/4547 pexp_try/4548 pexp_tuple/4549
                   pexp_construct/4550 pexp_variant/4551 pexp_record/4552
                   pexp_field/4553 pexp_setfield/4554 pexp_array/4555
                   pexp_ifthenelse/4556 pexp_sequence/4557 pexp_while/4558
                   pexp_for/4559 pexp_constraint/4560 pexp_coerce/4561
                   pexp_send/4562 pexp_new/4563 pexp_setinstvar/4564
                   pexp_override/4565 pexp_letmodule/4566
                   pexp_letexception/4567 pexp_assert/4568 pexp_lazy/4569
                   pexp_poly/4570 pexp_object/4571 pexp_newtype/4572
                   pexp_pack/4573 pexp_open/4574 pexp_letop/4575
                   pexp_extension/4576 pexp_unreachable/4577
                   extension_constructor_attributes/4578
                   extension_constructor/4579 pext_decl/4580 pext_rebind/4581
                   unit/4582 named/4583 include_infos_attributes/4584
                   include_infos/4585 injective/4586 noinjectivity/4587
                   label_declaration_attributes/4588 label_declaration/4589
                   letop/4590 location/4591 lident/4592 ldot/4593 lapply/4594
                   module_binding_attributes/4595 module_binding/4596
                   module_declaration_attributes/4597 module_declaration/4598
                   pmod_loc/4599 pmod_attributes/4600 pmod_ident/4601
                   pmod_structure/4602 pmod_functor/4603 pmod_apply/4604
                   pmod_constraint/4605 pmod_unpack/4606 pmod_extension/4607
                   module_substitution_attributes/4608
                   module_substitution/4609 pmty_loc/4610
                   pmty_attributes/4611 pmty_ident/4612 pmty_signature/4613
                   pmty_functor/4614 pmty_with/4615 pmty_typeof/4616
                   pmty_extension/4617 pmty_alias/4618
                   module_type_declaration_attributes/4619
                   module_type_declaration/4620 immutable/4621 mutable_/4622
                   pof_loc/4623 pof_attributes/4624 otag/4625 oinherit/4626
                   open_infos_attributes/4627 open_infos/4628 override/4629
                   fresh/4630 ppat_loc/4631 ppat_attributes/4632
                   ppat_any/4633 ppat_var/4634 ppat_alias/4635
                   ppat_constant/4636 ppat_interval/4637 ppat_tuple/4638
                   ppat_construct/4639 ppat_variant/4640 ppat_record/4641
                   ppat_array/4642 ppat_or/4643 ppat_constraint/4644
                   ppat_type/4645 ppat_lazy/4646 ppat_unpack/4647
                   ppat_exception/4648 ppat_extension/4649 ppat_open/4650
                   pstr/4651 psig/4652 ptyp/4653 ppat/4654 position/4655
                   private_/4656 public/4657 nonrecursive/4658 recursive/4659
                   prf_loc/4660 prf_attributes/4661 rtag/4662 rinherit/4663
                   psig_loc/4664 psig_value/4665 psig_type/4666
                   psig_typesubst/4667 psig_typext/4668 psig_exception/4669
                   psig_module/4670 psig_modsubst/4671 psig_recmodule/4672
                   psig_modtype/4673 psig_modtypesubst/4674 psig_open/4675
                   psig_include/4676 psig_class/4677 psig_class_type/4678
                   psig_attribute/4679 psig_extension/4680 pstr_loc/4681
                   pstr_eval/4682 pstr_value/4683 pstr_primitive/4684
                   pstr_type/4685 pstr_typext/4686 pstr_exception/4687
                   pstr_module/4688 pstr_recmodule/4689 pstr_modtype/4690
                   pstr_open/4691 pstr_class/4692 pstr_class_type/4693
                   pstr_include/4694 pstr_attribute/4695 pstr_extension/4696
                   toplevel_directive/4697 ptop_def/4698 ptop_dir/4699
                   type_declaration_attributes/4700 type_declaration/4701
                   type_exception_attributes/4702 type_exception/4703
                   type_extension_attributes/4704 type_extension/4705
                   ptype_abstract/4706 ptype_variant/4707 ptype_record/4708
                   ptype_open/4709 value_binding_attributes/4710
                   value_binding/4711 value_description_attributes/4712
                   value_description/4713 covariant/4714 contravariant/4715
                   novariance/4716 virtual_/4717 concrete/4718
                   pwith_type/4719 pwith_module/4720 pwith_modtype/4721
                   pwith_modtypesubst/4722 pwith_typesubst/4723
                   pwith_modsubst/4724 true_/4725 false_/4726 eint/4727
                   echar/4728 estring/4729 efloat/4730 eint32/4731
                   eint64/4732 enativeint/4733 pint/4734 pchar/4735
                   pstring/4736 pfloat/4737 pint32/4738 pint64/4739
                   pnativeint/4740 single_expr_payload/4741 no_label/4742
                   attribute/4743 extension/4744 elist/4745 esequence/4746
                   of_func/4748 to_func/4749 arg/4760 flag/4765 empty/4772
                   +>/4773 names/4777 Instance/4917 apply/4918))))))
     ignore/4925 =
       (function param/4926
         (funct-body Ppxlib__Deriving.ignore src/deriving.ml(138)<ghost>:4278-4290
           (before Ppxlib__Deriving.ignore src/deriving.ml(138):4288-4290 0)))
     Generator/6276 =
       (module-defn(Generator/6276) Ppxlib__Deriving src/deriving.ml(146):4472-8020
         (let
           (deps/5187 =
              (function param/5191
                (funct-body Ppxlib__Deriving.Generator.deps src/deriving.ml(159)<ghost>:4784-4798
                  (let (t/5190 =a param/5191)
                    (before Ppxlib__Deriving.Generator.deps src/deriving.ml(159):4792-4798
                      (field_imm 3 t/5190)))))
            V2/5543 =
              (module-defn(V2/5543) Ppxlib__Deriving.Generator src/deriving.ml(161):4802-5179
                (let
                  (make/5192 =
                     (function *opt*/5194 *opt*/5196 *opt*/5199 spec/5202
                       gen/5203
                       (funct-body Ppxlib__Deriving.Generator.V2.make src/deriving.ml(162)<ghost>:4834-5041
                         (before Ppxlib__Deriving.Generator.V2.make src/deriving.ml(164):4925-5041
                           (seq
                             (if *opt*/5194
                               (let (*sth*/5195 =a (field_imm 0 *opt*/5194))
                                 (before Ppxlib__Deriving.Generator.V2.make src/deriving.ml(162):4851-4853
                                   *sth*/5195))
                               (before Ppxlib__Deriving.Generator.V2.make src/deriving.ml(162):4851-4853
                                 0))
                             (before Ppxlib__Deriving.Generator.V2.make src/deriving.ml(164):4925-5041
                               (let
                                 (deps/5197 =
                                    (if *opt*/5196
                                      (let
                                        (*sth*/5198 =a
                                           (field_imm 0 *opt*/5196))
                                        (before Ppxlib__Deriving.Generator.V2.make src/deriving.ml(162):4864-4866
                                          *sth*/5198))
                                      (before Ppxlib__Deriving.Generator.V2.make src/deriving.ml(162):4864-4866
                                        0)))
                                 (before Ppxlib__Deriving.Generator.V2.make src/deriving.ml(164):4925-5041
                                   (let
                                     (unused_code_warnings/5200 =
                                        (if *opt*/5199
                                          (let
                                            (*sth*/5201 =a
                                               (field_imm 0 *opt*/5199))
                                            (before Ppxlib__Deriving.Generator.V2.make src/deriving.ml(162):4893-4898
                                              *sth*/5201))
                                          (before Ppxlib__Deriving.Generator.V2.make src/deriving.ml(162):4893-4898
                                            0)))
                                     (before Ppxlib__Deriving.Generator.V2.make src/deriving.ml(164):4925-5041
                                       (let
                                         (arg_names/5204 =
                                            (after Ppxlib__Deriving.Generator.V2.make src/deriving.ml(164):4941-4977
                                              (apply
                                                (field_imm 36
                                                  (field_imm 57
                                                    (field_imm 96
                                                      (global Ppxlib__Import!))))
                                                (after Ppxlib__Deriving.Generator.V2.make src/deriving.ml(164):4960-4977
                                                  (apply
                                                    (field_imm 334 Args/4923)
                                                    spec/5202)))))
                                         (before Ppxlib__Deriving.Generator.V2.make src/deriving.ml(165):4987-5041
                                           (makeblock 0 spec/5202 gen/5203
                                             arg_names/5204 deps/5197
                                             unused_code_warnings/5200))))))))))))
                   make_noarg/5537 =
                     (function attributes/5539 deps/5540
                       unused_code_warnings/5541 gen/5542
                       (funct-body Ppxlib__Deriving.Generator.V2.make_noarg src/deriving.ml(167)<ghost>:5062-5173
                         (before Ppxlib__Deriving.Generator.V2.make_noarg src/deriving.ml(168):5114-5173
                           (after Ppxlib__Deriving.Generator.V2.make_noarg src/deriving.ml(168):5114-5173
                             (apply make/5192 attributes/5539 deps/5540
                               unused_code_warnings/5541
                               (field_imm 332 Args/4923) gen/5542))))))
                  (pseudo Ppxlib__Deriving.Generator.V2 src/deriving.ml(161):4814-5179
                    (makeblock 0 make/5192 make_noarg/5537))))
            make/5544 =
              (function attributes/5546 deps/5547 unused_code_warnings/5548
                spec/5549 gen/5550
                (funct-body Ppxlib__Deriving.Generator.make src/deriving.ml(171)<ghost>:5192-5355
                  (before Ppxlib__Deriving.Generator.make src/deriving.ml(172):5247-5355
                    (after Ppxlib__Deriving.Generator.make src/deriving.ml(172):5247-5355
                      (apply (field_imm 0 V2/5543) attributes/5546 deps/5547
                        unused_code_warnings/5548 spec/5549
                        (after Ppxlib__Deriving.Generator.make src/deriving.ml(173):5306-5355
                          (apply
                            (field_imm 4
                              (field_imm 2
                                (global Ppxlib__Expansion_context!)))
                            gen/5550)))))))
            make_noarg/5551 =
              (function attributes/5553 deps/5554 unused_code_warnings/5555
                gen/5556
                (funct-body Ppxlib__Deriving.Generator.make_noarg src/deriving.ml(175)<ghost>:5374-5483
                  (before Ppxlib__Deriving.Generator.make_noarg src/deriving.ml(176):5424-5483
                    (after Ppxlib__Deriving.Generator.make_noarg src/deriving.ml(176):5424-5483
                      (apply make/5544 attributes/5553 deps/5554
                        unused_code_warnings/5555 (field_imm 332 Args/4923)
                        gen/5556)))))
            merge_accepted_args/5557 =
              (function l/5559
                (funct-body Ppxlib__Deriving.Generator.merge_accepted_args src/deriving.ml(178)<ghost>:5511-5667
                  (before Ppxlib__Deriving.Generator.merge_accepted_args src/deriving.ml(179):5519-5667
                    (letrec
                      (loop/5560
                         (function acc/5561 param/5566
                           (funct-body Ppxlib__Deriving.Generator.merge_accepted_args.loop src/deriving.ml(179)<ghost>:5532-5632
                             (if param/5566
                               (let
                                 (*match*/21686 =a (field_imm 0 param/5566)
                                  t/5563 =a *match*/21686
                                  rest/5564 =a (field_imm 1 param/5566))
                                 (before Ppxlib__Deriving.Generator.merge_accepted_args.loop src/deriving.ml(181):5588-5632
                                   (after Ppxlib__Deriving.Generator.merge_accepted_args.loop src/deriving.ml(181):5588-5632
                                     (apply loop/5560
                                       (after Ppxlib__Deriving.Generator.merge_accepted_args.loop src/deriving.ml(181):5593-5627
                                         (apply
                                           (field_imm 6
                                             (field_imm 57
                                               (field_imm 96
                                                 (global Ppxlib__Import!))))
                                           acc/5561 (field_imm 2 t/5563)))
                                       rest/5564))))
                               (before Ppxlib__Deriving.Generator.merge_accepted_args.loop src/deriving.ml(180):5561-5564
                                 acc/5561)))))
                      (before Ppxlib__Deriving.Generator.merge_accepted_args src/deriving.ml(183):5644-5667
                        (after Ppxlib__Deriving.Generator.merge_accepted_args src/deriving.ml(183):5644-5667
                          (apply loop/5560
                            (field_imm 0
                              (field_imm 57
                                (field_imm 96 (global Ppxlib__Import!))))
                            l/5559)))))))
            check_arguments/5567 =
              (function name/5569 generators/5570 args/5571
                (funct-body Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(185)<ghost>:5691-7210
                  (before Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(186):5749-7210
                    (let
                      (empty_label_error/5572 =
                         (after Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(187):5779-6030
                           (apply
                             (field_imm 62
                               (field_imm 91 (global Ppxlib__Import!)))
                             args/5571
                             (function param/5595
                               (funct-body Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(187):5803-6030
                                 (let
                                   (e/5574 =a (field_imm 1 param/5595)
                                    label/5573 =a (field_imm 0 param/5595))
                                   (before Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(188):5832-6029
                                     (if
                                       (after Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(188):5835-5856
                                         (apply
                                           (field_imm 28
                                             (field_imm 96
                                               (global Ppxlib__Import!)))
                                           label/5573))
                                       (before Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(189):5874-6009
                                         (makeblock 0
                                           (after Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(190):5893-6009
                                             (apply
                                               (field_imm 13
                                                 (global Ppxlib__Location!))
                                               (field_imm 1 e/5574)
                                               [0:
                                                [11:
                                                 "Ppxlib.Deriving: generator arguments must be labelled"
                                                 0]
                                                "Ppxlib.Deriving: generator arguments must be labelled"]))))
                                       (before Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(192):6025-6029
                                         0)))))))))
                      (before Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(194):6042-7210
                        (let
                          (duplicate_argument_error/5596 =
                             (after Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(195):6079-6373
                               (apply
                                 (field_imm 4
                                   (field_imm 92 (global Ppxlib__Import!)))
                                 (after Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(195):6079-6349
                                   (apply
                                     (field_imm 2
                                       (field_imm 92
                                         (global Ppxlib__Import!)))
                                     (after Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(196):6098-6171
                                       (apply
                                         (field_imm 68
                                           (field_imm 91
                                             (global Ppxlib__Import!)))
                                         args/5571
                                         (function param/5605 param/5604
                                           : int
                                           (funct-body Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(196):6129-6170
                                             (let
                                               (b/5603 =a
                                                  (field_imm 0 param/5604)
                                                a/5602 =a
                                                  (field_imm 0 param/5605))
                                               (before Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(196):6151-6169
                                                 (after Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(196):6151-6169
                                                   (apply
                                                     (field_imm 46
                                                       (field_imm 96
                                                         (global Ppxlib__Import!)))
                                                     a/5602 b/5603))))))))
                                     (function param/5608
                                       (funct-body Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(197):6183-6349
                                         (let
                                           (e/5607 =a
                                              (field_imm 1 param/5608)
                                            label/5606 =a
                                              (field_imm 0 param/5608))
                                           (before Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(198):6212-6348
                                             (after Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(198):6212-6348
                                               (apply
                                                 (field_imm 13
                                                   (global Ppxlib__Location!))
                                                 (field_imm 1 e/5607)
                                                 [0:
                                                  [11:
                                                   "Ppxlib.Deriving: argument labelled '"
                                                   [2:
                                                    0
                                                    [11:
                                                     "' appears more than once"
                                                     0]]]
                                                  "Ppxlib.Deriving: argument labelled '%s' appears more than once"]
                                                 label/5606)))))))))))
                          (before Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(203):6385-7210
                            (let
                              (accepted_args/5609 =
                                 (after Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(203):6405-6435
                                   (apply merge_accepted_args/5557
                                     generators/5570)))
                              (before Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(204):6443-7210
                                (let
                                  (unaccepted_argument/5610 =
                                     (after Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(205):6475-7047
                                       (apply
                                         (field_imm 62
                                           (field_imm 91
                                             (global Ppxlib__Import!)))
                                         args/5571
                                         (function param/5619
                                           (funct-body Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(205):6499-7047
                                             (let
                                               (e/5612 =a
                                                  (field_imm 1 param/5619)
                                                label/5611 =a
                                                  (field_imm 0 param/5619))
                                               (before Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(206):6528-7046
                                                 (if
                                                   (not
                                                     (after Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(206):6535-6571
                                                       (apply
                                                         (field_imm 2
                                                           (field_imm 57
                                                             (field_imm 96
                                                               (global Ppxlib__Import!))))
                                                         label/5611
                                                         accepted_args/5609)))
                                                   (before Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(207):6589-7026
                                                     (let
                                                       (spellcheck_msg/5613 =
                                                          (let
                                                            (*match*/21687 =
                                                               (after Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(209):6646-6709
                                                                 (apply
                                                                   (field_imm 2
                                                                    (global Ppxlib__Spellcheck!))
                                                                   (after Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(209):6668-6703
                                                                    (apply
                                                                    (field_imm 22
                                                                    (field_imm 57
                                                                    (field_imm 96
                                                                    (global Ppxlib__Import!))))
                                                                    accepted_args/5609))
                                                                   label/5611)))
                                                            (if *match*/21687
                                                              (let
                                                                (s/5618 =a
                                                                   (field_imm 0
                                                                    *match*/21687))
                                                                (before Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(212):6782-6791
                                                                  (after Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(212):6782-6791
                                                                    (apply
                                                                    (field_imm 30
                                                                    (global Stdlib!))
                                                                    ".\n"
                                                                    s/5618))))
                                                              (before Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(211):6753-6755
                                                                ""))))
                                                       (before Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(214):6819-7026
                                                         (makeblock 0
                                                           (after Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(215):6838-7026
                                                             (apply
                                                               (field_imm 13
                                                                 (global Ppxlib__Location!))
                                                               (field_imm 1
                                                                 e/5612)
                                                               [0:
                                                                [11:
                                                                 "Ppxlib.Deriving: generator '"
                                                                 [2:
                                                                  0
                                                                  [11:
                                                                   "' doesn't accept argument '"
                                                                   [2:
                                                                    0
                                                                    [12:
                                                                    '\''
                                                                    [2: 0 0]]]]]]
                                                                "Ppxlib.Deriving: generator '%s' doesn't accept argument '%s'%s"]
                                                               name/5569
                                                               label/5611
                                                               spellcheck_msg/5613))))))
                                                   (before Ppxlib__Deriving.Generator.check_arguments.(fun) src/deriving.ml(219):7042-7046
                                                     0)))))))))
                                  (before Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(221):7059-7210
                                    (let
                                      (errors/5620 =
                                         (after Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(222):7078-7144
                                           (apply
                                             (field_imm 97
                                               (global Ppxlib__Import!))
                                             empty_label_error/5572
                                             (after Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(222):7098-7144
                                               (apply
                                                 (field_imm 97
                                                   (global Ppxlib__Import!))
                                                 duplicate_argument_error/5596
                                                 unaccepted_argument/5610)))))
                                      (before Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(224):7156-7210
                                        (if
                                          (after Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(224):7159-7181
                                            (apply
                                              (field_imm 73
                                                (global Ppxlib__Import!))
                                              (after Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(224):7159-7177
                                                (apply
                                                  (field_imm 0
                                                    (field_imm 91
                                                      (global Ppxlib__Import!)))
                                                  errors/5620))
                                              0))
                                          (before Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(224):7187-7192
                                            [0: 0])
                                          (before Ppxlib__Deriving.Generator.check_arguments src/deriving.ml(224):7198-7210
                                            (makeblock 1 errors/5620))))))))))))))))
            apply/5621 =
              (function param/5630 param/5629 ctxt/5625 x/5626 args/5627
                (funct-body Ppxlib__Deriving.Generator.apply src/deriving.ml(226)<ghost>:7224-7291
                  (let (t/5624 =a param/5630)
                    (before Ppxlib__Deriving.Generator.apply src/deriving.ml(226):7253-7291
                      (after Ppxlib__Deriving.Generator.apply src/deriving.ml(226):7253-7291
                        (apply (field_imm 336 Args/4923) (field_imm 0 t/5624)
                          args/5627
                          (after Ppxlib__Deriving.Generator.apply src/deriving.ml(226):7276-7291
                            (apply (field_imm 1 t/5624) ctxt/5625 x/5626))))))))
            apply_all/5631 =
              (function ctxt/5633 entry/5634 param/5648
                (funct-body Ppxlib__Deriving.Generator.apply_all src/deriving.ml(228)<ghost>:7309-7611
                  (let
                    (args/5637 =a (field_imm 2 param/5648)
                     generators/5636 =a (field_imm 1 param/5648)
                     name/5635 =a (field_imm 0 param/5648))
                    (before Ppxlib__Deriving.Generator.apply_all src/deriving.ml(229):7352-7611
                      (after Ppxlib__Deriving.Generator.apply_all src/deriving.ml(230):7375-7611
                        (apply
                          (field_imm 4
                            (field_imm 93 (global Ppxlib__Import!)))
                          (after Ppxlib__Deriving.Generator.apply_all src/deriving.ml(230):7375-7415
                            (apply check_arguments/5567
                              (field_imm 0 name/5635) generators/5636
                              args/5637))
                          (function param/5647
                            (funct-body Ppxlib__Deriving.Generator.apply_all.(fun) src/deriving.ml(230):7420-7611
                              (before Ppxlib__Deriving.Generator.apply_all.(fun) src/deriving.ml(231):7434-7611
                                (after Ppxlib__Deriving.Generator.apply_all.(fun) src/deriving.ml(231):7434-7611
                                  (apply
                                    (field_imm 48
                                      (field_imm 91 (global Ppxlib__Import!)))
                                    generators/5636
                                    (function param/5646
                                      (funct-body Ppxlib__Deriving.Generator.apply_all.(fun) src/deriving.ml(231):7457-7611
                                        (let (t/5645 =a param/5646)
                                          (before Ppxlib__Deriving.Generator.apply_all.(fun) src/deriving.ml(232):7479-7610
                                            (makeblock 0
                                              (after Ppxlib__Deriving.Generator.apply_all.(fun) src/deriving.ml(233):7499-7542
                                                (apply apply/5621 t/5645
                                                  (field_imm 0 name/5635)
                                                  ctxt/5633 entry/5634
                                                  args/5637))
                                              (field_int 4 t/5645)))))))))))))))))
            apply_all/5649 =
              (function ctxt/5650 entry/5651 generators/5652 ext_to_item/5653
                (funct-body Ppxlib__Deriving.Generator.apply_all src/deriving.ml(237)<ghost>:7629-8016
                  (before Ppxlib__Deriving.Generator.apply_all src/deriving.ml(238):7670-8016
                    (let
                      (l/5654 =
                         (after Ppxlib__Deriving.Generator.apply_all src/deriving.ml(238):7678-7724
                           (apply
                             (field_imm 48
                               (field_imm 91 (global Ppxlib__Import!)))
                             generators/5652
                             (after Ppxlib__Deriving.Generator.apply_all src/deriving.ml(238):7701-7724
                               (apply apply_all/5631 ctxt/5650 entry/5651)))))
                      (before Ppxlib__Deriving.Generator.apply_all src/deriving.ml(239):7732-8016
                        (let
                          (*match*/21698 =
                             (after Ppxlib__Deriving.Generator.apply_all src/deriving.ml(240):7753-7820
                               (apply
                                 (field_imm 57
                                   (field_imm 91 (global Ppxlib__Import!)))
                                 (function param/6273
                                   (funct-body Ppxlib__Deriving.Generator.apply_all.(fun) src/deriving.ml(240):7772-7818
                                     (switch* param/6273
                                      case tag 0:
                                       (let
                                         (e/5658 =a (field_imm 0 param/6273))
                                         (before Ppxlib__Deriving.Generator.apply_all.(fun) src/deriving.ml(240):7790-7796
                                           (makeblock 0 e/5658)))
                                      case tag 1:
                                       (let
                                         (e/5659 =a (field_imm 0 param/6273))
                                         (before Ppxlib__Deriving.Generator.apply_all.(fun) src/deriving.ml(240):7810-7817
                                           (makeblock 1 e/5659))))))
                                 l/5654))
                           lerr/5656 =a (field_imm 1 *match*/21698)
                           l1/5655 =a (field_imm 0 *match*/21698))
                          (before Ppxlib__Deriving.Generator.apply_all src/deriving.ml(242):7832-8016
                            (let
                              (lerr/6274 =
                                 (after Ppxlib__Deriving.Generator.apply_all src/deriving.ml(243):7849-7937
                                   (apply
                                     (after Ppxlib__Deriving.Generator.apply_all src/deriving.ml(244):7875-7937
                                       (let
                                         (func/21692 =
                                            (field_imm 48
                                              (field_imm 91
                                                (global Ppxlib__Import!)))
                                          arg/21693 =
                                            (function err/6275
                                              (funct-body Ppxlib__Deriving.Generator.apply_all.(fun) src/deriving.ml(244):7887-7937
                                                (before Ppxlib__Deriving.Generator.apply_all.(fun) src/deriving.ml(244):7899-7936
                                                  (after Ppxlib__Deriving.Generator.apply_all.(fun) src/deriving.ml(244):7899-7936
                                                    (apply ext_to_item/5653
                                                      (field_imm 2
                                                        (global Ppxlib__Location!))
                                                      err/6275 0))))))
                                         (function param/21694 stub
                                           (apply func/21692 param/21694
                                             arg/21693))))
                                     (after Ppxlib__Deriving.Generator.apply_all src/deriving.ml(243):7849-7865
                                       (apply
                                         (field_imm 52
                                           (field_imm 91
                                             (global Ppxlib__Import!)))
                                         lerr/5656)))))
                              (before Ppxlib__Deriving.Generator.apply_all src/deriving.ml(246):7949-8016
                                (after Ppxlib__Deriving.Generator.apply_all src/deriving.ml(246):7949-8016
                                  (apply
                                    (field_imm 97 (global Ppxlib__Import!))
                                    (after Ppxlib__Deriving.Generator.apply_all src/deriving.ml(246):7949-7963
                                      (apply
                                        (field_imm 52
                                          (field_imm 91
                                            (global Ppxlib__Import!)))
                                        l1/5655))
                                    (makeblock 0 (makeblock 0 lerr/6274 0) 0)))))))))))))
           (pseudo Ppxlib__Deriving.Generator src/deriving.ml(146):4491-8020
             (makeblock 0 deps/5187 V2/5543 make/5544 make_noarg/5551
               merge_accepted_args/5557 check_arguments/5567 apply/5621
               apply_all/5649))))
     Deriver/6977 =
       (module-defn(Deriver/6977) Ppxlib__Deriving src/deriving.ml(249):8022-17263
         (let
           (Actual_deriver/6288 =
              (module-defn(Actual_deriver/6288) Ppxlib__Deriving.Deriver src/deriving.ml(250):8048-8877
                (pseudo Ppxlib__Deriving.Deriver.Actual_deriver src/deriving.ml(250):8072-8877
                  (makeblock 0)))
            Alias/6298 =
              (module-defn(Alias/6298) Ppxlib__Deriving.Deriver src/deriving.ml(270):8881-9221
                (pseudo Ppxlib__Deriving.Deriver.Alias src/deriving.ml(270):8896-9221
                  (makeblock 0)))
            Field/6331 =
              (module-defn(Field/6331) Ppxlib__Deriving.Deriver src/deriving.ml(283):9225-10946
                (let
                  (str_type_decl/6307 =
                     (makeblock 0 "type" 0
                       (function t/6308
                         (funct-body Ppxlib__Deriving.Deriver.Field.str_type_decl.(fun) src/deriving.ml(297):9535-9561
                           (before Ppxlib__Deriving.Deriver.Field.str_type_decl.(fun) src/deriving.ml(297):9545-9560
                             (field_imm 1 t/6308))))
                       (function t/6309
                         (funct-body Ppxlib__Deriving.Deriver.Field.str_type_decl.(fun) src/deriving.ml(298):9581-9607
                           (before Ppxlib__Deriving.Deriver.Field.str_type_decl.(fun) src/deriving.ml(298):9591-9606
                             (field_imm 0 t/6309)))))
                   str_type_ext/6310 =
                     (makeblock 0 "type extension" 0
                       (function t/6311
                         (funct-body Ppxlib__Deriving.Deriver.Field.str_type_ext.(fun) src/deriving.ml(305):9716-9741
                           (before Ppxlib__Deriving.Deriver.Field.str_type_ext.(fun) src/deriving.ml(305):9726-9740
                             (field_imm 2 t/6311))))
                       (function t/6312
                         (funct-body Ppxlib__Deriving.Deriver.Field.str_type_ext.(fun) src/deriving.ml(306):9761-9786
                           (before Ppxlib__Deriving.Deriver.Field.str_type_ext.(fun) src/deriving.ml(306):9771-9785
                             (field_imm 1 t/6312)))))
                   str_exception/6313 =
                     (makeblock 0 "exception" 0
                       (function t/6314
                         (funct-body Ppxlib__Deriving.Deriver.Field.str_exception.(fun) src/deriving.ml(313):9891-9917
                           (before Ppxlib__Deriving.Deriver.Field.str_exception.(fun) src/deriving.ml(313):9901-9916
                             (field_imm 3 t/6314))))
                       (function t/6315
                         (funct-body Ppxlib__Deriving.Deriver.Field.str_exception.(fun) src/deriving.ml(314):9937-9963
                           (before Ppxlib__Deriving.Deriver.Field.str_exception.(fun) src/deriving.ml(314):9947-9962
                             (field_imm 2 t/6315)))))
                   str_module_type_decl/6316 =
                     (makeblock 0 "module type" 0
                       (function t/6317
                         (funct-body Ppxlib__Deriving.Deriver.Field.str_module_type_decl.(fun) src/deriving.ml(321):10077-10110
                           (before Ppxlib__Deriving.Deriver.Field.str_module_type_decl.(fun) src/deriving.ml(321):10087-10109
                             (field_imm 4 t/6317))))
                       (function t/6318
                         (funct-body Ppxlib__Deriving.Deriver.Field.str_module_type_decl.(fun) src/deriving.ml(322):10130-10163
                           (before Ppxlib__Deriving.Deriver.Field.str_module_type_decl.(fun) src/deriving.ml(322):10140-10162
                             (field_imm 3 t/6318)))))
                   sig_type_decl/6319 =
                     (makeblock 0 "signature type" 1
                       (function t/6320
                         (funct-body Ppxlib__Deriving.Deriver.Field.sig_type_decl.(fun) src/deriving.ml(329):10273-10299
                           (before Ppxlib__Deriving.Deriver.Field.sig_type_decl.(fun) src/deriving.ml(329):10283-10298
                             (field_imm 5 t/6320))))
                       (function t/6321
                         (funct-body Ppxlib__Deriving.Deriver.Field.sig_type_decl.(fun) src/deriving.ml(330):10319-10345
                           (before Ppxlib__Deriving.Deriver.Field.sig_type_decl.(fun) src/deriving.ml(330):10329-10344
                             (field_imm 4 t/6321)))))
                   sig_type_ext/6322 =
                     (makeblock 0 "signature type extension" 1
                       (function t/6323
                         (funct-body Ppxlib__Deriving.Deriver.Field.sig_type_ext.(fun) src/deriving.ml(337):10464-10489
                           (before Ppxlib__Deriving.Deriver.Field.sig_type_ext.(fun) src/deriving.ml(337):10474-10488
                             (field_imm 6 t/6323))))
                       (function t/6324
                         (funct-body Ppxlib__Deriving.Deriver.Field.sig_type_ext.(fun) src/deriving.ml(338):10509-10534
                           (before Ppxlib__Deriving.Deriver.Field.sig_type_ext.(fun) src/deriving.ml(338):10519-10533
                             (field_imm 5 t/6324)))))
                   sig_exception/6325 =
                     (makeblock 0 "signature exception" 1
                       (function t/6326
                         (funct-body Ppxlib__Deriving.Deriver.Field.sig_exception.(fun) src/deriving.ml(345):10649-10675
                           (before Ppxlib__Deriving.Deriver.Field.sig_exception.(fun) src/deriving.ml(345):10659-10674
                             (field_imm 7 t/6326))))
                       (function t/6327
                         (funct-body Ppxlib__Deriving.Deriver.Field.sig_exception.(fun) src/deriving.ml(346):10695-10721
                           (before Ppxlib__Deriving.Deriver.Field.sig_exception.(fun) src/deriving.ml(346):10705-10720
                             (field_imm 6 t/6327)))))
                   sig_module_type_decl/6328 =
                     (makeblock 0 "signature module type" 1
                       (function t/6329
                         (funct-body Ppxlib__Deriving.Deriver.Field.sig_module_type_decl.(fun) src/deriving.ml(353):10845-10878
                           (before Ppxlib__Deriving.Deriver.Field.sig_module_type_decl.(fun) src/deriving.ml(353):10855-10877
                             (field_imm 8 t/6329))))
                       (function t/6330
                         (funct-body Ppxlib__Deriving.Deriver.Field.sig_module_type_decl.(fun) src/deriving.ml(354):10898-10931
                           (before Ppxlib__Deriving.Deriver.Field.sig_module_type_decl.(fun) src/deriving.ml(354):10908-10930
                             (field_imm 7 t/6330))))))
                  (pseudo Ppxlib__Deriving.Deriver.Field src/deriving.ml(283):9240-10946
                    (makeblock 0 str_type_decl/6307 str_type_ext/6310
                      str_exception/6313 str_module_type_decl/6316
                      sig_type_decl/6319 sig_type_ext/6322 sig_exception/6325
                      sig_module_type_decl/6328))))
            T/6336 =
              (makeblock 248 "Ppxlib__Deriving.Deriver.T"
                (caml_fresh_oo_id 0))
            derivers/6337 =
              (function param/6342
                (funct-body Ppxlib__Deriving.Deriver.derivers src/deriving.ml(361)<ghost>:11067-11186
                  (before Ppxlib__Deriving.Deriver.derivers src/deriving.ml(362):11076-11186
                    (after Ppxlib__Deriving.Deriver.derivers src/deriving.ml(362):11076-11186
                      (apply
                        (field_imm 62
                          (field_imm 91 (global Ppxlib__Import!)))
                        (after Ppxlib__Deriving.Deriver.derivers src/deriving.ml(362):11092-11118
                          (apply (field_imm 2 (global Ppx_derivers!)) 0))
                        (function param/6341
                          (funct-body Ppxlib__Deriving.Deriver.derivers.(fun) src/deriving.ml(362):11122-11186
                            (let
                              (*match*/21707 =a (field_imm 1 param/6341)
                               tag/21708 =a (field_imm 0 *match*/21707))
                              (if (== tag/21708 T/6336)
                                (let
                                  (t/6340 =a (field_imm 1 *match*/21707)
                                   name/6339 =a (field_imm 0 param/6341))
                                  (before Ppxlib__Deriving.Deriver.derivers.(fun) src/deriving.ml(363):11153-11167
                                    (makeblock 0
                                      (makeblock 0 name/6339 t/6340))))
                                (before Ppxlib__Deriving.Deriver.derivers.(fun) src/deriving.ml(364):11181-11185
                                  0))))))))))
            Not_supported/6343 =
              (makeblock 248 "Ppxlib__Deriving.Deriver.Not_supported"
                (caml_fresh_oo_id 0))
            resolve_actual_derivers/6344 =
              (function field/6346 name/6347
                (funct-body Ppxlib__Deriving.Deriver.resolve_actual_derivers src/deriving.ml(368)<ghost>:11255-11781
                  (before Ppxlib__Deriving.Deriver.resolve_actual_derivers src/deriving.ml(369):11291-11781
                    (letrec
                      (loop/6348
                         (function name/6349 collected/6350
                           (funct-body Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop src/deriving.ml(369)<ghost>:11304-11746
                             (before Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop src/deriving.ml(370):11327-11746
                               (if
                                 (after Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop src/deriving.ml(371):11338-11431
                                   (apply
                                     (field_imm 21
                                       (field_imm 91
                                         (global Ppxlib__Import!)))
                                     (function d/6351
                                       (funct-body Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop.(fun) src/deriving.ml(371):11363-11431
                                         (before Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop.(fun) src/deriving.ml(372):11406-11430
                                           (after Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop.(fun) src/deriving.ml(372):11406-11430
                                             (apply
                                               (field_imm 47
                                                 (field_imm 96
                                                   (global Ppxlib__Import!)))
                                               (field_imm 0 d/6351)
                                               name/6349)))))
                                     collected/6350))
                                 (before Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop src/deriving.ml(373):11443-11452
                                   collected/6350)
                                 (before Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop src/deriving.ml(375):11472-11746
                                   (let
                                     (*match*/21709 =
                                        (after Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop src/deriving.ml(375):11478-11502
                                          (apply
                                            (field_imm 1
                                              (global Ppx_derivers!))
                                            name/6349)))
                                     (catch
                                       (if *match*/21709
                                         (let
                                           (*match*/21710 =a
                                              (field_imm 0 *match*/21709)
                                            tag/21712 =a
                                              (field_imm 0 *match*/21710))
                                           (if (== tag/21712 T/6336)
                                             (let
                                               (*match*/21711 =a
                                                  (field_imm 1 *match*/21710))
                                               (switch* *match*/21711
                                                case tag 0:
                                                 (let
                                                   (drv/6352 =a
                                                      (field_imm 0
                                                        *match*/21711))
                                                   (before Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop src/deriving.ml(376):11551-11567
                                                     (makeblock 0 drv/6352
                                                       collected/6350)))
                                                case tag 1:
                                                 (let
                                                   (alias/6353 =a
                                                      (field_imm 0
                                                        *match*/21711))
                                                   (before Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop src/deriving.ml(378):11616-11704
                                                     (let
                                                       (set/6354 =
                                                          (after Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop src/deriving.ml(378):11626-11645
                                                            (apply
                                                              (field_imm 3
                                                                field/6346)
                                                              alias/6353)))
                                                       (before Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop src/deriving.ml(379):11661-11704
                                                         (after Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop src/deriving.ml(379):11661-11704
                                                           (apply
                                                             (field_imm 50
                                                               (field_imm 91
                                                                 (global Ppxlib__Import!)))
                                                             set/6354
                                                             collected/6350
                                                             loop/6348))))))))
                                             (exit 8)))
                                         (exit 8))
                                      with (8)
                                       (before Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop src/deriving.ml(380):11720-11746
                                         (raise
                                           (after Ppxlib__Deriving.Deriver.resolve_actual_derivers.loop src/deriving.ml(380):11720-11746
                                             (makeblock 0 Not_supported/6343
                                               name/6349))))))))))))
                      (before Ppxlib__Deriving.Deriver.resolve_actual_derivers src/deriving.ml(382):11758-11781
                        (after Ppxlib__Deriving.Deriver.resolve_actual_derivers src/deriving.ml(382):11758-11781
                          (apply
                            (field_imm 8
                              (field_imm 91 (global Ppxlib__Import!)))
                            (after Ppxlib__Deriving.Deriver.resolve_actual_derivers src/deriving.ml(382):11767-11781
                              (apply loop/6348 name/6347 0)))))))))
            resolve_internal/6355 =
              (function field/6357 name/6358
                (funct-body Ppxlib__Deriving.Deriver.resolve_internal src/deriving.ml(384)<ghost>:11806-12015
                  (before Ppxlib__Deriving.Deriver.resolve_internal src/deriving.ml(385):11842-12015
                    (after Ppxlib__Deriving.Deriver.resolve_internal src/deriving.ml(385):11842-12015
                      (apply
                        (field_imm 48
                          (field_imm 91 (global Ppxlib__Import!)))
                        (after Ppxlib__Deriving.Deriver.resolve_internal src/deriving.ml(385):11851-11887
                          (apply resolve_actual_derivers/6344 field/6357
                            name/6358))
                        (function drv/6359
                          (funct-body Ppxlib__Deriving.Deriver.resolve_internal.(fun) src/deriving.ml(385):11891-12015
                            (before Ppxlib__Deriving.Deriver.resolve_internal.(fun) src/deriving.ml(386):11911-12014
                              (let
                                (*match*/21713 =
                                   (after Ppxlib__Deriving.Deriver.resolve_internal.(fun) src/deriving.ml(386):11917-11930
                                     (apply (field_imm 2 field/6357)
                                       drv/6359)))
                                (if *match*/21713
                                  (let
                                    (g/6360 =a (field_imm 0 *match*/21713))
                                    (before Ppxlib__Deriving.Deriver.resolve_internal.(fun) src/deriving.ml(388):12001-12014
                                      (makeblock 0 (field_imm 0 drv/6359)
                                        g/6360)))
                                  (before Ppxlib__Deriving.Deriver.resolve_internal.(fun) src/deriving.ml(387):11954-11980
                                    (raise
                                      (after Ppxlib__Deriving.Deriver.resolve_internal.(fun) src/deriving.ml(387):11954-11980
                                        (makeblock 0 Not_supported/6343
                                          name/6358))))))))))))))
            supported_for/6362 =
              (function field/6364
                (funct-body Ppxlib__Deriving.Deriver.supported_for src/deriving.ml(390)<ghost>:12037-12282
                  (before Ppxlib__Deriving.Deriver.supported_for src/deriving.ml(391):12049-12282
                    (after Ppxlib__Deriving.Deriver.supported_for src/deriving.ml(391):12049-12282
                      (apply
                        (field_imm 22
                          (field_imm 57
                            (field_imm 96 (global Ppxlib__Import!))))
                        (after Ppxlib__Deriving.Deriver.supported_for src/deriving.ml(391):12049-12255
                          (apply
                            (field_imm 16
                              (field_imm 91 (global Ppxlib__Import!)))
                            (function acc/6365 param/6367
                              (funct-body Ppxlib__Deriving.Deriver.supported_for.(fun) src/deriving.ml(391):12104-12255
                                (let (name/6366 =a (field_imm 0 param/6367))
                                  (before Ppxlib__Deriving.Deriver.supported_for.(fun) src/deriving.ml(392):12134-12254
                                    (catch
                                      (try
                                        (exit 9
                                          (after Ppxlib__Deriving.Deriver.supported_for.(fun) src/deriving.ml(392):12140-12167
                                            (apply resolve_internal/6355
                                              field/6364 name/6366)))
                                       with exn/21715
                                        (let
                                          (tag/21717 =a
                                             (field_imm 0 exn/21715))
                                          (if
                                            (== tag/21717 Not_supported/6343)
                                            (before Ppxlib__Deriving.Deriver.supported_for.(fun) src/deriving.ml(394):12251-12254
                                              acc/6365)
                                            (reraise exn/21715))))
                                     with (9 val/21714)
                                      (before Ppxlib__Deriving.Deriver.supported_for.(fun) src/deriving.ml(393):12188-12211
                                        (after Ppxlib__Deriving.Deriver.supported_for.(fun) src/deriving.ml(393):12188-12211
                                          (apply
                                            (field_imm 3
                                              (field_imm 57
                                                (field_imm 96
                                                  (global Ppxlib__Import!))))
                                            name/6366 acc/6365))))))))
                            (field_imm 0
                              (field_imm 57
                                (field_imm 96 (global Ppxlib__Import!))))
                            (after Ppxlib__Deriving.Deriver.supported_for src/deriving.ml(391):12064-12077
                              (apply derivers/6337 0)))))))))
            not_supported/6368 =
              (function field/6370 *opt*/6371 name/6374
                (funct-body Ppxlib__Deriving.Deriver.not_supported src/deriving.ml(397)<ghost>:12304-12708
                  (before Ppxlib__Deriving.Deriver.not_supported src/deriving.ml(398):12361-12708
                    (let
                      (spellcheck/6372 =
                         (if *opt*/6371
                           (let (*sth*/6373 =a (field_imm 0 *opt*/6371))
                             (before Ppxlib__Deriving.Deriver.not_supported src/deriving.ml(397):12344-12348
                               *sth*/6373))
                           (before Ppxlib__Deriving.Deriver.not_supported src/deriving.ml(397):12344-12348
                             1)))
                      (before Ppxlib__Deriving.Deriver.not_supported src/deriving.ml(398):12361-12708
                        (let
                          (spellcheck_msg/6375 =
                             (if spellcheck/6372
                               (before Ppxlib__Deriving.Deriver.not_supported src/deriving.ml(400):12415-12529
                                 (let
                                   (*match*/21719 =
                                      (after Ppxlib__Deriving.Deriver.not_supported src/deriving.ml(400):12421-12473
                                        (apply
                                          (field_imm 2
                                            (global Ppxlib__Spellcheck!))
                                          (after Ppxlib__Deriving.Deriver.not_supported src/deriving.ml(400):12443-12464
                                            (apply supported_for/6362
                                              field/6370))
                                          (field_imm 0 name/6374))))
                                   (if *match*/21719
                                     (let
                                       (s/6376 =a (field_imm 0 *match*/21719))
                                       (before Ppxlib__Deriving.Deriver.not_supported src/deriving.ml(402):12520-12529
                                         (after Ppxlib__Deriving.Deriver.not_supported src/deriving.ml(402):12520-12529
                                           (apply
                                             (field_imm 30 (global Stdlib!))
                                             ".\n" s/6376))))
                                     (before Ppxlib__Deriving.Deriver.not_supported src/deriving.ml(401):12497-12499
                                       ""))))
                               (before Ppxlib__Deriving.Deriver.not_supported src/deriving.ml(403):12541-12543
                                 "")))
                          (before Ppxlib__Deriving.Deriver.not_supported src/deriving.ml(405):12555-12708
                            (after Ppxlib__Deriving.Deriver.not_supported src/deriving.ml(405):12555-12708
                              (apply
                                (field_imm 13 (global Ppxlib__Location!))
                                (field_imm 1 name/6374)
                                [0:
                                 [11:
                                  "Ppxlib.Deriving: '"
                                  [2:
                                   0
                                   [11:
                                    "' is not a supported "
                                    [2:
                                     0 [11: " deriving generator" [2: 0 0]]]]]]
                                 "Ppxlib.Deriving: '%s' is not a supported %s deriving generator%s"]
                                (field_imm 0 name/6374)
                                (field_imm 0 field/6370) spellcheck_msg/6375)))))))))
            resolve/6377 =
              (function field/6379 name/6380
                (funct-body Ppxlib__Deriving.Deriver.resolve src/deriving.ml(409)<ghost>:12724-12894
                  (before Ppxlib__Deriving.Deriver.resolve src/deriving.ml(410):12741-12894
                    (try
                      (makeblock 0
                        (after Ppxlib__Deriving.Deriver.resolve src/deriving.ml(410):12748-12781
                          (apply resolve_internal/6355 field/6379
                            (field_imm 0 name/6380))))
                     with exn/21720
                      (let (tag/21721 =a (field_imm 0 exn/21720))
                        (if (== tag/21721 Not_supported/6343)
                          (let (name'/6381 =a (field_imm 1 exn/21720))
                            (before Ppxlib__Deriving.Deriver.resolve src/deriving.ml(412):12820-12894
                              (makeblock 1
                                (after Ppxlib__Deriving.Deriver.resolve src/deriving.ml(412):12826-12894
                                  (apply not_supported/6368 field/6379
                                    (makeblock 0
                                      (after Ppxlib__Deriving.Deriver.resolve src/deriving.ml(412):12859-12888
                                        (apply
                                          (field_imm 47
                                            (field_imm 96
                                              (global Ppxlib__Import!)))
                                          (field_imm 0 name/6380) name'/6381)))
                                    name/6380)))))
                          (reraise exn/21720)))))))
            resolve_all/6382 =
              (function field/6384 derivers/6385
                (funct-body Ppxlib__Deriving.Deriver.resolve_all src/deriving.ml(414)<ghost>:12914-15707
                  (before Ppxlib__Deriving.Deriver.resolve_all src/deriving.ml(415):12935-15707
                    (let
                      (*match*/21735 =
                         (after Ppxlib__Deriving.Deriver.resolve_all src/deriving.ml(416):12991-13751
                           (apply
                             (function param/6397
                               (funct-body Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(432):13711-13751
                                 (let
                                   (l2/6396 =a (field_imm 1 param/6397)
                                    l1/6395 =a (field_imm 0 param/6397))
                                   (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(432):13727-13751
                                     (makeblock 0
                                       (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(432):13728-13746
                                         (apply
                                           (field_imm 61
                                             (field_imm 91
                                               (global Ppxlib__Import!)))
                                           l1/6395))
                                       l2/6396)))))
                             (after Ppxlib__Deriving.Deriver.resolve_all src/deriving.ml(416):12991-13701
                               (apply
                                 (field_imm 57
                                   (field_imm 91 (global Ppxlib__Import!)))
                                 (function param/6394
                                   (funct-body Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(417):13018-13684
                                     (let
                                       (args/6389 =a (field_imm 1 param/6394)
                                        name/6388 =a (field_imm 0 param/6394))
                                       (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(418):13049-13683
                                         (let
                                           (*match*/21728 =
                                              (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(418):13055-13083
                                                (apply
                                                  (field_imm 1
                                                    (global Ppx_derivers!))
                                                  (field_imm 0 name/6388))))
                                           (if *match*/21728
                                             (let
                                               (*match*/21729 =a
                                                  (field_imm 0 *match*/21728)
                                                tag/21731 =a
                                                  (field_imm 0 *match*/21729))
                                               (if (== tag/21731 T/6336)
                                                 (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(420):13175-13577
                                                   (switch* args/6389
                                                    case tag 0:
                                                     (let
                                                       (l/6391 =a
                                                          (field_imm 0
                                                            args/6389))
                                                       (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(424):13393-13421
                                                         (makeblock 0
                                                           (makeblock 0
                                                             (makeblock 0
                                                               name/6388
                                                               l/6391)))))
                                                    case tag 1:
                                                     (let
                                                       (msg/6393 =a
                                                          (field_imm 1
                                                            args/6389)
                                                        loc/6392 =a
                                                          (field_imm 0
                                                            args/6389))
                                                       (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(426):13485-13576
                                                         (makeblock 1
                                                           (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(427):13518-13576
                                                             (apply
                                                               (field_imm 13
                                                                 (global Ppxlib__Location!))
                                                               loc/6392
                                                               [0:
                                                                [11:
                                                                 "Ppxlib.Deriving: "
                                                                 [2: 0 0]]
                                                                "Ppxlib.Deriving: %s"]
                                                               msg/6393)))))))
                                                 (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(430):13667-13683
                                                   [0: 0])))
                                             (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(419):13109-13148
                                               (makeblock 1
                                                 (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(419):13122-13148
                                                   (apply not_supported/6368
                                                     field/6384 0 name/6388))))))))))
                                 derivers/6385))))
                       derivers_and_args_errors/6387 =a
                         (field_imm 1 *match*/21735)
                       derivers_and_args/6386 =a (field_imm 0 *match*/21735))
                      (before Ppxlib__Deriving.Deriver.resolve_all src/deriving.ml(435):13801-15707
                        (let
                          (seen/6398 =
                             (after Ppxlib__Deriving.Deriver.resolve_all src/deriving.ml(435):13812-13829
                               (apply
                                 (field_imm 0
                                   (field_imm 87 (global Ppxlib__Import!)))
                                 0 16)))
                          (before Ppxlib__Deriving.Deriver.resolve_all src/deriving.ml(436):13837-15707
                            (let
                              (*match*/21727 =
                                 (after Ppxlib__Deriving.Deriver.resolve_all src/deriving.ml(437):13868-15648
                                   (apply
                                     (field_imm 16
                                       (field_imm 91
                                         (global Ppxlib__Import!)))
                                     (function param/6746 param/6745
                                       (funct-body Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(438):13927-15648
                                         (let
                                           (args/6733 =a
                                              (field_imm 1 param/6745)
                                            name/6732 =a
                                              (field_imm 0 param/6745)
                                            errors/6731 =a
                                              (field_imm 1 param/6746)
                                            result/6730 =a
                                              (field_imm 0 param/6746))
                                           (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(439):13975-15647
                                             (let
                                               (*match*/21723 =
                                                  (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(439):13981-13999
                                                    (apply resolve/6377
                                                      field/6384 name/6732)))
                                               (switch* *match*/21723
                                                case tag 0:
                                                 (let
                                                   (named_generators/6735 =a
                                                      (field_imm 0
                                                        *match*/21723))
                                                   (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(442):14102-15647
                                                     (let
                                                       (l_err/6736 =
                                                          (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(443):14130-15520
                                                            (apply
                                                              (field_imm 63
                                                                (field_imm 91
                                                                  (global Ppxlib__Import!)))
                                                              named_generators/6735
                                                              (function
                                                                param/6744
                                                                (funct-body Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(444):14184-15520
                                                                  (let
                                                                    (gen/6738 =a
                                                                    (field_imm 1
                                                                    param/6744)
                                                                    actual_deriver_name/6737 =a
                                                                    (field_imm 0
                                                                    param/6744))
                                                                    (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(445):14239-15519
                                                                    (let
                                                                    (dup_error/6739 =
                                                                    (if
                                                                    (&&
                                                                    (field_imm 4
                                                                    (global Ppxlib__Options!))
                                                                    (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(448):14366-14402
                                                                    (apply
                                                                    (field_imm 6
                                                                    (field_imm 87
                                                                    (global Ppxlib__Import!)))
                                                                    seen/6398
                                                                    actual_deriver_name/6737)))
                                                                    (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(450):14454-14623
                                                                    (makeblock 0
                                                                    (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(451):14482-14596
                                                                    (apply
                                                                    (field_imm 13
                                                                    (global Ppxlib__Location!))
                                                                    (field_imm 1
                                                                    name/6732)
                                                                    [0:
                                                                    [11:
                                                                    "Deriver "
                                                                    [2:
                                                                    0
                                                                    [11:
                                                                    " appears twice"
                                                                    0]]]
                                                                    "Deriver %s appears twice"]
                                                                    actual_deriver_name/6737))
                                                                    0))
                                                                    (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(454):14651-14653
                                                                    0)))
                                                                    (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(456):14697-15519
                                                                    (let
                                                                    (l_err/6740 =
                                                                    (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(457):14731-15386
                                                                    (apply
                                                                    (field_imm 63
                                                                    (field_imm 91
                                                                    (global Ppxlib__Import!)))
                                                                    (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(457):14747-14767
                                                                    (apply
                                                                    (field_imm 0
                                                                    Generator/6276)
                                                                    gen/6738))
                                                                    (function
                                                                    dep/6741
                                                                    (funct-body Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(457):14771-15386
                                                                    (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(458):14809-15385
                                                                    (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(458):14809-15385
                                                                    (apply
                                                                    (field_imm 62
                                                                    (field_imm 91
                                                                    (global Ppxlib__Import!)))
                                                                    (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(458):14825-14860
                                                                    (apply
                                                                    resolve_actual_derivers/6344
                                                                    field/6384
                                                                    dep/6741))
                                                                    (function
                                                                    drv/6742
                                                                    (funct-body Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(459):14892-15385
                                                                    (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(460):14934-15384
                                                                    (let
                                                                    (dep_name/6743 =
                                                                    (field_imm 0
                                                                    drv/6742))
                                                                    (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(461):14991-15384
                                                                    (if
                                                                    (not
                                                                    (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(461):14998-15025
                                                                    (apply
                                                                    (field_imm 6
                                                                    (field_imm 87
                                                                    (global Ppxlib__Import!)))
                                                                    seen/6398
                                                                    dep_name/6743)))
                                                                    (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(462):15063-15344
                                                                    (makeblock 0
                                                                    (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(463):15102-15344
                                                                    (apply
                                                                    (field_imm 13
                                                                    (global Ppxlib__Location!))
                                                                    (field_imm 1
                                                                    name/6732)
                                                                    [0:
                                                                    [11:
                                                                    "Deriver "
                                                                    [2:
                                                                    0
                                                                    [11:
                                                                    " is needed for "
                                                                    [2:
                                                                    0
                                                                    [11:
                                                                    ", you need to add it before in the list"
                                                                    0]]]]]
                                                                    "Deriver %s is needed for %s, you need to add it before in the list"]
                                                                    dep_name/6743
                                                                    (field_imm 0
                                                                    name/6732)))))
                                                                    (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(467):15380-15384
                                                                    0)))))))))))))))
                                                                    (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(469):15430-15519
                                                                    (seq
                                                                    (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(469):15430-15480
                                                                    (apply
                                                                    (field_imm 29
                                                                    (field_imm 87
                                                                    (global Ppxlib__Import!)))
                                                                    seen/6398
                                                                    actual_deriver_name/6737
                                                                    0))
                                                                    (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(470):15502-15519
                                                                    (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(470):15502-15519
                                                                    (apply
                                                                    (field_imm 97
                                                                    (global Ppxlib__Import!))
                                                                    dup_error/6739
                                                                    l_err/6740)))))))))))))))
                                                       (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(472):15552-15647
                                                         (makeblock 0
                                                           (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(472):15554-15613
                                                             (apply
                                                               (field_imm 97
                                                                 (global Ppxlib__Import!))
                                                               result/6730
                                                               (makeblock 0
                                                                 (makeblock 0
                                                                   name/6732
                                                                   (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(472):15572-15604
                                                                    (apply
                                                                    (field_imm 48
                                                                    (field_imm 91
                                                                    (global Ppxlib__Import!)))
                                                                    named_generators/6735
                                                                    (function
                                                                    prim/21722
                                                                    stub
                                                                    (field_mut 1
                                                                    prim/21722))))
                                                                   args/6733)
                                                                 0)))
                                                           (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(473):15631-15645
                                                             (apply
                                                               (field_imm 97
                                                                 (global Ppxlib__Import!))
                                                               errors/6731
                                                               l_err/6736)))))))
                                                case tag 1:
                                                 (let
                                                   (e/6734 =a
                                                      (field_imm 0
                                                        *match*/21723))
                                                   (before Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(440):14028-14052
                                                     (makeblock 0 result/6730
                                                       (after Ppxlib__Deriving.Deriver.resolve_all.(fun) src/deriving.ml(440):14037-14051
                                                         (apply
                                                           (field_imm 97
                                                             (global Ppxlib__Import!))
                                                           errors/6731
                                                           (makeblock 0
                                                             e/6734 0))))))))))))
                                     [0: 0 0] derivers_and_args/6386))
                               dep_errors/6729 =a (field_imm 1 *match*/21727)
                               result/6728 =a (field_imm 0 *match*/21727))
                              (before Ppxlib__Deriving.Deriver.resolve_all src/deriving.ml(475):15660-15707
                                (makeblock 0 result/6728
                                  (after Ppxlib__Deriving.Deriver.resolve_all src/deriving.ml(475):15669-15706
                                    (apply
                                      (field_imm 97 (global Ppxlib__Import!))
                                      derivers_and_args_errors/6387
                                      dep_errors/6729))))))))))))
            add/6747 =
              (function str_type_decl/6749 str_type_ext/6750
                str_exception/6751 str_module_type_decl/6752
                sig_type_decl/6753 sig_type_ext/6754 sig_exception/6755
                sig_module_type_decl/6756 extension/6757 name/6758
                (funct-body Ppxlib__Deriving.Deriver.add src/deriving.ml(477)<ghost>:15719-16553
                  (before Ppxlib__Deriving.Deriver.add src/deriving.ml(480):15885-16553
                    (let
                      (actual_deriver/6759 =
                         (makeblock 0 name/6758 str_type_decl/6749
                           str_type_ext/6750 str_exception/6751
                           str_module_type_decl/6752 sig_type_decl/6753
                           sig_type_ext/6754 sig_exception/6755
                           sig_module_type_decl/6756 extension/6757))
                      (before Ppxlib__Deriving.Deriver.add src/deriving.ml(494):16181-16553
                        (seq
                          (after Ppxlib__Deriving.Deriver.add src/deriving.ml(494):16181-16243
                            (apply (field_imm 0 (global Ppx_derivers!))
                              name/6758
                              (makeblock 0 T/6336
                                (makeblock 0 actual_deriver/6759))))
                          (before Ppxlib__Deriving.Deriver.add src/deriving.ml(495):16249-16553
                            (seq
                              (if extension/6757
                                (let (f/6760 =a (field_imm 0 extension/6757))
                                  (before Ppxlib__Deriving.Deriver.add src/deriving.ml(498):16312-16542
                                    (let
                                      (extension/6761 =
                                         (after Ppxlib__Deriving.Deriver.add src/deriving.ml(499):16338-16395
                                           (apply
                                             (field_imm 1
                                               (global Ppxlib__Extension!))
                                             name/6758 5
                                             (after Ppxlib__Deriving.Deriver.add src/deriving.ml(499):16385-16392
                                               (apply
                                                 (field_imm 235
                                                   (global Ppxlib__Ast_pattern!))
                                                 (field_imm 3
                                                   (global Ppxlib__Ast_pattern!))))
                                             f/6760)))
                                      (before Ppxlib__Deriving.Deriver.add src/deriving.ml(501):16415-16542
                                        (after Ppxlib__Deriving.Deriver.add src/deriving.ml(501):16415-16542
                                          (apply
                                            (field_imm 4
                                              (global Ppxlib__Driver!))
                                            0
                                            (makeblock 0
                                              (makeblock 0
                                                (after Ppxlib__Deriving.Deriver.add src/deriving.ml(503):16503-16540
                                                  (apply
                                                    (field_imm 0
                                                      (field_imm 0
                                                        (global Ppxlib__Context_free!)))
                                                    extension/6761))
                                                0))
                                            0 0 0 0 0 0 0 0 0 0
                                            (after Ppxlib__Deriving.Deriver.add src/deriving.ml(502):16456-16483
                                              (apply
                                                (field_imm 30
                                                  (global Stdlib!))
                                                "Ppxlib.Deriving." name/6758))))))))
                                (before Ppxlib__Deriving.Deriver.add src/deriving.ml(496):16285-16287
                                  0))
                              (before Ppxlib__Deriving.Deriver.add src/deriving.ml(504):16549-16553
                                name/6758)))))))))
            add_alias/6960 =
              (function name/6962 str_type_decl/6963 str_type_ext/6964
                str_exception/6965 str_module_type_decl/6966
                sig_type_decl/6967 sig_type_ext/6968 sig_exception/6969
                sig_module_type_decl/6970 set/6971
                (funct-body Ppxlib__Deriving.Deriver.add_alias src/deriving.ml(506)<ghost>:16571-17259
                  (before Ppxlib__Deriving.Deriver.add_alias src/deriving.ml(509):16730-17259
                    (let
                      (alias/6972 =
                         (let
                           (get/6973 =
                              (function param/6976
                                (funct-body Ppxlib__Deriving.Deriver.add_alias.get src/deriving.ml(510):16768-16806
                                  (if param/6976
                                    (let
                                      (set/6975 =a (field_imm 0 param/6976))
                                      (before Ppxlib__Deriving.Deriver.add_alias.get src/deriving.ml(510):16803-16806
                                        set/6975))
                                    (before Ppxlib__Deriving.Deriver.add_alias.get src/deriving.ml(510):16785-16788
                                      set/6971)))))
                           (before Ppxlib__Deriving.Deriver.add_alias src/deriving.ml(511):16816-17193
                             (makeblock 0
                               (after Ppxlib__Deriving.Deriver.add_alias src/deriving.ml(512):16842-16859
                                 (apply get/6973 str_type_decl/6963))
                               (after Ppxlib__Deriving.Deriver.add_alias src/deriving.ml(513):16884-16900
                                 (apply get/6973 str_type_ext/6964))
                               (after Ppxlib__Deriving.Deriver.add_alias src/deriving.ml(514):16926-16943
                                 (apply get/6973 str_exception/6965))
                               (after Ppxlib__Deriving.Deriver.add_alias src/deriving.ml(515):16976-17000
                                 (apply get/6973 str_module_type_decl/6966))
                               (after Ppxlib__Deriving.Deriver.add_alias src/deriving.ml(516):17026-17043
                                 (apply get/6973 sig_type_decl/6967))
                               (after Ppxlib__Deriving.Deriver.add_alias src/deriving.ml(517):17068-17084
                                 (apply get/6973 sig_type_ext/6968))
                               (after Ppxlib__Deriving.Deriver.add_alias src/deriving.ml(518):17110-17127
                                 (apply get/6973 sig_exception/6969))
                               (after Ppxlib__Deriving.Deriver.add_alias src/deriving.ml(519):17160-17184
                                 (apply get/6973 sig_module_type_decl/6970))))))
                      (before Ppxlib__Deriving.Deriver.add_alias src/deriving.ml(522):17205-17259
                        (seq
                          (after Ppxlib__Deriving.Deriver.add_alias src/deriving.ml(522):17205-17249
                            (apply (field_imm 0 (global Ppx_derivers!))
                              name/6962
                              (makeblock 0 T/6336 (makeblock 1 alias/6972))))
                          (before Ppxlib__Deriving.Deriver.add_alias src/deriving.ml(523):17255-17259
                            name/6962))))))))
           (pseudo Ppxlib__Deriving.Deriver src/deriving.ml(249):8039-17263
             (makeblock 0 Actual_deriver/6288 Alias/6298 Field/6331 T/6336
               derivers/6337 Not_supported/6343 resolve_actual_derivers/6344
               resolve_internal/6355 supported_for/6362 not_supported/6368
               resolve/6377 resolve_all/6382 add/6747 add_alias/6960))))
     add/6978 = (field_imm 12 Deriver/6977)
     add_alias/6979 = (field_imm 13 Deriver/6977)
     invalid_with/6980 =
       (function loc/6982
         (funct-body Ppxlib__Deriving.invalid_with src/deriving.ml(533)<ghost>:17556-17632
           (before Ppxlib__Deriving.invalid_with src/deriving.ml(534):17565-17632
             (after Ppxlib__Deriving.invalid_with src/deriving.ml(534):17565-17632
               (apply (field_imm 4 (global Ppxlib__Location!))
                 (makeblock 0 loc/6982)
                 [0:
                  [11:
                   "invalid [" [17: 5 [11: "deriving ] attribute syntax" 0]]]
                  "invalid [@@deriving ] attribute syntax"])))))
     generator_name_of_id/6983 =
       (function loc/6985 id/6986
         (funct-body Ppxlib__Deriving.generator_name_of_id src/deriving.ml(536)<ghost>:17659-17791
           (before Ppxlib__Deriving.generator_name_of_id src/deriving.ml(537):17670-17791
             (catch
               (try
                 (exit 19
                   (after Ppxlib__Deriving.generator_name_of_id src/deriving.ml(537):17676-17700
                     (apply (field_imm 2 (global Ppxlib__Longident!))
                       id/6986)))
                with exn/21739
                 (before Ppxlib__Deriving.generator_name_of_id src/deriving.ml(539):17774-17791
                   (after Ppxlib__Deriving.generator_name_of_id src/deriving.ml(539):17774-17791
                     (apply invalid_with/6980 loc/6985))))
              with (19 l/7089)
               (before Ppxlib__Deriving.generator_name_of_id src/deriving.ml(538):17715-17754
                 (makeblock 0
                   (after Ppxlib__Deriving.generator_name_of_id src/deriving.ml(538):17728-17752
                     (apply
                       (field_imm 2 (field_imm 96 (global Ppxlib__Import!)))
                       "." l/7089))
                   loc/6985))))))
     Unknown_syntax/7090 =
       (makeblock 248 "Ppxlib__Deriving.Unknown_syntax" (caml_fresh_oo_id 0))
     parse_arguments/7091 =
       (function l/7093
         (funct-body Ppxlib__Deriving.parse_arguments src/deriving.ml(543)<ghost>:17862-18913
           (before Ppxlib__Deriving.parse_arguments src/deriving.ml(544):17868-18913
             (try
               (makeblock 0
                 (catch
                   (if l/7093
                     (let
                       (*match*/21745 =a (field_imm 0 l/7093)
                        *match*/21746 =a (field_imm 0 *match*/21745))
                       (if (isint *match*/21746)
                         (let (*match*/21747 =a (field_imm 1 l/7093))
                           (if *match*/21747 (exit 25)
                             (let (e/7094 =a (field_imm 1 *match*/21745))
                               (before Ppxlib__Deriving.parse_arguments src/deriving.ml(547):17929-18547
                                 (let (*match*/21743 = (field_imm 0 e/7094))
                                   (catch
                                     (switch *match*/21743
                                      case tag 11:
                                       (let
                                         (*match*/21744 =a
                                            (field_imm 1 *match*/21743))
                                         (if *match*/21744 (exit 23)
                                           (let
                                             (fields/7096 =a
                                                (field_imm 0 *match*/21743))
                                             (before Ppxlib__Deriving.parse_arguments src/deriving.ml(550):18020-18360
                                               (after Ppxlib__Deriving.parse_arguments src/deriving.ml(550):18020-18360
                                                 (apply
                                                   (field_imm 48
                                                     (field_imm 91
                                                       (global Ppxlib__Import!)))
                                                   fields/7096
                                                   (function param/7101
                                                     (funct-body Ppxlib__Deriving.parse_arguments.(fun) src/deriving.ml(550):18039-18360
                                                       (let
                                                         (expr/7098 =a
                                                            (field_imm 1
                                                              param/7101)
                                                          id/7097 =a
                                                            (field_imm 0
                                                              param/7101))
                                                         (before Ppxlib__Deriving.parse_arguments.(fun) src/deriving.ml(551):18076-18359
                                                           (let
                                                             (name/7099 =
                                                                (let
                                                                  (*match*/21742 =
                                                                    (field_imm 0
                                                                    id/7097))
                                                                  (catch
                                                                    (switch* *match*/21742
                                                                    case tag 0:
                                                                    (let
                                                                    (s/7100 =a
                                                                    (field_imm 0
                                                                    *match*/21742))
                                                                    (before Ppxlib__Deriving.parse_arguments.(fun) src/deriving.ml(553):18159-18160
                                                                    s/7100))
                                                                    case tag 1:
                                                                    (exit 22)
                                                                    case tag 2:
                                                                    (exit 22))
                                                                   with (22)
                                                                    (before Ppxlib__Deriving.parse_arguments.(fun) src/deriving.ml(555):18212-18307
                                                                    (raise_notrace
                                                                    (after Ppxlib__Deriving.parse_arguments.(fun) src/deriving.ml(555):18212-18307
                                                                    (makeblock 0
                                                                    Unknown_syntax/7090
                                                                    (field_imm 1
                                                                    id/7097)
                                                                    "simple identifier expected")))))))
                                                             (before Ppxlib__Deriving.parse_arguments.(fun) src/deriving.ml(558):18347-18359
                                                               (makeblock 0
                                                                 name/7099
                                                                 expr/7098)))))))))))))
                                      default: (exit 23))
                                    with (23)
                                     (before Ppxlib__Deriving.parse_arguments src/deriving.ml(560):18392-18546
                                       (raise_notrace
                                         (after Ppxlib__Deriving.parse_arguments src/deriving.ml(560):18392-18546
                                           (makeblock 0 Unknown_syntax/7090
                                             (field_imm 1 e/7094)
                                             "non-optional labelled argument or record expected"))))))))))
                         (exit 25)))
                     (exit 25))
                  with (25)
                   (let (l/7095 =a l/7093)
                     (before Ppxlib__Deriving.parse_arguments src/deriving.ml(565):18571-18850
                       (after Ppxlib__Deriving.parse_arguments src/deriving.ml(565):18571-18850
                         (apply
                           (field_imm 48
                             (field_imm 91 (global Ppxlib__Import!)))
                           l/7095
                           (function param/7157
                             (funct-body Ppxlib__Deriving.parse_arguments.(fun) src/deriving.ml(565):18585-18850
                               (let
                                 (expr/7103 =a (field_imm 1 param/7157)
                                  label/7102 =a (field_imm 0 param/7157))
                                 (before Ppxlib__Deriving.parse_arguments.(fun) src/deriving.ml(566):18621-18849
                                   (catch
                                     (switch* label/7102
                                      case int 0: (exit 24)
                                      case tag 0:
                                       (let
                                         (s/7156 =a (field_imm 0 label/7102))
                                         (before Ppxlib__Deriving.parse_arguments.(fun) src/deriving.ml(567):18668-18677
                                           (makeblock 0 s/7156 expr/7103)))
                                      case tag 1: (exit 24))
                                    with (24)
                                     (before Ppxlib__Deriving.parse_arguments.(fun) src/deriving.ml(569):18717-18849
                                       (raise_notrace
                                         (after Ppxlib__Deriving.parse_arguments.(fun) src/deriving.ml(569):18717-18849
                                           (makeblock 0 Unknown_syntax/7090
                                             (field_imm 1 expr/7103)
                                             "non-optional labelled argument expected")))))))))))))))
              with exn/21740
               (let (tag/21741 =a (field_imm 0 exn/21740))
                 (if (== tag/21741 Unknown_syntax/7090)
                   (let
                     (msg/7159 =a (field_imm 2 exn/21740)
                      loc/7158 =a (field_imm 1 exn/21740))
                     (before Ppxlib__Deriving.parse_arguments src/deriving.ml(572):18888-18913
                       (makeblock 1 loc/7158 msg/7159)))
                   (reraise exn/21740)))))))
     mk_deriving_attr/7160 =
       (function context/7162 prefix/7163 suffix/7164
         (funct-body Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(574)<ghost>:18936-19586
           (before Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(575):18964-19586
             (after Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(575):18964-19586
               (apply (field_imm 1 (global Ppxlib__Attribute!))
                 (after Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(576):18986-19016
                   (apply (field_imm 30 (global Stdlib!)) prefix/7163
                     (after Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(576):18996-19015
                       (apply (field_imm 30 (global Stdlib!)) "deriving"
                         suffix/7164))))
                 context/7162
                 (let
                   (generator_name/7277 =
                      (function param/7282
                        (funct-body Ppxlib__Deriving.mk_deriving_attr.generator_name src/deriving.ml(579)<ghost>:19072-19170
                          (before Ppxlib__Deriving.mk_deriving_attr.generator_name src/deriving.ml(580):19085-19170
                            (after Ppxlib__Deriving.mk_deriving_attr.generator_name src/deriving.ml(580):19085-19170
                              (apply
                                (field_imm 11 (global Ppxlib__Ast_pattern!))
                                (after Ppxlib__Deriving.mk_deriving_attr.generator_name src/deriving.ml(580):19090-19105
                                  (apply
                                    (field_imm 123
                                      (global Ppxlib__Ast_pattern!))
                                    (field_imm 3
                                      (global Ppxlib__Ast_pattern!))))
                                (function loc/7279 f/7280 id/7281
                                  (funct-body Ppxlib__Deriving.mk_deriving_attr.generator_name.(fun) src/deriving.ml(580):19109-19170
                                    (before Ppxlib__Deriving.mk_deriving_attr.generator_name.(fun) src/deriving.ml(581):19138-19169
                                      (after Ppxlib__Deriving.mk_deriving_attr.generator_name.(fun) src/deriving.ml(581):19138-19169
                                        (apply f/7280
                                          (after Ppxlib__Deriving.mk_deriving_attr.generator_name.(fun) src/deriving.ml(581):19140-19169
                                            (apply generator_name_of_id/6983
                                              loc/7279 id/7281)))))))))))))
                   (before Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(583):19186-19568
                     (let
                       (generator/7283 =
                          (function param/7287
                            (funct-body Ppxlib__Deriving.mk_deriving_attr.generator src/deriving.ml(583)<ghost>:19200-19385
                              (before Ppxlib__Deriving.mk_deriving_attr.generator src/deriving.ml(584):19213-19385
                                (after Ppxlib__Deriving.mk_deriving_attr.generator src/deriving.ml(584):19213-19385
                                  (apply
                                    (field_imm 9
                                      (global Ppxlib__Ast_pattern!))
                                    (after Ppxlib__Deriving.mk_deriving_attr.generator src/deriving.ml(584):19213-19267
                                      (apply
                                        (field_imm 10
                                          (global Ppxlib__Ast_pattern!))
                                        (after Ppxlib__Deriving.mk_deriving_attr.generator src/deriving.ml(584):19217-19236
                                          (apply generator_name/7277 0))
                                        (function f/7285 x/7286
                                          (funct-body Ppxlib__Deriving.mk_deriving_attr.generator.(fun) src/deriving.ml(584):19240-19267
                                            (before Ppxlib__Deriving.mk_deriving_attr.generator.(fun) src/deriving.ml(584):19252-19266
                                              (after Ppxlib__Deriving.mk_deriving_attr.generator.(fun) src/deriving.ml(584):19252-19266
                                                (apply f/7285
                                                  (makeblock 0 x/7286 [0: 0]))))))))
                                    (after Ppxlib__Deriving.mk_deriving_attr.generator src/deriving.ml(585):19280-19385
                                      (apply
                                        (field_imm 43
                                          (global Ppxlib__Ast_pattern!))
                                        (after Ppxlib__Deriving.mk_deriving_attr.generator src/deriving.ml(586):19300-19385
                                          (apply
                                            (field_imm 128
                                              (global Ppxlib__Ast_pattern!))
                                            (after Ppxlib__Deriving.mk_deriving_attr.generator src/deriving.ml(586):19312-19331
                                              (apply generator_name/7277 0))
                                            (after Ppxlib__Deriving.mk_deriving_attr.generator src/deriving.ml(587):19349-19384
                                              (apply
                                                (field_imm 15
                                                  (global Ppxlib__Ast_pattern!))
                                                (after Ppxlib__Deriving.mk_deriving_attr.generator src/deriving.ml(587):19355-19364
                                                  (apply
                                                    (field_imm 24
                                                      (global Ppxlib__Ast_pattern!))
                                                    (field_imm 3
                                                      (global Ppxlib__Ast_pattern!))))
                                                parse_arguments/7091))))))))))))
                       (before Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(589):19401-19568
                         (let
                           (generators/7288 =
                              (after Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(590):19426-19513
                                (apply
                                  (field_imm 9 (global Ppxlib__Ast_pattern!))
                                  (after Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(590):19426-19458
                                    (apply
                                      (field_imm 131
                                        (global Ppxlib__Ast_pattern!))
                                      (after Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(590):19437-19458
                                        (apply
                                          (field_imm 24
                                            (global Ppxlib__Ast_pattern!))
                                          (after Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(590):19443-19457
                                            (apply generator/7283 0))))))
                                  (after Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(591):19471-19513
                                    (apply
                                      (field_imm 10
                                        (global Ppxlib__Ast_pattern!))
                                      (after Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(591):19475-19489
                                        (apply generator/7283 0))
                                      (function f/7289 x/7290
                                        (funct-body Ppxlib__Deriving.mk_deriving_attr.(fun) src/deriving.ml(591):19493-19513
                                          (before Ppxlib__Deriving.mk_deriving_attr.(fun) src/deriving.ml(591):19505-19512
                                            (after Ppxlib__Deriving.mk_deriving_attr.(fun) src/deriving.ml(591):19505-19512
                                              (apply f/7289
                                                (makeblock 0 x/7290 0)))))))))))
                           (before Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(593):19529-19568
                             (after Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(593):19529-19568
                               (apply
                                 (field_imm 233
                                   (global Ppxlib__Ast_pattern!))
                                 (after Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(593):19534-19568
                                   (apply
                                     (field_imm 23
                                       (global Ppxlib__Ast_pattern!))
                                     (after Ppxlib__Deriving.mk_deriving_attr src/deriving.ml(593):19535-19559
                                       (apply
                                         (field_imm 264
                                           (global Ppxlib__Ast_pattern!))
                                         generators/7288
                                         (field_imm 22
                                           (global Ppxlib__Ast_pattern!))))
                                     (field_imm 22
                                       (global Ppxlib__Ast_pattern!))))))))))))
                 (function x/7291
                   (funct-body Ppxlib__Deriving.mk_deriving_attr.(fun) src/deriving.ml(594):19574-19586
                     (before Ppxlib__Deriving.mk_deriving_attr.(fun) src/deriving.ml(594):19584-19585
                       x/7291))))))))
     disable_warnings_attribute/7292 =
       (function warnings/7294
         (funct-body Ppxlib__Deriving.disable_warnings_attribute src/deriving.ml(600)<ghost>:19836-20173
           (before Ppxlib__Deriving.disable_warnings_attribute src/deriving.ml(601):19849-20173
             (let (loc/7295 = (field_imm 2 (global Ppxlib__Location!)))
               (before Ppxlib__Deriving.disable_warnings_attribute src/deriving.ml(602):19878-20173
                 (let
                   (string/7296 =
                      (after Ppxlib__Deriving.disable_warnings_attribute src/deriving.ml(603):19895-20023
                        (apply
                          (field_imm 2
                            (field_imm 96 (global Ppxlib__Import!)))
                          ""
                          (after Ppxlib__Deriving.disable_warnings_attribute src/deriving.ml(603):19895-19994
                            (apply
                              (after Ppxlib__Deriving.disable_warnings_attribute src/deriving.ml(604):19938-19994
                                (let
                                  (func/21750 =
                                     (field_imm 48
                                       (field_imm 91
                                         (global Ppxlib__Import!)))
                                   arg/21751 =
                                     (function warning/7309[int]
                                       (funct-body Ppxlib__Deriving.disable_warnings_attribute.(fun) src/deriving.ml(604):19950-19994
                                         (before Ppxlib__Deriving.disable_warnings_attribute.(fun) src/deriving.ml(604):19966-19993
                                           (after Ppxlib__Deriving.disable_warnings_attribute.(fun) src/deriving.ml(604):19966-19993
                                             (apply
                                               (field_imm 30
                                                 (global Stdlib!))
                                               "-"
                                               (after Ppxlib__Deriving.disable_warnings_attribute.(fun) src/deriving.ml(604):19972-19993
                                                 (apply
                                                   (field_imm 1
                                                     (field_imm 89
                                                       (global Ppxlib__Import!)))
                                                   warning/7309))))))))
                                  (function param/21752 stub
                                    (apply func/21750 param/21752 arg/21751))))
                              (after Ppxlib__Deriving.disable_warnings_attribute src/deriving.ml(603):19895-19930
                                (apply
                                  (field_imm 37
                                    (field_imm 91 (global Ppxlib__Import!)))
                                  (field_imm 2
                                    (field_imm 89 (global Ppxlib__Import!)))
                                  warnings/7294)))))))
                   (before Ppxlib__Deriving.disable_warnings_attribute src/deriving.ml(607):20031-20173
                     (makeblock 0 (makeblock 0 "ocaml.warning" loc/7295)
                       (makeblock 0
                         (makeblock 0
                           (after Ppxlib__Deriving.disable_warnings_attribute src/deriving.ml(609):20107-20146
                             (apply
                               (field_imm 148
                                 (field_imm 0 (global Ppxlib__Ast_builder!)))
                               loc/7295
                               (after Ppxlib__Deriving.disable_warnings_attribute src/deriving.ml(609):20122-20143
                                 (apply
                                   (field_imm 174
                                     (field_imm 0
                                       (global Ppxlib__Ast_builder!)))
                                   loc/7295 string/7296))
                               0))
                           0))
                       loc/7295))))))))
     inline_doc_attr/8099 =
       (let (loc/8100 = (field_imm 2 (global Ppxlib__Location!)))
         (before Ppxlib__Deriving.inline_doc_attr src/deriving.ml(615):20228-20369
           (makeblock 0 (makeblock 0 "ocaml.doc" loc/8100)
             (makeblock 0
               (makeblock 0
                 (after Ppxlib__Deriving.inline_doc_attr src/deriving.ml(617):20300-20342
                   (apply
                     (field_imm 148
                       (field_imm 0 (global Ppxlib__Ast_builder!)))
                     loc/8100
                     (after Ppxlib__Deriving.inline_doc_attr src/deriving.ml(617):20315-20339
                       (apply
                         (field_imm 174
                           (field_imm 0 (global Ppxlib__Ast_builder!)))
                         loc/8100 "@inline"))
                     0))
                 0))
             loc/8100)))
     wrap_str/8101 =
       (function loc/8103 hide/8104 st/8105
         (funct-body Ppxlib__Deriving.wrap_str src/deriving.ml(622)<ghost>:20427-20702
           (before Ppxlib__Deriving.wrap_str src/deriving.ml(623):20445-20702
             (let
               (include_infos/8106 =
                  (after Ppxlib__Deriving.wrap_str src/deriving.ml(623):20465-20508
                    (apply
                      (field_imm 87
                        (field_imm 0 (global Ppxlib__Ast_builder!)))
                      loc/8103
                      (after Ppxlib__Deriving.wrap_str src/deriving.ml(623):20484-20508
                        (apply
                          (field_imm 94
                            (field_imm 0 (global Ppxlib__Ast_builder!)))
                          loc/8103 st/8105)))))
               (before Ppxlib__Deriving.wrap_str src/deriving.ml(624):20514-20702
                 (let
                   (pincl_attributes/8107 =
                      (if hide/8104
                        (before Ppxlib__Deriving.wrap_str src/deriving.ml(625):20554-20604
                          (makeblock 0 inline_doc_attr/8099
                            (makeblock 0
                              (field_imm 0 (global Ppxlib__Merlin_helpers!))
                              0)))
                        (before Ppxlib__Deriving.wrap_str src/deriving.ml(626):20614-20633
                          (makeblock 0 inline_doc_attr/8099 0))))
                   (before Ppxlib__Deriving.wrap_str src/deriving.ml(628):20641-20702
                     (makeblock 0
                       (after Ppxlib__Deriving.wrap_str src/deriving.ml(628):20643-20700
                         (apply
                           (field_imm 160
                             (field_imm 0 (global Ppxlib__Ast_builder!)))
                           loc/8103
                           (let (init/21755 = include_infos/8106)
                             (makeblock 0 (field_imm 0 init/21755)
                               (field_imm 1 init/21755)
                               pincl_attributes/8107))))
                       0))))))))
     wrap_str/8114 =
       (function loc/8115 hide/8116 unused_code_warnings/8117 st/8118
         (funct-body Ppxlib__Deriving.wrap_str src/deriving.ml(631)<ghost>:20786-21604
           (before Ppxlib__Deriving.wrap_str src/deriving.ml(632):20826-21604
             (let
               (loc/8119 =
                  (let (init/21770 = loc/8115)
                    (makeblock 0 (field_imm 0 init/21770)
                      (field_imm 1 init/21770) 1)))
               (before Ppxlib__Deriving.wrap_str src/deriving.ml(633):20871-21604
                 (let
                   (unused_code_warnings/8120 =
                      (&& unused_code_warnings/8117
                        (after Ppxlib__Deriving.wrap_str src/deriving.ml(634):20926-20955
                          (apply allow_unused_code_warnings/2188 0))))
                   (before Ppxlib__Deriving.wrap_str src/deriving.ml(636):20963-21604
                     (catch
                       (if
                         (||
                           (after Ppxlib__Deriving.wrap_str src/deriving.ml(637):20989-21005
                             (apply keep_w32_impl/2169 0))
                           unused_code_warnings/8120)
                         (before Ppxlib__Deriving.wrap_str src/deriving.ml(637):21035-21043
                           (let (st/21769 =a st/8118 warnings/21768 = 0)
                             (exit 36 warnings/21768 st/21769)))
                         (before Ppxlib__Deriving.wrap_str src/deriving.ml(638):21053-21195
                           (if
                             (not
                               (field_int 0
                                 do_insert_unused_warning_attribute/2083))
                             (before Ppxlib__Deriving.wrap_str src/deriving.ml(639):21107-21173
                               (let
                                 (st/21767 =
                                    (after Ppxlib__Deriving.wrap_str src/deriving.ml(639):21112-21172
                                      (send
                                        (field_imm 0
                                          (global Ppxlib__Ignore_unused_warning!))
                                        -951102413 st/8118))
                                  warnings/21766 = 0)
                                 (exit 36 warnings/21766 st/21767)))
                             (before Ppxlib__Deriving.wrap_str src/deriving.ml(640):21183-21195
                               (let
                                 (st/21765 =a st/8118
                                  warnings/21764 = [0: 32 0])
                                 (exit 36 warnings/21764 st/21765))))))
                      with (36 warnings/8121 st/8122)
                       (before Ppxlib__Deriving.wrap_str src/deriving.ml(642):21203-21604
                         (catch
                           (if
                             (||
                               (after Ppxlib__Deriving.wrap_str src/deriving.ml(644):21235-21251
                                 (apply keep_w60_impl/2177 0))
                               (|| unused_code_warnings/8120
                                 (not
                                   (after Ppxlib__Deriving.wrap_str src/deriving.ml(645):21289-21350
                                     (send
                                       (field_imm 1
                                         (global Ppxlib__Ignore_unused_warning!))
                                       -951102413 st/8122 0)))))
                             (before Ppxlib__Deriving.wrap_str src/deriving.ml(646):21360-21374
                               (let
                                 (st/21763 =a st/8122
                                  warnings/21762 =a warnings/8121)
                                 (exit 31 warnings/21762 st/21763)))
                             (before Ppxlib__Deriving.wrap_str src/deriving.ml(647):21384-21404
                               (let
                                 (st/21761 =a st/8122
                                  warnings/21760 =
                                    (makeblock 0 (int,*) 60 warnings/8121))
                                 (exit 31 warnings/21760 st/21761))))
                          with (31 warnings/8448 st/8449)
                           (before Ppxlib__Deriving.wrap_str src/deriving.ml(649):21412-21604
                             (catch
                               (if
                                 (after Ppxlib__Deriving.wrap_str src/deriving.ml(650):21434-21456
                                   (apply
                                     (field_imm 59
                                       (field_imm 91
                                         (global Ppxlib__Import!)))
                                     warnings/8448))
                                 (before Ppxlib__Deriving.wrap_str src/deriving.ml(650):21462-21472
                                   (let
                                     (st/21759 =a st/8449
                                      wrap/21758 =a hide/8116)
                                     (exit 26 wrap/21758 st/21759)))
                                 (before Ppxlib__Deriving.wrap_str src/deriving.ml(651):21482-21553
                                   (let
                                     (st/21757 =
                                        (makeblock 0
                                          (after Ppxlib__Deriving.wrap_str src/deriving.ml(651):21489-21546
                                            (apply
                                              (field_imm 161
                                                (field_imm 0
                                                  (global Ppxlib__Ast_builder!)))
                                              loc/8119
                                              (after Ppxlib__Deriving.wrap_str src/deriving.ml(651):21509-21546
                                                (apply
                                                  disable_warnings_attribute/7292
                                                  warnings/8448))))
                                          st/8449)
                                      wrap/21756 = 1)
                                     (exit 26 wrap/21756 st/21757))))
                              with (26 wrap/8450 st/8451)
                               (before Ppxlib__Deriving.wrap_str src/deriving.ml(653):21561-21604
                                 (if wrap/8450
                                   (before Ppxlib__Deriving.wrap_str src/deriving.ml(653):21574-21596
                                     (after Ppxlib__Deriving.wrap_str src/deriving.ml(653):21574-21596
                                       (apply wrap_str/8101 loc/8119
                                         hide/8116 st/8451)))
                                   (before Ppxlib__Deriving.wrap_str src/deriving.ml(653):21602-21604
                                     st/8451)))))))))))))))
     wrap_str/8452 =
       (function loc/8453 hide/8454 list/8455
         (funct-body Ppxlib__Deriving.wrap_str src/deriving.ml(656)<ghost>:21701-21881
           (before Ppxlib__Deriving.wrap_str src/deriving.ml(657):21721-21881
             (after Ppxlib__Deriving.wrap_str src/deriving.ml(657):21721-21881
               (apply (field_imm 63 (field_imm 91 (global Ppxlib__Import!)))
                 list/8455
                 (function param/8458
                   (funct-body Ppxlib__Deriving.wrap_str.(fun) src/deriving.ml(657):21745-21881
                     (let
                       (unused_code_warnings/8457 =a (field_int 1 param/8458)
                        items/8456 =a (field_imm 0 param/8458))
                       (before Ppxlib__Deriving.wrap_str.(fun) src/deriving.ml(658):21791-21880
                         (if
                           (after Ppxlib__Deriving.wrap_str.(fun) src/deriving.ml(658):21794-21813
                             (apply
                               (field_imm 59
                                 (field_imm 91 (global Ppxlib__Import!)))
                               items/8456))
                           (before Ppxlib__Deriving.wrap_str.(fun) src/deriving.ml(658):21819-21821
                             0)
                           (before Ppxlib__Deriving.wrap_str.(fun) src/deriving.ml(659):21833-21880
                             (after Ppxlib__Deriving.wrap_str.(fun) src/deriving.ml(659):21833-21880
                               (apply wrap_str/8114 loc/8453 hide/8454
                                 unused_code_warnings/8457 items/8456)))))))))))))
     wrap_sig/8459 =
       (function loc/8461 hide/8462 st/8463
         (funct-body Ppxlib__Deriving.wrap_sig src/deriving.ml(662)<ghost>:21939-22214
           (before Ppxlib__Deriving.wrap_sig src/deriving.ml(663):21957-22214
             (let
               (include_infos/8464 =
                  (after Ppxlib__Deriving.wrap_sig src/deriving.ml(663):21977-22020
                    (apply
                      (field_imm 87
                        (field_imm 0 (global Ppxlib__Ast_builder!)))
                      loc/8461
                      (after Ppxlib__Deriving.wrap_sig src/deriving.ml(663):21996-22020
                        (apply
                          (field_imm 102
                            (field_imm 0 (global Ppxlib__Ast_builder!)))
                          loc/8461 st/8463)))))
               (before Ppxlib__Deriving.wrap_sig src/deriving.ml(664):22026-22214
                 (let
                   (pincl_attributes/8465 =
                      (if hide/8462
                        (before Ppxlib__Deriving.wrap_sig src/deriving.ml(665):22066-22116
                          (makeblock 0 inline_doc_attr/8099
                            (makeblock 0
                              (field_imm 0 (global Ppxlib__Merlin_helpers!))
                              0)))
                        (before Ppxlib__Deriving.wrap_sig src/deriving.ml(666):22126-22145
                          (makeblock 0 inline_doc_attr/8099 0))))
                   (before Ppxlib__Deriving.wrap_sig src/deriving.ml(668):22153-22214
                     (makeblock 0
                       (after Ppxlib__Deriving.wrap_sig src/deriving.ml(668):22155-22212
                         (apply
                           (field_imm 143
                             (field_imm 0 (global Ppxlib__Ast_builder!)))
                           loc/8461
                           (let (init/21771 = include_infos/8464)
                             (makeblock 0 (field_imm 0 init/21771)
                               (field_imm 1 init/21771)
                               pincl_attributes/8465))))
                       0))))))))
     wrap_sig/8466 =
       (function loc/8467 hide/8468 unused_code_warnings/8469 sg/8470
         (funct-body Ppxlib__Deriving.wrap_sig src/deriving.ml(671)<ghost>:22298-22958
           (before Ppxlib__Deriving.wrap_sig src/deriving.ml(672):22338-22958
             (let
               (loc/8471 =
                  (let (init/21776 = loc/8467)
                    (makeblock 0 (field_imm 0 init/21776)
                      (field_imm 1 init/21776) 1)))
               (before Ppxlib__Deriving.wrap_sig src/deriving.ml(673):22383-22958
                 (let
                   (unused_code_warnings/8472 =
                      (&& unused_code_warnings/8469
                        (after Ppxlib__Deriving.wrap_sig src/deriving.ml(674):22438-22467
                          (apply allow_unused_code_warnings/2188 0))))
                   (before Ppxlib__Deriving.wrap_sig src/deriving.ml(676):22475-22958
                     (let
                       (warnings/8473 =
                          (if
                            (||
                              (after Ppxlib__Deriving.wrap_sig src/deriving.ml(677):22497-22513
                                (apply keep_w32_intf/2171 0))
                              unused_code_warnings/8472)
                            (before Ppxlib__Deriving.wrap_sig src/deriving.ml(677):22543-22545
                              0)
                            (before Ppxlib__Deriving.wrap_sig src/deriving.ml(677):22551-22557
                              [0: 32 0])))
                       (before Ppxlib__Deriving.wrap_sig src/deriving.ml(679):22565-22958
                         (let
                           (warnings/8474 =
                              (if
                                (||
                                  (after Ppxlib__Deriving.wrap_sig src/deriving.ml(681):22593-22609
                                    (apply keep_w60_intf/2179 0))
                                  (||
                                    (not
                                      (after Ppxlib__Deriving.wrap_sig src/deriving.ml(682):22624-22685
                                        (send
                                          (field_imm 1
                                            (global Ppxlib__Ignore_unused_warning!))
                                          359375608 sg/8470 0)))
                                    unused_code_warnings/8472))
                                (before Ppxlib__Deriving.wrap_sig src/deriving.ml(684):22726-22734
                                  warnings/8473)
                                (before Ppxlib__Deriving.wrap_sig src/deriving.ml(685):22744-22758
                                  (makeblock 0 (int,*) 60 warnings/8473))))
                           (before Ppxlib__Deriving.wrap_sig src/deriving.ml(687):22766-22958
                             (catch
                               (if
                                 (after Ppxlib__Deriving.wrap_sig src/deriving.ml(688):22788-22810
                                   (apply
                                     (field_imm 59
                                       (field_imm 91
                                         (global Ppxlib__Import!)))
                                     warnings/8474))
                                 (before Ppxlib__Deriving.wrap_sig src/deriving.ml(688):22816-22826
                                   (let
                                     (sg/21775 =a sg/8470
                                      wrap/21774 =a hide/8468)
                                     (exit 43 wrap/21774 sg/21775)))
                                 (before Ppxlib__Deriving.wrap_sig src/deriving.ml(689):22836-22907
                                   (let
                                     (sg/21773 =
                                        (makeblock 0
                                          (after Ppxlib__Deriving.wrap_sig src/deriving.ml(689):22843-22900
                                            (apply
                                              (field_imm 146
                                                (field_imm 0
                                                  (global Ppxlib__Ast_builder!)))
                                              loc/8471
                                              (after Ppxlib__Deriving.wrap_sig src/deriving.ml(689):22863-22900
                                                (apply
                                                  disable_warnings_attribute/7292
                                                  warnings/8474))))
                                          sg/8470)
                                      wrap/21772 = 1)
                                     (exit 43 wrap/21772 sg/21773))))
                              with (43 wrap/8475 sg/8476)
                               (before Ppxlib__Deriving.wrap_sig src/deriving.ml(691):22915-22958
                                 (if wrap/8475
                                   (before Ppxlib__Deriving.wrap_sig src/deriving.ml(691):22928-22950
                                     (after Ppxlib__Deriving.wrap_sig src/deriving.ml(691):22928-22950
                                       (apply wrap_sig/8459 loc/8471
                                         hide/8468 sg/8476)))
                                   (before Ppxlib__Deriving.wrap_sig src/deriving.ml(691):22956-22958
                                     sg/8476)))))))))))))))
     wrap_sig/8477 =
       (function loc/8478 hide/8479 list/8480
         (funct-body Ppxlib__Deriving.wrap_sig src/deriving.ml(694)<ghost>:23055-23235
           (before Ppxlib__Deriving.wrap_sig src/deriving.ml(695):23075-23235
             (after Ppxlib__Deriving.wrap_sig src/deriving.ml(695):23075-23235
               (apply (field_imm 63 (field_imm 91 (global Ppxlib__Import!)))
                 list/8480
                 (function param/8483
                   (funct-body Ppxlib__Deriving.wrap_sig.(fun) src/deriving.ml(695):23099-23235
                     (let
                       (unused_code_warnings/8482 =a (field_int 1 param/8483)
                        items/8481 =a (field_imm 0 param/8483))
                       (before Ppxlib__Deriving.wrap_sig.(fun) src/deriving.ml(696):23145-23234
                         (if
                           (after Ppxlib__Deriving.wrap_sig.(fun) src/deriving.ml(696):23148-23167
                             (apply
                               (field_imm 59
                                 (field_imm 91 (global Ppxlib__Import!)))
                               items/8481))
                           (before Ppxlib__Deriving.wrap_sig.(fun) src/deriving.ml(696):23173-23175
                             0)
                           (before Ppxlib__Deriving.wrap_sig.(fun) src/deriving.ml(697):23187-23234
                             (after Ppxlib__Deriving.wrap_sig.(fun) src/deriving.ml(697):23187-23234
                               (apply wrap_sig/8466 loc/8478 hide/8479
                                 unused_code_warnings/8482 items/8481)))))))))))))
     types_used_by_deriving/8484 =
       (function tds/8486
         (funct-body Ppxlib__Deriving.types_used_by_deriving src/deriving.ml(703)<ghost>:23481-23972
           (before Ppxlib__Deriving.types_used_by_deriving src/deriving.ml(704):23537-23972
             (if
               (after Ppxlib__Deriving.types_used_by_deriving src/deriving.ml(704):23540-23556
                 (apply keep_w32_impl/2169 0))
               (before Ppxlib__Deriving.types_used_by_deriving src/deriving.ml(704):23562-23564
                 0)
               (before Ppxlib__Deriving.types_used_by_deriving src/deriving.ml(706):23576-23972
                 (after Ppxlib__Deriving.types_used_by_deriving src/deriving.ml(706):23576-23972
                   (apply
                     (field_imm 48 (field_imm 91 (global Ppxlib__Import!)))
                     tds/8486
                     (function td/8487
                       (funct-body Ppxlib__Deriving.types_used_by_deriving.(fun) src/deriving.ml(706):23592-23972
                         (before Ppxlib__Deriving.types_used_by_deriving.(fun) src/deriving.ml(707):23611-23971
                           (let
                             (typ/8488 =
                                (after Ppxlib__Deriving.types_used_by_deriving.(fun) src/deriving.ml(707):23621-23660
                                  (apply
                                    (field_imm 1 (global Ppxlib__Common!))
                                    td/8487)))
                             (before Ppxlib__Deriving.types_used_by_deriving.(fun) src/deriving.ml(708):23672-23971
                               (let (loc/8526 = (field_imm 7 td/8487))
                                 (before Ppxlib__Deriving.types_used_by_deriving.(fun) src/deriving.ml(709):23706-23971
                                   (after Ppxlib__Deriving.types_used_by_deriving.(fun) src/deriving.ml(709):23706-23971
                                     (apply
                                       (field_imm 149
                                         (field_imm 0
                                           (global Ppxlib__Ast_builder!)))
                                       loc/8526 0
                                       (makeblock 0
                                         (after Ppxlib__Deriving.types_used_by_deriving.(fun) src/deriving.ml(711):23759-23958
                                           (apply
                                             (field_imm 167
                                               (field_imm 0
                                                 (global Ppxlib__Ast_builder!)))
                                             loc/8526
                                             (after Ppxlib__Deriving.types_used_by_deriving.(fun) src/deriving.ml(711):23783-23798
                                               (apply
                                                 (field_imm 112
                                                   (field_imm 0
                                                     (global Ppxlib__Ast_builder!)))
                                                 loc/8526))
                                             (after Ppxlib__Deriving.types_used_by_deriving.(fun) src/deriving.ml(713):23836-23958
                                               (apply
                                                 (field_imm 53
                                                   (field_imm 0
                                                     (global Ppxlib__Ast_builder!)))
                                                 loc/8526 0 0
                                                 (after Ppxlib__Deriving.types_used_by_deriving.(fun) src/deriving.ml(714):23883-23925
                                                   (apply
                                                     (field_imm 122
                                                       (field_imm 0
                                                         (global Ppxlib__Ast_builder!)))
                                                     loc/8526
                                                     (after Ppxlib__Deriving.types_used_by_deriving.(fun) src/deriving.ml(714):23905-23920
                                                       (apply
                                                         (field_imm 112
                                                           (field_imm 0
                                                             (global Ppxlib__Ast_builder!)))
                                                         loc/8526))
                                                     typ/8488))
                                                 (after Ppxlib__Deriving.types_used_by_deriving.(fun) src/deriving.ml(715):23945-23957
                                                   (apply
                                                     (field_imm 188
                                                       (field_imm 0
                                                         (global Ppxlib__Ast_builder!)))
                                                     loc/8526))))))
                                         0)))))))))))))))))
     merge_generators/8527 =
       (function field/8529 l/8530
         (funct-body Ppxlib__Deriving.merge_generators src/deriving.ml(718)<ghost>:23995-24084
           (before Ppxlib__Deriving.merge_generators src/deriving.ml(719):24007-24084
             (after Ppxlib__Deriving.merge_generators src/deriving.ml(719):24007-24084
               (apply (field_imm 11 Deriver/6977) field/8529
                 (after Ppxlib__Deriving.merge_generators src/deriving.ml(719):24007-24055
                   (apply
                     (field_imm 52 (field_imm 91 (global Ppxlib__Import!)))
                     (after Ppxlib__Deriving.merge_generators src/deriving.ml(719):24007-24040
                       (apply
                         (field_imm 62
                           (field_imm 91 (global Ppxlib__Import!)))
                         l/8530
                         (function x/8531
                           (funct-body Ppxlib__Deriving.merge_generators.(fun) src/deriving.ml(719):24028-24040
                             (before Ppxlib__Deriving.merge_generators.(fun) src/deriving.ml(719):24038-24039
                               x/8531))))))))))))
     merge_derived/8542 =
       (function lists/8544
         (funct-body Ppxlib__Deriving.merge_derived src/deriving.ml(723)<ghost>:24279-24578
           (before Ppxlib__Deriving.merge_derived src/deriving.ml(724):24289-24578
             (after Ppxlib__Deriving.merge_derived src/deriving.ml(724):24289-24578
               (apply (field_imm 50 (field_imm 91 (global Ppxlib__Import!)))
                 lists/8544 0
                 (function derived/8545 acc/8546
                   (funct-body Ppxlib__Deriving.merge_derived.(fun) src/deriving.ml(724):24323-24578
                     (before Ppxlib__Deriving.merge_derived.(fun) src/deriving.ml(725):24349-24577
                       (catch
                         (if acc/8546
                           (let
                             (others/8548 =a (field_imm 1 acc/8546)
                              other/8547 =a (field_imm 0 acc/8546))
                             (before Ppxlib__Deriving.merge_derived.(fun) src/deriving.ml(727):24401-24467
                               (if
                                 (after Ppxlib__Deriving.merge_derived.(fun) src/deriving.ml(727):24401-24467
                                   (apply
                                     (field_imm 2
                                       (field_imm 81
                                         (global Ppxlib__Import!)))
                                     (field_int 1 derived/8545)
                                     (field_int 1 other/8547)))
                                 (before Ppxlib__Deriving.merge_derived.(fun) src/deriving.ml(729):24489-24549
                                   (makeblock 0
                                     (let (init/21777 = other/8547)
                                       (makeblock 0
                                         (after Ppxlib__Deriving.merge_derived.(fun) src/deriving.ml(729):24510-24537
                                           (apply
                                             (field_imm 97
                                               (global Ppxlib__Import!))
                                             (field_imm 0 derived/8545)
                                             (field_imm 0 other/8547)))
                                         (field_int 1 init/21777)))
                                     others/8548))
                                 (exit 48))))
                           (exit 48))
                        with (48)
                         (before Ppxlib__Deriving.merge_derived.(fun) src/deriving.ml(730):24563-24577
                           (makeblock 0 derived/8545 acc/8546)))))))))))
     expand_str_type_decls/8560 =
       (function ctxt/8562 rec_flag/8563 tds/8564 values/8565
         (funct-body Ppxlib__Deriving.expand_str_type_decls src/deriving.ml(732)<ghost>:24606-25332
           (before Ppxlib__Deriving.expand_str_type_decls src/deriving.ml(733):24636-25332
             (let
               (*match*/21783 =
                  (after Ppxlib__Deriving.expand_str_type_decls src/deriving.ml(733):24660-24711
                    (apply merge_generators/8527
                      (field_imm 0 (field_imm 2 Deriver/6977)) values/8565))
                l_err/8567 =a (field_imm 1 *match*/21783)
                generators/8566 =a (field_imm 0 *match*/21783))
               (before Ppxlib__Deriving.expand_str_type_decls src/deriving.ml(734):24717-25332
                 (let
                   (l_err/8568 =
                      (after Ppxlib__Deriving.expand_str_type_decls src/deriving.ml(735):24733-24844
                        (apply
                          (field_imm 48
                            (field_imm 91 (global Ppxlib__Import!)))
                          l_err/8567
                          (function err/8569
                            (funct-body Ppxlib__Deriving.expand_str_type_decls.(fun) src/deriving.ml(736):24751-24832
                              (before Ppxlib__Deriving.expand_str_type_decls.(fun) src/deriving.ml(737):24771-24831
                                (after Ppxlib__Deriving.expand_str_type_decls.(fun) src/deriving.ml(737):24771-24831
                                  (apply
                                    (field_imm 162
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!)))
                                    (field_imm 2 (global Ppxlib__Location!))
                                    err/8569 0))))))))
                   (before Ppxlib__Deriving.expand_str_type_decls src/deriving.ml(742):24965-25332
                     (let
                       (generated/8570 =
                          (after Ppxlib__Deriving.expand_str_type_decls src/deriving.ml(743):24985-25186
                            (apply merge_derived/8542
                              (makeblock 0
                                (makeblock 0
                                  (after Ppxlib__Deriving.expand_str_type_decls src/deriving.ml(743):24995-25029
                                    (apply
                                      (field_imm 97 (global Ppxlib__Import!))
                                      (after Ppxlib__Deriving.expand_str_type_decls src/deriving.ml(743):24995-25021
                                        (apply types_used_by_deriving/8484
                                          tds/8564))
                                      l_err/8568))
                                  0)
                                (after Ppxlib__Deriving.expand_str_type_decls src/deriving.ml(744):25069-25165
                                  (apply (field_imm 7 Generator/6276)
                                    ctxt/8562
                                    (makeblock 0 rec_flag/8563 tds/8564)
                                    generators/8566
                                    (field_imm 162
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!)))))))))
                       (before Ppxlib__Deriving.expand_str_type_decls src/deriving.ml(748):25194-25332
                         (after Ppxlib__Deriving.expand_str_type_decls src/deriving.ml(748):25194-25332
                           (apply wrap_str/8452
                             (after Ppxlib__Deriving.expand_str_type_decls src/deriving.ml(749):25212-25261
                               (apply
                                 (field_imm 0
                                   (field_imm 2
                                     (global Ppxlib__Expansion_context!)))
                                 ctxt/8562))
                             (after Ppxlib__Deriving.expand_str_type_decls src/deriving.ml(750):25272-25318
                               (apply
                                 (function prim/21778 stub (not prim/21778))
                                 (after Ppxlib__Deriving.expand_str_type_decls src/deriving.ml(750):25280-25317
                                   (apply
                                     (field_imm 5
                                       (field_imm 2
                                         (global Ppxlib__Expansion_context!)))
                                     ctxt/8562))))
                             generated/8570)))))))))))
     expand_sig_type_decls/8571 =
       (function ctxt/8573 rec_flag/8574 tds/8575 values/8576
         (funct-body Ppxlib__Deriving.expand_sig_type_decls src/deriving.ml(753)<ghost>:25360-25944
           (before Ppxlib__Deriving.expand_sig_type_decls src/deriving.ml(754):25390-25944
             (let
               (*match*/21789 =
                  (after Ppxlib__Deriving.expand_sig_type_decls src/deriving.ml(754):25414-25465
                    (apply merge_generators/8527
                      (field_imm 4 (field_imm 2 Deriver/6977)) values/8576))
                l_err/8578 =a (field_imm 1 *match*/21789)
                generators/8577 =a (field_imm 0 *match*/21789))
               (before Ppxlib__Deriving.expand_sig_type_decls src/deriving.ml(755):25471-25944
                 (let
                   (l_err/8579 =
                      (after Ppxlib__Deriving.expand_sig_type_decls src/deriving.ml(756):25487-25598
                        (apply
                          (field_imm 48
                            (field_imm 91 (global Ppxlib__Import!)))
                          l_err/8578
                          (function err/8580
                            (funct-body Ppxlib__Deriving.expand_sig_type_decls.(fun) src/deriving.ml(757):25505-25586
                              (before Ppxlib__Deriving.expand_sig_type_decls.(fun) src/deriving.ml(758):25525-25585
                                (after Ppxlib__Deriving.expand_sig_type_decls.(fun) src/deriving.ml(758):25525-25585
                                  (apply
                                    (field_imm 147
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!)))
                                    (field_imm 2 (global Ppxlib__Location!))
                                    err/8580 0))))))))
                   (before Ppxlib__Deriving.expand_sig_type_decls src/deriving.ml(761):25606-25944
                     (let
                       (generated/8581 =
                          (after Ppxlib__Deriving.expand_sig_type_decls src/deriving.ml(762):25626-25798
                            (apply merge_derived/8542
                              (makeblock 0 (makeblock 0 l_err/8579 0)
                                (after Ppxlib__Deriving.expand_sig_type_decls src/deriving.ml(763):25681-25777
                                  (apply (field_imm 7 Generator/6276)
                                    ctxt/8573
                                    (makeblock 0 rec_flag/8574 tds/8575)
                                    generators/8577
                                    (field_imm 147
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!)))))))))
                       (before Ppxlib__Deriving.expand_sig_type_decls src/deriving.ml(767):25806-25944
                         (after Ppxlib__Deriving.expand_sig_type_decls src/deriving.ml(767):25806-25944
                           (apply wrap_sig/8477
                             (after Ppxlib__Deriving.expand_sig_type_decls src/deriving.ml(768):25824-25873
                               (apply
                                 (field_imm 0
                                   (field_imm 2
                                     (global Ppxlib__Expansion_context!)))
                                 ctxt/8573))
                             (after Ppxlib__Deriving.expand_sig_type_decls src/deriving.ml(769):25884-25930
                               (apply
                                 (function prim/21784 stub (not prim/21784))
                                 (after Ppxlib__Deriving.expand_sig_type_decls src/deriving.ml(769):25892-25929
                                   (apply
                                     (field_imm 5
                                       (field_imm 2
                                         (global Ppxlib__Expansion_context!)))
                                     ctxt/8573))))
                             generated/8581)))))))))))
     expand_str_module_type_decl/8582 =
       (function ctxt/8584 mtd/8585 generators/8586
         (funct-body Ppxlib__Deriving.expand_str_module_type_decl src/deriving.ml(772)<ghost>:25978-26565
           (before Ppxlib__Deriving.expand_str_module_type_decl src/deriving.ml(773):26003-26565
             (let
               (*match*/21795 =
                  (after Ppxlib__Deriving.expand_str_module_type_decl src/deriving.ml(774):26031-26096
                    (apply (field_imm 11 Deriver/6977)
                      (field_imm 3 (field_imm 2 Deriver/6977))
                      generators/8586))
                l_err/8588 =a (field_imm 1 *match*/21795)
                generators/8587 =a (field_imm 0 *match*/21795))
               (before Ppxlib__Deriving.expand_str_module_type_decl src/deriving.ml(776):26104-26565
                 (let
                   (l_err/8589 =
                      (after Ppxlib__Deriving.expand_str_module_type_decl src/deriving.ml(777):26120-26231
                        (apply
                          (field_imm 48
                            (field_imm 91 (global Ppxlib__Import!)))
                          l_err/8588
                          (function err/8590
                            (funct-body Ppxlib__Deriving.expand_str_module_type_decl.(fun) src/deriving.ml(778):26138-26219
                              (before Ppxlib__Deriving.expand_str_module_type_decl.(fun) src/deriving.ml(779):26158-26218
                                (after Ppxlib__Deriving.expand_str_module_type_decl.(fun) src/deriving.ml(779):26158-26218
                                  (apply
                                    (field_imm 162
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!)))
                                    (field_imm 2 (global Ppxlib__Location!))
                                    err/8590 0))))))))
                   (before Ppxlib__Deriving.expand_str_module_type_decl src/deriving.ml(782):26239-26565
                     (let
                       (generated/8591 =
                          (after Ppxlib__Deriving.expand_str_module_type_decl src/deriving.ml(783):26259-26419
                            (apply merge_derived/8542
                              (makeblock 0 (makeblock 0 l_err/8589 0)
                                (after Ppxlib__Deriving.expand_str_module_type_decl src/deriving.ml(784):26314-26398
                                  (apply (field_imm 7 Generator/6276)
                                    ctxt/8584 mtd/8585 generators/8587
                                    (field_imm 162
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!)))))))))
                       (before Ppxlib__Deriving.expand_str_module_type_decl src/deriving.ml(788):26427-26565
                         (after Ppxlib__Deriving.expand_str_module_type_decl src/deriving.ml(788):26427-26565
                           (apply wrap_str/8452
                             (after Ppxlib__Deriving.expand_str_module_type_decl src/deriving.ml(789):26445-26494
                               (apply
                                 (field_imm 0
                                   (field_imm 2
                                     (global Ppxlib__Expansion_context!)))
                                 ctxt/8584))
                             (after Ppxlib__Deriving.expand_str_module_type_decl src/deriving.ml(790):26505-26551
                               (apply
                                 (function prim/21790 stub (not prim/21790))
                                 (after Ppxlib__Deriving.expand_str_module_type_decl src/deriving.ml(790):26513-26550
                                   (apply
                                     (field_imm 5
                                       (field_imm 2
                                         (global Ppxlib__Expansion_context!)))
                                     ctxt/8584))))
                             generated/8591)))))))))))
     expand_sig_module_type_decl/8592 =
       (function ctxt/8594 mtd/8595 generators/8596
         (funct-body Ppxlib__Deriving.expand_sig_module_type_decl src/deriving.ml(793)<ghost>:26599-27186
           (before Ppxlib__Deriving.expand_sig_module_type_decl src/deriving.ml(794):26624-27186
             (let
               (*match*/21801 =
                  (after Ppxlib__Deriving.expand_sig_module_type_decl src/deriving.ml(795):26652-26717
                    (apply (field_imm 11 Deriver/6977)
                      (field_imm 7 (field_imm 2 Deriver/6977))
                      generators/8596))
                l_err/8598 =a (field_imm 1 *match*/21801)
                generators/8597 =a (field_imm 0 *match*/21801))
               (before Ppxlib__Deriving.expand_sig_module_type_decl src/deriving.ml(797):26725-27186
                 (let
                   (l_err/8599 =
                      (after Ppxlib__Deriving.expand_sig_module_type_decl src/deriving.ml(798):26741-26852
                        (apply
                          (field_imm 48
                            (field_imm 91 (global Ppxlib__Import!)))
                          l_err/8598
                          (function err/8600
                            (funct-body Ppxlib__Deriving.expand_sig_module_type_decl.(fun) src/deriving.ml(799):26759-26840
                              (before Ppxlib__Deriving.expand_sig_module_type_decl.(fun) src/deriving.ml(800):26779-26839
                                (after Ppxlib__Deriving.expand_sig_module_type_decl.(fun) src/deriving.ml(800):26779-26839
                                  (apply
                                    (field_imm 147
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!)))
                                    (field_imm 2 (global Ppxlib__Location!))
                                    err/8600 0))))))))
                   (before Ppxlib__Deriving.expand_sig_module_type_decl src/deriving.ml(803):26860-27186
                     (let
                       (generated/8601 =
                          (after Ppxlib__Deriving.expand_sig_module_type_decl src/deriving.ml(804):26880-27040
                            (apply merge_derived/8542
                              (makeblock 0 (makeblock 0 l_err/8599 0)
                                (after Ppxlib__Deriving.expand_sig_module_type_decl src/deriving.ml(805):26935-27019
                                  (apply (field_imm 7 Generator/6276)
                                    ctxt/8594 mtd/8595 generators/8597
                                    (field_imm 147
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!)))))))))
                       (before Ppxlib__Deriving.expand_sig_module_type_decl src/deriving.ml(809):27048-27186
                         (after Ppxlib__Deriving.expand_sig_module_type_decl src/deriving.ml(809):27048-27186
                           (apply wrap_sig/8477
                             (after Ppxlib__Deriving.expand_sig_module_type_decl src/deriving.ml(810):27066-27115
                               (apply
                                 (field_imm 0
                                   (field_imm 2
                                     (global Ppxlib__Expansion_context!)))
                                 ctxt/8594))
                             (after Ppxlib__Deriving.expand_sig_module_type_decl src/deriving.ml(811):27126-27172
                               (apply
                                 (function prim/21796 stub (not prim/21796))
                                 (after Ppxlib__Deriving.expand_sig_module_type_decl src/deriving.ml(811):27134-27171
                                   (apply
                                     (field_imm 5
                                       (field_imm 2
                                         (global Ppxlib__Expansion_context!)))
                                     ctxt/8594))))
                             generated/8601)))))))))))
     expand_str_exception/8602 =
       (function ctxt/8604 ec/8605 generators/8606
         (funct-body Ppxlib__Deriving.expand_str_exception src/deriving.ml(814)<ghost>:27213-27791
           (before Ppxlib__Deriving.expand_str_exception src/deriving.ml(815):27237-27791
             (let
               (*match*/21807 =
                  (after Ppxlib__Deriving.expand_str_exception src/deriving.ml(816):27265-27323
                    (apply (field_imm 11 Deriver/6977)
                      (field_imm 2 (field_imm 2 Deriver/6977))
                      generators/8606))
                l_err/8608 =a (field_imm 1 *match*/21807)
                generators/8607 =a (field_imm 0 *match*/21807))
               (before Ppxlib__Deriving.expand_str_exception src/deriving.ml(818):27331-27791
                 (let
                   (l_err/8609 =
                      (after Ppxlib__Deriving.expand_str_exception src/deriving.ml(819):27347-27458
                        (apply
                          (field_imm 48
                            (field_imm 91 (global Ppxlib__Import!)))
                          l_err/8608
                          (function err/8610
                            (funct-body Ppxlib__Deriving.expand_str_exception.(fun) src/deriving.ml(820):27365-27446
                              (before Ppxlib__Deriving.expand_str_exception.(fun) src/deriving.ml(821):27385-27445
                                (after Ppxlib__Deriving.expand_str_exception.(fun) src/deriving.ml(821):27385-27445
                                  (apply
                                    (field_imm 162
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!)))
                                    (field_imm 2 (global Ppxlib__Location!))
                                    err/8610 0))))))))
                   (before Ppxlib__Deriving.expand_str_exception src/deriving.ml(824):27466-27791
                     (let
                       (generated/8611 =
                          (after Ppxlib__Deriving.expand_str_exception src/deriving.ml(825):27486-27645
                            (apply merge_derived/8542
                              (makeblock 0 (makeblock 0 l_err/8609 0)
                                (after Ppxlib__Deriving.expand_str_exception src/deriving.ml(826):27541-27624
                                  (apply (field_imm 7 Generator/6276)
                                    ctxt/8604 ec/8605 generators/8607
                                    (field_imm 162
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!)))))))))
                       (before Ppxlib__Deriving.expand_str_exception src/deriving.ml(830):27653-27791
                         (after Ppxlib__Deriving.expand_str_exception src/deriving.ml(830):27653-27791
                           (apply wrap_str/8452
                             (after Ppxlib__Deriving.expand_str_exception src/deriving.ml(831):27671-27720
                               (apply
                                 (field_imm 0
                                   (field_imm 2
                                     (global Ppxlib__Expansion_context!)))
                                 ctxt/8604))
                             (after Ppxlib__Deriving.expand_str_exception src/deriving.ml(832):27731-27777
                               (apply
                                 (function prim/21802 stub (not prim/21802))
                                 (after Ppxlib__Deriving.expand_str_exception src/deriving.ml(832):27739-27776
                                   (apply
                                     (field_imm 5
                                       (field_imm 2
                                         (global Ppxlib__Expansion_context!)))
                                     ctxt/8604))))
                             generated/8611)))))))))))
     expand_sig_exception/8612 =
       (function ctxt/8614 ec/8615 generators/8616
         (funct-body Ppxlib__Deriving.expand_sig_exception src/deriving.ml(835)<ghost>:27818-28396
           (before Ppxlib__Deriving.expand_sig_exception src/deriving.ml(836):27842-28396
             (let
               (*match*/21813 =
                  (after Ppxlib__Deriving.expand_sig_exception src/deriving.ml(837):27870-27928
                    (apply (field_imm 11 Deriver/6977)
                      (field_imm 6 (field_imm 2 Deriver/6977))
                      generators/8616))
                l_err/8618 =a (field_imm 1 *match*/21813)
                generators/8617 =a (field_imm 0 *match*/21813))
               (before Ppxlib__Deriving.expand_sig_exception src/deriving.ml(839):27936-28396
                 (let
                   (l_err/8619 =
                      (after Ppxlib__Deriving.expand_sig_exception src/deriving.ml(840):27952-28063
                        (apply
                          (field_imm 48
                            (field_imm 91 (global Ppxlib__Import!)))
                          l_err/8618
                          (function err/8620
                            (funct-body Ppxlib__Deriving.expand_sig_exception.(fun) src/deriving.ml(841):27970-28051
                              (before Ppxlib__Deriving.expand_sig_exception.(fun) src/deriving.ml(842):27990-28050
                                (after Ppxlib__Deriving.expand_sig_exception.(fun) src/deriving.ml(842):27990-28050
                                  (apply
                                    (field_imm 147
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!)))
                                    (field_imm 2 (global Ppxlib__Location!))
                                    err/8620 0))))))))
                   (before Ppxlib__Deriving.expand_sig_exception src/deriving.ml(845):28071-28396
                     (let
                       (generated/8621 =
                          (after Ppxlib__Deriving.expand_sig_exception src/deriving.ml(846):28091-28250
                            (apply merge_derived/8542
                              (makeblock 0 (makeblock 0 l_err/8619 0)
                                (after Ppxlib__Deriving.expand_sig_exception src/deriving.ml(847):28146-28229
                                  (apply (field_imm 7 Generator/6276)
                                    ctxt/8614 ec/8615 generators/8617
                                    (field_imm 147
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!)))))))))
                       (before Ppxlib__Deriving.expand_sig_exception src/deriving.ml(851):28258-28396
                         (after Ppxlib__Deriving.expand_sig_exception src/deriving.ml(851):28258-28396
                           (apply wrap_sig/8477
                             (after Ppxlib__Deriving.expand_sig_exception src/deriving.ml(852):28276-28325
                               (apply
                                 (field_imm 0
                                   (field_imm 2
                                     (global Ppxlib__Expansion_context!)))
                                 ctxt/8614))
                             (after Ppxlib__Deriving.expand_sig_exception src/deriving.ml(853):28336-28382
                               (apply
                                 (function prim/21808 stub (not prim/21808))
                                 (after Ppxlib__Deriving.expand_sig_exception src/deriving.ml(853):28344-28381
                                   (apply
                                     (field_imm 5
                                       (field_imm 2
                                         (global Ppxlib__Expansion_context!)))
                                     ctxt/8614))))
                             generated/8621)))))))))))
     expand_str_type_ext/8622 =
       (function ctxt/8624 te/8625 generators/8626
         (funct-body Ppxlib__Deriving.expand_str_type_ext src/deriving.ml(856)<ghost>:28422-28999
           (before Ppxlib__Deriving.expand_str_type_ext src/deriving.ml(857):28446-28999
             (let
               (*match*/21819 =
                  (after Ppxlib__Deriving.expand_str_type_ext src/deriving.ml(858):28474-28531
                    (apply (field_imm 11 Deriver/6977)
                      (field_imm 1 (field_imm 2 Deriver/6977))
                      generators/8626))
                l_err/8628 =a (field_imm 1 *match*/21819)
                generators/8627 =a (field_imm 0 *match*/21819))
               (before Ppxlib__Deriving.expand_str_type_ext src/deriving.ml(860):28539-28999
                 (let
                   (l_err/8629 =
                      (after Ppxlib__Deriving.expand_str_type_ext src/deriving.ml(861):28555-28666
                        (apply
                          (field_imm 48
                            (field_imm 91 (global Ppxlib__Import!)))
                          l_err/8628
                          (function err/8630
                            (funct-body Ppxlib__Deriving.expand_str_type_ext.(fun) src/deriving.ml(862):28573-28654
                              (before Ppxlib__Deriving.expand_str_type_ext.(fun) src/deriving.ml(863):28593-28653
                                (after Ppxlib__Deriving.expand_str_type_ext.(fun) src/deriving.ml(863):28593-28653
                                  (apply
                                    (field_imm 162
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!)))
                                    (field_imm 2 (global Ppxlib__Location!))
                                    err/8630 0))))))))
                   (before Ppxlib__Deriving.expand_str_type_ext src/deriving.ml(866):28674-28999
                     (let
                       (generated/8631 =
                          (after Ppxlib__Deriving.expand_str_type_ext src/deriving.ml(867):28694-28853
                            (apply merge_derived/8542
                              (makeblock 0 (makeblock 0 l_err/8629 0)
                                (after Ppxlib__Deriving.expand_str_type_ext src/deriving.ml(868):28749-28832
                                  (apply (field_imm 7 Generator/6276)
                                    ctxt/8624 te/8625 generators/8627
                                    (field_imm 162
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!)))))))))
                       (before Ppxlib__Deriving.expand_str_type_ext src/deriving.ml(872):28861-28999
                         (after Ppxlib__Deriving.expand_str_type_ext src/deriving.ml(872):28861-28999
                           (apply wrap_str/8452
                             (after Ppxlib__Deriving.expand_str_type_ext src/deriving.ml(873):28879-28928
                               (apply
                                 (field_imm 0
                                   (field_imm 2
                                     (global Ppxlib__Expansion_context!)))
                                 ctxt/8624))
                             (after Ppxlib__Deriving.expand_str_type_ext src/deriving.ml(874):28939-28985
                               (apply
                                 (function prim/21814 stub (not prim/21814))
                                 (after Ppxlib__Deriving.expand_str_type_ext src/deriving.ml(874):28947-28984
                                   (apply
                                     (field_imm 5
                                       (field_imm 2
                                         (global Ppxlib__Expansion_context!)))
                                     ctxt/8624))))
                             generated/8631)))))))))))
     expand_sig_type_ext/8632 =
       (function ctxt/8634 te/8635 generators/8636
         (funct-body Ppxlib__Deriving.expand_sig_type_ext src/deriving.ml(877)<ghost>:29025-29602
           (before Ppxlib__Deriving.expand_sig_type_ext src/deriving.ml(878):29049-29602
             (let
               (*match*/21825 =
                  (after Ppxlib__Deriving.expand_sig_type_ext src/deriving.ml(879):29077-29134
                    (apply (field_imm 11 Deriver/6977)
                      (field_imm 5 (field_imm 2 Deriver/6977))
                      generators/8636))
                l_err/8638 =a (field_imm 1 *match*/21825)
                generators/8637 =a (field_imm 0 *match*/21825))
               (before Ppxlib__Deriving.expand_sig_type_ext src/deriving.ml(881):29142-29602
                 (let
                   (l_err/8639 =
                      (after Ppxlib__Deriving.expand_sig_type_ext src/deriving.ml(882):29158-29269
                        (apply
                          (field_imm 48
                            (field_imm 91 (global Ppxlib__Import!)))
                          l_err/8638
                          (function err/8640
                            (funct-body Ppxlib__Deriving.expand_sig_type_ext.(fun) src/deriving.ml(883):29176-29257
                              (before Ppxlib__Deriving.expand_sig_type_ext.(fun) src/deriving.ml(884):29196-29256
                                (after Ppxlib__Deriving.expand_sig_type_ext.(fun) src/deriving.ml(884):29196-29256
                                  (apply
                                    (field_imm 147
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!)))
                                    (field_imm 2 (global Ppxlib__Location!))
                                    err/8640 0))))))))
                   (before Ppxlib__Deriving.expand_sig_type_ext src/deriving.ml(887):29277-29602
                     (let
                       (generated/8641 =
                          (after Ppxlib__Deriving.expand_sig_type_ext src/deriving.ml(888):29297-29456
                            (apply merge_derived/8542
                              (makeblock 0 (makeblock 0 l_err/8639 0)
                                (after Ppxlib__Deriving.expand_sig_type_ext src/deriving.ml(889):29352-29435
                                  (apply (field_imm 7 Generator/6276)
                                    ctxt/8634 te/8635 generators/8637
                                    (field_imm 147
                                      (field_imm 0
                                        (global Ppxlib__Ast_builder!)))))))))
                       (before Ppxlib__Deriving.expand_sig_type_ext src/deriving.ml(893):29464-29602
                         (after Ppxlib__Deriving.expand_sig_type_ext src/deriving.ml(893):29464-29602
                           (apply wrap_sig/8477
                             (after Ppxlib__Deriving.expand_sig_type_ext src/deriving.ml(894):29482-29531
                               (apply
                                 (field_imm 0
                                   (field_imm 2
                                     (global Ppxlib__Expansion_context!)))
                                 ctxt/8634))
                             (after Ppxlib__Deriving.expand_sig_type_ext src/deriving.ml(895):29542-29588
                               (apply
                                 (function prim/21820 stub (not prim/21820))
                                 (after Ppxlib__Deriving.expand_sig_type_ext src/deriving.ml(895):29550-29587
                                   (apply
                                     (field_imm 5
                                       (field_imm 2
                                         (global Ppxlib__Expansion_context!)))
                                     ctxt/8634))))
                             generated/8641)))))))))))
     rules/8642 =
       (function typ/8644 expand_sig/8645 expand_str/8646 rule_str/8647
         rule_sig/8648 rule_str_expect/8649 rule_sig_expect/8650
         (funct-body Ppxlib__Deriving.rules src/deriving.ml(898)<ghost>:29614-30066
           (before Ppxlib__Deriving.rules src/deriving.ml(900):29705-30066
             (let (prefix/8651 = "ppxlib.")
               (before Ppxlib__Deriving.rules src/deriving.ml(901):29733-30066
                 (let
                   (deriving_attr/8652 =
                      (after Ppxlib__Deriving.rules src/deriving.ml(901):29753-29792
                        (apply mk_deriving_attr/7160 typ/8644 prefix/8651 "")))
                   (before Ppxlib__Deriving.rules src/deriving.ml(902):29798-30066
                     (let
                       (deriving_attr_expect/8653 =
                          (after Ppxlib__Deriving.rules src/deriving.ml(902):29825-29871
                            (apply mk_deriving_attr/7160 typ/8644 prefix/8651
                              "_inline")))
                       (before Ppxlib__Deriving.rules src/deriving.ml(903):29877-30066
                         (makeblock 0
                           (after Ppxlib__Deriving.rules src/deriving.ml(904):29883-29916
                             (apply rule_sig/8648 deriving_attr/8652
                               expand_sig/8645))
                           (makeblock 0
                             (after Ppxlib__Deriving.rules src/deriving.ml(905):29922-29955
                               (apply rule_str/8647 deriving_attr/8652
                                 expand_str/8646))
                             (makeblock 0
                               (after Ppxlib__Deriving.rules src/deriving.ml(906):29961-30008
                                 (apply rule_str_expect/8649
                                   deriving_attr_expect/8653 expand_str/8646))
                               (makeblock 0
                                 (after Ppxlib__Deriving.rules src/deriving.ml(907):30014-30061
                                   (apply rule_sig_expect/8650
                                     deriving_attr_expect/8653
                                     expand_sig/8645))
                                 0)))))))))))))
     rules_type_decl/8654 =
       (after Ppxlib__Deriving.rules_type_decl src/deriving.ml(911):30092-30423
         (apply rules/8642 2 expand_sig_type_decls/8571
           expand_str_type_decls/8560
           (field_imm 4 (field_imm 0 (global Ppxlib__Context_free!)))
           (field_imm 5 (field_imm 0 (global Ppxlib__Context_free!)))
           (field_imm 6 (field_imm 0 (global Ppxlib__Context_free!)))
           (field_imm 7 (field_imm 0 (global Ppxlib__Context_free!)))))
     rules_type_ext/8677 =
       (after Ppxlib__Deriving.rules_type_ext src/deriving.ml(919):30448-30769
         (apply rules/8642 4 expand_sig_type_ext/8632
           expand_str_type_ext/8622
           (field_imm 12 (field_imm 0 (global Ppxlib__Context_free!)))
           (field_imm 13 (field_imm 0 (global Ppxlib__Context_free!)))
           (field_imm 14 (field_imm 0 (global Ppxlib__Context_free!)))
           (field_imm 15 (field_imm 0 (global Ppxlib__Context_free!)))))
     rules_exception/8678 =
       (after Ppxlib__Deriving.rules_exception src/deriving.ml(927):30795-31122
         (apply rules/8642 3 expand_sig_exception/8612
           expand_str_exception/8602
           (field_imm 16 (field_imm 0 (global Ppxlib__Context_free!)))
           (field_imm 17 (field_imm 0 (global Ppxlib__Context_free!)))
           (field_imm 18 (field_imm 0 (global Ppxlib__Context_free!)))
           (field_imm 19 (field_imm 0 (global Ppxlib__Context_free!)))))
     rules_module_type_decl/8679 =
       (after Ppxlib__Deriving.rules_module_type_decl src/deriving.ml(935):31155-31533
         (apply rules/8642 17 expand_sig_module_type_decl/8592
           expand_str_module_type_decl/8582
           (field_imm 8 (field_imm 0 (global Ppxlib__Context_free!)))
           (field_imm 9 (field_imm 0 (global Ppxlib__Context_free!)))
           (field_imm 10 (field_imm 0 (global Ppxlib__Context_free!)))
           (field_imm 11 (field_imm 0 (global Ppxlib__Context_free!)))))
     *match*/21827 =
       (let
         (rules/8680 =
            (after Ppxlib__Deriving src/deriving.ml(944):31562-31657
              (apply (field_imm 52 (field_imm 91 (global Ppxlib__Import!)))
                (makeblock 0 rules_type_decl/8654
                  (makeblock 0 rules_type_ext/8677
                    (makeblock 0 rules_exception/8678
                      (makeblock 0 rules_module_type_decl/8679 0)))))))
         (before Ppxlib__Deriving src/deriving.ml(947):31665-31738
           (after Ppxlib__Deriving src/deriving.ml(947):31665-31738
             (apply (field_imm 4 (global Ppxlib__Driver!)) 0
               (makeblock 0 rules/8680) 0 0 0 0 0 0 0 0 0
               [0: [0: "type_conv" 0]] "deriving")))))
    (pseudo <unknown location>
      (makeblock 0
        (makeblock 0 (field_mut 332 Args/4923) (field_mut 330 Args/4923)
          (field_mut 331 Args/4923) (field_mut 333 Args/4923)
          (field_mut 0 Args/4923) (field_mut 1 Args/4923)
          (field_mut 2 Args/4923) (field_mut 3 Args/4923)
          (field_mut 4 Args/4923) (field_mut 5 Args/4923)
          (field_mut 6 Args/4923) (field_mut 7 Args/4923)
          (field_mut 8 Args/4923) (field_mut 9 Args/4923)
          (field_mut 10 Args/4923) (field_mut 11 Args/4923)
          (field_mut 12 Args/4923) (field_mut 13 Args/4923)
          (field_mut 14 Args/4923) (field_mut 15 Args/4923)
          (field_mut 16 Args/4923) (field_mut 17 Args/4923)
          (field_mut 18 Args/4923) (field_mut 19 Args/4923)
          (field_mut 20 Args/4923) (field_mut 21 Args/4923)
          (field_mut 22 Args/4923) (field_mut 23 Args/4923)
          (field_mut 24 Args/4923) (field_mut 25 Args/4923)
          (field_mut 26 Args/4923) (field_mut 27 Args/4923)
          (field_mut 28 Args/4923) (field_mut 29 Args/4923)
          (field_mut 30 Args/4923) (field_mut 31 Args/4923)
          (field_mut 32 Args/4923) (field_mut 33 Args/4923)
          (field_mut 34 Args/4923) (field_mut 35 Args/4923)
          (field_mut 36 Args/4923) (field_mut 37 Args/4923)
          (field_mut 38 Args/4923) (field_mut 39 Args/4923)
          (field_mut 40 Args/4923) (field_mut 41 Args/4923)
          (field_mut 42 Args/4923) (field_mut 43 Args/4923)
          (field_mut 44 Args/4923) (field_mut 45 Args/4923)
          (field_mut 46 Args/4923) (field_mut 47 Args/4923)
          (field_mut 48 Args/4923) (field_mut 49 Args/4923)
          (field_mut 50 Args/4923) (field_mut 51 Args/4923)
          (field_mut 52 Args/4923) (field_mut 53 Args/4923)
          (field_mut 54 Args/4923) (field_mut 55 Args/4923)
          (field_mut 56 Args/4923) (field_mut 57 Args/4923)
          (field_mut 58 Args/4923) (field_mut 59 Args/4923)
          (field_mut 60 Args/4923) (field_mut 61 Args/4923)
          (field_mut 62 Args/4923) (field_mut 63 Args/4923)
          (field_mut 64 Args/4923) (field_mut 65 Args/4923)
          (field_mut 66 Args/4923) (field_mut 67 Args/4923)
          (field_mut 68 Args/4923) (field_mut 69 Args/4923)
          (field_mut 70 Args/4923) (field_mut 71 Args/4923)
          (field_mut 72 Args/4923) (field_mut 73 Args/4923)
          (field_mut 74 Args/4923) (field_mut 75 Args/4923)
          (field_mut 76 Args/4923) (field_mut 77 Args/4923)
          (field_mut 78 Args/4923) (field_mut 79 Args/4923)
          (field_mut 80 Args/4923) (field_mut 81 Args/4923)
          (field_mut 82 Args/4923) (field_mut 83 Args/4923)
          (field_mut 84 Args/4923) (field_mut 85 Args/4923)
          (field_mut 86 Args/4923) (field_mut 87 Args/4923)
          (field_mut 88 Args/4923) (field_mut 89 Args/4923)
          (field_mut 90 Args/4923) (field_mut 91 Args/4923)
          (field_mut 92 Args/4923) (field_mut 93 Args/4923)
          (field_mut 94 Args/4923) (field_mut 95 Args/4923)
          (field_mut 96 Args/4923) (field_mut 97 Args/4923)
          (field_mut 98 Args/4923) (field_mut 99 Args/4923)
          (field_mut 100 Args/4923) (field_mut 101 Args/4923)
          (field_mut 102 Args/4923) (field_mut 103 Args/4923)
          (field_mut 104 Args/4923) (field_mut 105 Args/4923)
          (field_mut 106 Args/4923) (field_mut 107 Args/4923)
          (field_mut 108 Args/4923) (field_mut 109 Args/4923)
          (field_mut 110 Args/4923) (field_mut 111 Args/4923)
          (field_mut 112 Args/4923) (field_mut 113 Args/4923)
          (field_mut 114 Args/4923) (field_mut 115 Args/4923)
          (field_mut 116 Args/4923) (field_mut 117 Args/4923)
          (field_mut 118 Args/4923) (field_mut 119 Args/4923)
          (field_mut 120 Args/4923) (field_mut 121 Args/4923)
          (field_mut 122 Args/4923) (field_mut 123 Args/4923)
          (field_mut 124 Args/4923) (field_mut 125 Args/4923)
          (field_mut 126 Args/4923) (field_mut 127 Args/4923)
          (field_mut 128 Args/4923) (field_mut 129 Args/4923)
          (field_mut 130 Args/4923) (field_mut 131 Args/4923)
          (field_mut 132 Args/4923) (field_mut 133 Args/4923)
          (field_mut 134 Args/4923) (field_mut 135 Args/4923)
          (field_mut 136 Args/4923) (field_mut 137 Args/4923)
          (field_mut 138 Args/4923) (field_mut 139 Args/4923)
          (field_mut 140 Args/4923) (field_mut 141 Args/4923)
          (field_mut 142 Args/4923) (field_mut 143 Args/4923)
          (field_mut 144 Args/4923) (field_mut 145 Args/4923)
          (field_mut 146 Args/4923) (field_mut 147 Args/4923)
          (field_mut 148 Args/4923) (field_mut 149 Args/4923)
          (field_mut 150 Args/4923) (field_mut 151 Args/4923)
          (field_mut 152 Args/4923) (field_mut 153 Args/4923)
          (field_mut 154 Args/4923) (field_mut 155 Args/4923)
          (field_mut 156 Args/4923) (field_mut 157 Args/4923)
          (field_mut 158 Args/4923) (field_mut 159 Args/4923)
          (field_mut 160 Args/4923) (field_mut 161 Args/4923)
          (field_mut 162 Args/4923) (field_mut 163 Args/4923)
          (field_mut 164 Args/4923) (field_mut 165 Args/4923)
          (field_mut 166 Args/4923) (field_mut 167 Args/4923)
          (field_mut 168 Args/4923) (field_mut 169 Args/4923)
          (field_mut 170 Args/4923) (field_mut 171 Args/4923)
          (field_mut 172 Args/4923) (field_mut 173 Args/4923)
          (field_mut 174 Args/4923) (field_mut 175 Args/4923)
          (field_mut 176 Args/4923) (field_mut 177 Args/4923)
          (field_mut 178 Args/4923) (field_mut 179 Args/4923)
          (field_mut 180 Args/4923) (field_mut 181 Args/4923)
          (field_mut 182 Args/4923) (field_mut 183 Args/4923)
          (field_mut 184 Args/4923) (field_mut 185 Args/4923)
          (field_mut 186 Args/4923) (field_mut 187 Args/4923)
          (field_mut 188 Args/4923) (field_mut 189 Args/4923)
          (field_mut 190 Args/4923) (field_mut 191 Args/4923)
          (field_mut 192 Args/4923) (field_mut 193 Args/4923)
          (field_mut 194 Args/4923) (field_mut 195 Args/4923)
          (field_mut 196 Args/4923) (field_mut 197 Args/4923)
          (field_mut 198 Args/4923) (field_mut 199 Args/4923)
          (field_mut 200 Args/4923) (field_mut 201 Args/4923)
          (field_mut 202 Args/4923) (field_mut 203 Args/4923)
          (field_mut 204 Args/4923) (field_mut 205 Args/4923)
          (field_mut 206 Args/4923) (field_mut 207 Args/4923)
          (field_mut 208 Args/4923) (field_mut 209 Args/4923)
          (field_mut 210 Args/4923) (field_mut 211 Args/4923)
          (field_mut 212 Args/4923) (field_mut 213 Args/4923)
          (field_mut 214 Args/4923) (field_mut 215 Args/4923)
          (field_mut 216 Args/4923) (field_mut 217 Args/4923)
          (field_mut 218 Args/4923) (field_mut 219 Args/4923)
          (field_mut 220 Args/4923) (field_mut 221 Args/4923)
          (field_mut 222 Args/4923) (field_mut 223 Args/4923)
          (field_mut 224 Args/4923) (field_mut 225 Args/4923)
          (field_mut 226 Args/4923) (field_mut 227 Args/4923)
          (field_mut 228 Args/4923) (field_mut 229 Args/4923)
          (field_mut 230 Args/4923) (field_mut 231 Args/4923)
          (field_mut 232 Args/4923) (field_mut 233 Args/4923)
          (field_mut 234 Args/4923) (field_mut 235 Args/4923)
          (field_mut 236 Args/4923) (field_mut 237 Args/4923)
          (field_mut 238 Args/4923) (field_mut 239 Args/4923)
          (field_mut 240 Args/4923) (field_mut 241 Args/4923)
          (field_mut 242 Args/4923) (field_mut 243 Args/4923)
          (field_mut 244 Args/4923) (field_mut 245 Args/4923)
          (field_mut 246 Args/4923) (field_mut 247 Args/4923)
          (field_mut 248 Args/4923) (field_mut 249 Args/4923)
          (field_mut 250 Args/4923) (field_mut 251 Args/4923)
          (field_mut 252 Args/4923) (field_mut 253 Args/4923)
          (field_mut 254 Args/4923) (field_mut 255 Args/4923)
          (field_mut 256 Args/4923) (field_mut 257 Args/4923)
          (field_mut 258 Args/4923) (field_mut 259 Args/4923)
          (field_mut 260 Args/4923) (field_mut 261 Args/4923)
          (field_mut 262 Args/4923) (field_mut 263 Args/4923)
          (field_mut 264 Args/4923) (field_mut 265 Args/4923)
          (field_mut 266 Args/4923) (field_mut 267 Args/4923)
          (field_mut 268 Args/4923) (field_mut 269 Args/4923)
          (field_mut 270 Args/4923) (field_mut 271 Args/4923)
          (field_mut 272 Args/4923) (field_mut 273 Args/4923)
          (field_mut 274 Args/4923) (field_mut 275 Args/4923)
          (field_mut 276 Args/4923) (field_mut 277 Args/4923)
          (field_mut 278 Args/4923) (field_mut 279 Args/4923)
          (field_mut 280 Args/4923) (field_mut 281 Args/4923)
          (field_mut 282 Args/4923) (field_mut 283 Args/4923)
          (field_mut 284 Args/4923) (field_mut 285 Args/4923)
          (field_mut 286 Args/4923) (field_mut 287 Args/4923)
          (field_mut 288 Args/4923) (field_mut 289 Args/4923)
          (field_mut 290 Args/4923) (field_mut 291 Args/4923)
          (field_mut 292 Args/4923) (field_mut 293 Args/4923)
          (field_mut 294 Args/4923) (field_mut 295 Args/4923)
          (field_mut 296 Args/4923) (field_mut 297 Args/4923)
          (field_mut 298 Args/4923) (field_mut 299 Args/4923)
          (field_mut 300 Args/4923) (field_mut 301 Args/4923)
          (field_mut 302 Args/4923) (field_mut 303 Args/4923)
          (field_mut 304 Args/4923) (field_mut 305 Args/4923)
          (field_mut 306 Args/4923) (field_mut 307 Args/4923)
          (field_mut 308 Args/4923) (field_mut 309 Args/4923)
          (field_mut 310 Args/4923) (field_mut 311 Args/4923)
          (field_mut 312 Args/4923) (field_mut 313 Args/4923)
          (field_mut 314 Args/4923) (field_mut 315 Args/4923)
          (field_mut 316 Args/4923) (field_mut 317 Args/4923)
          (field_mut 318 Args/4923) (field_mut 319 Args/4923)
          (field_mut 320 Args/4923) (field_mut 321 Args/4923)
          (field_mut 322 Args/4923) (field_mut 323 Args/4923)
          (field_mut 324 Args/4923) (field_mut 325 Args/4923)
          (field_mut 326 Args/4923) (field_mut 327 Args/4923)
          (field_mut 328 Args/4923) (field_mut 329 Args/4923))
        (makeblock 0 (field_mut 2 Generator/6276)
          (field_mut 3 Generator/6276) (field_mut 1 Generator/6276)
          (field_mut 6 Generator/6276))
        add/6978 add_alias/6979 ignore/4925))))
