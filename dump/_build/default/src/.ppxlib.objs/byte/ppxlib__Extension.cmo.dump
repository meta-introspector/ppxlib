[
  structure_item (src/extension.ml[1,0+0]..[1,0+12])
    Pstr_open Override
    module_expr (src/extension.ml[1,0+6]..[1,0+12])
      Pmod_ident "Import" (src/extension.ml[1,0+6]..[1,0+12])
  structure_item (src/extension.ml[2,13+0]..[2,13+11])
    Pstr_open Fresh
    module_expr (src/extension.ml[2,13+5]..[2,13+11])
      Pmod_ident "Common" (src/extension.ml[2,13+5]..[2,13+11])
  structure_item (src/extension.ml[4,26+0]..[4,26+68])
    Pstr_type Rec
    [
      type_declaration "equality" (src/extension.ml[4,26+12]..[4,26+20]) (src/extension.ml[4,26+0]..[4,26+68])
        ptype_params =
          [
            core_type (src/extension.ml[4,26+6]..[4,26+7])
              Ptyp_any
            core_type (src/extension.ml[4,26+9]..[4,26+10])
              Ptyp_any
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (src/extension.ml[4,26+23]..[4,26+45])
                "Eq" (src/extension.ml[4,26+23]..[4,26+25])
                []
                Some
                  core_type (src/extension.ml[4,26+28]..[4,26+45])
                    Ptyp_constr "equality" (src/extension.ml[4,26+37]..[4,26+45])
                    [
                      core_type (src/extension.ml[4,26+29]..[4,26+31])
                        Ptyp_var a
                      core_type (src/extension.ml[4,26+33]..[4,26+35])
                        Ptyp_var a
                    ]
              (src/extension.ml[4,26+46]..[4,26+68])
                "Ne" (src/extension.ml[4,26+48]..[4,26+50])
                []
                Some
                  core_type (src/extension.ml[4,26+53]..[4,26+68])
                    Ptyp_constr "equality" (src/extension.ml[4,26+60]..[4,26+68])
                    [
                      core_type (src/extension.ml[4,26+54]..[4,26+55])
                        Ptyp_any
                      core_type (src/extension.ml[4,26+57]..[4,26+58])
                        Ptyp_any
                    ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (src/extension.ml[6,96+0]..[133,5037+3])
    Pstr_module
    "Context" (src/extension.ml[6,96+7]..[6,96+14])
      module_expr (src/extension.ml[6,96+17]..[133,5037+3])
        Pmod_structure
        [
          structure_item (src/extension.ml[7,120+2]..[19,512+37])
            Pstr_type Rec
            [
              type_declaration "t" (src/extension.ml[7,120+10]..[7,120+11]) (src/extension.ml[7,120+2]..[19,512+37])
                ptype_params =
                  [
                    core_type (src/extension.ml[7,120+7]..[7,120+9])
                      Ptyp_var a
                  ]
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (src/extension.ml[8,134+4]..[8,134+31])
                        "Class_expr" (src/extension.ml[8,134+6]..[8,134+16])
                        []
                        Some
                          core_type (src/extension.ml[8,134+19]..[8,134+31])
                            Ptyp_constr "t" (src/extension.ml[8,134+30]..[8,134+31])
                            [
                              core_type (src/extension.ml[8,134+19]..[8,134+29])
                                Ptyp_constr "class_expr" (src/extension.ml[8,134+19]..[8,134+29])
                                []
                            ]
                      (src/extension.ml[9,166+4]..[9,166+33])
                        "Class_field" (src/extension.ml[9,166+6]..[9,166+17])
                        []
                        Some
                          core_type (src/extension.ml[9,166+20]..[9,166+33])
                            Ptyp_constr "t" (src/extension.ml[9,166+32]..[9,166+33])
                            [
                              core_type (src/extension.ml[9,166+20]..[9,166+31])
                                Ptyp_constr "class_field" (src/extension.ml[9,166+20]..[9,166+31])
                                []
                            ]
                      (src/extension.ml[10,200+4]..[10,200+31])
                        "Class_type" (src/extension.ml[10,200+6]..[10,200+16])
                        []
                        Some
                          core_type (src/extension.ml[10,200+19]..[10,200+31])
                            Ptyp_constr "t" (src/extension.ml[10,200+30]..[10,200+31])
                            [
                              core_type (src/extension.ml[10,200+19]..[10,200+29])
                                Ptyp_constr "class_type" (src/extension.ml[10,200+19]..[10,200+29])
                                []
                            ]
                      (src/extension.ml[11,232+4]..[11,232+43])
                        "Class_type_field" (src/extension.ml[11,232+6]..[11,232+22])
                        []
                        Some
                          core_type (src/extension.ml[11,232+25]..[11,232+43])
                            Ptyp_constr "t" (src/extension.ml[11,232+42]..[11,232+43])
                            [
                              core_type (src/extension.ml[11,232+25]..[11,232+41])
                                Ptyp_constr "class_type_field" (src/extension.ml[11,232+25]..[11,232+41])
                                []
                            ]
                      (src/extension.ml[12,276+4]..[12,276+29])
                        "Core_type" (src/extension.ml[12,276+6]..[12,276+15])
                        []
                        Some
                          core_type (src/extension.ml[12,276+18]..[12,276+29])
                            Ptyp_constr "t" (src/extension.ml[12,276+28]..[12,276+29])
                            [
                              core_type (src/extension.ml[12,276+18]..[12,276+27])
                                Ptyp_constr "core_type" (src/extension.ml[12,276+18]..[12,276+27])
                                []
                            ]
                      (src/extension.ml[13,306+4]..[13,306+31])
                        "Expression" (src/extension.ml[13,306+6]..[13,306+16])
                        []
                        Some
                          core_type (src/extension.ml[13,306+19]..[13,306+31])
                            Ptyp_constr "t" (src/extension.ml[13,306+30]..[13,306+31])
                            [
                              core_type (src/extension.ml[13,306+19]..[13,306+29])
                                Ptyp_constr "expression" (src/extension.ml[13,306+19]..[13,306+29])
                                []
                            ]
                      (src/extension.ml[14,338+4]..[14,338+33])
                        "Module_expr" (src/extension.ml[14,338+6]..[14,338+17])
                        []
                        Some
                          core_type (src/extension.ml[14,338+20]..[14,338+33])
                            Ptyp_constr "t" (src/extension.ml[14,338+32]..[14,338+33])
                            [
                              core_type (src/extension.ml[14,338+20]..[14,338+31])
                                Ptyp_constr "module_expr" (src/extension.ml[14,338+20]..[14,338+31])
                                []
                            ]
                      (src/extension.ml[15,372+4]..[15,372+33])
                        "Module_type" (src/extension.ml[15,372+6]..[15,372+17])
                        []
                        Some
                          core_type (src/extension.ml[15,372+20]..[15,372+33])
                            Ptyp_constr "t" (src/extension.ml[15,372+32]..[15,372+33])
                            [
                              core_type (src/extension.ml[15,372+20]..[15,372+31])
                                Ptyp_constr "module_type" (src/extension.ml[15,372+20]..[15,372+31])
                                []
                            ]
                      (src/extension.ml[16,406+4]..[16,406+25])
                        "Pattern" (src/extension.ml[16,406+6]..[16,406+13])
                        []
                        Some
                          core_type (src/extension.ml[16,406+16]..[16,406+25])
                            Ptyp_constr "t" (src/extension.ml[16,406+24]..[16,406+25])
                            [
                              core_type (src/extension.ml[16,406+16]..[16,406+23])
                                Ptyp_constr "pattern" (src/extension.ml[16,406+16]..[16,406+23])
                                []
                            ]
                      (src/extension.ml[17,432+4]..[17,432+39])
                        "Signature_item" (src/extension.ml[17,432+6]..[17,432+20])
                        []
                        Some
                          core_type (src/extension.ml[17,432+23]..[17,432+39])
                            Ptyp_constr "t" (src/extension.ml[17,432+38]..[17,432+39])
                            [
                              core_type (src/extension.ml[17,432+23]..[17,432+37])
                                Ptyp_constr "signature_item" (src/extension.ml[17,432+23]..[17,432+37])
                                []
                            ]
                      (src/extension.ml[18,472+4]..[18,472+39])
                        "Structure_item" (src/extension.ml[18,472+6]..[18,472+20])
                        []
                        Some
                          core_type (src/extension.ml[18,472+23]..[18,472+39])
                            Ptyp_constr "t" (src/extension.ml[18,472+38]..[18,472+39])
                            [
                              core_type (src/extension.ml[18,472+23]..[18,472+37])
                                Ptyp_constr "structure_item" (src/extension.ml[18,472+23]..[18,472+37])
                                []
                            ]
                      (src/extension.ml[19,512+4]..[19,512+37])
                        "Ppx_import" (src/extension.ml[19,512+6]..[19,512+16])
                        []
                        Some
                          core_type (src/extension.ml[19,512+19]..[19,512+37])
                            Ptyp_constr "t" (src/extension.ml[19,512+36]..[19,512+37])
                            [
                              core_type (src/extension.ml[19,512+19]..[19,512+35])
                                Ptyp_constr "type_declaration" (src/extension.ml[19,512+19]..[19,512+35])
                                []
                            ]
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (src/extension.ml[21,551+2]..[21,551+33])
            Pstr_type Rec
            [
              type_declaration "packed" (src/extension.ml[21,551+7]..[21,551+13]) (src/extension.ml[21,551+2]..[21,551+33])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (src/extension.ml[21,551+16]..[21,551+33])
                        "T" (src/extension.ml[21,551+16]..[21,551+17])
                        [
                          core_type (src/extension.ml[21,551+20]..[21,551+23])
                            Ptyp_constr "t" (src/extension.ml[21,551+22]..[21,551+23])
                            [
                              core_type (src/extension.ml[21,551+20]..[21,551+21])
                                Ptyp_any
                            ]
                        ]
                        Some
                          core_type (src/extension.ml[21,551+27]..[21,551+33])
                            Ptyp_constr "packed" (src/extension.ml[21,551+27]..[21,551+33])
                            []
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (src/extension.ml[23,586+2]..[23,586+29])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[23,586+6]..[23,586+16])
                  Ppat_var "class_expr" (src/extension.ml[23,586+6]..[23,586+16])
                expression (src/extension.ml[23,586+19]..[23,586+29])
                  Pexp_construct "Class_expr" (src/extension.ml[23,586+19]..[23,586+29])
                  None
            ]
          structure_item (src/extension.ml[24,616+2]..[24,616+31])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[24,616+6]..[24,616+17])
                  Ppat_var "class_field" (src/extension.ml[24,616+6]..[24,616+17])
                expression (src/extension.ml[24,616+20]..[24,616+31])
                  Pexp_construct "Class_field" (src/extension.ml[24,616+20]..[24,616+31])
                  None
            ]
          structure_item (src/extension.ml[25,648+2]..[25,648+29])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[25,648+6]..[25,648+16])
                  Ppat_var "class_type" (src/extension.ml[25,648+6]..[25,648+16])
                expression (src/extension.ml[25,648+19]..[25,648+29])
                  Pexp_construct "Class_type" (src/extension.ml[25,648+19]..[25,648+29])
                  None
            ]
          structure_item (src/extension.ml[26,678+2]..[26,678+41])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[26,678+6]..[26,678+22])
                  Ppat_var "class_type_field" (src/extension.ml[26,678+6]..[26,678+22])
                expression (src/extension.ml[26,678+25]..[26,678+41])
                  Pexp_construct "Class_type_field" (src/extension.ml[26,678+25]..[26,678+41])
                  None
            ]
          structure_item (src/extension.ml[27,720+2]..[27,720+27])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[27,720+6]..[27,720+15])
                  Ppat_var "core_type" (src/extension.ml[27,720+6]..[27,720+15])
                expression (src/extension.ml[27,720+18]..[27,720+27])
                  Pexp_construct "Core_type" (src/extension.ml[27,720+18]..[27,720+27])
                  None
            ]
          structure_item (src/extension.ml[28,748+2]..[28,748+29])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[28,748+6]..[28,748+16])
                  Ppat_var "expression" (src/extension.ml[28,748+6]..[28,748+16])
                expression (src/extension.ml[28,748+19]..[28,748+29])
                  Pexp_construct "Expression" (src/extension.ml[28,748+19]..[28,748+29])
                  None
            ]
          structure_item (src/extension.ml[29,778+2]..[29,778+31])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[29,778+6]..[29,778+17])
                  Ppat_var "module_expr" (src/extension.ml[29,778+6]..[29,778+17])
                expression (src/extension.ml[29,778+20]..[29,778+31])
                  Pexp_construct "Module_expr" (src/extension.ml[29,778+20]..[29,778+31])
                  None
            ]
          structure_item (src/extension.ml[30,810+2]..[30,810+31])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[30,810+6]..[30,810+17])
                  Ppat_var "module_type" (src/extension.ml[30,810+6]..[30,810+17])
                expression (src/extension.ml[30,810+20]..[30,810+31])
                  Pexp_construct "Module_type" (src/extension.ml[30,810+20]..[30,810+31])
                  None
            ]
          structure_item (src/extension.ml[31,842+2]..[31,842+23])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[31,842+6]..[31,842+13])
                  Ppat_var "pattern" (src/extension.ml[31,842+6]..[31,842+13])
                expression (src/extension.ml[31,842+16]..[31,842+23])
                  Pexp_construct "Pattern" (src/extension.ml[31,842+16]..[31,842+23])
                  None
            ]
          structure_item (src/extension.ml[32,866+2]..[32,866+37])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[32,866+6]..[32,866+20])
                  Ppat_var "signature_item" (src/extension.ml[32,866+6]..[32,866+20])
                expression (src/extension.ml[32,866+23]..[32,866+37])
                  Pexp_construct "Signature_item" (src/extension.ml[32,866+23]..[32,866+37])
                  None
            ]
          structure_item (src/extension.ml[33,904+2]..[33,904+37])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[33,904+6]..[33,904+20])
                  Ppat_var "structure_item" (src/extension.ml[33,904+6]..[33,904+20])
                expression (src/extension.ml[33,904+23]..[33,904+37])
                  Pexp_construct "Structure_item" (src/extension.ml[33,904+23]..[33,904+37])
                  None
            ]
          structure_item (src/extension.ml[35,943+2]..[47,1390+38])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[35,943+6]..[35,943+34]) ghost
                  Ppat_constraint
                  pattern (src/extension.ml[35,943+6]..[35,943+10])
                    Ppat_var "desc" (src/extension.ml[35,943+6]..[35,943+10])
                  core_type (src/extension.ml[35,943+6]..[47,1390+38]) ghost
                    Ptyp_poly 'a
                    core_type (src/extension.ml[35,943+21]..[35,943+34])
                      Ptyp_arrow
                      Nolabel
                      core_type (src/extension.ml[35,943+21]..[35,943+24])
                        Ptyp_constr "t" (src/extension.ml[35,943+23]..[35,943+24])
                        [
                          core_type (src/extension.ml[35,943+21]..[35,943+22])
                            Ptyp_var a
                        ]
                      core_type (src/extension.ml[35,943+28]..[35,943+34])
                        Ptyp_constr "string" (src/extension.ml[35,943+28]..[35,943+34])
                        []
                expression (src/extension.ml[35,943+6]..[47,1390+38])
                  Pexp_newtype "a"
                  expression (src/extension.ml[35,943+6]..[47,1390+38])
                    Pexp_constraint
                    expression (src/extension.ml[35,943+37]..[47,1390+38])
                      Pexp_function
                      [
                        <case>
                          pattern (src/extension.ml[36,989+6]..[36,989+16])
                            Ppat_construct "Class_expr" (src/extension.ml[36,989+6]..[36,989+16])
                            None
                          expression (src/extension.ml[36,989+20]..[36,989+38])
                            Pexp_constant PConst_string("class expression",(src/extension.ml[36,989+21]..[36,989+37]),None)
                        <case>
                          pattern (src/extension.ml[37,1028+6]..[37,1028+17])
                            Ppat_construct "Class_field" (src/extension.ml[37,1028+6]..[37,1028+17])
                            None
                          expression (src/extension.ml[37,1028+21]..[37,1028+34])
                            Pexp_constant PConst_string("class field",(src/extension.ml[37,1028+22]..[37,1028+33]),None)
                        <case>
                          pattern (src/extension.ml[38,1063+6]..[38,1063+16])
                            Ppat_construct "Class_type" (src/extension.ml[38,1063+6]..[38,1063+16])
                            None
                          expression (src/extension.ml[38,1063+20]..[38,1063+32])
                            Pexp_constant PConst_string("class type",(src/extension.ml[38,1063+21]..[38,1063+31]),None)
                        <case>
                          pattern (src/extension.ml[39,1096+6]..[39,1096+22])
                            Ppat_construct "Class_type_field" (src/extension.ml[39,1096+6]..[39,1096+22])
                            None
                          expression (src/extension.ml[39,1096+26]..[39,1096+44])
                            Pexp_constant PConst_string("class type field",(src/extension.ml[39,1096+27]..[39,1096+43]),None)
                        <case>
                          pattern (src/extension.ml[40,1141+6]..[40,1141+15])
                            Ppat_construct "Core_type" (src/extension.ml[40,1141+6]..[40,1141+15])
                            None
                          expression (src/extension.ml[40,1141+19]..[40,1141+30])
                            Pexp_constant PConst_string("core type",(src/extension.ml[40,1141+20]..[40,1141+29]),None)
                        <case>
                          pattern (src/extension.ml[41,1172+6]..[41,1172+16])
                            Ppat_construct "Expression" (src/extension.ml[41,1172+6]..[41,1172+16])
                            None
                          expression (src/extension.ml[41,1172+20]..[41,1172+32])
                            Pexp_constant PConst_string("expression",(src/extension.ml[41,1172+21]..[41,1172+31]),None)
                        <case>
                          pattern (src/extension.ml[42,1205+6]..[42,1205+17])
                            Ppat_construct "Module_expr" (src/extension.ml[42,1205+6]..[42,1205+17])
                            None
                          expression (src/extension.ml[42,1205+21]..[42,1205+40])
                            Pexp_constant PConst_string("module expression",(src/extension.ml[42,1205+22]..[42,1205+39]),None)
                        <case>
                          pattern (src/extension.ml[43,1246+6]..[43,1246+17])
                            Ppat_construct "Module_type" (src/extension.ml[43,1246+6]..[43,1246+17])
                            None
                          expression (src/extension.ml[43,1246+21]..[43,1246+34])
                            Pexp_constant PConst_string("module type",(src/extension.ml[43,1246+22]..[43,1246+33]),None)
                        <case>
                          pattern (src/extension.ml[44,1281+6]..[44,1281+13])
                            Ppat_construct "Pattern" (src/extension.ml[44,1281+6]..[44,1281+13])
                            None
                          expression (src/extension.ml[44,1281+17]..[44,1281+26])
                            Pexp_constant PConst_string("pattern",(src/extension.ml[44,1281+18]..[44,1281+25]),None)
                        <case>
                          pattern (src/extension.ml[45,1308+6]..[45,1308+20])
                            Ppat_construct "Signature_item" (src/extension.ml[45,1308+6]..[45,1308+20])
                            None
                          expression (src/extension.ml[45,1308+24]..[45,1308+40])
                            Pexp_constant PConst_string("signature item",(src/extension.ml[45,1308+25]..[45,1308+39]),None)
                        <case>
                          pattern (src/extension.ml[46,1349+6]..[46,1349+20])
                            Ppat_construct "Structure_item" (src/extension.ml[46,1349+6]..[46,1349+20])
                            None
                          expression (src/extension.ml[46,1349+24]..[46,1349+40])
                            Pexp_constant PConst_string("structure item",(src/extension.ml[46,1349+25]..[46,1349+39]),None)
                        <case>
                          pattern (src/extension.ml[47,1390+6]..[47,1390+16])
                            Ppat_construct "Ppx_import" (src/extension.ml[47,1390+6]..[47,1390+16])
                            None
                          expression (src/extension.ml[47,1390+20]..[47,1390+38])
                            Pexp_constant PConst_string("type declaration",(src/extension.ml[47,1390+21]..[47,1390+37]),None)
                      ]
                    core_type (src/extension.ml[35,943+21]..[35,943+34])
                      Ptyp_arrow
                      Nolabel
                      core_type (src/extension.ml[35,943+21]..[35,943+24])
                        Ptyp_constr "t" (src/extension.ml[35,943+23]..[35,943+24])
                        [
                          core_type (src/extension.ml[35,943+21]..[35,943+22])
                            Ptyp_constr "a" (src/extension.ml[35,943+21]..[35,943+22])
                            []
                        ]
                      core_type (src/extension.ml[35,943+28]..[35,943+34])
                        Ptyp_constr "string" (src/extension.ml[35,943+28]..[35,943+34])
                        []
            ]
          structure_item (src/extension.ml[49,1430+2]..[66,2018+10])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[49,1430+6]..[49,1430+50]) ghost
                  Ppat_constraint
                  pattern (src/extension.ml[49,1430+6]..[49,1430+8])
                    Ppat_var "eq" (src/extension.ml[49,1430+6]..[49,1430+8])
                  core_type (src/extension.ml[49,1430+6]..[66,2018+10]) ghost
                    Ptyp_poly 'a 'b
                    core_type (src/extension.ml[49,1430+21]..[49,1430+50])
                      Ptyp_arrow
                      Nolabel
                      core_type (src/extension.ml[49,1430+21]..[49,1430+24])
                        Ptyp_constr "t" (src/extension.ml[49,1430+23]..[49,1430+24])
                        [
                          core_type (src/extension.ml[49,1430+21]..[49,1430+22])
                            Ptyp_var a
                        ]
                      core_type (src/extension.ml[49,1430+28]..[49,1430+50])
                        Ptyp_arrow
                        Nolabel
                        core_type (src/extension.ml[49,1430+28]..[49,1430+31])
                          Ptyp_constr "t" (src/extension.ml[49,1430+30]..[49,1430+31])
                          [
                            core_type (src/extension.ml[49,1430+28]..[49,1430+29])
                              Ptyp_var b
                          ]
                        core_type (src/extension.ml[49,1430+35]..[49,1430+50])
                          Ptyp_constr "equality" (src/extension.ml[49,1430+42]..[49,1430+50])
                          [
                            core_type (src/extension.ml[49,1430+36]..[49,1430+37])
                              Ptyp_var a
                            core_type (src/extension.ml[49,1430+39]..[49,1430+40])
                              Ptyp_var b
                          ]
                expression (src/extension.ml[49,1430+6]..[66,2018+10])
                  Pexp_newtype "a"
                  expression (src/extension.ml[49,1430+6]..[66,2018+10])
                    Pexp_newtype "b"
                    expression (src/extension.ml[49,1430+6]..[66,2018+10])
                      Pexp_constraint
                      expression (src/extension.ml[50,1483+3]..[66,2018+10])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/extension.ml[50,1483+7]..[50,1483+8])
                          Ppat_var "a" (src/extension.ml[50,1483+7]..[50,1483+8])
                        expression (src/extension.ml[50,1483+9]..[66,2018+10]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/extension.ml[50,1483+9]..[50,1483+10])
                            Ppat_var "b" (src/extension.ml[50,1483+9]..[50,1483+10])
                          expression (src/extension.ml[51,1497+4]..[66,2018+10])
                            Pexp_match
                            expression (src/extension.ml[51,1497+10]..[51,1497+16])
                              Pexp_tuple
                              [
                                expression (src/extension.ml[51,1497+11]..[51,1497+12])
                                  Pexp_ident "a" (src/extension.ml[51,1497+11]..[51,1497+12])
                                expression (src/extension.ml[51,1497+14]..[51,1497+15])
                                  Pexp_ident "b" (src/extension.ml[51,1497+14]..[51,1497+15])
                              ]
                            [
                              <case>
                                pattern (src/extension.ml[52,1519+6]..[52,1519+28])
                                  Ppat_tuple
                                  [
                                    pattern (src/extension.ml[52,1519+6]..[52,1519+16])
                                      Ppat_construct "Class_expr" (src/extension.ml[52,1519+6]..[52,1519+16])
                                      None
                                    pattern (src/extension.ml[52,1519+18]..[52,1519+28])
                                      Ppat_construct "Class_expr" (src/extension.ml[52,1519+18]..[52,1519+28])
                                      None
                                  ]
                                expression (src/extension.ml[52,1519+32]..[52,1519+34])
                                  Pexp_construct "Eq" (src/extension.ml[52,1519+32]..[52,1519+34])
                                  None
                              <case>
                                pattern (src/extension.ml[53,1554+6]..[53,1554+30])
                                  Ppat_tuple
                                  [
                                    pattern (src/extension.ml[53,1554+6]..[53,1554+17])
                                      Ppat_construct "Class_field" (src/extension.ml[53,1554+6]..[53,1554+17])
                                      None
                                    pattern (src/extension.ml[53,1554+19]..[53,1554+30])
                                      Ppat_construct "Class_field" (src/extension.ml[53,1554+19]..[53,1554+30])
                                      None
                                  ]
                                expression (src/extension.ml[53,1554+34]..[53,1554+36])
                                  Pexp_construct "Eq" (src/extension.ml[53,1554+34]..[53,1554+36])
                                  None
                              <case>
                                pattern (src/extension.ml[54,1591+6]..[54,1591+28])
                                  Ppat_tuple
                                  [
                                    pattern (src/extension.ml[54,1591+6]..[54,1591+16])
                                      Ppat_construct "Class_type" (src/extension.ml[54,1591+6]..[54,1591+16])
                                      None
                                    pattern (src/extension.ml[54,1591+18]..[54,1591+28])
                                      Ppat_construct "Class_type" (src/extension.ml[54,1591+18]..[54,1591+28])
                                      None
                                  ]
                                expression (src/extension.ml[54,1591+32]..[54,1591+34])
                                  Pexp_construct "Eq" (src/extension.ml[54,1591+32]..[54,1591+34])
                                  None
                              <case>
                                pattern (src/extension.ml[55,1626+6]..[55,1626+40])
                                  Ppat_tuple
                                  [
                                    pattern (src/extension.ml[55,1626+6]..[55,1626+22])
                                      Ppat_construct "Class_type_field" (src/extension.ml[55,1626+6]..[55,1626+22])
                                      None
                                    pattern (src/extension.ml[55,1626+24]..[55,1626+40])
                                      Ppat_construct "Class_type_field" (src/extension.ml[55,1626+24]..[55,1626+40])
                                      None
                                  ]
                                expression (src/extension.ml[55,1626+44]..[55,1626+46])
                                  Pexp_construct "Eq" (src/extension.ml[55,1626+44]..[55,1626+46])
                                  None
                              <case>
                                pattern (src/extension.ml[56,1673+6]..[56,1673+26])
                                  Ppat_tuple
                                  [
                                    pattern (src/extension.ml[56,1673+6]..[56,1673+15])
                                      Ppat_construct "Core_type" (src/extension.ml[56,1673+6]..[56,1673+15])
                                      None
                                    pattern (src/extension.ml[56,1673+17]..[56,1673+26])
                                      Ppat_construct "Core_type" (src/extension.ml[56,1673+17]..[56,1673+26])
                                      None
                                  ]
                                expression (src/extension.ml[56,1673+30]..[56,1673+32])
                                  Pexp_construct "Eq" (src/extension.ml[56,1673+30]..[56,1673+32])
                                  None
                              <case>
                                pattern (src/extension.ml[57,1706+6]..[57,1706+28])
                                  Ppat_tuple
                                  [
                                    pattern (src/extension.ml[57,1706+6]..[57,1706+16])
                                      Ppat_construct "Expression" (src/extension.ml[57,1706+6]..[57,1706+16])
                                      None
                                    pattern (src/extension.ml[57,1706+18]..[57,1706+28])
                                      Ppat_construct "Expression" (src/extension.ml[57,1706+18]..[57,1706+28])
                                      None
                                  ]
                                expression (src/extension.ml[57,1706+32]..[57,1706+34])
                                  Pexp_construct "Eq" (src/extension.ml[57,1706+32]..[57,1706+34])
                                  None
                              <case>
                                pattern (src/extension.ml[58,1741+6]..[58,1741+30])
                                  Ppat_tuple
                                  [
                                    pattern (src/extension.ml[58,1741+6]..[58,1741+17])
                                      Ppat_construct "Module_expr" (src/extension.ml[58,1741+6]..[58,1741+17])
                                      None
                                    pattern (src/extension.ml[58,1741+19]..[58,1741+30])
                                      Ppat_construct "Module_expr" (src/extension.ml[58,1741+19]..[58,1741+30])
                                      None
                                  ]
                                expression (src/extension.ml[58,1741+34]..[58,1741+36])
                                  Pexp_construct "Eq" (src/extension.ml[58,1741+34]..[58,1741+36])
                                  None
                              <case>
                                pattern (src/extension.ml[59,1778+6]..[59,1778+30])
                                  Ppat_tuple
                                  [
                                    pattern (src/extension.ml[59,1778+6]..[59,1778+17])
                                      Ppat_construct "Module_type" (src/extension.ml[59,1778+6]..[59,1778+17])
                                      None
                                    pattern (src/extension.ml[59,1778+19]..[59,1778+30])
                                      Ppat_construct "Module_type" (src/extension.ml[59,1778+19]..[59,1778+30])
                                      None
                                  ]
                                expression (src/extension.ml[59,1778+34]..[59,1778+36])
                                  Pexp_construct "Eq" (src/extension.ml[59,1778+34]..[59,1778+36])
                                  None
                              <case>
                                pattern (src/extension.ml[60,1815+6]..[60,1815+22])
                                  Ppat_tuple
                                  [
                                    pattern (src/extension.ml[60,1815+6]..[60,1815+13])
                                      Ppat_construct "Pattern" (src/extension.ml[60,1815+6]..[60,1815+13])
                                      None
                                    pattern (src/extension.ml[60,1815+15]..[60,1815+22])
                                      Ppat_construct "Pattern" (src/extension.ml[60,1815+15]..[60,1815+22])
                                      None
                                  ]
                                expression (src/extension.ml[60,1815+26]..[60,1815+28])
                                  Pexp_construct "Eq" (src/extension.ml[60,1815+26]..[60,1815+28])
                                  None
                              <case>
                                pattern (src/extension.ml[61,1844+6]..[61,1844+36])
                                  Ppat_tuple
                                  [
                                    pattern (src/extension.ml[61,1844+6]..[61,1844+20])
                                      Ppat_construct "Signature_item" (src/extension.ml[61,1844+6]..[61,1844+20])
                                      None
                                    pattern (src/extension.ml[61,1844+22]..[61,1844+36])
                                      Ppat_construct "Signature_item" (src/extension.ml[61,1844+22]..[61,1844+36])
                                      None
                                  ]
                                expression (src/extension.ml[61,1844+40]..[61,1844+42])
                                  Pexp_construct "Eq" (src/extension.ml[61,1844+40]..[61,1844+42])
                                  None
                              <case>
                                pattern (src/extension.ml[62,1887+6]..[62,1887+36])
                                  Ppat_tuple
                                  [
                                    pattern (src/extension.ml[62,1887+6]..[62,1887+20])
                                      Ppat_construct "Structure_item" (src/extension.ml[62,1887+6]..[62,1887+20])
                                      None
                                    pattern (src/extension.ml[62,1887+22]..[62,1887+36])
                                      Ppat_construct "Structure_item" (src/extension.ml[62,1887+22]..[62,1887+36])
                                      None
                                  ]
                                expression (src/extension.ml[62,1887+40]..[62,1887+42])
                                  Pexp_construct "Eq" (src/extension.ml[62,1887+40]..[62,1887+42])
                                  None
                              <case>
                                pattern (src/extension.ml[63,1930+6]..[63,1930+28])
                                  Ppat_tuple
                                  [
                                    pattern (src/extension.ml[63,1930+6]..[63,1930+16])
                                      Ppat_construct "Ppx_import" (src/extension.ml[63,1930+6]..[63,1930+16])
                                      None
                                    pattern (src/extension.ml[63,1930+18]..[63,1930+28])
                                      Ppat_construct "Ppx_import" (src/extension.ml[63,1930+18]..[63,1930+28])
                                      None
                                  ]
                                expression (src/extension.ml[63,1930+32]..[63,1930+34])
                                  Pexp_construct "Eq" (src/extension.ml[63,1930+32]..[63,1930+34])
                                  None
                              <case>
                                pattern (src/extension.ml[64,1965+6]..[64,1965+7])
                                  Ppat_any
                                expression (src/extension.ml[65,1976+8]..[66,2018+10])
                                  Pexp_sequence
                                  expression (src/extension.ml[65,1976+8]..[65,1976+40])
                                    Pexp_assert
                                    expression (src/extension.ml[65,1976+15]..[65,1976+40])
                                      Pexp_apply
                                      expression (src/extension.ml[65,1976+16]..[65,1976+27])
                                        Pexp_ident "Poly.<>" (src/extension.ml[65,1976+16]..[65,1976+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[65,1976+28]..[65,1976+33])
                                            Pexp_construct "T" (src/extension.ml[65,1976+29]..[65,1976+30])
                                            Some
                                              expression (src/extension.ml[65,1976+31]..[65,1976+32])
                                                Pexp_ident "a" (src/extension.ml[65,1976+31]..[65,1976+32])
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[65,1976+34]..[65,1976+39])
                                            Pexp_construct "T" (src/extension.ml[65,1976+35]..[65,1976+36])
                                            Some
                                              expression (src/extension.ml[65,1976+37]..[65,1976+38])
                                                Pexp_ident "b" (src/extension.ml[65,1976+37]..[65,1976+38])
                                      ]
                                  expression (src/extension.ml[66,2018+8]..[66,2018+10])
                                    Pexp_construct "Ne" (src/extension.ml[66,2018+8]..[66,2018+10])
                                    None
                            ]
                      core_type (src/extension.ml[49,1430+21]..[49,1430+50])
                        Ptyp_arrow
                        Nolabel
                        core_type (src/extension.ml[49,1430+21]..[49,1430+24])
                          Ptyp_constr "t" (src/extension.ml[49,1430+23]..[49,1430+24])
                          [
                            core_type (src/extension.ml[49,1430+21]..[49,1430+22])
                              Ptyp_constr "a" (src/extension.ml[49,1430+21]..[49,1430+22])
                              []
                          ]
                        core_type (src/extension.ml[49,1430+28]..[49,1430+50])
                          Ptyp_arrow
                          Nolabel
                          core_type (src/extension.ml[49,1430+28]..[49,1430+31])
                            Ptyp_constr "t" (src/extension.ml[49,1430+30]..[49,1430+31])
                            [
                              core_type (src/extension.ml[49,1430+28]..[49,1430+29])
                                Ptyp_constr "b" (src/extension.ml[49,1430+28]..[49,1430+29])
                                []
                            ]
                          core_type (src/extension.ml[49,1430+35]..[49,1430+50])
                            Ptyp_constr "equality" (src/extension.ml[49,1430+42]..[49,1430+50])
                            [
                              core_type (src/extension.ml[49,1430+36]..[49,1430+37])
                                Ptyp_constr "a" (src/extension.ml[49,1430+36]..[49,1430+37])
                                []
                              core_type (src/extension.ml[49,1430+39]..[49,1430+40])
                                Ptyp_constr "b" (src/extension.ml[49,1430+39]..[49,1430+40])
                                []
                            ]
            ]
          structure_item (src/extension.ml[68,2030+2]..[78,2407+15])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[68,2030+6]..[68,2030+30])
                  Ppat_var "get_ppx_import_extension" (src/extension.ml[68,2030+6]..[68,2030+30])
                expression (src/extension.ml[68,2030+31]..[78,2407+15]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/extension.ml[68,2030+31]..[68,2030+40])
                    Ppat_var "type_decl" (src/extension.ml[68,2030+31]..[68,2030+40])
                  expression (src/extension.ml[69,2073+4]..[78,2407+15])
                    Pexp_match
                    expression (src/extension.ml[69,2073+10]..[69,2073+19])
                      Pexp_ident "type_decl" (src/extension.ml[69,2073+10]..[69,2073+19])
                    [
                      <case>
                        pattern (src/extension.ml[70,2098+6]..[70,2098+78])
                          Ppat_record Open
                          [
                            "ptype_manifest" (src/extension.ml[70,2098+8]..[70,2098+22])
                              pattern (src/extension.ml[70,2098+25]..[70,2098+73])
                                Ppat_construct "Some" (src/extension.ml[70,2098+25]..[70,2098+29])
                                Some
                                  pattern (src/extension.ml[70,2098+30]..[70,2098+73])
                                    Ppat_record Open
                                    [
                                      "ptyp_desc" (src/extension.ml[70,2098+32]..[70,2098+41])
                                        pattern (src/extension.ml[70,2098+44]..[70,2098+68])
                                          Ppat_construct "Ptyp_extension" (src/extension.ml[70,2098+44]..[70,2098+58])
                                          Some
                                            pattern (src/extension.ml[70,2098+59]..[70,2098+68])
                                              Ppat_tuple
                                              [
                                                pattern (src/extension.ml[70,2098+60]..[70,2098+64])
                                                  Ppat_var "name" (src/extension.ml[70,2098+60]..[70,2098+64])
                                                pattern (src/extension.ml[70,2098+66]..[70,2098+67])
                                                  Ppat_any
                                              ]
                                    ]
                          ]
                        expression (src/extension.ml[72,2186+8]..[77,2353+53])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/extension.ml[72,2186+12]..[72,2186+27])
                                Ppat_var "virtual_payload" (src/extension.ml[72,2186+12]..[72,2186+27])
                              expression (src/extension.ml[73,2216+10]..[74,2291+25])
                                Pexp_apply
                                expression (src/extension.ml[73,2216+10]..[73,2216+39])
                                  Pexp_ident "Ast_builder.Default.pstr_type" (src/extension.ml[73,2216+10]..[73,2216+39])
                                [
                                  <arg>
                                  Labelled "loc"
                                    expression (src/extension.ml[73,2216+45]..[73,2216+64])
                                      Pexp_field
                                      expression (src/extension.ml[73,2216+45]..[73,2216+54])
                                        Pexp_ident "type_decl" (src/extension.ml[73,2216+45]..[73,2216+54])
                                      "ptype_loc" (src/extension.ml[73,2216+55]..[73,2216+64])
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[73,2216+65]..[73,2216+74])
                                      Pexp_construct "Recursive" (src/extension.ml[73,2216+65]..[73,2216+74])
                                      None
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[74,2291+12]..[74,2291+25])
                                      Pexp_construct "::" (src/extension.ml[74,2291+14]..[74,2291+25]) ghost
                                      Some
                                        expression (src/extension.ml[74,2291+14]..[74,2291+25]) ghost
                                          Pexp_tuple
                                          [
                                            expression (src/extension.ml[74,2291+14]..[74,2291+23])
                                              Pexp_ident "type_decl" (src/extension.ml[74,2291+14]..[74,2291+23])
                                            expression (src/extension.ml[74,2291+24]..[74,2291+25]) ghost
                                              Pexp_construct "[]" (src/extension.ml[74,2291+24]..[74,2291+25]) ghost
                                              None
                                          ]
                                ]
                          ]
                          expression (src/extension.ml[76,2328+8]..[77,2353+53])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/extension.ml[76,2328+12]..[76,2328+16])
                                  Ppat_var "attr" (src/extension.ml[76,2328+12]..[76,2328+16])
                                expression (src/extension.ml[76,2328+19]..[76,2328+21])
                                  Pexp_construct "[]" (src/extension.ml[76,2328+19]..[76,2328+21])
                                  None
                            ]
                            expression (src/extension.ml[77,2353+8]..[77,2353+53])
                              Pexp_construct "Some" (src/extension.ml[77,2353+8]..[77,2353+12])
                              Some
                                expression (src/extension.ml[77,2353+13]..[77,2353+53])
                                  Pexp_tuple
                                  [
                                    expression (src/extension.ml[77,2353+14]..[77,2353+46])
                                      Pexp_tuple
                                      [
                                        expression (src/extension.ml[77,2353+15]..[77,2353+19])
                                          Pexp_ident "name" (src/extension.ml[77,2353+15]..[77,2353+19])
                                        expression (src/extension.ml[77,2353+21]..[77,2353+45])
                                          Pexp_construct "PStr" (src/extension.ml[77,2353+21]..[77,2353+25])
                                          Some
                                            expression (src/extension.ml[77,2353+26]..[77,2353+45])
                                              Pexp_construct "::" (src/extension.ml[77,2353+28]..[77,2353+45]) ghost
                                              Some
                                                expression (src/extension.ml[77,2353+28]..[77,2353+45]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (src/extension.ml[77,2353+28]..[77,2353+43])
                                                      Pexp_ident "virtual_payload" (src/extension.ml[77,2353+28]..[77,2353+43])
                                                    expression (src/extension.ml[77,2353+44]..[77,2353+45]) ghost
                                                      Pexp_construct "[]" (src/extension.ml[77,2353+44]..[77,2353+45]) ghost
                                                      None
                                                  ]
                                      ]
                                    expression (src/extension.ml[77,2353+48]..[77,2353+52])
                                      Pexp_ident "attr" (src/extension.ml[77,2353+48]..[77,2353+52])
                                  ]
                      <case>
                        pattern (src/extension.ml[78,2407+6]..[78,2407+7])
                          Ppat_any
                        expression (src/extension.ml[78,2407+11]..[78,2407+15])
                          Pexp_construct "None" (src/extension.ml[78,2407+11]..[78,2407+15])
                          None
                    ]
            ]
          structure_item (src/extension.ml[80,2424+2]..[105,3645+15])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[80,2424+6]..[80,2424+73]) ghost
                  Ppat_constraint
                  pattern (src/extension.ml[80,2424+6]..[80,2424+19])
                    Ppat_var "get_extension" (src/extension.ml[80,2424+6]..[80,2424+19])
                  core_type (src/extension.ml[80,2424+6]..[105,3645+15]) ghost
                    Ptyp_poly 'a
                    core_type (src/extension.ml[80,2424+30]..[80,2424+73])
                      Ptyp_arrow
                      Nolabel
                      core_type (src/extension.ml[80,2424+30]..[80,2424+33])
                        Ptyp_constr "t" (src/extension.ml[80,2424+32]..[80,2424+33])
                        [
                          core_type (src/extension.ml[80,2424+30]..[80,2424+31])
                            Ptyp_var a
                        ]
                      core_type (src/extension.ml[80,2424+37]..[80,2424+73])
                        Ptyp_arrow
                        Nolabel
                        core_type (src/extension.ml[80,2424+37]..[80,2424+38])
                          Ptyp_var a
                        core_type (src/extension.ml[80,2424+42]..[80,2424+73])
                          Ptyp_constr "option" (src/extension.ml[80,2424+67]..[80,2424+73])
                          [
                            core_type (src/extension.ml[80,2424+43]..[80,2424+65])
                              Ptyp_tuple
                              [
                                core_type (src/extension.ml[80,2424+43]..[80,2424+52])
                                  Ptyp_constr "extension" (src/extension.ml[80,2424+43]..[80,2424+52])
                                  []
                                core_type (src/extension.ml[80,2424+55]..[80,2424+65])
                                  Ptyp_constr "attributes" (src/extension.ml[80,2424+55]..[80,2424+65])
                                  []
                              ]
                          ]
                expression (src/extension.ml[80,2424+6]..[105,3645+15])
                  Pexp_newtype "a"
                  expression (src/extension.ml[80,2424+6]..[105,3645+15])
                    Pexp_constraint
                    expression (src/extension.ml[81,2500+3]..[105,3645+15])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[81,2500+7]..[81,2500+8])
                        Ppat_var "t" (src/extension.ml[81,2500+7]..[81,2500+8])
                      expression (src/extension.ml[81,2500+9]..[105,3645+15]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/extension.ml[81,2500+9]..[81,2500+10])
                          Ppat_var "x" (src/extension.ml[81,2500+9]..[81,2500+10])
                        expression (src/extension.ml[82,2514+4]..[105,3645+15])
                          Pexp_match
                          expression (src/extension.ml[82,2514+10]..[82,2514+16])
                            Pexp_tuple
                            [
                              expression (src/extension.ml[82,2514+11]..[82,2514+12])
                                Pexp_ident "t" (src/extension.ml[82,2514+11]..[82,2514+12])
                              expression (src/extension.ml[82,2514+14]..[82,2514+15])
                                Pexp_ident "x" (src/extension.ml[82,2514+14]..[82,2514+15])
                            ]
                          [
                            <case>
                              pattern (src/extension.ml[83,2536+6]..[83,2536+71])
                                Ppat_tuple
                                [
                                  pattern (src/extension.ml[83,2536+6]..[83,2536+16])
                                    Ppat_construct "Class_expr" (src/extension.ml[83,2536+6]..[83,2536+16])
                                    None
                                  pattern (src/extension.ml[83,2536+18]..[83,2536+71])
                                    Ppat_record Open
                                    [
                                      "pcl_desc" (src/extension.ml[83,2536+20]..[83,2536+28])
                                        pattern (src/extension.ml[83,2536+31]..[83,2536+46])
                                          Ppat_construct "Pcl_extension" (src/extension.ml[83,2536+31]..[83,2536+44])
                                          Some
                                            pattern (src/extension.ml[83,2536+45]..[83,2536+46])
                                              Ppat_var "e" (src/extension.ml[83,2536+45]..[83,2536+46])
                                      "pcl_attributes" (src/extension.ml[83,2536+48]..[83,2536+62])
                                        pattern (src/extension.ml[83,2536+65]..[83,2536+66])
                                          Ppat_var "a" (src/extension.ml[83,2536+65]..[83,2536+66])
                                    ]
                                ]
                              expression (src/extension.ml[84,2611+8]..[84,2611+19])
                                Pexp_construct "Some" (src/extension.ml[84,2611+8]..[84,2611+12])
                                Some
                                  expression (src/extension.ml[84,2611+13]..[84,2611+19])
                                    Pexp_tuple
                                    [
                                      expression (src/extension.ml[84,2611+14]..[84,2611+15])
                                        Pexp_ident "e" (src/extension.ml[84,2611+14]..[84,2611+15])
                                      expression (src/extension.ml[84,2611+17]..[84,2611+18])
                                        Pexp_ident "a" (src/extension.ml[84,2611+17]..[84,2611+18])
                                    ]
                            <case>
                              pattern (src/extension.ml[85,2631+6]..[85,2631+72])
                                Ppat_tuple
                                [
                                  pattern (src/extension.ml[85,2631+6]..[85,2631+17])
                                    Ppat_construct "Class_field" (src/extension.ml[85,2631+6]..[85,2631+17])
                                    None
                                  pattern (src/extension.ml[85,2631+19]..[85,2631+72])
                                    Ppat_record Open
                                    [
                                      "pcf_desc" (src/extension.ml[85,2631+21]..[85,2631+29])
                                        pattern (src/extension.ml[85,2631+32]..[85,2631+47])
                                          Ppat_construct "Pcf_extension" (src/extension.ml[85,2631+32]..[85,2631+45])
                                          Some
                                            pattern (src/extension.ml[85,2631+46]..[85,2631+47])
                                              Ppat_var "e" (src/extension.ml[85,2631+46]..[85,2631+47])
                                      "pcf_attributes" (src/extension.ml[85,2631+49]..[85,2631+63])
                                        pattern (src/extension.ml[85,2631+66]..[85,2631+67])
                                          Ppat_var "a" (src/extension.ml[85,2631+66]..[85,2631+67])
                                    ]
                                ]
                              expression (src/extension.ml[86,2707+8]..[86,2707+19])
                                Pexp_construct "Some" (src/extension.ml[86,2707+8]..[86,2707+12])
                                Some
                                  expression (src/extension.ml[86,2707+13]..[86,2707+19])
                                    Pexp_tuple
                                    [
                                      expression (src/extension.ml[86,2707+14]..[86,2707+15])
                                        Pexp_ident "e" (src/extension.ml[86,2707+14]..[86,2707+15])
                                      expression (src/extension.ml[86,2707+17]..[86,2707+18])
                                        Pexp_ident "a" (src/extension.ml[86,2707+17]..[86,2707+18])
                                    ]
                            <case>
                              pattern (src/extension.ml[87,2727+6]..[87,2727+74])
                                Ppat_tuple
                                [
                                  pattern (src/extension.ml[87,2727+6]..[87,2727+16])
                                    Ppat_construct "Class_type" (src/extension.ml[87,2727+6]..[87,2727+16])
                                    None
                                  pattern (src/extension.ml[87,2727+18]..[87,2727+74])
                                    Ppat_record Open
                                    [
                                      "pcty_desc" (src/extension.ml[87,2727+20]..[87,2727+29])
                                        pattern (src/extension.ml[87,2727+32]..[87,2727+48])
                                          Ppat_construct "Pcty_extension" (src/extension.ml[87,2727+32]..[87,2727+46])
                                          Some
                                            pattern (src/extension.ml[87,2727+47]..[87,2727+48])
                                              Ppat_var "e" (src/extension.ml[87,2727+47]..[87,2727+48])
                                      "pcty_attributes" (src/extension.ml[87,2727+50]..[87,2727+65])
                                        pattern (src/extension.ml[87,2727+68]..[87,2727+69])
                                          Ppat_var "a" (src/extension.ml[87,2727+68]..[87,2727+69])
                                    ]
                                ]
                              expression (src/extension.ml[88,2805+8]..[88,2805+19])
                                Pexp_construct "Some" (src/extension.ml[88,2805+8]..[88,2805+12])
                                Some
                                  expression (src/extension.ml[88,2805+13]..[88,2805+19])
                                    Pexp_tuple
                                    [
                                      expression (src/extension.ml[88,2805+14]..[88,2805+15])
                                        Pexp_ident "e" (src/extension.ml[88,2805+14]..[88,2805+15])
                                      expression (src/extension.ml[88,2805+17]..[88,2805+18])
                                        Pexp_ident "a" (src/extension.ml[88,2805+17]..[88,2805+18])
                                    ]
                            <case>
                              pattern (src/extension.ml[89,2825+6]..[89,2825+80])
                                Ppat_tuple
                                [
                                  pattern (src/extension.ml[89,2825+6]..[89,2825+22])
                                    Ppat_construct "Class_type_field" (src/extension.ml[89,2825+6]..[89,2825+22])
                                    None
                                  pattern (src/extension.ml[89,2825+24]..[89,2825+80])
                                    Ppat_record Open
                                    [
                                      "pctf_desc" (src/extension.ml[89,2825+26]..[89,2825+35])
                                        pattern (src/extension.ml[89,2825+38]..[89,2825+54])
                                          Ppat_construct "Pctf_extension" (src/extension.ml[89,2825+38]..[89,2825+52])
                                          Some
                                            pattern (src/extension.ml[89,2825+53]..[89,2825+54])
                                              Ppat_var "e" (src/extension.ml[89,2825+53]..[89,2825+54])
                                      "pctf_attributes" (src/extension.ml[89,2825+56]..[89,2825+71])
                                        pattern (src/extension.ml[89,2825+74]..[89,2825+75])
                                          Ppat_var "a" (src/extension.ml[89,2825+74]..[89,2825+75])
                                    ]
                                ]
                              expression (src/extension.ml[91,2915+8]..[91,2915+19])
                                Pexp_construct "Some" (src/extension.ml[91,2915+8]..[91,2915+12])
                                Some
                                  expression (src/extension.ml[91,2915+13]..[91,2915+19])
                                    Pexp_tuple
                                    [
                                      expression (src/extension.ml[91,2915+14]..[91,2915+15])
                                        Pexp_ident "e" (src/extension.ml[91,2915+14]..[91,2915+15])
                                      expression (src/extension.ml[91,2915+17]..[91,2915+18])
                                        Pexp_ident "a" (src/extension.ml[91,2915+17]..[91,2915+18])
                                    ]
                            <case>
                              pattern (src/extension.ml[92,2935+6]..[92,2935+73])
                                Ppat_tuple
                                [
                                  pattern (src/extension.ml[92,2935+6]..[92,2935+15])
                                    Ppat_construct "Core_type" (src/extension.ml[92,2935+6]..[92,2935+15])
                                    None
                                  pattern (src/extension.ml[92,2935+17]..[92,2935+73])
                                    Ppat_record Open
                                    [
                                      "ptyp_desc" (src/extension.ml[92,2935+19]..[92,2935+28])
                                        pattern (src/extension.ml[92,2935+31]..[92,2935+47])
                                          Ppat_construct "Ptyp_extension" (src/extension.ml[92,2935+31]..[92,2935+45])
                                          Some
                                            pattern (src/extension.ml[92,2935+46]..[92,2935+47])
                                              Ppat_var "e" (src/extension.ml[92,2935+46]..[92,2935+47])
                                      "ptyp_attributes" (src/extension.ml[92,2935+49]..[92,2935+64])
                                        pattern (src/extension.ml[92,2935+67]..[92,2935+68])
                                          Ppat_var "a" (src/extension.ml[92,2935+67]..[92,2935+68])
                                    ]
                                ]
                              expression (src/extension.ml[93,3012+8]..[93,3012+19])
                                Pexp_construct "Some" (src/extension.ml[93,3012+8]..[93,3012+12])
                                Some
                                  expression (src/extension.ml[93,3012+13]..[93,3012+19])
                                    Pexp_tuple
                                    [
                                      expression (src/extension.ml[93,3012+14]..[93,3012+15])
                                        Pexp_ident "e" (src/extension.ml[93,3012+14]..[93,3012+15])
                                      expression (src/extension.ml[93,3012+17]..[93,3012+18])
                                        Pexp_ident "a" (src/extension.ml[93,3012+17]..[93,3012+18])
                                    ]
                            <case>
                              pattern (src/extension.ml[94,3032+6]..[94,3032+74])
                                Ppat_tuple
                                [
                                  pattern (src/extension.ml[94,3032+6]..[94,3032+16])
                                    Ppat_construct "Expression" (src/extension.ml[94,3032+6]..[94,3032+16])
                                    None
                                  pattern (src/extension.ml[94,3032+18]..[94,3032+74])
                                    Ppat_record Open
                                    [
                                      "pexp_desc" (src/extension.ml[94,3032+20]..[94,3032+29])
                                        pattern (src/extension.ml[94,3032+32]..[94,3032+48])
                                          Ppat_construct "Pexp_extension" (src/extension.ml[94,3032+32]..[94,3032+46])
                                          Some
                                            pattern (src/extension.ml[94,3032+47]..[94,3032+48])
                                              Ppat_var "e" (src/extension.ml[94,3032+47]..[94,3032+48])
                                      "pexp_attributes" (src/extension.ml[94,3032+50]..[94,3032+65])
                                        pattern (src/extension.ml[94,3032+68]..[94,3032+69])
                                          Ppat_var "a" (src/extension.ml[94,3032+68]..[94,3032+69])
                                    ]
                                ]
                              expression (src/extension.ml[95,3110+8]..[95,3110+19])
                                Pexp_construct "Some" (src/extension.ml[95,3110+8]..[95,3110+12])
                                Some
                                  expression (src/extension.ml[95,3110+13]..[95,3110+19])
                                    Pexp_tuple
                                    [
                                      expression (src/extension.ml[95,3110+14]..[95,3110+15])
                                        Pexp_ident "e" (src/extension.ml[95,3110+14]..[95,3110+15])
                                      expression (src/extension.ml[95,3110+17]..[95,3110+18])
                                        Pexp_ident "a" (src/extension.ml[95,3110+17]..[95,3110+18])
                                    ]
                            <case>
                              pattern (src/extension.ml[96,3130+6]..[96,3130+75])
                                Ppat_tuple
                                [
                                  pattern (src/extension.ml[96,3130+6]..[96,3130+17])
                                    Ppat_construct "Module_expr" (src/extension.ml[96,3130+6]..[96,3130+17])
                                    None
                                  pattern (src/extension.ml[96,3130+19]..[96,3130+75])
                                    Ppat_record Open
                                    [
                                      "pmod_desc" (src/extension.ml[96,3130+21]..[96,3130+30])
                                        pattern (src/extension.ml[96,3130+33]..[96,3130+49])
                                          Ppat_construct "Pmod_extension" (src/extension.ml[96,3130+33]..[96,3130+47])
                                          Some
                                            pattern (src/extension.ml[96,3130+48]..[96,3130+49])
                                              Ppat_var "e" (src/extension.ml[96,3130+48]..[96,3130+49])
                                      "pmod_attributes" (src/extension.ml[96,3130+51]..[96,3130+66])
                                        pattern (src/extension.ml[96,3130+69]..[96,3130+70])
                                          Ppat_var "a" (src/extension.ml[96,3130+69]..[96,3130+70])
                                    ]
                                ]
                              expression (src/extension.ml[97,3209+8]..[97,3209+19])
                                Pexp_construct "Some" (src/extension.ml[97,3209+8]..[97,3209+12])
                                Some
                                  expression (src/extension.ml[97,3209+13]..[97,3209+19])
                                    Pexp_tuple
                                    [
                                      expression (src/extension.ml[97,3209+14]..[97,3209+15])
                                        Pexp_ident "e" (src/extension.ml[97,3209+14]..[97,3209+15])
                                      expression (src/extension.ml[97,3209+17]..[97,3209+18])
                                        Pexp_ident "a" (src/extension.ml[97,3209+17]..[97,3209+18])
                                    ]
                            <case>
                              pattern (src/extension.ml[98,3229+6]..[98,3229+75])
                                Ppat_tuple
                                [
                                  pattern (src/extension.ml[98,3229+6]..[98,3229+17])
                                    Ppat_construct "Module_type" (src/extension.ml[98,3229+6]..[98,3229+17])
                                    None
                                  pattern (src/extension.ml[98,3229+19]..[98,3229+75])
                                    Ppat_record Open
                                    [
                                      "pmty_desc" (src/extension.ml[98,3229+21]..[98,3229+30])
                                        pattern (src/extension.ml[98,3229+33]..[98,3229+49])
                                          Ppat_construct "Pmty_extension" (src/extension.ml[98,3229+33]..[98,3229+47])
                                          Some
                                            pattern (src/extension.ml[98,3229+48]..[98,3229+49])
                                              Ppat_var "e" (src/extension.ml[98,3229+48]..[98,3229+49])
                                      "pmty_attributes" (src/extension.ml[98,3229+51]..[98,3229+66])
                                        pattern (src/extension.ml[98,3229+69]..[98,3229+70])
                                          Ppat_var "a" (src/extension.ml[98,3229+69]..[98,3229+70])
                                    ]
                                ]
                              expression (src/extension.ml[99,3308+8]..[99,3308+19])
                                Pexp_construct "Some" (src/extension.ml[99,3308+8]..[99,3308+12])
                                Some
                                  expression (src/extension.ml[99,3308+13]..[99,3308+19])
                                    Pexp_tuple
                                    [
                                      expression (src/extension.ml[99,3308+14]..[99,3308+15])
                                        Pexp_ident "e" (src/extension.ml[99,3308+14]..[99,3308+15])
                                      expression (src/extension.ml[99,3308+17]..[99,3308+18])
                                        Pexp_ident "a" (src/extension.ml[99,3308+17]..[99,3308+18])
                                    ]
                            <case>
                              pattern (src/extension.ml[100,3328+6]..[100,3328+71])
                                Ppat_tuple
                                [
                                  pattern (src/extension.ml[100,3328+6]..[100,3328+13])
                                    Ppat_construct "Pattern" (src/extension.ml[100,3328+6]..[100,3328+13])
                                    None
                                  pattern (src/extension.ml[100,3328+15]..[100,3328+71])
                                    Ppat_record Open
                                    [
                                      "ppat_desc" (src/extension.ml[100,3328+17]..[100,3328+26])
                                        pattern (src/extension.ml[100,3328+29]..[100,3328+45])
                                          Ppat_construct "Ppat_extension" (src/extension.ml[100,3328+29]..[100,3328+43])
                                          Some
                                            pattern (src/extension.ml[100,3328+44]..[100,3328+45])
                                              Ppat_var "e" (src/extension.ml[100,3328+44]..[100,3328+45])
                                      "ppat_attributes" (src/extension.ml[100,3328+47]..[100,3328+62])
                                        pattern (src/extension.ml[100,3328+65]..[100,3328+66])
                                          Ppat_var "a" (src/extension.ml[100,3328+65]..[100,3328+66])
                                    ]
                                ]
                              expression (src/extension.ml[101,3403+8]..[101,3403+19])
                                Pexp_construct "Some" (src/extension.ml[101,3403+8]..[101,3403+12])
                                Some
                                  expression (src/extension.ml[101,3403+13]..[101,3403+19])
                                    Pexp_tuple
                                    [
                                      expression (src/extension.ml[101,3403+14]..[101,3403+15])
                                        Pexp_ident "e" (src/extension.ml[101,3403+14]..[101,3403+15])
                                      expression (src/extension.ml[101,3403+17]..[101,3403+18])
                                        Pexp_ident "a" (src/extension.ml[101,3403+17]..[101,3403+18])
                                    ]
                            <case>
                              pattern (src/extension.ml[102,3423+6]..[102,3423+62])
                                Ppat_tuple
                                [
                                  pattern (src/extension.ml[102,3423+6]..[102,3423+20])
                                    Ppat_construct "Signature_item" (src/extension.ml[102,3423+6]..[102,3423+20])
                                    None
                                  pattern (src/extension.ml[102,3423+22]..[102,3423+62])
                                    Ppat_record Open
                                    [
                                      "psig_desc" (src/extension.ml[102,3423+24]..[102,3423+33])
                                        pattern (src/extension.ml[102,3423+36]..[102,3423+57])
                                          Ppat_construct "Psig_extension" (src/extension.ml[102,3423+36]..[102,3423+50])
                                          Some
                                            pattern (src/extension.ml[102,3423+51]..[102,3423+57])
                                              Ppat_tuple
                                              [
                                                pattern (src/extension.ml[102,3423+52]..[102,3423+53])
                                                  Ppat_var "e" (src/extension.ml[102,3423+52]..[102,3423+53])
                                                pattern (src/extension.ml[102,3423+55]..[102,3423+56])
                                                  Ppat_var "a" (src/extension.ml[102,3423+55]..[102,3423+56])
                                              ]
                                    ]
                                ]
                              expression (src/extension.ml[102,3423+66]..[102,3423+77])
                                Pexp_construct "Some" (src/extension.ml[102,3423+66]..[102,3423+70])
                                Some
                                  expression (src/extension.ml[102,3423+71]..[102,3423+77])
                                    Pexp_tuple
                                    [
                                      expression (src/extension.ml[102,3423+72]..[102,3423+73])
                                        Pexp_ident "e" (src/extension.ml[102,3423+72]..[102,3423+73])
                                      expression (src/extension.ml[102,3423+75]..[102,3423+76])
                                        Pexp_ident "a" (src/extension.ml[102,3423+75]..[102,3423+76])
                                    ]
                            <case>
                              pattern (src/extension.ml[103,3501+6]..[103,3501+62])
                                Ppat_tuple
                                [
                                  pattern (src/extension.ml[103,3501+6]..[103,3501+20])
                                    Ppat_construct "Structure_item" (src/extension.ml[103,3501+6]..[103,3501+20])
                                    None
                                  pattern (src/extension.ml[103,3501+22]..[103,3501+62])
                                    Ppat_record Open
                                    [
                                      "pstr_desc" (src/extension.ml[103,3501+24]..[103,3501+33])
                                        pattern (src/extension.ml[103,3501+36]..[103,3501+57])
                                          Ppat_construct "Pstr_extension" (src/extension.ml[103,3501+36]..[103,3501+50])
                                          Some
                                            pattern (src/extension.ml[103,3501+51]..[103,3501+57])
                                              Ppat_tuple
                                              [
                                                pattern (src/extension.ml[103,3501+52]..[103,3501+53])
                                                  Ppat_var "e" (src/extension.ml[103,3501+52]..[103,3501+53])
                                                pattern (src/extension.ml[103,3501+55]..[103,3501+56])
                                                  Ppat_var "a" (src/extension.ml[103,3501+55]..[103,3501+56])
                                              ]
                                    ]
                                ]
                              expression (src/extension.ml[103,3501+66]..[103,3501+77])
                                Pexp_construct "Some" (src/extension.ml[103,3501+66]..[103,3501+70])
                                Some
                                  expression (src/extension.ml[103,3501+71]..[103,3501+77])
                                    Pexp_tuple
                                    [
                                      expression (src/extension.ml[103,3501+72]..[103,3501+73])
                                        Pexp_ident "e" (src/extension.ml[103,3501+72]..[103,3501+73])
                                      expression (src/extension.ml[103,3501+75]..[103,3501+76])
                                        Pexp_ident "a" (src/extension.ml[103,3501+75]..[103,3501+76])
                                    ]
                            <case>
                              pattern (src/extension.ml[104,3579+6]..[104,3579+27])
                                Ppat_tuple
                                [
                                  pattern (src/extension.ml[104,3579+6]..[104,3579+16])
                                    Ppat_construct "Ppx_import" (src/extension.ml[104,3579+6]..[104,3579+16])
                                    None
                                  pattern (src/extension.ml[104,3579+18]..[104,3579+27])
                                    Ppat_var "type_decl" (src/extension.ml[104,3579+18]..[104,3579+27])
                                ]
                              expression (src/extension.ml[104,3579+31]..[104,3579+65])
                                Pexp_apply
                                expression (src/extension.ml[104,3579+31]..[104,3579+55])
                                  Pexp_ident "get_ppx_import_extension" (src/extension.ml[104,3579+31]..[104,3579+55])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[104,3579+56]..[104,3579+65])
                                      Pexp_ident "type_decl" (src/extension.ml[104,3579+56]..[104,3579+65])
                                ]
                            <case>
                              pattern (src/extension.ml[105,3645+6]..[105,3645+7])
                                Ppat_any
                              expression (src/extension.ml[105,3645+11]..[105,3645+15])
                                Pexp_construct "None" (src/extension.ml[105,3645+11]..[105,3645+15])
                                None
                          ]
                    core_type (src/extension.ml[80,2424+30]..[80,2424+73])
                      Ptyp_arrow
                      Nolabel
                      core_type (src/extension.ml[80,2424+30]..[80,2424+33])
                        Ptyp_constr "t" (src/extension.ml[80,2424+32]..[80,2424+33])
                        [
                          core_type (src/extension.ml[80,2424+30]..[80,2424+31])
                            Ptyp_constr "a" (src/extension.ml[80,2424+30]..[80,2424+31])
                            []
                        ]
                      core_type (src/extension.ml[80,2424+37]..[80,2424+73])
                        Ptyp_arrow
                        Nolabel
                        core_type (src/extension.ml[80,2424+37]..[80,2424+38])
                          Ptyp_constr "a" (src/extension.ml[80,2424+37]..[80,2424+38])
                          []
                        core_type (src/extension.ml[80,2424+42]..[80,2424+73])
                          Ptyp_constr "option" (src/extension.ml[80,2424+67]..[80,2424+73])
                          [
                            core_type (src/extension.ml[80,2424+43]..[80,2424+65])
                              Ptyp_tuple
                              [
                                core_type (src/extension.ml[80,2424+43]..[80,2424+52])
                                  Ptyp_constr "extension" (src/extension.ml[80,2424+43]..[80,2424+52])
                                  []
                                core_type (src/extension.ml[80,2424+55]..[80,2424+65])
                                  Ptyp_constr "attributes" (src/extension.ml[80,2424+55]..[80,2424+65])
                                  []
                              ]
                          ]
            ]
          structure_item (src/extension.ml[107,3662+2]..[127,4765+79])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[107,3662+6]..[109,3705+75]) ghost
                  Ppat_constraint
                  pattern (src/extension.ml[107,3662+6]..[107,3662+26])
                    Ppat_var "merge_attributes_res" (src/extension.ml[107,3662+6]..[107,3662+26])
                  core_type (src/extension.ml[107,3662+6]..[127,4765+79]) ghost
                    Ptyp_poly 'a
                    core_type (src/extension.ml[109,3705+6]..[109,3705+75])
                      Ptyp_arrow
                      Nolabel
                      core_type (src/extension.ml[109,3705+6]..[109,3705+9])
                        Ptyp_constr "t" (src/extension.ml[109,3705+8]..[109,3705+9])
                        [
                          core_type (src/extension.ml[109,3705+6]..[109,3705+7])
                            Ptyp_var a
                        ]
                      core_type (src/extension.ml[109,3705+13]..[109,3705+75])
                        Ptyp_arrow
                        Nolabel
                        core_type (src/extension.ml[109,3705+13]..[109,3705+14])
                          Ptyp_var a
                        core_type (src/extension.ml[109,3705+18]..[109,3705+75])
                          Ptyp_arrow
                          Nolabel
                          core_type (src/extension.ml[109,3705+18]..[109,3705+28])
                            Ptyp_constr "attributes" (src/extension.ml[109,3705+18]..[109,3705+28])
                            []
                          core_type (src/extension.ml[109,3705+32]..[109,3705+75])
                            Ptyp_constr "result" (src/extension.ml[109,3705+69]..[109,3705+75])
                            [
                              core_type (src/extension.ml[109,3705+33]..[109,3705+34])
                                Ptyp_var a
                              core_type (src/extension.ml[109,3705+36]..[109,3705+67])
                                Ptyp_constr "NonEmptyList.t" (src/extension.ml[109,3705+53]..[109,3705+67])
                                [
                                  core_type (src/extension.ml[109,3705+36]..[109,3705+52])
                                    Ptyp_constr "Location.Error.t" (src/extension.ml[109,3705+36]..[109,3705+52])
                                    []
                                ]
                            ]
                expression (src/extension.ml[107,3662+6]..[127,4765+79])
                  Pexp_newtype "a"
                  expression (src/extension.ml[107,3662+6]..[127,4765+79])
                    Pexp_constraint
                    expression (src/extension.ml[110,3783+3]..[127,4765+79])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[110,3783+7]..[110,3783+8])
                        Ppat_var "t" (src/extension.ml[110,3783+7]..[110,3783+8])
                      expression (src/extension.ml[110,3783+9]..[127,4765+79]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/extension.ml[110,3783+9]..[110,3783+10])
                          Ppat_var "x" (src/extension.ml[110,3783+9]..[110,3783+10])
                        expression (src/extension.ml[110,3783+11]..[127,4765+79]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/extension.ml[110,3783+11]..[110,3783+16])
                            Ppat_var "attrs" (src/extension.ml[110,3783+11]..[110,3783+16])
                          expression (src/extension.ml[111,3803+4]..[127,4765+79])
                            Pexp_match
                            expression (src/extension.ml[111,3803+10]..[111,3803+11])
                              Pexp_ident "t" (src/extension.ml[111,3803+10]..[111,3803+11])
                            [
                              <case>
                                pattern (src/extension.ml[112,3820+6]..[112,3820+16])
                                  Ppat_construct "Class_expr" (src/extension.ml[112,3820+6]..[112,3820+16])
                                  None
                                expression (src/extension.ml[112,3820+20]..[112,3820+75])
                                  Pexp_construct "Ok" (src/extension.ml[112,3820+20]..[112,3820+22])
                                  Some
                                    expression (src/extension.ml[112,3820+23]..[112,3820+75])
                                      Pexp_record
                                      [
                                        "pcl_attributes" (src/extension.ml[112,3820+32]..[112,3820+46])
                                          expression (src/extension.ml[112,3820+49]..[112,3820+73])
                                            Pexp_apply
                                            expression (src/extension.ml[112,3820+66]..[112,3820+67])
                                              Pexp_ident "@" (src/extension.ml[112,3820+66]..[112,3820+67])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/extension.ml[112,3820+49]..[112,3820+65])
                                                  Pexp_field
                                                  expression (src/extension.ml[112,3820+49]..[112,3820+50])
                                                    Pexp_ident "x" (src/extension.ml[112,3820+49]..[112,3820+50])
                                                  "pcl_attributes" (src/extension.ml[112,3820+51]..[112,3820+65])
                                              <arg>
                                              Nolabel
                                                expression (src/extension.ml[112,3820+68]..[112,3820+73])
                                                  Pexp_ident "attrs" (src/extension.ml[112,3820+68]..[112,3820+73])
                                            ]
                                      ]
                                      Some
                                        expression (src/extension.ml[112,3820+25]..[112,3820+26])
                                          Pexp_ident "x" (src/extension.ml[112,3820+25]..[112,3820+26])
                              <case>
                                pattern (src/extension.ml[113,3896+6]..[113,3896+17])
                                  Ppat_construct "Class_field" (src/extension.ml[113,3896+6]..[113,3896+17])
                                  None
                                expression (src/extension.ml[113,3896+21]..[113,3896+76])
                                  Pexp_construct "Ok" (src/extension.ml[113,3896+21]..[113,3896+23])
                                  Some
                                    expression (src/extension.ml[113,3896+24]..[113,3896+76])
                                      Pexp_record
                                      [
                                        "pcf_attributes" (src/extension.ml[113,3896+33]..[113,3896+47])
                                          expression (src/extension.ml[113,3896+50]..[113,3896+74])
                                            Pexp_apply
                                            expression (src/extension.ml[113,3896+67]..[113,3896+68])
                                              Pexp_ident "@" (src/extension.ml[113,3896+67]..[113,3896+68])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/extension.ml[113,3896+50]..[113,3896+66])
                                                  Pexp_field
                                                  expression (src/extension.ml[113,3896+50]..[113,3896+51])
                                                    Pexp_ident "x" (src/extension.ml[113,3896+50]..[113,3896+51])
                                                  "pcf_attributes" (src/extension.ml[113,3896+52]..[113,3896+66])
                                              <arg>
                                              Nolabel
                                                expression (src/extension.ml[113,3896+69]..[113,3896+74])
                                                  Pexp_ident "attrs" (src/extension.ml[113,3896+69]..[113,3896+74])
                                            ]
                                      ]
                                      Some
                                        expression (src/extension.ml[113,3896+26]..[113,3896+27])
                                          Pexp_ident "x" (src/extension.ml[113,3896+26]..[113,3896+27])
                              <case>
                                pattern (src/extension.ml[114,3973+6]..[114,3973+16])
                                  Ppat_construct "Class_type" (src/extension.ml[114,3973+6]..[114,3973+16])
                                  None
                                expression (src/extension.ml[114,3973+20]..[114,3973+77])
                                  Pexp_construct "Ok" (src/extension.ml[114,3973+20]..[114,3973+22])
                                  Some
                                    expression (src/extension.ml[114,3973+23]..[114,3973+77])
                                      Pexp_record
                                      [
                                        "pcty_attributes" (src/extension.ml[114,3973+32]..[114,3973+47])
                                          expression (src/extension.ml[114,3973+50]..[114,3973+75])
                                            Pexp_apply
                                            expression (src/extension.ml[114,3973+68]..[114,3973+69])
                                              Pexp_ident "@" (src/extension.ml[114,3973+68]..[114,3973+69])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/extension.ml[114,3973+50]..[114,3973+67])
                                                  Pexp_field
                                                  expression (src/extension.ml[114,3973+50]..[114,3973+51])
                                                    Pexp_ident "x" (src/extension.ml[114,3973+50]..[114,3973+51])
                                                  "pcty_attributes" (src/extension.ml[114,3973+52]..[114,3973+67])
                                              <arg>
                                              Nolabel
                                                expression (src/extension.ml[114,3973+70]..[114,3973+75])
                                                  Pexp_ident "attrs" (src/extension.ml[114,3973+70]..[114,3973+75])
                                            ]
                                      ]
                                      Some
                                        expression (src/extension.ml[114,3973+25]..[114,3973+26])
                                          Pexp_ident "x" (src/extension.ml[114,3973+25]..[114,3973+26])
                              <case>
                                pattern (src/extension.ml[115,4051+6]..[115,4051+22])
                                  Ppat_construct "Class_type_field" (src/extension.ml[115,4051+6]..[115,4051+22])
                                  None
                                expression (src/extension.ml[116,4077+8]..[116,4077+65])
                                  Pexp_construct "Ok" (src/extension.ml[116,4077+8]..[116,4077+10])
                                  Some
                                    expression (src/extension.ml[116,4077+11]..[116,4077+65])
                                      Pexp_record
                                      [
                                        "pctf_attributes" (src/extension.ml[116,4077+20]..[116,4077+35])
                                          expression (src/extension.ml[116,4077+38]..[116,4077+63])
                                            Pexp_apply
                                            expression (src/extension.ml[116,4077+56]..[116,4077+57])
                                              Pexp_ident "@" (src/extension.ml[116,4077+56]..[116,4077+57])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/extension.ml[116,4077+38]..[116,4077+55])
                                                  Pexp_field
                                                  expression (src/extension.ml[116,4077+38]..[116,4077+39])
                                                    Pexp_ident "x" (src/extension.ml[116,4077+38]..[116,4077+39])
                                                  "pctf_attributes" (src/extension.ml[116,4077+40]..[116,4077+55])
                                              <arg>
                                              Nolabel
                                                expression (src/extension.ml[116,4077+58]..[116,4077+63])
                                                  Pexp_ident "attrs" (src/extension.ml[116,4077+58]..[116,4077+63])
                                            ]
                                      ]
                                      Some
                                        expression (src/extension.ml[116,4077+13]..[116,4077+14])
                                          Pexp_ident "x" (src/extension.ml[116,4077+13]..[116,4077+14])
                              <case>
                                pattern (src/extension.ml[117,4143+6]..[117,4143+15])
                                  Ppat_construct "Core_type" (src/extension.ml[117,4143+6]..[117,4143+15])
                                  None
                                expression (src/extension.ml[117,4143+19]..[117,4143+76])
                                  Pexp_construct "Ok" (src/extension.ml[117,4143+19]..[117,4143+21])
                                  Some
                                    expression (src/extension.ml[117,4143+22]..[117,4143+76])
                                      Pexp_record
                                      [
                                        "ptyp_attributes" (src/extension.ml[117,4143+31]..[117,4143+46])
                                          expression (src/extension.ml[117,4143+49]..[117,4143+74])
                                            Pexp_apply
                                            expression (src/extension.ml[117,4143+67]..[117,4143+68])
                                              Pexp_ident "@" (src/extension.ml[117,4143+67]..[117,4143+68])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/extension.ml[117,4143+49]..[117,4143+66])
                                                  Pexp_field
                                                  expression (src/extension.ml[117,4143+49]..[117,4143+50])
                                                    Pexp_ident "x" (src/extension.ml[117,4143+49]..[117,4143+50])
                                                  "ptyp_attributes" (src/extension.ml[117,4143+51]..[117,4143+66])
                                              <arg>
                                              Nolabel
                                                expression (src/extension.ml[117,4143+69]..[117,4143+74])
                                                  Pexp_ident "attrs" (src/extension.ml[117,4143+69]..[117,4143+74])
                                            ]
                                      ]
                                      Some
                                        expression (src/extension.ml[117,4143+24]..[117,4143+25])
                                          Pexp_ident "x" (src/extension.ml[117,4143+24]..[117,4143+25])
                              <case>
                                pattern (src/extension.ml[118,4220+6]..[118,4220+16])
                                  Ppat_construct "Expression" (src/extension.ml[118,4220+6]..[118,4220+16])
                                  None
                                expression (src/extension.ml[118,4220+20]..[118,4220+77])
                                  Pexp_construct "Ok" (src/extension.ml[118,4220+20]..[118,4220+22])
                                  Some
                                    expression (src/extension.ml[118,4220+23]..[118,4220+77])
                                      Pexp_record
                                      [
                                        "pexp_attributes" (src/extension.ml[118,4220+32]..[118,4220+47])
                                          expression (src/extension.ml[118,4220+50]..[118,4220+75])
                                            Pexp_apply
                                            expression (src/extension.ml[118,4220+68]..[118,4220+69])
                                              Pexp_ident "@" (src/extension.ml[118,4220+68]..[118,4220+69])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/extension.ml[118,4220+50]..[118,4220+67])
                                                  Pexp_field
                                                  expression (src/extension.ml[118,4220+50]..[118,4220+51])
                                                    Pexp_ident "x" (src/extension.ml[118,4220+50]..[118,4220+51])
                                                  "pexp_attributes" (src/extension.ml[118,4220+52]..[118,4220+67])
                                              <arg>
                                              Nolabel
                                                expression (src/extension.ml[118,4220+70]..[118,4220+75])
                                                  Pexp_ident "attrs" (src/extension.ml[118,4220+70]..[118,4220+75])
                                            ]
                                      ]
                                      Some
                                        expression (src/extension.ml[118,4220+25]..[118,4220+26])
                                          Pexp_ident "x" (src/extension.ml[118,4220+25]..[118,4220+26])
                              <case>
                                pattern (src/extension.ml[119,4298+6]..[119,4298+17])
                                  Ppat_construct "Module_expr" (src/extension.ml[119,4298+6]..[119,4298+17])
                                  None
                                expression (src/extension.ml[119,4298+21]..[119,4298+78])
                                  Pexp_construct "Ok" (src/extension.ml[119,4298+21]..[119,4298+23])
                                  Some
                                    expression (src/extension.ml[119,4298+24]..[119,4298+78])
                                      Pexp_record
                                      [
                                        "pmod_attributes" (src/extension.ml[119,4298+33]..[119,4298+48])
                                          expression (src/extension.ml[119,4298+51]..[119,4298+76])
                                            Pexp_apply
                                            expression (src/extension.ml[119,4298+69]..[119,4298+70])
                                              Pexp_ident "@" (src/extension.ml[119,4298+69]..[119,4298+70])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/extension.ml[119,4298+51]..[119,4298+68])
                                                  Pexp_field
                                                  expression (src/extension.ml[119,4298+51]..[119,4298+52])
                                                    Pexp_ident "x" (src/extension.ml[119,4298+51]..[119,4298+52])
                                                  "pmod_attributes" (src/extension.ml[119,4298+53]..[119,4298+68])
                                              <arg>
                                              Nolabel
                                                expression (src/extension.ml[119,4298+71]..[119,4298+76])
                                                  Pexp_ident "attrs" (src/extension.ml[119,4298+71]..[119,4298+76])
                                            ]
                                      ]
                                      Some
                                        expression (src/extension.ml[119,4298+26]..[119,4298+27])
                                          Pexp_ident "x" (src/extension.ml[119,4298+26]..[119,4298+27])
                              <case>
                                pattern (src/extension.ml[120,4377+6]..[120,4377+17])
                                  Ppat_construct "Module_type" (src/extension.ml[120,4377+6]..[120,4377+17])
                                  None
                                expression (src/extension.ml[120,4377+21]..[120,4377+78])
                                  Pexp_construct "Ok" (src/extension.ml[120,4377+21]..[120,4377+23])
                                  Some
                                    expression (src/extension.ml[120,4377+24]..[120,4377+78])
                                      Pexp_record
                                      [
                                        "pmty_attributes" (src/extension.ml[120,4377+33]..[120,4377+48])
                                          expression (src/extension.ml[120,4377+51]..[120,4377+76])
                                            Pexp_apply
                                            expression (src/extension.ml[120,4377+69]..[120,4377+70])
                                              Pexp_ident "@" (src/extension.ml[120,4377+69]..[120,4377+70])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/extension.ml[120,4377+51]..[120,4377+68])
                                                  Pexp_field
                                                  expression (src/extension.ml[120,4377+51]..[120,4377+52])
                                                    Pexp_ident "x" (src/extension.ml[120,4377+51]..[120,4377+52])
                                                  "pmty_attributes" (src/extension.ml[120,4377+53]..[120,4377+68])
                                              <arg>
                                              Nolabel
                                                expression (src/extension.ml[120,4377+71]..[120,4377+76])
                                                  Pexp_ident "attrs" (src/extension.ml[120,4377+71]..[120,4377+76])
                                            ]
                                      ]
                                      Some
                                        expression (src/extension.ml[120,4377+26]..[120,4377+27])
                                          Pexp_ident "x" (src/extension.ml[120,4377+26]..[120,4377+27])
                              <case>
                                pattern (src/extension.ml[121,4456+6]..[121,4456+13])
                                  Ppat_construct "Pattern" (src/extension.ml[121,4456+6]..[121,4456+13])
                                  None
                                expression (src/extension.ml[121,4456+17]..[121,4456+74])
                                  Pexp_construct "Ok" (src/extension.ml[121,4456+17]..[121,4456+19])
                                  Some
                                    expression (src/extension.ml[121,4456+20]..[121,4456+74])
                                      Pexp_record
                                      [
                                        "ppat_attributes" (src/extension.ml[121,4456+29]..[121,4456+44])
                                          expression (src/extension.ml[121,4456+47]..[121,4456+72])
                                            Pexp_apply
                                            expression (src/extension.ml[121,4456+65]..[121,4456+66])
                                              Pexp_ident "@" (src/extension.ml[121,4456+65]..[121,4456+66])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/extension.ml[121,4456+47]..[121,4456+64])
                                                  Pexp_field
                                                  expression (src/extension.ml[121,4456+47]..[121,4456+48])
                                                    Pexp_ident "x" (src/extension.ml[121,4456+47]..[121,4456+48])
                                                  "ppat_attributes" (src/extension.ml[121,4456+49]..[121,4456+64])
                                              <arg>
                                              Nolabel
                                                expression (src/extension.ml[121,4456+67]..[121,4456+72])
                                                  Pexp_ident "attrs" (src/extension.ml[121,4456+67]..[121,4456+72])
                                            ]
                                      ]
                                      Some
                                        expression (src/extension.ml[121,4456+22]..[121,4456+23])
                                          Pexp_ident "x" (src/extension.ml[121,4456+22]..[121,4456+23])
                              <case>
                                pattern (src/extension.ml[122,4531+6]..[122,4531+20])
                                  Ppat_construct "Signature_item" (src/extension.ml[122,4531+6]..[122,4531+20])
                                  None
                                expression (src/extension.ml[122,4531+24]..[123,4557+79])
                                  Pexp_match
                                  expression (src/extension.ml[123,4557+14]..[123,4557+37])
                                    Pexp_apply
                                    expression (src/extension.ml[123,4557+14]..[123,4557+31])
                                      Pexp_ident "attributes_errors" (src/extension.ml[123,4557+14]..[123,4557+31])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/extension.ml[123,4557+32]..[123,4557+37])
                                          Pexp_ident "attrs" (src/extension.ml[123,4557+32]..[123,4557+37])
                                    ]
                                  [
                                    <case>
                                      pattern (src/extension.ml[123,4557+43]..[123,4557+45])
                                        Ppat_construct "[]" (src/extension.ml[123,4557+43]..[123,4557+45])
                                        None
                                      expression (src/extension.ml[123,4557+49]..[123,4557+53])
                                        Pexp_construct "Ok" (src/extension.ml[123,4557+49]..[123,4557+51])
                                        Some
                                          expression (src/extension.ml[123,4557+52]..[123,4557+53])
                                            Pexp_ident "x" (src/extension.ml[123,4557+52]..[123,4557+53])
                                    <case>
                                      pattern (src/extension.ml[123,4557+56]..[123,4557+62])
                                        Ppat_construct "::" (src/extension.ml[123,4557+58]..[123,4557+60])
                                        Some
                                          pattern (src/extension.ml[123,4557+56]..[123,4557+62]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (src/extension.ml[123,4557+56]..[123,4557+57])
                                                Ppat_var "t" (src/extension.ml[123,4557+56]..[123,4557+57])
                                              pattern (src/extension.ml[123,4557+61]..[123,4557+62])
                                                Ppat_var "q" (src/extension.ml[123,4557+61]..[123,4557+62])
                                            ]
                                      expression (src/extension.ml[123,4557+66]..[123,4557+78])
                                        Pexp_construct "Error" (src/extension.ml[123,4557+66]..[123,4557+71])
                                        Some
                                          expression (src/extension.ml[123,4557+72]..[123,4557+78])
                                            Pexp_tuple
                                            [
                                              expression (src/extension.ml[123,4557+73]..[123,4557+74])
                                                Pexp_ident "t" (src/extension.ml[123,4557+73]..[123,4557+74])
                                              expression (src/extension.ml[123,4557+76]..[123,4557+77])
                                                Pexp_ident "q" (src/extension.ml[123,4557+76]..[123,4557+77])
                                            ]
                                  ]
                              <case>
                                pattern (src/extension.ml[124,4637+6]..[124,4637+20])
                                  Ppat_construct "Structure_item" (src/extension.ml[124,4637+6]..[124,4637+20])
                                  None
                                expression (src/extension.ml[124,4637+24]..[125,4663+79])
                                  Pexp_match
                                  expression (src/extension.ml[125,4663+14]..[125,4663+37])
                                    Pexp_apply
                                    expression (src/extension.ml[125,4663+14]..[125,4663+31])
                                      Pexp_ident "attributes_errors" (src/extension.ml[125,4663+14]..[125,4663+31])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/extension.ml[125,4663+32]..[125,4663+37])
                                          Pexp_ident "attrs" (src/extension.ml[125,4663+32]..[125,4663+37])
                                    ]
                                  [
                                    <case>
                                      pattern (src/extension.ml[125,4663+43]..[125,4663+45])
                                        Ppat_construct "[]" (src/extension.ml[125,4663+43]..[125,4663+45])
                                        None
                                      expression (src/extension.ml[125,4663+49]..[125,4663+53])
                                        Pexp_construct "Ok" (src/extension.ml[125,4663+49]..[125,4663+51])
                                        Some
                                          expression (src/extension.ml[125,4663+52]..[125,4663+53])
                                            Pexp_ident "x" (src/extension.ml[125,4663+52]..[125,4663+53])
                                    <case>
                                      pattern (src/extension.ml[125,4663+56]..[125,4663+62])
                                        Ppat_construct "::" (src/extension.ml[125,4663+58]..[125,4663+60])
                                        Some
                                          pattern (src/extension.ml[125,4663+56]..[125,4663+62]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (src/extension.ml[125,4663+56]..[125,4663+57])
                                                Ppat_var "t" (src/extension.ml[125,4663+56]..[125,4663+57])
                                              pattern (src/extension.ml[125,4663+61]..[125,4663+62])
                                                Ppat_var "q" (src/extension.ml[125,4663+61]..[125,4663+62])
                                            ]
                                      expression (src/extension.ml[125,4663+66]..[125,4663+78])
                                        Pexp_construct "Error" (src/extension.ml[125,4663+66]..[125,4663+71])
                                        Some
                                          expression (src/extension.ml[125,4663+72]..[125,4663+78])
                                            Pexp_tuple
                                            [
                                              expression (src/extension.ml[125,4663+73]..[125,4663+74])
                                                Pexp_ident "t" (src/extension.ml[125,4663+73]..[125,4663+74])
                                              expression (src/extension.ml[125,4663+76]..[125,4663+77])
                                                Pexp_ident "q" (src/extension.ml[125,4663+76]..[125,4663+77])
                                            ]
                                  ]
                              <case>
                                pattern (src/extension.ml[126,4743+6]..[126,4743+16])
                                  Ppat_construct "Ppx_import" (src/extension.ml[126,4743+6]..[126,4743+16])
                                  None
                                expression (src/extension.ml[126,4743+20]..[127,4765+79])
                                  Pexp_match
                                  expression (src/extension.ml[127,4765+14]..[127,4765+37])
                                    Pexp_apply
                                    expression (src/extension.ml[127,4765+14]..[127,4765+31])
                                      Pexp_ident "attributes_errors" (src/extension.ml[127,4765+14]..[127,4765+31])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/extension.ml[127,4765+32]..[127,4765+37])
                                          Pexp_ident "attrs" (src/extension.ml[127,4765+32]..[127,4765+37])
                                    ]
                                  [
                                    <case>
                                      pattern (src/extension.ml[127,4765+43]..[127,4765+45])
                                        Ppat_construct "[]" (src/extension.ml[127,4765+43]..[127,4765+45])
                                        None
                                      expression (src/extension.ml[127,4765+49]..[127,4765+53])
                                        Pexp_construct "Ok" (src/extension.ml[127,4765+49]..[127,4765+51])
                                        Some
                                          expression (src/extension.ml[127,4765+52]..[127,4765+53])
                                            Pexp_ident "x" (src/extension.ml[127,4765+52]..[127,4765+53])
                                    <case>
                                      pattern (src/extension.ml[127,4765+56]..[127,4765+62])
                                        Ppat_construct "::" (src/extension.ml[127,4765+58]..[127,4765+60])
                                        Some
                                          pattern (src/extension.ml[127,4765+56]..[127,4765+62]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (src/extension.ml[127,4765+56]..[127,4765+57])
                                                Ppat_var "t" (src/extension.ml[127,4765+56]..[127,4765+57])
                                              pattern (src/extension.ml[127,4765+61]..[127,4765+62])
                                                Ppat_var "q" (src/extension.ml[127,4765+61]..[127,4765+62])
                                            ]
                                      expression (src/extension.ml[127,4765+66]..[127,4765+78])
                                        Pexp_construct "Error" (src/extension.ml[127,4765+66]..[127,4765+71])
                                        Some
                                          expression (src/extension.ml[127,4765+72]..[127,4765+78])
                                            Pexp_tuple
                                            [
                                              expression (src/extension.ml[127,4765+73]..[127,4765+74])
                                                Pexp_ident "t" (src/extension.ml[127,4765+73]..[127,4765+74])
                                              expression (src/extension.ml[127,4765+76]..[127,4765+77])
                                                Pexp_ident "q" (src/extension.ml[127,4765+76]..[127,4765+77])
                                            ]
                                  ]
                            ]
                    core_type (src/extension.ml[109,3705+6]..[109,3705+75])
                      Ptyp_arrow
                      Nolabel
                      core_type (src/extension.ml[109,3705+6]..[109,3705+9])
                        Ptyp_constr "t" (src/extension.ml[109,3705+8]..[109,3705+9])
                        [
                          core_type (src/extension.ml[109,3705+6]..[109,3705+7])
                            Ptyp_constr "a" (src/extension.ml[109,3705+6]..[109,3705+7])
                            []
                        ]
                      core_type (src/extension.ml[109,3705+13]..[109,3705+75])
                        Ptyp_arrow
                        Nolabel
                        core_type (src/extension.ml[109,3705+13]..[109,3705+14])
                          Ptyp_constr "a" (src/extension.ml[109,3705+13]..[109,3705+14])
                          []
                        core_type (src/extension.ml[109,3705+18]..[109,3705+75])
                          Ptyp_arrow
                          Nolabel
                          core_type (src/extension.ml[109,3705+18]..[109,3705+28])
                            Ptyp_constr "attributes" (src/extension.ml[109,3705+18]..[109,3705+28])
                            []
                          core_type (src/extension.ml[109,3705+32]..[109,3705+75])
                            Ptyp_constr "result" (src/extension.ml[109,3705+69]..[109,3705+75])
                            [
                              core_type (src/extension.ml[109,3705+33]..[109,3705+34])
                                Ptyp_constr "a" (src/extension.ml[109,3705+33]..[109,3705+34])
                                []
                              core_type (src/extension.ml[109,3705+36]..[109,3705+67])
                                Ptyp_constr "NonEmptyList.t" (src/extension.ml[109,3705+53]..[109,3705+67])
                                [
                                  core_type (src/extension.ml[109,3705+36]..[109,3705+52])
                                    Ptyp_constr "Location.Error.t" (src/extension.ml[109,3705+36]..[109,3705+52])
                                    []
                                ]
                            ]
            ]
          structure_item (src/extension.ml[129,4846+2]..[132,4964+72])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[129,4846+6]..[129,4846+60]) ghost
                  Ppat_constraint
                  pattern (src/extension.ml[129,4846+6]..[129,4846+22])
                    Ppat_var "merge_attributes" (src/extension.ml[129,4846+6]..[129,4846+22])
                  core_type (src/extension.ml[129,4846+6]..[132,4964+72]) ghost
                    Ptyp_poly 'a
                    core_type (src/extension.ml[129,4846+33]..[129,4846+60])
                      Ptyp_arrow
                      Nolabel
                      core_type (src/extension.ml[129,4846+33]..[129,4846+36])
                        Ptyp_constr "t" (src/extension.ml[129,4846+35]..[129,4846+36])
                        [
                          core_type (src/extension.ml[129,4846+33]..[129,4846+34])
                            Ptyp_var a
                        ]
                      core_type (src/extension.ml[129,4846+40]..[129,4846+60])
                        Ptyp_arrow
                        Nolabel
                        core_type (src/extension.ml[129,4846+40]..[129,4846+41])
                          Ptyp_var a
                        core_type (src/extension.ml[129,4846+45]..[129,4846+60])
                          Ptyp_arrow
                          Nolabel
                          core_type (src/extension.ml[129,4846+45]..[129,4846+55])
                            Ptyp_constr "attributes" (src/extension.ml[129,4846+45]..[129,4846+55])
                            []
                          core_type (src/extension.ml[129,4846+59]..[129,4846+60])
                            Ptyp_var a
                expression (src/extension.ml[129,4846+6]..[132,4964+72])
                  Pexp_newtype "a"
                  expression (src/extension.ml[129,4846+6]..[132,4964+72])
                    Pexp_constraint
                    expression (src/extension.ml[130,4909+3]..[132,4964+72])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[130,4909+7]..[130,4909+8])
                        Ppat_var "t" (src/extension.ml[130,4909+7]..[130,4909+8])
                      expression (src/extension.ml[130,4909+9]..[132,4964+72]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/extension.ml[130,4909+9]..[130,4909+10])
                          Ppat_var "x" (src/extension.ml[130,4909+9]..[130,4909+10])
                        expression (src/extension.ml[130,4909+11]..[132,4964+72]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/extension.ml[130,4909+11]..[130,4909+16])
                            Ppat_var "attrs" (src/extension.ml[130,4909+11]..[130,4909+16])
                          expression (src/extension.ml[131,4929+4]..[132,4964+72])
                            Pexp_apply
                            expression (src/extension.ml[132,4964+4]..[132,4964+6])
                              Pexp_ident "|>" (src/extension.ml[132,4964+4]..[132,4964+6])
                            [
                              <arg>
                              Nolabel
                                expression (src/extension.ml[131,4929+4]..[131,4929+34])
                                  Pexp_apply
                                  expression (src/extension.ml[131,4929+4]..[131,4929+24])
                                    Pexp_ident "merge_attributes_res" (src/extension.ml[131,4929+4]..[131,4929+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/extension.ml[131,4929+25]..[131,4929+26])
                                        Pexp_ident "t" (src/extension.ml[131,4929+25]..[131,4929+26])
                                    <arg>
                                    Nolabel
                                      expression (src/extension.ml[131,4929+27]..[131,4929+28])
                                        Pexp_ident "x" (src/extension.ml[131,4929+27]..[131,4929+28])
                                    <arg>
                                    Nolabel
                                      expression (src/extension.ml[131,4929+29]..[131,4929+34])
                                        Pexp_ident "attrs" (src/extension.ml[131,4929+29]..[131,4929+34])
                                  ]
                              <arg>
                              Nolabel
                                expression (src/extension.ml[132,4964+7]..[132,4964+72])
                                  Pexp_apply
                                  expression (src/extension.ml[132,4964+7]..[132,4964+26])
                                    Pexp_ident "Result.handle_error" (src/extension.ml[132,4964+7]..[132,4964+26])
                                  [
                                    <arg>
                                    Labelled "f"
                                      expression (src/extension.ml[132,4964+30]..[132,4964+72])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (src/extension.ml[132,4964+35]..[132,4964+43])
                                          Ppat_tuple
                                          [
                                            pattern (src/extension.ml[132,4964+36]..[132,4964+39])
                                              Ppat_var "err" (src/extension.ml[132,4964+36]..[132,4964+39])
                                            pattern (src/extension.ml[132,4964+41]..[132,4964+42])
                                              Ppat_any
                                          ]
                                        expression (src/extension.ml[132,4964+47]..[132,4964+71])
                                          Pexp_apply
                                          expression (src/extension.ml[132,4964+47]..[132,4964+67])
                                            Pexp_ident "Location.Error.raise" (src/extension.ml[132,4964+47]..[132,4964+67])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/extension.ml[132,4964+68]..[132,4964+71])
                                                Pexp_ident "err" (src/extension.ml[132,4964+68]..[132,4964+71])
                                          ]
                                  ]
                            ]
                    core_type (src/extension.ml[129,4846+33]..[129,4846+60])
                      Ptyp_arrow
                      Nolabel
                      core_type (src/extension.ml[129,4846+33]..[129,4846+36])
                        Ptyp_constr "t" (src/extension.ml[129,4846+35]..[129,4846+36])
                        [
                          core_type (src/extension.ml[129,4846+33]..[129,4846+34])
                            Ptyp_constr "a" (src/extension.ml[129,4846+33]..[129,4846+34])
                            []
                        ]
                      core_type (src/extension.ml[129,4846+40]..[129,4846+60])
                        Ptyp_arrow
                        Nolabel
                        core_type (src/extension.ml[129,4846+40]..[129,4846+41])
                          Ptyp_constr "a" (src/extension.ml[129,4846+40]..[129,4846+41])
                          []
                        core_type (src/extension.ml[129,4846+45]..[129,4846+60])
                          Ptyp_arrow
                          Nolabel
                          core_type (src/extension.ml[129,4846+45]..[129,4846+55])
                            Ptyp_constr "attributes" (src/extension.ml[129,4846+45]..[129,4846+55])
                            []
                          core_type (src/extension.ml[129,4846+59]..[129,4846+60])
                            Ptyp_constr "a" (src/extension.ml[129,4846+59]..[129,4846+60])
                            []
            ]
        ]
  structure_item (src/extension.ml[135,5042+0]..[137,5123+71])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/extension.ml[135,5042+4]..[135,5042+13])
          Ppat_var "registrar" (src/extension.ml[135,5042+4]..[135,5042+13])
        expression (src/extension.ml[136,5058+2]..[137,5123+71])
          Pexp_apply
          expression (src/extension.ml[136,5058+2]..[136,5058+23])
            Pexp_ident "Name.Registrar.create" (src/extension.ml[136,5058+2]..[136,5058+23])
          [
            <arg>
            Labelled "kind"
              expression (src/extension.ml[136,5058+30]..[136,5058+41])
                Pexp_constant PConst_string("extension",(src/extension.ml[136,5058+31]..[136,5058+40]),None)
            <arg>
            Labelled "current_file"
              expression (src/extension.ml[136,5058+56]..[136,5058+64])
                Pexp_ident "__FILE__" (src/extension.ml[136,5058+56]..[136,5058+64])
            <arg>
            Labelled "string_of_context"
              expression (src/extension.ml[137,5123+23]..[137,5123+71])
                Pexp_fun
                Nolabel
                None
                pattern (src/extension.ml[137,5123+28]..[137,5123+43])
                  Ppat_construct "Context.T" (src/extension.ml[137,5123+29]..[137,5123+38])
                  Some
                    pattern (src/extension.ml[137,5123+39]..[137,5123+42])
                      Ppat_var "ctx" (src/extension.ml[137,5123+39]..[137,5123+42])
                expression (src/extension.ml[137,5123+47]..[137,5123+70])
                  Pexp_construct "Some" (src/extension.ml[137,5123+47]..[137,5123+51])
                  Some
                    expression (src/extension.ml[137,5123+52]..[137,5123+70])
                      Pexp_apply
                      expression (src/extension.ml[137,5123+53]..[137,5123+65])
                        Pexp_ident "Context.desc" (src/extension.ml[137,5123+53]..[137,5123+65])
                      [
                        <arg>
                        Nolabel
                          expression (src/extension.ml[137,5123+66]..[137,5123+69])
                            Pexp_ident "ctx" (src/extension.ml[137,5123+66]..[137,5123+69])
                      ]
          ]
    ]
  structure_item (src/extension.ml[139,5196+0]..[213,7519+3])
    Pstr_module
    "Make" (src/extension.ml[139,5196+7]..[139,5196+11])
      module_expr (src/extension.ml[139,5196+12]..[213,7519+3])
        Pmod_functor "Callback" (src/extension.ml[139,5196+13]..[139,5196+21])
        module_type (src/extension.ml[139,5196+24]..[141,5236+3])
          Pmty_signature
          [
            signature_item (src/extension.ml[140,5224+2]..[140,5224+11])
              Psig_type Rec
              [
                type_declaration "t" (src/extension.ml[140,5224+10]..[140,5224+11]) (src/extension.ml[140,5224+2]..[140,5224+11])
                  ptype_params =
                    [
                      core_type (src/extension.ml[140,5224+7]..[140,5224+9])
                        Ptyp_var a
                    ]
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
          ]
        module_expr (src/extension.ml[142,5243+0]..[213,7519+3])
          Pmod_structure
          [
            structure_item (src/extension.ml[143,5250+2]..[146,5357+34])
              Pstr_type Rec
              [
                type_declaration "payload_parser" (src/extension.ml[143,5250+16]..[143,5250+30]) (src/extension.ml[143,5250+2]..[146,5357+34])
                  ptype_params =
                    [
                      core_type (src/extension.ml[143,5250+8]..[143,5250+10])
                        Ptyp_var a
                      core_type (src/extension.ml[143,5250+12]..[143,5250+14])
                        Ptyp_var b
                    ]
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_variant
                      [
                        (src/extension.ml[144,5283+4]..[146,5357+34])
                          "Payload_parser" (src/extension.ml[144,5283+6]..[144,5283+20])
                          [
                            core_type (src/extension.ml[145,5306+8]..[145,5306+34])
                              Ptyp_constr "Ast_pattern.t" (src/extension.ml[145,5306+21]..[145,5306+34])
                              [
                                core_type (src/extension.ml[145,5306+9]..[145,5306+11])
                                  Ptyp_var a
                                core_type (src/extension.ml[145,5306+13]..[145,5306+15])
                                  Ptyp_var b
                                core_type (src/extension.ml[145,5306+17]..[145,5306+19])
                                  Ptyp_var c
                              ]
                            core_type (src/extension.ml[145,5306+37]..[145,5306+50])
                              Ptyp_constr "Callback.t" (src/extension.ml[145,5306+40]..[145,5306+50])
                              [
                                core_type (src/extension.ml[145,5306+37]..[145,5306+39])
                                  Ptyp_var b
                              ]
                          ]
                          Some
                            core_type (src/extension.ml[146,5357+11]..[146,5357+34])
                              Ptyp_constr "payload_parser" (src/extension.ml[146,5357+20]..[146,5357+34])
                              [
                                core_type (src/extension.ml[146,5357+12]..[146,5357+14])
                                  Ptyp_var a
                                core_type (src/extension.ml[146,5357+16]..[146,5357+18])
                                  Ptyp_var c
                              ]
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (src/extension.ml[148,5393+2]..[153,5559+3])
              Pstr_type Rec
              [
                type_declaration "t" (src/extension.ml[148,5393+28]..[148,5393+29]) (src/extension.ml[148,5393+2]..[153,5559+3])
                  ptype_params =
                    [
                      core_type (src/extension.ml[148,5393+8]..[148,5393+16])
                        Ptyp_var context
                      core_type (src/extension.ml[148,5393+18]..[148,5393+26])
                        Ptyp_var payload
                    ]
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_record
                      [
                        (src/extension.ml[149,5427+4]..[149,5427+26])
                          Immutable
                          "name" (src/extension.ml[149,5427+4]..[149,5427+8])                          core_type (src/extension.ml[149,5427+11]..[149,5427+25])
                            Ptyp_constr "Name.Pattern.t" (src/extension.ml[149,5427+11]..[149,5427+25])
                            []
                        (src/extension.ml[150,5454+4]..[150,5454+33])
                          Immutable
                          "context" (src/extension.ml[150,5454+4]..[150,5454+11])                          core_type (src/extension.ml[150,5454+14]..[150,5454+32])
                            Ptyp_constr "Context.t" (src/extension.ml[150,5454+23]..[150,5454+32])
                            [
                              core_type (src/extension.ml[150,5454+14]..[150,5454+22])
                                Ptyp_var context
                            ]
                        (src/extension.ml[151,5488+4]..[151,5488+49])
                          Immutable
                          "payload" (src/extension.ml[151,5488+4]..[151,5488+11])                          core_type (src/extension.ml[151,5488+14]..[151,5488+48])
                            Ptyp_constr "payload_parser" (src/extension.ml[151,5488+34]..[151,5488+48])
                            [
                              core_type (src/extension.ml[151,5488+15]..[151,5488+22])
                                Ptyp_constr "payload" (src/extension.ml[151,5488+15]..[151,5488+22])
                                []
                              core_type (src/extension.ml[151,5488+24]..[151,5488+32])
                                Ptyp_var payload
                            ]
                        (src/extension.ml[152,5538+4]..[152,5538+20])
                          Immutable
                          "with_arg" (src/extension.ml[152,5538+4]..[152,5538+12])                          core_type (src/extension.ml[152,5538+15]..[152,5538+19])
                            Ptyp_constr "bool" (src/extension.ml[152,5538+15]..[152,5538+19])
                            []
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (src/extension.ml[155,5564+2]..[178,6336+5])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/extension.ml[155,5564+6]..[162,5724+21]) ghost
                    Ppat_constraint
                    pattern (src/extension.ml[155,5564+6]..[155,5564+13])
                      Ppat_var "declare" (src/extension.ml[155,5564+6]..[155,5564+13])
                    core_type (src/extension.ml[155,5564+6]..[178,6336+5]) ghost
                      Ptyp_poly 'a
                      core_type (src/extension.ml[157,5594+6]..[162,5724+21])
                        Ptyp_arrow
                        Labelled "with_arg"
                        core_type (src/extension.ml[157,5594+15]..[157,5594+19])
                          Ptyp_constr "bool" (src/extension.ml[157,5594+15]..[157,5594+19])
                          []
                        core_type (src/extension.ml[158,5617+6]..[162,5724+21])
                          Ptyp_arrow
                          Nolabel
                          core_type (src/extension.ml[158,5617+6]..[158,5617+12])
                            Ptyp_constr "string" (src/extension.ml[158,5617+6]..[158,5617+12])
                            []
                          core_type (src/extension.ml[159,5633+6]..[162,5724+21])
                            Ptyp_arrow
                            Nolabel
                            core_type (src/extension.ml[159,5633+6]..[159,5633+17])
                              Ptyp_constr "Context.t" (src/extension.ml[159,5633+8]..[159,5633+17])
                              [
                                core_type (src/extension.ml[159,5633+6]..[159,5633+7])
                                  Ptyp_var a
                              ]
                            core_type (src/extension.ml[160,5654+6]..[162,5724+21])
                              Ptyp_arrow
                              Nolabel
                              core_type (src/extension.ml[160,5654+6]..[160,5654+43])
                                Ptyp_constr "Ast_pattern.t" (src/extension.ml[160,5654+30]..[160,5654+43])
                                [
                                  core_type (src/extension.ml[160,5654+7]..[160,5654+14])
                                    Ptyp_constr "payload" (src/extension.ml[160,5654+7]..[160,5654+14])
                                    []
                                  core_type (src/extension.ml[160,5654+16]..[160,5654+18])
                                    Ptyp_var b
                                  core_type (src/extension.ml[160,5654+20]..[160,5654+28])
                                    Ptyp_var payload
                                ]
                              core_type (src/extension.ml[161,5701+6]..[162,5724+21])
                                Ptyp_arrow
                                Nolabel
                                core_type (src/extension.ml[161,5701+6]..[161,5701+19])
                                  Ptyp_constr "Callback.t" (src/extension.ml[161,5701+9]..[161,5701+19])
                                  [
                                    core_type (src/extension.ml[161,5701+6]..[161,5701+8])
                                      Ptyp_var b
                                  ]
                                core_type (src/extension.ml[162,5724+6]..[162,5724+21])
                                  Ptyp_constr "t" (src/extension.ml[162,5724+20]..[162,5724+21])
                                  [
                                    core_type (src/extension.ml[162,5724+7]..[162,5724+8])
                                      Ptyp_var a
                                    core_type (src/extension.ml[162,5724+10]..[162,5724+18])
                                      Ptyp_var payload
                                  ]
                  expression (src/extension.ml[155,5564+6]..[178,6336+5])
                    Pexp_newtype "a"
                    expression (src/extension.ml[155,5564+6]..[178,6336+5])
                      Pexp_constraint
                      expression (src/extension.ml[163,5748+3]..[178,6336+5])
                        Pexp_fun
                        Labelled "with_arg"
                        None
                        pattern (src/extension.ml[163,5748+8]..[163,5748+16])
                          Ppat_var "with_arg" (src/extension.ml[163,5748+8]..[163,5748+16])
                        expression (src/extension.ml[163,5748+17]..[178,6336+5]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/extension.ml[163,5748+17]..[163,5748+21])
                            Ppat_var "name" (src/extension.ml[163,5748+17]..[163,5748+21])
                          expression (src/extension.ml[163,5748+22]..[178,6336+5]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/extension.ml[163,5748+22]..[163,5748+29])
                              Ppat_var "context" (src/extension.ml[163,5748+22]..[163,5748+29])
                            expression (src/extension.ml[163,5748+30]..[178,6336+5]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/extension.ml[163,5748+30]..[163,5748+37])
                                Ppat_var "pattern" (src/extension.ml[163,5748+30]..[163,5748+37])
                              expression (src/extension.ml[163,5748+38]..[178,6336+5]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/extension.ml[163,5748+38]..[163,5748+39])
                                  Ppat_var "k" (src/extension.ml[163,5748+38]..[163,5748+39])
                                expression (src/extension.ml[166,5886+4]..[178,6336+5])
                                  Pexp_sequence
                                  expression (src/extension.ml[166,5886+4]..[171,6120+14])
                                    Pexp_match
                                    expression (src/extension.ml[166,5886+11]..[166,5886+18])
                                      Pexp_ident "context" (src/extension.ml[166,5886+11]..[166,5886+18])
                                    [
                                      <case>
                                        pattern (src/extension.ml[167,5910+6]..[167,5910+24])
                                          Ppat_construct "Context.Ppx_import" (src/extension.ml[167,5910+6]..[167,5910+24])
                                          None
                                        expression (src/extension.ml[168,5938+8]..[168,5938+76])
                                          Pexp_apply
                                          expression (src/extension.ml[168,5938+8]..[168,5938+39])
                                            Pexp_ident "Name.Registrar.check_collisions" (src/extension.ml[168,5938+8]..[168,5938+39])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/extension.ml[168,5938+40]..[168,5938+49])
                                                Pexp_ident "registrar" (src/extension.ml[168,5938+40]..[168,5938+49])
                                            <arg>
                                            Nolabel
                                              expression (src/extension.ml[168,5938+50]..[168,5938+71])
                                                Pexp_construct "Context.T" (src/extension.ml[168,5938+51]..[168,5938+60])
                                                Some
                                                  expression (src/extension.ml[168,5938+61]..[168,5938+70])
                                                    Pexp_construct "Core_type" (src/extension.ml[168,5938+61]..[168,5938+70])
                                                    None
                                            <arg>
                                            Nolabel
                                              expression (src/extension.ml[168,5938+72]..[168,5938+76])
                                                Pexp_ident "name" (src/extension.ml[168,5938+72]..[168,5938+76])
                                          ]
                                      <case>
                                        pattern (src/extension.ml[169,6015+6]..[169,6015+23])
                                          Ppat_construct "Context.Core_type" (src/extension.ml[169,6015+6]..[169,6015+23])
                                          None
                                        expression (src/extension.ml[170,6042+8]..[170,6042+77])
                                          Pexp_apply
                                          expression (src/extension.ml[170,6042+8]..[170,6042+39])
                                            Pexp_ident "Name.Registrar.check_collisions" (src/extension.ml[170,6042+8]..[170,6042+39])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/extension.ml[170,6042+40]..[170,6042+49])
                                                Pexp_ident "registrar" (src/extension.ml[170,6042+40]..[170,6042+49])
                                            <arg>
                                            Nolabel
                                              expression (src/extension.ml[170,6042+50]..[170,6042+72])
                                                Pexp_construct "Context.T" (src/extension.ml[170,6042+51]..[170,6042+60])
                                                Some
                                                  expression (src/extension.ml[170,6042+61]..[170,6042+71])
                                                    Pexp_construct "Ppx_import" (src/extension.ml[170,6042+61]..[170,6042+71])
                                                    None
                                            <arg>
                                            Nolabel
                                              expression (src/extension.ml[170,6042+73]..[170,6042+77])
                                                Pexp_ident "name" (src/extension.ml[170,6042+73]..[170,6042+77])
                                          ]
                                      <case>
                                        pattern (src/extension.ml[171,6120+6]..[171,6120+7])
                                          Ppat_any
                                        expression (src/extension.ml[171,6120+11]..[171,6120+13])
                                          Pexp_construct "()" (src/extension.ml[171,6120+11]..[171,6120+13])
                                          None
                                    ]
                                  expression (src/extension.ml[172,6136+4]..[178,6336+5])
                                    Pexp_sequence
                                    expression (src/extension.ml[172,6136+4]..[172,6136+79])
                                      Pexp_apply
                                      expression (src/extension.ml[172,6136+4]..[172,6136+27])
                                        Pexp_ident "Name.Registrar.register" (src/extension.ml[172,6136+4]..[172,6136+27])
                                      [
                                        <arg>
                                        Labelled "kind"
                                          expression (src/extension.ml[172,6136+34]..[172,6136+44])
                                            Pexp_variant "Extension"
                                            None
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[172,6136+45]..[172,6136+54])
                                            Pexp_ident "registrar" (src/extension.ml[172,6136+45]..[172,6136+54])
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[172,6136+55]..[172,6136+74])
                                            Pexp_construct "Context.T" (src/extension.ml[172,6136+56]..[172,6136+65])
                                            Some
                                              expression (src/extension.ml[172,6136+66]..[172,6136+73])
                                                Pexp_ident "context" (src/extension.ml[172,6136+66]..[172,6136+73])
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[172,6136+75]..[172,6136+79])
                                            Pexp_ident "name" (src/extension.ml[172,6136+75]..[172,6136+79])
                                      ]
                                    expression (src/extension.ml[173,6217+4]..[178,6336+5])
                                      Pexp_record
                                      [
                                        "name" (src/extension.ml[174,6223+6]..[174,6223+10])
                                          expression (src/extension.ml[174,6223+13]..[174,6223+35])
                                            Pexp_apply
                                            expression (src/extension.ml[174,6223+13]..[174,6223+30])
                                              Pexp_ident "Name.Pattern.make" (src/extension.ml[174,6223+13]..[174,6223+30])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/extension.ml[174,6223+31]..[174,6223+35])
                                                  Pexp_ident "name" (src/extension.ml[174,6223+31]..[174,6223+35])
                                            ]
                                        "context" (src/extension.ml[175,6260+6]..[175,6260+13])
                                          expression (src/extension.ml[175,6260+6]..[175,6260+13]) ghost
                                            Pexp_ident "context" (src/extension.ml[175,6260+6]..[175,6260+13]) ghost
                                        "payload" (src/extension.ml[176,6275+6]..[176,6275+13])
                                          expression (src/extension.ml[176,6275+16]..[176,6275+43])
                                            Pexp_construct "Payload_parser" (src/extension.ml[176,6275+16]..[176,6275+30])
                                            Some
                                              expression (src/extension.ml[176,6275+31]..[176,6275+43])
                                                Pexp_tuple
                                                [
                                                  expression (src/extension.ml[176,6275+32]..[176,6275+39])
                                                    Pexp_ident "pattern" (src/extension.ml[176,6275+32]..[176,6275+39])
                                                  expression (src/extension.ml[176,6275+41]..[176,6275+42])
                                                    Pexp_ident "k" (src/extension.ml[176,6275+41]..[176,6275+42])
                                                ]
                                        "with_arg" (src/extension.ml[177,6320+6]..[177,6320+14])
                                          expression (src/extension.ml[177,6320+6]..[177,6320+14]) ghost
                                            Pexp_ident "with_arg" (src/extension.ml[177,6320+6]..[177,6320+14]) ghost
                                      ]
                                      None
                      core_type (src/extension.ml[157,5594+6]..[162,5724+21])
                        Ptyp_arrow
                        Labelled "with_arg"
                        core_type (src/extension.ml[157,5594+15]..[157,5594+19])
                          Ptyp_constr "bool" (src/extension.ml[157,5594+15]..[157,5594+19])
                          []
                        core_type (src/extension.ml[158,5617+6]..[162,5724+21])
                          Ptyp_arrow
                          Nolabel
                          core_type (src/extension.ml[158,5617+6]..[158,5617+12])
                            Ptyp_constr "string" (src/extension.ml[158,5617+6]..[158,5617+12])
                            []
                          core_type (src/extension.ml[159,5633+6]..[162,5724+21])
                            Ptyp_arrow
                            Nolabel
                            core_type (src/extension.ml[159,5633+6]..[159,5633+17])
                              Ptyp_constr "Context.t" (src/extension.ml[159,5633+8]..[159,5633+17])
                              [
                                core_type (src/extension.ml[159,5633+6]..[159,5633+7])
                                  Ptyp_constr "a" (src/extension.ml[159,5633+6]..[159,5633+7])
                                  []
                              ]
                            core_type (src/extension.ml[160,5654+6]..[162,5724+21])
                              Ptyp_arrow
                              Nolabel
                              core_type (src/extension.ml[160,5654+6]..[160,5654+43])
                                Ptyp_constr "Ast_pattern.t" (src/extension.ml[160,5654+30]..[160,5654+43])
                                [
                                  core_type (src/extension.ml[160,5654+7]..[160,5654+14])
                                    Ptyp_constr "payload" (src/extension.ml[160,5654+7]..[160,5654+14])
                                    []
                                  core_type (src/extension.ml[160,5654+16]..[160,5654+18])
                                    Ptyp_var b
                                  core_type (src/extension.ml[160,5654+20]..[160,5654+28])
                                    Ptyp_var payload
                                ]
                              core_type (src/extension.ml[161,5701+6]..[162,5724+21])
                                Ptyp_arrow
                                Nolabel
                                core_type (src/extension.ml[161,5701+6]..[161,5701+19])
                                  Ptyp_constr "Callback.t" (src/extension.ml[161,5701+9]..[161,5701+19])
                                  [
                                    core_type (src/extension.ml[161,5701+6]..[161,5701+8])
                                      Ptyp_var b
                                  ]
                                core_type (src/extension.ml[162,5724+6]..[162,5724+21])
                                  Ptyp_constr "t" (src/extension.ml[162,5724+20]..[162,5724+21])
                                  [
                                    core_type (src/extension.ml[162,5724+7]..[162,5724+8])
                                      Ptyp_constr "a" (src/extension.ml[162,5724+7]..[162,5724+8])
                                      []
                                    core_type (src/extension.ml[162,5724+10]..[162,5724+18])
                                      Ptyp_var payload
                                  ]
              ]
            structure_item (src/extension.ml[180,6343+2]..[212,7490+28])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/extension.ml[180,6343+6]..[180,6343+10])
                    Ppat_var "find" (src/extension.ml[180,6343+6]..[180,6343+10])
                  expression (src/extension.ml[180,6343+11]..[212,7490+28]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/extension.ml[180,6343+11]..[180,6343+13])
                      Ppat_var "ts" (src/extension.ml[180,6343+11]..[180,6343+13])
                    expression (src/extension.ml[180,6343+14]..[212,7490+28]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[180,6343+14]..[180,6343+31])
                        Ppat_constraint
                        pattern (src/extension.ml[180,6343+15]..[180,6343+18])
                          Ppat_var "ext" (src/extension.ml[180,6343+15]..[180,6343+18])
                        core_type (src/extension.ml[180,6343+21]..[180,6343+30])
                          Ptyp_constr "extension" (src/extension.ml[180,6343+21]..[180,6343+30])
                          []
                      expression (src/extension.ml[181,6377+4]..[212,7490+28])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/extension.ml[181,6377+8]..[181,6377+27])
                              Ppat_record Closed
                              [
                                "txt" (src/extension.ml[181,6377+10]..[181,6377+13])
                                  pattern (src/extension.ml[181,6377+16]..[181,6377+20])
                                    Ppat_var "name" (src/extension.ml[181,6377+16]..[181,6377+20])
                                "loc" (src/extension.ml[181,6377+22]..[181,6377+25]) ghost
                                  pattern (src/extension.ml[181,6377+22]..[181,6377+25])
                                    Ppat_var "loc" (src/extension.ml[181,6377+22]..[181,6377+25])
                              ]
                            expression (src/extension.ml[181,6377+30]..[181,6377+37])
                              Pexp_apply
                              expression (src/extension.ml[181,6377+30]..[181,6377+33])
                                Pexp_ident "fst" (src/extension.ml[181,6377+30]..[181,6377+33])
                              [
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[181,6377+34]..[181,6377+37])
                                    Pexp_ident "ext" (src/extension.ml[181,6377+34]..[181,6377+37])
                              ]
                        ]
                        expression (src/extension.ml[182,6418+4]..[212,7490+28])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/extension.ml[182,6418+8]..[182,6418+17])
                                Ppat_tuple
                                [
                                  pattern (src/extension.ml[182,6418+8]..[182,6418+12])
                                    Ppat_var "name" (src/extension.ml[182,6418+8]..[182,6418+12])
                                  pattern (src/extension.ml[182,6418+14]..[182,6418+17])
                                    Ppat_var "arg" (src/extension.ml[182,6418+14]..[182,6418+17])
                                ]
                              expression (src/extension.ml[182,6418+20]..[182,6418+40])
                                Pexp_apply
                                expression (src/extension.ml[182,6418+20]..[182,6418+35])
                                  Pexp_ident "Name.split_path" (src/extension.ml[182,6418+20]..[182,6418+35])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[182,6418+36]..[182,6418+40])
                                      Pexp_ident "name" (src/extension.ml[182,6418+36]..[182,6418+40])
                                ]
                          ]
                          expression (src/extension.ml[183,6462+4]..[212,7490+28])
                            Pexp_match
                            expression (src/extension.ml[183,6462+10]..[183,6462+71])
                              Pexp_apply
                              expression (src/extension.ml[183,6462+10]..[183,6462+21])
                                Pexp_ident "List.filter" (src/extension.ml[183,6462+10]..[183,6462+21])
                              [
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[183,6462+22]..[183,6462+24])
                                    Pexp_ident "ts" (src/extension.ml[183,6462+22]..[183,6462+24])
                                <arg>
                                Labelled "f"
                                  expression (src/extension.ml[183,6462+28]..[183,6462+71])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (src/extension.ml[183,6462+33]..[183,6462+34])
                                      Ppat_var "t" (src/extension.ml[183,6462+33]..[183,6462+34])
                                    expression (src/extension.ml[183,6462+38]..[183,6462+70])
                                      Pexp_apply
                                      expression (src/extension.ml[183,6462+38]..[183,6462+58])
                                        Pexp_ident "Name.Pattern.matches" (src/extension.ml[183,6462+38]..[183,6462+58])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[183,6462+59]..[183,6462+65])
                                            Pexp_field
                                            expression (src/extension.ml[183,6462+59]..[183,6462+60])
                                              Pexp_ident "t" (src/extension.ml[183,6462+59]..[183,6462+60])
                                            "name" (src/extension.ml[183,6462+61]..[183,6462+65])
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[183,6462+66]..[183,6462+70])
                                            Pexp_ident "name" (src/extension.ml[183,6462+66]..[183,6462+70])
                                      ]
                              ]
                            [
                              <case>
                                pattern (src/extension.ml[184,6539+6]..[184,6539+8])
                                  Ppat_construct "[]" (src/extension.ml[184,6539+6]..[184,6539+8])
                                  None
                                expression (src/extension.ml[184,6539+12]..[184,6539+19])
                                  Pexp_construct "Ok" (src/extension.ml[184,6539+12]..[184,6539+14])
                                  Some
                                    expression (src/extension.ml[184,6539+15]..[184,6539+19])
                                      Pexp_construct "None" (src/extension.ml[184,6539+15]..[184,6539+19])
                                      None
                              <case>
                                pattern (src/extension.ml[185,6559+6]..[185,6559+22])
                                  Ppat_alias "l" (src/extension.ml[185,6559+21]..[185,6559+22])
                                  pattern (src/extension.ml[185,6559+6]..[185,6559+17])
                                    Ppat_construct "::" (src/extension.ml[185,6559+8]..[185,6559+10])
                                    Some
                                      pattern (src/extension.ml[185,6559+6]..[185,6559+17]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (src/extension.ml[185,6559+6]..[185,6559+7])
                                            Ppat_any
                                          pattern (src/extension.ml[185,6559+11]..[185,6559+17])
                                            Ppat_construct "::" (src/extension.ml[185,6559+13]..[185,6559+15])
                                            Some
                                              pattern (src/extension.ml[185,6559+11]..[185,6559+17]) ghost
                                                Ppat_tuple
                                                [
                                                  pattern (src/extension.ml[185,6559+11]..[185,6559+12])
                                                    Ppat_any
                                                  pattern (src/extension.ml[185,6559+16]..[185,6559+17])
                                                    Ppat_any
                                                ]
                                        ]
                                expression (src/extension.ml[186,6585+8]..[190,6785+16])
                                  Pexp_construct "Error" (src/extension.ml[186,6585+8]..[186,6585+13])
                                  Some
                                    expression (src/extension.ml[187,6599+10]..[190,6785+16])
                                      Pexp_tuple
                                      [
                                        expression (src/extension.ml[187,6599+12]..[189,6714+69])
                                          Pexp_apply
                                          expression (src/extension.ml[187,6599+12]..[187,6599+34])
                                            Pexp_ident "Location.Error.createf" (src/extension.ml[187,6599+12]..[187,6599+34])
                                          [
                                            <arg>
                                            Labelled "loc"
                                              expression (src/extension.ml[187,6599+36]..[187,6599+39])
                                                Pexp_ident "loc" (src/extension.ml[187,6599+36]..[187,6599+39])
                                            <arg>
                                            Nolabel
                                              expression (src/extension.ml[187,6599+40]..[187,6599+75])
                                                Pexp_constant PConst_string("Multiple match for extensions: %s",(src/extension.ml[187,6599+41]..[187,6599+74]),None)
                                            <arg>
                                            Nolabel
                                              expression (src/extension.ml[188,6675+14]..[189,6714+69])
                                                Pexp_apply
                                                expression (src/extension.ml[188,6675+15]..[188,6675+28])
                                                  Pexp_ident "String.concat" (src/extension.ml[188,6675+15]..[188,6675+28])
                                                [
                                                  <arg>
                                                  Labelled "sep"
                                                    expression (src/extension.ml[188,6675+34]..[188,6675+38])
                                                      Pexp_constant PConst_string(", ",(src/extension.ml[188,6675+35]..[188,6675+37]),None)
                                                  <arg>
                                                  Nolabel
                                                    expression (src/extension.ml[189,6714+17]..[189,6714+68])
                                                      Pexp_apply
                                                      expression (src/extension.ml[189,6714+18]..[189,6714+26])
                                                        Pexp_ident "List.map" (src/extension.ml[189,6714+18]..[189,6714+26])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/extension.ml[189,6714+27]..[189,6714+28])
                                                            Pexp_ident "l" (src/extension.ml[189,6714+27]..[189,6714+28])
                                                        <arg>
                                                        Labelled "f"
                                                          expression (src/extension.ml[189,6714+32]..[189,6714+67])
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (src/extension.ml[189,6714+37]..[189,6714+38])
                                                              Ppat_var "t" (src/extension.ml[189,6714+37]..[189,6714+38])
                                                            expression (src/extension.ml[189,6714+42]..[189,6714+66])
                                                              Pexp_apply
                                                              expression (src/extension.ml[189,6714+42]..[189,6714+59])
                                                                Pexp_ident "Name.Pattern.name" (src/extension.ml[189,6714+42]..[189,6714+59])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/extension.ml[189,6714+60]..[189,6714+66])
                                                                    Pexp_field
                                                                    expression (src/extension.ml[189,6714+60]..[189,6714+61])
                                                                      Pexp_ident "t" (src/extension.ml[189,6714+60]..[189,6714+61])
                                                                    "name" (src/extension.ml[189,6714+62]..[189,6714+66])
                                                              ]
                                                      ]
                                                ]
                                          ]
                                        expression (src/extension.ml[190,6785+12]..[190,6785+14])
                                          Pexp_construct "[]" (src/extension.ml[190,6785+12]..[190,6785+14])
                                          None
                                      ]
                              <case>
                                pattern (src/extension.ml[191,6802+6]..[191,6802+11])
                                  Ppat_construct "::" (src/extension.ml[191,6802+8]..[191,6802+11]) ghost
                                  Some
                                    pattern (src/extension.ml[191,6802+8]..[191,6802+11]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (src/extension.ml[191,6802+8]..[191,6802+9])
                                          Ppat_var "t" (src/extension.ml[191,6802+8]..[191,6802+9])
                                        pattern (src/extension.ml[191,6802+10]..[191,6802+11]) ghost
                                          Ppat_construct "[]" (src/extension.ml[191,6802+10]..[191,6802+11]) ghost
                                          None
                                      ]
                                expression (src/extension.ml[192,6817+8]..[212,7490+28])
                                  Pexp_ifthenelse
                                  expression (src/extension.ml[192,6817+11]..[192,6817+49])
                                    Pexp_apply
                                    expression (src/extension.ml[192,6817+28]..[192,6817+30])
                                      Pexp_ident "&&" (src/extension.ml[192,6817+28]..[192,6817+30])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/extension.ml[192,6817+11]..[192,6817+27])
                                          Pexp_apply
                                          expression (src/extension.ml[192,6817+12]..[192,6817+15])
                                            Pexp_ident "not" (src/extension.ml[192,6817+12]..[192,6817+15])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/extension.ml[192,6817+16]..[192,6817+26])
                                                Pexp_field
                                                expression (src/extension.ml[192,6817+16]..[192,6817+17])
                                                  Pexp_ident "t" (src/extension.ml[192,6817+16]..[192,6817+17])
                                                "with_arg" (src/extension.ml[192,6817+18]..[192,6817+26])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (src/extension.ml[192,6817+31]..[192,6817+49])
                                          Pexp_apply
                                          expression (src/extension.ml[192,6817+31]..[192,6817+45])
                                            Pexp_ident "Option.is_some" (src/extension.ml[192,6817+31]..[192,6817+45])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/extension.ml[192,6817+46]..[192,6817+49])
                                                Pexp_ident "arg" (src/extension.ml[192,6817+46]..[192,6817+49])
                                          ]
                                    ]
                                  expression (src/extension.ml[193,6872+10]..[196,6998+18])
                                    Pexp_construct "Error" (src/extension.ml[193,6872+10]..[193,6872+15])
                                    Some
                                      expression (src/extension.ml[194,6888+12]..[196,6998+18])
                                        Pexp_tuple
                                        [
                                          expression (src/extension.ml[194,6888+14]..[195,6930+66])
                                            Pexp_apply
                                            expression (src/extension.ml[194,6888+14]..[194,6888+36])
                                              Pexp_ident "Location.Error.createf" (src/extension.ml[194,6888+14]..[194,6888+36])
                                            [
                                              <arg>
                                              Labelled "loc"
                                                expression (src/extension.ml[194,6888+38]..[194,6888+41])
                                                  Pexp_ident "loc" (src/extension.ml[194,6888+38]..[194,6888+41])
                                              <arg>
                                              Nolabel
                                                expression (src/extension.ml[195,6930+16]..[195,6930+61])
                                                  Pexp_constant PConst_string("Extension %s doesn't expect a path argument",(src/extension.ml[195,6930+17]..[195,6930+60]),None)
                                              <arg>
                                              Nolabel
                                                expression (src/extension.ml[195,6930+62]..[195,6930+66])
                                                  Pexp_ident "name" (src/extension.ml[195,6930+62]..[195,6930+66])
                                            ]
                                          expression (src/extension.ml[196,6998+14]..[196,6998+16])
                                            Pexp_construct "[]" (src/extension.ml[196,6998+14]..[196,6998+16])
                                            None
                                        ]
                                  Some
                                    expression (src/extension.ml[198,7030+10]..[212,7490+28])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/extension.ml[198,7030+14]..[198,7030+17])
                                            Ppat_var "arg" (src/extension.ml[198,7030+14]..[198,7030+17])
                                          expression (src/extension.ml[199,7050+12]..[210,7458+18])
                                            Pexp_apply
                                            expression (src/extension.ml[199,7050+12]..[199,7050+22])
                                              Pexp_ident "Option.map" (src/extension.ml[199,7050+12]..[199,7050+22])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/extension.ml[199,7050+23]..[199,7050+26])
                                                  Pexp_ident "arg" (src/extension.ml[199,7050+23]..[199,7050+26])
                                              <arg>
                                              Labelled "f"
                                                expression (src/extension.ml[199,7050+30]..[210,7458+18])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (src/extension.ml[199,7050+35]..[199,7050+36])
                                                    Ppat_var "s" (src/extension.ml[199,7050+35]..[199,7050+36])
                                                  expression (src/extension.ml[200,7090+16]..[210,7458+17])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (src/extension.ml[200,7090+20]..[200,7090+25])
                                                          Ppat_var "shift" (src/extension.ml[200,7090+20]..[200,7090+25])
                                                        expression (src/extension.ml[200,7090+28]..[200,7090+50])
                                                          Pexp_apply
                                                          expression (src/extension.ml[200,7090+47]..[200,7090+48])
                                                            Pexp_ident "+" (src/extension.ml[200,7090+47]..[200,7090+48])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/extension.ml[200,7090+28]..[200,7090+46])
                                                                Pexp_apply
                                                                expression (src/extension.ml[200,7090+28]..[200,7090+41])
                                                                  Pexp_ident "String.length" (src/extension.ml[200,7090+28]..[200,7090+41])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/extension.ml[200,7090+42]..[200,7090+46])
                                                                      Pexp_ident "name" (src/extension.ml[200,7090+42]..[200,7090+46])
                                                                ]
                                                            <arg>
                                                            Nolabel
                                                              expression (src/extension.ml[200,7090+49]..[200,7090+50])
                                                                Pexp_constant PConst_int (1,None)
                                                          ]
                                                    ]
                                                    expression (src/extension.ml[201,7144+16]..[210,7458+17])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (src/extension.ml[201,7144+20]..[201,7144+25])
                                                            Ppat_var "start" (src/extension.ml[201,7144+20]..[201,7144+25])
                                                          expression (src/extension.ml[201,7144+28]..[201,7144+41])
                                                            Pexp_field
                                                            expression (src/extension.ml[201,7144+28]..[201,7144+31])
                                                              Pexp_ident "loc" (src/extension.ml[201,7144+28]..[201,7144+31])
                                                            "loc_start" (src/extension.ml[201,7144+32]..[201,7144+41])
                                                      ]
                                                      expression (src/extension.ml[202,7189+16]..[210,7458+17])
                                                        Pexp_record
                                                        [
                                                          "txt" (src/extension.ml[203,7207+18]..[203,7207+21])
                                                            expression (src/extension.ml[203,7207+24]..[203,7207+41])
                                                              Pexp_apply
                                                              expression (src/extension.ml[203,7207+24]..[203,7207+39])
                                                                Pexp_ident "Longident.parse" (src/extension.ml[203,7207+24]..[203,7207+39])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/extension.ml[203,7207+40]..[203,7207+41])
                                                                    Pexp_ident "s" (src/extension.ml[203,7207+40]..[203,7207+41])
                                                              ]
                                                          "loc" (src/extension.ml[204,7250+18]..[204,7250+21])
                                                            expression (src/extension.ml[205,7274+20]..[209,7435+21])
                                                              Pexp_record
                                                              [
                                                                "loc_start" (src/extension.ml[207,7327+22]..[207,7327+31])
                                                                  expression (src/extension.ml[208,7361+24]..[208,7361+72])
                                                                    Pexp_record
                                                                    [
                                                                      "pos_cnum" (src/extension.ml[208,7361+37]..[208,7361+45])
expression (src/extension.ml[208,7361+48]..[208,7361+70])
  Pexp_apply
  expression (src/extension.ml[208,7361+63]..[208,7361+64])
    Pexp_ident "+" (src/extension.ml[208,7361+63]..[208,7361+64])
  [
    <arg>
    Nolabel
      expression (src/extension.ml[208,7361+48]..[208,7361+62])
        Pexp_field
        expression (src/extension.ml[208,7361+48]..[208,7361+53])
          Pexp_ident "start" (src/extension.ml[208,7361+48]..[208,7361+53])
        "pos_cnum" (src/extension.ml[208,7361+54]..[208,7361+62])
    <arg>
    Nolabel
      expression (src/extension.ml[208,7361+65]..[208,7361+70])
        Pexp_ident "shift" (src/extension.ml[208,7361+65]..[208,7361+70])
  ]
                                                                    ]
                                                                    Some
                                                                      expression (src/extension.ml[208,7361+26]..[208,7361+31])
Pexp_ident "start" (src/extension.ml[208,7361+26]..[208,7361+31])
                                                              ]
                                                              Some
                                                                expression (src/extension.ml[206,7296+22]..[206,7296+25])
                                                                  Pexp_ident "loc" (src/extension.ml[206,7296+22]..[206,7296+25])
                                                        ]
                                                        None
                                            ]
                                      ]
                                      expression (src/extension.ml[212,7490+10]..[212,7490+28])
                                        Pexp_construct "Ok" (src/extension.ml[212,7490+10]..[212,7490+12])
                                        Some
                                          expression (src/extension.ml[212,7490+13]..[212,7490+28])
                                            Pexp_construct "Some" (src/extension.ml[212,7490+14]..[212,7490+18])
                                            Some
                                              expression (src/extension.ml[212,7490+19]..[212,7490+27])
                                                Pexp_tuple
                                                [
                                                  expression (src/extension.ml[212,7490+20]..[212,7490+21])
                                                    Pexp_ident "t" (src/extension.ml[212,7490+20]..[212,7490+21])
                                                  expression (src/extension.ml[212,7490+23]..[212,7490+26])
                                                    Pexp_ident "arg" (src/extension.ml[212,7490+23]..[212,7490+26])
                                                ]
                            ]
              ]
          ]
  structure_item (src/extension.ml[215,7524+0]..[238,8232+3])
    Pstr_module
    "Expert" (src/extension.ml[215,7524+7]..[215,7524+13])
      module_expr (src/extension.ml[215,7524+16]..[238,8232+3])
        Pmod_structure
        [
          structure_item (src/extension.ml[216,7547+2]..[218,7621+6])
            Pstr_include            module_expr (src/extension.ml[216,7547+10]..[218,7621+6])
              Pmod_apply
              module_expr (src/extension.ml[216,7547+10]..[216,7547+14])
                Pmod_ident "Make" (src/extension.ml[216,7547+10]..[216,7547+14])
              module_expr (src/extension.ml[216,7547+16]..[218,7621+5])
                Pmod_structure
                [
                  structure_item (src/extension.ml[217,7570+4]..[217,7570+50])
                    Pstr_type Rec
                    [
                      type_declaration "t" (src/extension.ml[217,7570+12]..[217,7570+13]) (src/extension.ml[217,7570+4]..[217,7570+50])
                        ptype_params =
                          [
                            core_type (src/extension.ml[217,7570+9]..[217,7570+11])
                              Ptyp_var a
                          ]
                        ptype_cstrs =
                          []
                        ptype_kind =
                          Ptype_abstract
                        ptype_private = Public
                        ptype_manifest =
                          Some
                            core_type (src/extension.ml[217,7570+16]..[217,7570+50])
                              Ptyp_arrow
                              Labelled "arg"
                              core_type (src/extension.ml[217,7570+20]..[217,7570+44])
                                Ptyp_constr "option" (src/extension.ml[217,7570+38]..[217,7570+44])
                                [
                                  core_type (src/extension.ml[217,7570+20]..[217,7570+37])
                                    Ptyp_constr "Loc.t" (src/extension.ml[217,7570+32]..[217,7570+37])
                                    [
                                      core_type (src/extension.ml[217,7570+20]..[217,7570+31])
                                        Ptyp_constr "Longident.t" (src/extension.ml[217,7570+20]..[217,7570+31])
                                        []
                                    ]
                                ]
                              core_type (src/extension.ml[217,7570+48]..[217,7570+50])
                                Ptyp_var a
                    ]
                ]
          structure_item (src/extension.ml[220,7629+2]..[221,7675+42])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[220,7629+6]..[220,7629+27])
                  Ppat_var "declare_with_path_arg" (src/extension.ml[220,7629+6]..[220,7629+27])
                expression (src/extension.ml[220,7629+28]..[221,7675+42]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/extension.ml[220,7629+28]..[220,7629+32])
                    Ppat_var "name" (src/extension.ml[220,7629+28]..[220,7629+32])
                  expression (src/extension.ml[220,7629+33]..[221,7675+42]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/extension.ml[220,7629+33]..[220,7629+36])
                      Ppat_var "ctx" (src/extension.ml[220,7629+33]..[220,7629+36])
                    expression (src/extension.ml[220,7629+37]..[221,7675+42]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[220,7629+37]..[220,7629+41])
                        Ppat_var "patt" (src/extension.ml[220,7629+37]..[220,7629+41])
                      expression (src/extension.ml[220,7629+42]..[221,7675+42]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/extension.ml[220,7629+42]..[220,7629+43])
                          Ppat_var "f" (src/extension.ml[220,7629+42]..[220,7629+43])
                        expression (src/extension.ml[221,7675+4]..[221,7675+42])
                          Pexp_apply
                          expression (src/extension.ml[221,7675+4]..[221,7675+11])
                            Pexp_ident "declare" (src/extension.ml[221,7675+4]..[221,7675+11])
                          [
                            <arg>
                            Labelled "with_arg"
                              expression (src/extension.ml[221,7675+22]..[221,7675+26])
                                Pexp_construct "true" (src/extension.ml[221,7675+22]..[221,7675+26])
                                None
                            <arg>
                            Nolabel
                              expression (src/extension.ml[221,7675+27]..[221,7675+31])
                                Pexp_ident "name" (src/extension.ml[221,7675+27]..[221,7675+31])
                            <arg>
                            Nolabel
                              expression (src/extension.ml[221,7675+32]..[221,7675+35])
                                Pexp_ident "ctx" (src/extension.ml[221,7675+32]..[221,7675+35])
                            <arg>
                            Nolabel
                              expression (src/extension.ml[221,7675+36]..[221,7675+40])
                                Pexp_ident "patt" (src/extension.ml[221,7675+36]..[221,7675+40])
                            <arg>
                            Nolabel
                              expression (src/extension.ml[221,7675+41]..[221,7675+42])
                                Pexp_ident "f" (src/extension.ml[221,7675+41]..[221,7675+42])
                          ]
            ]
          structure_item (src/extension.ml[223,7719+2]..[224,7751+59])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[223,7719+6]..[223,7719+13])
                  Ppat_var "declare" (src/extension.ml[223,7719+6]..[223,7719+13])
                expression (src/extension.ml[223,7719+14]..[224,7751+59]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/extension.ml[223,7719+14]..[223,7719+18])
                    Ppat_var "name" (src/extension.ml[223,7719+14]..[223,7719+18])
                  expression (src/extension.ml[223,7719+19]..[224,7751+59]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/extension.ml[223,7719+19]..[223,7719+22])
                      Ppat_var "ctx" (src/extension.ml[223,7719+19]..[223,7719+22])
                    expression (src/extension.ml[223,7719+23]..[224,7751+59]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[223,7719+23]..[223,7719+27])
                        Ppat_var "patt" (src/extension.ml[223,7719+23]..[223,7719+27])
                      expression (src/extension.ml[223,7719+28]..[224,7751+59]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/extension.ml[223,7719+28]..[223,7719+29])
                          Ppat_var "f" (src/extension.ml[223,7719+28]..[223,7719+29])
                        expression (src/extension.ml[224,7751+4]..[224,7751+59])
                          Pexp_apply
                          expression (src/extension.ml[224,7751+4]..[224,7751+11])
                            Pexp_ident "declare" (src/extension.ml[224,7751+4]..[224,7751+11])
                          [
                            <arg>
                            Labelled "with_arg"
                              expression (src/extension.ml[224,7751+22]..[224,7751+27])
                                Pexp_construct "false" (src/extension.ml[224,7751+22]..[224,7751+27])
                                None
                            <arg>
                            Nolabel
                              expression (src/extension.ml[224,7751+28]..[224,7751+32])
                                Pexp_ident "name" (src/extension.ml[224,7751+28]..[224,7751+32])
                            <arg>
                            Nolabel
                              expression (src/extension.ml[224,7751+33]..[224,7751+36])
                                Pexp_ident "ctx" (src/extension.ml[224,7751+33]..[224,7751+36])
                            <arg>
                            Nolabel
                              expression (src/extension.ml[224,7751+37]..[224,7751+41])
                                Pexp_ident "patt" (src/extension.ml[224,7751+37]..[224,7751+41])
                            <arg>
                            Nolabel
                              expression (src/extension.ml[224,7751+42]..[224,7751+59])
                                Pexp_fun
                                Labelled "arg"
                                None
                                pattern (src/extension.ml[224,7751+52]..[224,7751+53])
                                  Ppat_any
                                expression (src/extension.ml[224,7751+57]..[224,7751+58])
                                  Pexp_ident "f" (src/extension.ml[224,7751+57]..[224,7751+58])
                          ]
            ]
          structure_item (src/extension.ml[226,7812+2]..[233,8081+20])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[226,7812+6]..[226,7812+17])
                  Ppat_var "convert_res" (src/extension.ml[226,7812+6]..[226,7812+17])
                expression (src/extension.ml[226,7812+18]..[233,8081+20]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/extension.ml[226,7812+18]..[226,7812+20])
                    Ppat_var "ts" (src/extension.ml[226,7812+18]..[226,7812+20])
                  expression (src/extension.ml[226,7812+21]..[233,8081+20]) ghost
                    Pexp_fun
                    Labelled "loc"
                    None
                    pattern (src/extension.ml[226,7812+22]..[226,7812+25])
                      Ppat_var "loc" (src/extension.ml[226,7812+22]..[226,7812+25])
                    expression (src/extension.ml[226,7812+26]..[233,8081+20]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[226,7812+26]..[226,7812+29])
                        Ppat_var "ext" (src/extension.ml[226,7812+26]..[226,7812+29])
                      expression (src/extension.ml[227,7844+4]..[233,8081+20])
                        Pexp_open Fresh
                        module_expr (src/extension.ml[227,7844+13]..[227,7844+19])
                          Pmod_ident "Result" (src/extension.ml[227,7844+13]..[227,7844+19])
                        expression (src/extension.ml[228,7867+4]..[233,8081+20])
                          Pexp_apply
                          expression (src/extension.ml[228,7867+16]..[228,7867+19])
                            Pexp_ident ">>=" (src/extension.ml[228,7867+16]..[228,7867+19])
                          [
                            <arg>
                            Nolabel
                              expression (src/extension.ml[228,7867+4]..[228,7867+15])
                                Pexp_apply
                                expression (src/extension.ml[228,7867+4]..[228,7867+8])
                                  Pexp_ident "find" (src/extension.ml[228,7867+4]..[228,7867+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[228,7867+9]..[228,7867+11])
                                      Pexp_ident "ts" (src/extension.ml[228,7867+9]..[228,7867+11])
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[228,7867+12]..[228,7867+15])
                                      Pexp_ident "ext" (src/extension.ml[228,7867+12]..[228,7867+15])
                                ]
                            <arg>
                            Nolabel
                              expression (src/extension.ml[228,7867+20]..[233,8081+20])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/extension.ml[228,7867+24]..[228,7867+25])
                                  Ppat_var "r" (src/extension.ml[228,7867+24]..[228,7867+25])
                                expression (src/extension.ml[229,7896+4]..[233,8081+20])
                                  Pexp_match
                                  expression (src/extension.ml[229,7896+10]..[229,7896+11])
                                    Pexp_ident "r" (src/extension.ml[229,7896+10]..[229,7896+11])
                                  [
                                    <case>
                                      pattern (src/extension.ml[230,7913+6]..[230,7913+10])
                                        Ppat_construct "None" (src/extension.ml[230,7913+6]..[230,7913+10])
                                        None
                                      expression (src/extension.ml[230,7913+14]..[230,7913+21])
                                        Pexp_construct "Ok" (src/extension.ml[230,7913+14]..[230,7913+16])
                                        Some
                                          expression (src/extension.ml[230,7913+17]..[230,7913+21])
                                            Pexp_construct "None" (src/extension.ml[230,7913+17]..[230,7913+21])
                                            None
                                    <case>
                                      pattern (src/extension.ml[231,7935+6]..[231,7935+62])
                                        Ppat_construct "Some" (src/extension.ml[231,7935+6]..[231,7935+10])
                                        Some
                                          pattern (src/extension.ml[231,7935+11]..[231,7935+62])
                                            Ppat_tuple
                                            [
                                              pattern (src/extension.ml[231,7935+12]..[231,7935+56])
                                                Ppat_record Open
                                                [
                                                  "payload" (src/extension.ml[231,7935+14]..[231,7935+21])
                                                    pattern (src/extension.ml[231,7935+24]..[231,7935+51])
                                                      Ppat_construct "Payload_parser" (src/extension.ml[231,7935+24]..[231,7935+38])
                                                      Some
                                                        pattern (src/extension.ml[231,7935+39]..[231,7935+51])
                                                          Ppat_tuple
                                                          [
                                                            pattern (src/extension.ml[231,7935+40]..[231,7935+47])
                                                              Ppat_var "pattern" (src/extension.ml[231,7935+40]..[231,7935+47])
                                                            pattern (src/extension.ml[231,7935+49]..[231,7935+50])
                                                              Ppat_var "f" (src/extension.ml[231,7935+49]..[231,7935+50])
                                                          ]
                                                ]
                                              pattern (src/extension.ml[231,7935+58]..[231,7935+61])
                                                Ppat_var "arg" (src/extension.ml[231,7935+58]..[231,7935+61])
                                            ]
                                      expression (src/extension.ml[232,8001+8]..[233,8081+20])
                                        Pexp_apply
                                        expression (src/extension.ml[232,8001+61]..[232,8001+64])
                                          Pexp_ident ">>|" (src/extension.ml[232,8001+61]..[232,8001+64])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/extension.ml[232,8001+8]..[232,8001+60])
                                              Pexp_apply
                                              expression (src/extension.ml[232,8001+8]..[232,8001+29])
                                                Pexp_ident "Ast_pattern.parse_res" (src/extension.ml[232,8001+8]..[232,8001+29])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/extension.ml[232,8001+30]..[232,8001+37])
                                                    Pexp_ident "pattern" (src/extension.ml[232,8001+30]..[232,8001+37])
                                                <arg>
                                                Nolabel
                                                  expression (src/extension.ml[232,8001+38]..[232,8001+41])
                                                    Pexp_ident "loc" (src/extension.ml[232,8001+38]..[232,8001+41])
                                                <arg>
                                                Nolabel
                                                  expression (src/extension.ml[232,8001+42]..[232,8001+51])
                                                    Pexp_apply
                                                    expression (src/extension.ml[232,8001+43]..[232,8001+46])
                                                      Pexp_ident "snd" (src/extension.ml[232,8001+43]..[232,8001+46])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/extension.ml[232,8001+47]..[232,8001+50])
                                                          Pexp_ident "ext" (src/extension.ml[232,8001+47]..[232,8001+50])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (src/extension.ml[232,8001+52]..[232,8001+60])
                                                    Pexp_apply
                                                    expression (src/extension.ml[232,8001+53]..[232,8001+54])
                                                      Pexp_ident "f" (src/extension.ml[232,8001+53]..[232,8001+54])
                                                    [
                                                      <arg>
                                                      Labelled "arg"
                                                        expression (src/extension.ml[232,8001+56]..[232,8001+59])
                                                          Pexp_ident "arg" (src/extension.ml[232,8001+56]..[232,8001+59])
                                                    ]
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (src/extension.ml[232,8001+65]..[233,8081+20])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (src/extension.ml[232,8001+69]..[232,8001+76])
                                                Ppat_var "payload" (src/extension.ml[232,8001+69]..[232,8001+76])
                                              expression (src/extension.ml[233,8081+8]..[233,8081+20])
                                                Pexp_construct "Some" (src/extension.ml[233,8081+8]..[233,8081+12])
                                                Some
                                                  expression (src/extension.ml[233,8081+13]..[233,8081+20])
                                                    Pexp_ident "payload" (src/extension.ml[233,8081+13]..[233,8081+20])
                                        ]
                                  ]
                          ]
            ]
          structure_item (src/extension.ml[235,8103+2]..[237,8159+72])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[235,8103+6]..[235,8103+13])
                  Ppat_var "convert" (src/extension.ml[235,8103+6]..[235,8103+13])
                expression (src/extension.ml[235,8103+14]..[237,8159+72]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/extension.ml[235,8103+14]..[235,8103+16])
                    Ppat_var "ts" (src/extension.ml[235,8103+14]..[235,8103+16])
                  expression (src/extension.ml[235,8103+17]..[237,8159+72]) ghost
                    Pexp_fun
                    Labelled "loc"
                    None
                    pattern (src/extension.ml[235,8103+18]..[235,8103+21])
                      Ppat_var "loc" (src/extension.ml[235,8103+18]..[235,8103+21])
                    expression (src/extension.ml[235,8103+22]..[237,8159+72]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[235,8103+22]..[235,8103+25])
                        Ppat_var "ext" (src/extension.ml[235,8103+22]..[235,8103+25])
                      expression (src/extension.ml[236,8131+4]..[237,8159+72])
                        Pexp_apply
                        expression (src/extension.ml[237,8159+4]..[237,8159+6])
                          Pexp_ident "|>" (src/extension.ml[237,8159+4]..[237,8159+6])
                        [
                          <arg>
                          Nolabel
                            expression (src/extension.ml[236,8131+4]..[236,8131+27])
                              Pexp_apply
                              expression (src/extension.ml[236,8131+4]..[236,8131+15])
                                Pexp_ident "convert_res" (src/extension.ml[236,8131+4]..[236,8131+15])
                              [
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[236,8131+16]..[236,8131+18])
                                    Pexp_ident "ts" (src/extension.ml[236,8131+16]..[236,8131+18])
                                <arg>
                                Labelled "loc"
                                  expression (src/extension.ml[236,8131+20]..[236,8131+23])
                                    Pexp_ident "loc" (src/extension.ml[236,8131+20]..[236,8131+23])
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[236,8131+24]..[236,8131+27])
                                    Pexp_ident "ext" (src/extension.ml[236,8131+24]..[236,8131+27])
                              ]
                          <arg>
                          Nolabel
                            expression (src/extension.ml[237,8159+7]..[237,8159+72])
                              Pexp_apply
                              expression (src/extension.ml[237,8159+7]..[237,8159+26])
                                Pexp_ident "Result.handle_error" (src/extension.ml[237,8159+7]..[237,8159+26])
                              [
                                <arg>
                                Labelled "f"
                                  expression (src/extension.ml[237,8159+30]..[237,8159+72])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (src/extension.ml[237,8159+35]..[237,8159+43])
                                      Ppat_tuple
                                      [
                                        pattern (src/extension.ml[237,8159+36]..[237,8159+39])
                                          Ppat_var "err" (src/extension.ml[237,8159+36]..[237,8159+39])
                                        pattern (src/extension.ml[237,8159+41]..[237,8159+42])
                                          Ppat_any
                                      ]
                                    expression (src/extension.ml[237,8159+47]..[237,8159+71])
                                      Pexp_apply
                                      expression (src/extension.ml[237,8159+47]..[237,8159+67])
                                        Pexp_ident "Location.Error.raise" (src/extension.ml[237,8159+47]..[237,8159+67])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[237,8159+68]..[237,8159+71])
                                            Pexp_ident "err" (src/extension.ml[237,8159+68]..[237,8159+71])
                                      ]
                              ]
                        ]
            ]
        ]
  structure_item (src/extension.ml[240,8237+0]..[243,8352+4])
    Pstr_module
    "M" (src/extension.ml[240,8237+7]..[240,8237+8])
      module_expr (src/extension.ml[240,8237+11]..[243,8352+4])
        Pmod_apply
        module_expr (src/extension.ml[240,8237+11]..[240,8237+15])
          Pmod_ident "Make" (src/extension.ml[240,8237+11]..[240,8237+15])
        module_expr (src/extension.ml[240,8237+17]..[243,8352+3])
          Pmod_structure
          [
            structure_item (src/extension.ml[241,8261+2]..[242,8275+76])
              Pstr_type Rec
              [
                type_declaration "t" (src/extension.ml[241,8261+10]..[241,8261+11]) (src/extension.ml[241,8261+2]..[242,8275+76])
                  ptype_params =
                    [
                      core_type (src/extension.ml[241,8261+7]..[241,8261+9])
                        Ptyp_var a
                    ]
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (src/extension.ml[242,8275+4]..[242,8275+76])
                        Ptyp_arrow
                        Labelled "ctxt"
                        core_type (src/extension.ml[242,8275+9]..[242,8275+38])
                          Ptyp_constr "Expansion_context.Extension.t" (src/extension.ml[242,8275+9]..[242,8275+38])
                          []
                        core_type (src/extension.ml[242,8275+42]..[242,8275+76])
                          Ptyp_arrow
                          Labelled "arg"
                          core_type (src/extension.ml[242,8275+46]..[242,8275+70])
                            Ptyp_constr "option" (src/extension.ml[242,8275+64]..[242,8275+70])
                            [
                              core_type (src/extension.ml[242,8275+46]..[242,8275+63])
                                Ptyp_constr "Loc.t" (src/extension.ml[242,8275+58]..[242,8275+63])
                                [
                                  core_type (src/extension.ml[242,8275+46]..[242,8275+57])
                                    Ptyp_constr "Longident.t" (src/extension.ml[242,8275+46]..[242,8275+57])
                                    []
                                ]
                            ]
                          core_type (src/extension.ml[242,8275+74]..[242,8275+76])
                            Ptyp_var a
              ]
          ]
  structure_item (src/extension.ml[245,8358+0]..[245,8358+58])
    Pstr_type Rec
    [
      type_declaration "expander_result" (src/extension.ml[245,8358+8]..[245,8358+23]) (src/extension.ml[245,8358+0]..[245,8358+58])
        ptype_params =
          [
            core_type (src/extension.ml[245,8358+5]..[245,8358+7])
              Ptyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (src/extension.ml[245,8358+26]..[245,8358+38])
                "Simple" (src/extension.ml[245,8358+26]..[245,8358+32])
                [
                  core_type (src/extension.ml[245,8358+36]..[245,8358+38])
                    Ptyp_var a
                ]
                None
              (src/extension.ml[245,8358+39]..[245,8358+58])
                "Inline" (src/extension.ml[245,8358+41]..[245,8358+47])
                [
                  core_type (src/extension.ml[245,8358+51]..[245,8358+58])
                    Ptyp_constr "list" (src/extension.ml[245,8358+54]..[245,8358+58])
                    [
                      core_type (src/extension.ml[245,8358+51]..[245,8358+53])
                        Ptyp_var a
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (src/extension.ml[247,8418+0]..[281,9692+3])
    Pstr_module
    "For_context" (src/extension.ml[247,8418+7]..[247,8418+18])
      module_expr (src/extension.ml[247,8418+21]..[281,9692+3])
        Pmod_structure
        [
          structure_item (src/extension.ml[248,8446+2]..[248,8446+42])
            Pstr_type Rec
            [
              type_declaration "t" (src/extension.ml[248,8446+10]..[248,8446+11]) (src/extension.ml[248,8446+2]..[248,8446+42])
                ptype_params =
                  [
                    core_type (src/extension.ml[248,8446+7]..[248,8446+9])
                      Ptyp_var a
                  ]
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/extension.ml[248,8446+14]..[248,8446+42])
                      Ptyp_constr "M.t" (src/extension.ml[248,8446+39]..[248,8446+42])
                      [
                        core_type (src/extension.ml[248,8446+15]..[248,8446+17])
                          Ptyp_var a
                        core_type (src/extension.ml[248,8446+19]..[248,8446+37])
                          Ptyp_constr "expander_result" (src/extension.ml[248,8446+22]..[248,8446+37])
                          [
                            core_type (src/extension.ml[248,8446+19]..[248,8446+21])
                              Ptyp_var a
                          ]
                      ]
            ]
          structure_item (src/extension.ml[250,8490+2]..[261,8914+51])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[250,8490+6]..[250,8490+17])
                  Ppat_var "convert_res" (src/extension.ml[250,8490+6]..[250,8490+17])
                expression (src/extension.ml[250,8490+18]..[261,8914+51]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/extension.ml[250,8490+18]..[250,8490+20])
                    Ppat_var "ts" (src/extension.ml[250,8490+18]..[250,8490+20])
                  expression (src/extension.ml[250,8490+21]..[261,8914+51]) ghost
                    Pexp_fun
                    Labelled "ctxt"
                    None
                    pattern (src/extension.ml[250,8490+22]..[250,8490+26])
                      Ppat_var "ctxt" (src/extension.ml[250,8490+22]..[250,8490+26])
                    expression (src/extension.ml[250,8490+27]..[261,8914+51]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[250,8490+27]..[250,8490+30])
                        Ppat_var "ext" (src/extension.ml[250,8490+27]..[250,8490+30])
                      expression (src/extension.ml[251,8523+4]..[261,8914+51])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/extension.ml[251,8523+8]..[251,8523+11])
                              Ppat_var "loc" (src/extension.ml[251,8523+8]..[251,8523+11])
                            expression (src/extension.ml[251,8523+14]..[251,8523+66])
                              Pexp_apply
                              expression (src/extension.ml[251,8523+14]..[251,8523+61])
                                Pexp_ident "Expansion_context.Extension.extension_point_loc" (src/extension.ml[251,8523+14]..[251,8523+61])
                              [
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[251,8523+62]..[251,8523+66])
                                    Pexp_ident "ctxt" (src/extension.ml[251,8523+62]..[251,8523+66])
                              ]
                        ]
                        expression (src/extension.ml[252,8593+4]..[261,8914+51])
                          Pexp_open Fresh
                          module_expr (src/extension.ml[252,8593+13]..[252,8593+19])
                            Pmod_ident "Result" (src/extension.ml[252,8593+13]..[252,8593+19])
                          expression (src/extension.ml[253,8616+4]..[261,8914+51])
                            Pexp_apply
                            expression (src/extension.ml[253,8616+18]..[253,8616+21])
                              Pexp_ident ">>=" (src/extension.ml[253,8616+18]..[253,8616+21])
                            [
                              <arg>
                              Nolabel
                                expression (src/extension.ml[253,8616+4]..[253,8616+17])
                                  Pexp_apply
                                  expression (src/extension.ml[253,8616+4]..[253,8616+10])
                                    Pexp_ident "M.find" (src/extension.ml[253,8616+4]..[253,8616+10])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/extension.ml[253,8616+11]..[253,8616+13])
                                        Pexp_ident "ts" (src/extension.ml[253,8616+11]..[253,8616+13])
                                    <arg>
                                    Nolabel
                                      expression (src/extension.ml[253,8616+14]..[253,8616+17])
                                        Pexp_ident "ext" (src/extension.ml[253,8616+14]..[253,8616+17])
                                  ]
                              <arg>
                              Nolabel
                                expression (src/extension.ml[253,8616+22]..[261,8914+51])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/extension.ml[253,8616+26]..[253,8616+31])
                                    Ppat_var "found" (src/extension.ml[253,8616+26]..[253,8616+31])
                                  expression (src/extension.ml[254,8651+4]..[261,8914+51])
                                    Pexp_match
                                    expression (src/extension.ml[254,8651+10]..[254,8651+15])
                                      Pexp_ident "found" (src/extension.ml[254,8651+10]..[254,8651+15])
                                    [
                                      <case>
                                        pattern (src/extension.ml[255,8672+6]..[255,8672+10])
                                          Ppat_construct "None" (src/extension.ml[255,8672+6]..[255,8672+10])
                                          None
                                        expression (src/extension.ml[255,8672+14]..[255,8672+21])
                                          Pexp_construct "Ok" (src/extension.ml[255,8672+14]..[255,8672+16])
                                          Some
                                            expression (src/extension.ml[255,8672+17]..[255,8672+21])
                                              Pexp_construct "None" (src/extension.ml[255,8672+17]..[255,8672+21])
                                              None
                                      <case>
                                        pattern (src/extension.ml[256,8694+6]..[256,8694+64])
                                          Ppat_construct "Some" (src/extension.ml[256,8694+6]..[256,8694+10])
                                          Some
                                            pattern (src/extension.ml[256,8694+11]..[256,8694+64])
                                              Ppat_tuple
                                              [
                                                pattern (src/extension.ml[256,8694+12]..[256,8694+58])
                                                  Ppat_record Open
                                                  [
                                                    "payload" (src/extension.ml[256,8694+14]..[256,8694+21])
                                                      pattern (src/extension.ml[256,8694+24]..[256,8694+53])
                                                        Ppat_construct "M.Payload_parser" (src/extension.ml[256,8694+24]..[256,8694+40])
                                                        Some
                                                          pattern (src/extension.ml[256,8694+41]..[256,8694+53])
                                                            Ppat_tuple
                                                            [
                                                              pattern (src/extension.ml[256,8694+42]..[256,8694+49])
                                                                Ppat_var "pattern" (src/extension.ml[256,8694+42]..[256,8694+49])
                                                              pattern (src/extension.ml[256,8694+51]..[256,8694+52])
                                                                Ppat_var "f" (src/extension.ml[256,8694+51]..[256,8694+52])
                                                            ]
                                                  ]
                                                pattern (src/extension.ml[256,8694+60]..[256,8694+63])
                                                  Ppat_var "arg" (src/extension.ml[256,8694+60]..[256,8694+63])
                                              ]
                                        expression (src/extension.ml[256,8694+68]..[261,8914+51])
                                          Pexp_apply
                                          expression (src/extension.ml[258,8831+8]..[258,8831+11])
                                            Pexp_ident ">>|" (src/extension.ml[258,8831+8]..[258,8831+11])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/extension.ml[257,8764+8]..[257,8764+66])
                                                Pexp_apply
                                                expression (src/extension.ml[257,8764+8]..[257,8764+29])
                                                  Pexp_ident "Ast_pattern.parse_res" (src/extension.ml[257,8764+8]..[257,8764+29])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/extension.ml[257,8764+30]..[257,8764+37])
                                                      Pexp_ident "pattern" (src/extension.ml[257,8764+30]..[257,8764+37])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/extension.ml[257,8764+38]..[257,8764+41])
                                                      Pexp_ident "loc" (src/extension.ml[257,8764+38]..[257,8764+41])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/extension.ml[257,8764+42]..[257,8764+51])
                                                      Pexp_apply
                                                      expression (src/extension.ml[257,8764+43]..[257,8764+46])
                                                        Pexp_ident "snd" (src/extension.ml[257,8764+43]..[257,8764+46])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/extension.ml[257,8764+47]..[257,8764+50])
                                                            Pexp_ident "ext" (src/extension.ml[257,8764+47]..[257,8764+50])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (src/extension.ml[257,8764+52]..[257,8764+66])
                                                      Pexp_apply
                                                      expression (src/extension.ml[257,8764+53]..[257,8764+54])
                                                        Pexp_ident "f" (src/extension.ml[257,8764+53]..[257,8764+54])
                                                      [
                                                        <arg>
                                                        Labelled "ctxt"
                                                          expression (src/extension.ml[257,8764+56]..[257,8764+60])
                                                            Pexp_ident "ctxt" (src/extension.ml[257,8764+56]..[257,8764+60])
                                                        <arg>
                                                        Labelled "arg"
                                                          expression (src/extension.ml[257,8764+62]..[257,8764+65])
                                                            Pexp_ident "arg" (src/extension.ml[257,8764+62]..[257,8764+65])
                                                      ]
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (src/extension.ml[258,8831+12]..[261,8914+50])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (src/extension.ml[258,8831+16]..[258,8831+23])
                                                  Ppat_var "payload" (src/extension.ml[258,8831+16]..[258,8831+23])
                                                expression (src/extension.ml[259,8858+8]..[261,8914+50])
                                                  Pexp_match
                                                  expression (src/extension.ml[259,8858+14]..[259,8858+21])
                                                    Pexp_ident "payload" (src/extension.ml[259,8858+14]..[259,8858+21])
                                                  [
                                                    <case>
                                                      pattern (src/extension.ml[260,8885+10]..[260,8885+18])
                                                        Ppat_construct "Simple" (src/extension.ml[260,8885+10]..[260,8885+16])
                                                        Some
                                                          pattern (src/extension.ml[260,8885+17]..[260,8885+18])
                                                            Ppat_var "x" (src/extension.ml[260,8885+17]..[260,8885+18])
                                                      expression (src/extension.ml[260,8885+22]..[260,8885+28])
                                                        Pexp_construct "Some" (src/extension.ml[260,8885+22]..[260,8885+26])
                                                        Some
                                                          expression (src/extension.ml[260,8885+27]..[260,8885+28])
                                                            Pexp_ident "x" (src/extension.ml[260,8885+27]..[260,8885+28])
                                                    <case>
                                                      pattern (src/extension.ml[261,8914+10]..[261,8914+18])
                                                        Ppat_construct "Inline" (src/extension.ml[261,8914+10]..[261,8914+16])
                                                        Some
                                                          pattern (src/extension.ml[261,8914+17]..[261,8914+18])
                                                            Ppat_any
                                                      expression (src/extension.ml[261,8914+22]..[261,8914+50])
                                                        Pexp_apply
                                                        expression (src/extension.ml[261,8914+22]..[261,8914+30])
                                                          Pexp_ident "failwith" (src/extension.ml[261,8914+22]..[261,8914+30])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/extension.ml[261,8914+31]..[261,8914+50])
                                                              Pexp_constant PConst_string("Extension.convert",(src/extension.ml[261,8914+32]..[261,8914+49]),None)
                                                        ]
                                                  ]
                                          ]
                                    ]
                            ]
            ]
          structure_item (src/extension.ml[263,8967+2]..[265,9025+72])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[263,8967+6]..[263,8967+13])
                  Ppat_var "convert" (src/extension.ml[263,8967+6]..[263,8967+13])
                expression (src/extension.ml[263,8967+14]..[265,9025+72]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/extension.ml[263,8967+14]..[263,8967+16])
                    Ppat_var "ts" (src/extension.ml[263,8967+14]..[263,8967+16])
                  expression (src/extension.ml[263,8967+17]..[265,9025+72]) ghost
                    Pexp_fun
                    Labelled "ctxt"
                    None
                    pattern (src/extension.ml[263,8967+18]..[263,8967+22])
                      Ppat_var "ctxt" (src/extension.ml[263,8967+18]..[263,8967+22])
                    expression (src/extension.ml[263,8967+23]..[265,9025+72]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[263,8967+23]..[263,8967+26])
                        Ppat_var "ext" (src/extension.ml[263,8967+23]..[263,8967+26])
                      expression (src/extension.ml[264,8996+4]..[265,9025+72])
                        Pexp_apply
                        expression (src/extension.ml[265,9025+4]..[265,9025+6])
                          Pexp_ident "|>" (src/extension.ml[265,9025+4]..[265,9025+6])
                        [
                          <arg>
                          Nolabel
                            expression (src/extension.ml[264,8996+4]..[264,8996+28])
                              Pexp_apply
                              expression (src/extension.ml[264,8996+4]..[264,8996+15])
                                Pexp_ident "convert_res" (src/extension.ml[264,8996+4]..[264,8996+15])
                              [
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[264,8996+16]..[264,8996+18])
                                    Pexp_ident "ts" (src/extension.ml[264,8996+16]..[264,8996+18])
                                <arg>
                                Labelled "ctxt"
                                  expression (src/extension.ml[264,8996+20]..[264,8996+24])
                                    Pexp_ident "ctxt" (src/extension.ml[264,8996+20]..[264,8996+24])
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[264,8996+25]..[264,8996+28])
                                    Pexp_ident "ext" (src/extension.ml[264,8996+25]..[264,8996+28])
                              ]
                          <arg>
                          Nolabel
                            expression (src/extension.ml[265,9025+7]..[265,9025+72])
                              Pexp_apply
                              expression (src/extension.ml[265,9025+7]..[265,9025+26])
                                Pexp_ident "Result.handle_error" (src/extension.ml[265,9025+7]..[265,9025+26])
                              [
                                <arg>
                                Labelled "f"
                                  expression (src/extension.ml[265,9025+30]..[265,9025+72])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (src/extension.ml[265,9025+35]..[265,9025+43])
                                      Ppat_tuple
                                      [
                                        pattern (src/extension.ml[265,9025+36]..[265,9025+39])
                                          Ppat_var "err" (src/extension.ml[265,9025+36]..[265,9025+39])
                                        pattern (src/extension.ml[265,9025+41]..[265,9025+42])
                                          Ppat_any
                                      ]
                                    expression (src/extension.ml[265,9025+47]..[265,9025+71])
                                      Pexp_apply
                                      expression (src/extension.ml[265,9025+47]..[265,9025+67])
                                        Pexp_ident "Location.Error.raise" (src/extension.ml[265,9025+47]..[265,9025+67])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[265,9025+68]..[265,9025+71])
                                            Pexp_ident "err" (src/extension.ml[265,9025+68]..[265,9025+71])
                                      ]
                              ]
                        ]
            ]
          structure_item (src/extension.ml[267,9099+2]..[276,9474+71])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[267,9099+6]..[267,9099+24])
                  Ppat_var "convert_inline_res" (src/extension.ml[267,9099+6]..[267,9099+24])
                expression (src/extension.ml[267,9099+25]..[276,9474+71]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/extension.ml[267,9099+25]..[267,9099+27])
                    Ppat_var "ts" (src/extension.ml[267,9099+25]..[267,9099+27])
                  expression (src/extension.ml[267,9099+28]..[276,9474+71]) ghost
                    Pexp_fun
                    Labelled "ctxt"
                    None
                    pattern (src/extension.ml[267,9099+29]..[267,9099+33])
                      Ppat_var "ctxt" (src/extension.ml[267,9099+29]..[267,9099+33])
                    expression (src/extension.ml[267,9099+34]..[276,9474+71]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[267,9099+34]..[267,9099+37])
                        Ppat_var "ext" (src/extension.ml[267,9099+34]..[267,9099+37])
                      expression (src/extension.ml[268,9139+4]..[276,9474+71])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/extension.ml[268,9139+8]..[268,9139+11])
                              Ppat_var "loc" (src/extension.ml[268,9139+8]..[268,9139+11])
                            expression (src/extension.ml[268,9139+14]..[268,9139+66])
                              Pexp_apply
                              expression (src/extension.ml[268,9139+14]..[268,9139+61])
                                Pexp_ident "Expansion_context.Extension.extension_point_loc" (src/extension.ml[268,9139+14]..[268,9139+61])
                              [
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[268,9139+62]..[268,9139+66])
                                    Pexp_ident "ctxt" (src/extension.ml[268,9139+62]..[268,9139+66])
                              ]
                        ]
                        expression (src/extension.ml[269,9209+4]..[276,9474+71])
                          Pexp_open Fresh
                          module_expr (src/extension.ml[269,9209+13]..[269,9209+19])
                            Pmod_ident "Result" (src/extension.ml[269,9209+13]..[269,9209+19])
                          expression (src/extension.ml[270,9232+4]..[276,9474+71])
                            Pexp_apply
                            expression (src/extension.ml[270,9232+18]..[270,9232+21])
                              Pexp_ident ">>=" (src/extension.ml[270,9232+18]..[270,9232+21])
                            [
                              <arg>
                              Nolabel
                                expression (src/extension.ml[270,9232+4]..[270,9232+17])
                                  Pexp_apply
                                  expression (src/extension.ml[270,9232+4]..[270,9232+10])
                                    Pexp_ident "M.find" (src/extension.ml[270,9232+4]..[270,9232+10])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/extension.ml[270,9232+11]..[270,9232+13])
                                        Pexp_ident "ts" (src/extension.ml[270,9232+11]..[270,9232+13])
                                    <arg>
                                    Nolabel
                                      expression (src/extension.ml[270,9232+14]..[270,9232+17])
                                        Pexp_ident "ext" (src/extension.ml[270,9232+14]..[270,9232+17])
                                  ]
                              <arg>
                              Nolabel
                                expression (src/extension.ml[270,9232+22]..[276,9474+71])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/extension.ml[270,9232+26]..[270,9232+31])
                                    Ppat_var "found" (src/extension.ml[270,9232+26]..[270,9232+31])
                                  expression (src/extension.ml[271,9267+4]..[276,9474+71])
                                    Pexp_match
                                    expression (src/extension.ml[271,9267+10]..[271,9267+15])
                                      Pexp_ident "found" (src/extension.ml[271,9267+10]..[271,9267+15])
                                    [
                                      <case>
                                        pattern (src/extension.ml[272,9288+6]..[272,9288+10])
                                          Ppat_construct "None" (src/extension.ml[272,9288+6]..[272,9288+10])
                                          None
                                        expression (src/extension.ml[272,9288+14]..[272,9288+21])
                                          Pexp_construct "Ok" (src/extension.ml[272,9288+14]..[272,9288+16])
                                          Some
                                            expression (src/extension.ml[272,9288+17]..[272,9288+21])
                                              Pexp_construct "None" (src/extension.ml[272,9288+17]..[272,9288+21])
                                              None
                                      <case>
                                        pattern (src/extension.ml[273,9310+6]..[273,9310+64])
                                          Ppat_construct "Some" (src/extension.ml[273,9310+6]..[273,9310+10])
                                          Some
                                            pattern (src/extension.ml[273,9310+11]..[273,9310+64])
                                              Ppat_tuple
                                              [
                                                pattern (src/extension.ml[273,9310+12]..[273,9310+58])
                                                  Ppat_record Open
                                                  [
                                                    "payload" (src/extension.ml[273,9310+14]..[273,9310+21])
                                                      pattern (src/extension.ml[273,9310+24]..[273,9310+53])
                                                        Ppat_construct "M.Payload_parser" (src/extension.ml[273,9310+24]..[273,9310+40])
                                                        Some
                                                          pattern (src/extension.ml[273,9310+41]..[273,9310+53])
                                                            Ppat_tuple
                                                            [
                                                              pattern (src/extension.ml[273,9310+42]..[273,9310+49])
                                                                Ppat_var "pattern" (src/extension.ml[273,9310+42]..[273,9310+49])
                                                              pattern (src/extension.ml[273,9310+51]..[273,9310+52])
                                                                Ppat_var "f" (src/extension.ml[273,9310+51]..[273,9310+52])
                                                            ]
                                                  ]
                                                pattern (src/extension.ml[273,9310+60]..[273,9310+63])
                                                  Ppat_var "arg" (src/extension.ml[273,9310+60]..[273,9310+63])
                                              ]
                                        expression (src/extension.ml[273,9310+68]..[276,9474+71])
                                          Pexp_apply
                                          expression (src/extension.ml[275,9447+8]..[275,9447+11])
                                            Pexp_ident ">>|" (src/extension.ml[275,9447+8]..[275,9447+11])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/extension.ml[274,9380+8]..[274,9380+66])
                                                Pexp_apply
                                                expression (src/extension.ml[274,9380+8]..[274,9380+29])
                                                  Pexp_ident "Ast_pattern.parse_res" (src/extension.ml[274,9380+8]..[274,9380+29])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/extension.ml[274,9380+30]..[274,9380+37])
                                                      Pexp_ident "pattern" (src/extension.ml[274,9380+30]..[274,9380+37])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/extension.ml[274,9380+38]..[274,9380+41])
                                                      Pexp_ident "loc" (src/extension.ml[274,9380+38]..[274,9380+41])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/extension.ml[274,9380+42]..[274,9380+51])
                                                      Pexp_apply
                                                      expression (src/extension.ml[274,9380+43]..[274,9380+46])
                                                        Pexp_ident "snd" (src/extension.ml[274,9380+43]..[274,9380+46])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/extension.ml[274,9380+47]..[274,9380+50])
                                                            Pexp_ident "ext" (src/extension.ml[274,9380+47]..[274,9380+50])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (src/extension.ml[274,9380+52]..[274,9380+66])
                                                      Pexp_apply
                                                      expression (src/extension.ml[274,9380+53]..[274,9380+54])
                                                        Pexp_ident "f" (src/extension.ml[274,9380+53]..[274,9380+54])
                                                      [
                                                        <arg>
                                                        Labelled "ctxt"
                                                          expression (src/extension.ml[274,9380+56]..[274,9380+60])
                                                            Pexp_ident "ctxt" (src/extension.ml[274,9380+56]..[274,9380+60])
                                                        <arg>
                                                        Labelled "arg"
                                                          expression (src/extension.ml[274,9380+62]..[274,9380+65])
                                                            Pexp_ident "arg" (src/extension.ml[274,9380+62]..[274,9380+65])
                                                      ]
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (src/extension.ml[275,9447+12]..[276,9474+70])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (src/extension.ml[275,9447+16]..[275,9447+23])
                                                  Ppat_var "payload" (src/extension.ml[275,9447+16]..[275,9447+23])
                                                expression (src/extension.ml[276,9474+8]..[276,9474+70])
                                                  Pexp_match
                                                  expression (src/extension.ml[276,9474+14]..[276,9474+21])
                                                    Pexp_ident "payload" (src/extension.ml[276,9474+14]..[276,9474+21])
                                                  [
                                                    <case>
                                                      pattern (src/extension.ml[276,9474+27]..[276,9474+35])
                                                        Ppat_construct "Simple" (src/extension.ml[276,9474+27]..[276,9474+33])
                                                        Some
                                                          pattern (src/extension.ml[276,9474+34]..[276,9474+35])
                                                            Ppat_var "x" (src/extension.ml[276,9474+34]..[276,9474+35])
                                                      expression (src/extension.ml[276,9474+39]..[276,9474+49])
                                                        Pexp_construct "Some" (src/extension.ml[276,9474+39]..[276,9474+43])
                                                        Some
                                                          expression (src/extension.ml[276,9474+44]..[276,9474+49])
                                                            Pexp_construct "::" (src/extension.ml[276,9474+46]..[276,9474+49]) ghost
                                                            Some
                                                              expression (src/extension.ml[276,9474+46]..[276,9474+49]) ghost
                                                                Pexp_tuple
                                                                [
                                                                  expression (src/extension.ml[276,9474+46]..[276,9474+47])
                                                                    Pexp_ident "x" (src/extension.ml[276,9474+46]..[276,9474+47])
                                                                  expression (src/extension.ml[276,9474+48]..[276,9474+49]) ghost
                                                                    Pexp_construct "[]" (src/extension.ml[276,9474+48]..[276,9474+49]) ghost
                                                                    None
                                                                ]
                                                    <case>
                                                      pattern (src/extension.ml[276,9474+52]..[276,9474+60])
                                                        Ppat_construct "Inline" (src/extension.ml[276,9474+52]..[276,9474+58])
                                                        Some
                                                          pattern (src/extension.ml[276,9474+59]..[276,9474+60])
                                                            Ppat_var "l" (src/extension.ml[276,9474+59]..[276,9474+60])
                                                      expression (src/extension.ml[276,9474+64]..[276,9474+70])
                                                        Pexp_construct "Some" (src/extension.ml[276,9474+64]..[276,9474+68])
                                                        Some
                                                          expression (src/extension.ml[276,9474+69]..[276,9474+70])
                                                            Pexp_ident "l" (src/extension.ml[276,9474+69]..[276,9474+70])
                                                  ]
                                          ]
                                    ]
                            ]
            ]
          structure_item (src/extension.ml[278,9547+2]..[280,9619+72])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[278,9547+6]..[278,9547+20])
                  Ppat_var "convert_inline" (src/extension.ml[278,9547+6]..[278,9547+20])
                expression (src/extension.ml[278,9547+21]..[280,9619+72]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/extension.ml[278,9547+21]..[278,9547+23])
                    Ppat_var "ts" (src/extension.ml[278,9547+21]..[278,9547+23])
                  expression (src/extension.ml[278,9547+24]..[280,9619+72]) ghost
                    Pexp_fun
                    Labelled "ctxt"
                    None
                    pattern (src/extension.ml[278,9547+25]..[278,9547+29])
                      Ppat_var "ctxt" (src/extension.ml[278,9547+25]..[278,9547+29])
                    expression (src/extension.ml[278,9547+30]..[280,9619+72]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[278,9547+30]..[278,9547+33])
                        Ppat_var "ext" (src/extension.ml[278,9547+30]..[278,9547+33])
                      expression (src/extension.ml[279,9583+4]..[280,9619+72])
                        Pexp_apply
                        expression (src/extension.ml[280,9619+4]..[280,9619+6])
                          Pexp_ident "|>" (src/extension.ml[280,9619+4]..[280,9619+6])
                        [
                          <arg>
                          Nolabel
                            expression (src/extension.ml[279,9583+4]..[279,9583+35])
                              Pexp_apply
                              expression (src/extension.ml[279,9583+4]..[279,9583+22])
                                Pexp_ident "convert_inline_res" (src/extension.ml[279,9583+4]..[279,9583+22])
                              [
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[279,9583+23]..[279,9583+25])
                                    Pexp_ident "ts" (src/extension.ml[279,9583+23]..[279,9583+25])
                                <arg>
                                Labelled "ctxt"
                                  expression (src/extension.ml[279,9583+27]..[279,9583+31])
                                    Pexp_ident "ctxt" (src/extension.ml[279,9583+27]..[279,9583+31])
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[279,9583+32]..[279,9583+35])
                                    Pexp_ident "ext" (src/extension.ml[279,9583+32]..[279,9583+35])
                              ]
                          <arg>
                          Nolabel
                            expression (src/extension.ml[280,9619+7]..[280,9619+72])
                              Pexp_apply
                              expression (src/extension.ml[280,9619+7]..[280,9619+26])
                                Pexp_ident "Result.handle_error" (src/extension.ml[280,9619+7]..[280,9619+26])
                              [
                                <arg>
                                Labelled "f"
                                  expression (src/extension.ml[280,9619+30]..[280,9619+72])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (src/extension.ml[280,9619+35]..[280,9619+43])
                                      Ppat_tuple
                                      [
                                        pattern (src/extension.ml[280,9619+36]..[280,9619+39])
                                          Ppat_var "err" (src/extension.ml[280,9619+36]..[280,9619+39])
                                        pattern (src/extension.ml[280,9619+41]..[280,9619+42])
                                          Ppat_any
                                      ]
                                    expression (src/extension.ml[280,9619+47]..[280,9619+71])
                                      Pexp_apply
                                      expression (src/extension.ml[280,9619+47]..[280,9619+67])
                                        Pexp_ident "Location.Error.raise" (src/extension.ml[280,9619+47]..[280,9619+67])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[280,9619+68]..[280,9619+71])
                                            Pexp_ident "err" (src/extension.ml[280,9619+68]..[280,9619+71])
                                      ]
                              ]
                        ]
            ]
        ]
  structure_item (src/extension.ml[283,9697+0]..[283,9697+33])
    Pstr_type Rec
    [
      type_declaration "t" (src/extension.ml[283,9697+5]..[283,9697+6]) (src/extension.ml[283,9697+0]..[283,9697+33])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (src/extension.ml[283,9697+9]..[283,9697+33])
                "T" (src/extension.ml[283,9697+9]..[283,9697+10])
                [
                  core_type (src/extension.ml[283,9697+13]..[283,9697+28])
                    Ptyp_constr "For_context.t" (src/extension.ml[283,9697+15]..[283,9697+28])
                    [
                      core_type (src/extension.ml[283,9697+13]..[283,9697+14])
                        Ptyp_any
                    ]
                ]
                Some
                  core_type (src/extension.ml[283,9697+32]..[283,9697+33])
                    Ptyp_constr "t" (src/extension.ml[283,9697+32]..[283,9697+33])
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (src/extension.ml[285,9732+0]..[294,10054+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/extension.ml[285,9732+4]..[285,9732+73]) ghost
          Ppat_constraint
          pattern (src/extension.ml[285,9732+4]..[285,9732+28])
            Ppat_var "check_context_for_inline" (src/extension.ml[285,9732+4]..[285,9732+28])
          core_type (src/extension.ml[285,9732+4]..[294,10054+30]) ghost
            Ptyp_poly 'a
            core_type (src/extension.ml[285,9732+39]..[285,9732+73])
              Ptyp_arrow
              Labelled "func"
              core_type (src/extension.ml[285,9732+44]..[285,9732+50])
                Ptyp_constr "string" (src/extension.ml[285,9732+44]..[285,9732+50])
                []
              core_type (src/extension.ml[285,9732+54]..[285,9732+73])
                Ptyp_arrow
                Nolabel
                core_type (src/extension.ml[285,9732+54]..[285,9732+65])
                  Ptyp_constr "Context.t" (src/extension.ml[285,9732+56]..[285,9732+65])
                  [
                    core_type (src/extension.ml[285,9732+54]..[285,9732+55])
                      Ptyp_var a
                  ]
                core_type (src/extension.ml[285,9732+69]..[285,9732+73])
                  Ptyp_constr "unit" (src/extension.ml[285,9732+69]..[285,9732+73])
                  []
        expression (src/extension.ml[285,9732+4]..[294,10054+30])
          Pexp_newtype "a"
          expression (src/extension.ml[285,9732+4]..[294,10054+30])
            Pexp_constraint
            expression (src/extension.ml[286,9808+1]..[294,10054+30])
              Pexp_fun
              Labelled "func"
              None
              pattern (src/extension.ml[286,9808+6]..[286,9808+10])
                Ppat_var "func" (src/extension.ml[286,9808+6]..[286,9808+10])
              expression (src/extension.ml[286,9808+11]..[294,10054+30]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (src/extension.ml[286,9808+11]..[286,9808+14])
                  Ppat_var "ctx" (src/extension.ml[286,9808+11]..[286,9808+14])
                expression (src/extension.ml[287,9826+2]..[294,10054+30])
                  Pexp_match
                  expression (src/extension.ml[287,9826+8]..[287,9826+11])
                    Pexp_ident "ctx" (src/extension.ml[287,9826+8]..[287,9826+11])
                  [
                    <case>
                      pattern (src/extension.ml[288,9843+4]..[288,9843+23])
                        Ppat_construct "Context.Class_field" (src/extension.ml[288,9843+4]..[288,9843+23])
                        None
                      expression (src/extension.ml[288,9843+27]..[288,9843+29])
                        Pexp_construct "()" (src/extension.ml[288,9843+27]..[288,9843+29])
                        None
                    <case>
                      pattern (src/extension.ml[289,9873+4]..[289,9873+28])
                        Ppat_construct "Context.Class_type_field" (src/extension.ml[289,9873+4]..[289,9873+28])
                        None
                      expression (src/extension.ml[289,9873+32]..[289,9873+34])
                        Pexp_construct "()" (src/extension.ml[289,9873+32]..[289,9873+34])
                        None
                    <case>
                      pattern (src/extension.ml[290,9908+4]..[290,9908+26])
                        Ppat_construct "Context.Signature_item" (src/extension.ml[290,9908+4]..[290,9908+26])
                        None
                      expression (src/extension.ml[290,9908+30]..[290,9908+32])
                        Pexp_construct "()" (src/extension.ml[290,9908+30]..[290,9908+32])
                        None
                    <case>
                      pattern (src/extension.ml[291,9941+4]..[291,9941+26])
                        Ppat_construct "Context.Structure_item" (src/extension.ml[291,9941+4]..[291,9941+26])
                        None
                      expression (src/extension.ml[291,9941+30]..[291,9941+32])
                        Pexp_construct "()" (src/extension.ml[291,9941+30]..[291,9941+32])
                        None
                    <case>
                      pattern (src/extension.ml[292,9974+4]..[292,9974+11])
                        Ppat_var "context" (src/extension.ml[292,9974+4]..[292,9974+11])
                      expression (src/extension.ml[293,9989+6]..[294,10054+30])
                        Pexp_apply
                        expression (src/extension.ml[293,9989+6]..[293,9989+21])
                          Pexp_ident "Printf.ksprintf" (src/extension.ml[293,9989+6]..[293,9989+21])
                        [
                          <arg>
                          Nolabel
                            expression (src/extension.ml[293,9989+22]..[293,9989+33])
                              Pexp_ident "invalid_arg" (src/extension.ml[293,9989+22]..[293,9989+33])
                          <arg>
                          Nolabel
                            expression (src/extension.ml[293,9989+34]..[293,9989+59])
                              Pexp_constant PConst_string("%s: %s can't be inlined",(src/extension.ml[293,9989+35]..[293,9989+58]),None)
                          <arg>
                          Nolabel
                            expression (src/extension.ml[293,9989+60]..[293,9989+64])
                              Pexp_ident "func" (src/extension.ml[293,9989+60]..[293,9989+64])
                          <arg>
                          Nolabel
                            expression (src/extension.ml[294,10054+8]..[294,10054+30])
                              Pexp_apply
                              expression (src/extension.ml[294,10054+9]..[294,10054+21])
                                Pexp_ident "Context.desc" (src/extension.ml[294,10054+9]..[294,10054+21])
                              [
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[294,10054+22]..[294,10054+29])
                                    Pexp_ident "context" (src/extension.ml[294,10054+22]..[294,10054+29])
                              ]
                        ]
                  ]
            core_type (src/extension.ml[285,9732+39]..[285,9732+73])
              Ptyp_arrow
              Labelled "func"
              core_type (src/extension.ml[285,9732+44]..[285,9732+50])
                Ptyp_constr "string" (src/extension.ml[285,9732+44]..[285,9732+50])
                []
              core_type (src/extension.ml[285,9732+54]..[285,9732+73])
                Ptyp_arrow
                Nolabel
                core_type (src/extension.ml[285,9732+54]..[285,9732+65])
                  Ptyp_constr "Context.t" (src/extension.ml[285,9732+56]..[285,9732+65])
                  [
                    core_type (src/extension.ml[285,9732+54]..[285,9732+55])
                      Ptyp_constr "a" (src/extension.ml[285,9732+54]..[285,9732+55])
                      []
                  ]
                core_type (src/extension.ml[285,9732+69]..[285,9732+73])
                  Ptyp_constr "unit" (src/extension.ml[285,9732+69]..[285,9732+73])
                  []
    ]
  structure_item (src/extension.ml[296,10086+0]..[304,10353+45])
    Pstr_value Rec
    [
      <def>
        pattern (src/extension.ml[296,10086+8]..[297,10114+57]) ghost
          Ppat_constraint
          pattern (src/extension.ml[296,10086+8]..[296,10086+25])
            Ppat_var "filter_by_context" (src/extension.ml[296,10086+8]..[296,10086+25])
          core_type (src/extension.ml[296,10086+8]..[304,10353+45]) ghost
            Ptyp_poly 'a
            core_type (src/extension.ml[297,10114+12]..[297,10114+57])
              Ptyp_arrow
              Nolabel
              core_type (src/extension.ml[297,10114+12]..[297,10114+23])
                Ptyp_constr "Context.t" (src/extension.ml[297,10114+14]..[297,10114+23])
                [
                  core_type (src/extension.ml[297,10114+12]..[297,10114+13])
                    Ptyp_var a
                ]
              core_type (src/extension.ml[297,10114+27]..[297,10114+57])
                Ptyp_arrow
                Nolabel
                core_type (src/extension.ml[297,10114+27]..[297,10114+33])
                  Ptyp_constr "list" (src/extension.ml[297,10114+29]..[297,10114+33])
                  [
                    core_type (src/extension.ml[297,10114+27]..[297,10114+28])
                      Ptyp_constr "t" (src/extension.ml[297,10114+27]..[297,10114+28])
                      []
                  ]
                core_type (src/extension.ml[297,10114+37]..[297,10114+57])
                  Ptyp_constr "list" (src/extension.ml[297,10114+53]..[297,10114+57])
                  [
                    core_type (src/extension.ml[297,10114+37]..[297,10114+52])
                      Ptyp_constr "For_context.t" (src/extension.ml[297,10114+39]..[297,10114+52])
                      [
                        core_type (src/extension.ml[297,10114+37]..[297,10114+38])
                          Ptyp_var a
                      ]
                  ]
        expression (src/extension.ml[296,10086+8]..[304,10353+45])
          Pexp_newtype "a"
          expression (src/extension.ml[296,10086+8]..[304,10353+45])
            Pexp_constraint
            expression (src/extension.ml[298,10174+1]..[304,10353+45])
              Pexp_fun
              Nolabel
              None
              pattern (src/extension.ml[298,10174+5]..[298,10174+12])
                Ppat_var "context" (src/extension.ml[298,10174+5]..[298,10174+12])
              expression (src/extension.ml[298,10174+13]..[304,10353+45]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (src/extension.ml[298,10174+13]..[298,10174+22])
                  Ppat_var "expanders" (src/extension.ml[298,10174+13]..[298,10174+22])
                expression (src/extension.ml[299,10200+2]..[304,10353+45])
                  Pexp_match
                  expression (src/extension.ml[299,10200+8]..[299,10200+17])
                    Pexp_ident "expanders" (src/extension.ml[299,10200+8]..[299,10200+17])
                  [
                    <case>
                      pattern (src/extension.ml[300,10223+4]..[300,10223+6])
                        Ppat_construct "[]" (src/extension.ml[300,10223+4]..[300,10223+6])
                        None
                      expression (src/extension.ml[300,10223+10]..[300,10223+12])
                        Pexp_construct "[]" (src/extension.ml[300,10223+10]..[300,10223+12])
                        None
                    <case>
                      pattern (src/extension.ml[301,10236+4]..[301,10236+15])
                        Ppat_construct "::" (src/extension.ml[301,10236+8]..[301,10236+10])
                        Some
                          pattern (src/extension.ml[301,10236+4]..[301,10236+15]) ghost
                            Ppat_tuple
                            [
                              pattern (src/extension.ml[301,10236+4]..[301,10236+7])
                                Ppat_construct "T" (src/extension.ml[301,10236+4]..[301,10236+5])
                                Some
                                  pattern (src/extension.ml[301,10236+6]..[301,10236+7])
                                    Ppat_var "t" (src/extension.ml[301,10236+6]..[301,10236+7])
                              pattern (src/extension.ml[301,10236+11]..[301,10236+15])
                                Ppat_var "rest" (src/extension.ml[301,10236+11]..[301,10236+15])
                            ]
                      expression (src/extension.ml[301,10236+19]..[304,10353+45])
                        Pexp_match
                        expression (src/extension.ml[302,10257+12]..[302,10257+40])
                          Pexp_apply
                          expression (src/extension.ml[302,10257+12]..[302,10257+22])
                            Pexp_ident "Context.eq" (src/extension.ml[302,10257+12]..[302,10257+22])
                          [
                            <arg>
                            Nolabel
                              expression (src/extension.ml[302,10257+23]..[302,10257+30])
                                Pexp_ident "context" (src/extension.ml[302,10257+23]..[302,10257+30])
                            <arg>
                            Nolabel
                              expression (src/extension.ml[302,10257+31]..[302,10257+40])
                                Pexp_field
                                expression (src/extension.ml[302,10257+31]..[302,10257+32])
                                  Pexp_ident "t" (src/extension.ml[302,10257+31]..[302,10257+32])
                                "context" (src/extension.ml[302,10257+33]..[302,10257+40])
                          ]
                        [
                          <case>
                            pattern (src/extension.ml[303,10303+8]..[303,10303+10])
                              Ppat_construct "Eq" (src/extension.ml[303,10303+8]..[303,10303+10])
                              None
                            expression (src/extension.ml[303,10303+14]..[303,10303+49])
                              Pexp_construct "::" (src/extension.ml[303,10303+16]..[303,10303+18])
                              Some
                                expression (src/extension.ml[303,10303+14]..[303,10303+49]) ghost
                                  Pexp_tuple
                                  [
                                    expression (src/extension.ml[303,10303+14]..[303,10303+15])
                                      Pexp_ident "t" (src/extension.ml[303,10303+14]..[303,10303+15])
                                    expression (src/extension.ml[303,10303+19]..[303,10303+49])
                                      Pexp_apply
                                      expression (src/extension.ml[303,10303+19]..[303,10303+36])
                                        Pexp_ident "filter_by_context" (src/extension.ml[303,10303+19]..[303,10303+36])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[303,10303+37]..[303,10303+44])
                                            Pexp_ident "context" (src/extension.ml[303,10303+37]..[303,10303+44])
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[303,10303+45]..[303,10303+49])
                                            Pexp_ident "rest" (src/extension.ml[303,10303+45]..[303,10303+49])
                                      ]
                                  ]
                          <case>
                            pattern (src/extension.ml[304,10353+8]..[304,10353+10])
                              Ppat_construct "Ne" (src/extension.ml[304,10353+8]..[304,10353+10])
                              None
                            expression (src/extension.ml[304,10353+14]..[304,10353+44])
                              Pexp_apply
                              expression (src/extension.ml[304,10353+14]..[304,10353+31])
                                Pexp_ident "filter_by_context" (src/extension.ml[304,10353+14]..[304,10353+31])
                              [
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[304,10353+32]..[304,10353+39])
                                    Pexp_ident "context" (src/extension.ml[304,10353+32]..[304,10353+39])
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[304,10353+40]..[304,10353+44])
                                    Pexp_ident "rest" (src/extension.ml[304,10353+40]..[304,10353+44])
                              ]
                        ]
                  ]
            core_type (src/extension.ml[297,10114+12]..[297,10114+57])
              Ptyp_arrow
              Nolabel
              core_type (src/extension.ml[297,10114+12]..[297,10114+23])
                Ptyp_constr "Context.t" (src/extension.ml[297,10114+14]..[297,10114+23])
                [
                  core_type (src/extension.ml[297,10114+12]..[297,10114+13])
                    Ptyp_constr "a" (src/extension.ml[297,10114+12]..[297,10114+13])
                    []
                ]
              core_type (src/extension.ml[297,10114+27]..[297,10114+57])
                Ptyp_arrow
                Nolabel
                core_type (src/extension.ml[297,10114+27]..[297,10114+33])
                  Ptyp_constr "list" (src/extension.ml[297,10114+29]..[297,10114+33])
                  [
                    core_type (src/extension.ml[297,10114+27]..[297,10114+28])
                      Ptyp_constr "t" (src/extension.ml[297,10114+27]..[297,10114+28])
                      []
                  ]
                core_type (src/extension.ml[297,10114+37]..[297,10114+57])
                  Ptyp_constr "list" (src/extension.ml[297,10114+53]..[297,10114+57])
                  [
                    core_type (src/extension.ml[297,10114+37]..[297,10114+52])
                      Ptyp_constr "For_context.t" (src/extension.ml[297,10114+39]..[297,10114+52])
                      [
                        core_type (src/extension.ml[297,10114+37]..[297,10114+38])
                          Ptyp_constr "a" (src/extension.ml[297,10114+37]..[297,10114+38])
                          []
                      ]
                  ]
    ]
  structure_item (src/extension.ml[306,10400+0]..[316,10692+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/extension.ml[306,10400+4]..[306,10400+29])
          Ppat_var "unhandled_extension_error" (src/extension.ml[306,10400+4]..[306,10400+29])
        expression (src/extension.ml[306,10400+30]..[316,10692+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/extension.ml[306,10400+30]..[306,10400+33])
            Ppat_var "ctx" (src/extension.ml[306,10400+30]..[306,10400+33])
          expression (src/extension.ml[306,10400+34]..[316,10692+9]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/extension.ml[306,10400+34]..[306,10400+43])
              Ppat_tuple
              [
                pattern (src/extension.ml[306,10400+35]..[306,10400+39])
                  Ppat_var "name" (src/extension.ml[306,10400+35]..[306,10400+39])
                pattern (src/extension.ml[306,10400+41]..[306,10400+42])
                  Ppat_any
              ]
            expression (src/extension.ml[307,10446+2]..[316,10692+9])
              Pexp_ifthenelse
              expression (src/extension.ml[308,10451+4]..[310,10524+37])
                Pexp_apply
                expression (src/extension.ml[308,10451+4]..[308,10451+7])
                  Pexp_ident "not" (src/extension.ml[308,10451+4]..[308,10451+7])
                [
                  <arg>
                  Nolabel
                    expression (src/extension.ml[309,10459+6]..[310,10524+37])
                      Pexp_apply
                      expression (src/extension.ml[310,10524+6]..[310,10524+8])
                        Pexp_ident "||" (src/extension.ml[310,10524+6]..[310,10524+8])
                      [
                        <arg>
                        Nolabel
                          expression (src/extension.ml[309,10459+7]..[309,10459+64])
                            Pexp_apply
                            expression (src/extension.ml[309,10459+7]..[309,10459+38])
                              Pexp_ident "Name.Allowlisted.is_allowlisted" (src/extension.ml[309,10459+7]..[309,10459+38])
                            [
                              <arg>
                              Labelled "kind"
                                expression (src/extension.ml[309,10459+45]..[309,10459+55])
                                  Pexp_variant "Extension"
                                  None
                              <arg>
                              Nolabel
                                expression (src/extension.ml[309,10459+56]..[309,10459+64])
                                  Pexp_field
                                  expression (src/extension.ml[309,10459+56]..[309,10459+60])
                                    Pexp_ident "name" (src/extension.ml[309,10459+56]..[309,10459+60])
                                  "txt" (src/extension.ml[309,10459+61]..[309,10459+64])
                            ]
                        <arg>
                        Nolabel
                          expression (src/extension.ml[310,10524+9]..[310,10524+36])
                            Pexp_apply
                            expression (src/extension.ml[310,10524+9]..[310,10524+27])
                              Pexp_ident "Name.ignore_checks" (src/extension.ml[310,10524+9]..[310,10524+27])
                            [
                              <arg>
                              Nolabel
                                expression (src/extension.ml[310,10524+28]..[310,10524+36])
                                  Pexp_field
                                  expression (src/extension.ml[310,10524+28]..[310,10524+32])
                                    Pexp_ident "name" (src/extension.ml[310,10524+28]..[310,10524+32])
                                  "txt" (src/extension.ml[310,10524+33]..[310,10524+36])
                            ]
                      ]
                ]
              expression (src/extension.ml[312,10569+4]..[315,10686+5])
                Pexp_construct "::" (src/extension.ml[313,10575+6]..[315,10686+5]) ghost
                Some
                  expression (src/extension.ml[313,10575+6]..[315,10686+5]) ghost
                    Pexp_tuple
                    [
                      expression (src/extension.ml[313,10575+6]..[314,10636+48])
                        Pexp_apply
                        expression (src/extension.ml[313,10575+6]..[313,10575+34])
                          Pexp_ident "Name.Registrar.Error.createf" (src/extension.ml[313,10575+6]..[313,10575+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/extension.ml[313,10575+35]..[313,10575+44])
                              Pexp_ident "registrar" (src/extension.ml[313,10575+35]..[313,10575+44])
                          <arg>
                          Nolabel
                            expression (src/extension.ml[313,10575+45]..[313,10575+60])
                              Pexp_construct "Context.T" (src/extension.ml[313,10575+46]..[313,10575+55])
                              Some
                                expression (src/extension.ml[313,10575+56]..[313,10575+59])
                                  Pexp_ident "ctx" (src/extension.ml[313,10575+56]..[313,10575+59])
                          <arg>
                          Nolabel
                            expression (src/extension.ml[314,10636+8]..[314,10636+43])
                              Pexp_constant PConst_string("Extension `%s' was not translated",(src/extension.ml[314,10636+9]..[314,10636+42]),None)
                          <arg>
                          Nolabel
                            expression (src/extension.ml[314,10636+44]..[314,10636+48])
                              Pexp_ident "name" (src/extension.ml[314,10636+44]..[314,10636+48])
                        ]
                      expression (src/extension.ml[315,10686+4]..[315,10686+5]) ghost
                        Pexp_construct "[]" (src/extension.ml[315,10686+4]..[315,10686+5]) ghost
                        None
                    ]
              Some
                expression (src/extension.ml[316,10692+7]..[316,10692+9])
                  Pexp_construct "[]" (src/extension.ml[316,10692+7]..[316,10692+9])
                  None
    ]
  structure_item (src/extension.ml[318,10703+0]..[386,13000+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/extension.ml[318,10703+4]..[318,10703+38])
          Ppat_var "collect_unhandled_extension_errors" (src/extension.ml[318,10703+4]..[318,10703+38])
        expression (src/extension.ml[319,10744+2]..[386,13000+5])
          Pexp_object
          class_structure
            pattern (src/extension.ml[319,10744+8]..[319,10744+8]) ghost
              Ppat_any
            [
              class_field (src/extension.ml[320,10753+4]..[320,10753+62])
                Pcf_inherit Fresh
                  class_expr (src/extension.ml[320,10753+12]..[320,10753+53])
                    Pcl_constr "Ast_traverse.fold" (src/extension.ml[320,10753+36]..[320,10753+53])
                    [
                      core_type (src/extension.ml[320,10753+13]..[320,10753+34])
                        Ptyp_constr "list" (src/extension.ml[320,10753+30]..[320,10753+34])
                        [
                          core_type (src/extension.ml[320,10753+13]..[320,10753+29])
                            Ptyp_constr "Location.Error.t" (src/extension.ml[320,10753+13]..[320,10753+29])
                            []
                        ]
                    ]
                  Some
                    "super" (src/extension.ml[320,10753+57]..[320,10753+62])
              class_field (src/extension.ml[322,10817+4]..[327,10999+9])
                Pcf_method Public
                  "extension" (src/extension.ml[322,10817+12]..[322,10817+21])
                  Concrete Override
                  expression (src/extension.ml[322,10817+22]..[327,10999+9]) ghost
                    Pexp_poly
                    expression (src/extension.ml[322,10817+22]..[327,10999+9]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[322,10817+22]..[322,10817+31])
                        Ppat_tuple
                        [
                          pattern (src/extension.ml[322,10817+23]..[322,10817+27])
                            Ppat_var "name" (src/extension.ml[322,10817+23]..[322,10817+27])
                          pattern (src/extension.ml[322,10817+29]..[322,10817+30])
                            Ppat_any
                        ]
                      expression (src/extension.ml[322,10817+32]..[327,10999+9]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/extension.ml[322,10817+32]..[322,10817+35])
                          Ppat_var "acc" (src/extension.ml[322,10817+32]..[322,10817+35])
                        expression (src/extension.ml[323,10855+6]..[327,10999+9])
                          Pexp_apply
                          expression (src/extension.ml[324,10865+6]..[324,10865+7])
                            Pexp_ident "@" (src/extension.ml[324,10865+6]..[324,10865+7])
                          [
                            <arg>
                            Nolabel
                              expression (src/extension.ml[323,10855+6]..[323,10855+9])
                                Pexp_ident "acc" (src/extension.ml[323,10855+6]..[323,10855+9])
                            <arg>
                            Nolabel
                              expression (src/extension.ml[324,10865+8]..[327,10999+9])
                                Pexp_construct "::" (src/extension.ml[325,10875+10]..[327,10999+9]) ghost
                                Some
                                  expression (src/extension.ml[325,10875+10]..[327,10999+9]) ghost
                                    Pexp_tuple
                                    [
                                      expression (src/extension.ml[325,10875+10]..[326,10922+75])
                                        Pexp_apply
                                        expression (src/extension.ml[325,10875+10]..[325,10875+32])
                                          Pexp_ident "Location.Error.createf" (src/extension.ml[325,10875+10]..[325,10875+32])
                                        [
                                          <arg>
                                          Labelled "loc"
                                            expression (src/extension.ml[325,10875+38]..[325,10875+46])
                                              Pexp_field
                                              expression (src/extension.ml[325,10875+38]..[325,10875+42])
                                                Pexp_ident "name" (src/extension.ml[325,10875+38]..[325,10875+42])
                                              "loc" (src/extension.ml[325,10875+43]..[325,10875+46])
                                          <arg>
                                          Nolabel
                                            expression (src/extension.ml[326,10922+12]..[326,10922+75])
                                              Pexp_constant PConst_string("extension not expected here, Ppxlib.Extension needs updating!",(src/extension.ml[326,10922+13]..[326,10922+74]),None)
                                        ]
                                      expression (src/extension.ml[327,10999+8]..[327,10999+9]) ghost
                                        Pexp_construct "[]" (src/extension.ml[327,10999+8]..[327,10999+9]) ghost
                                        None
                                    ]
                          ]
                    None
              class_field (src/extension.ml[329,11010+4]..[332,11140+39])
                Pcf_method Public
                  "core_type_desc" (src/extension.ml[329,11010+12]..[329,11010+26])
                  Concrete Override
                  expression (src/extension.ml[329,11010+27]..[332,11140+39]) ghost
                    Pexp_poly
                    expression (src/extension.ml[329,11010+27]..[332,11140+39]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[329,11010+27]..[329,11010+28])
                        Ppat_var "x" (src/extension.ml[329,11010+27]..[329,11010+28])
                      expression (src/extension.ml[329,11010+29]..[332,11140+39]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/extension.ml[329,11010+29]..[329,11010+32])
                          Ppat_var "acc" (src/extension.ml[329,11010+29]..[329,11010+32])
                        expression (src/extension.ml[330,11045+6]..[332,11140+39])
                          Pexp_match
                          expression (src/extension.ml[330,11045+12]..[330,11045+13])
                            Pexp_ident "x" (src/extension.ml[330,11045+12]..[330,11045+13])
                          [
                            <case>
                              pattern (src/extension.ml[331,11064+8]..[331,11064+26])
                                Ppat_construct "Ptyp_extension" (src/extension.ml[331,11064+8]..[331,11064+22])
                                Some
                                  pattern (src/extension.ml[331,11064+23]..[331,11064+26])
                                    Ppat_var "ext" (src/extension.ml[331,11064+23]..[331,11064+26])
                              expression (src/extension.ml[331,11064+30]..[331,11064+75])
                                Pexp_apply
                                expression (src/extension.ml[331,11064+34]..[331,11064+35])
                                  Pexp_ident "@" (src/extension.ml[331,11064+34]..[331,11064+35])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[331,11064+30]..[331,11064+33])
                                      Pexp_ident "acc" (src/extension.ml[331,11064+30]..[331,11064+33])
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[331,11064+36]..[331,11064+75])
                                      Pexp_apply
                                      expression (src/extension.ml[331,11064+36]..[331,11064+61])
                                        Pexp_ident "unhandled_extension_error" (src/extension.ml[331,11064+36]..[331,11064+61])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[331,11064+62]..[331,11064+71])
                                            Pexp_construct "Core_type" (src/extension.ml[331,11064+62]..[331,11064+71])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[331,11064+72]..[331,11064+75])
                                            Pexp_ident "ext" (src/extension.ml[331,11064+72]..[331,11064+75])
                                      ]
                                ]
                            <case>
                              pattern (src/extension.ml[332,11140+8]..[332,11140+9])
                                Ppat_var "x" (src/extension.ml[332,11140+8]..[332,11140+9])
                              expression (src/extension.ml[332,11140+13]..[332,11140+39])
                                Pexp_apply
                                expression (src/extension.ml[332,11140+13]..[332,11140+33])
                                  Pexp_send "core_type_desc"
                                  expression (src/extension.ml[332,11140+13]..[332,11140+18])
                                    Pexp_ident "super" (src/extension.ml[332,11140+13]..[332,11140+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[332,11140+34]..[332,11140+35])
                                      Pexp_ident "x" (src/extension.ml[332,11140+34]..[332,11140+35])
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[332,11140+36]..[332,11140+39])
                                      Pexp_ident "acc" (src/extension.ml[332,11140+36]..[332,11140+39])
                                ]
                          ]
                    None
              class_field (src/extension.ml[334,11181+4]..[337,11307+37])
                Pcf_method Public
                  "pattern_desc" (src/extension.ml[334,11181+12]..[334,11181+24])
                  Concrete Override
                  expression (src/extension.ml[334,11181+25]..[337,11307+37]) ghost
                    Pexp_poly
                    expression (src/extension.ml[334,11181+25]..[337,11307+37]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[334,11181+25]..[334,11181+26])
                        Ppat_var "x" (src/extension.ml[334,11181+25]..[334,11181+26])
                      expression (src/extension.ml[334,11181+27]..[337,11307+37]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/extension.ml[334,11181+27]..[334,11181+30])
                          Ppat_var "acc" (src/extension.ml[334,11181+27]..[334,11181+30])
                        expression (src/extension.ml[335,11214+6]..[337,11307+37])
                          Pexp_match
                          expression (src/extension.ml[335,11214+12]..[335,11214+13])
                            Pexp_ident "x" (src/extension.ml[335,11214+12]..[335,11214+13])
                          [
                            <case>
                              pattern (src/extension.ml[336,11233+8]..[336,11233+26])
                                Ppat_construct "Ppat_extension" (src/extension.ml[336,11233+8]..[336,11233+22])
                                Some
                                  pattern (src/extension.ml[336,11233+23]..[336,11233+26])
                                    Ppat_var "ext" (src/extension.ml[336,11233+23]..[336,11233+26])
                              expression (src/extension.ml[336,11233+30]..[336,11233+73])
                                Pexp_apply
                                expression (src/extension.ml[336,11233+34]..[336,11233+35])
                                  Pexp_ident "@" (src/extension.ml[336,11233+34]..[336,11233+35])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[336,11233+30]..[336,11233+33])
                                      Pexp_ident "acc" (src/extension.ml[336,11233+30]..[336,11233+33])
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[336,11233+36]..[336,11233+73])
                                      Pexp_apply
                                      expression (src/extension.ml[336,11233+36]..[336,11233+61])
                                        Pexp_ident "unhandled_extension_error" (src/extension.ml[336,11233+36]..[336,11233+61])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[336,11233+62]..[336,11233+69])
                                            Pexp_construct "Pattern" (src/extension.ml[336,11233+62]..[336,11233+69])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[336,11233+70]..[336,11233+73])
                                            Pexp_ident "ext" (src/extension.ml[336,11233+70]..[336,11233+73])
                                      ]
                                ]
                            <case>
                              pattern (src/extension.ml[337,11307+8]..[337,11307+9])
                                Ppat_var "x" (src/extension.ml[337,11307+8]..[337,11307+9])
                              expression (src/extension.ml[337,11307+13]..[337,11307+37])
                                Pexp_apply
                                expression (src/extension.ml[337,11307+13]..[337,11307+31])
                                  Pexp_send "pattern_desc"
                                  expression (src/extension.ml[337,11307+13]..[337,11307+18])
                                    Pexp_ident "super" (src/extension.ml[337,11307+13]..[337,11307+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[337,11307+32]..[337,11307+33])
                                      Pexp_ident "x" (src/extension.ml[337,11307+32]..[337,11307+33])
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[337,11307+34]..[337,11307+37])
                                      Pexp_ident "acc" (src/extension.ml[337,11307+34]..[337,11307+37])
                                ]
                          ]
                    None
              class_field (src/extension.ml[339,11346+4]..[342,11478+40])
                Pcf_method Public
                  "expression_desc" (src/extension.ml[339,11346+12]..[339,11346+27])
                  Concrete Override
                  expression (src/extension.ml[339,11346+28]..[342,11478+40]) ghost
                    Pexp_poly
                    expression (src/extension.ml[339,11346+28]..[342,11478+40]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[339,11346+28]..[339,11346+29])
                        Ppat_var "x" (src/extension.ml[339,11346+28]..[339,11346+29])
                      expression (src/extension.ml[339,11346+30]..[342,11478+40]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/extension.ml[339,11346+30]..[339,11346+33])
                          Ppat_var "acc" (src/extension.ml[339,11346+30]..[339,11346+33])
                        expression (src/extension.ml[340,11382+6]..[342,11478+40])
                          Pexp_match
                          expression (src/extension.ml[340,11382+12]..[340,11382+13])
                            Pexp_ident "x" (src/extension.ml[340,11382+12]..[340,11382+13])
                          [
                            <case>
                              pattern (src/extension.ml[341,11401+8]..[341,11401+26])
                                Ppat_construct "Pexp_extension" (src/extension.ml[341,11401+8]..[341,11401+22])
                                Some
                                  pattern (src/extension.ml[341,11401+23]..[341,11401+26])
                                    Ppat_var "ext" (src/extension.ml[341,11401+23]..[341,11401+26])
                              expression (src/extension.ml[341,11401+30]..[341,11401+76])
                                Pexp_apply
                                expression (src/extension.ml[341,11401+34]..[341,11401+35])
                                  Pexp_ident "@" (src/extension.ml[341,11401+34]..[341,11401+35])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[341,11401+30]..[341,11401+33])
                                      Pexp_ident "acc" (src/extension.ml[341,11401+30]..[341,11401+33])
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[341,11401+36]..[341,11401+76])
                                      Pexp_apply
                                      expression (src/extension.ml[341,11401+36]..[341,11401+61])
                                        Pexp_ident "unhandled_extension_error" (src/extension.ml[341,11401+36]..[341,11401+61])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[341,11401+62]..[341,11401+72])
                                            Pexp_construct "Expression" (src/extension.ml[341,11401+62]..[341,11401+72])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[341,11401+73]..[341,11401+76])
                                            Pexp_ident "ext" (src/extension.ml[341,11401+73]..[341,11401+76])
                                      ]
                                ]
                            <case>
                              pattern (src/extension.ml[342,11478+8]..[342,11478+9])
                                Ppat_var "x" (src/extension.ml[342,11478+8]..[342,11478+9])
                              expression (src/extension.ml[342,11478+13]..[342,11478+40])
                                Pexp_apply
                                expression (src/extension.ml[342,11478+13]..[342,11478+34])
                                  Pexp_send "expression_desc"
                                  expression (src/extension.ml[342,11478+13]..[342,11478+18])
                                    Pexp_ident "super" (src/extension.ml[342,11478+13]..[342,11478+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[342,11478+35]..[342,11478+36])
                                      Pexp_ident "x" (src/extension.ml[342,11478+35]..[342,11478+36])
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[342,11478+37]..[342,11478+40])
                                      Pexp_ident "acc" (src/extension.ml[342,11478+37]..[342,11478+40])
                                ]
                          ]
                    None
              class_field (src/extension.ml[344,11520+4]..[347,11652+40])
                Pcf_method Public
                  "class_type_desc" (src/extension.ml[344,11520+12]..[344,11520+27])
                  Concrete Override
                  expression (src/extension.ml[344,11520+28]..[347,11652+40]) ghost
                    Pexp_poly
                    expression (src/extension.ml[344,11520+28]..[347,11652+40]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[344,11520+28]..[344,11520+29])
                        Ppat_var "x" (src/extension.ml[344,11520+28]..[344,11520+29])
                      expression (src/extension.ml[344,11520+30]..[347,11652+40]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/extension.ml[344,11520+30]..[344,11520+33])
                          Ppat_var "acc" (src/extension.ml[344,11520+30]..[344,11520+33])
                        expression (src/extension.ml[345,11556+6]..[347,11652+40])
                          Pexp_match
                          expression (src/extension.ml[345,11556+12]..[345,11556+13])
                            Pexp_ident "x" (src/extension.ml[345,11556+12]..[345,11556+13])
                          [
                            <case>
                              pattern (src/extension.ml[346,11575+8]..[346,11575+26])
                                Ppat_construct "Pcty_extension" (src/extension.ml[346,11575+8]..[346,11575+22])
                                Some
                                  pattern (src/extension.ml[346,11575+23]..[346,11575+26])
                                    Ppat_var "ext" (src/extension.ml[346,11575+23]..[346,11575+26])
                              expression (src/extension.ml[346,11575+30]..[346,11575+76])
                                Pexp_apply
                                expression (src/extension.ml[346,11575+34]..[346,11575+35])
                                  Pexp_ident "@" (src/extension.ml[346,11575+34]..[346,11575+35])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[346,11575+30]..[346,11575+33])
                                      Pexp_ident "acc" (src/extension.ml[346,11575+30]..[346,11575+33])
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[346,11575+36]..[346,11575+76])
                                      Pexp_apply
                                      expression (src/extension.ml[346,11575+36]..[346,11575+61])
                                        Pexp_ident "unhandled_extension_error" (src/extension.ml[346,11575+36]..[346,11575+61])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[346,11575+62]..[346,11575+72])
                                            Pexp_construct "Class_type" (src/extension.ml[346,11575+62]..[346,11575+72])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[346,11575+73]..[346,11575+76])
                                            Pexp_ident "ext" (src/extension.ml[346,11575+73]..[346,11575+76])
                                      ]
                                ]
                            <case>
                              pattern (src/extension.ml[347,11652+8]..[347,11652+9])
                                Ppat_var "x" (src/extension.ml[347,11652+8]..[347,11652+9])
                              expression (src/extension.ml[347,11652+13]..[347,11652+40])
                                Pexp_apply
                                expression (src/extension.ml[347,11652+13]..[347,11652+34])
                                  Pexp_send "class_type_desc"
                                  expression (src/extension.ml[347,11652+13]..[347,11652+18])
                                    Pexp_ident "super" (src/extension.ml[347,11652+13]..[347,11652+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[347,11652+35]..[347,11652+36])
                                      Pexp_ident "x" (src/extension.ml[347,11652+35]..[347,11652+36])
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[347,11652+37]..[347,11652+40])
                                      Pexp_ident "acc" (src/extension.ml[347,11652+37]..[347,11652+40])
                                ]
                          ]
                    None
              class_field (src/extension.ml[349,11694+4]..[353,11848+46])
                Pcf_method Public
                  "class_type_field_desc" (src/extension.ml[349,11694+12]..[349,11694+33])
                  Concrete Override
                  expression (src/extension.ml[349,11694+34]..[353,11848+46]) ghost
                    Pexp_poly
                    expression (src/extension.ml[349,11694+34]..[353,11848+46]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[349,11694+34]..[349,11694+35])
                        Ppat_var "x" (src/extension.ml[349,11694+34]..[349,11694+35])
                      expression (src/extension.ml[349,11694+36]..[353,11848+46]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/extension.ml[349,11694+36]..[349,11694+39])
                          Ppat_var "acc" (src/extension.ml[349,11694+36]..[349,11694+39])
                        expression (src/extension.ml[350,11736+6]..[353,11848+46])
                          Pexp_match
                          expression (src/extension.ml[350,11736+12]..[350,11736+13])
                            Pexp_ident "x" (src/extension.ml[350,11736+12]..[350,11736+13])
                          [
                            <case>
                              pattern (src/extension.ml[351,11755+8]..[351,11755+26])
                                Ppat_construct "Pctf_extension" (src/extension.ml[351,11755+8]..[351,11755+22])
                                Some
                                  pattern (src/extension.ml[351,11755+23]..[351,11755+26])
                                    Ppat_var "ext" (src/extension.ml[351,11755+23]..[351,11755+26])
                              expression (src/extension.ml[352,11785+10]..[352,11785+62])
                                Pexp_apply
                                expression (src/extension.ml[352,11785+14]..[352,11785+15])
                                  Pexp_ident "@" (src/extension.ml[352,11785+14]..[352,11785+15])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[352,11785+10]..[352,11785+13])
                                      Pexp_ident "acc" (src/extension.ml[352,11785+10]..[352,11785+13])
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[352,11785+16]..[352,11785+62])
                                      Pexp_apply
                                      expression (src/extension.ml[352,11785+16]..[352,11785+41])
                                        Pexp_ident "unhandled_extension_error" (src/extension.ml[352,11785+16]..[352,11785+41])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[352,11785+42]..[352,11785+58])
                                            Pexp_construct "Class_type_field" (src/extension.ml[352,11785+42]..[352,11785+58])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[352,11785+59]..[352,11785+62])
                                            Pexp_ident "ext" (src/extension.ml[352,11785+59]..[352,11785+62])
                                      ]
                                ]
                            <case>
                              pattern (src/extension.ml[353,11848+8]..[353,11848+9])
                                Ppat_var "x" (src/extension.ml[353,11848+8]..[353,11848+9])
                              expression (src/extension.ml[353,11848+13]..[353,11848+46])
                                Pexp_apply
                                expression (src/extension.ml[353,11848+13]..[353,11848+40])
                                  Pexp_send "class_type_field_desc"
                                  expression (src/extension.ml[353,11848+13]..[353,11848+18])
                                    Pexp_ident "super" (src/extension.ml[353,11848+13]..[353,11848+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[353,11848+41]..[353,11848+42])
                                      Pexp_ident "x" (src/extension.ml[353,11848+41]..[353,11848+42])
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[353,11848+43]..[353,11848+46])
                                      Pexp_ident "acc" (src/extension.ml[353,11848+43]..[353,11848+46])
                                ]
                          ]
                    None
              class_field (src/extension.ml[355,11896+4]..[358,12027+40])
                Pcf_method Public
                  "class_expr_desc" (src/extension.ml[355,11896+12]..[355,11896+27])
                  Concrete Override
                  expression (src/extension.ml[355,11896+28]..[358,12027+40]) ghost
                    Pexp_poly
                    expression (src/extension.ml[355,11896+28]..[358,12027+40]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[355,11896+28]..[355,11896+29])
                        Ppat_var "x" (src/extension.ml[355,11896+28]..[355,11896+29])
                      expression (src/extension.ml[355,11896+30]..[358,12027+40]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/extension.ml[355,11896+30]..[355,11896+33])
                          Ppat_var "acc" (src/extension.ml[355,11896+30]..[355,11896+33])
                        expression (src/extension.ml[356,11932+6]..[358,12027+40])
                          Pexp_match
                          expression (src/extension.ml[356,11932+12]..[356,11932+13])
                            Pexp_ident "x" (src/extension.ml[356,11932+12]..[356,11932+13])
                          [
                            <case>
                              pattern (src/extension.ml[357,11951+8]..[357,11951+25])
                                Ppat_construct "Pcl_extension" (src/extension.ml[357,11951+8]..[357,11951+21])
                                Some
                                  pattern (src/extension.ml[357,11951+22]..[357,11951+25])
                                    Ppat_var "ext" (src/extension.ml[357,11951+22]..[357,11951+25])
                              expression (src/extension.ml[357,11951+29]..[357,11951+75])
                                Pexp_apply
                                expression (src/extension.ml[357,11951+33]..[357,11951+34])
                                  Pexp_ident "@" (src/extension.ml[357,11951+33]..[357,11951+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[357,11951+29]..[357,11951+32])
                                      Pexp_ident "acc" (src/extension.ml[357,11951+29]..[357,11951+32])
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[357,11951+35]..[357,11951+75])
                                      Pexp_apply
                                      expression (src/extension.ml[357,11951+35]..[357,11951+60])
                                        Pexp_ident "unhandled_extension_error" (src/extension.ml[357,11951+35]..[357,11951+60])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[357,11951+61]..[357,11951+71])
                                            Pexp_construct "Class_expr" (src/extension.ml[357,11951+61]..[357,11951+71])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[357,11951+72]..[357,11951+75])
                                            Pexp_ident "ext" (src/extension.ml[357,11951+72]..[357,11951+75])
                                      ]
                                ]
                            <case>
                              pattern (src/extension.ml[358,12027+8]..[358,12027+9])
                                Ppat_var "x" (src/extension.ml[358,12027+8]..[358,12027+9])
                              expression (src/extension.ml[358,12027+13]..[358,12027+40])
                                Pexp_apply
                                expression (src/extension.ml[358,12027+13]..[358,12027+34])
                                  Pexp_send "class_expr_desc"
                                  expression (src/extension.ml[358,12027+13]..[358,12027+18])
                                    Pexp_ident "super" (src/extension.ml[358,12027+13]..[358,12027+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[358,12027+35]..[358,12027+36])
                                      Pexp_ident "x" (src/extension.ml[358,12027+35]..[358,12027+36])
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[358,12027+37]..[358,12027+40])
                                      Pexp_ident "acc" (src/extension.ml[358,12027+37]..[358,12027+40])
                                ]
                          ]
                    None
              class_field (src/extension.ml[360,12069+4]..[363,12202+41])
                Pcf_method Public
                  "class_field_desc" (src/extension.ml[360,12069+12]..[360,12069+28])
                  Concrete Override
                  expression (src/extension.ml[360,12069+29]..[363,12202+41]) ghost
                    Pexp_poly
                    expression (src/extension.ml[360,12069+29]..[363,12202+41]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[360,12069+29]..[360,12069+30])
                        Ppat_var "x" (src/extension.ml[360,12069+29]..[360,12069+30])
                      expression (src/extension.ml[360,12069+31]..[363,12202+41]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/extension.ml[360,12069+31]..[360,12069+34])
                          Ppat_var "acc" (src/extension.ml[360,12069+31]..[360,12069+34])
                        expression (src/extension.ml[361,12106+6]..[363,12202+41])
                          Pexp_match
                          expression (src/extension.ml[361,12106+12]..[361,12106+13])
                            Pexp_ident "x" (src/extension.ml[361,12106+12]..[361,12106+13])
                          [
                            <case>
                              pattern (src/extension.ml[362,12125+8]..[362,12125+25])
                                Ppat_construct "Pcf_extension" (src/extension.ml[362,12125+8]..[362,12125+21])
                                Some
                                  pattern (src/extension.ml[362,12125+22]..[362,12125+25])
                                    Ppat_var "ext" (src/extension.ml[362,12125+22]..[362,12125+25])
                              expression (src/extension.ml[362,12125+29]..[362,12125+76])
                                Pexp_apply
                                expression (src/extension.ml[362,12125+33]..[362,12125+34])
                                  Pexp_ident "@" (src/extension.ml[362,12125+33]..[362,12125+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[362,12125+29]..[362,12125+32])
                                      Pexp_ident "acc" (src/extension.ml[362,12125+29]..[362,12125+32])
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[362,12125+35]..[362,12125+76])
                                      Pexp_apply
                                      expression (src/extension.ml[362,12125+35]..[362,12125+60])
                                        Pexp_ident "unhandled_extension_error" (src/extension.ml[362,12125+35]..[362,12125+60])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[362,12125+61]..[362,12125+72])
                                            Pexp_construct "Class_field" (src/extension.ml[362,12125+61]..[362,12125+72])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[362,12125+73]..[362,12125+76])
                                            Pexp_ident "ext" (src/extension.ml[362,12125+73]..[362,12125+76])
                                      ]
                                ]
                            <case>
                              pattern (src/extension.ml[363,12202+8]..[363,12202+9])
                                Ppat_var "x" (src/extension.ml[363,12202+8]..[363,12202+9])
                              expression (src/extension.ml[363,12202+13]..[363,12202+41])
                                Pexp_apply
                                expression (src/extension.ml[363,12202+13]..[363,12202+35])
                                  Pexp_send "class_field_desc"
                                  expression (src/extension.ml[363,12202+13]..[363,12202+18])
                                    Pexp_ident "super" (src/extension.ml[363,12202+13]..[363,12202+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[363,12202+36]..[363,12202+37])
                                      Pexp_ident "x" (src/extension.ml[363,12202+36]..[363,12202+37])
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[363,12202+38]..[363,12202+41])
                                      Pexp_ident "acc" (src/extension.ml[363,12202+38]..[363,12202+41])
                                ]
                          ]
                    None
              class_field (src/extension.ml[365,12245+4]..[368,12379+41])
                Pcf_method Public
                  "module_type_desc" (src/extension.ml[365,12245+12]..[365,12245+28])
                  Concrete Override
                  expression (src/extension.ml[365,12245+29]..[368,12379+41]) ghost
                    Pexp_poly
                    expression (src/extension.ml[365,12245+29]..[368,12379+41]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[365,12245+29]..[365,12245+30])
                        Ppat_var "x" (src/extension.ml[365,12245+29]..[365,12245+30])
                      expression (src/extension.ml[365,12245+31]..[368,12379+41]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/extension.ml[365,12245+31]..[365,12245+34])
                          Ppat_var "acc" (src/extension.ml[365,12245+31]..[365,12245+34])
                        expression (src/extension.ml[366,12282+6]..[368,12379+41])
                          Pexp_match
                          expression (src/extension.ml[366,12282+12]..[366,12282+13])
                            Pexp_ident "x" (src/extension.ml[366,12282+12]..[366,12282+13])
                          [
                            <case>
                              pattern (src/extension.ml[367,12301+8]..[367,12301+26])
                                Ppat_construct "Pmty_extension" (src/extension.ml[367,12301+8]..[367,12301+22])
                                Some
                                  pattern (src/extension.ml[367,12301+23]..[367,12301+26])
                                    Ppat_var "ext" (src/extension.ml[367,12301+23]..[367,12301+26])
                              expression (src/extension.ml[367,12301+30]..[367,12301+77])
                                Pexp_apply
                                expression (src/extension.ml[367,12301+34]..[367,12301+35])
                                  Pexp_ident "@" (src/extension.ml[367,12301+34]..[367,12301+35])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[367,12301+30]..[367,12301+33])
                                      Pexp_ident "acc" (src/extension.ml[367,12301+30]..[367,12301+33])
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[367,12301+36]..[367,12301+77])
                                      Pexp_apply
                                      expression (src/extension.ml[367,12301+36]..[367,12301+61])
                                        Pexp_ident "unhandled_extension_error" (src/extension.ml[367,12301+36]..[367,12301+61])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[367,12301+62]..[367,12301+73])
                                            Pexp_construct "Module_type" (src/extension.ml[367,12301+62]..[367,12301+73])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[367,12301+74]..[367,12301+77])
                                            Pexp_ident "ext" (src/extension.ml[367,12301+74]..[367,12301+77])
                                      ]
                                ]
                            <case>
                              pattern (src/extension.ml[368,12379+8]..[368,12379+9])
                                Ppat_var "x" (src/extension.ml[368,12379+8]..[368,12379+9])
                              expression (src/extension.ml[368,12379+13]..[368,12379+41])
                                Pexp_apply
                                expression (src/extension.ml[368,12379+13]..[368,12379+35])
                                  Pexp_send "module_type_desc"
                                  expression (src/extension.ml[368,12379+13]..[368,12379+18])
                                    Pexp_ident "super" (src/extension.ml[368,12379+13]..[368,12379+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[368,12379+36]..[368,12379+37])
                                      Pexp_ident "x" (src/extension.ml[368,12379+36]..[368,12379+37])
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[368,12379+38]..[368,12379+41])
                                      Pexp_ident "acc" (src/extension.ml[368,12379+38]..[368,12379+41])
                                ]
                          ]
                    None
              class_field (src/extension.ml[370,12422+4]..[374,12577+44])
                Pcf_method Public
                  "signature_item_desc" (src/extension.ml[370,12422+12]..[370,12422+31])
                  Concrete Override
                  expression (src/extension.ml[370,12422+32]..[374,12577+44]) ghost
                    Pexp_poly
                    expression (src/extension.ml[370,12422+32]..[374,12577+44]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[370,12422+32]..[370,12422+33])
                        Ppat_var "x" (src/extension.ml[370,12422+32]..[370,12422+33])
                      expression (src/extension.ml[370,12422+34]..[374,12577+44]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/extension.ml[370,12422+34]..[370,12422+37])
                          Ppat_var "acc" (src/extension.ml[370,12422+34]..[370,12422+37])
                        expression (src/extension.ml[371,12462+6]..[374,12577+44])
                          Pexp_match
                          expression (src/extension.ml[371,12462+12]..[371,12462+13])
                            Pexp_ident "x" (src/extension.ml[371,12462+12]..[371,12462+13])
                          [
                            <case>
                              pattern (src/extension.ml[372,12481+8]..[372,12481+31])
                                Ppat_construct "Psig_extension" (src/extension.ml[372,12481+8]..[372,12481+22])
                                Some
                                  pattern (src/extension.ml[372,12481+23]..[372,12481+31])
                                    Ppat_tuple
                                    [
                                      pattern (src/extension.ml[372,12481+24]..[372,12481+27])
                                        Ppat_var "ext" (src/extension.ml[372,12481+24]..[372,12481+27])
                                      pattern (src/extension.ml[372,12481+29]..[372,12481+30])
                                        Ppat_any
                                    ]
                              expression (src/extension.ml[373,12516+10]..[373,12516+60])
                                Pexp_apply
                                expression (src/extension.ml[373,12516+14]..[373,12516+15])
                                  Pexp_ident "@" (src/extension.ml[373,12516+14]..[373,12516+15])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[373,12516+10]..[373,12516+13])
                                      Pexp_ident "acc" (src/extension.ml[373,12516+10]..[373,12516+13])
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[373,12516+16]..[373,12516+60])
                                      Pexp_apply
                                      expression (src/extension.ml[373,12516+16]..[373,12516+41])
                                        Pexp_ident "unhandled_extension_error" (src/extension.ml[373,12516+16]..[373,12516+41])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[373,12516+42]..[373,12516+56])
                                            Pexp_construct "Signature_item" (src/extension.ml[373,12516+42]..[373,12516+56])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[373,12516+57]..[373,12516+60])
                                            Pexp_ident "ext" (src/extension.ml[373,12516+57]..[373,12516+60])
                                      ]
                                ]
                            <case>
                              pattern (src/extension.ml[374,12577+8]..[374,12577+9])
                                Ppat_var "x" (src/extension.ml[374,12577+8]..[374,12577+9])
                              expression (src/extension.ml[374,12577+13]..[374,12577+44])
                                Pexp_apply
                                expression (src/extension.ml[374,12577+13]..[374,12577+38])
                                  Pexp_send "signature_item_desc"
                                  expression (src/extension.ml[374,12577+13]..[374,12577+18])
                                    Pexp_ident "super" (src/extension.ml[374,12577+13]..[374,12577+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[374,12577+39]..[374,12577+40])
                                      Pexp_ident "x" (src/extension.ml[374,12577+39]..[374,12577+40])
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[374,12577+41]..[374,12577+44])
                                      Pexp_ident "acc" (src/extension.ml[374,12577+41]..[374,12577+44])
                                ]
                          ]
                    None
              class_field (src/extension.ml[376,12623+4]..[379,12757+41])
                Pcf_method Public
                  "module_expr_desc" (src/extension.ml[376,12623+12]..[376,12623+28])
                  Concrete Override
                  expression (src/extension.ml[376,12623+29]..[379,12757+41]) ghost
                    Pexp_poly
                    expression (src/extension.ml[376,12623+29]..[379,12757+41]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[376,12623+29]..[376,12623+30])
                        Ppat_var "x" (src/extension.ml[376,12623+29]..[376,12623+30])
                      expression (src/extension.ml[376,12623+31]..[379,12757+41]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/extension.ml[376,12623+31]..[376,12623+34])
                          Ppat_var "acc" (src/extension.ml[376,12623+31]..[376,12623+34])
                        expression (src/extension.ml[377,12660+6]..[379,12757+41])
                          Pexp_match
                          expression (src/extension.ml[377,12660+12]..[377,12660+13])
                            Pexp_ident "x" (src/extension.ml[377,12660+12]..[377,12660+13])
                          [
                            <case>
                              pattern (src/extension.ml[378,12679+8]..[378,12679+26])
                                Ppat_construct "Pmod_extension" (src/extension.ml[378,12679+8]..[378,12679+22])
                                Some
                                  pattern (src/extension.ml[378,12679+23]..[378,12679+26])
                                    Ppat_var "ext" (src/extension.ml[378,12679+23]..[378,12679+26])
                              expression (src/extension.ml[378,12679+30]..[378,12679+77])
                                Pexp_apply
                                expression (src/extension.ml[378,12679+34]..[378,12679+35])
                                  Pexp_ident "@" (src/extension.ml[378,12679+34]..[378,12679+35])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[378,12679+30]..[378,12679+33])
                                      Pexp_ident "acc" (src/extension.ml[378,12679+30]..[378,12679+33])
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[378,12679+36]..[378,12679+77])
                                      Pexp_apply
                                      expression (src/extension.ml[378,12679+36]..[378,12679+61])
                                        Pexp_ident "unhandled_extension_error" (src/extension.ml[378,12679+36]..[378,12679+61])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[378,12679+62]..[378,12679+73])
                                            Pexp_construct "Module_expr" (src/extension.ml[378,12679+62]..[378,12679+73])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[378,12679+74]..[378,12679+77])
                                            Pexp_ident "ext" (src/extension.ml[378,12679+74]..[378,12679+77])
                                      ]
                                ]
                            <case>
                              pattern (src/extension.ml[379,12757+8]..[379,12757+9])
                                Ppat_var "x" (src/extension.ml[379,12757+8]..[379,12757+9])
                              expression (src/extension.ml[379,12757+13]..[379,12757+41])
                                Pexp_apply
                                expression (src/extension.ml[379,12757+13]..[379,12757+35])
                                  Pexp_send "module_expr_desc"
                                  expression (src/extension.ml[379,12757+13]..[379,12757+18])
                                    Pexp_ident "super" (src/extension.ml[379,12757+13]..[379,12757+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[379,12757+36]..[379,12757+37])
                                      Pexp_ident "x" (src/extension.ml[379,12757+36]..[379,12757+37])
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[379,12757+38]..[379,12757+41])
                                      Pexp_ident "acc" (src/extension.ml[379,12757+38]..[379,12757+41])
                                ]
                          ]
                    None
              class_field (src/extension.ml[381,12800+4]..[385,12955+44])
                Pcf_method Public
                  "structure_item_desc" (src/extension.ml[381,12800+12]..[381,12800+31])
                  Concrete Override
                  expression (src/extension.ml[381,12800+32]..[385,12955+44]) ghost
                    Pexp_poly
                    expression (src/extension.ml[381,12800+32]..[385,12955+44]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[381,12800+32]..[381,12800+33])
                        Ppat_var "x" (src/extension.ml[381,12800+32]..[381,12800+33])
                      expression (src/extension.ml[381,12800+34]..[385,12955+44]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/extension.ml[381,12800+34]..[381,12800+37])
                          Ppat_var "acc" (src/extension.ml[381,12800+34]..[381,12800+37])
                        expression (src/extension.ml[382,12840+6]..[385,12955+44])
                          Pexp_match
                          expression (src/extension.ml[382,12840+12]..[382,12840+13])
                            Pexp_ident "x" (src/extension.ml[382,12840+12]..[382,12840+13])
                          [
                            <case>
                              pattern (src/extension.ml[383,12859+8]..[383,12859+31])
                                Ppat_construct "Pstr_extension" (src/extension.ml[383,12859+8]..[383,12859+22])
                                Some
                                  pattern (src/extension.ml[383,12859+23]..[383,12859+31])
                                    Ppat_tuple
                                    [
                                      pattern (src/extension.ml[383,12859+24]..[383,12859+27])
                                        Ppat_var "ext" (src/extension.ml[383,12859+24]..[383,12859+27])
                                      pattern (src/extension.ml[383,12859+29]..[383,12859+30])
                                        Ppat_any
                                    ]
                              expression (src/extension.ml[384,12894+10]..[384,12894+60])
                                Pexp_apply
                                expression (src/extension.ml[384,12894+14]..[384,12894+15])
                                  Pexp_ident "@" (src/extension.ml[384,12894+14]..[384,12894+15])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[384,12894+10]..[384,12894+13])
                                      Pexp_ident "acc" (src/extension.ml[384,12894+10]..[384,12894+13])
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[384,12894+16]..[384,12894+60])
                                      Pexp_apply
                                      expression (src/extension.ml[384,12894+16]..[384,12894+41])
                                        Pexp_ident "unhandled_extension_error" (src/extension.ml[384,12894+16]..[384,12894+41])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[384,12894+42]..[384,12894+56])
                                            Pexp_construct "Structure_item" (src/extension.ml[384,12894+42]..[384,12894+56])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (src/extension.ml[384,12894+57]..[384,12894+60])
                                            Pexp_ident "ext" (src/extension.ml[384,12894+57]..[384,12894+60])
                                      ]
                                ]
                            <case>
                              pattern (src/extension.ml[385,12955+8]..[385,12955+9])
                                Ppat_var "x" (src/extension.ml[385,12955+8]..[385,12955+9])
                              expression (src/extension.ml[385,12955+13]..[385,12955+44])
                                Pexp_apply
                                expression (src/extension.ml[385,12955+13]..[385,12955+38])
                                  Pexp_send "structure_item_desc"
                                  expression (src/extension.ml[385,12955+13]..[385,12955+18])
                                    Pexp_ident "super" (src/extension.ml[385,12955+13]..[385,12955+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[385,12955+39]..[385,12955+40])
                                      Pexp_ident "x" (src/extension.ml[385,12955+39]..[385,12955+40])
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[385,12955+41]..[385,12955+44])
                                      Pexp_ident "acc" (src/extension.ml[385,12955+41]..[385,12955+44])
                                ]
                          ]
                    None
            ]
    ]
  structure_item (src/extension.ml[388,13007+0]..[390,13059+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/extension.ml[388,13007+4]..[388,13007+27])
          Ppat_var "error_list_to_exception" (src/extension.ml[388,13007+4]..[388,13007+27])
        expression (src/extension.ml[388,13007+30]..[390,13059+40])
          Pexp_function
          [
            <case>
              pattern (src/extension.ml[389,13046+4]..[389,13046+6])
                Ppat_construct "[]" (src/extension.ml[389,13046+4]..[389,13046+6])
                None
              expression (src/extension.ml[389,13046+10]..[389,13046+12])
                Pexp_construct "()" (src/extension.ml[389,13046+10]..[389,13046+12])
                None
            <case>
              pattern (src/extension.ml[390,13059+4]..[390,13059+12])
                Ppat_construct "::" (src/extension.ml[390,13059+8]..[390,13059+10])
                Some
                  pattern (src/extension.ml[390,13059+4]..[390,13059+12]) ghost
                    Ppat_tuple
                    [
                      pattern (src/extension.ml[390,13059+4]..[390,13059+7])
                        Ppat_var "err" (src/extension.ml[390,13059+4]..[390,13059+7])
                      pattern (src/extension.ml[390,13059+11]..[390,13059+12])
                        Ppat_any
                    ]
              expression (src/extension.ml[390,13059+16]..[390,13059+40])
                Pexp_apply
                expression (src/extension.ml[390,13059+16]..[390,13059+36])
                  Pexp_ident "Location.Error.raise" (src/extension.ml[390,13059+16]..[390,13059+36])
                [
                  <arg>
                  Nolabel
                    expression (src/extension.ml[390,13059+37]..[390,13059+40])
                      Pexp_ident "err" (src/extension.ml[390,13059+37]..[390,13059+40])
                ]
          ]
    ]
  structure_item (src/extension.ml[392,13101+0]..[443,14742+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/extension.ml[392,13101+4]..[392,13101+16])
          Ppat_var "check_unused" (src/extension.ml[392,13101+4]..[392,13101+16])
        expression (src/extension.ml[393,13120+2]..[443,14742+5])
          Pexp_object
          class_structure
            pattern (src/extension.ml[393,13120+8]..[393,13120+8]) ghost
              Ppat_any
            [
              class_field (src/extension.ml[394,13129+4]..[394,13129+29])
                Pcf_inherit Fresh
                  class_expr (src/extension.ml[394,13129+12]..[394,13129+29])
                    Pcl_constr "Ast_traverse.iter" (src/extension.ml[394,13129+12]..[394,13129+29])
                    []
                  None
              class_field (src/extension.ml[396,13160+4]..[398,13236+71])
                Pcf_method Public
                  "extension" (src/extension.ml[396,13160+12]..[396,13160+21])
                  Concrete Override
                  expression (src/extension.ml[396,13160+22]..[398,13236+71]) ghost
                    Pexp_poly
                    expression (src/extension.ml[396,13160+22]..[398,13236+71]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[396,13160+22]..[396,13160+31])
                        Ppat_tuple
                        [
                          pattern (src/extension.ml[396,13160+23]..[396,13160+27])
                            Ppat_var "name" (src/extension.ml[396,13160+23]..[396,13160+27])
                          pattern (src/extension.ml[396,13160+29]..[396,13160+30])
                            Ppat_any
                        ]
                      expression (src/extension.ml[397,13194+6]..[398,13236+71])
                        Pexp_apply
                        expression (src/extension.ml[397,13194+6]..[397,13194+27])
                          Pexp_ident "Location.raise_errorf" (src/extension.ml[397,13194+6]..[397,13194+27])
                        [
                          <arg>
                          Labelled "loc"
                            expression (src/extension.ml[397,13194+33]..[397,13194+41])
                              Pexp_field
                              expression (src/extension.ml[397,13194+33]..[397,13194+37])
                                Pexp_ident "name" (src/extension.ml[397,13194+33]..[397,13194+37])
                              "loc" (src/extension.ml[397,13194+38]..[397,13194+41])
                          <arg>
                          Nolabel
                            expression (src/extension.ml[398,13236+8]..[398,13236+71])
                              Pexp_constant PConst_string("extension not expected here, Ppxlib.Extension needs updating!",(src/extension.ml[398,13236+9]..[398,13236+70]),None)
                        ]
                    None
              class_field (src/extension.ml[400,13309+4]..[402,13401+32])
                Pcf_method Public
                  "core_type_desc" (src/extension.ml[400,13309+12]..[400,13309+26])
                  Concrete Override
                  expression (src/extension.ml[400,13309+27]..[402,13401+32]) ghost
                    Pexp_poly
                    expression (src/extension.ml[400,13309+27]..[402,13401+32]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[400,13309+27]..[400,13309+28])
                        Ppat_var "x" (src/extension.ml[400,13309+27]..[400,13309+28])
                      expression (src/extension.ml[401,13340+6]..[402,13401+32])
                        Pexp_apply
                        expression (src/extension.ml[402,13401+6]..[402,13401+8])
                          Pexp_ident "|>" (src/extension.ml[402,13401+6]..[402,13401+8])
                        [
                          <arg>
                          Nolabel
                            expression (src/extension.ml[401,13340+6]..[401,13340+60])
                              Pexp_apply
                              expression (src/extension.ml[401,13340+6]..[401,13340+55])
                                Pexp_send "core_type_desc"
                                expression (src/extension.ml[401,13340+6]..[401,13340+40])
                                  Pexp_ident "collect_unhandled_extension_errors" (src/extension.ml[401,13340+6]..[401,13340+40])
                              [
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[401,13340+56]..[401,13340+57])
                                    Pexp_ident "x" (src/extension.ml[401,13340+56]..[401,13340+57])
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[401,13340+58]..[401,13340+60])
                                    Pexp_construct "[]" (src/extension.ml[401,13340+58]..[401,13340+60])
                                    None
                              ]
                          <arg>
                          Nolabel
                            expression (src/extension.ml[402,13401+9]..[402,13401+32])
                              Pexp_ident "error_list_to_exception" (src/extension.ml[402,13401+9]..[402,13401+32])
                        ]
                    None
              class_field (src/extension.ml[404,13435+4]..[406,13523+32])
                Pcf_method Public
                  "pattern_desc" (src/extension.ml[404,13435+12]..[404,13435+24])
                  Concrete Override
                  expression (src/extension.ml[404,13435+25]..[406,13523+32]) ghost
                    Pexp_poly
                    expression (src/extension.ml[404,13435+25]..[406,13523+32]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[404,13435+25]..[404,13435+26])
                        Ppat_var "x" (src/extension.ml[404,13435+25]..[404,13435+26])
                      expression (src/extension.ml[405,13464+6]..[406,13523+32])
                        Pexp_apply
                        expression (src/extension.ml[406,13523+6]..[406,13523+8])
                          Pexp_ident "|>" (src/extension.ml[406,13523+6]..[406,13523+8])
                        [
                          <arg>
                          Nolabel
                            expression (src/extension.ml[405,13464+6]..[405,13464+58])
                              Pexp_apply
                              expression (src/extension.ml[405,13464+6]..[405,13464+53])
                                Pexp_send "pattern_desc"
                                expression (src/extension.ml[405,13464+6]..[405,13464+40])
                                  Pexp_ident "collect_unhandled_extension_errors" (src/extension.ml[405,13464+6]..[405,13464+40])
                              [
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[405,13464+54]..[405,13464+55])
                                    Pexp_ident "x" (src/extension.ml[405,13464+54]..[405,13464+55])
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[405,13464+56]..[405,13464+58])
                                    Pexp_construct "[]" (src/extension.ml[405,13464+56]..[405,13464+58])
                                    None
                              ]
                          <arg>
                          Nolabel
                            expression (src/extension.ml[406,13523+9]..[406,13523+32])
                              Pexp_ident "error_list_to_exception" (src/extension.ml[406,13523+9]..[406,13523+32])
                        ]
                    None
              class_field (src/extension.ml[408,13557+4]..[410,13651+32])
                Pcf_method Public
                  "expression_desc" (src/extension.ml[408,13557+12]..[408,13557+27])
                  Concrete Override
                  expression (src/extension.ml[408,13557+28]..[410,13651+32]) ghost
                    Pexp_poly
                    expression (src/extension.ml[408,13557+28]..[410,13651+32]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[408,13557+28]..[408,13557+29])
                        Ppat_var "x" (src/extension.ml[408,13557+28]..[408,13557+29])
                      expression (src/extension.ml[409,13589+6]..[410,13651+32])
                        Pexp_apply
                        expression (src/extension.ml[410,13651+6]..[410,13651+8])
                          Pexp_ident "|>" (src/extension.ml[410,13651+6]..[410,13651+8])
                        [
                          <arg>
                          Nolabel
                            expression (src/extension.ml[409,13589+6]..[409,13589+61])
                              Pexp_apply
                              expression (src/extension.ml[409,13589+6]..[409,13589+56])
                                Pexp_send "expression_desc"
                                expression (src/extension.ml[409,13589+6]..[409,13589+40])
                                  Pexp_ident "collect_unhandled_extension_errors" (src/extension.ml[409,13589+6]..[409,13589+40])
                              [
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[409,13589+57]..[409,13589+58])
                                    Pexp_ident "x" (src/extension.ml[409,13589+57]..[409,13589+58])
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[409,13589+59]..[409,13589+61])
                                    Pexp_construct "[]" (src/extension.ml[409,13589+59]..[409,13589+61])
                                    None
                              ]
                          <arg>
                          Nolabel
                            expression (src/extension.ml[410,13651+9]..[410,13651+32])
                              Pexp_ident "error_list_to_exception" (src/extension.ml[410,13651+9]..[410,13651+32])
                        ]
                    None
              class_field (src/extension.ml[412,13685+4]..[414,13779+32])
                Pcf_method Public
                  "class_type_desc" (src/extension.ml[412,13685+12]..[412,13685+27])
                  Concrete Override
                  expression (src/extension.ml[412,13685+28]..[414,13779+32]) ghost
                    Pexp_poly
                    expression (src/extension.ml[412,13685+28]..[414,13779+32]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[412,13685+28]..[412,13685+29])
                        Ppat_var "x" (src/extension.ml[412,13685+28]..[412,13685+29])
                      expression (src/extension.ml[413,13717+6]..[414,13779+32])
                        Pexp_apply
                        expression (src/extension.ml[414,13779+6]..[414,13779+8])
                          Pexp_ident "|>" (src/extension.ml[414,13779+6]..[414,13779+8])
                        [
                          <arg>
                          Nolabel
                            expression (src/extension.ml[413,13717+6]..[413,13717+61])
                              Pexp_apply
                              expression (src/extension.ml[413,13717+6]..[413,13717+56])
                                Pexp_send "class_type_desc"
                                expression (src/extension.ml[413,13717+6]..[413,13717+40])
                                  Pexp_ident "collect_unhandled_extension_errors" (src/extension.ml[413,13717+6]..[413,13717+40])
                              [
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[413,13717+57]..[413,13717+58])
                                    Pexp_ident "x" (src/extension.ml[413,13717+57]..[413,13717+58])
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[413,13717+59]..[413,13717+61])
                                    Pexp_construct "[]" (src/extension.ml[413,13717+59]..[413,13717+61])
                                    None
                              ]
                          <arg>
                          Nolabel
                            expression (src/extension.ml[414,13779+9]..[414,13779+32])
                              Pexp_ident "error_list_to_exception" (src/extension.ml[414,13779+9]..[414,13779+32])
                        ]
                    None
              class_field (src/extension.ml[416,13813+4]..[418,13919+32])
                Pcf_method Public
                  "class_type_field_desc" (src/extension.ml[416,13813+12]..[416,13813+33])
                  Concrete Override
                  expression (src/extension.ml[416,13813+34]..[418,13919+32]) ghost
                    Pexp_poly
                    expression (src/extension.ml[416,13813+34]..[418,13919+32]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[416,13813+34]..[416,13813+35])
                        Ppat_var "x" (src/extension.ml[416,13813+34]..[416,13813+35])
                      expression (src/extension.ml[417,13851+6]..[418,13919+32])
                        Pexp_apply
                        expression (src/extension.ml[418,13919+6]..[418,13919+8])
                          Pexp_ident "|>" (src/extension.ml[418,13919+6]..[418,13919+8])
                        [
                          <arg>
                          Nolabel
                            expression (src/extension.ml[417,13851+6]..[417,13851+67])
                              Pexp_apply
                              expression (src/extension.ml[417,13851+6]..[417,13851+62])
                                Pexp_send "class_type_field_desc"
                                expression (src/extension.ml[417,13851+6]..[417,13851+40])
                                  Pexp_ident "collect_unhandled_extension_errors" (src/extension.ml[417,13851+6]..[417,13851+40])
                              [
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[417,13851+63]..[417,13851+64])
                                    Pexp_ident "x" (src/extension.ml[417,13851+63]..[417,13851+64])
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[417,13851+65]..[417,13851+67])
                                    Pexp_construct "[]" (src/extension.ml[417,13851+65]..[417,13851+67])
                                    None
                              ]
                          <arg>
                          Nolabel
                            expression (src/extension.ml[418,13919+9]..[418,13919+32])
                              Pexp_ident "error_list_to_exception" (src/extension.ml[418,13919+9]..[418,13919+32])
                        ]
                    None
              class_field (src/extension.ml[420,13953+4]..[422,14047+32])
                Pcf_method Public
                  "class_expr_desc" (src/extension.ml[420,13953+12]..[420,13953+27])
                  Concrete Override
                  expression (src/extension.ml[420,13953+28]..[422,14047+32]) ghost
                    Pexp_poly
                    expression (src/extension.ml[420,13953+28]..[422,14047+32]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[420,13953+28]..[420,13953+29])
                        Ppat_var "x" (src/extension.ml[420,13953+28]..[420,13953+29])
                      expression (src/extension.ml[421,13985+6]..[422,14047+32])
                        Pexp_apply
                        expression (src/extension.ml[422,14047+6]..[422,14047+8])
                          Pexp_ident "|>" (src/extension.ml[422,14047+6]..[422,14047+8])
                        [
                          <arg>
                          Nolabel
                            expression (src/extension.ml[421,13985+6]..[421,13985+61])
                              Pexp_apply
                              expression (src/extension.ml[421,13985+6]..[421,13985+56])
                                Pexp_send "class_expr_desc"
                                expression (src/extension.ml[421,13985+6]..[421,13985+40])
                                  Pexp_ident "collect_unhandled_extension_errors" (src/extension.ml[421,13985+6]..[421,13985+40])
                              [
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[421,13985+57]..[421,13985+58])
                                    Pexp_ident "x" (src/extension.ml[421,13985+57]..[421,13985+58])
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[421,13985+59]..[421,13985+61])
                                    Pexp_construct "[]" (src/extension.ml[421,13985+59]..[421,13985+61])
                                    None
                              ]
                          <arg>
                          Nolabel
                            expression (src/extension.ml[422,14047+9]..[422,14047+32])
                              Pexp_ident "error_list_to_exception" (src/extension.ml[422,14047+9]..[422,14047+32])
                        ]
                    None
              class_field (src/extension.ml[424,14081+4]..[426,14177+32])
                Pcf_method Public
                  "class_field_desc" (src/extension.ml[424,14081+12]..[424,14081+28])
                  Concrete Override
                  expression (src/extension.ml[424,14081+29]..[426,14177+32]) ghost
                    Pexp_poly
                    expression (src/extension.ml[424,14081+29]..[426,14177+32]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[424,14081+29]..[424,14081+30])
                        Ppat_var "x" (src/extension.ml[424,14081+29]..[424,14081+30])
                      expression (src/extension.ml[425,14114+6]..[426,14177+32])
                        Pexp_apply
                        expression (src/extension.ml[426,14177+6]..[426,14177+8])
                          Pexp_ident "|>" (src/extension.ml[426,14177+6]..[426,14177+8])
                        [
                          <arg>
                          Nolabel
                            expression (src/extension.ml[425,14114+6]..[425,14114+62])
                              Pexp_apply
                              expression (src/extension.ml[425,14114+6]..[425,14114+57])
                                Pexp_send "class_field_desc"
                                expression (src/extension.ml[425,14114+6]..[425,14114+40])
                                  Pexp_ident "collect_unhandled_extension_errors" (src/extension.ml[425,14114+6]..[425,14114+40])
                              [
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[425,14114+58]..[425,14114+59])
                                    Pexp_ident "x" (src/extension.ml[425,14114+58]..[425,14114+59])
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[425,14114+60]..[425,14114+62])
                                    Pexp_construct "[]" (src/extension.ml[425,14114+60]..[425,14114+62])
                                    None
                              ]
                          <arg>
                          Nolabel
                            expression (src/extension.ml[426,14177+9]..[426,14177+32])
                              Pexp_ident "error_list_to_exception" (src/extension.ml[426,14177+9]..[426,14177+32])
                        ]
                    None
              class_field (src/extension.ml[428,14211+4]..[430,14307+32])
                Pcf_method Public
                  "module_type_desc" (src/extension.ml[428,14211+12]..[428,14211+28])
                  Concrete Override
                  expression (src/extension.ml[428,14211+29]..[430,14307+32]) ghost
                    Pexp_poly
                    expression (src/extension.ml[428,14211+29]..[430,14307+32]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[428,14211+29]..[428,14211+30])
                        Ppat_var "x" (src/extension.ml[428,14211+29]..[428,14211+30])
                      expression (src/extension.ml[429,14244+6]..[430,14307+32])
                        Pexp_apply
                        expression (src/extension.ml[430,14307+6]..[430,14307+8])
                          Pexp_ident "|>" (src/extension.ml[430,14307+6]..[430,14307+8])
                        [
                          <arg>
                          Nolabel
                            expression (src/extension.ml[429,14244+6]..[429,14244+62])
                              Pexp_apply
                              expression (src/extension.ml[429,14244+6]..[429,14244+57])
                                Pexp_send "module_type_desc"
                                expression (src/extension.ml[429,14244+6]..[429,14244+40])
                                  Pexp_ident "collect_unhandled_extension_errors" (src/extension.ml[429,14244+6]..[429,14244+40])
                              [
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[429,14244+58]..[429,14244+59])
                                    Pexp_ident "x" (src/extension.ml[429,14244+58]..[429,14244+59])
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[429,14244+60]..[429,14244+62])
                                    Pexp_construct "[]" (src/extension.ml[429,14244+60]..[429,14244+62])
                                    None
                              ]
                          <arg>
                          Nolabel
                            expression (src/extension.ml[430,14307+9]..[430,14307+32])
                              Pexp_ident "error_list_to_exception" (src/extension.ml[430,14307+9]..[430,14307+32])
                        ]
                    None
              class_field (src/extension.ml[432,14341+4]..[434,14443+32])
                Pcf_method Public
                  "signature_item_desc" (src/extension.ml[432,14341+12]..[432,14341+31])
                  Concrete Override
                  expression (src/extension.ml[432,14341+32]..[434,14443+32]) ghost
                    Pexp_poly
                    expression (src/extension.ml[432,14341+32]..[434,14443+32]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[432,14341+32]..[432,14341+33])
                        Ppat_var "x" (src/extension.ml[432,14341+32]..[432,14341+33])
                      expression (src/extension.ml[433,14377+6]..[434,14443+32])
                        Pexp_apply
                        expression (src/extension.ml[434,14443+6]..[434,14443+8])
                          Pexp_ident "|>" (src/extension.ml[434,14443+6]..[434,14443+8])
                        [
                          <arg>
                          Nolabel
                            expression (src/extension.ml[433,14377+6]..[433,14377+65])
                              Pexp_apply
                              expression (src/extension.ml[433,14377+6]..[433,14377+60])
                                Pexp_send "signature_item_desc"
                                expression (src/extension.ml[433,14377+6]..[433,14377+40])
                                  Pexp_ident "collect_unhandled_extension_errors" (src/extension.ml[433,14377+6]..[433,14377+40])
                              [
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[433,14377+61]..[433,14377+62])
                                    Pexp_ident "x" (src/extension.ml[433,14377+61]..[433,14377+62])
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[433,14377+63]..[433,14377+65])
                                    Pexp_construct "[]" (src/extension.ml[433,14377+63]..[433,14377+65])
                                    None
                              ]
                          <arg>
                          Nolabel
                            expression (src/extension.ml[434,14443+9]..[434,14443+32])
                              Pexp_ident "error_list_to_exception" (src/extension.ml[434,14443+9]..[434,14443+32])
                        ]
                    None
              class_field (src/extension.ml[436,14477+4]..[438,14573+32])
                Pcf_method Public
                  "module_expr_desc" (src/extension.ml[436,14477+12]..[436,14477+28])
                  Concrete Override
                  expression (src/extension.ml[436,14477+29]..[438,14573+32]) ghost
                    Pexp_poly
                    expression (src/extension.ml[436,14477+29]..[438,14573+32]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[436,14477+29]..[436,14477+30])
                        Ppat_var "x" (src/extension.ml[436,14477+29]..[436,14477+30])
                      expression (src/extension.ml[437,14510+6]..[438,14573+32])
                        Pexp_apply
                        expression (src/extension.ml[438,14573+6]..[438,14573+8])
                          Pexp_ident "|>" (src/extension.ml[438,14573+6]..[438,14573+8])
                        [
                          <arg>
                          Nolabel
                            expression (src/extension.ml[437,14510+6]..[437,14510+62])
                              Pexp_apply
                              expression (src/extension.ml[437,14510+6]..[437,14510+57])
                                Pexp_send "module_expr_desc"
                                expression (src/extension.ml[437,14510+6]..[437,14510+40])
                                  Pexp_ident "collect_unhandled_extension_errors" (src/extension.ml[437,14510+6]..[437,14510+40])
                              [
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[437,14510+58]..[437,14510+59])
                                    Pexp_ident "x" (src/extension.ml[437,14510+58]..[437,14510+59])
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[437,14510+60]..[437,14510+62])
                                    Pexp_construct "[]" (src/extension.ml[437,14510+60]..[437,14510+62])
                                    None
                              ]
                          <arg>
                          Nolabel
                            expression (src/extension.ml[438,14573+9]..[438,14573+32])
                              Pexp_ident "error_list_to_exception" (src/extension.ml[438,14573+9]..[438,14573+32])
                        ]
                    None
              class_field (src/extension.ml[440,14607+4]..[442,14709+32])
                Pcf_method Public
                  "structure_item_desc" (src/extension.ml[440,14607+12]..[440,14607+31])
                  Concrete Override
                  expression (src/extension.ml[440,14607+32]..[442,14709+32]) ghost
                    Pexp_poly
                    expression (src/extension.ml[440,14607+32]..[442,14709+32]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[440,14607+32]..[440,14607+33])
                        Ppat_var "x" (src/extension.ml[440,14607+32]..[440,14607+33])
                      expression (src/extension.ml[441,14643+6]..[442,14709+32])
                        Pexp_apply
                        expression (src/extension.ml[442,14709+6]..[442,14709+8])
                          Pexp_ident "|>" (src/extension.ml[442,14709+6]..[442,14709+8])
                        [
                          <arg>
                          Nolabel
                            expression (src/extension.ml[441,14643+6]..[441,14643+65])
                              Pexp_apply
                              expression (src/extension.ml[441,14643+6]..[441,14643+60])
                                Pexp_send "structure_item_desc"
                                expression (src/extension.ml[441,14643+6]..[441,14643+40])
                                  Pexp_ident "collect_unhandled_extension_errors" (src/extension.ml[441,14643+6]..[441,14643+40])
                              [
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[441,14643+61]..[441,14643+62])
                                    Pexp_ident "x" (src/extension.ml[441,14643+61]..[441,14643+62])
                                <arg>
                                Nolabel
                                  expression (src/extension.ml[441,14643+63]..[441,14643+65])
                                    Pexp_construct "[]" (src/extension.ml[441,14643+63]..[441,14643+65])
                                    None
                              ]
                          <arg>
                          Nolabel
                            expression (src/extension.ml[442,14709+9]..[442,14709+32])
                              Pexp_ident "error_list_to_exception" (src/extension.ml[442,14709+9]..[442,14709+32])
                        ]
                    None
            ]
    ]
  structure_item (src/extension.ml[445,14749+0]..[470,15768+3])
    Pstr_module
    "V3" (src/extension.ml[445,14749+7]..[445,14749+9])
      module_expr (src/extension.ml[445,14749+12]..[470,15768+3])
        Pmod_structure
        [
          structure_item (src/extension.ml[446,14768+2]..[446,14768+19])
            Pstr_type Nonrec
            [
              type_declaration "t" (src/extension.ml[446,14768+14]..[446,14768+15]) (src/extension.ml[446,14768+2]..[446,14768+19])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/extension.ml[446,14768+18]..[446,14768+19])
                      Ptyp_constr "t" (src/extension.ml[446,14768+18]..[446,14768+19])
                      []
            ]
          structure_item (src/extension.ml[448,14789+2]..[452,14984+20])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[448,14789+6]..[448,14789+13])
                  Ppat_var "declare" (src/extension.ml[448,14789+6]..[448,14789+13])
                expression (src/extension.ml[448,14789+14]..[452,14984+20]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/extension.ml[448,14789+14]..[448,14789+18])
                    Ppat_var "name" (src/extension.ml[448,14789+14]..[448,14789+18])
                  expression (src/extension.ml[448,14789+19]..[452,14984+20]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/extension.ml[448,14789+19]..[448,14789+26])
                      Ppat_var "context" (src/extension.ml[448,14789+19]..[448,14789+26])
                    expression (src/extension.ml[448,14789+27]..[452,14984+20]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[448,14789+27]..[448,14789+34])
                        Ppat_var "pattern" (src/extension.ml[448,14789+27]..[448,14789+34])
                      expression (src/extension.ml[448,14789+35]..[452,14984+20]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/extension.ml[448,14789+35]..[448,14789+36])
                          Ppat_var "k" (src/extension.ml[448,14789+35]..[448,14789+36])
                        expression (src/extension.ml[449,14828+4]..[452,14984+20])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/extension.ml[449,14828+8]..[449,14828+15])
                                Ppat_var "pattern" (src/extension.ml[449,14828+8]..[449,14828+15])
                              expression (src/extension.ml[449,14828+18]..[449,14828+71])
                                Pexp_apply
                                expression (src/extension.ml[449,14828+18]..[449,14828+40])
                                  Pexp_ident "Ast_pattern.map_result" (src/extension.ml[449,14828+18]..[449,14828+40])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[449,14828+41]..[449,14828+48])
                                      Pexp_ident "pattern" (src/extension.ml[449,14828+41]..[449,14828+48])
                                  <arg>
                                  Labelled "f"
                                    expression (src/extension.ml[449,14828+52]..[449,14828+71])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (src/extension.ml[449,14828+57]..[449,14828+58])
                                        Ppat_var "x" (src/extension.ml[449,14828+57]..[449,14828+58])
                                      expression (src/extension.ml[449,14828+62]..[449,14828+70])
                                        Pexp_construct "Simple" (src/extension.ml[449,14828+62]..[449,14828+68])
                                        Some
                                          expression (src/extension.ml[449,14828+69]..[449,14828+70])
                                            Pexp_ident "x" (src/extension.ml[449,14828+69]..[449,14828+70])
                                ]
                          ]
                          expression (src/extension.ml[450,14903+4]..[452,14984+20])
                            Pexp_construct "T" (src/extension.ml[450,14903+4]..[450,14903+5])
                            Some
                              expression (src/extension.ml[451,14909+6]..[452,14984+20])
                                Pexp_apply
                                expression (src/extension.ml[451,14909+7]..[451,14909+16])
                                  Pexp_ident "M.declare" (src/extension.ml[451,14909+7]..[451,14909+16])
                                [
                                  <arg>
                                  Labelled "with_arg"
                                    expression (src/extension.ml[451,14909+27]..[451,14909+32])
                                      Pexp_construct "false" (src/extension.ml[451,14909+27]..[451,14909+32])
                                      None
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[451,14909+33]..[451,14909+37])
                                      Pexp_ident "name" (src/extension.ml[451,14909+33]..[451,14909+37])
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[451,14909+38]..[451,14909+45])
                                      Pexp_ident "context" (src/extension.ml[451,14909+38]..[451,14909+45])
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[451,14909+46]..[451,14909+53])
                                      Pexp_ident "pattern" (src/extension.ml[451,14909+46]..[451,14909+53])
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[451,14909+54]..[452,14984+19])
                                      Pexp_fun
                                      Labelled "ctxt"
                                      None
                                      pattern (src/extension.ml[451,14909+60]..[451,14909+64])
                                        Ppat_var "ctxt" (src/extension.ml[451,14909+60]..[451,14909+64])
                                      expression (src/extension.ml[451,14909+65]..[452,14984+18]) ghost
                                        Pexp_fun
                                        Labelled "arg"
                                        None
                                        pattern (src/extension.ml[451,14909+70]..[451,14909+71])
                                          Ppat_any
                                        expression (src/extension.ml[452,14984+11]..[452,14984+18])
                                          Pexp_apply
                                          expression (src/extension.ml[452,14984+11]..[452,14984+12])
                                            Pexp_ident "k" (src/extension.ml[452,14984+11]..[452,14984+12])
                                          [
                                            <arg>
                                            Labelled "ctxt"
                                              expression (src/extension.ml[452,14984+14]..[452,14984+18])
                                                Pexp_ident "ctxt" (src/extension.ml[452,14984+14]..[452,14984+18])
                                          ]
                                ]
            ]
          structure_item (src/extension.ml[454,15006+2]..[459,15279+20])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[454,15006+6]..[454,15006+20])
                  Ppat_var "declare_inline" (src/extension.ml[454,15006+6]..[454,15006+20])
                expression (src/extension.ml[454,15006+21]..[459,15279+20]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/extension.ml[454,15006+21]..[454,15006+25])
                    Ppat_var "name" (src/extension.ml[454,15006+21]..[454,15006+25])
                  expression (src/extension.ml[454,15006+26]..[459,15279+20]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/extension.ml[454,15006+26]..[454,15006+33])
                      Ppat_var "context" (src/extension.ml[454,15006+26]..[454,15006+33])
                    expression (src/extension.ml[454,15006+34]..[459,15279+20]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[454,15006+34]..[454,15006+41])
                        Ppat_var "pattern" (src/extension.ml[454,15006+34]..[454,15006+41])
                      expression (src/extension.ml[454,15006+42]..[459,15279+20]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/extension.ml[454,15006+42]..[454,15006+43])
                          Ppat_var "k" (src/extension.ml[454,15006+42]..[454,15006+43])
                        expression (src/extension.ml[455,15052+4]..[459,15279+20])
                          Pexp_sequence
                          expression (src/extension.ml[455,15052+4]..[455,15052+69])
                            Pexp_apply
                            expression (src/extension.ml[455,15052+4]..[455,15052+28])
                              Pexp_ident "check_context_for_inline" (src/extension.ml[455,15052+4]..[455,15052+28])
                            [
                              <arg>
                              Nolabel
                                expression (src/extension.ml[455,15052+29]..[455,15052+36])
                                  Pexp_ident "context" (src/extension.ml[455,15052+29]..[455,15052+36])
                              <arg>
                              Labelled "func"
                                expression (src/extension.ml[455,15052+43]..[455,15052+69])
                                  Pexp_constant PConst_string("Extension.declare_inline",(src/extension.ml[455,15052+44]..[455,15052+68]),None)
                            ]
                          expression (src/extension.ml[456,15123+4]..[459,15279+20])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/extension.ml[456,15123+8]..[456,15123+15])
                                  Ppat_var "pattern" (src/extension.ml[456,15123+8]..[456,15123+15])
                                expression (src/extension.ml[456,15123+18]..[456,15123+71])
                                  Pexp_apply
                                  expression (src/extension.ml[456,15123+18]..[456,15123+40])
                                    Pexp_ident "Ast_pattern.map_result" (src/extension.ml[456,15123+18]..[456,15123+40])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/extension.ml[456,15123+41]..[456,15123+48])
                                        Pexp_ident "pattern" (src/extension.ml[456,15123+41]..[456,15123+48])
                                    <arg>
                                    Labelled "f"
                                      expression (src/extension.ml[456,15123+52]..[456,15123+71])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (src/extension.ml[456,15123+57]..[456,15123+58])
                                          Ppat_var "x" (src/extension.ml[456,15123+57]..[456,15123+58])
                                        expression (src/extension.ml[456,15123+62]..[456,15123+70])
                                          Pexp_construct "Inline" (src/extension.ml[456,15123+62]..[456,15123+68])
                                          Some
                                            expression (src/extension.ml[456,15123+69]..[456,15123+70])
                                              Pexp_ident "x" (src/extension.ml[456,15123+69]..[456,15123+70])
                                  ]
                            ]
                            expression (src/extension.ml[457,15198+4]..[459,15279+20])
                              Pexp_construct "T" (src/extension.ml[457,15198+4]..[457,15198+5])
                              Some
                                expression (src/extension.ml[458,15204+6]..[459,15279+20])
                                  Pexp_apply
                                  expression (src/extension.ml[458,15204+7]..[458,15204+16])
                                    Pexp_ident "M.declare" (src/extension.ml[458,15204+7]..[458,15204+16])
                                  [
                                    <arg>
                                    Labelled "with_arg"
                                      expression (src/extension.ml[458,15204+27]..[458,15204+32])
                                        Pexp_construct "false" (src/extension.ml[458,15204+27]..[458,15204+32])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (src/extension.ml[458,15204+33]..[458,15204+37])
                                        Pexp_ident "name" (src/extension.ml[458,15204+33]..[458,15204+37])
                                    <arg>
                                    Nolabel
                                      expression (src/extension.ml[458,15204+38]..[458,15204+45])
                                        Pexp_ident "context" (src/extension.ml[458,15204+38]..[458,15204+45])
                                    <arg>
                                    Nolabel
                                      expression (src/extension.ml[458,15204+46]..[458,15204+53])
                                        Pexp_ident "pattern" (src/extension.ml[458,15204+46]..[458,15204+53])
                                    <arg>
                                    Nolabel
                                      expression (src/extension.ml[458,15204+54]..[459,15279+19])
                                        Pexp_fun
                                        Labelled "ctxt"
                                        None
                                        pattern (src/extension.ml[458,15204+60]..[458,15204+64])
                                          Ppat_var "ctxt" (src/extension.ml[458,15204+60]..[458,15204+64])
                                        expression (src/extension.ml[458,15204+65]..[459,15279+18]) ghost
                                          Pexp_fun
                                          Labelled "arg"
                                          None
                                          pattern (src/extension.ml[458,15204+70]..[458,15204+71])
                                            Ppat_any
                                          expression (src/extension.ml[459,15279+11]..[459,15279+18])
                                            Pexp_apply
                                            expression (src/extension.ml[459,15279+11]..[459,15279+12])
                                              Pexp_ident "k" (src/extension.ml[459,15279+11]..[459,15279+12])
                                            [
                                              <arg>
                                              Labelled "ctxt"
                                                expression (src/extension.ml[459,15279+14]..[459,15279+18])
                                                  Pexp_ident "ctxt" (src/extension.ml[459,15279+14]..[459,15279+18])
                                            ]
                                  ]
            ]
          structure_item (src/extension.ml[461,15301+2]..[463,15429+55])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[461,15301+6]..[461,15301+27])
                  Ppat_var "declare_with_path_arg" (src/extension.ml[461,15301+6]..[461,15301+27])
                expression (src/extension.ml[461,15301+28]..[463,15429+55]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/extension.ml[461,15301+28]..[461,15301+32])
                    Ppat_var "name" (src/extension.ml[461,15301+28]..[461,15301+32])
                  expression (src/extension.ml[461,15301+33]..[463,15429+55]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/extension.ml[461,15301+33]..[461,15301+40])
                      Ppat_var "context" (src/extension.ml[461,15301+33]..[461,15301+40])
                    expression (src/extension.ml[461,15301+41]..[463,15429+55]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[461,15301+41]..[461,15301+48])
                        Ppat_var "pattern" (src/extension.ml[461,15301+41]..[461,15301+48])
                      expression (src/extension.ml[461,15301+49]..[463,15429+55]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/extension.ml[461,15301+49]..[461,15301+50])
                          Ppat_var "k" (src/extension.ml[461,15301+49]..[461,15301+50])
                        expression (src/extension.ml[462,15354+4]..[463,15429+55])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/extension.ml[462,15354+8]..[462,15354+15])
                                Ppat_var "pattern" (src/extension.ml[462,15354+8]..[462,15354+15])
                              expression (src/extension.ml[462,15354+18]..[462,15354+71])
                                Pexp_apply
                                expression (src/extension.ml[462,15354+18]..[462,15354+40])
                                  Pexp_ident "Ast_pattern.map_result" (src/extension.ml[462,15354+18]..[462,15354+40])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[462,15354+41]..[462,15354+48])
                                      Pexp_ident "pattern" (src/extension.ml[462,15354+41]..[462,15354+48])
                                  <arg>
                                  Labelled "f"
                                    expression (src/extension.ml[462,15354+52]..[462,15354+71])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (src/extension.ml[462,15354+57]..[462,15354+58])
                                        Ppat_var "x" (src/extension.ml[462,15354+57]..[462,15354+58])
                                      expression (src/extension.ml[462,15354+62]..[462,15354+70])
                                        Pexp_construct "Simple" (src/extension.ml[462,15354+62]..[462,15354+68])
                                        Some
                                          expression (src/extension.ml[462,15354+69]..[462,15354+70])
                                            Pexp_ident "x" (src/extension.ml[462,15354+69]..[462,15354+70])
                                ]
                          ]
                          expression (src/extension.ml[463,15429+4]..[463,15429+55])
                            Pexp_construct "T" (src/extension.ml[463,15429+4]..[463,15429+5])
                            Some
                              expression (src/extension.ml[463,15429+6]..[463,15429+55])
                                Pexp_apply
                                expression (src/extension.ml[463,15429+7]..[463,15429+16])
                                  Pexp_ident "M.declare" (src/extension.ml[463,15429+7]..[463,15429+16])
                                [
                                  <arg>
                                  Labelled "with_arg"
                                    expression (src/extension.ml[463,15429+27]..[463,15429+31])
                                      Pexp_construct "true" (src/extension.ml[463,15429+27]..[463,15429+31])
                                      None
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[463,15429+32]..[463,15429+36])
                                      Pexp_ident "name" (src/extension.ml[463,15429+32]..[463,15429+36])
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[463,15429+37]..[463,15429+44])
                                      Pexp_ident "context" (src/extension.ml[463,15429+37]..[463,15429+44])
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[463,15429+45]..[463,15429+52])
                                      Pexp_ident "pattern" (src/extension.ml[463,15429+45]..[463,15429+52])
                                  <arg>
                                  Nolabel
                                    expression (src/extension.ml[463,15429+53]..[463,15429+54])
                                      Pexp_ident "k" (src/extension.ml[463,15429+53]..[463,15429+54])
                                ]
            ]
          structure_item (src/extension.ml[465,15486+2]..[469,15712+55])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[465,15486+6]..[465,15486+34])
                  Ppat_var "declare_inline_with_path_arg" (src/extension.ml[465,15486+6]..[465,15486+34])
                expression (src/extension.ml[465,15486+35]..[469,15712+55]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/extension.ml[465,15486+35]..[465,15486+39])
                    Ppat_var "name" (src/extension.ml[465,15486+35]..[465,15486+39])
                  expression (src/extension.ml[465,15486+40]..[469,15712+55]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/extension.ml[465,15486+40]..[465,15486+47])
                      Ppat_var "context" (src/extension.ml[465,15486+40]..[465,15486+47])
                    expression (src/extension.ml[465,15486+48]..[469,15712+55]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/extension.ml[465,15486+48]..[465,15486+55])
                        Ppat_var "pattern" (src/extension.ml[465,15486+48]..[465,15486+55])
                      expression (src/extension.ml[465,15486+56]..[469,15712+55]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/extension.ml[465,15486+56]..[465,15486+57])
                          Ppat_var "k" (src/extension.ml[465,15486+56]..[465,15486+57])
                        expression (src/extension.ml[466,15546+4]..[469,15712+55])
                          Pexp_sequence
                          expression (src/extension.ml[466,15546+4]..[467,15583+52])
                            Pexp_apply
                            expression (src/extension.ml[466,15546+4]..[466,15546+28])
                              Pexp_ident "check_context_for_inline" (src/extension.ml[466,15546+4]..[466,15546+28])
                            [
                              <arg>
                              Nolabel
                                expression (src/extension.ml[466,15546+29]..[466,15546+36])
                                  Pexp_ident "context" (src/extension.ml[466,15546+29]..[466,15546+36])
                              <arg>
                              Labelled "func"
                                expression (src/extension.ml[467,15583+12]..[467,15583+52])
                                  Pexp_constant PConst_string("Extension.declare_inline_with_path_arg",(src/extension.ml[467,15583+13]..[467,15583+51]),None)
                            ]
                          expression (src/extension.ml[468,15637+4]..[469,15712+55])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/extension.ml[468,15637+8]..[468,15637+15])
                                  Ppat_var "pattern" (src/extension.ml[468,15637+8]..[468,15637+15])
                                expression (src/extension.ml[468,15637+18]..[468,15637+71])
                                  Pexp_apply
                                  expression (src/extension.ml[468,15637+18]..[468,15637+40])
                                    Pexp_ident "Ast_pattern.map_result" (src/extension.ml[468,15637+18]..[468,15637+40])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/extension.ml[468,15637+41]..[468,15637+48])
                                        Pexp_ident "pattern" (src/extension.ml[468,15637+41]..[468,15637+48])
                                    <arg>
                                    Labelled "f"
                                      expression (src/extension.ml[468,15637+52]..[468,15637+71])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (src/extension.ml[468,15637+57]..[468,15637+58])
                                          Ppat_var "x" (src/extension.ml[468,15637+57]..[468,15637+58])
                                        expression (src/extension.ml[468,15637+62]..[468,15637+70])
                                          Pexp_construct "Inline" (src/extension.ml[468,15637+62]..[468,15637+68])
                                          Some
                                            expression (src/extension.ml[468,15637+69]..[468,15637+70])
                                              Pexp_ident "x" (src/extension.ml[468,15637+69]..[468,15637+70])
                                  ]
                            ]
                            expression (src/extension.ml[469,15712+4]..[469,15712+55])
                              Pexp_construct "T" (src/extension.ml[469,15712+4]..[469,15712+5])
                              Some
                                expression (src/extension.ml[469,15712+6]..[469,15712+55])
                                  Pexp_apply
                                  expression (src/extension.ml[469,15712+7]..[469,15712+16])
                                    Pexp_ident "M.declare" (src/extension.ml[469,15712+7]..[469,15712+16])
                                  [
                                    <arg>
                                    Labelled "with_arg"
                                      expression (src/extension.ml[469,15712+27]..[469,15712+31])
                                        Pexp_construct "true" (src/extension.ml[469,15712+27]..[469,15712+31])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (src/extension.ml[469,15712+32]..[469,15712+36])
                                        Pexp_ident "name" (src/extension.ml[469,15712+32]..[469,15712+36])
                                    <arg>
                                    Nolabel
                                      expression (src/extension.ml[469,15712+37]..[469,15712+44])
                                        Pexp_ident "context" (src/extension.ml[469,15712+37]..[469,15712+44])
                                    <arg>
                                    Nolabel
                                      expression (src/extension.ml[469,15712+45]..[469,15712+52])
                                        Pexp_ident "pattern" (src/extension.ml[469,15712+45]..[469,15712+52])
                                    <arg>
                                    Nolabel
                                      expression (src/extension.ml[469,15712+53]..[469,15712+54])
                                        Pexp_ident "k" (src/extension.ml[469,15712+53]..[469,15712+54])
                                  ]
            ]
        ]
  structure_item (src/extension.ml[472,15773+0]..[474,15844+53])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/extension.ml[472,15773+4]..[472,15773+11])
          Ppat_var "declare" (src/extension.ml[472,15773+4]..[472,15773+11])
        expression (src/extension.ml[472,15773+12]..[474,15844+53]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/extension.ml[472,15773+12]..[472,15773+16])
            Ppat_var "name" (src/extension.ml[472,15773+12]..[472,15773+16])
          expression (src/extension.ml[472,15773+17]..[474,15844+53]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/extension.ml[472,15773+17]..[472,15773+24])
              Ppat_var "context" (src/extension.ml[472,15773+17]..[472,15773+24])
            expression (src/extension.ml[472,15773+25]..[474,15844+53]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/extension.ml[472,15773+25]..[472,15773+32])
                Ppat_var "pattern" (src/extension.ml[472,15773+25]..[472,15773+32])
              expression (src/extension.ml[472,15773+33]..[474,15844+53]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (src/extension.ml[472,15773+33]..[472,15773+34])
                  Ppat_var "f" (src/extension.ml[472,15773+33]..[472,15773+34])
                expression (src/extension.ml[473,15810+2]..[474,15844+53])
                  Pexp_apply
                  expression (src/extension.ml[473,15810+2]..[473,15810+12])
                    Pexp_ident "V3.declare" (src/extension.ml[473,15810+2]..[473,15810+12])
                  [
                    <arg>
                    Nolabel
                      expression (src/extension.ml[473,15810+13]..[473,15810+17])
                        Pexp_ident "name" (src/extension.ml[473,15810+13]..[473,15810+17])
                    <arg>
                    Nolabel
                      expression (src/extension.ml[473,15810+18]..[473,15810+25])
                        Pexp_ident "context" (src/extension.ml[473,15810+18]..[473,15810+25])
                    <arg>
                    Nolabel
                      expression (src/extension.ml[473,15810+26]..[473,15810+33])
                        Pexp_ident "pattern" (src/extension.ml[473,15810+26]..[473,15810+33])
                    <arg>
                    Nolabel
                      expression (src/extension.ml[474,15844+4]..[474,15844+53])
                        Pexp_apply
                        expression (src/extension.ml[474,15844+5]..[474,15844+50])
                          Pexp_ident "Expansion_context.Extension.with_loc_and_path" (src/extension.ml[474,15844+5]..[474,15844+50])
                        [
                          <arg>
                          Nolabel
                            expression (src/extension.ml[474,15844+51]..[474,15844+52])
                              Pexp_ident "f" (src/extension.ml[474,15844+51]..[474,15844+52])
                        ]
                  ]
    ]
  structure_item (src/extension.ml[476,15899+0]..[478,15984+53])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/extension.ml[476,15899+4]..[476,15899+18])
          Ppat_var "declare_inline" (src/extension.ml[476,15899+4]..[476,15899+18])
        expression (src/extension.ml[476,15899+19]..[478,15984+53]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/extension.ml[476,15899+19]..[476,15899+23])
            Ppat_var "name" (src/extension.ml[476,15899+19]..[476,15899+23])
          expression (src/extension.ml[476,15899+24]..[478,15984+53]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/extension.ml[476,15899+24]..[476,15899+31])
              Ppat_var "context" (src/extension.ml[476,15899+24]..[476,15899+31])
            expression (src/extension.ml[476,15899+32]..[478,15984+53]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/extension.ml[476,15899+32]..[476,15899+39])
                Ppat_var "pattern" (src/extension.ml[476,15899+32]..[476,15899+39])
              expression (src/extension.ml[476,15899+40]..[478,15984+53]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (src/extension.ml[476,15899+40]..[476,15899+41])
                  Ppat_var "f" (src/extension.ml[476,15899+40]..[476,15899+41])
                expression (src/extension.ml[477,15943+2]..[478,15984+53])
                  Pexp_apply
                  expression (src/extension.ml[477,15943+2]..[477,15943+19])
                    Pexp_ident "V3.declare_inline" (src/extension.ml[477,15943+2]..[477,15943+19])
                  [
                    <arg>
                    Nolabel
                      expression (src/extension.ml[477,15943+20]..[477,15943+24])
                        Pexp_ident "name" (src/extension.ml[477,15943+20]..[477,15943+24])
                    <arg>
                    Nolabel
                      expression (src/extension.ml[477,15943+25]..[477,15943+32])
                        Pexp_ident "context" (src/extension.ml[477,15943+25]..[477,15943+32])
                    <arg>
                    Nolabel
                      expression (src/extension.ml[477,15943+33]..[477,15943+40])
                        Pexp_ident "pattern" (src/extension.ml[477,15943+33]..[477,15943+40])
                    <arg>
                    Nolabel
                      expression (src/extension.ml[478,15984+4]..[478,15984+53])
                        Pexp_apply
                        expression (src/extension.ml[478,15984+5]..[478,15984+50])
                          Pexp_ident "Expansion_context.Extension.with_loc_and_path" (src/extension.ml[478,15984+5]..[478,15984+50])
                        [
                          <arg>
                          Nolabel
                            expression (src/extension.ml[478,15984+51]..[478,15984+52])
                              Pexp_ident "f" (src/extension.ml[478,15984+51]..[478,15984+52])
                        ]
                  ]
    ]
  structure_item (src/extension.ml[480,16039+0]..[483,16225+54])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/extension.ml[480,16039+4]..[480,16039+25])
          Ppat_var "declare_with_path_arg" (src/extension.ml[480,16039+4]..[480,16039+25])
        expression (src/extension.ml[480,16039+26]..[483,16225+54]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/extension.ml[480,16039+26]..[480,16039+30])
            Ppat_var "name" (src/extension.ml[480,16039+26]..[480,16039+30])
          expression (src/extension.ml[480,16039+31]..[483,16225+54]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/extension.ml[480,16039+31]..[480,16039+38])
              Ppat_var "context" (src/extension.ml[480,16039+31]..[480,16039+38])
            expression (src/extension.ml[480,16039+39]..[483,16225+54]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/extension.ml[480,16039+39]..[480,16039+46])
                Ppat_var "pattern" (src/extension.ml[480,16039+39]..[480,16039+46])
              expression (src/extension.ml[480,16039+47]..[483,16225+54]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (src/extension.ml[480,16039+47]..[480,16039+48])
                  Ppat_var "k" (src/extension.ml[480,16039+47]..[480,16039+48])
                expression (src/extension.ml[481,16090+2]..[483,16225+54])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/extension.ml[481,16090+6]..[481,16090+8])
                        Ppat_var "k'" (src/extension.ml[481,16090+6]..[481,16090+8])
                      expression (src/extension.ml[481,16090+11]..[481,16090+58])
                        Pexp_apply
                        expression (src/extension.ml[481,16090+11]..[481,16090+56])
                          Pexp_ident "Expansion_context.Extension.with_loc_and_path" (src/extension.ml[481,16090+11]..[481,16090+56])
                        [
                          <arg>
                          Nolabel
                            expression (src/extension.ml[481,16090+57]..[481,16090+58])
                              Pexp_ident "k" (src/extension.ml[481,16090+57]..[481,16090+58])
                        ]
                  ]
                  expression (src/extension.ml[482,16152+2]..[483,16225+54])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/extension.ml[482,16152+6]..[482,16152+13])
                          Ppat_var "pattern" (src/extension.ml[482,16152+6]..[482,16152+13])
                        expression (src/extension.ml[482,16152+16]..[482,16152+69])
                          Pexp_apply
                          expression (src/extension.ml[482,16152+16]..[482,16152+38])
                            Pexp_ident "Ast_pattern.map_result" (src/extension.ml[482,16152+16]..[482,16152+38])
                          [
                            <arg>
                            Nolabel
                              expression (src/extension.ml[482,16152+39]..[482,16152+46])
                                Pexp_ident "pattern" (src/extension.ml[482,16152+39]..[482,16152+46])
                            <arg>
                            Labelled "f"
                              expression (src/extension.ml[482,16152+50]..[482,16152+69])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/extension.ml[482,16152+55]..[482,16152+56])
                                  Ppat_var "x" (src/extension.ml[482,16152+55]..[482,16152+56])
                                expression (src/extension.ml[482,16152+60]..[482,16152+68])
                                  Pexp_construct "Simple" (src/extension.ml[482,16152+60]..[482,16152+66])
                                  Some
                                    expression (src/extension.ml[482,16152+67]..[482,16152+68])
                                      Pexp_ident "x" (src/extension.ml[482,16152+67]..[482,16152+68])
                          ]
                    ]
                    expression (src/extension.ml[483,16225+2]..[483,16225+54])
                      Pexp_construct "T" (src/extension.ml[483,16225+2]..[483,16225+3])
                      Some
                        expression (src/extension.ml[483,16225+4]..[483,16225+54])
                          Pexp_apply
                          expression (src/extension.ml[483,16225+5]..[483,16225+14])
                            Pexp_ident "M.declare" (src/extension.ml[483,16225+5]..[483,16225+14])
                          [
                            <arg>
                            Labelled "with_arg"
                              expression (src/extension.ml[483,16225+25]..[483,16225+29])
                                Pexp_construct "true" (src/extension.ml[483,16225+25]..[483,16225+29])
                                None
                            <arg>
                            Nolabel
                              expression (src/extension.ml[483,16225+30]..[483,16225+34])
                                Pexp_ident "name" (src/extension.ml[483,16225+30]..[483,16225+34])
                            <arg>
                            Nolabel
                              expression (src/extension.ml[483,16225+35]..[483,16225+42])
                                Pexp_ident "context" (src/extension.ml[483,16225+35]..[483,16225+42])
                            <arg>
                            Nolabel
                              expression (src/extension.ml[483,16225+43]..[483,16225+50])
                                Pexp_ident "pattern" (src/extension.ml[483,16225+43]..[483,16225+50])
                            <arg>
                            Nolabel
                              expression (src/extension.ml[483,16225+51]..[483,16225+53])
                                Pexp_ident "k'" (src/extension.ml[483,16225+51]..[483,16225+53])
                          ]
    ]
  structure_item (src/extension.ml[485,16281+0]..[490,16561+54])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/extension.ml[485,16281+4]..[485,16281+32])
          Ppat_var "declare_inline_with_path_arg" (src/extension.ml[485,16281+4]..[485,16281+32])
        expression (src/extension.ml[485,16281+33]..[490,16561+54]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/extension.ml[485,16281+33]..[485,16281+37])
            Ppat_var "name" (src/extension.ml[485,16281+33]..[485,16281+37])
          expression (src/extension.ml[485,16281+38]..[490,16561+54]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/extension.ml[485,16281+38]..[485,16281+45])
              Ppat_var "context" (src/extension.ml[485,16281+38]..[485,16281+45])
            expression (src/extension.ml[485,16281+46]..[490,16561+54]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/extension.ml[485,16281+46]..[485,16281+53])
                Ppat_var "pattern" (src/extension.ml[485,16281+46]..[485,16281+53])
              expression (src/extension.ml[485,16281+54]..[490,16561+54]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (src/extension.ml[485,16281+54]..[485,16281+55])
                  Ppat_var "k" (src/extension.ml[485,16281+54]..[485,16281+55])
                expression (src/extension.ml[486,16339+2]..[490,16561+54])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/extension.ml[486,16339+6]..[486,16339+8])
                        Ppat_var "k'" (src/extension.ml[486,16339+6]..[486,16339+8])
                      expression (src/extension.ml[486,16339+11]..[486,16339+58])
                        Pexp_apply
                        expression (src/extension.ml[486,16339+11]..[486,16339+56])
                          Pexp_ident "Expansion_context.Extension.with_loc_and_path" (src/extension.ml[486,16339+11]..[486,16339+56])
                        [
                          <arg>
                          Nolabel
                            expression (src/extension.ml[486,16339+57]..[486,16339+58])
                              Pexp_ident "k" (src/extension.ml[486,16339+57]..[486,16339+58])
                        ]
                  ]
                  expression (src/extension.ml[487,16401+2]..[490,16561+54])
                    Pexp_sequence
                    expression (src/extension.ml[487,16401+2]..[488,16436+50])
                      Pexp_apply
                      expression (src/extension.ml[487,16401+2]..[487,16401+26])
                        Pexp_ident "check_context_for_inline" (src/extension.ml[487,16401+2]..[487,16401+26])
                      [
                        <arg>
                        Nolabel
                          expression (src/extension.ml[487,16401+27]..[487,16401+34])
                            Pexp_ident "context" (src/extension.ml[487,16401+27]..[487,16401+34])
                        <arg>
                        Labelled "func"
                          expression (src/extension.ml[488,16436+10]..[488,16436+50])
                            Pexp_constant PConst_string("Extension.declare_inline_with_path_arg",(src/extension.ml[488,16436+11]..[488,16436+49]),None)
                      ]
                    expression (src/extension.ml[489,16488+2]..[490,16561+54])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/extension.ml[489,16488+6]..[489,16488+13])
                            Ppat_var "pattern" (src/extension.ml[489,16488+6]..[489,16488+13])
                          expression (src/extension.ml[489,16488+16]..[489,16488+69])
                            Pexp_apply
                            expression (src/extension.ml[489,16488+16]..[489,16488+38])
                              Pexp_ident "Ast_pattern.map_result" (src/extension.ml[489,16488+16]..[489,16488+38])
                            [
                              <arg>
                              Nolabel
                                expression (src/extension.ml[489,16488+39]..[489,16488+46])
                                  Pexp_ident "pattern" (src/extension.ml[489,16488+39]..[489,16488+46])
                              <arg>
                              Labelled "f"
                                expression (src/extension.ml[489,16488+50]..[489,16488+69])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/extension.ml[489,16488+55]..[489,16488+56])
                                    Ppat_var "x" (src/extension.ml[489,16488+55]..[489,16488+56])
                                  expression (src/extension.ml[489,16488+60]..[489,16488+68])
                                    Pexp_construct "Inline" (src/extension.ml[489,16488+60]..[489,16488+66])
                                    Some
                                      expression (src/extension.ml[489,16488+67]..[489,16488+68])
                                        Pexp_ident "x" (src/extension.ml[489,16488+67]..[489,16488+68])
                            ]
                      ]
                      expression (src/extension.ml[490,16561+2]..[490,16561+54])
                        Pexp_construct "T" (src/extension.ml[490,16561+2]..[490,16561+3])
                        Some
                          expression (src/extension.ml[490,16561+4]..[490,16561+54])
                            Pexp_apply
                            expression (src/extension.ml[490,16561+5]..[490,16561+14])
                              Pexp_ident "M.declare" (src/extension.ml[490,16561+5]..[490,16561+14])
                            [
                              <arg>
                              Labelled "with_arg"
                                expression (src/extension.ml[490,16561+25]..[490,16561+29])
                                  Pexp_construct "true" (src/extension.ml[490,16561+25]..[490,16561+29])
                                  None
                              <arg>
                              Nolabel
                                expression (src/extension.ml[490,16561+30]..[490,16561+34])
                                  Pexp_ident "name" (src/extension.ml[490,16561+30]..[490,16561+34])
                              <arg>
                              Nolabel
                                expression (src/extension.ml[490,16561+35]..[490,16561+42])
                                  Pexp_ident "context" (src/extension.ml[490,16561+35]..[490,16561+42])
                              <arg>
                              Nolabel
                                expression (src/extension.ml[490,16561+43]..[490,16561+50])
                                  Pexp_ident "pattern" (src/extension.ml[490,16561+43]..[490,16561+50])
                              <arg>
                              Nolabel
                                expression (src/extension.ml[490,16561+51]..[490,16561+53])
                                  Pexp_ident "k'" (src/extension.ml[490,16561+51]..[490,16561+53])
                            ]
    ]
  structure_item (src/extension.ml[492,16617+0]..[496,16867+51])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/extension.ml[492,16617+4]..[492,16617+24])
          Ppat_var "__declare_ppx_import" (src/extension.ml[492,16617+4]..[492,16617+24])
        expression (src/extension.ml[492,16617+25]..[496,16867+51]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/extension.ml[492,16617+25]..[492,16617+29])
            Ppat_var "name" (src/extension.ml[492,16617+25]..[492,16617+29])
          expression (src/extension.ml[492,16617+30]..[496,16867+51]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/extension.ml[492,16617+30]..[492,16617+36])
              Ppat_var "expand" (src/extension.ml[492,16617+30]..[492,16617+36])
            expression (src/extension.ml[495,16786+2]..[496,16867+51])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/extension.ml[495,16786+6]..[495,16786+13])
                    Ppat_var "pattern" (src/extension.ml[495,16786+6]..[495,16786+13])
                  expression (src/extension.ml[495,16786+16]..[495,16786+77])
                    Pexp_open Fresh
                    module_expr (src/extension.ml[495,16786+16]..[495,16786+27])
                      Pmod_ident "Ast_pattern" (src/extension.ml[495,16786+16]..[495,16786+27])
                    expression (src/extension.ml[495,16786+29]..[495,16786+76])
                      Pexp_apply
                      expression (src/extension.ml[495,16786+29]..[495,16786+33])
                        Pexp_ident "pstr" (src/extension.ml[495,16786+29]..[495,16786+33])
                      [
                        <arg>
                        Nolabel
                          expression (src/extension.ml[495,16786+34]..[495,16786+76])
                            Pexp_apply
                            expression (src/extension.ml[495,16786+68]..[495,16786+71])
                              Pexp_ident "^::" (src/extension.ml[495,16786+68]..[495,16786+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/extension.ml[495,16786+35]..[495,16786+67])
                                  Pexp_apply
                                  expression (src/extension.ml[495,16786+35]..[495,16786+44])
                                    Pexp_ident "pstr_type" (src/extension.ml[495,16786+35]..[495,16786+44])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/extension.ml[495,16786+45]..[495,16786+54])
                                        Pexp_ident "recursive" (src/extension.ml[495,16786+45]..[495,16786+54])
                                    <arg>
                                    Nolabel
                                      expression (src/extension.ml[495,16786+55]..[495,16786+67])
                                        Pexp_apply
                                        expression (src/extension.ml[495,16786+59]..[495,16786+62])
                                          Pexp_ident "^::" (src/extension.ml[495,16786+59]..[495,16786+62])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/extension.ml[495,16786+56]..[495,16786+58])
                                              Pexp_ident "__" (src/extension.ml[495,16786+56]..[495,16786+58])
                                          <arg>
                                          Nolabel
                                            expression (src/extension.ml[495,16786+63]..[495,16786+66])
                                              Pexp_ident "nil" (src/extension.ml[495,16786+63]..[495,16786+66])
                                        ]
                                  ]
                              <arg>
                              Nolabel
                                expression (src/extension.ml[495,16786+72]..[495,16786+75])
                                  Pexp_ident "nil" (src/extension.ml[495,16786+72]..[495,16786+75])
                            ]
                      ]
              ]
              expression (src/extension.ml[496,16867+2]..[496,16867+51])
                Pexp_apply
                expression (src/extension.ml[496,16867+2]..[496,16867+12])
                  Pexp_ident "V3.declare" (src/extension.ml[496,16867+2]..[496,16867+12])
                [
                  <arg>
                  Nolabel
                    expression (src/extension.ml[496,16867+13]..[496,16867+17])
                      Pexp_ident "name" (src/extension.ml[496,16867+13]..[496,16867+17])
                  <arg>
                  Nolabel
                    expression (src/extension.ml[496,16867+18]..[496,16867+36])
                      Pexp_construct "Context.Ppx_import" (src/extension.ml[496,16867+18]..[496,16867+36])
                      None
                  <arg>
                  Nolabel
                    expression (src/extension.ml[496,16867+37]..[496,16867+44])
                      Pexp_ident "pattern" (src/extension.ml[496,16867+37]..[496,16867+44])
                  <arg>
                  Nolabel
                    expression (src/extension.ml[496,16867+45]..[496,16867+51])
                      Pexp_ident "expand" (src/extension.ml[496,16867+45]..[496,16867+51])
                ]
    ]
  structure_item (src/extension.ml[498,16920+0]..[503,17022+3])
    Pstr_module
    "V2" (src/extension.ml[498,16920+7]..[498,16920+9])
      module_expr (src/extension.ml[498,16920+12]..[503,17022+3])
        Pmod_structure
        [
          structure_item (src/extension.ml[499,16939+2]..[499,16939+19])
            Pstr_type Nonrec
            [
              type_declaration "t" (src/extension.ml[499,16939+14]..[499,16939+15]) (src/extension.ml[499,16939+2]..[499,16939+19])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/extension.ml[499,16939+18]..[499,16939+19])
                      Ptyp_constr "t" (src/extension.ml[499,16939+18]..[499,16939+19])
                      []
            ]
          structure_item (src/extension.ml[501,16960+2]..[501,16960+23])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[501,16960+6]..[501,16960+13])
                  Ppat_var "declare" (src/extension.ml[501,16960+6]..[501,16960+13])
                expression (src/extension.ml[501,16960+16]..[501,16960+23])
                  Pexp_ident "declare" (src/extension.ml[501,16960+16]..[501,16960+23])
            ]
          structure_item (src/extension.ml[502,16984+2]..[502,16984+37])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[502,16984+6]..[502,16984+20])
                  Ppat_var "declare_inline" (src/extension.ml[502,16984+6]..[502,16984+20])
                expression (src/extension.ml[502,16984+23]..[502,16984+37])
                  Pexp_ident "declare_inline" (src/extension.ml[502,16984+23]..[502,16984+37])
            ]
        ]
]

open! Import
open Common
type (_, _) equality =
  | Eq: ('a, 'a) equality 
  | Ne: (_, _) equality 
module Context =
  struct
    type 'a t =
      | Class_expr: class_expr t 
      | Class_field: class_field t 
      | Class_type: class_type t 
      | Class_type_field: class_type_field t 
      | Core_type: core_type t 
      | Expression: expression t 
      | Module_expr: module_expr t 
      | Module_type: module_type t 
      | Pattern: pattern t 
      | Signature_item: signature_item t 
      | Structure_item: structure_item t 
      | Ppx_import: type_declaration t 
    type packed =
      | T: _ t -> packed 
    let class_expr = Class_expr
    let class_field = Class_field
    let class_type = Class_type
    let class_type_field = Class_type_field
    let core_type = Core_type
    let expression = Expression
    let module_expr = Module_expr
    let module_type = Module_type
    let pattern = Pattern
    let signature_item = Signature_item
    let structure_item = Structure_item
    let desc : type a. a t -> string =
      function
      | Class_expr -> "class expression"
      | Class_field -> "class field"
      | Class_type -> "class type"
      | Class_type_field -> "class type field"
      | Core_type -> "core type"
      | Expression -> "expression"
      | Module_expr -> "module expression"
      | Module_type -> "module type"
      | Pattern -> "pattern"
      | Signature_item -> "signature item"
      | Structure_item -> "structure item"
      | Ppx_import -> "type declaration"
    let eq : type a b. a t -> b t -> (a, b) equality =
      fun a ->
        fun b ->
          match (a, b) with
          | (Class_expr, Class_expr) -> Eq
          | (Class_field, Class_field) -> Eq
          | (Class_type, Class_type) -> Eq
          | (Class_type_field, Class_type_field) -> Eq
          | (Core_type, Core_type) -> Eq
          | (Expression, Expression) -> Eq
          | (Module_expr, Module_expr) -> Eq
          | (Module_type, Module_type) -> Eq
          | (Pattern, Pattern) -> Eq
          | (Signature_item, Signature_item) -> Eq
          | (Structure_item, Structure_item) -> Eq
          | (Ppx_import, Ppx_import) -> Eq
          | _ -> (assert (Poly.(<>) (T a) (T b)); Ne)
    let get_ppx_import_extension type_decl =
      match type_decl with
      | { ptype_manifest = Some { ptyp_desc = Ptyp_extension (name, _);_};_}
          ->
          let virtual_payload =
            Ast_builder.Default.pstr_type ~loc:(type_decl.ptype_loc)
              Recursive [type_decl] in
          let attr = [] in Some ((name, (PStr [virtual_payload])), attr)
      | _ -> None
    let get_extension : type a. a t -> a -> (extension * attributes) option =
      fun t ->
        fun x ->
          match (t, x) with
          | (Class_expr, { pcl_desc = Pcl_extension e; pcl_attributes = a;_})
              -> Some (e, a)
          | (Class_field,
             { pcf_desc = Pcf_extension e; pcf_attributes = a;_}) ->
              Some (e, a)
          | (Class_type,
             { pcty_desc = Pcty_extension e; pcty_attributes = a;_}) ->
              Some (e, a)
          | (Class_type_field,
             { pctf_desc = Pctf_extension e; pctf_attributes = a;_}) ->
              Some (e, a)
          | (Core_type,
             { ptyp_desc = Ptyp_extension e; ptyp_attributes = a;_}) ->
              Some (e, a)
          | (Expression,
             { pexp_desc = Pexp_extension e; pexp_attributes = a;_}) ->
              Some (e, a)
          | (Module_expr,
             { pmod_desc = Pmod_extension e; pmod_attributes = a;_}) ->
              Some (e, a)
          | (Module_type,
             { pmty_desc = Pmty_extension e; pmty_attributes = a;_}) ->
              Some (e, a)
          | (Pattern, { ppat_desc = Ppat_extension e; ppat_attributes = a;_})
              -> Some (e, a)
          | (Signature_item, { psig_desc = Psig_extension (e, a);_}) ->
              Some (e, a)
          | (Structure_item, { pstr_desc = Pstr_extension (e, a);_}) ->
              Some (e, a)
          | (Ppx_import, type_decl) -> get_ppx_import_extension type_decl
          | _ -> None
    let merge_attributes_res : type a.
      a t -> a -> attributes -> (a, Location.Error.t NonEmptyList.t) result =
      fun t ->
        fun x ->
          fun attrs ->
            match t with
            | Class_expr ->
                Ok { x with pcl_attributes = (x.pcl_attributes @ attrs) }
            | Class_field ->
                Ok { x with pcf_attributes = (x.pcf_attributes @ attrs) }
            | Class_type ->
                Ok { x with pcty_attributes = (x.pcty_attributes @ attrs) }
            | Class_type_field ->
                Ok { x with pctf_attributes = (x.pctf_attributes @ attrs) }
            | Core_type ->
                Ok { x with ptyp_attributes = (x.ptyp_attributes @ attrs) }
            | Expression ->
                Ok { x with pexp_attributes = (x.pexp_attributes @ attrs) }
            | Module_expr ->
                Ok { x with pmod_attributes = (x.pmod_attributes @ attrs) }
            | Module_type ->
                Ok { x with pmty_attributes = (x.pmty_attributes @ attrs) }
            | Pattern ->
                Ok { x with ppat_attributes = (x.ppat_attributes @ attrs) }
            | Signature_item ->
                (match attributes_errors attrs with
                 | [] -> Ok x
                 | t::q -> Error (t, q))
            | Structure_item ->
                (match attributes_errors attrs with
                 | [] -> Ok x
                 | t::q -> Error (t, q))
            | Ppx_import ->
                (match attributes_errors attrs with
                 | [] -> Ok x
                 | t::q -> Error (t, q))
    let merge_attributes : type a. a t -> a -> attributes -> a =
      fun t ->
        fun x ->
          fun attrs ->
            (merge_attributes_res t x attrs) |>
              (Result.handle_error
                 ~f:(fun (err, _) -> Location.Error.raise err))
  end
let registrar =
  Name.Registrar.create ~kind:"extension" ~current_file:__FILE__
    ~string_of_context:(fun (Context.T ctx) -> Some (Context.desc ctx))
module Make(Callback:sig type 'a t end) =
  struct
    type ('a, 'b) payload_parser =
      | Payload_parser: ('a, 'b, 'c) Ast_pattern.t * 'b Callback.t -> (
      'a, 'c) payload_parser 
    type ('context, 'payload) t =
      {
      name: Name.Pattern.t ;
      context: 'context Context.t ;
      payload: (payload, 'payload) payload_parser ;
      with_arg: bool }
    let declare : type a.
      with_arg:bool ->
        string ->
          a Context.t ->
            (payload, 'b, 'payload) Ast_pattern.t ->
              'b Callback.t -> (a, 'payload) t
      =
      fun ~with_arg ->
        fun name ->
          fun context ->
            fun pattern ->
              fun k ->
                (match context with
                 | Context.Ppx_import ->
                     Name.Registrar.check_collisions registrar
                       (Context.T Core_type) name
                 | Context.Core_type ->
                     Name.Registrar.check_collisions registrar
                       (Context.T Ppx_import) name
                 | _ -> ());
                Name.Registrar.register ~kind:`Extension registrar
                  (Context.T context) name;
                {
                  name = (Name.Pattern.make name);
                  context;
                  payload = (Payload_parser (pattern, k));
                  with_arg
                }
    let find ts (ext : extension) =
      let { txt = name; loc } = fst ext in
      let (name, arg) = Name.split_path name in
      match List.filter ts ~f:(fun t -> Name.Pattern.matches t.name name)
      with
      | [] -> Ok None
      | _::_::_ as l ->
          Error
            ((Location.Error.createf ~loc "Multiple match for extensions: %s"
                (String.concat ~sep:", "
                   (List.map l ~f:(fun t -> Name.Pattern.name t.name)))), [])
      | t::[] ->
          if (not t.with_arg) && (Option.is_some arg)
          then
            Error
              ((Location.Error.createf ~loc
                  "Extension %s doesn't expect a path argument" name), [])
          else
            (let arg =
               Option.map arg
                 ~f:(fun s ->
                       let shift = (String.length name) + 1 in
                       let start = loc.loc_start in
                       {
                         txt = (Longident.parse s);
                         loc =
                           {
                             loc with
                             loc_start =
                               {
                                 start with
                                 pos_cnum = (start.pos_cnum + shift)
                               }
                           }
                       }) in
             Ok (Some (t, arg)))
  end
module Expert =
  struct
    include (Make)(struct type 'a t = arg:Longident.t Loc.t option -> 'a end)
    let declare_with_path_arg name ctx patt f =
      declare ~with_arg:true name ctx patt f
    let declare name ctx patt f =
      declare ~with_arg:false name ctx patt (fun ~arg:_ -> f)
    let convert_res ts ~loc  ext =
      let open Result in
        (find ts ext) >>=
          (fun r ->
             match r with
             | None -> Ok None
             | Some ({ payload = Payload_parser (pattern, f);_}, arg) ->
                 (Ast_pattern.parse_res pattern loc (snd ext) (f ~arg)) >>|
                   ((fun payload -> Some payload)))
    let convert ts ~loc  ext =
      (convert_res ts ~loc ext) |>
        (Result.handle_error ~f:(fun (err, _) -> Location.Error.raise err))
  end
module M =
  (Make)(struct
           type 'a t =
             ctxt:Expansion_context.Extension.t ->
               arg:Longident.t Loc.t option -> 'a
         end)
type 'a expander_result =
  | Simple of 'a 
  | Inline of 'a list 
module For_context =
  struct
    type 'a t = ('a, 'a expander_result) M.t
    let convert_res ts ~ctxt  ext =
      let loc = Expansion_context.Extension.extension_point_loc ctxt in
      let open Result in
        (M.find ts ext) >>=
          (fun found ->
             match found with
             | None -> Ok None
             | Some ({ payload = M.Payload_parser (pattern, f);_}, arg) ->
                 (Ast_pattern.parse_res pattern loc (snd ext) (f ~ctxt ~arg))
                   >>|
                   ((fun payload ->
                       match payload with
                       | Simple x -> Some x
                       | Inline _ -> failwith "Extension.convert")))
    let convert ts ~ctxt  ext =
      (convert_res ts ~ctxt ext) |>
        (Result.handle_error ~f:(fun (err, _) -> Location.Error.raise err))
    let convert_inline_res ts ~ctxt  ext =
      let loc = Expansion_context.Extension.extension_point_loc ctxt in
      let open Result in
        (M.find ts ext) >>=
          (fun found ->
             match found with
             | None -> Ok None
             | Some ({ payload = M.Payload_parser (pattern, f);_}, arg) ->
                 (Ast_pattern.parse_res pattern loc (snd ext) (f ~ctxt ~arg))
                   >>|
                   ((fun payload ->
                       match payload with
                       | Simple x -> Some [x]
                       | Inline l -> Some l)))
    let convert_inline ts ~ctxt  ext =
      (convert_inline_res ts ~ctxt ext) |>
        (Result.handle_error ~f:(fun (err, _) -> Location.Error.raise err))
  end
type t =
  | T: _ For_context.t -> t 
let check_context_for_inline : type a. func:string -> a Context.t -> unit =
  fun ~func ->
    fun ctx ->
      match ctx with
      | Context.Class_field -> ()
      | Context.Class_type_field -> ()
      | Context.Signature_item -> ()
      | Context.Structure_item -> ()
      | context ->
          Printf.ksprintf invalid_arg "%s: %s can't be inlined" func
            (Context.desc context)
let rec filter_by_context : type a.
  a Context.t -> t list -> a For_context.t list =
  fun context ->
    fun expanders ->
      match expanders with
      | [] -> []
      | (T t)::rest ->
          (match Context.eq context t.context with
           | Eq -> t :: (filter_by_context context rest)
           | Ne -> filter_by_context context rest)
let unhandled_extension_error ctx (name, _) =
  if
    not
      ((Name.Allowlisted.is_allowlisted ~kind:`Extension name.txt) ||
         (Name.ignore_checks name.txt))
  then
    [Name.Registrar.Error.createf registrar (Context.T ctx)
       "Extension `%s' was not translated" name]
  else []
let collect_unhandled_extension_errors =
  object
    inherit  [Location.Error.t list] Ast_traverse.fold as super
    method! extension (name, _) acc =
      acc @
        [Location.Error.createf ~loc:(name.loc)
           "extension not expected here, Ppxlib.Extension needs updating!"]
    method! core_type_desc x acc =
      match x with
      | Ptyp_extension ext -> acc @ (unhandled_extension_error Core_type ext)
      | x -> super#core_type_desc x acc
    method! pattern_desc x acc =
      match x with
      | Ppat_extension ext -> acc @ (unhandled_extension_error Pattern ext)
      | x -> super#pattern_desc x acc
    method! expression_desc x acc =
      match x with
      | Pexp_extension ext ->
          acc @ (unhandled_extension_error Expression ext)
      | x -> super#expression_desc x acc
    method! class_type_desc x acc =
      match x with
      | Pcty_extension ext ->
          acc @ (unhandled_extension_error Class_type ext)
      | x -> super#class_type_desc x acc
    method! class_type_field_desc x acc =
      match x with
      | Pctf_extension ext ->
          acc @ (unhandled_extension_error Class_type_field ext)
      | x -> super#class_type_field_desc x acc
    method! class_expr_desc x acc =
      match x with
      | Pcl_extension ext -> acc @ (unhandled_extension_error Class_expr ext)
      | x -> super#class_expr_desc x acc
    method! class_field_desc x acc =
      match x with
      | Pcf_extension ext ->
          acc @ (unhandled_extension_error Class_field ext)
      | x -> super#class_field_desc x acc
    method! module_type_desc x acc =
      match x with
      | Pmty_extension ext ->
          acc @ (unhandled_extension_error Module_type ext)
      | x -> super#module_type_desc x acc
    method! signature_item_desc x acc =
      match x with
      | Psig_extension (ext, _) ->
          acc @ (unhandled_extension_error Signature_item ext)
      | x -> super#signature_item_desc x acc
    method! module_expr_desc x acc =
      match x with
      | Pmod_extension ext ->
          acc @ (unhandled_extension_error Module_expr ext)
      | x -> super#module_expr_desc x acc
    method! structure_item_desc x acc =
      match x with
      | Pstr_extension (ext, _) ->
          acc @ (unhandled_extension_error Structure_item ext)
      | x -> super#structure_item_desc x acc
  end
let error_list_to_exception =
  function | [] -> () | err::_ -> Location.Error.raise err
let check_unused =
  object
    inherit  Ast_traverse.iter
    method! extension (name, _) =
      Location.raise_errorf ~loc:(name.loc)
        "extension not expected here, Ppxlib.Extension needs updating!"
    method! core_type_desc x =
      (collect_unhandled_extension_errors#core_type_desc x []) |>
        error_list_to_exception
    method! pattern_desc x =
      (collect_unhandled_extension_errors#pattern_desc x []) |>
        error_list_to_exception
    method! expression_desc x =
      (collect_unhandled_extension_errors#expression_desc x []) |>
        error_list_to_exception
    method! class_type_desc x =
      (collect_unhandled_extension_errors#class_type_desc x []) |>
        error_list_to_exception
    method! class_type_field_desc x =
      (collect_unhandled_extension_errors#class_type_field_desc x []) |>
        error_list_to_exception
    method! class_expr_desc x =
      (collect_unhandled_extension_errors#class_expr_desc x []) |>
        error_list_to_exception
    method! class_field_desc x =
      (collect_unhandled_extension_errors#class_field_desc x []) |>
        error_list_to_exception
    method! module_type_desc x =
      (collect_unhandled_extension_errors#module_type_desc x []) |>
        error_list_to_exception
    method! signature_item_desc x =
      (collect_unhandled_extension_errors#signature_item_desc x []) |>
        error_list_to_exception
    method! module_expr_desc x =
      (collect_unhandled_extension_errors#module_expr_desc x []) |>
        error_list_to_exception
    method! structure_item_desc x =
      (collect_unhandled_extension_errors#structure_item_desc x []) |>
        error_list_to_exception
  end
module V3 =
  struct
    type nonrec t = t
    let declare name context pattern k =
      let pattern = Ast_pattern.map_result pattern ~f:(fun x -> Simple x) in
      T
        (M.declare ~with_arg:false name context pattern
           (fun ~ctxt -> fun ~arg:_ -> k ~ctxt))
    let declare_inline name context pattern k =
      check_context_for_inline context ~func:"Extension.declare_inline";
      (let pattern = Ast_pattern.map_result pattern ~f:(fun x -> Inline x) in
       T
         (M.declare ~with_arg:false name context pattern
            (fun ~ctxt -> fun ~arg:_ -> k ~ctxt)))
    let declare_with_path_arg name context pattern k =
      let pattern = Ast_pattern.map_result pattern ~f:(fun x -> Simple x) in
      T (M.declare ~with_arg:true name context pattern k)
    let declare_inline_with_path_arg name context pattern k =
      check_context_for_inline context
        ~func:"Extension.declare_inline_with_path_arg";
      (let pattern = Ast_pattern.map_result pattern ~f:(fun x -> Inline x) in
       T (M.declare ~with_arg:true name context pattern k))
  end
let declare name context pattern f =
  V3.declare name context pattern
    (Expansion_context.Extension.with_loc_and_path f)
let declare_inline name context pattern f =
  V3.declare_inline name context pattern
    (Expansion_context.Extension.with_loc_and_path f)
let declare_with_path_arg name context pattern k =
  let k' = Expansion_context.Extension.with_loc_and_path k in
  let pattern = Ast_pattern.map_result pattern ~f:(fun x -> Simple x) in
  T (M.declare ~with_arg:true name context pattern k')
let declare_inline_with_path_arg name context pattern k =
  let k' = Expansion_context.Extension.with_loc_and_path k in
  check_context_for_inline context
    ~func:"Extension.declare_inline_with_path_arg";
  (let pattern = Ast_pattern.map_result pattern ~f:(fun x -> Inline x) in
   T (M.declare ~with_arg:true name context pattern k'))
let __declare_ppx_import name expand =
  let pattern =
    let open Ast_pattern in pstr ((pstr_type recursive (__ ^:: nil)) ^:: nil) in
  V3.declare name Context.Ppx_import pattern expand
module V2 =
  struct
    type nonrec t = t
    let declare = declare
    let declare_inline = declare_inline
  end
[
  structure_item (src/extension.ml[1,0+0]..src/extension.ml[1,0+12])
    Tstr_open Override
    module_expr (src/extension.ml[1,0+6]..src/extension.ml[1,0+12])
      Tmod_ident "Ppxlib__!.Import"
  structure_item (src/extension.ml[2,13+0]..src/extension.ml[2,13+11])
    Tstr_open Fresh
    module_expr (src/extension.ml[2,13+5]..src/extension.ml[2,13+11])
      Tmod_ident "Ppxlib__!.Common"
  structure_item (src/extension.ml[4,26+0]..src/extension.ml[4,26+68])
    Tstr_type Rec
    [
      type_declaration equality/587 (src/extension.ml[4,26+0]..src/extension.ml[4,26+68])
        ptype_params =
          [
            core_type (src/extension.ml[4,26+6]..src/extension.ml[4,26+7])
              Ttyp_any
            core_type (src/extension.ml[4,26+9]..src/extension.ml[4,26+10])
              Ttyp_any
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (src/extension.ml[4,26+23]..src/extension.ml[4,26+45])
                Eq/588
                []
                Some
                  core_type (src/extension.ml[4,26+28]..src/extension.ml[4,26+45])
                    Ttyp_constr "equality/587"
                    [
                      core_type (src/extension.ml[4,26+29]..src/extension.ml[4,26+31])
                        Ttyp_var a
                      core_type (src/extension.ml[4,26+33]..src/extension.ml[4,26+35])
                        Ttyp_var a
                    ]
              (src/extension.ml[4,26+46]..src/extension.ml[4,26+68])
                Ne/589
                []
                Some
                  core_type (src/extension.ml[4,26+53]..src/extension.ml[4,26+68])
                    Ttyp_constr "equality/587"
                    [
                      core_type (src/extension.ml[4,26+54]..src/extension.ml[4,26+55])
                        Ttyp_any
                      core_type (src/extension.ml[4,26+57]..src/extension.ml[4,26+58])
                        Ttyp_any
                    ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (src/extension.ml[6,96+0]..src/extension.ml[133,5037+3])
    Tstr_module
    Context/3201
      module_expr (src/extension.ml[6,96+17]..src/extension.ml[133,5037+3])
        Tmod_structure
        [
          structure_item (src/extension.ml[7,120+2]..src/extension.ml[19,512+37])
            Tstr_type Rec
            [
              type_declaration t/590 (src/extension.ml[7,120+2]..src/extension.ml[19,512+37])
                ptype_params =
                  [
                    core_type (src/extension.ml[7,120+7]..src/extension.ml[7,120+9])
                      Ttyp_var a
                  ]
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_variant
                    [
                      (src/extension.ml[8,134+4]..src/extension.ml[8,134+31])
                        Class_expr/591
                        []
                        Some
                          core_type (src/extension.ml[8,134+19]..src/extension.ml[8,134+31])
                            Ttyp_constr "t/590"
                            [
                              core_type (src/extension.ml[8,134+19]..src/extension.ml[8,134+29])
                                Ttyp_constr "Ppxlib__!.Import.class_expr"
                                []
                            ]
                      (src/extension.ml[9,166+4]..src/extension.ml[9,166+33])
                        Class_field/592
                        []
                        Some
                          core_type (src/extension.ml[9,166+20]..src/extension.ml[9,166+33])
                            Ttyp_constr "t/590"
                            [
                              core_type (src/extension.ml[9,166+20]..src/extension.ml[9,166+31])
                                Ttyp_constr "Ppxlib__!.Import.class_field"
                                []
                            ]
                      (src/extension.ml[10,200+4]..src/extension.ml[10,200+31])
                        Class_type/593
                        []
                        Some
                          core_type (src/extension.ml[10,200+19]..src/extension.ml[10,200+31])
                            Ttyp_constr "t/590"
                            [
                              core_type (src/extension.ml[10,200+19]..src/extension.ml[10,200+29])
                                Ttyp_constr "Ppxlib__!.Import.class_type"
                                []
                            ]
                      (src/extension.ml[11,232+4]..src/extension.ml[11,232+43])
                        Class_type_field/594
                        []
                        Some
                          core_type (src/extension.ml[11,232+25]..src/extension.ml[11,232+43])
                            Ttyp_constr "t/590"
                            [
                              core_type (src/extension.ml[11,232+25]..src/extension.ml[11,232+41])
                                Ttyp_constr "Ppxlib__!.Import.class_type_field"
                                []
                            ]
                      (src/extension.ml[12,276+4]..src/extension.ml[12,276+29])
                        Core_type/595
                        []
                        Some
                          core_type (src/extension.ml[12,276+18]..src/extension.ml[12,276+29])
                            Ttyp_constr "t/590"
                            [
                              core_type (src/extension.ml[12,276+18]..src/extension.ml[12,276+27])
                                Ttyp_constr "Ppxlib__!.Import.core_type"
                                []
                            ]
                      (src/extension.ml[13,306+4]..src/extension.ml[13,306+31])
                        Expression/596
                        []
                        Some
                          core_type (src/extension.ml[13,306+19]..src/extension.ml[13,306+31])
                            Ttyp_constr "t/590"
                            [
                              core_type (src/extension.ml[13,306+19]..src/extension.ml[13,306+29])
                                Ttyp_constr "Ppxlib__!.Import.expression"
                                []
                            ]
                      (src/extension.ml[14,338+4]..src/extension.ml[14,338+33])
                        Module_expr/597
                        []
                        Some
                          core_type (src/extension.ml[14,338+20]..src/extension.ml[14,338+33])
                            Ttyp_constr "t/590"
                            [
                              core_type (src/extension.ml[14,338+20]..src/extension.ml[14,338+31])
                                Ttyp_constr "Ppxlib__!.Import.module_expr"
                                []
                            ]
                      (src/extension.ml[15,372+4]..src/extension.ml[15,372+33])
                        Module_type/598
                        []
                        Some
                          core_type (src/extension.ml[15,372+20]..src/extension.ml[15,372+33])
                            Ttyp_constr "t/590"
                            [
                              core_type (src/extension.ml[15,372+20]..src/extension.ml[15,372+31])
                                Ttyp_constr "Ppxlib__!.Import.module_type"
                                []
                            ]
                      (src/extension.ml[16,406+4]..src/extension.ml[16,406+25])
                        Pattern/599
                        []
                        Some
                          core_type (src/extension.ml[16,406+16]..src/extension.ml[16,406+25])
                            Ttyp_constr "t/590"
                            [
                              core_type (src/extension.ml[16,406+16]..src/extension.ml[16,406+23])
                                Ttyp_constr "Ppxlib__!.Import.pattern"
                                []
                            ]
                      (src/extension.ml[17,432+4]..src/extension.ml[17,432+39])
                        Signature_item/600
                        []
                        Some
                          core_type (src/extension.ml[17,432+23]..src/extension.ml[17,432+39])
                            Ttyp_constr "t/590"
                            [
                              core_type (src/extension.ml[17,432+23]..src/extension.ml[17,432+37])
                                Ttyp_constr "Ppxlib__!.Import.signature_item"
                                []
                            ]
                      (src/extension.ml[18,472+4]..src/extension.ml[18,472+39])
                        Structure_item/601
                        []
                        Some
                          core_type (src/extension.ml[18,472+23]..src/extension.ml[18,472+39])
                            Ttyp_constr "t/590"
                            [
                              core_type (src/extension.ml[18,472+23]..src/extension.ml[18,472+37])
                                Ttyp_constr "Ppxlib__!.Import.structure_item"
                                []
                            ]
                      (src/extension.ml[19,512+4]..src/extension.ml[19,512+37])
                        Ppx_import/602
                        []
                        Some
                          core_type (src/extension.ml[19,512+19]..src/extension.ml[19,512+37])
                            Ttyp_constr "t/590"
                            [
                              core_type (src/extension.ml[19,512+19]..src/extension.ml[19,512+35])
                                Ttyp_constr "Ppxlib__!.Import.type_declaration"
                                []
                            ]
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (src/extension.ml[21,551+2]..src/extension.ml[21,551+33])
            Tstr_type Rec
            [
              type_declaration packed/603 (src/extension.ml[21,551+2]..src/extension.ml[21,551+33])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_variant
                    [
                      (src/extension.ml[21,551+16]..src/extension.ml[21,551+33])
                        T/604
                        [
                          core_type (src/extension.ml[21,551+20]..src/extension.ml[21,551+23])
                            Ttyp_constr "t/590"
                            [
                              core_type (src/extension.ml[21,551+20]..src/extension.ml[21,551+21])
                                Ttyp_any
                            ]
                        ]
                        Some
                          core_type (src/extension.ml[21,551+27]..src/extension.ml[21,551+33])
                            Ttyp_constr "packed/603"
                            []
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (src/extension.ml[23,586+2]..src/extension.ml[23,586+29])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[23,586+6]..src/extension.ml[23,586+16])
                  Tpat_var "class_expr/605"
                expression (src/extension.ml[23,586+19]..src/extension.ml[23,586+29])
                  Texp_construct "Class_expr"
                  []
            ]
          structure_item (src/extension.ml[24,616+2]..src/extension.ml[24,616+31])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[24,616+6]..src/extension.ml[24,616+17])
                  Tpat_var "class_field/606"
                expression (src/extension.ml[24,616+20]..src/extension.ml[24,616+31])
                  Texp_construct "Class_field"
                  []
            ]
          structure_item (src/extension.ml[25,648+2]..src/extension.ml[25,648+29])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[25,648+6]..src/extension.ml[25,648+16])
                  Tpat_var "class_type/607"
                expression (src/extension.ml[25,648+19]..src/extension.ml[25,648+29])
                  Texp_construct "Class_type"
                  []
            ]
          structure_item (src/extension.ml[26,678+2]..src/extension.ml[26,678+41])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[26,678+6]..src/extension.ml[26,678+22])
                  Tpat_var "class_type_field/608"
                expression (src/extension.ml[26,678+25]..src/extension.ml[26,678+41])
                  Texp_construct "Class_type_field"
                  []
            ]
          structure_item (src/extension.ml[27,720+2]..src/extension.ml[27,720+27])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[27,720+6]..src/extension.ml[27,720+15])
                  Tpat_var "core_type/609"
                expression (src/extension.ml[27,720+18]..src/extension.ml[27,720+27])
                  Texp_construct "Core_type"
                  []
            ]
          structure_item (src/extension.ml[28,748+2]..src/extension.ml[28,748+29])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[28,748+6]..src/extension.ml[28,748+16])
                  Tpat_var "expression/610"
                expression (src/extension.ml[28,748+19]..src/extension.ml[28,748+29])
                  Texp_construct "Expression"
                  []
            ]
          structure_item (src/extension.ml[29,778+2]..src/extension.ml[29,778+31])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[29,778+6]..src/extension.ml[29,778+17])
                  Tpat_var "module_expr/611"
                expression (src/extension.ml[29,778+20]..src/extension.ml[29,778+31])
                  Texp_construct "Module_expr"
                  []
            ]
          structure_item (src/extension.ml[30,810+2]..src/extension.ml[30,810+31])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[30,810+6]..src/extension.ml[30,810+17])
                  Tpat_var "module_type/612"
                expression (src/extension.ml[30,810+20]..src/extension.ml[30,810+31])
                  Texp_construct "Module_type"
                  []
            ]
          structure_item (src/extension.ml[31,842+2]..src/extension.ml[31,842+23])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[31,842+6]..src/extension.ml[31,842+13])
                  Tpat_var "pattern/613"
                expression (src/extension.ml[31,842+16]..src/extension.ml[31,842+23])
                  Texp_construct "Pattern"
                  []
            ]
          structure_item (src/extension.ml[32,866+2]..src/extension.ml[32,866+37])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[32,866+6]..src/extension.ml[32,866+20])
                  Tpat_var "signature_item/614"
                expression (src/extension.ml[32,866+23]..src/extension.ml[32,866+37])
                  Texp_construct "Signature_item"
                  []
            ]
          structure_item (src/extension.ml[33,904+2]..src/extension.ml[33,904+37])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[33,904+6]..src/extension.ml[33,904+20])
                  Tpat_var "structure_item/615"
                expression (src/extension.ml[33,904+23]..src/extension.ml[33,904+37])
                  Texp_construct "Structure_item"
                  []
            ]
          structure_item (src/extension.ml[35,943+2]..src/extension.ml[47,1390+38])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[35,943+6]..src/extension.ml[35,943+10])
                  Tpat_extra_constraint
                  core_type (src/extension.ml[35,943+6]..src/extension.ml[47,1390+38]) ghost
                    Ttyp_poly 'a
                    core_type (src/extension.ml[35,943+21]..src/extension.ml[35,943+34])
                      Ttyp_arrow
                      Nolabel
                      core_type (src/extension.ml[35,943+21]..src/extension.ml[35,943+24])
                        Ttyp_constr "t/590"
                        [
                          core_type (src/extension.ml[35,943+21]..src/extension.ml[35,943+22])
                            Ttyp_var a
                        ]
                      core_type (src/extension.ml[35,943+28]..src/extension.ml[35,943+34])
                        Ttyp_constr "string/17!"
                        []
                  pattern (src/extension.ml[35,943+6]..src/extension.ml[35,943+10])
                    Tpat_var "desc/616"
                expression (src/extension.ml[35,943+6]..src/extension.ml[47,1390+38])
                  Texp_newtype "a"
                    Texp_constraint
                    core_type (src/extension.ml[35,943+21]..src/extension.ml[35,943+34])
                      Ttyp_arrow
                      Nolabel
                      core_type (src/extension.ml[35,943+21]..src/extension.ml[35,943+24])
                        Ttyp_constr "t/590"
                        [
                          core_type (src/extension.ml[35,943+21]..src/extension.ml[35,943+22])
                            Ttyp_constr "a/617"
                            []
                        ]
                      core_type (src/extension.ml[35,943+28]..src/extension.ml[35,943+34])
                        Ttyp_constr "string/17!"
                        []
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/extension.ml[36,989+6]..src/extension.ml[36,989+16])
                            Tpat_construct "Class_expr"
                            []
                          expression (src/extension.ml[36,989+20]..src/extension.ml[36,989+38])
                            Texp_constant Const_string("class expression",(src/extension.ml[36,989+21]..src/extension.ml[36,989+37]),None)
                        <case>
                          pattern (src/extension.ml[37,1028+6]..src/extension.ml[37,1028+17])
                            Tpat_construct "Class_field"
                            []
                          expression (src/extension.ml[37,1028+21]..src/extension.ml[37,1028+34])
                            Texp_constant Const_string("class field",(src/extension.ml[37,1028+22]..src/extension.ml[37,1028+33]),None)
                        <case>
                          pattern (src/extension.ml[38,1063+6]..src/extension.ml[38,1063+16])
                            Tpat_construct "Class_type"
                            []
                          expression (src/extension.ml[38,1063+20]..src/extension.ml[38,1063+32])
                            Texp_constant Const_string("class type",(src/extension.ml[38,1063+21]..src/extension.ml[38,1063+31]),None)
                        <case>
                          pattern (src/extension.ml[39,1096+6]..src/extension.ml[39,1096+22])
                            Tpat_construct "Class_type_field"
                            []
                          expression (src/extension.ml[39,1096+26]..src/extension.ml[39,1096+44])
                            Texp_constant Const_string("class type field",(src/extension.ml[39,1096+27]..src/extension.ml[39,1096+43]),None)
                        <case>
                          pattern (src/extension.ml[40,1141+6]..src/extension.ml[40,1141+15])
                            Tpat_construct "Core_type"
                            []
                          expression (src/extension.ml[40,1141+19]..src/extension.ml[40,1141+30])
                            Texp_constant Const_string("core type",(src/extension.ml[40,1141+20]..src/extension.ml[40,1141+29]),None)
                        <case>
                          pattern (src/extension.ml[41,1172+6]..src/extension.ml[41,1172+16])
                            Tpat_construct "Expression"
                            []
                          expression (src/extension.ml[41,1172+20]..src/extension.ml[41,1172+32])
                            Texp_constant Const_string("expression",(src/extension.ml[41,1172+21]..src/extension.ml[41,1172+31]),None)
                        <case>
                          pattern (src/extension.ml[42,1205+6]..src/extension.ml[42,1205+17])
                            Tpat_construct "Module_expr"
                            []
                          expression (src/extension.ml[42,1205+21]..src/extension.ml[42,1205+40])
                            Texp_constant Const_string("module expression",(src/extension.ml[42,1205+22]..src/extension.ml[42,1205+39]),None)
                        <case>
                          pattern (src/extension.ml[43,1246+6]..src/extension.ml[43,1246+17])
                            Tpat_construct "Module_type"
                            []
                          expression (src/extension.ml[43,1246+21]..src/extension.ml[43,1246+34])
                            Texp_constant Const_string("module type",(src/extension.ml[43,1246+22]..src/extension.ml[43,1246+33]),None)
                        <case>
                          pattern (src/extension.ml[44,1281+6]..src/extension.ml[44,1281+13])
                            Tpat_construct "Pattern"
                            []
                          expression (src/extension.ml[44,1281+17]..src/extension.ml[44,1281+26])
                            Texp_constant Const_string("pattern",(src/extension.ml[44,1281+18]..src/extension.ml[44,1281+25]),None)
                        <case>
                          pattern (src/extension.ml[45,1308+6]..src/extension.ml[45,1308+20])
                            Tpat_construct "Signature_item"
                            []
                          expression (src/extension.ml[45,1308+24]..src/extension.ml[45,1308+40])
                            Texp_constant Const_string("signature item",(src/extension.ml[45,1308+25]..src/extension.ml[45,1308+39]),None)
                        <case>
                          pattern (src/extension.ml[46,1349+6]..src/extension.ml[46,1349+20])
                            Tpat_construct "Structure_item"
                            []
                          expression (src/extension.ml[46,1349+24]..src/extension.ml[46,1349+40])
                            Texp_constant Const_string("structure item",(src/extension.ml[46,1349+25]..src/extension.ml[46,1349+39]),None)
                        <case>
                          pattern (src/extension.ml[47,1390+6]..src/extension.ml[47,1390+16])
                            Tpat_construct "Ppx_import"
                            []
                          expression (src/extension.ml[47,1390+20]..src/extension.ml[47,1390+38])
                            Texp_constant Const_string("type declaration",(src/extension.ml[47,1390+21]..src/extension.ml[47,1390+37]),None)
                      ]
            ]
          structure_item (src/extension.ml[49,1430+2]..src/extension.ml[66,2018+10])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[49,1430+6]..src/extension.ml[49,1430+8])
                  Tpat_extra_constraint
                  core_type (src/extension.ml[49,1430+6]..src/extension.ml[66,2018+10]) ghost
                    Ttyp_poly 'a 'b
                    core_type (src/extension.ml[49,1430+21]..src/extension.ml[49,1430+50])
                      Ttyp_arrow
                      Nolabel
                      core_type (src/extension.ml[49,1430+21]..src/extension.ml[49,1430+24])
                        Ttyp_constr "t/590"
                        [
                          core_type (src/extension.ml[49,1430+21]..src/extension.ml[49,1430+22])
                            Ttyp_var a
                        ]
                      core_type (src/extension.ml[49,1430+28]..src/extension.ml[49,1430+50])
                        Ttyp_arrow
                        Nolabel
                        core_type (src/extension.ml[49,1430+28]..src/extension.ml[49,1430+31])
                          Ttyp_constr "t/590"
                          [
                            core_type (src/extension.ml[49,1430+28]..src/extension.ml[49,1430+29])
                              Ttyp_var b
                          ]
                        core_type (src/extension.ml[49,1430+35]..src/extension.ml[49,1430+50])
                          Ttyp_constr "equality/587"
                          [
                            core_type (src/extension.ml[49,1430+36]..src/extension.ml[49,1430+37])
                              Ttyp_var a
                            core_type (src/extension.ml[49,1430+39]..src/extension.ml[49,1430+40])
                              Ttyp_var b
                          ]
                  pattern (src/extension.ml[49,1430+6]..src/extension.ml[49,1430+8])
                    Tpat_var "eq/1317"
                expression (src/extension.ml[49,1430+6]..src/extension.ml[66,2018+10])
                  Texp_newtype "a"
                    Texp_newtype "b"
                      Texp_constraint
                      core_type (src/extension.ml[49,1430+21]..src/extension.ml[49,1430+50])
                        Ttyp_arrow
                        Nolabel
                        core_type (src/extension.ml[49,1430+21]..src/extension.ml[49,1430+24])
                          Ttyp_constr "t/590"
                          [
                            core_type (src/extension.ml[49,1430+21]..src/extension.ml[49,1430+22])
                              Ttyp_constr "a/1318"
                              []
                          ]
                        core_type (src/extension.ml[49,1430+28]..src/extension.ml[49,1430+50])
                          Ttyp_arrow
                          Nolabel
                          core_type (src/extension.ml[49,1430+28]..src/extension.ml[49,1430+31])
                            Ttyp_constr "t/590"
                            [
                              core_type (src/extension.ml[49,1430+28]..src/extension.ml[49,1430+29])
                                Ttyp_constr "b/1319"
                                []
                            ]
                          core_type (src/extension.ml[49,1430+35]..src/extension.ml[49,1430+50])
                            Ttyp_constr "equality/587"
                            [
                              core_type (src/extension.ml[49,1430+36]..src/extension.ml[49,1430+37])
                                Ttyp_constr "a/1318"
                                []
                              core_type (src/extension.ml[49,1430+39]..src/extension.ml[49,1430+40])
                                Ttyp_constr "b/1319"
                                []
                            ]
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/extension.ml[50,1483+7]..src/extension.ml[50,1483+8])
                              Tpat_var "a/1320"
                            expression (src/extension.ml[50,1483+9]..src/extension.ml[66,2018+10]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/extension.ml[50,1483+9]..src/extension.ml[50,1483+10])
                                    Tpat_var "b/1321"
                                  expression (src/extension.ml[51,1497+4]..src/extension.ml[66,2018+10])
                                    Texp_match
                                    expression (src/extension.ml[51,1497+10]..src/extension.ml[51,1497+16])
                                      Texp_tuple
                                      [
                                        expression (src/extension.ml[51,1497+11]..src/extension.ml[51,1497+12])
                                          Texp_ident "a/1320"
                                        expression (src/extension.ml[51,1497+14]..src/extension.ml[51,1497+15])
                                          Texp_ident "b/1321"
                                      ]
                                    [
                                      <case>
                                        pattern (src/extension.ml[52,1519+6]..src/extension.ml[52,1519+28])
                                          Tpat_value
                                          pattern (src/extension.ml[52,1519+6]..src/extension.ml[52,1519+28])
                                            Tpat_tuple
                                            [
                                              pattern (src/extension.ml[52,1519+6]..src/extension.ml[52,1519+16])
                                                Tpat_construct "Class_expr"
                                                []
                                              pattern (src/extension.ml[52,1519+18]..src/extension.ml[52,1519+28])
                                                Tpat_construct "Class_expr"
                                                []
                                            ]
                                        expression (src/extension.ml[52,1519+32]..src/extension.ml[52,1519+34])
                                          Texp_construct "Eq"
                                          []
                                      <case>
                                        pattern (src/extension.ml[53,1554+6]..src/extension.ml[53,1554+30])
                                          Tpat_value
                                          pattern (src/extension.ml[53,1554+6]..src/extension.ml[53,1554+30])
                                            Tpat_tuple
                                            [
                                              pattern (src/extension.ml[53,1554+6]..src/extension.ml[53,1554+17])
                                                Tpat_construct "Class_field"
                                                []
                                              pattern (src/extension.ml[53,1554+19]..src/extension.ml[53,1554+30])
                                                Tpat_construct "Class_field"
                                                []
                                            ]
                                        expression (src/extension.ml[53,1554+34]..src/extension.ml[53,1554+36])
                                          Texp_construct "Eq"
                                          []
                                      <case>
                                        pattern (src/extension.ml[54,1591+6]..src/extension.ml[54,1591+28])
                                          Tpat_value
                                          pattern (src/extension.ml[54,1591+6]..src/extension.ml[54,1591+28])
                                            Tpat_tuple
                                            [
                                              pattern (src/extension.ml[54,1591+6]..src/extension.ml[54,1591+16])
                                                Tpat_construct "Class_type"
                                                []
                                              pattern (src/extension.ml[54,1591+18]..src/extension.ml[54,1591+28])
                                                Tpat_construct "Class_type"
                                                []
                                            ]
                                        expression (src/extension.ml[54,1591+32]..src/extension.ml[54,1591+34])
                                          Texp_construct "Eq"
                                          []
                                      <case>
                                        pattern (src/extension.ml[55,1626+6]..src/extension.ml[55,1626+40])
                                          Tpat_value
                                          pattern (src/extension.ml[55,1626+6]..src/extension.ml[55,1626+40])
                                            Tpat_tuple
                                            [
                                              pattern (src/extension.ml[55,1626+6]..src/extension.ml[55,1626+22])
                                                Tpat_construct "Class_type_field"
                                                []
                                              pattern (src/extension.ml[55,1626+24]..src/extension.ml[55,1626+40])
                                                Tpat_construct "Class_type_field"
                                                []
                                            ]
                                        expression (src/extension.ml[55,1626+44]..src/extension.ml[55,1626+46])
                                          Texp_construct "Eq"
                                          []
                                      <case>
                                        pattern (src/extension.ml[56,1673+6]..src/extension.ml[56,1673+26])
                                          Tpat_value
                                          pattern (src/extension.ml[56,1673+6]..src/extension.ml[56,1673+26])
                                            Tpat_tuple
                                            [
                                              pattern (src/extension.ml[56,1673+6]..src/extension.ml[56,1673+15])
                                                Tpat_construct "Core_type"
                                                []
                                              pattern (src/extension.ml[56,1673+17]..src/extension.ml[56,1673+26])
                                                Tpat_construct "Core_type"
                                                []
                                            ]
                                        expression (src/extension.ml[56,1673+30]..src/extension.ml[56,1673+32])
                                          Texp_construct "Eq"
                                          []
                                      <case>
                                        pattern (src/extension.ml[57,1706+6]..src/extension.ml[57,1706+28])
                                          Tpat_value
                                          pattern (src/extension.ml[57,1706+6]..src/extension.ml[57,1706+28])
                                            Tpat_tuple
                                            [
                                              pattern (src/extension.ml[57,1706+6]..src/extension.ml[57,1706+16])
                                                Tpat_construct "Expression"
                                                []
                                              pattern (src/extension.ml[57,1706+18]..src/extension.ml[57,1706+28])
                                                Tpat_construct "Expression"
                                                []
                                            ]
                                        expression (src/extension.ml[57,1706+32]..src/extension.ml[57,1706+34])
                                          Texp_construct "Eq"
                                          []
                                      <case>
                                        pattern (src/extension.ml[58,1741+6]..src/extension.ml[58,1741+30])
                                          Tpat_value
                                          pattern (src/extension.ml[58,1741+6]..src/extension.ml[58,1741+30])
                                            Tpat_tuple
                                            [
                                              pattern (src/extension.ml[58,1741+6]..src/extension.ml[58,1741+17])
                                                Tpat_construct "Module_expr"
                                                []
                                              pattern (src/extension.ml[58,1741+19]..src/extension.ml[58,1741+30])
                                                Tpat_construct "Module_expr"
                                                []
                                            ]
                                        expression (src/extension.ml[58,1741+34]..src/extension.ml[58,1741+36])
                                          Texp_construct "Eq"
                                          []
                                      <case>
                                        pattern (src/extension.ml[59,1778+6]..src/extension.ml[59,1778+30])
                                          Tpat_value
                                          pattern (src/extension.ml[59,1778+6]..src/extension.ml[59,1778+30])
                                            Tpat_tuple
                                            [
                                              pattern (src/extension.ml[59,1778+6]..src/extension.ml[59,1778+17])
                                                Tpat_construct "Module_type"
                                                []
                                              pattern (src/extension.ml[59,1778+19]..src/extension.ml[59,1778+30])
                                                Tpat_construct "Module_type"
                                                []
                                            ]
                                        expression (src/extension.ml[59,1778+34]..src/extension.ml[59,1778+36])
                                          Texp_construct "Eq"
                                          []
                                      <case>
                                        pattern (src/extension.ml[60,1815+6]..src/extension.ml[60,1815+22])
                                          Tpat_value
                                          pattern (src/extension.ml[60,1815+6]..src/extension.ml[60,1815+22])
                                            Tpat_tuple
                                            [
                                              pattern (src/extension.ml[60,1815+6]..src/extension.ml[60,1815+13])
                                                Tpat_construct "Pattern"
                                                []
                                              pattern (src/extension.ml[60,1815+15]..src/extension.ml[60,1815+22])
                                                Tpat_construct "Pattern"
                                                []
                                            ]
                                        expression (src/extension.ml[60,1815+26]..src/extension.ml[60,1815+28])
                                          Texp_construct "Eq"
                                          []
                                      <case>
                                        pattern (src/extension.ml[61,1844+6]..src/extension.ml[61,1844+36])
                                          Tpat_value
                                          pattern (src/extension.ml[61,1844+6]..src/extension.ml[61,1844+36])
                                            Tpat_tuple
                                            [
                                              pattern (src/extension.ml[61,1844+6]..src/extension.ml[61,1844+20])
                                                Tpat_construct "Signature_item"
                                                []
                                              pattern (src/extension.ml[61,1844+22]..src/extension.ml[61,1844+36])
                                                Tpat_construct "Signature_item"
                                                []
                                            ]
                                        expression (src/extension.ml[61,1844+40]..src/extension.ml[61,1844+42])
                                          Texp_construct "Eq"
                                          []
                                      <case>
                                        pattern (src/extension.ml[62,1887+6]..src/extension.ml[62,1887+36])
                                          Tpat_value
                                          pattern (src/extension.ml[62,1887+6]..src/extension.ml[62,1887+36])
                                            Tpat_tuple
                                            [
                                              pattern (src/extension.ml[62,1887+6]..src/extension.ml[62,1887+20])
                                                Tpat_construct "Structure_item"
                                                []
                                              pattern (src/extension.ml[62,1887+22]..src/extension.ml[62,1887+36])
                                                Tpat_construct "Structure_item"
                                                []
                                            ]
                                        expression (src/extension.ml[62,1887+40]..src/extension.ml[62,1887+42])
                                          Texp_construct "Eq"
                                          []
                                      <case>
                                        pattern (src/extension.ml[63,1930+6]..src/extension.ml[63,1930+28])
                                          Tpat_value
                                          pattern (src/extension.ml[63,1930+6]..src/extension.ml[63,1930+28])
                                            Tpat_tuple
                                            [
                                              pattern (src/extension.ml[63,1930+6]..src/extension.ml[63,1930+16])
                                                Tpat_construct "Ppx_import"
                                                []
                                              pattern (src/extension.ml[63,1930+18]..src/extension.ml[63,1930+28])
                                                Tpat_construct "Ppx_import"
                                                []
                                            ]
                                        expression (src/extension.ml[63,1930+32]..src/extension.ml[63,1930+34])
                                          Texp_construct "Eq"
                                          []
                                      <case>
                                        pattern (src/extension.ml[64,1965+6]..src/extension.ml[64,1965+7])
                                          Tpat_value
                                          pattern (src/extension.ml[64,1965+6]..src/extension.ml[64,1965+7])
                                            Tpat_any
                                        expression (src/extension.ml[65,1976+8]..src/extension.ml[66,2018+10])
                                          Texp_sequence
                                          expression (src/extension.ml[65,1976+8]..src/extension.ml[65,1976+40])
                                            Texp_assert                                            expression (src/extension.ml[65,1976+15]..src/extension.ml[65,1976+40])
                                              Texp_apply
                                              expression (src/extension.ml[65,1976+16]..src/extension.ml[65,1976+27])
                                                Texp_ident "Ppxlib__!.Import.Poly.<>"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[65,1976+28]..src/extension.ml[65,1976+33])
                                                    Texp_construct "T"
                                                    [
                                                      expression (src/extension.ml[65,1976+31]..src/extension.ml[65,1976+32])
                                                        Texp_ident "a/1320"
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[65,1976+34]..src/extension.ml[65,1976+39])
                                                    Texp_construct "T"
                                                    [
                                                      expression (src/extension.ml[65,1976+37]..src/extension.ml[65,1976+38])
                                                        Texp_ident "b/1321"
                                                    ]
                                              ]
                                          expression (src/extension.ml[66,2018+8]..src/extension.ml[66,2018+10])
                                            Texp_construct "Ne"
                                            []
                                    ]
                                    []
                              ]
                        ]
            ]
          structure_item (src/extension.ml[68,2030+2]..src/extension.ml[78,2407+15])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[68,2030+6]..src/extension.ml[68,2030+30])
                  Tpat_var "get_ppx_import_extension/1378"
                expression (src/extension.ml[68,2030+31]..src/extension.ml[78,2407+15]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/extension.ml[68,2030+31]..src/extension.ml[68,2030+40])
                        Tpat_var "type_decl/1380"
                      expression (src/extension.ml[69,2073+4]..src/extension.ml[78,2407+15])
                        Texp_match
                        expression (src/extension.ml[69,2073+10]..src/extension.ml[69,2073+19])
                          Texp_ident "type_decl/1380"
                        [
                          <case>
                            pattern (src/extension.ml[70,2098+6]..src/extension.ml[70,2098+78])
                              Tpat_value
                              pattern (src/extension.ml[70,2098+6]..src/extension.ml[70,2098+78])
                                Tpat_record
                                [
                                  "ptype_manifest"
                                    pattern (src/extension.ml[70,2098+25]..src/extension.ml[70,2098+73])
                                      Tpat_construct "Some"
                                      [
                                        pattern (src/extension.ml[70,2098+30]..src/extension.ml[70,2098+73])
                                          Tpat_record
                                          [
                                            "ptyp_desc"
                                              pattern (src/extension.ml[70,2098+44]..src/extension.ml[70,2098+68])
                                                Tpat_construct "Ptyp_extension"
                                                [
                                                  pattern (src/extension.ml[70,2098+59]..src/extension.ml[70,2098+68])
                                                    Tpat_tuple
                                                    [
                                                      pattern (src/extension.ml[70,2098+60]..src/extension.ml[70,2098+64])
                                                        Tpat_var "name/1381"
                                                      pattern (src/extension.ml[70,2098+66]..src/extension.ml[70,2098+67])
                                                        Tpat_any
                                                    ]
                                                ]
                                          ]
                                      ]
                                ]
                            expression (src/extension.ml[72,2186+8]..src/extension.ml[77,2353+53])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/extension.ml[72,2186+12]..src/extension.ml[72,2186+27])
                                    Tpat_var "virtual_payload/1382"
                                  expression (src/extension.ml[73,2216+10]..src/extension.ml[74,2291+25])
                                    Texp_apply
                                    expression (src/extension.ml[73,2216+10]..src/extension.ml[73,2216+39])
                                      Texp_ident "Ppxlib__!.Ast_builder.Default.pstr_type"
                                    [
                                      <arg>
                                        Labelled "loc"
                                        expression (src/extension.ml[73,2216+45]..src/extension.ml[73,2216+64])
                                          Texp_field
                                          expression (src/extension.ml[73,2216+45]..src/extension.ml[73,2216+54])
                                            Texp_ident "type_decl/1380"
                                          "ptype_loc"
                                      <arg>
                                        Nolabel
                                        expression (src/extension.ml[73,2216+65]..src/extension.ml[73,2216+74])
                                          Texp_construct "Recursive"
                                          []
                                      <arg>
                                        Nolabel
                                        expression (src/extension.ml[74,2291+12]..src/extension.ml[74,2291+25])
                                          Texp_construct "::"
                                          [
                                            expression (src/extension.ml[74,2291+14]..src/extension.ml[74,2291+23])
                                              Texp_ident "type_decl/1380"
                                            expression (src/extension.ml[74,2291+24]..src/extension.ml[74,2291+25]) ghost
                                              Texp_construct "[]"
                                              []
                                          ]
                                    ]
                              ]
                              expression (src/extension.ml[76,2328+8]..src/extension.ml[77,2353+53])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (src/extension.ml[76,2328+12]..src/extension.ml[76,2328+16])
                                      Tpat_var "attr/3090"
                                    expression (src/extension.ml[76,2328+19]..src/extension.ml[76,2328+21])
                                      Texp_construct "[]"
                                      []
                                ]
                                expression (src/extension.ml[77,2353+8]..src/extension.ml[77,2353+53])
                                  Texp_construct "Some"
                                  [
                                    expression (src/extension.ml[77,2353+13]..src/extension.ml[77,2353+53])
                                      Texp_tuple
                                      [
                                        expression (src/extension.ml[77,2353+14]..src/extension.ml[77,2353+46])
                                          Texp_tuple
                                          [
                                            expression (src/extension.ml[77,2353+15]..src/extension.ml[77,2353+19])
                                              Texp_ident "name/1381"
                                            expression (src/extension.ml[77,2353+21]..src/extension.ml[77,2353+45])
                                              Texp_construct "PStr"
                                              [
                                                expression (src/extension.ml[77,2353+26]..src/extension.ml[77,2353+45])
                                                  Texp_construct "::"
                                                  [
                                                    expression (src/extension.ml[77,2353+28]..src/extension.ml[77,2353+43])
                                                      Texp_ident "virtual_payload/1382"
                                                    expression (src/extension.ml[77,2353+44]..src/extension.ml[77,2353+45]) ghost
                                                      Texp_construct "[]"
                                                      []
                                                  ]
                                              ]
                                          ]
                                        expression (src/extension.ml[77,2353+48]..src/extension.ml[77,2353+52])
                                          Texp_ident "attr/3090"
                                      ]
                                  ]
                          <case>
                            pattern (src/extension.ml[78,2407+6]..src/extension.ml[78,2407+7])
                              Tpat_value
                              pattern (src/extension.ml[78,2407+6]..src/extension.ml[78,2407+7])
                                Tpat_any
                            expression (src/extension.ml[78,2407+11]..src/extension.ml[78,2407+15])
                              Texp_construct "None"
                              []
                        ]
                        []
                  ]
            ]
          structure_item (src/extension.ml[80,2424+2]..src/extension.ml[105,3645+15])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[80,2424+6]..src/extension.ml[80,2424+19])
                  Tpat_extra_constraint
                  core_type (src/extension.ml[80,2424+6]..src/extension.ml[105,3645+15]) ghost
                    Ttyp_poly 'a
                    core_type (src/extension.ml[80,2424+30]..src/extension.ml[80,2424+73])
                      Ttyp_arrow
                      Nolabel
                      core_type (src/extension.ml[80,2424+30]..src/extension.ml[80,2424+33])
                        Ttyp_constr "t/590"
                        [
                          core_type (src/extension.ml[80,2424+30]..src/extension.ml[80,2424+31])
                            Ttyp_var a
                        ]
                      core_type (src/extension.ml[80,2424+37]..src/extension.ml[80,2424+73])
                        Ttyp_arrow
                        Nolabel
                        core_type (src/extension.ml[80,2424+37]..src/extension.ml[80,2424+38])
                          Ttyp_var a
                        core_type (src/extension.ml[80,2424+42]..src/extension.ml[80,2424+73])
                          Ttyp_constr "option/12!"
                          [
                            core_type (src/extension.ml[80,2424+43]..src/extension.ml[80,2424+65])
                              Ttyp_tuple
                              [
                                core_type (src/extension.ml[80,2424+43]..src/extension.ml[80,2424+52])
                                  Ttyp_constr "Ppxlib__!.Import.extension"
                                  []
                                core_type (src/extension.ml[80,2424+55]..src/extension.ml[80,2424+65])
                                  Ttyp_constr "Ppxlib__!.Import.attributes"
                                  []
                              ]
                          ]
                  pattern (src/extension.ml[80,2424+6]..src/extension.ml[80,2424+19])
                    Tpat_var "get_extension/3091"
                expression (src/extension.ml[80,2424+6]..src/extension.ml[105,3645+15])
                  Texp_newtype "a"
                    Texp_constraint
                    core_type (src/extension.ml[80,2424+30]..src/extension.ml[80,2424+73])
                      Ttyp_arrow
                      Nolabel
                      core_type (src/extension.ml[80,2424+30]..src/extension.ml[80,2424+33])
                        Ttyp_constr "t/590"
                        [
                          core_type (src/extension.ml[80,2424+30]..src/extension.ml[80,2424+31])
                            Ttyp_constr "a/3092"
                            []
                        ]
                      core_type (src/extension.ml[80,2424+37]..src/extension.ml[80,2424+73])
                        Ttyp_arrow
                        Nolabel
                        core_type (src/extension.ml[80,2424+37]..src/extension.ml[80,2424+38])
                          Ttyp_constr "a/3092"
                          []
                        core_type (src/extension.ml[80,2424+42]..src/extension.ml[80,2424+73])
                          Ttyp_constr "option/12!"
                          [
                            core_type (src/extension.ml[80,2424+43]..src/extension.ml[80,2424+65])
                              Ttyp_tuple
                              [
                                core_type (src/extension.ml[80,2424+43]..src/extension.ml[80,2424+52])
                                  Ttyp_constr "Ppxlib__!.Import.extension"
                                  []
                                core_type (src/extension.ml[80,2424+55]..src/extension.ml[80,2424+65])
                                  Ttyp_constr "Ppxlib__!.Import.attributes"
                                  []
                              ]
                          ]
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/extension.ml[81,2500+7]..src/extension.ml[81,2500+8])
                            Tpat_var "t/3093"
                          expression (src/extension.ml[81,2500+9]..src/extension.ml[105,3645+15]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[81,2500+9]..src/extension.ml[81,2500+10])
                                  Tpat_var "x/3094"
                                expression (src/extension.ml[82,2514+4]..src/extension.ml[105,3645+15])
                                  Texp_match
                                  expression (src/extension.ml[82,2514+10]..src/extension.ml[82,2514+16])
                                    Texp_tuple
                                    [
                                      expression (src/extension.ml[82,2514+11]..src/extension.ml[82,2514+12])
                                        Texp_ident "t/3093"
                                      expression (src/extension.ml[82,2514+14]..src/extension.ml[82,2514+15])
                                        Texp_ident "x/3094"
                                    ]
                                  [
                                    <case>
                                      pattern (src/extension.ml[83,2536+6]..src/extension.ml[83,2536+71])
                                        Tpat_value
                                        pattern (src/extension.ml[83,2536+6]..src/extension.ml[83,2536+71])
                                          Tpat_tuple
                                          [
                                            pattern (src/extension.ml[83,2536+6]..src/extension.ml[83,2536+16])
                                              Tpat_construct "Class_expr"
                                              []
                                            pattern (src/extension.ml[83,2536+18]..src/extension.ml[83,2536+71])
                                              Tpat_record
                                              [
                                                "pcl_desc"
                                                  pattern (src/extension.ml[83,2536+31]..src/extension.ml[83,2536+46])
                                                    Tpat_construct "Pcl_extension"
                                                    [
                                                      pattern (src/extension.ml[83,2536+45]..src/extension.ml[83,2536+46])
                                                        Tpat_var "e/3095"
                                                    ]
                                                "pcl_attributes"
                                                  pattern (src/extension.ml[83,2536+65]..src/extension.ml[83,2536+66])
                                                    Tpat_var "a/3096"
                                              ]
                                          ]
                                      expression (src/extension.ml[84,2611+8]..src/extension.ml[84,2611+19])
                                        Texp_construct "Some"
                                        [
                                          expression (src/extension.ml[84,2611+13]..src/extension.ml[84,2611+19])
                                            Texp_tuple
                                            [
                                              expression (src/extension.ml[84,2611+14]..src/extension.ml[84,2611+15])
                                                Texp_ident "e/3095"
                                              expression (src/extension.ml[84,2611+17]..src/extension.ml[84,2611+18])
                                                Texp_ident "a/3096"
                                            ]
                                        ]
                                    <case>
                                      pattern (src/extension.ml[85,2631+6]..src/extension.ml[85,2631+72])
                                        Tpat_value
                                        pattern (src/extension.ml[85,2631+6]..src/extension.ml[85,2631+72])
                                          Tpat_tuple
                                          [
                                            pattern (src/extension.ml[85,2631+6]..src/extension.ml[85,2631+17])
                                              Tpat_construct "Class_field"
                                              []
                                            pattern (src/extension.ml[85,2631+19]..src/extension.ml[85,2631+72])
                                              Tpat_record
                                              [
                                                "pcf_desc"
                                                  pattern (src/extension.ml[85,2631+32]..src/extension.ml[85,2631+47])
                                                    Tpat_construct "Pcf_extension"
                                                    [
                                                      pattern (src/extension.ml[85,2631+46]..src/extension.ml[85,2631+47])
                                                        Tpat_var "e/3097"
                                                    ]
                                                "pcf_attributes"
                                                  pattern (src/extension.ml[85,2631+66]..src/extension.ml[85,2631+67])
                                                    Tpat_var "a/3098"
                                              ]
                                          ]
                                      expression (src/extension.ml[86,2707+8]..src/extension.ml[86,2707+19])
                                        Texp_construct "Some"
                                        [
                                          expression (src/extension.ml[86,2707+13]..src/extension.ml[86,2707+19])
                                            Texp_tuple
                                            [
                                              expression (src/extension.ml[86,2707+14]..src/extension.ml[86,2707+15])
                                                Texp_ident "e/3097"
                                              expression (src/extension.ml[86,2707+17]..src/extension.ml[86,2707+18])
                                                Texp_ident "a/3098"
                                            ]
                                        ]
                                    <case>
                                      pattern (src/extension.ml[87,2727+6]..src/extension.ml[87,2727+74])
                                        Tpat_value
                                        pattern (src/extension.ml[87,2727+6]..src/extension.ml[87,2727+74])
                                          Tpat_tuple
                                          [
                                            pattern (src/extension.ml[87,2727+6]..src/extension.ml[87,2727+16])
                                              Tpat_construct "Class_type"
                                              []
                                            pattern (src/extension.ml[87,2727+18]..src/extension.ml[87,2727+74])
                                              Tpat_record
                                              [
                                                "pcty_desc"
                                                  pattern (src/extension.ml[87,2727+32]..src/extension.ml[87,2727+48])
                                                    Tpat_construct "Pcty_extension"
                                                    [
                                                      pattern (src/extension.ml[87,2727+47]..src/extension.ml[87,2727+48])
                                                        Tpat_var "e/3099"
                                                    ]
                                                "pcty_attributes"
                                                  pattern (src/extension.ml[87,2727+68]..src/extension.ml[87,2727+69])
                                                    Tpat_var "a/3100"
                                              ]
                                          ]
                                      expression (src/extension.ml[88,2805+8]..src/extension.ml[88,2805+19])
                                        Texp_construct "Some"
                                        [
                                          expression (src/extension.ml[88,2805+13]..src/extension.ml[88,2805+19])
                                            Texp_tuple
                                            [
                                              expression (src/extension.ml[88,2805+14]..src/extension.ml[88,2805+15])
                                                Texp_ident "e/3099"
                                              expression (src/extension.ml[88,2805+17]..src/extension.ml[88,2805+18])
                                                Texp_ident "a/3100"
                                            ]
                                        ]
                                    <case>
                                      pattern (src/extension.ml[89,2825+6]..src/extension.ml[89,2825+80])
                                        Tpat_value
                                        pattern (src/extension.ml[89,2825+6]..src/extension.ml[89,2825+80])
                                          Tpat_tuple
                                          [
                                            pattern (src/extension.ml[89,2825+6]..src/extension.ml[89,2825+22])
                                              Tpat_construct "Class_type_field"
                                              []
                                            pattern (src/extension.ml[89,2825+24]..src/extension.ml[89,2825+80])
                                              Tpat_record
                                              [
                                                "pctf_desc"
                                                  pattern (src/extension.ml[89,2825+38]..src/extension.ml[89,2825+54])
                                                    Tpat_construct "Pctf_extension"
                                                    [
                                                      pattern (src/extension.ml[89,2825+53]..src/extension.ml[89,2825+54])
                                                        Tpat_var "e/3101"
                                                    ]
                                                "pctf_attributes"
                                                  pattern (src/extension.ml[89,2825+74]..src/extension.ml[89,2825+75])
                                                    Tpat_var "a/3102"
                                              ]
                                          ]
                                      expression (src/extension.ml[91,2915+8]..src/extension.ml[91,2915+19])
                                        Texp_construct "Some"
                                        [
                                          expression (src/extension.ml[91,2915+13]..src/extension.ml[91,2915+19])
                                            Texp_tuple
                                            [
                                              expression (src/extension.ml[91,2915+14]..src/extension.ml[91,2915+15])
                                                Texp_ident "e/3101"
                                              expression (src/extension.ml[91,2915+17]..src/extension.ml[91,2915+18])
                                                Texp_ident "a/3102"
                                            ]
                                        ]
                                    <case>
                                      pattern (src/extension.ml[92,2935+6]..src/extension.ml[92,2935+73])
                                        Tpat_value
                                        pattern (src/extension.ml[92,2935+6]..src/extension.ml[92,2935+73])
                                          Tpat_tuple
                                          [
                                            pattern (src/extension.ml[92,2935+6]..src/extension.ml[92,2935+15])
                                              Tpat_construct "Core_type"
                                              []
                                            pattern (src/extension.ml[92,2935+17]..src/extension.ml[92,2935+73])
                                              Tpat_record
                                              [
                                                "ptyp_desc"
                                                  pattern (src/extension.ml[92,2935+31]..src/extension.ml[92,2935+47])
                                                    Tpat_construct "Ptyp_extension"
                                                    [
                                                      pattern (src/extension.ml[92,2935+46]..src/extension.ml[92,2935+47])
                                                        Tpat_var "e/3103"
                                                    ]
                                                "ptyp_attributes"
                                                  pattern (src/extension.ml[92,2935+67]..src/extension.ml[92,2935+68])
                                                    Tpat_var "a/3104"
                                              ]
                                          ]
                                      expression (src/extension.ml[93,3012+8]..src/extension.ml[93,3012+19])
                                        Texp_construct "Some"
                                        [
                                          expression (src/extension.ml[93,3012+13]..src/extension.ml[93,3012+19])
                                            Texp_tuple
                                            [
                                              expression (src/extension.ml[93,3012+14]..src/extension.ml[93,3012+15])
                                                Texp_ident "e/3103"
                                              expression (src/extension.ml[93,3012+17]..src/extension.ml[93,3012+18])
                                                Texp_ident "a/3104"
                                            ]
                                        ]
                                    <case>
                                      pattern (src/extension.ml[94,3032+6]..src/extension.ml[94,3032+74])
                                        Tpat_value
                                        pattern (src/extension.ml[94,3032+6]..src/extension.ml[94,3032+74])
                                          Tpat_tuple
                                          [
                                            pattern (src/extension.ml[94,3032+6]..src/extension.ml[94,3032+16])
                                              Tpat_construct "Expression"
                                              []
                                            pattern (src/extension.ml[94,3032+18]..src/extension.ml[94,3032+74])
                                              Tpat_record
                                              [
                                                "pexp_desc"
                                                  pattern (src/extension.ml[94,3032+32]..src/extension.ml[94,3032+48])
                                                    Tpat_construct "Pexp_extension"
                                                    [
                                                      pattern (src/extension.ml[94,3032+47]..src/extension.ml[94,3032+48])
                                                        Tpat_var "e/3105"
                                                    ]
                                                "pexp_attributes"
                                                  pattern (src/extension.ml[94,3032+68]..src/extension.ml[94,3032+69])
                                                    Tpat_var "a/3106"
                                              ]
                                          ]
                                      expression (src/extension.ml[95,3110+8]..src/extension.ml[95,3110+19])
                                        Texp_construct "Some"
                                        [
                                          expression (src/extension.ml[95,3110+13]..src/extension.ml[95,3110+19])
                                            Texp_tuple
                                            [
                                              expression (src/extension.ml[95,3110+14]..src/extension.ml[95,3110+15])
                                                Texp_ident "e/3105"
                                              expression (src/extension.ml[95,3110+17]..src/extension.ml[95,3110+18])
                                                Texp_ident "a/3106"
                                            ]
                                        ]
                                    <case>
                                      pattern (src/extension.ml[96,3130+6]..src/extension.ml[96,3130+75])
                                        Tpat_value
                                        pattern (src/extension.ml[96,3130+6]..src/extension.ml[96,3130+75])
                                          Tpat_tuple
                                          [
                                            pattern (src/extension.ml[96,3130+6]..src/extension.ml[96,3130+17])
                                              Tpat_construct "Module_expr"
                                              []
                                            pattern (src/extension.ml[96,3130+19]..src/extension.ml[96,3130+75])
                                              Tpat_record
                                              [
                                                "pmod_desc"
                                                  pattern (src/extension.ml[96,3130+33]..src/extension.ml[96,3130+49])
                                                    Tpat_construct "Pmod_extension"
                                                    [
                                                      pattern (src/extension.ml[96,3130+48]..src/extension.ml[96,3130+49])
                                                        Tpat_var "e/3107"
                                                    ]
                                                "pmod_attributes"
                                                  pattern (src/extension.ml[96,3130+69]..src/extension.ml[96,3130+70])
                                                    Tpat_var "a/3108"
                                              ]
                                          ]
                                      expression (src/extension.ml[97,3209+8]..src/extension.ml[97,3209+19])
                                        Texp_construct "Some"
                                        [
                                          expression (src/extension.ml[97,3209+13]..src/extension.ml[97,3209+19])
                                            Texp_tuple
                                            [
                                              expression (src/extension.ml[97,3209+14]..src/extension.ml[97,3209+15])
                                                Texp_ident "e/3107"
                                              expression (src/extension.ml[97,3209+17]..src/extension.ml[97,3209+18])
                                                Texp_ident "a/3108"
                                            ]
                                        ]
                                    <case>
                                      pattern (src/extension.ml[98,3229+6]..src/extension.ml[98,3229+75])
                                        Tpat_value
                                        pattern (src/extension.ml[98,3229+6]..src/extension.ml[98,3229+75])
                                          Tpat_tuple
                                          [
                                            pattern (src/extension.ml[98,3229+6]..src/extension.ml[98,3229+17])
                                              Tpat_construct "Module_type"
                                              []
                                            pattern (src/extension.ml[98,3229+19]..src/extension.ml[98,3229+75])
                                              Tpat_record
                                              [
                                                "pmty_desc"
                                                  pattern (src/extension.ml[98,3229+33]..src/extension.ml[98,3229+49])
                                                    Tpat_construct "Pmty_extension"
                                                    [
                                                      pattern (src/extension.ml[98,3229+48]..src/extension.ml[98,3229+49])
                                                        Tpat_var "e/3109"
                                                    ]
                                                "pmty_attributes"
                                                  pattern (src/extension.ml[98,3229+69]..src/extension.ml[98,3229+70])
                                                    Tpat_var "a/3110"
                                              ]
                                          ]
                                      expression (src/extension.ml[99,3308+8]..src/extension.ml[99,3308+19])
                                        Texp_construct "Some"
                                        [
                                          expression (src/extension.ml[99,3308+13]..src/extension.ml[99,3308+19])
                                            Texp_tuple
                                            [
                                              expression (src/extension.ml[99,3308+14]..src/extension.ml[99,3308+15])
                                                Texp_ident "e/3109"
                                              expression (src/extension.ml[99,3308+17]..src/extension.ml[99,3308+18])
                                                Texp_ident "a/3110"
                                            ]
                                        ]
                                    <case>
                                      pattern (src/extension.ml[100,3328+6]..src/extension.ml[100,3328+71])
                                        Tpat_value
                                        pattern (src/extension.ml[100,3328+6]..src/extension.ml[100,3328+71])
                                          Tpat_tuple
                                          [
                                            pattern (src/extension.ml[100,3328+6]..src/extension.ml[100,3328+13])
                                              Tpat_construct "Pattern"
                                              []
                                            pattern (src/extension.ml[100,3328+15]..src/extension.ml[100,3328+71])
                                              Tpat_record
                                              [
                                                "ppat_desc"
                                                  pattern (src/extension.ml[100,3328+29]..src/extension.ml[100,3328+45])
                                                    Tpat_construct "Ppat_extension"
                                                    [
                                                      pattern (src/extension.ml[100,3328+44]..src/extension.ml[100,3328+45])
                                                        Tpat_var "e/3111"
                                                    ]
                                                "ppat_attributes"
                                                  pattern (src/extension.ml[100,3328+65]..src/extension.ml[100,3328+66])
                                                    Tpat_var "a/3112"
                                              ]
                                          ]
                                      expression (src/extension.ml[101,3403+8]..src/extension.ml[101,3403+19])
                                        Texp_construct "Some"
                                        [
                                          expression (src/extension.ml[101,3403+13]..src/extension.ml[101,3403+19])
                                            Texp_tuple
                                            [
                                              expression (src/extension.ml[101,3403+14]..src/extension.ml[101,3403+15])
                                                Texp_ident "e/3111"
                                              expression (src/extension.ml[101,3403+17]..src/extension.ml[101,3403+18])
                                                Texp_ident "a/3112"
                                            ]
                                        ]
                                    <case>
                                      pattern (src/extension.ml[102,3423+6]..src/extension.ml[102,3423+62])
                                        Tpat_value
                                        pattern (src/extension.ml[102,3423+6]..src/extension.ml[102,3423+62])
                                          Tpat_tuple
                                          [
                                            pattern (src/extension.ml[102,3423+6]..src/extension.ml[102,3423+20])
                                              Tpat_construct "Signature_item"
                                              []
                                            pattern (src/extension.ml[102,3423+22]..src/extension.ml[102,3423+62])
                                              Tpat_record
                                              [
                                                "psig_desc"
                                                  pattern (src/extension.ml[102,3423+36]..src/extension.ml[102,3423+57])
                                                    Tpat_construct "Psig_extension"
                                                    [
                                                      pattern (src/extension.ml[102,3423+52]..src/extension.ml[102,3423+53])
                                                        Tpat_var "e/3113"
                                                      pattern (src/extension.ml[102,3423+55]..src/extension.ml[102,3423+56])
                                                        Tpat_var "a/3114"
                                                    ]
                                              ]
                                          ]
                                      expression (src/extension.ml[102,3423+66]..src/extension.ml[102,3423+77])
                                        Texp_construct "Some"
                                        [
                                          expression (src/extension.ml[102,3423+71]..src/extension.ml[102,3423+77])
                                            Texp_tuple
                                            [
                                              expression (src/extension.ml[102,3423+72]..src/extension.ml[102,3423+73])
                                                Texp_ident "e/3113"
                                              expression (src/extension.ml[102,3423+75]..src/extension.ml[102,3423+76])
                                                Texp_ident "a/3114"
                                            ]
                                        ]
                                    <case>
                                      pattern (src/extension.ml[103,3501+6]..src/extension.ml[103,3501+62])
                                        Tpat_value
                                        pattern (src/extension.ml[103,3501+6]..src/extension.ml[103,3501+62])
                                          Tpat_tuple
                                          [
                                            pattern (src/extension.ml[103,3501+6]..src/extension.ml[103,3501+20])
                                              Tpat_construct "Structure_item"
                                              []
                                            pattern (src/extension.ml[103,3501+22]..src/extension.ml[103,3501+62])
                                              Tpat_record
                                              [
                                                "pstr_desc"
                                                  pattern (src/extension.ml[103,3501+36]..src/extension.ml[103,3501+57])
                                                    Tpat_construct "Pstr_extension"
                                                    [
                                                      pattern (src/extension.ml[103,3501+52]..src/extension.ml[103,3501+53])
                                                        Tpat_var "e/3115"
                                                      pattern (src/extension.ml[103,3501+55]..src/extension.ml[103,3501+56])
                                                        Tpat_var "a/3116"
                                                    ]
                                              ]
                                          ]
                                      expression (src/extension.ml[103,3501+66]..src/extension.ml[103,3501+77])
                                        Texp_construct "Some"
                                        [
                                          expression (src/extension.ml[103,3501+71]..src/extension.ml[103,3501+77])
                                            Texp_tuple
                                            [
                                              expression (src/extension.ml[103,3501+72]..src/extension.ml[103,3501+73])
                                                Texp_ident "e/3115"
                                              expression (src/extension.ml[103,3501+75]..src/extension.ml[103,3501+76])
                                                Texp_ident "a/3116"
                                            ]
                                        ]
                                    <case>
                                      pattern (src/extension.ml[104,3579+6]..src/extension.ml[104,3579+27])
                                        Tpat_value
                                        pattern (src/extension.ml[104,3579+6]..src/extension.ml[104,3579+27])
                                          Tpat_tuple
                                          [
                                            pattern (src/extension.ml[104,3579+6]..src/extension.ml[104,3579+16])
                                              Tpat_construct "Ppx_import"
                                              []
                                            pattern (src/extension.ml[104,3579+18]..src/extension.ml[104,3579+27])
                                              Tpat_var "type_decl/3117"
                                          ]
                                      expression (src/extension.ml[104,3579+31]..src/extension.ml[104,3579+65])
                                        Texp_apply
                                        expression (src/extension.ml[104,3579+31]..src/extension.ml[104,3579+55])
                                          Texp_ident "get_ppx_import_extension/1378"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[104,3579+56]..src/extension.ml[104,3579+65])
                                              Texp_ident "type_decl/3117"
                                        ]
                                    <case>
                                      pattern (src/extension.ml[105,3645+6]..src/extension.ml[105,3645+7])
                                        Tpat_value
                                        pattern (src/extension.ml[105,3645+6]..src/extension.ml[105,3645+7])
                                          Tpat_any
                                      expression (src/extension.ml[105,3645+11]..src/extension.ml[105,3645+15])
                                        Texp_construct "None"
                                        []
                                  ]
                                  []
                            ]
                      ]
            ]
          structure_item (src/extension.ml[107,3662+2]..src/extension.ml[127,4765+79])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[107,3662+6]..src/extension.ml[107,3662+26])
                  Tpat_extra_constraint
                  core_type (src/extension.ml[107,3662+6]..src/extension.ml[127,4765+79]) ghost
                    Ttyp_poly 'a
                    core_type (src/extension.ml[109,3705+6]..src/extension.ml[109,3705+75])
                      Ttyp_arrow
                      Nolabel
                      core_type (src/extension.ml[109,3705+6]..src/extension.ml[109,3705+9])
                        Ttyp_constr "t/590"
                        [
                          core_type (src/extension.ml[109,3705+6]..src/extension.ml[109,3705+7])
                            Ttyp_var a
                        ]
                      core_type (src/extension.ml[109,3705+13]..src/extension.ml[109,3705+75])
                        Ttyp_arrow
                        Nolabel
                        core_type (src/extension.ml[109,3705+13]..src/extension.ml[109,3705+14])
                          Ttyp_var a
                        core_type (src/extension.ml[109,3705+18]..src/extension.ml[109,3705+75])
                          Ttyp_arrow
                          Nolabel
                          core_type (src/extension.ml[109,3705+18]..src/extension.ml[109,3705+28])
                            Ttyp_constr "Ppxlib__!.Import.attributes"
                            []
                          core_type (src/extension.ml[109,3705+32]..src/extension.ml[109,3705+75])
                            Ttyp_constr "Stdlib!.result"
                            [
                              core_type (src/extension.ml[109,3705+33]..src/extension.ml[109,3705+34])
                                Ttyp_var a
                              core_type (src/extension.ml[109,3705+36]..src/extension.ml[109,3705+67])
                                Ttyp_constr "Ppxlib__!.Import.NonEmptyList.t"
                                [
                                  core_type (src/extension.ml[109,3705+36]..src/extension.ml[109,3705+52])
                                    Ttyp_constr "Ppxlib__!.Location.Error.t"
                                    []
                                ]
                            ]
                  pattern (src/extension.ml[107,3662+6]..src/extension.ml[107,3662+26])
                    Tpat_var "merge_attributes_res/3176"
                expression (src/extension.ml[107,3662+6]..src/extension.ml[127,4765+79])
                  Texp_newtype "a"
                    Texp_constraint
                    core_type (src/extension.ml[109,3705+6]..src/extension.ml[109,3705+75])
                      Ttyp_arrow
                      Nolabel
                      core_type (src/extension.ml[109,3705+6]..src/extension.ml[109,3705+9])
                        Ttyp_constr "t/590"
                        [
                          core_type (src/extension.ml[109,3705+6]..src/extension.ml[109,3705+7])
                            Ttyp_constr "a/3177"
                            []
                        ]
                      core_type (src/extension.ml[109,3705+13]..src/extension.ml[109,3705+75])
                        Ttyp_arrow
                        Nolabel
                        core_type (src/extension.ml[109,3705+13]..src/extension.ml[109,3705+14])
                          Ttyp_constr "a/3177"
                          []
                        core_type (src/extension.ml[109,3705+18]..src/extension.ml[109,3705+75])
                          Ttyp_arrow
                          Nolabel
                          core_type (src/extension.ml[109,3705+18]..src/extension.ml[109,3705+28])
                            Ttyp_constr "Ppxlib__!.Import.attributes"
                            []
                          core_type (src/extension.ml[109,3705+32]..src/extension.ml[109,3705+75])
                            Ttyp_constr "Stdlib!.result"
                            [
                              core_type (src/extension.ml[109,3705+33]..src/extension.ml[109,3705+34])
                                Ttyp_constr "a/3177"
                                []
                              core_type (src/extension.ml[109,3705+36]..src/extension.ml[109,3705+67])
                                Ttyp_constr "Ppxlib__!.Import.NonEmptyList.t"
                                [
                                  core_type (src/extension.ml[109,3705+36]..src/extension.ml[109,3705+52])
                                    Ttyp_constr "Ppxlib__!.Location.Error.t"
                                    []
                                ]
                            ]
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/extension.ml[110,3783+7]..src/extension.ml[110,3783+8])
                            Tpat_var "t/3178"
                          expression (src/extension.ml[110,3783+9]..src/extension.ml[127,4765+79]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[110,3783+9]..src/extension.ml[110,3783+10])
                                  Tpat_var "x/3179"
                                expression (src/extension.ml[110,3783+11]..src/extension.ml[127,4765+79]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/extension.ml[110,3783+11]..src/extension.ml[110,3783+16])
                                        Tpat_var "attrs/3180"
                                      expression (src/extension.ml[111,3803+4]..src/extension.ml[127,4765+79])
                                        Texp_match
                                        expression (src/extension.ml[111,3803+10]..src/extension.ml[111,3803+11])
                                          Texp_ident "t/3178"
                                        [
                                          <case>
                                            pattern (src/extension.ml[112,3820+6]..src/extension.ml[112,3820+16])
                                              Tpat_value
                                              pattern (src/extension.ml[112,3820+6]..src/extension.ml[112,3820+16])
                                                Tpat_construct "Class_expr"
                                                []
                                            expression (src/extension.ml[112,3820+20]..src/extension.ml[112,3820+75])
                                              Texp_construct "Ok"
                                              [
                                                expression (src/extension.ml[112,3820+23]..src/extension.ml[112,3820+75])
                                                  Texp_record
                                                    fields =
                                                      [
                                                        <kept>                                                        <kept>                                                        "pcl_attributes"
                                                          expression (src/extension.ml[112,3820+49]..src/extension.ml[112,3820+73])
                                                            Texp_apply
                                                            expression (src/extension.ml[112,3820+66]..src/extension.ml[112,3820+67])
                                                              Texp_ident "Ppxlib__!.Import.@"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/extension.ml[112,3820+49]..src/extension.ml[112,3820+65])
                                                                  Texp_field
                                                                  expression (src/extension.ml[112,3820+49]..src/extension.ml[112,3820+50])
                                                                    Texp_ident "x/3179"
                                                                  "pcl_attributes"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/extension.ml[112,3820+68]..src/extension.ml[112,3820+73])
                                                                  Texp_ident "attrs/3180"
                                                            ]
                                                      ]
                                                    representation =
                                                      Record_regular
                                                    extended_expression =
                                                      Some
                                                        expression (src/extension.ml[112,3820+25]..src/extension.ml[112,3820+26])
                                                          Texp_ident "x/3179"
                                              ]
                                          <case>
                                            pattern (src/extension.ml[113,3896+6]..src/extension.ml[113,3896+17])
                                              Tpat_value
                                              pattern (src/extension.ml[113,3896+6]..src/extension.ml[113,3896+17])
                                                Tpat_construct "Class_field"
                                                []
                                            expression (src/extension.ml[113,3896+21]..src/extension.ml[113,3896+76])
                                              Texp_construct "Ok"
                                              [
                                                expression (src/extension.ml[113,3896+24]..src/extension.ml[113,3896+76])
                                                  Texp_record
                                                    fields =
                                                      [
                                                        <kept>                                                        <kept>                                                        "pcf_attributes"
                                                          expression (src/extension.ml[113,3896+50]..src/extension.ml[113,3896+74])
                                                            Texp_apply
                                                            expression (src/extension.ml[113,3896+67]..src/extension.ml[113,3896+68])
                                                              Texp_ident "Ppxlib__!.Import.@"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/extension.ml[113,3896+50]..src/extension.ml[113,3896+66])
                                                                  Texp_field
                                                                  expression (src/extension.ml[113,3896+50]..src/extension.ml[113,3896+51])
                                                                    Texp_ident "x/3179"
                                                                  "pcf_attributes"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/extension.ml[113,3896+69]..src/extension.ml[113,3896+74])
                                                                  Texp_ident "attrs/3180"
                                                            ]
                                                      ]
                                                    representation =
                                                      Record_regular
                                                    extended_expression =
                                                      Some
                                                        expression (src/extension.ml[113,3896+26]..src/extension.ml[113,3896+27])
                                                          Texp_ident "x/3179"
                                              ]
                                          <case>
                                            pattern (src/extension.ml[114,3973+6]..src/extension.ml[114,3973+16])
                                              Tpat_value
                                              pattern (src/extension.ml[114,3973+6]..src/extension.ml[114,3973+16])
                                                Tpat_construct "Class_type"
                                                []
                                            expression (src/extension.ml[114,3973+20]..src/extension.ml[114,3973+77])
                                              Texp_construct "Ok"
                                              [
                                                expression (src/extension.ml[114,3973+23]..src/extension.ml[114,3973+77])
                                                  Texp_record
                                                    fields =
                                                      [
                                                        <kept>                                                        <kept>                                                        "pcty_attributes"
                                                          expression (src/extension.ml[114,3973+50]..src/extension.ml[114,3973+75])
                                                            Texp_apply
                                                            expression (src/extension.ml[114,3973+68]..src/extension.ml[114,3973+69])
                                                              Texp_ident "Ppxlib__!.Import.@"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/extension.ml[114,3973+50]..src/extension.ml[114,3973+67])
                                                                  Texp_field
                                                                  expression (src/extension.ml[114,3973+50]..src/extension.ml[114,3973+51])
                                                                    Texp_ident "x/3179"
                                                                  "pcty_attributes"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/extension.ml[114,3973+70]..src/extension.ml[114,3973+75])
                                                                  Texp_ident "attrs/3180"
                                                            ]
                                                      ]
                                                    representation =
                                                      Record_regular
                                                    extended_expression =
                                                      Some
                                                        expression (src/extension.ml[114,3973+25]..src/extension.ml[114,3973+26])
                                                          Texp_ident "x/3179"
                                              ]
                                          <case>
                                            pattern (src/extension.ml[115,4051+6]..src/extension.ml[115,4051+22])
                                              Tpat_value
                                              pattern (src/extension.ml[115,4051+6]..src/extension.ml[115,4051+22])
                                                Tpat_construct "Class_type_field"
                                                []
                                            expression (src/extension.ml[116,4077+8]..src/extension.ml[116,4077+65])
                                              Texp_construct "Ok"
                                              [
                                                expression (src/extension.ml[116,4077+11]..src/extension.ml[116,4077+65])
                                                  Texp_record
                                                    fields =
                                                      [
                                                        <kept>                                                        <kept>                                                        "pctf_attributes"
                                                          expression (src/extension.ml[116,4077+38]..src/extension.ml[116,4077+63])
                                                            Texp_apply
                                                            expression (src/extension.ml[116,4077+56]..src/extension.ml[116,4077+57])
                                                              Texp_ident "Ppxlib__!.Import.@"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/extension.ml[116,4077+38]..src/extension.ml[116,4077+55])
                                                                  Texp_field
                                                                  expression (src/extension.ml[116,4077+38]..src/extension.ml[116,4077+39])
                                                                    Texp_ident "x/3179"
                                                                  "pctf_attributes"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/extension.ml[116,4077+58]..src/extension.ml[116,4077+63])
                                                                  Texp_ident "attrs/3180"
                                                            ]
                                                      ]
                                                    representation =
                                                      Record_regular
                                                    extended_expression =
                                                      Some
                                                        expression (src/extension.ml[116,4077+13]..src/extension.ml[116,4077+14])
                                                          Texp_ident "x/3179"
                                              ]
                                          <case>
                                            pattern (src/extension.ml[117,4143+6]..src/extension.ml[117,4143+15])
                                              Tpat_value
                                              pattern (src/extension.ml[117,4143+6]..src/extension.ml[117,4143+15])
                                                Tpat_construct "Core_type"
                                                []
                                            expression (src/extension.ml[117,4143+19]..src/extension.ml[117,4143+76])
                                              Texp_construct "Ok"
                                              [
                                                expression (src/extension.ml[117,4143+22]..src/extension.ml[117,4143+76])
                                                  Texp_record
                                                    fields =
                                                      [
                                                        <kept>                                                        <kept>                                                        <kept>                                                        "ptyp_attributes"
                                                          expression (src/extension.ml[117,4143+49]..src/extension.ml[117,4143+74])
                                                            Texp_apply
                                                            expression (src/extension.ml[117,4143+67]..src/extension.ml[117,4143+68])
                                                              Texp_ident "Ppxlib__!.Import.@"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/extension.ml[117,4143+49]..src/extension.ml[117,4143+66])
                                                                  Texp_field
                                                                  expression (src/extension.ml[117,4143+49]..src/extension.ml[117,4143+50])
                                                                    Texp_ident "x/3179"
                                                                  "ptyp_attributes"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/extension.ml[117,4143+69]..src/extension.ml[117,4143+74])
                                                                  Texp_ident "attrs/3180"
                                                            ]
                                                      ]
                                                    representation =
                                                      Record_regular
                                                    extended_expression =
                                                      Some
                                                        expression (src/extension.ml[117,4143+24]..src/extension.ml[117,4143+25])
                                                          Texp_ident "x/3179"
                                              ]
                                          <case>
                                            pattern (src/extension.ml[118,4220+6]..src/extension.ml[118,4220+16])
                                              Tpat_value
                                              pattern (src/extension.ml[118,4220+6]..src/extension.ml[118,4220+16])
                                                Tpat_construct "Expression"
                                                []
                                            expression (src/extension.ml[118,4220+20]..src/extension.ml[118,4220+77])
                                              Texp_construct "Ok"
                                              [
                                                expression (src/extension.ml[118,4220+23]..src/extension.ml[118,4220+77])
                                                  Texp_record
                                                    fields =
                                                      [
                                                        <kept>                                                        <kept>                                                        <kept>                                                        "pexp_attributes"
                                                          expression (src/extension.ml[118,4220+50]..src/extension.ml[118,4220+75])
                                                            Texp_apply
                                                            expression (src/extension.ml[118,4220+68]..src/extension.ml[118,4220+69])
                                                              Texp_ident "Ppxlib__!.Import.@"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/extension.ml[118,4220+50]..src/extension.ml[118,4220+67])
                                                                  Texp_field
                                                                  expression (src/extension.ml[118,4220+50]..src/extension.ml[118,4220+51])
                                                                    Texp_ident "x/3179"
                                                                  "pexp_attributes"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/extension.ml[118,4220+70]..src/extension.ml[118,4220+75])
                                                                  Texp_ident "attrs/3180"
                                                            ]
                                                      ]
                                                    representation =
                                                      Record_regular
                                                    extended_expression =
                                                      Some
                                                        expression (src/extension.ml[118,4220+25]..src/extension.ml[118,4220+26])
                                                          Texp_ident "x/3179"
                                              ]
                                          <case>
                                            pattern (src/extension.ml[119,4298+6]..src/extension.ml[119,4298+17])
                                              Tpat_value
                                              pattern (src/extension.ml[119,4298+6]..src/extension.ml[119,4298+17])
                                                Tpat_construct "Module_expr"
                                                []
                                            expression (src/extension.ml[119,4298+21]..src/extension.ml[119,4298+78])
                                              Texp_construct "Ok"
                                              [
                                                expression (src/extension.ml[119,4298+24]..src/extension.ml[119,4298+78])
                                                  Texp_record
                                                    fields =
                                                      [
                                                        <kept>                                                        <kept>                                                        "pmod_attributes"
                                                          expression (src/extension.ml[119,4298+51]..src/extension.ml[119,4298+76])
                                                            Texp_apply
                                                            expression (src/extension.ml[119,4298+69]..src/extension.ml[119,4298+70])
                                                              Texp_ident "Ppxlib__!.Import.@"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/extension.ml[119,4298+51]..src/extension.ml[119,4298+68])
                                                                  Texp_field
                                                                  expression (src/extension.ml[119,4298+51]..src/extension.ml[119,4298+52])
                                                                    Texp_ident "x/3179"
                                                                  "pmod_attributes"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/extension.ml[119,4298+71]..src/extension.ml[119,4298+76])
                                                                  Texp_ident "attrs/3180"
                                                            ]
                                                      ]
                                                    representation =
                                                      Record_regular
                                                    extended_expression =
                                                      Some
                                                        expression (src/extension.ml[119,4298+26]..src/extension.ml[119,4298+27])
                                                          Texp_ident "x/3179"
                                              ]
                                          <case>
                                            pattern (src/extension.ml[120,4377+6]..src/extension.ml[120,4377+17])
                                              Tpat_value
                                              pattern (src/extension.ml[120,4377+6]..src/extension.ml[120,4377+17])
                                                Tpat_construct "Module_type"
                                                []
                                            expression (src/extension.ml[120,4377+21]..src/extension.ml[120,4377+78])
                                              Texp_construct "Ok"
                                              [
                                                expression (src/extension.ml[120,4377+24]..src/extension.ml[120,4377+78])
                                                  Texp_record
                                                    fields =
                                                      [
                                                        <kept>                                                        <kept>                                                        "pmty_attributes"
                                                          expression (src/extension.ml[120,4377+51]..src/extension.ml[120,4377+76])
                                                            Texp_apply
                                                            expression (src/extension.ml[120,4377+69]..src/extension.ml[120,4377+70])
                                                              Texp_ident "Ppxlib__!.Import.@"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/extension.ml[120,4377+51]..src/extension.ml[120,4377+68])
                                                                  Texp_field
                                                                  expression (src/extension.ml[120,4377+51]..src/extension.ml[120,4377+52])
                                                                    Texp_ident "x/3179"
                                                                  "pmty_attributes"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/extension.ml[120,4377+71]..src/extension.ml[120,4377+76])
                                                                  Texp_ident "attrs/3180"
                                                            ]
                                                      ]
                                                    representation =
                                                      Record_regular
                                                    extended_expression =
                                                      Some
                                                        expression (src/extension.ml[120,4377+26]..src/extension.ml[120,4377+27])
                                                          Texp_ident "x/3179"
                                              ]
                                          <case>
                                            pattern (src/extension.ml[121,4456+6]..src/extension.ml[121,4456+13])
                                              Tpat_value
                                              pattern (src/extension.ml[121,4456+6]..src/extension.ml[121,4456+13])
                                                Tpat_construct "Pattern"
                                                []
                                            expression (src/extension.ml[121,4456+17]..src/extension.ml[121,4456+74])
                                              Texp_construct "Ok"
                                              [
                                                expression (src/extension.ml[121,4456+20]..src/extension.ml[121,4456+74])
                                                  Texp_record
                                                    fields =
                                                      [
                                                        <kept>                                                        <kept>                                                        <kept>                                                        "ppat_attributes"
                                                          expression (src/extension.ml[121,4456+47]..src/extension.ml[121,4456+72])
                                                            Texp_apply
                                                            expression (src/extension.ml[121,4456+65]..src/extension.ml[121,4456+66])
                                                              Texp_ident "Ppxlib__!.Import.@"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/extension.ml[121,4456+47]..src/extension.ml[121,4456+64])
                                                                  Texp_field
                                                                  expression (src/extension.ml[121,4456+47]..src/extension.ml[121,4456+48])
                                                                    Texp_ident "x/3179"
                                                                  "ppat_attributes"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/extension.ml[121,4456+67]..src/extension.ml[121,4456+72])
                                                                  Texp_ident "attrs/3180"
                                                            ]
                                                      ]
                                                    representation =
                                                      Record_regular
                                                    extended_expression =
                                                      Some
                                                        expression (src/extension.ml[121,4456+22]..src/extension.ml[121,4456+23])
                                                          Texp_ident "x/3179"
                                              ]
                                          <case>
                                            pattern (src/extension.ml[122,4531+6]..src/extension.ml[122,4531+20])
                                              Tpat_value
                                              pattern (src/extension.ml[122,4531+6]..src/extension.ml[122,4531+20])
                                                Tpat_construct "Signature_item"
                                                []
                                            expression (src/extension.ml[122,4531+24]..src/extension.ml[123,4557+79])
                                              Texp_match
                                              expression (src/extension.ml[123,4557+14]..src/extension.ml[123,4557+37])
                                                Texp_apply
                                                expression (src/extension.ml[123,4557+14]..src/extension.ml[123,4557+31])
                                                  Texp_ident "Ppxlib__!.Common.attributes_errors"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/extension.ml[123,4557+32]..src/extension.ml[123,4557+37])
                                                      Texp_ident "attrs/3180"
                                                ]
                                              [
                                                <case>
                                                  pattern (src/extension.ml[123,4557+43]..src/extension.ml[123,4557+45])
                                                    Tpat_value
                                                    pattern (src/extension.ml[123,4557+43]..src/extension.ml[123,4557+45])
                                                      Tpat_construct "[]"
                                                      []
                                                  expression (src/extension.ml[123,4557+49]..src/extension.ml[123,4557+53])
                                                    Texp_construct "Ok"
                                                    [
                                                      expression (src/extension.ml[123,4557+52]..src/extension.ml[123,4557+53])
                                                        Texp_ident "x/3179"
                                                    ]
                                                <case>
                                                  pattern (src/extension.ml[123,4557+56]..src/extension.ml[123,4557+62])
                                                    Tpat_value
                                                    pattern (src/extension.ml[123,4557+56]..src/extension.ml[123,4557+62])
                                                      Tpat_construct "::"
                                                      [
                                                        pattern (src/extension.ml[123,4557+56]..src/extension.ml[123,4557+57])
                                                          Tpat_var "t/3181"
                                                        pattern (src/extension.ml[123,4557+61]..src/extension.ml[123,4557+62])
                                                          Tpat_var "q/3182"
                                                      ]
                                                  expression (src/extension.ml[123,4557+66]..src/extension.ml[123,4557+78])
                                                    Texp_construct "Error"
                                                    [
                                                      expression (src/extension.ml[123,4557+72]..src/extension.ml[123,4557+78])
                                                        Texp_tuple
                                                        [
                                                          expression (src/extension.ml[123,4557+73]..src/extension.ml[123,4557+74])
                                                            Texp_ident "t/3181"
                                                          expression (src/extension.ml[123,4557+76]..src/extension.ml[123,4557+77])
                                                            Texp_ident "q/3182"
                                                        ]
                                                    ]
                                              ]
                                              []
                                          <case>
                                            pattern (src/extension.ml[124,4637+6]..src/extension.ml[124,4637+20])
                                              Tpat_value
                                              pattern (src/extension.ml[124,4637+6]..src/extension.ml[124,4637+20])
                                                Tpat_construct "Structure_item"
                                                []
                                            expression (src/extension.ml[124,4637+24]..src/extension.ml[125,4663+79])
                                              Texp_match
                                              expression (src/extension.ml[125,4663+14]..src/extension.ml[125,4663+37])
                                                Texp_apply
                                                expression (src/extension.ml[125,4663+14]..src/extension.ml[125,4663+31])
                                                  Texp_ident "Ppxlib__!.Common.attributes_errors"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/extension.ml[125,4663+32]..src/extension.ml[125,4663+37])
                                                      Texp_ident "attrs/3180"
                                                ]
                                              [
                                                <case>
                                                  pattern (src/extension.ml[125,4663+43]..src/extension.ml[125,4663+45])
                                                    Tpat_value
                                                    pattern (src/extension.ml[125,4663+43]..src/extension.ml[125,4663+45])
                                                      Tpat_construct "[]"
                                                      []
                                                  expression (src/extension.ml[125,4663+49]..src/extension.ml[125,4663+53])
                                                    Texp_construct "Ok"
                                                    [
                                                      expression (src/extension.ml[125,4663+52]..src/extension.ml[125,4663+53])
                                                        Texp_ident "x/3179"
                                                    ]
                                                <case>
                                                  pattern (src/extension.ml[125,4663+56]..src/extension.ml[125,4663+62])
                                                    Tpat_value
                                                    pattern (src/extension.ml[125,4663+56]..src/extension.ml[125,4663+62])
                                                      Tpat_construct "::"
                                                      [
                                                        pattern (src/extension.ml[125,4663+56]..src/extension.ml[125,4663+57])
                                                          Tpat_var "t/3184"
                                                        pattern (src/extension.ml[125,4663+61]..src/extension.ml[125,4663+62])
                                                          Tpat_var "q/3185"
                                                      ]
                                                  expression (src/extension.ml[125,4663+66]..src/extension.ml[125,4663+78])
                                                    Texp_construct "Error"
                                                    [
                                                      expression (src/extension.ml[125,4663+72]..src/extension.ml[125,4663+78])
                                                        Texp_tuple
                                                        [
                                                          expression (src/extension.ml[125,4663+73]..src/extension.ml[125,4663+74])
                                                            Texp_ident "t/3184"
                                                          expression (src/extension.ml[125,4663+76]..src/extension.ml[125,4663+77])
                                                            Texp_ident "q/3185"
                                                        ]
                                                    ]
                                              ]
                                              []
                                          <case>
                                            pattern (src/extension.ml[126,4743+6]..src/extension.ml[126,4743+16])
                                              Tpat_value
                                              pattern (src/extension.ml[126,4743+6]..src/extension.ml[126,4743+16])
                                                Tpat_construct "Ppx_import"
                                                []
                                            expression (src/extension.ml[126,4743+20]..src/extension.ml[127,4765+79])
                                              Texp_match
                                              expression (src/extension.ml[127,4765+14]..src/extension.ml[127,4765+37])
                                                Texp_apply
                                                expression (src/extension.ml[127,4765+14]..src/extension.ml[127,4765+31])
                                                  Texp_ident "Ppxlib__!.Common.attributes_errors"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/extension.ml[127,4765+32]..src/extension.ml[127,4765+37])
                                                      Texp_ident "attrs/3180"
                                                ]
                                              [
                                                <case>
                                                  pattern (src/extension.ml[127,4765+43]..src/extension.ml[127,4765+45])
                                                    Tpat_value
                                                    pattern (src/extension.ml[127,4765+43]..src/extension.ml[127,4765+45])
                                                      Tpat_construct "[]"
                                                      []
                                                  expression (src/extension.ml[127,4765+49]..src/extension.ml[127,4765+53])
                                                    Texp_construct "Ok"
                                                    [
                                                      expression (src/extension.ml[127,4765+52]..src/extension.ml[127,4765+53])
                                                        Texp_ident "x/3179"
                                                    ]
                                                <case>
                                                  pattern (src/extension.ml[127,4765+56]..src/extension.ml[127,4765+62])
                                                    Tpat_value
                                                    pattern (src/extension.ml[127,4765+56]..src/extension.ml[127,4765+62])
                                                      Tpat_construct "::"
                                                      [
                                                        pattern (src/extension.ml[127,4765+56]..src/extension.ml[127,4765+57])
                                                          Tpat_var "t/3186"
                                                        pattern (src/extension.ml[127,4765+61]..src/extension.ml[127,4765+62])
                                                          Tpat_var "q/3187"
                                                      ]
                                                  expression (src/extension.ml[127,4765+66]..src/extension.ml[127,4765+78])
                                                    Texp_construct "Error"
                                                    [
                                                      expression (src/extension.ml[127,4765+72]..src/extension.ml[127,4765+78])
                                                        Texp_tuple
                                                        [
                                                          expression (src/extension.ml[127,4765+73]..src/extension.ml[127,4765+74])
                                                            Texp_ident "t/3186"
                                                          expression (src/extension.ml[127,4765+76]..src/extension.ml[127,4765+77])
                                                            Texp_ident "q/3187"
                                                        ]
                                                    ]
                                              ]
                                              []
                                        ]
                                        []
                                  ]
                            ]
                      ]
            ]
          structure_item (src/extension.ml[129,4846+2]..src/extension.ml[132,4964+72])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[129,4846+6]..src/extension.ml[129,4846+22])
                  Tpat_extra_constraint
                  core_type (src/extension.ml[129,4846+6]..src/extension.ml[132,4964+72]) ghost
                    Ttyp_poly 'a
                    core_type (src/extension.ml[129,4846+33]..src/extension.ml[129,4846+60])
                      Ttyp_arrow
                      Nolabel
                      core_type (src/extension.ml[129,4846+33]..src/extension.ml[129,4846+36])
                        Ttyp_constr "t/590"
                        [
                          core_type (src/extension.ml[129,4846+33]..src/extension.ml[129,4846+34])
                            Ttyp_var a
                        ]
                      core_type (src/extension.ml[129,4846+40]..src/extension.ml[129,4846+60])
                        Ttyp_arrow
                        Nolabel
                        core_type (src/extension.ml[129,4846+40]..src/extension.ml[129,4846+41])
                          Ttyp_var a
                        core_type (src/extension.ml[129,4846+45]..src/extension.ml[129,4846+60])
                          Ttyp_arrow
                          Nolabel
                          core_type (src/extension.ml[129,4846+45]..src/extension.ml[129,4846+55])
                            Ttyp_constr "Ppxlib__!.Import.attributes"
                            []
                          core_type (src/extension.ml[129,4846+59]..src/extension.ml[129,4846+60])
                            Ttyp_var a
                  pattern (src/extension.ml[129,4846+6]..src/extension.ml[129,4846+22])
                    Tpat_var "merge_attributes/3188"
                expression (src/extension.ml[129,4846+6]..src/extension.ml[132,4964+72])
                  Texp_newtype "a"
                    Texp_constraint
                    core_type (src/extension.ml[129,4846+33]..src/extension.ml[129,4846+60])
                      Ttyp_arrow
                      Nolabel
                      core_type (src/extension.ml[129,4846+33]..src/extension.ml[129,4846+36])
                        Ttyp_constr "t/590"
                        [
                          core_type (src/extension.ml[129,4846+33]..src/extension.ml[129,4846+34])
                            Ttyp_constr "a/3189"
                            []
                        ]
                      core_type (src/extension.ml[129,4846+40]..src/extension.ml[129,4846+60])
                        Ttyp_arrow
                        Nolabel
                        core_type (src/extension.ml[129,4846+40]..src/extension.ml[129,4846+41])
                          Ttyp_constr "a/3189"
                          []
                        core_type (src/extension.ml[129,4846+45]..src/extension.ml[129,4846+60])
                          Ttyp_arrow
                          Nolabel
                          core_type (src/extension.ml[129,4846+45]..src/extension.ml[129,4846+55])
                            Ttyp_constr "Ppxlib__!.Import.attributes"
                            []
                          core_type (src/extension.ml[129,4846+59]..src/extension.ml[129,4846+60])
                            Ttyp_constr "a/3189"
                            []
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/extension.ml[130,4909+7]..src/extension.ml[130,4909+8])
                            Tpat_var "t/3190"
                          expression (src/extension.ml[130,4909+9]..src/extension.ml[132,4964+72]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[130,4909+9]..src/extension.ml[130,4909+10])
                                  Tpat_var "x/3191"
                                expression (src/extension.ml[130,4909+11]..src/extension.ml[132,4964+72]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/extension.ml[130,4909+11]..src/extension.ml[130,4909+16])
                                        Tpat_var "attrs/3192"
                                      expression (src/extension.ml[131,4929+4]..src/extension.ml[132,4964+72])
                                        Texp_apply
                                        expression (src/extension.ml[132,4964+4]..src/extension.ml[132,4964+6])
                                          Texp_ident "Stdlib!.|>"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[131,4929+4]..src/extension.ml[131,4929+34])
                                              Texp_apply
                                              expression (src/extension.ml[131,4929+4]..src/extension.ml[131,4929+24])
                                                Texp_ident "merge_attributes_res/3176"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[131,4929+25]..src/extension.ml[131,4929+26])
                                                    Texp_ident "t/3190"
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[131,4929+27]..src/extension.ml[131,4929+28])
                                                    Texp_ident "x/3191"
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[131,4929+29]..src/extension.ml[131,4929+34])
                                                    Texp_ident "attrs/3192"
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[132,4964+7]..src/extension.ml[132,4964+72])
                                              Texp_apply
                                              expression (src/extension.ml[132,4964+7]..src/extension.ml[132,4964+26])
                                                Texp_ident "Ppxlib__!.Import.Result.handle_error"
                                              [
                                                <arg>
                                                  Nolabel
                                                <arg>
                                                  Labelled "f"
                                                  expression (src/extension.ml[132,4964+30]..src/extension.ml[132,4964+72])
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (src/extension.ml[132,4964+35]..src/extension.ml[132,4964+43])
                                                          Tpat_tuple
                                                          [
                                                            pattern (src/extension.ml[132,4964+36]..src/extension.ml[132,4964+39])
                                                              Tpat_var "err/3199"
                                                            pattern (src/extension.ml[132,4964+41]..src/extension.ml[132,4964+42])
                                                              Tpat_any
                                                          ]
                                                        expression (src/extension.ml[132,4964+47]..src/extension.ml[132,4964+71])
                                                          Texp_apply
                                                          expression (src/extension.ml[132,4964+47]..src/extension.ml[132,4964+67])
                                                            Texp_ident "Ppxlib__!.Location.Error.raise"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/extension.ml[132,4964+68]..src/extension.ml[132,4964+71])
                                                                Texp_ident "err/3199"
                                                          ]
                                                    ]
                                              ]
                                        ]
                                  ]
                            ]
                      ]
            ]
        ]
  structure_item (src/extension.ml[135,5042+0]..src/extension.ml[137,5123+71])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/extension.ml[135,5042+4]..src/extension.ml[135,5042+13])
          Tpat_var "registrar/3202"
        expression (src/extension.ml[136,5058+2]..src/extension.ml[137,5123+71])
          Texp_apply
          expression (src/extension.ml[136,5058+2]..src/extension.ml[136,5058+23])
            Texp_ident "Ppxlib__!.Name.Registrar.create"
          [
            <arg>
              Labelled "kind"
              expression (src/extension.ml[136,5058+30]..src/extension.ml[136,5058+41])
                Texp_constant Const_string("extension",(src/extension.ml[136,5058+31]..src/extension.ml[136,5058+40]),None)
            <arg>
              Labelled "current_file"
              expression (src/extension.ml[136,5058+56]..src/extension.ml[136,5058+64])
                Texp_ident "Ppxlib__!.Import.__FILE__"
            <arg>
              Labelled "string_of_context"
              expression (src/extension.ml[137,5123+23]..src/extension.ml[137,5123+71])
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/extension.ml[137,5123+28]..src/extension.ml[137,5123+43])
                      Tpat_construct "Context.T"
                      [
                        pattern (src/extension.ml[137,5123+39]..src/extension.ml[137,5123+42])
                          Tpat_var "ctx/3252"
                      ]
                    expression (src/extension.ml[137,5123+47]..src/extension.ml[137,5123+70])
                      Texp_construct "Some"
                      [
                        expression (src/extension.ml[137,5123+52]..src/extension.ml[137,5123+70])
                          Texp_apply
                          expression (src/extension.ml[137,5123+53]..src/extension.ml[137,5123+65])
                            Texp_ident "Context/3201.desc"
                          [
                            <arg>
                              Nolabel
                              expression (src/extension.ml[137,5123+66]..src/extension.ml[137,5123+69])
                                Texp_ident "ctx/3252"
                          ]
                      ]
                ]
          ]
    ]
  structure_item (src/extension.ml[139,5196+0]..src/extension.ml[213,7519+3])
    Tstr_module
    Make/4031
      module_expr (src/extension.ml[139,5196+12]..src/extension.ml[213,7519+3])
        Tmod_functor "Callback/3255"
        module_type (src/extension.ml[139,5196+24]..src/extension.ml[141,5236+3])
          Tmty_signature
          [
            signature_item (src/extension.ml[140,5224+2]..src/extension.ml[140,5224+11])
              Tsig_type Rec
              [
                type_declaration t/3254 (src/extension.ml[140,5224+2]..src/extension.ml[140,5224+11])
                  ptype_params =
                    [
                      core_type (src/extension.ml[140,5224+7]..src/extension.ml[140,5224+9])
                        Ttyp_var a
                    ]
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ttype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
          ]
        module_expr (src/extension.ml[142,5243+0]..src/extension.ml[213,7519+3])
          Tmod_structure
          [
            structure_item (src/extension.ml[143,5250+2]..src/extension.ml[146,5357+34])
              Tstr_type Rec
              [
                type_declaration payload_parser/3256 (src/extension.ml[143,5250+2]..src/extension.ml[146,5357+34])
                  ptype_params =
                    [
                      core_type (src/extension.ml[143,5250+8]..src/extension.ml[143,5250+10])
                        Ttyp_var a
                      core_type (src/extension.ml[143,5250+12]..src/extension.ml[143,5250+14])
                        Ttyp_var b
                    ]
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ttype_variant
                      [
                        (src/extension.ml[144,5283+4]..src/extension.ml[146,5357+34])
                          Payload_parser/3257
                          [
                            core_type (src/extension.ml[145,5306+8]..src/extension.ml[145,5306+34])
                              Ttyp_constr "Ppxlib__!.Ast_pattern.t"
                              [
                                core_type (src/extension.ml[145,5306+9]..src/extension.ml[145,5306+11])
                                  Ttyp_var a
                                core_type (src/extension.ml[145,5306+13]..src/extension.ml[145,5306+15])
                                  Ttyp_var b
                                core_type (src/extension.ml[145,5306+17]..src/extension.ml[145,5306+19])
                                  Ttyp_var c
                              ]
                            core_type (src/extension.ml[145,5306+37]..src/extension.ml[145,5306+50])
                              Ttyp_constr "Callback/3255.t"
                              [
                                core_type (src/extension.ml[145,5306+37]..src/extension.ml[145,5306+39])
                                  Ttyp_var b
                              ]
                          ]
                          Some
                            core_type (src/extension.ml[146,5357+11]..src/extension.ml[146,5357+34])
                              Ttyp_constr "payload_parser/3256"
                              [
                                core_type (src/extension.ml[146,5357+12]..src/extension.ml[146,5357+14])
                                  Ttyp_var a
                                core_type (src/extension.ml[146,5357+16]..src/extension.ml[146,5357+18])
                                  Ttyp_var c
                              ]
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (src/extension.ml[148,5393+2]..src/extension.ml[153,5559+3])
              Tstr_type Rec
              [
                type_declaration t/3608 (src/extension.ml[148,5393+2]..src/extension.ml[153,5559+3])
                  ptype_params =
                    [
                      core_type (src/extension.ml[148,5393+8]..src/extension.ml[148,5393+16])
                        Ttyp_var context
                      core_type (src/extension.ml[148,5393+18]..src/extension.ml[148,5393+26])
                        Ttyp_var payload
                    ]
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ttype_record
                      [
                        (src/extension.ml[149,5427+4]..src/extension.ml[149,5427+26])
                          Immutable
                          name/3614                          core_type (src/extension.ml[149,5427+11]..src/extension.ml[149,5427+25])
                            Ttyp_poly
                            core_type (src/extension.ml[149,5427+11]..src/extension.ml[149,5427+25])
                              Ttyp_constr "Ppxlib__!.Name.Pattern.t"
                              []
                        (src/extension.ml[150,5454+4]..src/extension.ml[150,5454+33])
                          Immutable
                          context/3615                          core_type (src/extension.ml[150,5454+14]..src/extension.ml[150,5454+32])
                            Ttyp_poly
                            core_type (src/extension.ml[150,5454+14]..src/extension.ml[150,5454+32])
                              Ttyp_constr "Context/3201.t"
                              [
                                core_type (src/extension.ml[150,5454+14]..src/extension.ml[150,5454+22])
                                  Ttyp_var context
                              ]
                        (src/extension.ml[151,5488+4]..src/extension.ml[151,5488+49])
                          Immutable
                          payload/3616                          core_type (src/extension.ml[151,5488+14]..src/extension.ml[151,5488+48])
                            Ttyp_poly
                            core_type (src/extension.ml[151,5488+14]..src/extension.ml[151,5488+48])
                              Ttyp_constr "payload_parser/3256"
                              [
                                core_type (src/extension.ml[151,5488+15]..src/extension.ml[151,5488+22])
                                  Ttyp_constr "Ppxlib__!.Import.payload"
                                  []
                                core_type (src/extension.ml[151,5488+24]..src/extension.ml[151,5488+32])
                                  Ttyp_var payload
                              ]
                        (src/extension.ml[152,5538+4]..src/extension.ml[152,5538+20])
                          Immutable
                          with_arg/3617                          core_type (src/extension.ml[152,5538+15]..src/extension.ml[152,5538+19])
                            Ttyp_poly
                            core_type (src/extension.ml[152,5538+15]..src/extension.ml[152,5538+19])
                              Ttyp_constr "bool/5!"
                              []
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (src/extension.ml[155,5564+2]..src/extension.ml[178,6336+5])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/extension.ml[155,5564+6]..src/extension.ml[155,5564+13])
                    Tpat_extra_constraint
                    core_type (src/extension.ml[155,5564+6]..src/extension.ml[178,6336+5]) ghost
                      Ttyp_poly 'a
                      core_type (src/extension.ml[157,5594+6]..src/extension.ml[162,5724+21])
                        Ttyp_arrow
                        Labelled "with_arg"
                        core_type (src/extension.ml[157,5594+15]..src/extension.ml[157,5594+19])
                          Ttyp_constr "bool/5!"
                          []
                        core_type (src/extension.ml[158,5617+6]..src/extension.ml[162,5724+21])
                          Ttyp_arrow
                          Nolabel
                          core_type (src/extension.ml[158,5617+6]..src/extension.ml[158,5617+12])
                            Ttyp_constr "string/17!"
                            []
                          core_type (src/extension.ml[159,5633+6]..src/extension.ml[162,5724+21])
                            Ttyp_arrow
                            Nolabel
                            core_type (src/extension.ml[159,5633+6]..src/extension.ml[159,5633+17])
                              Ttyp_constr "Context/3201.t"
                              [
                                core_type (src/extension.ml[159,5633+6]..src/extension.ml[159,5633+7])
                                  Ttyp_var a
                              ]
                            core_type (src/extension.ml[160,5654+6]..src/extension.ml[162,5724+21])
                              Ttyp_arrow
                              Nolabel
                              core_type (src/extension.ml[160,5654+6]..src/extension.ml[160,5654+43])
                                Ttyp_constr "Ppxlib__!.Ast_pattern.t"
                                [
                                  core_type (src/extension.ml[160,5654+7]..src/extension.ml[160,5654+14])
                                    Ttyp_constr "Ppxlib__!.Import.payload"
                                    []
                                  core_type (src/extension.ml[160,5654+16]..src/extension.ml[160,5654+18])
                                    Ttyp_var b
                                  core_type (src/extension.ml[160,5654+20]..src/extension.ml[160,5654+28])
                                    Ttyp_var payload
                                ]
                              core_type (src/extension.ml[161,5701+6]..src/extension.ml[162,5724+21])
                                Ttyp_arrow
                                Nolabel
                                core_type (src/extension.ml[161,5701+6]..src/extension.ml[161,5701+19])
                                  Ttyp_constr "Callback/3255.t"
                                  [
                                    core_type (src/extension.ml[161,5701+6]..src/extension.ml[161,5701+8])
                                      Ttyp_var b
                                  ]
                                core_type (src/extension.ml[162,5724+6]..src/extension.ml[162,5724+21])
                                  Ttyp_constr "t/3608"
                                  [
                                    core_type (src/extension.ml[162,5724+7]..src/extension.ml[162,5724+8])
                                      Ttyp_var a
                                    core_type (src/extension.ml[162,5724+10]..src/extension.ml[162,5724+18])
                                      Ttyp_var payload
                                  ]
                    pattern (src/extension.ml[155,5564+6]..src/extension.ml[155,5564+13])
                      Tpat_var "declare/3619"
                  expression (src/extension.ml[155,5564+6]..src/extension.ml[178,6336+5])
                    Texp_newtype "a"
                      Texp_constraint
                      core_type (src/extension.ml[157,5594+6]..src/extension.ml[162,5724+21])
                        Ttyp_arrow
                        Labelled "with_arg"
                        core_type (src/extension.ml[157,5594+15]..src/extension.ml[157,5594+19])
                          Ttyp_constr "bool/5!"
                          []
                        core_type (src/extension.ml[158,5617+6]..src/extension.ml[162,5724+21])
                          Ttyp_arrow
                          Nolabel
                          core_type (src/extension.ml[158,5617+6]..src/extension.ml[158,5617+12])
                            Ttyp_constr "string/17!"
                            []
                          core_type (src/extension.ml[159,5633+6]..src/extension.ml[162,5724+21])
                            Ttyp_arrow
                            Nolabel
                            core_type (src/extension.ml[159,5633+6]..src/extension.ml[159,5633+17])
                              Ttyp_constr "Context/3201.t"
                              [
                                core_type (src/extension.ml[159,5633+6]..src/extension.ml[159,5633+7])
                                  Ttyp_constr "a/3620"
                                  []
                              ]
                            core_type (src/extension.ml[160,5654+6]..src/extension.ml[162,5724+21])
                              Ttyp_arrow
                              Nolabel
                              core_type (src/extension.ml[160,5654+6]..src/extension.ml[160,5654+43])
                                Ttyp_constr "Ppxlib__!.Ast_pattern.t"
                                [
                                  core_type (src/extension.ml[160,5654+7]..src/extension.ml[160,5654+14])
                                    Ttyp_constr "Ppxlib__!.Import.payload"
                                    []
                                  core_type (src/extension.ml[160,5654+16]..src/extension.ml[160,5654+18])
                                    Ttyp_var b
                                  core_type (src/extension.ml[160,5654+20]..src/extension.ml[160,5654+28])
                                    Ttyp_var payload
                                ]
                              core_type (src/extension.ml[161,5701+6]..src/extension.ml[162,5724+21])
                                Ttyp_arrow
                                Nolabel
                                core_type (src/extension.ml[161,5701+6]..src/extension.ml[161,5701+19])
                                  Ttyp_constr "Callback/3255.t"
                                  [
                                    core_type (src/extension.ml[161,5701+6]..src/extension.ml[161,5701+8])
                                      Ttyp_var b
                                  ]
                                core_type (src/extension.ml[162,5724+6]..src/extension.ml[162,5724+21])
                                  Ttyp_constr "t/3608"
                                  [
                                    core_type (src/extension.ml[162,5724+7]..src/extension.ml[162,5724+8])
                                      Ttyp_constr "a/3620"
                                      []
                                    core_type (src/extension.ml[162,5724+10]..src/extension.ml[162,5724+18])
                                      Ttyp_var payload
                                  ]
                        Texp_function
                        Labelled "with_arg"
                        [
                          <case>
                            pattern (src/extension.ml[163,5748+8]..src/extension.ml[163,5748+16])
                              Tpat_var "with_arg/3621"
                            expression (src/extension.ml[163,5748+17]..src/extension.ml[178,6336+5]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/extension.ml[163,5748+17]..src/extension.ml[163,5748+21])
                                    Tpat_var "name/3622"
                                  expression (src/extension.ml[163,5748+22]..src/extension.ml[178,6336+5]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/extension.ml[163,5748+22]..src/extension.ml[163,5748+29])
                                          Tpat_var "context/3623"
                                        expression (src/extension.ml[163,5748+30]..src/extension.ml[178,6336+5]) ghost
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/extension.ml[163,5748+30]..src/extension.ml[163,5748+37])
                                                Tpat_var "pattern/3624"
                                              expression (src/extension.ml[163,5748+38]..src/extension.ml[178,6336+5]) ghost
                                                Texp_function
                                                Nolabel
                                                [
                                                  <case>
                                                    pattern (src/extension.ml[163,5748+38]..src/extension.ml[163,5748+39])
                                                      Tpat_var "k/3625"
                                                    expression (src/extension.ml[166,5886+4]..src/extension.ml[178,6336+5])
                                                      Texp_sequence
                                                      expression (src/extension.ml[166,5886+4]..src/extension.ml[171,6120+14])
                                                        Texp_match
                                                        expression (src/extension.ml[166,5886+11]..src/extension.ml[166,5886+18])
                                                          Texp_ident "context/3623"
                                                        [
                                                          <case>
                                                            pattern (src/extension.ml[167,5910+6]..src/extension.ml[167,5910+24])
                                                              Tpat_value
                                                              pattern (src/extension.ml[167,5910+6]..src/extension.ml[167,5910+24])
                                                                Tpat_construct "Context.Ppx_import"
                                                                []
                                                            expression (src/extension.ml[168,5938+8]..src/extension.ml[168,5938+76])
                                                              Texp_apply
                                                              expression (src/extension.ml[168,5938+8]..src/extension.ml[168,5938+39])
                                                                Texp_ident "Ppxlib__!.Name.Registrar.check_collisions"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/extension.ml[168,5938+40]..src/extension.ml[168,5938+49])
                                                                    Texp_ident "registrar/3202"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/extension.ml[168,5938+50]..src/extension.ml[168,5938+71])
                                                                    Texp_construct "Context.T"
                                                                    [
                                                                      expression (src/extension.ml[168,5938+61]..src/extension.ml[168,5938+70])
                                                                        Texp_construct "Core_type"
                                                                        []
                                                                    ]
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/extension.ml[168,5938+72]..src/extension.ml[168,5938+76])
                                                                    Texp_ident "name/3622"
                                                              ]
                                                          <case>
                                                            pattern (src/extension.ml[169,6015+6]..src/extension.ml[169,6015+23])
                                                              Tpat_value
                                                              pattern (src/extension.ml[169,6015+6]..src/extension.ml[169,6015+23])
                                                                Tpat_construct "Context.Core_type"
                                                                []
                                                            expression (src/extension.ml[170,6042+8]..src/extension.ml[170,6042+77])
                                                              Texp_apply
                                                              expression (src/extension.ml[170,6042+8]..src/extension.ml[170,6042+39])
                                                                Texp_ident "Ppxlib__!.Name.Registrar.check_collisions"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/extension.ml[170,6042+40]..src/extension.ml[170,6042+49])
                                                                    Texp_ident "registrar/3202"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/extension.ml[170,6042+50]..src/extension.ml[170,6042+72])
                                                                    Texp_construct "Context.T"
                                                                    [
                                                                      expression (src/extension.ml[170,6042+61]..src/extension.ml[170,6042+71])
                                                                        Texp_construct "Ppx_import"
                                                                        []
                                                                    ]
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/extension.ml[170,6042+73]..src/extension.ml[170,6042+77])
                                                                    Texp_ident "name/3622"
                                                              ]
                                                          <case>
                                                            pattern (src/extension.ml[171,6120+6]..src/extension.ml[171,6120+7])
                                                              Tpat_value
                                                              pattern (src/extension.ml[171,6120+6]..src/extension.ml[171,6120+7])
                                                                Tpat_any
                                                            expression (src/extension.ml[171,6120+11]..src/extension.ml[171,6120+13])
                                                              Texp_construct "()"
                                                              []
                                                        ]
                                                        []
                                                      expression (src/extension.ml[172,6136+4]..src/extension.ml[178,6336+5])
                                                        Texp_sequence
                                                        expression (src/extension.ml[172,6136+4]..src/extension.ml[172,6136+79])
                                                          Texp_apply
                                                          expression (src/extension.ml[172,6136+4]..src/extension.ml[172,6136+27])
                                                            Texp_ident "Ppxlib__!.Name.Registrar.register"
                                                          [
                                                            <arg>
                                                              Labelled "kind"
                                                              expression (src/extension.ml[172,6136+34]..src/extension.ml[172,6136+44])
                                                                Texp_variant "Extension"
                                                                None
                                                            <arg>
                                                              Nolabel
                                                              expression (src/extension.ml[172,6136+45]..src/extension.ml[172,6136+54])
                                                                Texp_ident "registrar/3202"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/extension.ml[172,6136+55]..src/extension.ml[172,6136+74])
                                                                Texp_construct "Context.T"
                                                                [
                                                                  expression (src/extension.ml[172,6136+66]..src/extension.ml[172,6136+73])
                                                                    Texp_ident "context/3623"
                                                                ]
                                                            <arg>
                                                              Nolabel
                                                              expression (src/extension.ml[172,6136+75]..src/extension.ml[172,6136+79])
                                                                Texp_ident "name/3622"
                                                          ]
                                                        expression (src/extension.ml[173,6217+4]..src/extension.ml[178,6336+5])
                                                          Texp_record
                                                            fields =
                                                              [
                                                                "name"
                                                                  expression (src/extension.ml[174,6223+13]..src/extension.ml[174,6223+35])
                                                                    Texp_apply
                                                                    expression (src/extension.ml[174,6223+13]..src/extension.ml[174,6223+30])
                                                                      Texp_ident "Ppxlib__!.Name.Pattern.make"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/extension.ml[174,6223+31]..src/extension.ml[174,6223+35])
                                                                          Texp_ident "name/3622"
                                                                    ]
                                                                "context"
                                                                  expression (src/extension.ml[175,6260+6]..src/extension.ml[175,6260+13]) ghost
                                                                    Texp_ident "context/3623"
                                                                "payload"
                                                                  expression (src/extension.ml[176,6275+16]..src/extension.ml[176,6275+43])
                                                                    Texp_construct "Payload_parser"
                                                                    [
                                                                      expression (src/extension.ml[176,6275+32]..src/extension.ml[176,6275+39])
                                                                        Texp_ident "pattern/3624"
                                                                      expression (src/extension.ml[176,6275+41]..src/extension.ml[176,6275+42])
                                                                        Texp_ident "k/3625"
                                                                    ]
                                                                "with_arg"
                                                                  expression (src/extension.ml[177,6320+6]..src/extension.ml[177,6320+14]) ghost
                                                                    Texp_ident "with_arg/3621"
                                                              ]
                                                            representation =
                                                              Record_regular
                                                            extended_expression =
                                                              None
                                                ]
                                          ]
                                    ]
                              ]
                        ]
              ]
            structure_item (src/extension.ml[180,6343+2]..src/extension.ml[212,7490+28])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/extension.ml[180,6343+6]..src/extension.ml[180,6343+10])
                    Tpat_var "find/3626"
                  expression (src/extension.ml[180,6343+11]..src/extension.ml[212,7490+28]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[180,6343+11]..src/extension.ml[180,6343+13])
                          Tpat_var "ts/3628"
                        expression (src/extension.ml[180,6343+14]..src/extension.ml[212,7490+28]) ghost
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/extension.ml[180,6343+15]..src/extension.ml[180,6343+18])
                                Tpat_extra_constraint
                                core_type (src/extension.ml[180,6343+21]..src/extension.ml[180,6343+30])
                                  Ttyp_constr "Ppxlib__!.Import.extension"
                                  []
                                pattern (src/extension.ml[180,6343+15]..src/extension.ml[180,6343+18])
                                  Tpat_alias "ext/3629"
                                  pattern (src/extension.ml[180,6343+15]..src/extension.ml[180,6343+18])
                                    Tpat_any
                              expression (src/extension.ml[181,6377+4]..src/extension.ml[212,7490+28])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (src/extension.ml[181,6377+8]..src/extension.ml[181,6377+27])
                                      Tpat_record
                                      [
                                        "txt"
                                          pattern (src/extension.ml[181,6377+16]..src/extension.ml[181,6377+20])
                                            Tpat_var "name/3630"
                                        "loc"
                                          pattern (src/extension.ml[181,6377+22]..src/extension.ml[181,6377+25])
                                            Tpat_var "loc/3631"
                                      ]
                                    expression (src/extension.ml[181,6377+30]..src/extension.ml[181,6377+37])
                                      Texp_apply
                                      expression (src/extension.ml[181,6377+30]..src/extension.ml[181,6377+33])
                                        Texp_ident "Stdlib!.fst"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/extension.ml[181,6377+34]..src/extension.ml[181,6377+37])
                                            Texp_ident "ext/3629"
                                      ]
                                ]
                                expression (src/extension.ml[182,6418+4]..src/extension.ml[212,7490+28])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/extension.ml[182,6418+8]..src/extension.ml[182,6418+17])
                                        Tpat_tuple
                                        [
                                          pattern (src/extension.ml[182,6418+8]..src/extension.ml[182,6418+12])
                                            Tpat_var "name/3632"
                                          pattern (src/extension.ml[182,6418+14]..src/extension.ml[182,6418+17])
                                            Tpat_var "arg/3633"
                                        ]
                                      expression (src/extension.ml[182,6418+20]..src/extension.ml[182,6418+40])
                                        Texp_apply
                                        expression (src/extension.ml[182,6418+20]..src/extension.ml[182,6418+35])
                                          Texp_ident "Ppxlib__!.Name.split_path"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[182,6418+36]..src/extension.ml[182,6418+40])
                                              Texp_ident "name/3630"
                                        ]
                                  ]
                                  expression (src/extension.ml[183,6462+4]..src/extension.ml[212,7490+28])
                                    Texp_match
                                    expression (src/extension.ml[183,6462+10]..src/extension.ml[183,6462+71])
                                      Texp_apply
                                      expression (src/extension.ml[183,6462+10]..src/extension.ml[183,6462+21])
                                        Texp_ident "Ppxlib__!.Import.List.filter"
                                      [
                                        <arg>
                                          Labelled "f"
                                          expression (src/extension.ml[183,6462+28]..src/extension.ml[183,6462+71])
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (src/extension.ml[183,6462+33]..src/extension.ml[183,6462+34])
                                                  Tpat_var "t/3707"
                                                expression (src/extension.ml[183,6462+38]..src/extension.ml[183,6462+70])
                                                  Texp_apply
                                                  expression (src/extension.ml[183,6462+38]..src/extension.ml[183,6462+58])
                                                    Texp_ident "Ppxlib__!.Name.Pattern.matches"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/extension.ml[183,6462+59]..src/extension.ml[183,6462+65])
                                                        Texp_field
                                                        expression (src/extension.ml[183,6462+59]..src/extension.ml[183,6462+60])
                                                          Texp_ident "t/3707"
                                                        "name"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/extension.ml[183,6462+66]..src/extension.ml[183,6462+70])
                                                        Texp_ident "name/3632"
                                                  ]
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/extension.ml[183,6462+22]..src/extension.ml[183,6462+24])
                                            Texp_ident "ts/3628"
                                      ]
                                    [
                                      <case>
                                        pattern (src/extension.ml[184,6539+6]..src/extension.ml[184,6539+8])
                                          Tpat_value
                                          pattern (src/extension.ml[184,6539+6]..src/extension.ml[184,6539+8])
                                            Tpat_construct "[]"
                                            []
                                        expression (src/extension.ml[184,6539+12]..src/extension.ml[184,6539+19])
                                          Texp_construct "Ok"
                                          [
                                            expression (src/extension.ml[184,6539+15]..src/extension.ml[184,6539+19])
                                              Texp_construct "None"
                                              []
                                          ]
                                      <case>
                                        pattern (src/extension.ml[185,6559+6]..src/extension.ml[185,6559+22])
                                          Tpat_value
                                          pattern (src/extension.ml[185,6559+6]..src/extension.ml[185,6559+22])
                                            Tpat_alias "l/3708"
                                            pattern (src/extension.ml[185,6559+6]..src/extension.ml[185,6559+17])
                                              Tpat_construct "::"
                                              [
                                                pattern (src/extension.ml[185,6559+6]..src/extension.ml[185,6559+7])
                                                  Tpat_any
                                                pattern (src/extension.ml[185,6559+11]..src/extension.ml[185,6559+17])
                                                  Tpat_construct "::"
                                                  [
                                                    pattern (src/extension.ml[185,6559+11]..src/extension.ml[185,6559+12])
                                                      Tpat_any
                                                    pattern (src/extension.ml[185,6559+16]..src/extension.ml[185,6559+17])
                                                      Tpat_any
                                                  ]
                                              ]
                                        expression (src/extension.ml[186,6585+8]..src/extension.ml[190,6785+16])
                                          Texp_construct "Error"
                                          [
                                            expression (src/extension.ml[187,6599+10]..src/extension.ml[190,6785+16])
                                              Texp_tuple
                                              [
                                                expression (src/extension.ml[187,6599+12]..src/extension.ml[189,6714+69])
                                                  Texp_apply
                                                  expression (src/extension.ml[187,6599+12]..src/extension.ml[187,6599+34])
                                                    Texp_ident "Ppxlib__!.Location.Error.createf"
                                                  [
                                                    <arg>
                                                      Labelled "loc"
                                                      expression (src/extension.ml[187,6599+36]..src/extension.ml[187,6599+39])
                                                        Texp_ident "loc/3631"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/extension.ml[187,6599+40]..src/extension.ml[187,6599+75])
                                                        Texp_construct "CamlinternalFormatBasics.Format"
                                                        [
                                                          expression (src/extension.ml[187,6599+40]..src/extension.ml[187,6599+75]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                            [
                                                              expression (src/extension.ml[187,6599+40]..src/extension.ml[187,6599+75]) ghost
                                                                Texp_constant Const_string("Multiple match for extensions: ",(src/extension.ml[187,6599+40]..src/extension.ml[187,6599+75]) ghost,None)
                                                              expression (src/extension.ml[187,6599+40]..src/extension.ml[187,6599+75]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.String"
                                                                [
                                                                  expression (src/extension.ml[187,6599+40]..src/extension.ml[187,6599+75]) ghost
                                                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                    []
                                                                  expression (src/extension.ml[187,6599+40]..src/extension.ml[187,6599+75]) ghost
                                                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                    []
                                                                ]
                                                            ]
                                                          expression (src/extension.ml[187,6599+40]..src/extension.ml[187,6599+75]) ghost
                                                            Texp_constant Const_string("Multiple match for extensions: %s",(src/extension.ml[187,6599+40]..src/extension.ml[187,6599+75]) ghost,None)
                                                        ]
                                                    <arg>
                                                      Nolabel
                                                      expression (src/extension.ml[188,6675+14]..src/extension.ml[189,6714+69])
                                                        Texp_apply
                                                        expression (src/extension.ml[188,6675+15]..src/extension.ml[188,6675+28])
                                                          Texp_ident "Ppxlib__!.Import.String.concat"
                                                        [
                                                          <arg>
                                                            Labelled "sep"
                                                            expression (src/extension.ml[188,6675+34]..src/extension.ml[188,6675+38])
                                                              Texp_constant Const_string(", ",(src/extension.ml[188,6675+35]..src/extension.ml[188,6675+37]),None)
                                                          <arg>
                                                            Nolabel
                                                            expression (src/extension.ml[189,6714+17]..src/extension.ml[189,6714+68])
                                                              Texp_apply
                                                              expression (src/extension.ml[189,6714+18]..src/extension.ml[189,6714+26])
                                                                Texp_ident "Ppxlib__!.Import.List.map"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/extension.ml[189,6714+27]..src/extension.ml[189,6714+28])
                                                                    Texp_ident "l/3708"
                                                                <arg>
                                                                  Labelled "f"
                                                                  expression (src/extension.ml[189,6714+32]..src/extension.ml[189,6714+67])
                                                                    Texp_function
                                                                    Nolabel
                                                                    [
                                                                      <case>
                                                                        pattern (src/extension.ml[189,6714+37]..src/extension.ml[189,6714+38])
                                                                          Tpat_var "t/3886"
                                                                        expression (src/extension.ml[189,6714+42]..src/extension.ml[189,6714+66])
                                                                          Texp_apply
                                                                          expression (src/extension.ml[189,6714+42]..src/extension.ml[189,6714+59])
                                                                            Texp_ident "Ppxlib__!.Name.Pattern.name"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/extension.ml[189,6714+60]..src/extension.ml[189,6714+66])
                                                                                Texp_field
                                                                                expression (src/extension.ml[189,6714+60]..src/extension.ml[189,6714+61])
                                                                                  Texp_ident "t/3886"
                                                                                "name"
                                                                          ]
                                                                    ]
                                                              ]
                                                        ]
                                                  ]
                                                expression (src/extension.ml[190,6785+12]..src/extension.ml[190,6785+14])
                                                  Texp_construct "[]"
                                                  []
                                              ]
                                          ]
                                      <case>
                                        pattern (src/extension.ml[191,6802+6]..src/extension.ml[191,6802+11])
                                          Tpat_value
                                          pattern (src/extension.ml[191,6802+6]..src/extension.ml[191,6802+11])
                                            Tpat_construct "::"
                                            [
                                              pattern (src/extension.ml[191,6802+8]..src/extension.ml[191,6802+9])
                                                Tpat_var "t/3709"
                                              pattern (src/extension.ml[191,6802+10]..src/extension.ml[191,6802+11]) ghost
                                                Tpat_construct "[]"
                                                []
                                            ]
                                        expression (src/extension.ml[192,6817+8]..src/extension.ml[212,7490+28])
                                          Texp_ifthenelse
                                          expression (src/extension.ml[192,6817+11]..src/extension.ml[192,6817+49])
                                            Texp_apply
                                            expression (src/extension.ml[192,6817+28]..src/extension.ml[192,6817+30])
                                              Texp_ident "Stdlib!.&&"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/extension.ml[192,6817+11]..src/extension.ml[192,6817+27])
                                                  Texp_apply
                                                  expression (src/extension.ml[192,6817+12]..src/extension.ml[192,6817+15])
                                                    Texp_ident "Stdlib!.not"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/extension.ml[192,6817+16]..src/extension.ml[192,6817+26])
                                                        Texp_field
                                                        expression (src/extension.ml[192,6817+16]..src/extension.ml[192,6817+17])
                                                          Texp_ident "t/3709"
                                                        "with_arg"
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (src/extension.ml[192,6817+31]..src/extension.ml[192,6817+49])
                                                  Texp_apply
                                                  expression (src/extension.ml[192,6817+31]..src/extension.ml[192,6817+45])
                                                    Texp_ident "Ppxlib__!.Import.Option.is_some"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/extension.ml[192,6817+46]..src/extension.ml[192,6817+49])
                                                        Texp_ident "arg/3633"
                                                  ]
                                            ]
                                          expression (src/extension.ml[193,6872+10]..src/extension.ml[196,6998+18])
                                            Texp_construct "Error"
                                            [
                                              expression (src/extension.ml[194,6888+12]..src/extension.ml[196,6998+18])
                                                Texp_tuple
                                                [
                                                  expression (src/extension.ml[194,6888+14]..src/extension.ml[195,6930+66])
                                                    Texp_apply
                                                    expression (src/extension.ml[194,6888+14]..src/extension.ml[194,6888+36])
                                                      Texp_ident "Ppxlib__!.Location.Error.createf"
                                                    [
                                                      <arg>
                                                        Labelled "loc"
                                                        expression (src/extension.ml[194,6888+38]..src/extension.ml[194,6888+41])
                                                          Texp_ident "loc/3631"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[195,6930+16]..src/extension.ml[195,6930+61])
                                                          Texp_construct "CamlinternalFormatBasics.Format"
                                                          [
                                                            expression (src/extension.ml[195,6930+16]..src/extension.ml[195,6930+61]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                                              [
                                                                expression (src/extension.ml[195,6930+16]..src/extension.ml[195,6930+61]) ghost
                                                                  Texp_constant Const_string("Extension ",(src/extension.ml[195,6930+16]..src/extension.ml[195,6930+61]) ghost,None)
                                                                expression (src/extension.ml[195,6930+16]..src/extension.ml[195,6930+61]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.String"
                                                                  [
                                                                    expression (src/extension.ml[195,6930+16]..src/extension.ml[195,6930+61]) ghost
                                                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                      []
                                                                    expression (src/extension.ml[195,6930+16]..src/extension.ml[195,6930+61]) ghost
                                                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                      [
                                                                        expression (src/extension.ml[195,6930+16]..src/extension.ml[195,6930+61]) ghost
                                                                          Texp_constant Const_string(" doesn't expect a path argument",(src/extension.ml[195,6930+16]..src/extension.ml[195,6930+61]) ghost,None)
                                                                        expression (src/extension.ml[195,6930+16]..src/extension.ml[195,6930+61]) ghost
                                                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                          []
                                                                      ]
                                                                  ]
                                                              ]
                                                            expression (src/extension.ml[195,6930+16]..src/extension.ml[195,6930+61]) ghost
                                                              Texp_constant Const_string("Extension %s doesn't expect a path argument",(src/extension.ml[195,6930+16]..src/extension.ml[195,6930+61]) ghost,None)
                                                          ]
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[195,6930+62]..src/extension.ml[195,6930+66])
                                                          Texp_ident "name/3632"
                                                    ]
                                                  expression (src/extension.ml[196,6998+14]..src/extension.ml[196,6998+16])
                                                    Texp_construct "[]"
                                                    []
                                                ]
                                            ]
                                          Some
                                            expression (src/extension.ml[198,7030+10]..src/extension.ml[212,7490+28])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/extension.ml[198,7030+14]..src/extension.ml[198,7030+17])
                                                    Tpat_var "arg/3892"
                                                  expression (src/extension.ml[199,7050+12]..src/extension.ml[210,7458+18])
                                                    Texp_apply
                                                    expression (src/extension.ml[199,7050+12]..src/extension.ml[199,7050+22])
                                                      Texp_ident "Ppxlib__!.Import.Option.map"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[199,7050+23]..src/extension.ml[199,7050+26])
                                                          Texp_ident "arg/3633"
                                                      <arg>
                                                        Labelled "f"
                                                        expression (src/extension.ml[199,7050+30]..src/extension.ml[210,7458+18])
                                                          Texp_function
                                                          Nolabel
                                                          [
                                                            <case>
                                                              pattern (src/extension.ml[199,7050+35]..src/extension.ml[199,7050+36])
                                                                Tpat_var "s/3893"
                                                              expression (src/extension.ml[200,7090+16]..src/extension.ml[210,7458+17])
                                                                Texp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (src/extension.ml[200,7090+20]..src/extension.ml[200,7090+25])
                                                                      Tpat_var "shift/3894"
                                                                    expression (src/extension.ml[200,7090+28]..src/extension.ml[200,7090+50])
                                                                      Texp_apply
                                                                      expression (src/extension.ml[200,7090+47]..src/extension.ml[200,7090+48])
                                                                        Texp_ident "Stdlib!.+"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/extension.ml[200,7090+28]..src/extension.ml[200,7090+46])
                                                                            Texp_apply
                                                                            expression (src/extension.ml[200,7090+28]..src/extension.ml[200,7090+41])
                                                                              Texp_ident "Ppxlib__!.Import.String.length"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/extension.ml[200,7090+42]..src/extension.ml[200,7090+46])
                                                                                  Texp_ident "name/3632"
                                                                            ]
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/extension.ml[200,7090+49]..src/extension.ml[200,7090+50])
                                                                            Texp_constant Const_int 1
                                                                      ]
                                                                ]
                                                                expression (src/extension.ml[201,7144+16]..src/extension.ml[210,7458+17])
                                                                  Texp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (src/extension.ml[201,7144+20]..src/extension.ml[201,7144+25])
                                                                        Tpat_var "start/3895"
                                                                      expression (src/extension.ml[201,7144+28]..src/extension.ml[201,7144+41])
                                                                        Texp_field
                                                                        expression (src/extension.ml[201,7144+28]..src/extension.ml[201,7144+31])
                                                                          Texp_ident "loc/3631"
                                                                        "loc_start"
                                                                  ]
                                                                  expression (src/extension.ml[202,7189+16]..src/extension.ml[210,7458+17])
                                                                    Texp_record
                                                                      fields =
                                                                        [
                                                                          "txt"
                                                                            expression (src/extension.ml[203,7207+24]..src/extension.ml[203,7207+41])
                                                                              Texp_apply
                                                                              expression (src/extension.ml[203,7207+24]..src/extension.ml[203,7207+39])
                                                                                Texp_ident "Ppxlib__!.Longident.parse"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/extension.ml[203,7207+40]..src/extension.ml[203,7207+41])
                                                                                    Texp_ident "s/3893"
                                                                              ]
                                                                          "loc"
                                                                            expression (src/extension.ml[205,7274+20]..src/extension.ml[209,7435+21])
                                                                              Texp_record
                                                                                fields =
                                                                                  [
                                                                                    "loc_start"
                                                                                      expression (src/extension.ml[208,7361+24]..src/extension.ml[208,7361+72])
                                                                                        Texp_record
                                                                                          fields =
                                                                                            [
                                                                                              <kept>                                                                                              <kept>                                                                                              <kept>                                                                                              "pos_cnum"
                                                                                                expression (src/extension.ml[208,7361+48]..src/extension.ml[208,7361+70])
                                                                                                  Texp_apply
                                                                                                  expression (src/extension.ml[208,7361+63]..src/extension.ml[208,7361+64])
                                                                                                    Texp_ident "Stdlib!.+"
                                                                                                  [
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/extension.ml[208,7361+48]..src/extension.ml[208,7361+62])
                                                                                                        Texp_field
                                                                                                        expression (src/extension.ml[208,7361+48]..src/extension.ml[208,7361+53])
                                                                                                          Texp_ident "start/3895"
                                                                                                        "pos_cnum"
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/extension.ml[208,7361+65]..src/extension.ml[208,7361+70])
                                                                                                        Texp_ident "shift/3894"
                                                                                                  ]
                                                                                            ]
                                                                                          representation =
                                                                                            Record_regular
                                                                                          extended_expression =
                                                                                            Some
                                                                                              expression (src/extension.ml[208,7361+26]..src/extension.ml[208,7361+31])
                                                                                                Texp_ident "start/3895"
                                                                                    <kept>                                                                                    <kept>                                                                                  ]
                                                                                representation =
                                                                                  Record_regular
                                                                                extended_expression =
                                                                                  Some
                                                                                    expression (src/extension.ml[206,7296+22]..src/extension.ml[206,7296+25])
                                                                                      Texp_ident "loc/3631"
                                                                        ]
                                                                      representation =
                                                                        Record_regular
                                                                      extended_expression =
                                                                        None
                                                          ]
                                                    ]
                                              ]
                                              expression (src/extension.ml[212,7490+10]..src/extension.ml[212,7490+28])
                                                Texp_construct "Ok"
                                                [
                                                  expression (src/extension.ml[212,7490+13]..src/extension.ml[212,7490+28])
                                                    Texp_construct "Some"
                                                    [
                                                      expression (src/extension.ml[212,7490+19]..src/extension.ml[212,7490+27])
                                                        Texp_tuple
                                                        [
                                                          expression (src/extension.ml[212,7490+20]..src/extension.ml[212,7490+21])
                                                            Texp_ident "t/3709"
                                                          expression (src/extension.ml[212,7490+23]..src/extension.ml[212,7490+26])
                                                            Texp_ident "arg/3892"
                                                        ]
                                                    ]
                                                ]
                                    ]
                                    []
                          ]
                    ]
              ]
          ]
  structure_item (src/extension.ml[215,7524+0]..src/extension.ml[238,8232+3])
    Tstr_module
    Expert/4078
      module_expr (src/extension.ml[215,7524+16]..src/extension.ml[238,8232+3])
        module_expr (src/extension.ml[215,7524+16]..src/extension.ml[238,8232+3])
          Tmod_structure
          [
            structure_item (src/extension.ml[216,7547+2]..src/extension.ml[218,7621+6])
              Tstr_include              module_expr (src/extension.ml[216,7547+10]..src/extension.ml[218,7621+6])
                Tmod_apply
                module_expr (src/extension.ml[216,7547+10]..src/extension.ml[216,7547+14])
                  Tmod_ident "Make/4031"
                module_expr (src/extension.ml[216,7547+16]..src/extension.ml[218,7621+5])
                  Tmod_structure
                  [
                    structure_item (src/extension.ml[217,7570+4]..src/extension.ml[217,7570+50])
                      Tstr_type Rec
                      [
                        type_declaration t/4032 (src/extension.ml[217,7570+4]..src/extension.ml[217,7570+50])
                          ptype_params =
                            [
                              core_type (src/extension.ml[217,7570+9]..src/extension.ml[217,7570+11])
                                Ttyp_var a
                            ]
                          ptype_cstrs =
                            []
                          ptype_kind =
                            Ttype_abstract
                          ptype_private = Public
                          ptype_manifest =
                            Some
                              core_type (src/extension.ml[217,7570+16]..src/extension.ml[217,7570+50])
                                Ttyp_arrow
                                Labelled "arg"
                                core_type (src/extension.ml[217,7570+20]..src/extension.ml[217,7570+44])
                                  Ttyp_constr "option/12!"
                                  [
                                    core_type (src/extension.ml[217,7570+20]..src/extension.ml[217,7570+37])
                                      Ttyp_constr "Ppxlib__!.Loc.t"
                                      [
                                        core_type (src/extension.ml[217,7570+20]..src/extension.ml[217,7570+31])
                                          Ttyp_constr "Ppxlib__!.Longident.t"
                                          []
                                      ]
                                  ]
                                core_type (src/extension.ml[217,7570+48]..src/extension.ml[217,7570+50])
                                  Ttyp_var a
                      ]
                  ]
            structure_item (src/extension.ml[220,7629+2]..src/extension.ml[221,7675+42])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/extension.ml[220,7629+6]..src/extension.ml[220,7629+27])
                    Tpat_var "declare_with_path_arg/4047"
                  expression (src/extension.ml[220,7629+28]..src/extension.ml[221,7675+42]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[220,7629+28]..src/extension.ml[220,7629+32])
                          Tpat_var "name/4049"
                        expression (src/extension.ml[220,7629+33]..src/extension.ml[221,7675+42]) ghost
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/extension.ml[220,7629+33]..src/extension.ml[220,7629+36])
                                Tpat_var "ctx/4050"
                              expression (src/extension.ml[220,7629+37]..src/extension.ml[221,7675+42]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/extension.ml[220,7629+37]..src/extension.ml[220,7629+41])
                                      Tpat_var "patt/4051"
                                    expression (src/extension.ml[220,7629+42]..src/extension.ml[221,7675+42]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (src/extension.ml[220,7629+42]..src/extension.ml[220,7629+43])
                                            Tpat_var "f/4052"
                                          expression (src/extension.ml[221,7675+4]..src/extension.ml[221,7675+42])
                                            Texp_apply
                                            expression (src/extension.ml[221,7675+4]..src/extension.ml[221,7675+11])
                                              Texp_ident "declare/4045"
                                            [
                                              <arg>
                                                Labelled "with_arg"
                                                expression (src/extension.ml[221,7675+22]..src/extension.ml[221,7675+26])
                                                  Texp_construct "true"
                                                  []
                                              <arg>
                                                Nolabel
                                                expression (src/extension.ml[221,7675+27]..src/extension.ml[221,7675+31])
                                                  Texp_ident "name/4049"
                                              <arg>
                                                Nolabel
                                                expression (src/extension.ml[221,7675+32]..src/extension.ml[221,7675+35])
                                                  Texp_ident "ctx/4050"
                                              <arg>
                                                Nolabel
                                                expression (src/extension.ml[221,7675+36]..src/extension.ml[221,7675+40])
                                                  Texp_ident "patt/4051"
                                              <arg>
                                                Nolabel
                                                expression (src/extension.ml[221,7675+41]..src/extension.ml[221,7675+42])
                                                  Texp_ident "f/4052"
                                            ]
                                      ]
                                ]
                          ]
                    ]
              ]
            structure_item (src/extension.ml[223,7719+2]..src/extension.ml[224,7751+59])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/extension.ml[223,7719+6]..src/extension.ml[223,7719+13])
                    Tpat_var "declare/4053"
                  expression (src/extension.ml[223,7719+14]..src/extension.ml[224,7751+59]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[223,7719+14]..src/extension.ml[223,7719+18])
                          Tpat_var "name/4054"
                        expression (src/extension.ml[223,7719+19]..src/extension.ml[224,7751+59]) ghost
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/extension.ml[223,7719+19]..src/extension.ml[223,7719+22])
                                Tpat_var "ctx/4055"
                              expression (src/extension.ml[223,7719+23]..src/extension.ml[224,7751+59]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/extension.ml[223,7719+23]..src/extension.ml[223,7719+27])
                                      Tpat_var "patt/4056"
                                    expression (src/extension.ml[223,7719+28]..src/extension.ml[224,7751+59]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (src/extension.ml[223,7719+28]..src/extension.ml[223,7719+29])
                                            Tpat_var "f/4057"
                                          expression (src/extension.ml[224,7751+4]..src/extension.ml[224,7751+59])
                                            Texp_apply
                                            expression (src/extension.ml[224,7751+4]..src/extension.ml[224,7751+11])
                                              Texp_ident "declare/4045"
                                            [
                                              <arg>
                                                Labelled "with_arg"
                                                expression (src/extension.ml[224,7751+22]..src/extension.ml[224,7751+27])
                                                  Texp_construct "false"
                                                  []
                                              <arg>
                                                Nolabel
                                                expression (src/extension.ml[224,7751+28]..src/extension.ml[224,7751+32])
                                                  Texp_ident "name/4054"
                                              <arg>
                                                Nolabel
                                                expression (src/extension.ml[224,7751+33]..src/extension.ml[224,7751+36])
                                                  Texp_ident "ctx/4055"
                                              <arg>
                                                Nolabel
                                                expression (src/extension.ml[224,7751+37]..src/extension.ml[224,7751+41])
                                                  Texp_ident "patt/4056"
                                              <arg>
                                                Nolabel
                                                expression (src/extension.ml[224,7751+42]..src/extension.ml[224,7751+59])
                                                  Texp_function
                                                  Labelled "arg"
                                                  [
                                                    <case>
                                                      pattern (src/extension.ml[224,7751+52]..src/extension.ml[224,7751+53])
                                                        Tpat_any
                                                      expression (src/extension.ml[224,7751+57]..src/extension.ml[224,7751+58])
                                                        Texp_ident "f/4057"
                                                  ]
                                            ]
                                      ]
                                ]
                          ]
                    ]
              ]
            structure_item (src/extension.ml[226,7812+2]..src/extension.ml[233,8081+20])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/extension.ml[226,7812+6]..src/extension.ml[226,7812+17])
                    Tpat_var "convert_res/4059"
                  expression (src/extension.ml[226,7812+18]..src/extension.ml[233,8081+20]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[226,7812+18]..src/extension.ml[226,7812+20])
                          Tpat_var "ts/4061"
                        expression (src/extension.ml[226,7812+21]..src/extension.ml[233,8081+20]) ghost
                          Texp_function
                          Labelled "loc"
                          [
                            <case>
                              pattern (src/extension.ml[226,7812+22]..src/extension.ml[226,7812+25])
                                Tpat_var "loc/4062"
                              expression (src/extension.ml[226,7812+26]..src/extension.ml[233,8081+20]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/extension.ml[226,7812+26]..src/extension.ml[226,7812+29])
                                      Tpat_var "ext/4063"
                                    expression (src/extension.ml[227,7844+4]..src/extension.ml[233,8081+20])
                                      Texp_open Fresh
                                      module_expr (src/extension.ml[227,7844+13]..src/extension.ml[227,7844+19])
                                        Tmod_ident "Ppxlib__!.Import.Result"
                                      expression (src/extension.ml[228,7867+4]..src/extension.ml[233,8081+20])
                                        Texp_apply
                                        expression (src/extension.ml[228,7867+16]..src/extension.ml[228,7867+19])
                                          Texp_ident "Ppxlib__!.Import.Result.>>="
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[228,7867+4]..src/extension.ml[228,7867+15])
                                              Texp_apply
                                              expression (src/extension.ml[228,7867+4]..src/extension.ml[228,7867+8])
                                                Texp_ident "find/4046"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[228,7867+9]..src/extension.ml[228,7867+11])
                                                    Texp_ident "ts/4061"
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[228,7867+12]..src/extension.ml[228,7867+15])
                                                    Texp_ident "ext/4063"
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[228,7867+20]..src/extension.ml[233,8081+20])
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/extension.ml[228,7867+24]..src/extension.ml[228,7867+25])
                                                    Tpat_var "r/4064"
                                                  expression (src/extension.ml[229,7896+4]..src/extension.ml[233,8081+20])
                                                    Texp_match
                                                    expression (src/extension.ml[229,7896+10]..src/extension.ml[229,7896+11])
                                                      Texp_ident "r/4064"
                                                    [
                                                      <case>
                                                        pattern (src/extension.ml[230,7913+6]..src/extension.ml[230,7913+10])
                                                          Tpat_value
                                                          pattern (src/extension.ml[230,7913+6]..src/extension.ml[230,7913+10])
                                                            Tpat_construct "None"
                                                            []
                                                        expression (src/extension.ml[230,7913+14]..src/extension.ml[230,7913+21])
                                                          Texp_construct "Ok"
                                                          [
                                                            expression (src/extension.ml[230,7913+17]..src/extension.ml[230,7913+21])
                                                              Texp_construct "None"
                                                              []
                                                          ]
                                                      <case>
                                                        pattern (src/extension.ml[231,7935+6]..src/extension.ml[231,7935+62])
                                                          Tpat_value
                                                          pattern (src/extension.ml[231,7935+6]..src/extension.ml[231,7935+62])
                                                            Tpat_construct "Some"
                                                            [
                                                              pattern (src/extension.ml[231,7935+11]..src/extension.ml[231,7935+62])
                                                                Tpat_tuple
                                                                [
                                                                  pattern (src/extension.ml[231,7935+12]..src/extension.ml[231,7935+56])
                                                                    Tpat_record
                                                                    [
                                                                      "payload"
                                                                        pattern (src/extension.ml[231,7935+24]..src/extension.ml[231,7935+51])
                                                                          Tpat_construct "Payload_parser"
                                                                          [
                                                                            pattern (src/extension.ml[231,7935+40]..src/extension.ml[231,7935+47])
                                                                              Tpat_var "pattern/4066"
                                                                            pattern (src/extension.ml[231,7935+49]..src/extension.ml[231,7935+50])
                                                                              Tpat_var "f/4067"
                                                                          ]
                                                                    ]
                                                                  pattern (src/extension.ml[231,7935+58]..src/extension.ml[231,7935+61])
                                                                    Tpat_var "arg/4068"
                                                                ]
                                                            ]
                                                        expression (src/extension.ml[232,8001+8]..src/extension.ml[233,8081+20])
                                                          Texp_apply
                                                          expression (src/extension.ml[232,8001+61]..src/extension.ml[232,8001+64])
                                                            Texp_ident "Ppxlib__!.Import.Result.>>|"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/extension.ml[232,8001+8]..src/extension.ml[232,8001+60])
                                                                Texp_apply
                                                                expression (src/extension.ml[232,8001+8]..src/extension.ml[232,8001+29])
                                                                  Texp_ident "Ppxlib__!.Ast_pattern.parse_res"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/extension.ml[232,8001+30]..src/extension.ml[232,8001+37])
                                                                      Texp_ident "pattern/4066"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/extension.ml[232,8001+38]..src/extension.ml[232,8001+41])
                                                                      Texp_ident "loc/4062"
                                                                  <arg>
                                                                    Optional "on_error"
                                                                    expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                                                      Texp_construct "None"
                                                                      []
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/extension.ml[232,8001+42]..src/extension.ml[232,8001+51])
                                                                      Texp_apply
                                                                      expression (src/extension.ml[232,8001+43]..src/extension.ml[232,8001+46])
                                                                        Texp_ident "Stdlib!.snd"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/extension.ml[232,8001+47]..src/extension.ml[232,8001+50])
                                                                            Texp_ident "ext/4063"
                                                                      ]
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/extension.ml[232,8001+52]..src/extension.ml[232,8001+60])
                                                                      Texp_apply
                                                                      expression (src/extension.ml[232,8001+53]..src/extension.ml[232,8001+54])
                                                                        Texp_ident "f/4067"
                                                                      [
                                                                        <arg>
                                                                          Labelled "arg"
                                                                          expression (src/extension.ml[232,8001+56]..src/extension.ml[232,8001+59])
                                                                            Texp_ident "arg/4068"
                                                                      ]
                                                                ]
                                                            <arg>
                                                              Nolabel
                                                              expression (src/extension.ml[232,8001+65]..src/extension.ml[233,8081+20])
                                                                Texp_function
                                                                Nolabel
                                                                [
                                                                  <case>
                                                                    pattern (src/extension.ml[232,8001+69]..src/extension.ml[232,8001+76])
                                                                      Tpat_var "payload/4069"
                                                                    expression (src/extension.ml[233,8081+8]..src/extension.ml[233,8081+20])
                                                                      Texp_construct "Some"
                                                                      [
                                                                        expression (src/extension.ml[233,8081+13]..src/extension.ml[233,8081+20])
                                                                          Texp_ident "payload/4069"
                                                                      ]
                                                                ]
                                                          ]
                                                    ]
                                                    []
                                              ]
                                        ]
                                ]
                          ]
                    ]
              ]
            structure_item (src/extension.ml[235,8103+2]..src/extension.ml[237,8159+72])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/extension.ml[235,8103+6]..src/extension.ml[235,8103+13])
                    Tpat_var "convert/4071"
                  expression (src/extension.ml[235,8103+14]..src/extension.ml[237,8159+72]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[235,8103+14]..src/extension.ml[235,8103+16])
                          Tpat_var "ts/4073"
                        expression (src/extension.ml[235,8103+17]..src/extension.ml[237,8159+72]) ghost
                          Texp_function
                          Labelled "loc"
                          [
                            <case>
                              pattern (src/extension.ml[235,8103+18]..src/extension.ml[235,8103+21])
                                Tpat_var "loc/4074"
                              expression (src/extension.ml[235,8103+22]..src/extension.ml[237,8159+72]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/extension.ml[235,8103+22]..src/extension.ml[235,8103+25])
                                      Tpat_var "ext/4075"
                                    expression (src/extension.ml[236,8131+4]..src/extension.ml[237,8159+72])
                                      Texp_apply
                                      expression (src/extension.ml[237,8159+4]..src/extension.ml[237,8159+6])
                                        Texp_ident "Stdlib!.|>"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/extension.ml[236,8131+4]..src/extension.ml[236,8131+27])
                                            Texp_apply
                                            expression (src/extension.ml[236,8131+4]..src/extension.ml[236,8131+15])
                                              Texp_ident "convert_res/4059"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/extension.ml[236,8131+16]..src/extension.ml[236,8131+18])
                                                  Texp_ident "ts/4073"
                                              <arg>
                                                Labelled "loc"
                                                expression (src/extension.ml[236,8131+20]..src/extension.ml[236,8131+23])
                                                  Texp_ident "loc/4074"
                                              <arg>
                                                Nolabel
                                                expression (src/extension.ml[236,8131+24]..src/extension.ml[236,8131+27])
                                                  Texp_ident "ext/4075"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/extension.ml[237,8159+7]..src/extension.ml[237,8159+72])
                                            Texp_apply
                                            expression (src/extension.ml[237,8159+7]..src/extension.ml[237,8159+26])
                                              Texp_ident "Ppxlib__!.Import.Result.handle_error"
                                            [
                                              <arg>
                                                Nolabel
                                              <arg>
                                                Labelled "f"
                                                expression (src/extension.ml[237,8159+30]..src/extension.ml[237,8159+72])
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (src/extension.ml[237,8159+35]..src/extension.ml[237,8159+43])
                                                        Tpat_tuple
                                                        [
                                                          pattern (src/extension.ml[237,8159+36]..src/extension.ml[237,8159+39])
                                                            Tpat_var "err/4076"
                                                          pattern (src/extension.ml[237,8159+41]..src/extension.ml[237,8159+42])
                                                            Tpat_any
                                                        ]
                                                      expression (src/extension.ml[237,8159+47]..src/extension.ml[237,8159+71])
                                                        Texp_apply
                                                        expression (src/extension.ml[237,8159+47]..src/extension.ml[237,8159+67])
                                                          Texp_ident "Ppxlib__!.Location.Error.raise"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/extension.ml[237,8159+68]..src/extension.ml[237,8159+71])
                                                              Texp_ident "err/4076"
                                                        ]
                                                  ]
                                            ]
                                      ]
                                ]
                          ]
                    ]
              ]
          ]
  structure_item (src/extension.ml[240,8237+0]..src/extension.ml[243,8352+4])
    Tstr_module
    M/4124
      module_expr (src/extension.ml[240,8237+11]..src/extension.ml[243,8352+4])
        Tmod_apply
        module_expr (src/extension.ml[240,8237+11]..src/extension.ml[240,8237+15])
          Tmod_ident "Make/4031"
        module_expr (src/extension.ml[240,8237+17]..src/extension.ml[243,8352+3])
          Tmod_structure
          [
            structure_item (src/extension.ml[241,8261+2]..src/extension.ml[242,8275+76])
              Tstr_type Rec
              [
                type_declaration t/4079 (src/extension.ml[241,8261+2]..src/extension.ml[242,8275+76])
                  ptype_params =
                    [
                      core_type (src/extension.ml[241,8261+7]..src/extension.ml[241,8261+9])
                        Ttyp_var a
                    ]
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ttype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (src/extension.ml[242,8275+4]..src/extension.ml[242,8275+76])
                        Ttyp_arrow
                        Labelled "ctxt"
                        core_type (src/extension.ml[242,8275+9]..src/extension.ml[242,8275+38])
                          Ttyp_constr "Ppxlib__!.Expansion_context.Extension.t"
                          []
                        core_type (src/extension.ml[242,8275+42]..src/extension.ml[242,8275+76])
                          Ttyp_arrow
                          Labelled "arg"
                          core_type (src/extension.ml[242,8275+46]..src/extension.ml[242,8275+70])
                            Ttyp_constr "option/12!"
                            [
                              core_type (src/extension.ml[242,8275+46]..src/extension.ml[242,8275+63])
                                Ttyp_constr "Ppxlib__!.Loc.t"
                                [
                                  core_type (src/extension.ml[242,8275+46]..src/extension.ml[242,8275+57])
                                    Ttyp_constr "Ppxlib__!.Longident.t"
                                    []
                                ]
                            ]
                          core_type (src/extension.ml[242,8275+74]..src/extension.ml[242,8275+76])
                            Ttyp_var a
              ]
          ]
  structure_item (src/extension.ml[245,8358+0]..src/extension.ml[245,8358+58])
    Tstr_type Rec
    [
      type_declaration expander_result/4125 (src/extension.ml[245,8358+0]..src/extension.ml[245,8358+58])
        ptype_params =
          [
            core_type (src/extension.ml[245,8358+5]..src/extension.ml[245,8358+7])
              Ttyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (src/extension.ml[245,8358+26]..src/extension.ml[245,8358+38])
                Simple/4126
                [
                  core_type (src/extension.ml[245,8358+36]..src/extension.ml[245,8358+38])
                    Ttyp_var a
                ]
                None
              (src/extension.ml[245,8358+39]..src/extension.ml[245,8358+58])
                Inline/4127
                [
                  core_type (src/extension.ml[245,8358+51]..src/extension.ml[245,8358+58])
                    Ttyp_constr "list/11!"
                    [
                      core_type (src/extension.ml[245,8358+51]..src/extension.ml[245,8358+53])
                        Ttyp_var a
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (src/extension.ml[247,8418+0]..src/extension.ml[281,9692+3])
    Tstr_module
    For_context/4173
      module_expr (src/extension.ml[247,8418+21]..src/extension.ml[281,9692+3])
        Tmod_structure
        [
          structure_item (src/extension.ml[248,8446+2]..src/extension.ml[248,8446+42])
            Tstr_type Rec
            [
              type_declaration t/4128 (src/extension.ml[248,8446+2]..src/extension.ml[248,8446+42])
                ptype_params =
                  [
                    core_type (src/extension.ml[248,8446+7]..src/extension.ml[248,8446+9])
                      Ttyp_var a
                  ]
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/extension.ml[248,8446+14]..src/extension.ml[248,8446+42])
                      Ttyp_constr "M/4124.t"
                      [
                        core_type (src/extension.ml[248,8446+15]..src/extension.ml[248,8446+17])
                          Ttyp_var a
                        core_type (src/extension.ml[248,8446+19]..src/extension.ml[248,8446+37])
                          Ttyp_constr "expander_result/4125"
                          [
                            core_type (src/extension.ml[248,8446+19]..src/extension.ml[248,8446+21])
                              Ttyp_var a
                          ]
                      ]
            ]
          structure_item (src/extension.ml[250,8490+2]..src/extension.ml[261,8914+51])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[250,8490+6]..src/extension.ml[250,8490+17])
                  Tpat_var "convert_res/4129"
                expression (src/extension.ml[250,8490+18]..src/extension.ml[261,8914+51]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/extension.ml[250,8490+18]..src/extension.ml[250,8490+20])
                        Tpat_var "ts/4131"
                      expression (src/extension.ml[250,8490+21]..src/extension.ml[261,8914+51]) ghost
                        Texp_function
                        Labelled "ctxt"
                        [
                          <case>
                            pattern (src/extension.ml[250,8490+22]..src/extension.ml[250,8490+26])
                              Tpat_var "ctxt/4132"
                            expression (src/extension.ml[250,8490+27]..src/extension.ml[261,8914+51]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/extension.ml[250,8490+27]..src/extension.ml[250,8490+30])
                                    Tpat_var "ext/4133"
                                  expression (src/extension.ml[251,8523+4]..src/extension.ml[261,8914+51])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/extension.ml[251,8523+8]..src/extension.ml[251,8523+11])
                                          Tpat_var "loc/4134"
                                        expression (src/extension.ml[251,8523+14]..src/extension.ml[251,8523+66])
                                          Texp_apply
                                          expression (src/extension.ml[251,8523+14]..src/extension.ml[251,8523+61])
                                            Texp_ident "Ppxlib__!.Expansion_context.Extension.extension_point_loc"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/extension.ml[251,8523+62]..src/extension.ml[251,8523+66])
                                                Texp_ident "ctxt/4132"
                                          ]
                                    ]
                                    expression (src/extension.ml[252,8593+4]..src/extension.ml[261,8914+51])
                                      Texp_open Fresh
                                      module_expr (src/extension.ml[252,8593+13]..src/extension.ml[252,8593+19])
                                        Tmod_ident "Ppxlib__!.Import.Result"
                                      expression (src/extension.ml[253,8616+4]..src/extension.ml[261,8914+51])
                                        Texp_apply
                                        expression (src/extension.ml[253,8616+18]..src/extension.ml[253,8616+21])
                                          Texp_ident "Ppxlib__!.Import.Result.>>="
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[253,8616+4]..src/extension.ml[253,8616+17])
                                              Texp_apply
                                              expression (src/extension.ml[253,8616+4]..src/extension.ml[253,8616+10])
                                                Texp_ident "M/4124.find"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[253,8616+11]..src/extension.ml[253,8616+13])
                                                    Texp_ident "ts/4131"
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[253,8616+14]..src/extension.ml[253,8616+17])
                                                    Texp_ident "ext/4133"
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[253,8616+22]..src/extension.ml[261,8914+51])
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/extension.ml[253,8616+26]..src/extension.ml[253,8616+31])
                                                    Tpat_var "found/4136"
                                                  expression (src/extension.ml[254,8651+4]..src/extension.ml[261,8914+51])
                                                    Texp_match
                                                    expression (src/extension.ml[254,8651+10]..src/extension.ml[254,8651+15])
                                                      Texp_ident "found/4136"
                                                    [
                                                      <case>
                                                        pattern (src/extension.ml[255,8672+6]..src/extension.ml[255,8672+10])
                                                          Tpat_value
                                                          pattern (src/extension.ml[255,8672+6]..src/extension.ml[255,8672+10])
                                                            Tpat_construct "None"
                                                            []
                                                        expression (src/extension.ml[255,8672+14]..src/extension.ml[255,8672+21])
                                                          Texp_construct "Ok"
                                                          [
                                                            expression (src/extension.ml[255,8672+17]..src/extension.ml[255,8672+21])
                                                              Texp_construct "None"
                                                              []
                                                          ]
                                                      <case>
                                                        pattern (src/extension.ml[256,8694+6]..src/extension.ml[256,8694+64])
                                                          Tpat_value
                                                          pattern (src/extension.ml[256,8694+6]..src/extension.ml[256,8694+64])
                                                            Tpat_construct "Some"
                                                            [
                                                              pattern (src/extension.ml[256,8694+11]..src/extension.ml[256,8694+64])
                                                                Tpat_tuple
                                                                [
                                                                  pattern (src/extension.ml[256,8694+12]..src/extension.ml[256,8694+58])
                                                                    Tpat_record
                                                                    [
                                                                      "payload"
                                                                        pattern (src/extension.ml[256,8694+24]..src/extension.ml[256,8694+53])
                                                                          Tpat_construct "M.Payload_parser"
                                                                          [
                                                                            pattern (src/extension.ml[256,8694+42]..src/extension.ml[256,8694+49])
                                                                              Tpat_var "pattern/4138"
                                                                            pattern (src/extension.ml[256,8694+51]..src/extension.ml[256,8694+52])
                                                                              Tpat_var "f/4139"
                                                                          ]
                                                                    ]
                                                                  pattern (src/extension.ml[256,8694+60]..src/extension.ml[256,8694+63])
                                                                    Tpat_var "arg/4140"
                                                                ]
                                                            ]
                                                        expression (src/extension.ml[256,8694+68]..src/extension.ml[261,8914+51])
                                                          Texp_apply
                                                          expression (src/extension.ml[258,8831+8]..src/extension.ml[258,8831+11])
                                                            Texp_ident "Ppxlib__!.Import.Result.>>|"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/extension.ml[257,8764+8]..src/extension.ml[257,8764+66])
                                                                Texp_apply
                                                                expression (src/extension.ml[257,8764+8]..src/extension.ml[257,8764+29])
                                                                  Texp_ident "Ppxlib__!.Ast_pattern.parse_res"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/extension.ml[257,8764+30]..src/extension.ml[257,8764+37])
                                                                      Texp_ident "pattern/4138"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/extension.ml[257,8764+38]..src/extension.ml[257,8764+41])
                                                                      Texp_ident "loc/4134"
                                                                  <arg>
                                                                    Optional "on_error"
                                                                    expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                                                      Texp_construct "None"
                                                                      []
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/extension.ml[257,8764+42]..src/extension.ml[257,8764+51])
                                                                      Texp_apply
                                                                      expression (src/extension.ml[257,8764+43]..src/extension.ml[257,8764+46])
                                                                        Texp_ident "Stdlib!.snd"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/extension.ml[257,8764+47]..src/extension.ml[257,8764+50])
                                                                            Texp_ident "ext/4133"
                                                                      ]
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/extension.ml[257,8764+52]..src/extension.ml[257,8764+66])
                                                                      Texp_apply
                                                                      expression (src/extension.ml[257,8764+53]..src/extension.ml[257,8764+54])
                                                                        Texp_ident "f/4139"
                                                                      [
                                                                        <arg>
                                                                          Labelled "ctxt"
                                                                          expression (src/extension.ml[257,8764+56]..src/extension.ml[257,8764+60])
                                                                            Texp_ident "ctxt/4132"
                                                                        <arg>
                                                                          Labelled "arg"
                                                                          expression (src/extension.ml[257,8764+62]..src/extension.ml[257,8764+65])
                                                                            Texp_ident "arg/4140"
                                                                      ]
                                                                ]
                                                            <arg>
                                                              Nolabel
                                                              expression (src/extension.ml[258,8831+12]..src/extension.ml[261,8914+50])
                                                                Texp_function
                                                                Nolabel
                                                                [
                                                                  <case>
                                                                    pattern (src/extension.ml[258,8831+16]..src/extension.ml[258,8831+23])
                                                                      Tpat_var "payload/4141"
                                                                    expression (src/extension.ml[259,8858+8]..src/extension.ml[261,8914+50])
                                                                      Texp_match
                                                                      expression (src/extension.ml[259,8858+14]..src/extension.ml[259,8858+21])
                                                                        Texp_ident "payload/4141"
                                                                      [
                                                                        <case>
                                                                          pattern (src/extension.ml[260,8885+10]..src/extension.ml[260,8885+18])
                                                                            Tpat_value
                                                                            pattern (src/extension.ml[260,8885+10]..src/extension.ml[260,8885+18])
                                                                              Tpat_construct "Simple"
                                                                              [
                                                                                pattern (src/extension.ml[260,8885+17]..src/extension.ml[260,8885+18])
                                                                                  Tpat_var "x/4142"
                                                                              ]
                                                                          expression (src/extension.ml[260,8885+22]..src/extension.ml[260,8885+28])
                                                                            Texp_construct "Some"
                                                                            [
                                                                              expression (src/extension.ml[260,8885+27]..src/extension.ml[260,8885+28])
                                                                                Texp_ident "x/4142"
                                                                            ]
                                                                        <case>
                                                                          pattern (src/extension.ml[261,8914+10]..src/extension.ml[261,8914+18])
                                                                            Tpat_value
                                                                            pattern (src/extension.ml[261,8914+10]..src/extension.ml[261,8914+18])
                                                                              Tpat_construct "Inline"
                                                                              [
                                                                                pattern (src/extension.ml[261,8914+17]..src/extension.ml[261,8914+18])
                                                                                  Tpat_any
                                                                              ]
                                                                          expression (src/extension.ml[261,8914+22]..src/extension.ml[261,8914+50])
                                                                            Texp_apply
                                                                            expression (src/extension.ml[261,8914+22]..src/extension.ml[261,8914+30])
                                                                              Texp_ident "Stdlib!.failwith"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/extension.ml[261,8914+31]..src/extension.ml[261,8914+50])
                                                                                  Texp_constant Const_string("Extension.convert",(src/extension.ml[261,8914+32]..src/extension.ml[261,8914+49]),None)
                                                                            ]
                                                                      ]
                                                                      []
                                                                ]
                                                          ]
                                                    ]
                                                    []
                                              ]
                                        ]
                              ]
                        ]
                  ]
            ]
          structure_item (src/extension.ml[263,8967+2]..src/extension.ml[265,9025+72])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[263,8967+6]..src/extension.ml[263,8967+13])
                  Tpat_var "convert/4144"
                expression (src/extension.ml[263,8967+14]..src/extension.ml[265,9025+72]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/extension.ml[263,8967+14]..src/extension.ml[263,8967+16])
                        Tpat_var "ts/4146"
                      expression (src/extension.ml[263,8967+17]..src/extension.ml[265,9025+72]) ghost
                        Texp_function
                        Labelled "ctxt"
                        [
                          <case>
                            pattern (src/extension.ml[263,8967+18]..src/extension.ml[263,8967+22])
                              Tpat_var "ctxt/4147"
                            expression (src/extension.ml[263,8967+23]..src/extension.ml[265,9025+72]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/extension.ml[263,8967+23]..src/extension.ml[263,8967+26])
                                    Tpat_var "ext/4148"
                                  expression (src/extension.ml[264,8996+4]..src/extension.ml[265,9025+72])
                                    Texp_apply
                                    expression (src/extension.ml[265,9025+4]..src/extension.ml[265,9025+6])
                                      Texp_ident "Stdlib!.|>"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/extension.ml[264,8996+4]..src/extension.ml[264,8996+28])
                                          Texp_apply
                                          expression (src/extension.ml[264,8996+4]..src/extension.ml[264,8996+15])
                                            Texp_ident "convert_res/4129"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/extension.ml[264,8996+16]..src/extension.ml[264,8996+18])
                                                Texp_ident "ts/4146"
                                            <arg>
                                              Labelled "ctxt"
                                              expression (src/extension.ml[264,8996+20]..src/extension.ml[264,8996+24])
                                                Texp_ident "ctxt/4147"
                                            <arg>
                                              Nolabel
                                              expression (src/extension.ml[264,8996+25]..src/extension.ml[264,8996+28])
                                                Texp_ident "ext/4148"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/extension.ml[265,9025+7]..src/extension.ml[265,9025+72])
                                          Texp_apply
                                          expression (src/extension.ml[265,9025+7]..src/extension.ml[265,9025+26])
                                            Texp_ident "Ppxlib__!.Import.Result.handle_error"
                                          [
                                            <arg>
                                              Nolabel
                                            <arg>
                                              Labelled "f"
                                              expression (src/extension.ml[265,9025+30]..src/extension.ml[265,9025+72])
                                                Texp_function
                                                Nolabel
                                                [
                                                  <case>
                                                    pattern (src/extension.ml[265,9025+35]..src/extension.ml[265,9025+43])
                                                      Tpat_tuple
                                                      [
                                                        pattern (src/extension.ml[265,9025+36]..src/extension.ml[265,9025+39])
                                                          Tpat_var "err/4149"
                                                        pattern (src/extension.ml[265,9025+41]..src/extension.ml[265,9025+42])
                                                          Tpat_any
                                                      ]
                                                    expression (src/extension.ml[265,9025+47]..src/extension.ml[265,9025+71])
                                                      Texp_apply
                                                      expression (src/extension.ml[265,9025+47]..src/extension.ml[265,9025+67])
                                                        Texp_ident "Ppxlib__!.Location.Error.raise"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/extension.ml[265,9025+68]..src/extension.ml[265,9025+71])
                                                            Texp_ident "err/4149"
                                                      ]
                                                ]
                                          ]
                                    ]
                              ]
                        ]
                  ]
            ]
          structure_item (src/extension.ml[267,9099+2]..src/extension.ml[276,9474+71])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[267,9099+6]..src/extension.ml[267,9099+24])
                  Tpat_var "convert_inline_res/4151"
                expression (src/extension.ml[267,9099+25]..src/extension.ml[276,9474+71]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/extension.ml[267,9099+25]..src/extension.ml[267,9099+27])
                        Tpat_var "ts/4153"
                      expression (src/extension.ml[267,9099+28]..src/extension.ml[276,9474+71]) ghost
                        Texp_function
                        Labelled "ctxt"
                        [
                          <case>
                            pattern (src/extension.ml[267,9099+29]..src/extension.ml[267,9099+33])
                              Tpat_var "ctxt/4154"
                            expression (src/extension.ml[267,9099+34]..src/extension.ml[276,9474+71]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/extension.ml[267,9099+34]..src/extension.ml[267,9099+37])
                                    Tpat_var "ext/4155"
                                  expression (src/extension.ml[268,9139+4]..src/extension.ml[276,9474+71])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/extension.ml[268,9139+8]..src/extension.ml[268,9139+11])
                                          Tpat_var "loc/4156"
                                        expression (src/extension.ml[268,9139+14]..src/extension.ml[268,9139+66])
                                          Texp_apply
                                          expression (src/extension.ml[268,9139+14]..src/extension.ml[268,9139+61])
                                            Texp_ident "Ppxlib__!.Expansion_context.Extension.extension_point_loc"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/extension.ml[268,9139+62]..src/extension.ml[268,9139+66])
                                                Texp_ident "ctxt/4154"
                                          ]
                                    ]
                                    expression (src/extension.ml[269,9209+4]..src/extension.ml[276,9474+71])
                                      Texp_open Fresh
                                      module_expr (src/extension.ml[269,9209+13]..src/extension.ml[269,9209+19])
                                        Tmod_ident "Ppxlib__!.Import.Result"
                                      expression (src/extension.ml[270,9232+4]..src/extension.ml[276,9474+71])
                                        Texp_apply
                                        expression (src/extension.ml[270,9232+18]..src/extension.ml[270,9232+21])
                                          Texp_ident "Ppxlib__!.Import.Result.>>="
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[270,9232+4]..src/extension.ml[270,9232+17])
                                              Texp_apply
                                              expression (src/extension.ml[270,9232+4]..src/extension.ml[270,9232+10])
                                                Texp_ident "M/4124.find"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[270,9232+11]..src/extension.ml[270,9232+13])
                                                    Texp_ident "ts/4153"
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[270,9232+14]..src/extension.ml[270,9232+17])
                                                    Texp_ident "ext/4155"
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[270,9232+22]..src/extension.ml[276,9474+71])
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/extension.ml[270,9232+26]..src/extension.ml[270,9232+31])
                                                    Tpat_var "found/4157"
                                                  expression (src/extension.ml[271,9267+4]..src/extension.ml[276,9474+71])
                                                    Texp_match
                                                    expression (src/extension.ml[271,9267+10]..src/extension.ml[271,9267+15])
                                                      Texp_ident "found/4157"
                                                    [
                                                      <case>
                                                        pattern (src/extension.ml[272,9288+6]..src/extension.ml[272,9288+10])
                                                          Tpat_value
                                                          pattern (src/extension.ml[272,9288+6]..src/extension.ml[272,9288+10])
                                                            Tpat_construct "None"
                                                            []
                                                        expression (src/extension.ml[272,9288+14]..src/extension.ml[272,9288+21])
                                                          Texp_construct "Ok"
                                                          [
                                                            expression (src/extension.ml[272,9288+17]..src/extension.ml[272,9288+21])
                                                              Texp_construct "None"
                                                              []
                                                          ]
                                                      <case>
                                                        pattern (src/extension.ml[273,9310+6]..src/extension.ml[273,9310+64])
                                                          Tpat_value
                                                          pattern (src/extension.ml[273,9310+6]..src/extension.ml[273,9310+64])
                                                            Tpat_construct "Some"
                                                            [
                                                              pattern (src/extension.ml[273,9310+11]..src/extension.ml[273,9310+64])
                                                                Tpat_tuple
                                                                [
                                                                  pattern (src/extension.ml[273,9310+12]..src/extension.ml[273,9310+58])
                                                                    Tpat_record
                                                                    [
                                                                      "payload"
                                                                        pattern (src/extension.ml[273,9310+24]..src/extension.ml[273,9310+53])
                                                                          Tpat_construct "M.Payload_parser"
                                                                          [
                                                                            pattern (src/extension.ml[273,9310+42]..src/extension.ml[273,9310+49])
                                                                              Tpat_var "pattern/4159"
                                                                            pattern (src/extension.ml[273,9310+51]..src/extension.ml[273,9310+52])
                                                                              Tpat_var "f/4160"
                                                                          ]
                                                                    ]
                                                                  pattern (src/extension.ml[273,9310+60]..src/extension.ml[273,9310+63])
                                                                    Tpat_var "arg/4161"
                                                                ]
                                                            ]
                                                        expression (src/extension.ml[273,9310+68]..src/extension.ml[276,9474+71])
                                                          Texp_apply
                                                          expression (src/extension.ml[275,9447+8]..src/extension.ml[275,9447+11])
                                                            Texp_ident "Ppxlib__!.Import.Result.>>|"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/extension.ml[274,9380+8]..src/extension.ml[274,9380+66])
                                                                Texp_apply
                                                                expression (src/extension.ml[274,9380+8]..src/extension.ml[274,9380+29])
                                                                  Texp_ident "Ppxlib__!.Ast_pattern.parse_res"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/extension.ml[274,9380+30]..src/extension.ml[274,9380+37])
                                                                      Texp_ident "pattern/4159"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/extension.ml[274,9380+38]..src/extension.ml[274,9380+41])
                                                                      Texp_ident "loc/4156"
                                                                  <arg>
                                                                    Optional "on_error"
                                                                    expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                                                      Texp_construct "None"
                                                                      []
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/extension.ml[274,9380+42]..src/extension.ml[274,9380+51])
                                                                      Texp_apply
                                                                      expression (src/extension.ml[274,9380+43]..src/extension.ml[274,9380+46])
                                                                        Texp_ident "Stdlib!.snd"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/extension.ml[274,9380+47]..src/extension.ml[274,9380+50])
                                                                            Texp_ident "ext/4155"
                                                                      ]
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/extension.ml[274,9380+52]..src/extension.ml[274,9380+66])
                                                                      Texp_apply
                                                                      expression (src/extension.ml[274,9380+53]..src/extension.ml[274,9380+54])
                                                                        Texp_ident "f/4160"
                                                                      [
                                                                        <arg>
                                                                          Labelled "ctxt"
                                                                          expression (src/extension.ml[274,9380+56]..src/extension.ml[274,9380+60])
                                                                            Texp_ident "ctxt/4154"
                                                                        <arg>
                                                                          Labelled "arg"
                                                                          expression (src/extension.ml[274,9380+62]..src/extension.ml[274,9380+65])
                                                                            Texp_ident "arg/4161"
                                                                      ]
                                                                ]
                                                            <arg>
                                                              Nolabel
                                                              expression (src/extension.ml[275,9447+12]..src/extension.ml[276,9474+70])
                                                                Texp_function
                                                                Nolabel
                                                                [
                                                                  <case>
                                                                    pattern (src/extension.ml[275,9447+16]..src/extension.ml[275,9447+23])
                                                                      Tpat_var "payload/4162"
                                                                    expression (src/extension.ml[276,9474+8]..src/extension.ml[276,9474+70])
                                                                      Texp_match
                                                                      expression (src/extension.ml[276,9474+14]..src/extension.ml[276,9474+21])
                                                                        Texp_ident "payload/4162"
                                                                      [
                                                                        <case>
                                                                          pattern (src/extension.ml[276,9474+27]..src/extension.ml[276,9474+35])
                                                                            Tpat_value
                                                                            pattern (src/extension.ml[276,9474+27]..src/extension.ml[276,9474+35])
                                                                              Tpat_construct "Simple"
                                                                              [
                                                                                pattern (src/extension.ml[276,9474+34]..src/extension.ml[276,9474+35])
                                                                                  Tpat_var "x/4163"
                                                                              ]
                                                                          expression (src/extension.ml[276,9474+39]..src/extension.ml[276,9474+49])
                                                                            Texp_construct "Some"
                                                                            [
                                                                              expression (src/extension.ml[276,9474+44]..src/extension.ml[276,9474+49])
                                                                                Texp_construct "::"
                                                                                [
                                                                                  expression (src/extension.ml[276,9474+46]..src/extension.ml[276,9474+47])
                                                                                    Texp_ident "x/4163"
                                                                                  expression (src/extension.ml[276,9474+48]..src/extension.ml[276,9474+49]) ghost
                                                                                    Texp_construct "[]"
                                                                                    []
                                                                                ]
                                                                            ]
                                                                        <case>
                                                                          pattern (src/extension.ml[276,9474+52]..src/extension.ml[276,9474+60])
                                                                            Tpat_value
                                                                            pattern (src/extension.ml[276,9474+52]..src/extension.ml[276,9474+60])
                                                                              Tpat_construct "Inline"
                                                                              [
                                                                                pattern (src/extension.ml[276,9474+59]..src/extension.ml[276,9474+60])
                                                                                  Tpat_var "l/4164"
                                                                              ]
                                                                          expression (src/extension.ml[276,9474+64]..src/extension.ml[276,9474+70])
                                                                            Texp_construct "Some"
                                                                            [
                                                                              expression (src/extension.ml[276,9474+69]..src/extension.ml[276,9474+70])
                                                                                Texp_ident "l/4164"
                                                                            ]
                                                                      ]
                                                                      []
                                                                ]
                                                          ]
                                                    ]
                                                    []
                                              ]
                                        ]
                              ]
                        ]
                  ]
            ]
          structure_item (src/extension.ml[278,9547+2]..src/extension.ml[280,9619+72])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[278,9547+6]..src/extension.ml[278,9547+20])
                  Tpat_var "convert_inline/4166"
                expression (src/extension.ml[278,9547+21]..src/extension.ml[280,9619+72]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/extension.ml[278,9547+21]..src/extension.ml[278,9547+23])
                        Tpat_var "ts/4168"
                      expression (src/extension.ml[278,9547+24]..src/extension.ml[280,9619+72]) ghost
                        Texp_function
                        Labelled "ctxt"
                        [
                          <case>
                            pattern (src/extension.ml[278,9547+25]..src/extension.ml[278,9547+29])
                              Tpat_var "ctxt/4169"
                            expression (src/extension.ml[278,9547+30]..src/extension.ml[280,9619+72]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/extension.ml[278,9547+30]..src/extension.ml[278,9547+33])
                                    Tpat_var "ext/4170"
                                  expression (src/extension.ml[279,9583+4]..src/extension.ml[280,9619+72])
                                    Texp_apply
                                    expression (src/extension.ml[280,9619+4]..src/extension.ml[280,9619+6])
                                      Texp_ident "Stdlib!.|>"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/extension.ml[279,9583+4]..src/extension.ml[279,9583+35])
                                          Texp_apply
                                          expression (src/extension.ml[279,9583+4]..src/extension.ml[279,9583+22])
                                            Texp_ident "convert_inline_res/4151"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/extension.ml[279,9583+23]..src/extension.ml[279,9583+25])
                                                Texp_ident "ts/4168"
                                            <arg>
                                              Labelled "ctxt"
                                              expression (src/extension.ml[279,9583+27]..src/extension.ml[279,9583+31])
                                                Texp_ident "ctxt/4169"
                                            <arg>
                                              Nolabel
                                              expression (src/extension.ml[279,9583+32]..src/extension.ml[279,9583+35])
                                                Texp_ident "ext/4170"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/extension.ml[280,9619+7]..src/extension.ml[280,9619+72])
                                          Texp_apply
                                          expression (src/extension.ml[280,9619+7]..src/extension.ml[280,9619+26])
                                            Texp_ident "Ppxlib__!.Import.Result.handle_error"
                                          [
                                            <arg>
                                              Nolabel
                                            <arg>
                                              Labelled "f"
                                              expression (src/extension.ml[280,9619+30]..src/extension.ml[280,9619+72])
                                                Texp_function
                                                Nolabel
                                                [
                                                  <case>
                                                    pattern (src/extension.ml[280,9619+35]..src/extension.ml[280,9619+43])
                                                      Tpat_tuple
                                                      [
                                                        pattern (src/extension.ml[280,9619+36]..src/extension.ml[280,9619+39])
                                                          Tpat_var "err/4171"
                                                        pattern (src/extension.ml[280,9619+41]..src/extension.ml[280,9619+42])
                                                          Tpat_any
                                                      ]
                                                    expression (src/extension.ml[280,9619+47]..src/extension.ml[280,9619+71])
                                                      Texp_apply
                                                      expression (src/extension.ml[280,9619+47]..src/extension.ml[280,9619+67])
                                                        Texp_ident "Ppxlib__!.Location.Error.raise"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/extension.ml[280,9619+68]..src/extension.ml[280,9619+71])
                                                            Texp_ident "err/4171"
                                                      ]
                                                ]
                                          ]
                                    ]
                              ]
                        ]
                  ]
            ]
        ]
  structure_item (src/extension.ml[283,9697+0]..src/extension.ml[283,9697+33])
    Tstr_type Rec
    [
      type_declaration t/4174 (src/extension.ml[283,9697+0]..src/extension.ml[283,9697+33])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (src/extension.ml[283,9697+9]..src/extension.ml[283,9697+33])
                T/4175
                [
                  core_type (src/extension.ml[283,9697+13]..src/extension.ml[283,9697+28])
                    Ttyp_constr "For_context/4173.t"
                    [
                      core_type (src/extension.ml[283,9697+13]..src/extension.ml[283,9697+14])
                        Ttyp_any
                    ]
                ]
                Some
                  core_type (src/extension.ml[283,9697+32]..src/extension.ml[283,9697+33])
                    Ttyp_constr "t/4174"
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (src/extension.ml[285,9732+0]..src/extension.ml[294,10054+30])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/extension.ml[285,9732+4]..src/extension.ml[285,9732+28])
          Tpat_extra_constraint
          core_type (src/extension.ml[285,9732+4]..src/extension.ml[294,10054+30]) ghost
            Ttyp_poly 'a
            core_type (src/extension.ml[285,9732+39]..src/extension.ml[285,9732+73])
              Ttyp_arrow
              Labelled "func"
              core_type (src/extension.ml[285,9732+44]..src/extension.ml[285,9732+50])
                Ttyp_constr "string/17!"
                []
              core_type (src/extension.ml[285,9732+54]..src/extension.ml[285,9732+73])
                Ttyp_arrow
                Nolabel
                core_type (src/extension.ml[285,9732+54]..src/extension.ml[285,9732+65])
                  Ttyp_constr "Context/3201.t"
                  [
                    core_type (src/extension.ml[285,9732+54]..src/extension.ml[285,9732+55])
                      Ttyp_var a
                  ]
                core_type (src/extension.ml[285,9732+69]..src/extension.ml[285,9732+73])
                  Ttyp_constr "unit/6!"
                  []
          pattern (src/extension.ml[285,9732+4]..src/extension.ml[285,9732+28])
            Tpat_var "check_context_for_inline/4176"
        expression (src/extension.ml[285,9732+4]..src/extension.ml[294,10054+30])
          Texp_newtype "a"
            Texp_constraint
            core_type (src/extension.ml[285,9732+39]..src/extension.ml[285,9732+73])
              Ttyp_arrow
              Labelled "func"
              core_type (src/extension.ml[285,9732+44]..src/extension.ml[285,9732+50])
                Ttyp_constr "string/17!"
                []
              core_type (src/extension.ml[285,9732+54]..src/extension.ml[285,9732+73])
                Ttyp_arrow
                Nolabel
                core_type (src/extension.ml[285,9732+54]..src/extension.ml[285,9732+65])
                  Ttyp_constr "Context/3201.t"
                  [
                    core_type (src/extension.ml[285,9732+54]..src/extension.ml[285,9732+55])
                      Ttyp_constr "a/4177"
                      []
                  ]
                core_type (src/extension.ml[285,9732+69]..src/extension.ml[285,9732+73])
                  Ttyp_constr "unit/6!"
                  []
              Texp_function
              Labelled "func"
              [
                <case>
                  pattern (src/extension.ml[286,9808+6]..src/extension.ml[286,9808+10])
                    Tpat_var "func/4178"
                  expression (src/extension.ml[286,9808+11]..src/extension.ml[294,10054+30]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[286,9808+11]..src/extension.ml[286,9808+14])
                          Tpat_var "ctx/4179"
                        expression (src/extension.ml[287,9826+2]..src/extension.ml[294,10054+30])
                          Texp_match
                          expression (src/extension.ml[287,9826+8]..src/extension.ml[287,9826+11])
                            Texp_ident "ctx/4179"
                          [
                            <case>
                              pattern (src/extension.ml[288,9843+4]..src/extension.ml[288,9843+23])
                                Tpat_value
                                pattern (src/extension.ml[288,9843+4]..src/extension.ml[288,9843+23])
                                  Tpat_construct "Context.Class_field"
                                  []
                              expression (src/extension.ml[288,9843+27]..src/extension.ml[288,9843+29])
                                Texp_construct "()"
                                []
                            <case>
                              pattern (src/extension.ml[289,9873+4]..src/extension.ml[289,9873+28])
                                Tpat_value
                                pattern (src/extension.ml[289,9873+4]..src/extension.ml[289,9873+28])
                                  Tpat_construct "Context.Class_type_field"
                                  []
                              expression (src/extension.ml[289,9873+32]..src/extension.ml[289,9873+34])
                                Texp_construct "()"
                                []
                            <case>
                              pattern (src/extension.ml[290,9908+4]..src/extension.ml[290,9908+26])
                                Tpat_value
                                pattern (src/extension.ml[290,9908+4]..src/extension.ml[290,9908+26])
                                  Tpat_construct "Context.Signature_item"
                                  []
                              expression (src/extension.ml[290,9908+30]..src/extension.ml[290,9908+32])
                                Texp_construct "()"
                                []
                            <case>
                              pattern (src/extension.ml[291,9941+4]..src/extension.ml[291,9941+26])
                                Tpat_value
                                pattern (src/extension.ml[291,9941+4]..src/extension.ml[291,9941+26])
                                  Tpat_construct "Context.Structure_item"
                                  []
                              expression (src/extension.ml[291,9941+30]..src/extension.ml[291,9941+32])
                                Texp_construct "()"
                                []
                            <case>
                              pattern (src/extension.ml[292,9974+4]..src/extension.ml[292,9974+11])
                                Tpat_value
                                pattern (src/extension.ml[292,9974+4]..src/extension.ml[292,9974+11])
                                  Tpat_var "context/4180"
                              expression (src/extension.ml[293,9989+6]..src/extension.ml[294,10054+30])
                                Texp_apply
                                expression (src/extension.ml[293,9989+6]..src/extension.ml[293,9989+21])
                                  Texp_ident "Stdlib!.Printf.ksprintf"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/extension.ml[293,9989+22]..src/extension.ml[293,9989+33])
                                      Texp_ident "Stdlib!.invalid_arg"
                                  <arg>
                                    Nolabel
                                    expression (src/extension.ml[293,9989+34]..src/extension.ml[293,9989+59])
                                      Texp_construct "CamlinternalFormatBasics.Format"
                                      [
                                        expression (src/extension.ml[293,9989+34]..src/extension.ml[293,9989+59]) ghost
                                          Texp_construct "CamlinternalFormatBasics.String"
                                          [
                                            expression (src/extension.ml[293,9989+34]..src/extension.ml[293,9989+59]) ghost
                                              Texp_construct "CamlinternalFormatBasics.No_padding"
                                              []
                                            expression (src/extension.ml[293,9989+34]..src/extension.ml[293,9989+59]) ghost
                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                              [
                                                expression (src/extension.ml[293,9989+34]..src/extension.ml[293,9989+59]) ghost
                                                  Texp_constant Const_string(": ",(src/extension.ml[293,9989+34]..src/extension.ml[293,9989+59]) ghost,None)
                                                expression (src/extension.ml[293,9989+34]..src/extension.ml[293,9989+59]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.String"
                                                  [
                                                    expression (src/extension.ml[293,9989+34]..src/extension.ml[293,9989+59]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                                      []
                                                    expression (src/extension.ml[293,9989+34]..src/extension.ml[293,9989+59]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                                      [
                                                        expression (src/extension.ml[293,9989+34]..src/extension.ml[293,9989+59]) ghost
                                                          Texp_constant Const_string(" can't be inlined",(src/extension.ml[293,9989+34]..src/extension.ml[293,9989+59]) ghost,None)
                                                        expression (src/extension.ml[293,9989+34]..src/extension.ml[293,9989+59]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                          []
                                                      ]
                                                  ]
                                              ]
                                          ]
                                        expression (src/extension.ml[293,9989+34]..src/extension.ml[293,9989+59]) ghost
                                          Texp_constant Const_string("%s: %s can't be inlined",(src/extension.ml[293,9989+34]..src/extension.ml[293,9989+59]) ghost,None)
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (src/extension.ml[293,9989+60]..src/extension.ml[293,9989+64])
                                      Texp_ident "func/4178"
                                  <arg>
                                    Nolabel
                                    expression (src/extension.ml[294,10054+8]..src/extension.ml[294,10054+30])
                                      Texp_apply
                                      expression (src/extension.ml[294,10054+9]..src/extension.ml[294,10054+21])
                                        Texp_ident "Context/3201.desc"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/extension.ml[294,10054+22]..src/extension.ml[294,10054+29])
                                            Texp_ident "context/4180"
                                      ]
                                ]
                          ]
                          []
                    ]
              ]
    ]
  structure_item (src/extension.ml[296,10086+0]..src/extension.ml[304,10353+45])
    Tstr_value Rec
    [
      <def>
        pattern (src/extension.ml[296,10086+8]..src/extension.ml[296,10086+25])
          Tpat_extra_constraint
          core_type (src/extension.ml[296,10086+8]..src/extension.ml[304,10353+45]) ghost
            Ttyp_poly 'a
            core_type (src/extension.ml[297,10114+12]..src/extension.ml[297,10114+57])
              Ttyp_arrow
              Nolabel
              core_type (src/extension.ml[297,10114+12]..src/extension.ml[297,10114+23])
                Ttyp_constr "Context/3201.t"
                [
                  core_type (src/extension.ml[297,10114+12]..src/extension.ml[297,10114+13])
                    Ttyp_var a
                ]
              core_type (src/extension.ml[297,10114+27]..src/extension.ml[297,10114+57])
                Ttyp_arrow
                Nolabel
                core_type (src/extension.ml[297,10114+27]..src/extension.ml[297,10114+33])
                  Ttyp_constr "list/11!"
                  [
                    core_type (src/extension.ml[297,10114+27]..src/extension.ml[297,10114+28])
                      Ttyp_constr "t/4174"
                      []
                  ]
                core_type (src/extension.ml[297,10114+37]..src/extension.ml[297,10114+57])
                  Ttyp_constr "list/11!"
                  [
                    core_type (src/extension.ml[297,10114+37]..src/extension.ml[297,10114+52])
                      Ttyp_constr "For_context/4173.t"
                      [
                        core_type (src/extension.ml[297,10114+37]..src/extension.ml[297,10114+38])
                          Ttyp_var a
                      ]
                  ]
          pattern (src/extension.ml[296,10086+8]..src/extension.ml[296,10086+25])
            Tpat_var "filter_by_context/4194"
        expression (src/extension.ml[296,10086+8]..src/extension.ml[304,10353+45])
          Texp_newtype "a"
            Texp_constraint
            core_type (src/extension.ml[297,10114+12]..src/extension.ml[297,10114+57])
              Ttyp_arrow
              Nolabel
              core_type (src/extension.ml[297,10114+12]..src/extension.ml[297,10114+23])
                Ttyp_constr "Context/3201.t"
                [
                  core_type (src/extension.ml[297,10114+12]..src/extension.ml[297,10114+13])
                    Ttyp_constr "a/4195"
                    []
                ]
              core_type (src/extension.ml[297,10114+27]..src/extension.ml[297,10114+57])
                Ttyp_arrow
                Nolabel
                core_type (src/extension.ml[297,10114+27]..src/extension.ml[297,10114+33])
                  Ttyp_constr "list/11!"
                  [
                    core_type (src/extension.ml[297,10114+27]..src/extension.ml[297,10114+28])
                      Ttyp_constr "t/4174"
                      []
                  ]
                core_type (src/extension.ml[297,10114+37]..src/extension.ml[297,10114+57])
                  Ttyp_constr "list/11!"
                  [
                    core_type (src/extension.ml[297,10114+37]..src/extension.ml[297,10114+52])
                      Ttyp_constr "For_context/4173.t"
                      [
                        core_type (src/extension.ml[297,10114+37]..src/extension.ml[297,10114+38])
                          Ttyp_constr "a/4195"
                          []
                      ]
                  ]
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/extension.ml[298,10174+5]..src/extension.ml[298,10174+12])
                    Tpat_var "context/4196"
                  expression (src/extension.ml[298,10174+13]..src/extension.ml[304,10353+45]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[298,10174+13]..src/extension.ml[298,10174+22])
                          Tpat_var "expanders/4197"
                        expression (src/extension.ml[299,10200+2]..src/extension.ml[304,10353+45])
                          Texp_match
                          expression (src/extension.ml[299,10200+8]..src/extension.ml[299,10200+17])
                            Texp_ident "expanders/4197"
                          [
                            <case>
                              pattern (src/extension.ml[300,10223+4]..src/extension.ml[300,10223+6])
                                Tpat_value
                                pattern (src/extension.ml[300,10223+4]..src/extension.ml[300,10223+6])
                                  Tpat_construct "[]"
                                  []
                              expression (src/extension.ml[300,10223+10]..src/extension.ml[300,10223+12])
                                Texp_construct "[]"
                                []
                            <case>
                              pattern (src/extension.ml[301,10236+4]..src/extension.ml[301,10236+15])
                                Tpat_value
                                pattern (src/extension.ml[301,10236+4]..src/extension.ml[301,10236+15])
                                  Tpat_construct "::"
                                  [
                                    pattern (src/extension.ml[301,10236+4]..src/extension.ml[301,10236+7])
                                      Tpat_construct "T"
                                      [
                                        pattern (src/extension.ml[301,10236+6]..src/extension.ml[301,10236+7])
                                          Tpat_var "t/4199"
                                      ]
                                    pattern (src/extension.ml[301,10236+11]..src/extension.ml[301,10236+15])
                                      Tpat_var "rest/4200"
                                  ]
                              expression (src/extension.ml[301,10236+19]..src/extension.ml[304,10353+45])
                                Texp_match
                                expression (src/extension.ml[302,10257+12]..src/extension.ml[302,10257+40])
                                  Texp_apply
                                  expression (src/extension.ml[302,10257+12]..src/extension.ml[302,10257+22])
                                    Texp_ident "Context/3201.eq"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[302,10257+23]..src/extension.ml[302,10257+30])
                                        Texp_ident "context/4196"
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[302,10257+31]..src/extension.ml[302,10257+40])
                                        Texp_field
                                        expression (src/extension.ml[302,10257+31]..src/extension.ml[302,10257+32])
                                          Texp_ident "t/4199"
                                        "context"
                                  ]
                                [
                                  <case>
                                    pattern (src/extension.ml[303,10303+8]..src/extension.ml[303,10303+10])
                                      Tpat_value
                                      pattern (src/extension.ml[303,10303+8]..src/extension.ml[303,10303+10])
                                        Tpat_construct "Eq"
                                        []
                                    expression (src/extension.ml[303,10303+14]..src/extension.ml[303,10303+49])
                                      Texp_construct "::"
                                      [
                                        expression (src/extension.ml[303,10303+14]..src/extension.ml[303,10303+15])
                                          Texp_ident "t/4199"
                                        expression (src/extension.ml[303,10303+19]..src/extension.ml[303,10303+49])
                                          Texp_apply
                                          expression (src/extension.ml[303,10303+19]..src/extension.ml[303,10303+36])
                                            Texp_ident "filter_by_context/4194"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/extension.ml[303,10303+37]..src/extension.ml[303,10303+44])
                                                Texp_ident "context/4196"
                                            <arg>
                                              Nolabel
                                              expression (src/extension.ml[303,10303+45]..src/extension.ml[303,10303+49])
                                                Texp_ident "rest/4200"
                                          ]
                                      ]
                                  <case>
                                    pattern (src/extension.ml[304,10353+8]..src/extension.ml[304,10353+10])
                                      Tpat_value
                                      pattern (src/extension.ml[304,10353+8]..src/extension.ml[304,10353+10])
                                        Tpat_construct "Ne"
                                        []
                                    expression (src/extension.ml[304,10353+14]..src/extension.ml[304,10353+44])
                                      Texp_apply
                                      expression (src/extension.ml[304,10353+14]..src/extension.ml[304,10353+31])
                                        Texp_ident "filter_by_context/4194"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/extension.ml[304,10353+32]..src/extension.ml[304,10353+39])
                                            Texp_ident "context/4196"
                                        <arg>
                                          Nolabel
                                          expression (src/extension.ml[304,10353+40]..src/extension.ml[304,10353+44])
                                            Texp_ident "rest/4200"
                                      ]
                                ]
                                []
                          ]
                          []
                    ]
              ]
    ]
  structure_item (src/extension.ml[306,10400+0]..src/extension.ml[316,10692+9])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/extension.ml[306,10400+4]..src/extension.ml[306,10400+29])
          Tpat_var "unhandled_extension_error/4203"
        expression (src/extension.ml[306,10400+30]..src/extension.ml[316,10692+9]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/extension.ml[306,10400+30]..src/extension.ml[306,10400+33])
                Tpat_var "ctx/4205"
              expression (src/extension.ml[306,10400+34]..src/extension.ml[316,10692+9]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/extension.ml[306,10400+34]..src/extension.ml[306,10400+43])
                      Tpat_tuple
                      [
                        pattern (src/extension.ml[306,10400+35]..src/extension.ml[306,10400+39])
                          Tpat_var "name/4206"
                        pattern (src/extension.ml[306,10400+41]..src/extension.ml[306,10400+42])
                          Tpat_any
                      ]
                    expression (src/extension.ml[307,10446+2]..src/extension.ml[316,10692+9])
                      Texp_ifthenelse
                      expression (src/extension.ml[308,10451+4]..src/extension.ml[310,10524+37])
                        Texp_apply
                        expression (src/extension.ml[308,10451+4]..src/extension.ml[308,10451+7])
                          Texp_ident "Stdlib!.not"
                        [
                          <arg>
                            Nolabel
                            expression (src/extension.ml[309,10459+6]..src/extension.ml[310,10524+37])
                              Texp_apply
                              expression (src/extension.ml[310,10524+6]..src/extension.ml[310,10524+8])
                                Texp_ident "Stdlib!.||"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/extension.ml[309,10459+7]..src/extension.ml[309,10459+64])
                                    Texp_apply
                                    expression (src/extension.ml[309,10459+7]..src/extension.ml[309,10459+38])
                                      Texp_ident "Ppxlib__!.Name.Allowlisted.is_allowlisted"
                                    [
                                      <arg>
                                        Labelled "kind"
                                        expression (src/extension.ml[309,10459+45]..src/extension.ml[309,10459+55])
                                          Texp_variant "Extension"
                                          None
                                      <arg>
                                        Nolabel
                                        expression (src/extension.ml[309,10459+56]..src/extension.ml[309,10459+64])
                                          Texp_field
                                          expression (src/extension.ml[309,10459+56]..src/extension.ml[309,10459+60])
                                            Texp_ident "name/4206"
                                          "txt"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/extension.ml[310,10524+9]..src/extension.ml[310,10524+36])
                                    Texp_apply
                                    expression (src/extension.ml[310,10524+9]..src/extension.ml[310,10524+27])
                                      Texp_ident "Ppxlib__!.Name.ignore_checks"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/extension.ml[310,10524+28]..src/extension.ml[310,10524+36])
                                          Texp_field
                                          expression (src/extension.ml[310,10524+28]..src/extension.ml[310,10524+32])
                                            Texp_ident "name/4206"
                                          "txt"
                                    ]
                              ]
                        ]
                      expression (src/extension.ml[312,10569+4]..src/extension.ml[315,10686+5])
                        Texp_construct "::"
                        [
                          expression (src/extension.ml[313,10575+6]..src/extension.ml[314,10636+48])
                            Texp_apply
                            expression (src/extension.ml[313,10575+6]..src/extension.ml[313,10575+34])
                              Texp_ident "Ppxlib__!.Name.Registrar.Error.createf"
                            [
                              <arg>
                                Nolabel
                                expression (src/extension.ml[313,10575+35]..src/extension.ml[313,10575+44])
                                  Texp_ident "registrar/3202"
                              <arg>
                                Nolabel
                                expression (src/extension.ml[313,10575+45]..src/extension.ml[313,10575+60])
                                  Texp_construct "Context.T"
                                  [
                                    expression (src/extension.ml[313,10575+56]..src/extension.ml[313,10575+59])
                                      Texp_ident "ctx/4205"
                                  ]
                              <arg>
                                Optional "allowlist"
                                expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                  Texp_construct "None"
                                  []
                              <arg>
                                Nolabel
                                expression (src/extension.ml[314,10636+8]..src/extension.ml[314,10636+43])
                                  Texp_construct "CamlinternalFormatBasics.Format"
                                  [
                                    expression (src/extension.ml[314,10636+8]..src/extension.ml[314,10636+43]) ghost
                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                      [
                                        expression (src/extension.ml[314,10636+8]..src/extension.ml[314,10636+43]) ghost
                                          Texp_constant Const_string("Extension `",(src/extension.ml[314,10636+8]..src/extension.ml[314,10636+43]) ghost,None)
                                        expression (src/extension.ml[314,10636+8]..src/extension.ml[314,10636+43]) ghost
                                          Texp_construct "CamlinternalFormatBasics.String"
                                          [
                                            expression (src/extension.ml[314,10636+8]..src/extension.ml[314,10636+43]) ghost
                                              Texp_construct "CamlinternalFormatBasics.No_padding"
                                              []
                                            expression (src/extension.ml[314,10636+8]..src/extension.ml[314,10636+43]) ghost
                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                              [
                                                expression (src/extension.ml[314,10636+8]..src/extension.ml[314,10636+43]) ghost
                                                  Texp_constant Const_string("' was not translated",(src/extension.ml[314,10636+8]..src/extension.ml[314,10636+43]) ghost,None)
                                                expression (src/extension.ml[314,10636+8]..src/extension.ml[314,10636+43]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                  []
                                              ]
                                          ]
                                      ]
                                    expression (src/extension.ml[314,10636+8]..src/extension.ml[314,10636+43]) ghost
                                      Texp_constant Const_string("Extension `%s' was not translated",(src/extension.ml[314,10636+8]..src/extension.ml[314,10636+43]) ghost,None)
                                  ]
                              <arg>
                                Nolabel
                                expression (src/extension.ml[314,10636+44]..src/extension.ml[314,10636+48])
                                  Texp_ident "name/4206"
                            ]
                          expression (src/extension.ml[315,10686+4]..src/extension.ml[315,10686+5]) ghost
                            Texp_construct "[]"
                            []
                        ]
                      Some
                        expression (src/extension.ml[316,10692+7]..src/extension.ml[316,10692+9])
                          Texp_construct "[]"
                          []
                ]
          ]
    ]
  structure_item (src/extension.ml[318,10703+0]..src/extension.ml[386,13000+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/extension.ml[318,10703+4]..src/extension.ml[318,10703+38])
          Tpat_var "collect_unhandled_extension_errors/4214"
        expression (src/extension.ml[319,10744+2]..src/extension.ml[386,13000+5])
          Texp_object          class_structure
            pattern (_none_[0,0+-1].._none_[0,0+-1]) ghost
              Tpat_alias "selfpat-1/4216"
              pattern (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Tpat_alias "selfpat-*/4215"
                pattern (src/extension.ml[319,10744+8]..src/extension.ml[319,10744+8]) ghost
                  Tpat_any
            [
              class_field (src/extension.ml[320,10753+4]..src/extension.ml[320,10753+62])
                Tcf_inherit Fresh
                  class_expr (src/extension.ml[320,10753+12]..src/extension.ml[320,10753+53])
                    class_expr (src/extension.ml[320,10753+12]..src/extension.ml[320,10753+53])
                      Tcl_ident "Ppxlib__!.Ast_traverse.fold"
                      [
                        core_type (src/extension.ml[320,10753+13]..src/extension.ml[320,10753+34])
                          Ttyp_constr "list/11!"
                          [
                            core_type (src/extension.ml[320,10753+13]..src/extension.ml[320,10753+29])
                              Ttyp_constr "Ppxlib__!.Location.Error.t"
                              []
                          ]
                      ]
                  Some
                    "super"
              class_field (src/extension.ml[322,10817+4]..src/extension.ml[327,10999+9])
                Tcf_method "extension" Public
                  Concrete Override
                  expression (src/extension.ml[322,10817+22]..src/extension.ml[327,10999+9]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[319,10744+8]..src/extension.ml[319,10744+8]) ghost
                          Tpat_alias "self-1/4782"
                          pattern (src/extension.ml[319,10744+8]..src/extension.ml[319,10744+8]) ghost
                            Tpat_var "self-*/4781"
                        expression (src/extension.ml[322,10817+22]..src/extension.ml[327,10999+9]) ghost
                          Texp_poly
                          None
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[322,10817+22]..src/extension.ml[322,10817+31])
                                  Tpat_tuple
                                  [
                                    pattern (src/extension.ml[322,10817+23]..src/extension.ml[322,10817+27])
                                      Tpat_var "name/4783"
                                    pattern (src/extension.ml[322,10817+29]..src/extension.ml[322,10817+30])
                                      Tpat_any
                                  ]
                                expression (src/extension.ml[322,10817+32]..src/extension.ml[327,10999+9]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/extension.ml[322,10817+32]..src/extension.ml[322,10817+35])
                                        Tpat_var "acc/4784"
                                      expression (src/extension.ml[323,10855+6]..src/extension.ml[327,10999+9])
                                        Texp_apply
                                        expression (src/extension.ml[324,10865+6]..src/extension.ml[324,10865+7])
                                          Texp_ident "Ppxlib__!.Import.@"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[323,10855+6]..src/extension.ml[323,10855+9])
                                              Texp_ident "acc/4784"
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[324,10865+8]..src/extension.ml[327,10999+9])
                                              Texp_construct "::"
                                              [
                                                expression (src/extension.ml[325,10875+10]..src/extension.ml[326,10922+75])
                                                  Texp_apply
                                                  expression (src/extension.ml[325,10875+10]..src/extension.ml[325,10875+32])
                                                    Texp_ident "Ppxlib__!.Location.Error.createf"
                                                  [
                                                    <arg>
                                                      Labelled "loc"
                                                      expression (src/extension.ml[325,10875+38]..src/extension.ml[325,10875+46])
                                                        Texp_field
                                                        expression (src/extension.ml[325,10875+38]..src/extension.ml[325,10875+42])
                                                          Texp_ident "name/4783"
                                                        "loc"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/extension.ml[326,10922+12]..src/extension.ml[326,10922+75])
                                                        Texp_construct "CamlinternalFormatBasics.Format"
                                                        [
                                                          expression (src/extension.ml[326,10922+12]..src/extension.ml[326,10922+75]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                            [
                                                              expression (src/extension.ml[326,10922+12]..src/extension.ml[326,10922+75]) ghost
                                                                Texp_constant Const_string("extension not expected here, Ppxlib.Extension needs updating!",(src/extension.ml[326,10922+12]..src/extension.ml[326,10922+75]) ghost,None)
                                                              expression (src/extension.ml[326,10922+12]..src/extension.ml[326,10922+75]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                []
                                                            ]
                                                          expression (src/extension.ml[326,10922+12]..src/extension.ml[326,10922+75]) ghost
                                                            Texp_constant Const_string("extension not expected here, Ppxlib.Extension needs updating!",(src/extension.ml[326,10922+12]..src/extension.ml[326,10922+75]) ghost,None)
                                                        ]
                                                  ]
                                                expression (src/extension.ml[327,10999+8]..src/extension.ml[327,10999+9]) ghost
                                                  Texp_construct "[]"
                                                  []
                                              ]
                                        ]
                                  ]
                            ]
                    ]
              class_field (src/extension.ml[329,11010+4]..src/extension.ml[332,11140+39])
                Tcf_method "core_type_desc" Public
                  Concrete Override
                  expression (src/extension.ml[329,11010+27]..src/extension.ml[332,11140+39]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[319,10744+8]..src/extension.ml[319,10744+8]) ghost
                          Tpat_alias "self-1/4787"
                          pattern (src/extension.ml[319,10744+8]..src/extension.ml[319,10744+8]) ghost
                            Tpat_var "self-*/4786"
                        expression (src/extension.ml[329,11010+27]..src/extension.ml[332,11140+39]) ghost
                          Texp_poly
                          None
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[329,11010+27]..src/extension.ml[329,11010+28])
                                  Tpat_var "x/4788"
                                expression (src/extension.ml[329,11010+29]..src/extension.ml[332,11140+39]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/extension.ml[329,11010+29]..src/extension.ml[329,11010+32])
                                        Tpat_var "acc/4789"
                                      expression (src/extension.ml[330,11045+6]..src/extension.ml[332,11140+39])
                                        Texp_match
                                        expression (src/extension.ml[330,11045+12]..src/extension.ml[330,11045+13])
                                          Texp_ident "x/4788"
                                        [
                                          <case>
                                            pattern (src/extension.ml[331,11064+8]..src/extension.ml[331,11064+26])
                                              Tpat_value
                                              pattern (src/extension.ml[331,11064+8]..src/extension.ml[331,11064+26])
                                                Tpat_construct "Ptyp_extension"
                                                [
                                                  pattern (src/extension.ml[331,11064+23]..src/extension.ml[331,11064+26])
                                                    Tpat_var "ext/4790"
                                                ]
                                            expression (src/extension.ml[331,11064+30]..src/extension.ml[331,11064+75])
                                              Texp_apply
                                              expression (src/extension.ml[331,11064+34]..src/extension.ml[331,11064+35])
                                                Texp_ident "Ppxlib__!.Import.@"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[331,11064+30]..src/extension.ml[331,11064+33])
                                                    Texp_ident "acc/4789"
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[331,11064+36]..src/extension.ml[331,11064+75])
                                                    Texp_apply
                                                    expression (src/extension.ml[331,11064+36]..src/extension.ml[331,11064+61])
                                                      Texp_ident "unhandled_extension_error/4203"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[331,11064+62]..src/extension.ml[331,11064+71])
                                                          Texp_construct "Core_type"
                                                          []
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[331,11064+72]..src/extension.ml[331,11064+75])
                                                          Texp_ident "ext/4790"
                                                    ]
                                              ]
                                          <case>
                                            pattern (src/extension.ml[332,11140+8]..src/extension.ml[332,11140+9])
                                              Tpat_value
                                              pattern (src/extension.ml[332,11140+8]..src/extension.ml[332,11140+9])
                                                Tpat_var "x/4791"
                                            expression (src/extension.ml[332,11140+13]..src/extension.ml[332,11140+39])
                                              Texp_apply
                                              expression (src/extension.ml[332,11140+13]..src/extension.ml[332,11140+33])
                                                Texp_send "core_type_desc"
                                                expression (src/extension.ml[332,11140+13]..src/extension.ml[332,11140+18])
                                                  Texp_ident "super/4684"
                                                Some
                                                  expression (src/extension.ml[332,11140+13]..src/extension.ml[332,11140+33])
                                                    Texp_apply
                                                    expression (src/extension.ml[332,11140+13]..src/extension.ml[332,11140+33])
                                                      Texp_ident "core_type_desc/4615"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[332,11140+13]..src/extension.ml[332,11140+18])
                                                          Texp_ident "self-1/4787"
                                                    ]
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[332,11140+34]..src/extension.ml[332,11140+35])
                                                    Texp_ident "x/4791"
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[332,11140+36]..src/extension.ml[332,11140+39])
                                                    Texp_ident "acc/4789"
                                              ]
                                        ]
                                        []
                                  ]
                            ]
                    ]
              class_field (src/extension.ml[334,11181+4]..src/extension.ml[337,11307+37])
                Tcf_method "pattern_desc" Public
                  Concrete Override
                  expression (src/extension.ml[334,11181+25]..src/extension.ml[337,11307+37]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[319,10744+8]..src/extension.ml[319,10744+8]) ghost
                          Tpat_alias "self-1/4793"
                          pattern (src/extension.ml[319,10744+8]..src/extension.ml[319,10744+8]) ghost
                            Tpat_var "self-*/4792"
                        expression (src/extension.ml[334,11181+25]..src/extension.ml[337,11307+37]) ghost
                          Texp_poly
                          None
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[334,11181+25]..src/extension.ml[334,11181+26])
                                  Tpat_var "x/4794"
                                expression (src/extension.ml[334,11181+27]..src/extension.ml[337,11307+37]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/extension.ml[334,11181+27]..src/extension.ml[334,11181+30])
                                        Tpat_var "acc/4795"
                                      expression (src/extension.ml[335,11214+6]..src/extension.ml[337,11307+37])
                                        Texp_match
                                        expression (src/extension.ml[335,11214+12]..src/extension.ml[335,11214+13])
                                          Texp_ident "x/4794"
                                        [
                                          <case>
                                            pattern (src/extension.ml[336,11233+8]..src/extension.ml[336,11233+26])
                                              Tpat_value
                                              pattern (src/extension.ml[336,11233+8]..src/extension.ml[336,11233+26])
                                                Tpat_construct "Ppat_extension"
                                                [
                                                  pattern (src/extension.ml[336,11233+23]..src/extension.ml[336,11233+26])
                                                    Tpat_var "ext/4796"
                                                ]
                                            expression (src/extension.ml[336,11233+30]..src/extension.ml[336,11233+73])
                                              Texp_apply
                                              expression (src/extension.ml[336,11233+34]..src/extension.ml[336,11233+35])
                                                Texp_ident "Ppxlib__!.Import.@"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[336,11233+30]..src/extension.ml[336,11233+33])
                                                    Texp_ident "acc/4795"
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[336,11233+36]..src/extension.ml[336,11233+73])
                                                    Texp_apply
                                                    expression (src/extension.ml[336,11233+36]..src/extension.ml[336,11233+61])
                                                      Texp_ident "unhandled_extension_error/4203"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[336,11233+62]..src/extension.ml[336,11233+69])
                                                          Texp_construct "Pattern"
                                                          []
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[336,11233+70]..src/extension.ml[336,11233+73])
                                                          Texp_ident "ext/4796"
                                                    ]
                                              ]
                                          <case>
                                            pattern (src/extension.ml[337,11307+8]..src/extension.ml[337,11307+9])
                                              Tpat_value
                                              pattern (src/extension.ml[337,11307+8]..src/extension.ml[337,11307+9])
                                                Tpat_var "x/4797"
                                            expression (src/extension.ml[337,11307+13]..src/extension.ml[337,11307+37])
                                              Texp_apply
                                              expression (src/extension.ml[337,11307+13]..src/extension.ml[337,11307+31])
                                                Texp_send "pattern_desc"
                                                expression (src/extension.ml[337,11307+13]..src/extension.ml[337,11307+18])
                                                  Texp_ident "super/4684"
                                                Some
                                                  expression (src/extension.ml[337,11307+13]..src/extension.ml[337,11307+31])
                                                    Texp_apply
                                                    expression (src/extension.ml[337,11307+13]..src/extension.ml[337,11307+31])
                                                      Texp_ident "pattern_desc/4657"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[337,11307+13]..src/extension.ml[337,11307+18])
                                                          Texp_ident "self-1/4793"
                                                    ]
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[337,11307+32]..src/extension.ml[337,11307+33])
                                                    Texp_ident "x/4797"
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[337,11307+34]..src/extension.ml[337,11307+37])
                                                    Texp_ident "acc/4795"
                                              ]
                                        ]
                                        []
                                  ]
                            ]
                    ]
              class_field (src/extension.ml[339,11346+4]..src/extension.ml[342,11478+40])
                Tcf_method "expression_desc" Public
                  Concrete Override
                  expression (src/extension.ml[339,11346+28]..src/extension.ml[342,11478+40]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[319,10744+8]..src/extension.ml[319,10744+8]) ghost
                          Tpat_alias "self-1/4799"
                          pattern (src/extension.ml[319,10744+8]..src/extension.ml[319,10744+8]) ghost
                            Tpat_var "self-*/4798"
                        expression (src/extension.ml[339,11346+28]..src/extension.ml[342,11478+40]) ghost
                          Texp_poly
                          None
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[339,11346+28]..src/extension.ml[339,11346+29])
                                  Tpat_var "x/4800"
                                expression (src/extension.ml[339,11346+30]..src/extension.ml[342,11478+40]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/extension.ml[339,11346+30]..src/extension.ml[339,11346+33])
                                        Tpat_var "acc/4801"
                                      expression (src/extension.ml[340,11382+6]..src/extension.ml[342,11478+40])
                                        Texp_match
                                        expression (src/extension.ml[340,11382+12]..src/extension.ml[340,11382+13])
                                          Texp_ident "x/4800"
                                        [
                                          <case>
                                            pattern (src/extension.ml[341,11401+8]..src/extension.ml[341,11401+26])
                                              Tpat_value
                                              pattern (src/extension.ml[341,11401+8]..src/extension.ml[341,11401+26])
                                                Tpat_construct "Pexp_extension"
                                                [
                                                  pattern (src/extension.ml[341,11401+23]..src/extension.ml[341,11401+26])
                                                    Tpat_var "ext/4802"
                                                ]
                                            expression (src/extension.ml[341,11401+30]..src/extension.ml[341,11401+76])
                                              Texp_apply
                                              expression (src/extension.ml[341,11401+34]..src/extension.ml[341,11401+35])
                                                Texp_ident "Ppxlib__!.Import.@"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[341,11401+30]..src/extension.ml[341,11401+33])
                                                    Texp_ident "acc/4801"
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[341,11401+36]..src/extension.ml[341,11401+76])
                                                    Texp_apply
                                                    expression (src/extension.ml[341,11401+36]..src/extension.ml[341,11401+61])
                                                      Texp_ident "unhandled_extension_error/4203"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[341,11401+62]..src/extension.ml[341,11401+72])
                                                          Texp_construct "Expression"
                                                          []
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[341,11401+73]..src/extension.ml[341,11401+76])
                                                          Texp_ident "ext/4802"
                                                    ]
                                              ]
                                          <case>
                                            pattern (src/extension.ml[342,11478+8]..src/extension.ml[342,11478+9])
                                              Tpat_value
                                              pattern (src/extension.ml[342,11478+8]..src/extension.ml[342,11478+9])
                                                Tpat_var "x/4803"
                                            expression (src/extension.ml[342,11478+13]..src/extension.ml[342,11478+40])
                                              Texp_apply
                                              expression (src/extension.ml[342,11478+13]..src/extension.ml[342,11478+34])
                                                Texp_send "expression_desc"
                                                expression (src/extension.ml[342,11478+13]..src/extension.ml[342,11478+18])
                                                  Texp_ident "super/4684"
                                                Some
                                                  expression (src/extension.ml[342,11478+13]..src/extension.ml[342,11478+34])
                                                    Texp_apply
                                                    expression (src/extension.ml[342,11478+13]..src/extension.ml[342,11478+34])
                                                      Texp_ident "expression_desc/4620"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[342,11478+13]..src/extension.ml[342,11478+18])
                                                          Texp_ident "self-1/4799"
                                                    ]
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[342,11478+35]..src/extension.ml[342,11478+36])
                                                    Texp_ident "x/4803"
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[342,11478+37]..src/extension.ml[342,11478+40])
                                                    Texp_ident "acc/4801"
                                              ]
                                        ]
                                        []
                                  ]
                            ]
                    ]
              class_field (src/extension.ml[344,11520+4]..src/extension.ml[347,11652+40])
                Tcf_method "class_type_desc" Public
                  Concrete Override
                  expression (src/extension.ml[344,11520+28]..src/extension.ml[347,11652+40]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[319,10744+8]..src/extension.ml[319,10744+8]) ghost
                          Tpat_alias "self-1/4805"
                          pattern (src/extension.ml[319,10744+8]..src/extension.ml[319,10744+8]) ghost
                            Tpat_var "self-*/4804"
                        expression (src/extension.ml[344,11520+28]..src/extension.ml[347,11652+40]) ghost
                          Texp_poly
                          None
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[344,11520+28]..src/extension.ml[344,11520+29])
                                  Tpat_var "x/4806"
                                expression (src/extension.ml[344,11520+30]..src/extension.ml[347,11652+40]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/extension.ml[344,11520+30]..src/extension.ml[344,11520+33])
                                        Tpat_var "acc/4807"
                                      expression (src/extension.ml[345,11556+6]..src/extension.ml[347,11652+40])
                                        Texp_match
                                        expression (src/extension.ml[345,11556+12]..src/extension.ml[345,11556+13])
                                          Texp_ident "x/4806"
                                        [
                                          <case>
                                            pattern (src/extension.ml[346,11575+8]..src/extension.ml[346,11575+26])
                                              Tpat_value
                                              pattern (src/extension.ml[346,11575+8]..src/extension.ml[346,11575+26])
                                                Tpat_construct "Pcty_extension"
                                                [
                                                  pattern (src/extension.ml[346,11575+23]..src/extension.ml[346,11575+26])
                                                    Tpat_var "ext/4808"
                                                ]
                                            expression (src/extension.ml[346,11575+30]..src/extension.ml[346,11575+76])
                                              Texp_apply
                                              expression (src/extension.ml[346,11575+34]..src/extension.ml[346,11575+35])
                                                Texp_ident "Ppxlib__!.Import.@"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[346,11575+30]..src/extension.ml[346,11575+33])
                                                    Texp_ident "acc/4807"
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[346,11575+36]..src/extension.ml[346,11575+76])
                                                    Texp_apply
                                                    expression (src/extension.ml[346,11575+36]..src/extension.ml[346,11575+61])
                                                      Texp_ident "unhandled_extension_error/4203"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[346,11575+62]..src/extension.ml[346,11575+72])
                                                          Texp_construct "Class_type"
                                                          []
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[346,11575+73]..src/extension.ml[346,11575+76])
                                                          Texp_ident "ext/4808"
                                                    ]
                                              ]
                                          <case>
                                            pattern (src/extension.ml[347,11652+8]..src/extension.ml[347,11652+9])
                                              Tpat_value
                                              pattern (src/extension.ml[347,11652+8]..src/extension.ml[347,11652+9])
                                                Tpat_var "x/4809"
                                            expression (src/extension.ml[347,11652+13]..src/extension.ml[347,11652+40])
                                              Texp_apply
                                              expression (src/extension.ml[347,11652+13]..src/extension.ml[347,11652+34])
                                                Texp_send "class_type_desc"
                                                expression (src/extension.ml[347,11652+13]..src/extension.ml[347,11652+18])
                                                  Texp_ident "super/4684"
                                                Some
                                                  expression (src/extension.ml[347,11652+13]..src/extension.ml[347,11652+34])
                                                    Texp_apply
                                                    expression (src/extension.ml[347,11652+13]..src/extension.ml[347,11652+34])
                                                      Texp_ident "class_type_desc/4607"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[347,11652+13]..src/extension.ml[347,11652+18])
                                                          Texp_ident "self-1/4805"
                                                    ]
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[347,11652+35]..src/extension.ml[347,11652+36])
                                                    Texp_ident "x/4809"
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[347,11652+37]..src/extension.ml[347,11652+40])
                                                    Texp_ident "acc/4807"
                                              ]
                                        ]
                                        []
                                  ]
                            ]
                    ]
              class_field (src/extension.ml[349,11694+4]..src/extension.ml[353,11848+46])
                Tcf_method "class_type_field_desc" Public
                  Concrete Override
                  expression (src/extension.ml[349,11694+34]..src/extension.ml[353,11848+46]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[319,10744+8]..src/extension.ml[319,10744+8]) ghost
                          Tpat_alias "self-1/4811"
                          pattern (src/extension.ml[319,10744+8]..src/extension.ml[319,10744+8]) ghost
                            Tpat_var "self-*/4810"
                        expression (src/extension.ml[349,11694+34]..src/extension.ml[353,11848+46]) ghost
                          Texp_poly
                          None
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[349,11694+34]..src/extension.ml[349,11694+35])
                                  Tpat_var "x/4812"
                                expression (src/extension.ml[349,11694+36]..src/extension.ml[353,11848+46]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/extension.ml[349,11694+36]..src/extension.ml[349,11694+39])
                                        Tpat_var "acc/4813"
                                      expression (src/extension.ml[350,11736+6]..src/extension.ml[353,11848+46])
                                        Texp_match
                                        expression (src/extension.ml[350,11736+12]..src/extension.ml[350,11736+13])
                                          Texp_ident "x/4812"
                                        [
                                          <case>
                                            pattern (src/extension.ml[351,11755+8]..src/extension.ml[351,11755+26])
                                              Tpat_value
                                              pattern (src/extension.ml[351,11755+8]..src/extension.ml[351,11755+26])
                                                Tpat_construct "Pctf_extension"
                                                [
                                                  pattern (src/extension.ml[351,11755+23]..src/extension.ml[351,11755+26])
                                                    Tpat_var "ext/4814"
                                                ]
                                            expression (src/extension.ml[352,11785+10]..src/extension.ml[352,11785+62])
                                              Texp_apply
                                              expression (src/extension.ml[352,11785+14]..src/extension.ml[352,11785+15])
                                                Texp_ident "Ppxlib__!.Import.@"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[352,11785+10]..src/extension.ml[352,11785+13])
                                                    Texp_ident "acc/4813"
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[352,11785+16]..src/extension.ml[352,11785+62])
                                                    Texp_apply
                                                    expression (src/extension.ml[352,11785+16]..src/extension.ml[352,11785+41])
                                                      Texp_ident "unhandled_extension_error/4203"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[352,11785+42]..src/extension.ml[352,11785+58])
                                                          Texp_construct "Class_type_field"
                                                          []
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[352,11785+59]..src/extension.ml[352,11785+62])
                                                          Texp_ident "ext/4814"
                                                    ]
                                              ]
                                          <case>
                                            pattern (src/extension.ml[353,11848+8]..src/extension.ml[353,11848+9])
                                              Tpat_value
                                              pattern (src/extension.ml[353,11848+8]..src/extension.ml[353,11848+9])
                                                Tpat_var "x/4815"
                                            expression (src/extension.ml[353,11848+13]..src/extension.ml[353,11848+46])
                                              Texp_apply
                                              expression (src/extension.ml[353,11848+13]..src/extension.ml[353,11848+40])
                                                Texp_send "class_type_field_desc"
                                                expression (src/extension.ml[353,11848+13]..src/extension.ml[353,11848+18])
                                                  Texp_ident "super/4684"
                                                Some
                                                  expression (src/extension.ml[353,11848+13]..src/extension.ml[353,11848+40])
                                                    Texp_apply
                                                    expression (src/extension.ml[353,11848+13]..src/extension.ml[353,11848+40])
                                                      Texp_ident "class_type_field_desc/4609"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[353,11848+13]..src/extension.ml[353,11848+18])
                                                          Texp_ident "self-1/4811"
                                                    ]
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[353,11848+41]..src/extension.ml[353,11848+42])
                                                    Texp_ident "x/4815"
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[353,11848+43]..src/extension.ml[353,11848+46])
                                                    Texp_ident "acc/4813"
                                              ]
                                        ]
                                        []
                                  ]
                            ]
                    ]
              class_field (src/extension.ml[355,11896+4]..src/extension.ml[358,12027+40])
                Tcf_method "class_expr_desc" Public
                  Concrete Override
                  expression (src/extension.ml[355,11896+28]..src/extension.ml[358,12027+40]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[319,10744+8]..src/extension.ml[319,10744+8]) ghost
                          Tpat_alias "self-1/4817"
                          pattern (src/extension.ml[319,10744+8]..src/extension.ml[319,10744+8]) ghost
                            Tpat_var "self-*/4816"
                        expression (src/extension.ml[355,11896+28]..src/extension.ml[358,12027+40]) ghost
                          Texp_poly
                          None
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[355,11896+28]..src/extension.ml[355,11896+29])
                                  Tpat_var "x/4818"
                                expression (src/extension.ml[355,11896+30]..src/extension.ml[358,12027+40]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/extension.ml[355,11896+30]..src/extension.ml[355,11896+33])
                                        Tpat_var "acc/4819"
                                      expression (src/extension.ml[356,11932+6]..src/extension.ml[358,12027+40])
                                        Texp_match
                                        expression (src/extension.ml[356,11932+12]..src/extension.ml[356,11932+13])
                                          Texp_ident "x/4818"
                                        [
                                          <case>
                                            pattern (src/extension.ml[357,11951+8]..src/extension.ml[357,11951+25])
                                              Tpat_value
                                              pattern (src/extension.ml[357,11951+8]..src/extension.ml[357,11951+25])
                                                Tpat_construct "Pcl_extension"
                                                [
                                                  pattern (src/extension.ml[357,11951+22]..src/extension.ml[357,11951+25])
                                                    Tpat_var "ext/4820"
                                                ]
                                            expression (src/extension.ml[357,11951+29]..src/extension.ml[357,11951+75])
                                              Texp_apply
                                              expression (src/extension.ml[357,11951+33]..src/extension.ml[357,11951+34])
                                                Texp_ident "Ppxlib__!.Import.@"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[357,11951+29]..src/extension.ml[357,11951+32])
                                                    Texp_ident "acc/4819"
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[357,11951+35]..src/extension.ml[357,11951+75])
                                                    Texp_apply
                                                    expression (src/extension.ml[357,11951+35]..src/extension.ml[357,11951+60])
                                                      Texp_ident "unhandled_extension_error/4203"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[357,11951+61]..src/extension.ml[357,11951+71])
                                                          Texp_construct "Class_expr"
                                                          []
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[357,11951+72]..src/extension.ml[357,11951+75])
                                                          Texp_ident "ext/4820"
                                                    ]
                                              ]
                                          <case>
                                            pattern (src/extension.ml[358,12027+8]..src/extension.ml[358,12027+9])
                                              Tpat_value
                                              pattern (src/extension.ml[358,12027+8]..src/extension.ml[358,12027+9])
                                                Tpat_var "x/4821"
                                            expression (src/extension.ml[358,12027+13]..src/extension.ml[358,12027+40])
                                              Texp_apply
                                              expression (src/extension.ml[358,12027+13]..src/extension.ml[358,12027+34])
                                                Texp_send "class_expr_desc"
                                                expression (src/extension.ml[358,12027+13]..src/extension.ml[358,12027+18])
                                                  Texp_ident "super/4684"
                                                Some
                                                  expression (src/extension.ml[358,12027+13]..src/extension.ml[358,12027+34])
                                                    Texp_apply
                                                    expression (src/extension.ml[358,12027+13]..src/extension.ml[358,12027+34])
                                                      Texp_ident "class_expr_desc/4598"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[358,12027+13]..src/extension.ml[358,12027+18])
                                                          Texp_ident "self-1/4817"
                                                    ]
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[358,12027+35]..src/extension.ml[358,12027+36])
                                                    Texp_ident "x/4821"
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[358,12027+37]..src/extension.ml[358,12027+40])
                                                    Texp_ident "acc/4819"
                                              ]
                                        ]
                                        []
                                  ]
                            ]
                    ]
              class_field (src/extension.ml[360,12069+4]..src/extension.ml[363,12202+41])
                Tcf_method "class_field_desc" Public
                  Concrete Override
                  expression (src/extension.ml[360,12069+29]..src/extension.ml[363,12202+41]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[319,10744+8]..src/extension.ml[319,10744+8]) ghost
                          Tpat_alias "self-1/4823"
                          pattern (src/extension.ml[319,10744+8]..src/extension.ml[319,10744+8]) ghost
                            Tpat_var "self-*/4822"
                        expression (src/extension.ml[360,12069+29]..src/extension.ml[363,12202+41]) ghost
                          Texp_poly
                          None
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[360,12069+29]..src/extension.ml[360,12069+30])
                                  Tpat_var "x/4824"
                                expression (src/extension.ml[360,12069+31]..src/extension.ml[363,12202+41]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/extension.ml[360,12069+31]..src/extension.ml[360,12069+34])
                                        Tpat_var "acc/4825"
                                      expression (src/extension.ml[361,12106+6]..src/extension.ml[363,12202+41])
                                        Texp_match
                                        expression (src/extension.ml[361,12106+12]..src/extension.ml[361,12106+13])
                                          Texp_ident "x/4824"
                                        [
                                          <case>
                                            pattern (src/extension.ml[362,12125+8]..src/extension.ml[362,12125+25])
                                              Tpat_value
                                              pattern (src/extension.ml[362,12125+8]..src/extension.ml[362,12125+25])
                                                Tpat_construct "Pcf_extension"
                                                [
                                                  pattern (src/extension.ml[362,12125+22]..src/extension.ml[362,12125+25])
                                                    Tpat_var "ext/4826"
                                                ]
                                            expression (src/extension.ml[362,12125+29]..src/extension.ml[362,12125+76])
                                              Texp_apply
                                              expression (src/extension.ml[362,12125+33]..src/extension.ml[362,12125+34])
                                                Texp_ident "Ppxlib__!.Import.@"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[362,12125+29]..src/extension.ml[362,12125+32])
                                                    Texp_ident "acc/4825"
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[362,12125+35]..src/extension.ml[362,12125+76])
                                                    Texp_apply
                                                    expression (src/extension.ml[362,12125+35]..src/extension.ml[362,12125+60])
                                                      Texp_ident "unhandled_extension_error/4203"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[362,12125+61]..src/extension.ml[362,12125+72])
                                                          Texp_construct "Class_field"
                                                          []
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[362,12125+73]..src/extension.ml[362,12125+76])
                                                          Texp_ident "ext/4826"
                                                    ]
                                              ]
                                          <case>
                                            pattern (src/extension.ml[363,12202+8]..src/extension.ml[363,12202+9])
                                              Tpat_value
                                              pattern (src/extension.ml[363,12202+8]..src/extension.ml[363,12202+9])
                                                Tpat_var "x/4827"
                                            expression (src/extension.ml[363,12202+13]..src/extension.ml[363,12202+41])
                                              Texp_apply
                                              expression (src/extension.ml[363,12202+13]..src/extension.ml[363,12202+35])
                                                Texp_send "class_field_desc"
                                                expression (src/extension.ml[363,12202+13]..src/extension.ml[363,12202+18])
                                                  Texp_ident "super/4684"
                                                Some
                                                  expression (src/extension.ml[363,12202+13]..src/extension.ml[363,12202+35])
                                                    Texp_apply
                                                    expression (src/extension.ml[363,12202+13]..src/extension.ml[363,12202+35])
                                                      Texp_ident "class_field_desc/4600"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[363,12202+13]..src/extension.ml[363,12202+18])
                                                          Texp_ident "self-1/4823"
                                                    ]
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[363,12202+36]..src/extension.ml[363,12202+37])
                                                    Texp_ident "x/4827"
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[363,12202+38]..src/extension.ml[363,12202+41])
                                                    Texp_ident "acc/4825"
                                              ]
                                        ]
                                        []
                                  ]
                            ]
                    ]
              class_field (src/extension.ml[365,12245+4]..src/extension.ml[368,12379+41])
                Tcf_method "module_type_desc" Public
                  Concrete Override
                  expression (src/extension.ml[365,12245+29]..src/extension.ml[368,12379+41]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[319,10744+8]..src/extension.ml[319,10744+8]) ghost
                          Tpat_alias "self-1/4829"
                          pattern (src/extension.ml[319,10744+8]..src/extension.ml[319,10744+8]) ghost
                            Tpat_var "self-*/4828"
                        expression (src/extension.ml[365,12245+29]..src/extension.ml[368,12379+41]) ghost
                          Texp_poly
                          None
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[365,12245+29]..src/extension.ml[365,12245+30])
                                  Tpat_var "x/4830"
                                expression (src/extension.ml[365,12245+31]..src/extension.ml[368,12379+41]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/extension.ml[365,12245+31]..src/extension.ml[365,12245+34])
                                        Tpat_var "acc/4831"
                                      expression (src/extension.ml[366,12282+6]..src/extension.ml[368,12379+41])
                                        Texp_match
                                        expression (src/extension.ml[366,12282+12]..src/extension.ml[366,12282+13])
                                          Texp_ident "x/4830"
                                        [
                                          <case>
                                            pattern (src/extension.ml[367,12301+8]..src/extension.ml[367,12301+26])
                                              Tpat_value
                                              pattern (src/extension.ml[367,12301+8]..src/extension.ml[367,12301+26])
                                                Tpat_construct "Pmty_extension"
                                                [
                                                  pattern (src/extension.ml[367,12301+23]..src/extension.ml[367,12301+26])
                                                    Tpat_var "ext/4832"
                                                ]
                                            expression (src/extension.ml[367,12301+30]..src/extension.ml[367,12301+77])
                                              Texp_apply
                                              expression (src/extension.ml[367,12301+34]..src/extension.ml[367,12301+35])
                                                Texp_ident "Ppxlib__!.Import.@"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[367,12301+30]..src/extension.ml[367,12301+33])
                                                    Texp_ident "acc/4831"
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[367,12301+36]..src/extension.ml[367,12301+77])
                                                    Texp_apply
                                                    expression (src/extension.ml[367,12301+36]..src/extension.ml[367,12301+61])
                                                      Texp_ident "unhandled_extension_error/4203"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[367,12301+62]..src/extension.ml[367,12301+73])
                                                          Texp_construct "Module_type"
                                                          []
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[367,12301+74]..src/extension.ml[367,12301+77])
                                                          Texp_ident "ext/4832"
                                                    ]
                                              ]
                                          <case>
                                            pattern (src/extension.ml[368,12379+8]..src/extension.ml[368,12379+9])
                                              Tpat_value
                                              pattern (src/extension.ml[368,12379+8]..src/extension.ml[368,12379+9])
                                                Tpat_var "x/4833"
                                            expression (src/extension.ml[368,12379+13]..src/extension.ml[368,12379+41])
                                              Texp_apply
                                              expression (src/extension.ml[368,12379+13]..src/extension.ml[368,12379+35])
                                                Texp_send "module_type_desc"
                                                expression (src/extension.ml[368,12379+13]..src/extension.ml[368,12379+18])
                                                  Texp_ident "super/4684"
                                                Some
                                                  expression (src/extension.ml[368,12379+13]..src/extension.ml[368,12379+35])
                                                    Texp_apply
                                                    expression (src/extension.ml[368,12379+13]..src/extension.ml[368,12379+35])
                                                      Texp_ident "module_type_desc/4646"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[368,12379+13]..src/extension.ml[368,12379+18])
                                                          Texp_ident "self-1/4829"
                                                    ]
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[368,12379+36]..src/extension.ml[368,12379+37])
                                                    Texp_ident "x/4833"
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[368,12379+38]..src/extension.ml[368,12379+41])
                                                    Texp_ident "acc/4831"
                                              ]
                                        ]
                                        []
                                  ]
                            ]
                    ]
              class_field (src/extension.ml[370,12422+4]..src/extension.ml[374,12577+44])
                Tcf_method "signature_item_desc" Public
                  Concrete Override
                  expression (src/extension.ml[370,12422+32]..src/extension.ml[374,12577+44]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[319,10744+8]..src/extension.ml[319,10744+8]) ghost
                          Tpat_alias "self-1/4835"
                          pattern (src/extension.ml[319,10744+8]..src/extension.ml[319,10744+8]) ghost
                            Tpat_var "self-*/4834"
                        expression (src/extension.ml[370,12422+32]..src/extension.ml[374,12577+44]) ghost
                          Texp_poly
                          None
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[370,12422+32]..src/extension.ml[370,12422+33])
                                  Tpat_var "x/4836"
                                expression (src/extension.ml[370,12422+34]..src/extension.ml[374,12577+44]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/extension.ml[370,12422+34]..src/extension.ml[370,12422+37])
                                        Tpat_var "acc/4837"
                                      expression (src/extension.ml[371,12462+6]..src/extension.ml[374,12577+44])
                                        Texp_match
                                        expression (src/extension.ml[371,12462+12]..src/extension.ml[371,12462+13])
                                          Texp_ident "x/4836"
                                        [
                                          <case>
                                            pattern (src/extension.ml[372,12481+8]..src/extension.ml[372,12481+31])
                                              Tpat_value
                                              pattern (src/extension.ml[372,12481+8]..src/extension.ml[372,12481+31])
                                                Tpat_construct "Psig_extension"
                                                [
                                                  pattern (src/extension.ml[372,12481+24]..src/extension.ml[372,12481+27])
                                                    Tpat_var "ext/4838"
                                                  pattern (src/extension.ml[372,12481+29]..src/extension.ml[372,12481+30])
                                                    Tpat_any
                                                ]
                                            expression (src/extension.ml[373,12516+10]..src/extension.ml[373,12516+60])
                                              Texp_apply
                                              expression (src/extension.ml[373,12516+14]..src/extension.ml[373,12516+15])
                                                Texp_ident "Ppxlib__!.Import.@"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[373,12516+10]..src/extension.ml[373,12516+13])
                                                    Texp_ident "acc/4837"
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[373,12516+16]..src/extension.ml[373,12516+60])
                                                    Texp_apply
                                                    expression (src/extension.ml[373,12516+16]..src/extension.ml[373,12516+41])
                                                      Texp_ident "unhandled_extension_error/4203"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[373,12516+42]..src/extension.ml[373,12516+56])
                                                          Texp_construct "Signature_item"
                                                          []
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[373,12516+57]..src/extension.ml[373,12516+60])
                                                          Texp_ident "ext/4838"
                                                    ]
                                              ]
                                          <case>
                                            pattern (src/extension.ml[374,12577+8]..src/extension.ml[374,12577+9])
                                              Tpat_value
                                              pattern (src/extension.ml[374,12577+8]..src/extension.ml[374,12577+9])
                                                Tpat_var "x/4839"
                                            expression (src/extension.ml[374,12577+13]..src/extension.ml[374,12577+44])
                                              Texp_apply
                                              expression (src/extension.ml[374,12577+13]..src/extension.ml[374,12577+38])
                                                Texp_send "signature_item_desc"
                                                expression (src/extension.ml[374,12577+13]..src/extension.ml[374,12577+18])
                                                  Texp_ident "super/4684"
                                                Some
                                                  expression (src/extension.ml[374,12577+13]..src/extension.ml[374,12577+38])
                                                    Texp_apply
                                                    expression (src/extension.ml[374,12577+13]..src/extension.ml[374,12577+38])
                                                      Texp_ident "signature_item_desc/4666"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[374,12577+13]..src/extension.ml[374,12577+18])
                                                          Texp_ident "self-1/4835"
                                                    ]
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[374,12577+39]..src/extension.ml[374,12577+40])
                                                    Texp_ident "x/4839"
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[374,12577+41]..src/extension.ml[374,12577+44])
                                                    Texp_ident "acc/4837"
                                              ]
                                        ]
                                        []
                                  ]
                            ]
                    ]
              class_field (src/extension.ml[376,12623+4]..src/extension.ml[379,12757+41])
                Tcf_method "module_expr_desc" Public
                  Concrete Override
                  expression (src/extension.ml[376,12623+29]..src/extension.ml[379,12757+41]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[319,10744+8]..src/extension.ml[319,10744+8]) ghost
                          Tpat_alias "self-1/4841"
                          pattern (src/extension.ml[319,10744+8]..src/extension.ml[319,10744+8]) ghost
                            Tpat_var "self-*/4840"
                        expression (src/extension.ml[376,12623+29]..src/extension.ml[379,12757+41]) ghost
                          Texp_poly
                          None
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[376,12623+29]..src/extension.ml[376,12623+30])
                                  Tpat_var "x/4842"
                                expression (src/extension.ml[376,12623+31]..src/extension.ml[379,12757+41]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/extension.ml[376,12623+31]..src/extension.ml[376,12623+34])
                                        Tpat_var "acc/4843"
                                      expression (src/extension.ml[377,12660+6]..src/extension.ml[379,12757+41])
                                        Texp_match
                                        expression (src/extension.ml[377,12660+12]..src/extension.ml[377,12660+13])
                                          Texp_ident "x/4842"
                                        [
                                          <case>
                                            pattern (src/extension.ml[378,12679+8]..src/extension.ml[378,12679+26])
                                              Tpat_value
                                              pattern (src/extension.ml[378,12679+8]..src/extension.ml[378,12679+26])
                                                Tpat_construct "Pmod_extension"
                                                [
                                                  pattern (src/extension.ml[378,12679+23]..src/extension.ml[378,12679+26])
                                                    Tpat_var "ext/4844"
                                                ]
                                            expression (src/extension.ml[378,12679+30]..src/extension.ml[378,12679+77])
                                              Texp_apply
                                              expression (src/extension.ml[378,12679+34]..src/extension.ml[378,12679+35])
                                                Texp_ident "Ppxlib__!.Import.@"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[378,12679+30]..src/extension.ml[378,12679+33])
                                                    Texp_ident "acc/4843"
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[378,12679+36]..src/extension.ml[378,12679+77])
                                                    Texp_apply
                                                    expression (src/extension.ml[378,12679+36]..src/extension.ml[378,12679+61])
                                                      Texp_ident "unhandled_extension_error/4203"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[378,12679+62]..src/extension.ml[378,12679+73])
                                                          Texp_construct "Module_expr"
                                                          []
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[378,12679+74]..src/extension.ml[378,12679+77])
                                                          Texp_ident "ext/4844"
                                                    ]
                                              ]
                                          <case>
                                            pattern (src/extension.ml[379,12757+8]..src/extension.ml[379,12757+9])
                                              Tpat_value
                                              pattern (src/extension.ml[379,12757+8]..src/extension.ml[379,12757+9])
                                                Tpat_var "x/4845"
                                            expression (src/extension.ml[379,12757+13]..src/extension.ml[379,12757+41])
                                              Texp_apply
                                              expression (src/extension.ml[379,12757+13]..src/extension.ml[379,12757+35])
                                                Texp_send "module_expr_desc"
                                                expression (src/extension.ml[379,12757+13]..src/extension.ml[379,12757+18])
                                                  Texp_ident "super/4684"
                                                Some
                                                  expression (src/extension.ml[379,12757+13]..src/extension.ml[379,12757+35])
                                                    Texp_apply
                                                    expression (src/extension.ml[379,12757+13]..src/extension.ml[379,12757+35])
                                                      Texp_ident "module_expr_desc/4642"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[379,12757+13]..src/extension.ml[379,12757+18])
                                                          Texp_ident "self-1/4841"
                                                    ]
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[379,12757+36]..src/extension.ml[379,12757+37])
                                                    Texp_ident "x/4845"
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[379,12757+38]..src/extension.ml[379,12757+41])
                                                    Texp_ident "acc/4843"
                                              ]
                                        ]
                                        []
                                  ]
                            ]
                    ]
              class_field (src/extension.ml[381,12800+4]..src/extension.ml[385,12955+44])
                Tcf_method "structure_item_desc" Public
                  Concrete Override
                  expression (src/extension.ml[381,12800+32]..src/extension.ml[385,12955+44]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[319,10744+8]..src/extension.ml[319,10744+8]) ghost
                          Tpat_alias "self-1/4847"
                          pattern (src/extension.ml[319,10744+8]..src/extension.ml[319,10744+8]) ghost
                            Tpat_var "self-*/4846"
                        expression (src/extension.ml[381,12800+32]..src/extension.ml[385,12955+44]) ghost
                          Texp_poly
                          None
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[381,12800+32]..src/extension.ml[381,12800+33])
                                  Tpat_var "x/4848"
                                expression (src/extension.ml[381,12800+34]..src/extension.ml[385,12955+44]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/extension.ml[381,12800+34]..src/extension.ml[381,12800+37])
                                        Tpat_var "acc/4849"
                                      expression (src/extension.ml[382,12840+6]..src/extension.ml[385,12955+44])
                                        Texp_match
                                        expression (src/extension.ml[382,12840+12]..src/extension.ml[382,12840+13])
                                          Texp_ident "x/4848"
                                        [
                                          <case>
                                            pattern (src/extension.ml[383,12859+8]..src/extension.ml[383,12859+31])
                                              Tpat_value
                                              pattern (src/extension.ml[383,12859+8]..src/extension.ml[383,12859+31])
                                                Tpat_construct "Pstr_extension"
                                                [
                                                  pattern (src/extension.ml[383,12859+24]..src/extension.ml[383,12859+27])
                                                    Tpat_var "ext/4850"
                                                  pattern (src/extension.ml[383,12859+29]..src/extension.ml[383,12859+30])
                                                    Tpat_any
                                                ]
                                            expression (src/extension.ml[384,12894+10]..src/extension.ml[384,12894+60])
                                              Texp_apply
                                              expression (src/extension.ml[384,12894+14]..src/extension.ml[384,12894+15])
                                                Texp_ident "Ppxlib__!.Import.@"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[384,12894+10]..src/extension.ml[384,12894+13])
                                                    Texp_ident "acc/4849"
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[384,12894+16]..src/extension.ml[384,12894+60])
                                                    Texp_apply
                                                    expression (src/extension.ml[384,12894+16]..src/extension.ml[384,12894+41])
                                                      Texp_ident "unhandled_extension_error/4203"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[384,12894+42]..src/extension.ml[384,12894+56])
                                                          Texp_construct "Structure_item"
                                                          []
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[384,12894+57]..src/extension.ml[384,12894+60])
                                                          Texp_ident "ext/4850"
                                                    ]
                                              ]
                                          <case>
                                            pattern (src/extension.ml[385,12955+8]..src/extension.ml[385,12955+9])
                                              Tpat_value
                                              pattern (src/extension.ml[385,12955+8]..src/extension.ml[385,12955+9])
                                                Tpat_var "x/4851"
                                            expression (src/extension.ml[385,12955+13]..src/extension.ml[385,12955+44])
                                              Texp_apply
                                              expression (src/extension.ml[385,12955+13]..src/extension.ml[385,12955+38])
                                                Texp_send "structure_item_desc"
                                                expression (src/extension.ml[385,12955+13]..src/extension.ml[385,12955+18])
                                                  Texp_ident "super/4684"
                                                Some
                                                  expression (src/extension.ml[385,12955+13]..src/extension.ml[385,12955+38])
                                                    Texp_apply
                                                    expression (src/extension.ml[385,12955+13]..src/extension.ml[385,12955+38])
                                                      Texp_ident "structure_item_desc/4670"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/extension.ml[385,12955+13]..src/extension.ml[385,12955+18])
                                                          Texp_ident "self-1/4847"
                                                    ]
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[385,12955+39]..src/extension.ml[385,12955+40])
                                                    Texp_ident "x/4851"
                                                <arg>
                                                  Nolabel
                                                  expression (src/extension.ml[385,12955+41]..src/extension.ml[385,12955+44])
                                                    Texp_ident "acc/4849"
                                              ]
                                        ]
                                        []
                                  ]
                            ]
                    ]
            ]
    ]
  structure_item (src/extension.ml[388,13007+0]..src/extension.ml[390,13059+40])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/extension.ml[388,13007+4]..src/extension.ml[388,13007+27])
          Tpat_var "error_list_to_exception/4852"
        expression (src/extension.ml[388,13007+30]..src/extension.ml[390,13059+40])
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/extension.ml[389,13046+4]..src/extension.ml[389,13046+6])
                Tpat_construct "[]"
                []
              expression (src/extension.ml[389,13046+10]..src/extension.ml[389,13046+12])
                Texp_construct "()"
                []
            <case>
              pattern (src/extension.ml[390,13059+4]..src/extension.ml[390,13059+12])
                Tpat_construct "::"
                [
                  pattern (src/extension.ml[390,13059+4]..src/extension.ml[390,13059+7])
                    Tpat_var "err/4854"
                  pattern (src/extension.ml[390,13059+11]..src/extension.ml[390,13059+12])
                    Tpat_any
                ]
              expression (src/extension.ml[390,13059+16]..src/extension.ml[390,13059+40])
                Texp_apply
                expression (src/extension.ml[390,13059+16]..src/extension.ml[390,13059+36])
                  Texp_ident "Ppxlib__!.Location.Error.raise"
                [
                  <arg>
                    Nolabel
                    expression (src/extension.ml[390,13059+37]..src/extension.ml[390,13059+40])
                      Texp_ident "err/4854"
                ]
          ]
    ]
  structure_item (src/extension.ml[392,13101+0]..src/extension.ml[443,14742+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/extension.ml[392,13101+4]..src/extension.ml[392,13101+16])
          Tpat_var "check_unused/4856"
        expression (src/extension.ml[393,13120+2]..src/extension.ml[443,14742+5])
          Texp_object          class_structure
            pattern (_none_[0,0+-1].._none_[0,0+-1]) ghost
              Tpat_alias "selfpat-2/4858"
              pattern (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Tpat_alias "selfpat-*/4857"
                pattern (src/extension.ml[393,13120+8]..src/extension.ml[393,13120+8]) ghost
                  Tpat_any
            [
              class_field (src/extension.ml[394,13129+4]..src/extension.ml[394,13129+29])
                Tcf_inherit Fresh
                  class_expr (src/extension.ml[394,13129+12]..src/extension.ml[394,13129+29])
                    class_expr (src/extension.ml[394,13129+12]..src/extension.ml[394,13129+29])
                      Tcl_ident "Ppxlib__!.Ast_traverse.iter"
                      []
                  None
              class_field (src/extension.ml[396,13160+4]..src/extension.ml[398,13236+71])
                Tcf_method "extension" Public
                  Concrete Override
                  expression (src/extension.ml[396,13160+22]..src/extension.ml[398,13236+71]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[393,13120+8]..src/extension.ml[393,13120+8]) ghost
                          Tpat_alias "self-2/5056"
                          pattern (src/extension.ml[393,13120+8]..src/extension.ml[393,13120+8]) ghost
                            Tpat_var "self-*/5055"
                        expression (src/extension.ml[396,13160+22]..src/extension.ml[398,13236+71]) ghost
                          Texp_poly
                          None
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[396,13160+22]..src/extension.ml[396,13160+31])
                                  Tpat_tuple
                                  [
                                    pattern (src/extension.ml[396,13160+23]..src/extension.ml[396,13160+27])
                                      Tpat_var "name/5057"
                                    pattern (src/extension.ml[396,13160+29]..src/extension.ml[396,13160+30])
                                      Tpat_any
                                  ]
                                expression (src/extension.ml[397,13194+6]..src/extension.ml[398,13236+71])
                                  Texp_apply
                                  expression (src/extension.ml[397,13194+6]..src/extension.ml[397,13194+27])
                                    Texp_ident "Ppxlib__!.Location.raise_errorf"
                                  [
                                    <arg>
                                      Optional "loc"
                                      expression (src/extension.ml[397,13194+33]..src/extension.ml[397,13194+41])
                                        Texp_construct "Some"
                                        [
                                          expression (src/extension.ml[397,13194+33]..src/extension.ml[397,13194+41])
                                            Texp_field
                                            expression (src/extension.ml[397,13194+33]..src/extension.ml[397,13194+37])
                                              Texp_ident "name/5057"
                                            "loc"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[398,13236+8]..src/extension.ml[398,13236+71])
                                        Texp_construct "CamlinternalFormatBasics.Format"
                                        [
                                          expression (src/extension.ml[398,13236+8]..src/extension.ml[398,13236+71]) ghost
                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                            [
                                              expression (src/extension.ml[398,13236+8]..src/extension.ml[398,13236+71]) ghost
                                                Texp_constant Const_string("extension not expected here, Ppxlib.Extension needs updating!",(src/extension.ml[398,13236+8]..src/extension.ml[398,13236+71]) ghost,None)
                                              expression (src/extension.ml[398,13236+8]..src/extension.ml[398,13236+71]) ghost
                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                []
                                            ]
                                          expression (src/extension.ml[398,13236+8]..src/extension.ml[398,13236+71]) ghost
                                            Texp_constant Const_string("extension not expected here, Ppxlib.Extension needs updating!",(src/extension.ml[398,13236+8]..src/extension.ml[398,13236+71]) ghost,None)
                                        ]
                                  ]
                            ]
                    ]
              class_field (src/extension.ml[400,13309+4]..src/extension.ml[402,13401+32])
                Tcf_method "core_type_desc" Public
                  Concrete Override
                  expression (src/extension.ml[400,13309+27]..src/extension.ml[402,13401+32]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[393,13120+8]..src/extension.ml[393,13120+8]) ghost
                          Tpat_alias "self-2/5060"
                          pattern (src/extension.ml[393,13120+8]..src/extension.ml[393,13120+8]) ghost
                            Tpat_var "self-*/5059"
                        expression (src/extension.ml[400,13309+27]..src/extension.ml[402,13401+32]) ghost
                          Texp_poly
                          None
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[400,13309+27]..src/extension.ml[400,13309+28])
                                  Tpat_var "x/5061"
                                expression (src/extension.ml[401,13340+6]..src/extension.ml[402,13401+32])
                                  Texp_apply
                                  expression (src/extension.ml[402,13401+6]..src/extension.ml[402,13401+8])
                                    Texp_ident "Stdlib!.|>"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[401,13340+6]..src/extension.ml[401,13340+60])
                                        Texp_apply
                                        expression (src/extension.ml[401,13340+6]..src/extension.ml[401,13340+55])
                                          Texp_send "core_type_desc"
                                          expression (src/extension.ml[401,13340+6]..src/extension.ml[401,13340+40])
                                            Texp_ident "collect_unhandled_extension_errors/4214"
                                          None
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[401,13340+56]..src/extension.ml[401,13340+57])
                                              Texp_ident "x/5061"
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[401,13340+58]..src/extension.ml[401,13340+60])
                                              Texp_construct "[]"
                                              []
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[402,13401+9]..src/extension.ml[402,13401+32])
                                        Texp_ident "error_list_to_exception/4852"
                                  ]
                            ]
                    ]
              class_field (src/extension.ml[404,13435+4]..src/extension.ml[406,13523+32])
                Tcf_method "pattern_desc" Public
                  Concrete Override
                  expression (src/extension.ml[404,13435+25]..src/extension.ml[406,13523+32]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[393,13120+8]..src/extension.ml[393,13120+8]) ghost
                          Tpat_alias "self-2/5063"
                          pattern (src/extension.ml[393,13120+8]..src/extension.ml[393,13120+8]) ghost
                            Tpat_var "self-*/5062"
                        expression (src/extension.ml[404,13435+25]..src/extension.ml[406,13523+32]) ghost
                          Texp_poly
                          None
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[404,13435+25]..src/extension.ml[404,13435+26])
                                  Tpat_var "x/5064"
                                expression (src/extension.ml[405,13464+6]..src/extension.ml[406,13523+32])
                                  Texp_apply
                                  expression (src/extension.ml[406,13523+6]..src/extension.ml[406,13523+8])
                                    Texp_ident "Stdlib!.|>"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[405,13464+6]..src/extension.ml[405,13464+58])
                                        Texp_apply
                                        expression (src/extension.ml[405,13464+6]..src/extension.ml[405,13464+53])
                                          Texp_send "pattern_desc"
                                          expression (src/extension.ml[405,13464+6]..src/extension.ml[405,13464+40])
                                            Texp_ident "collect_unhandled_extension_errors/4214"
                                          None
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[405,13464+54]..src/extension.ml[405,13464+55])
                                              Texp_ident "x/5064"
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[405,13464+56]..src/extension.ml[405,13464+58])
                                              Texp_construct "[]"
                                              []
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[406,13523+9]..src/extension.ml[406,13523+32])
                                        Texp_ident "error_list_to_exception/4852"
                                  ]
                            ]
                    ]
              class_field (src/extension.ml[408,13557+4]..src/extension.ml[410,13651+32])
                Tcf_method "expression_desc" Public
                  Concrete Override
                  expression (src/extension.ml[408,13557+28]..src/extension.ml[410,13651+32]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[393,13120+8]..src/extension.ml[393,13120+8]) ghost
                          Tpat_alias "self-2/5066"
                          pattern (src/extension.ml[393,13120+8]..src/extension.ml[393,13120+8]) ghost
                            Tpat_var "self-*/5065"
                        expression (src/extension.ml[408,13557+28]..src/extension.ml[410,13651+32]) ghost
                          Texp_poly
                          None
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[408,13557+28]..src/extension.ml[408,13557+29])
                                  Tpat_var "x/5067"
                                expression (src/extension.ml[409,13589+6]..src/extension.ml[410,13651+32])
                                  Texp_apply
                                  expression (src/extension.ml[410,13651+6]..src/extension.ml[410,13651+8])
                                    Texp_ident "Stdlib!.|>"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[409,13589+6]..src/extension.ml[409,13589+61])
                                        Texp_apply
                                        expression (src/extension.ml[409,13589+6]..src/extension.ml[409,13589+56])
                                          Texp_send "expression_desc"
                                          expression (src/extension.ml[409,13589+6]..src/extension.ml[409,13589+40])
                                            Texp_ident "collect_unhandled_extension_errors/4214"
                                          None
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[409,13589+57]..src/extension.ml[409,13589+58])
                                              Texp_ident "x/5067"
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[409,13589+59]..src/extension.ml[409,13589+61])
                                              Texp_construct "[]"
                                              []
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[410,13651+9]..src/extension.ml[410,13651+32])
                                        Texp_ident "error_list_to_exception/4852"
                                  ]
                            ]
                    ]
              class_field (src/extension.ml[412,13685+4]..src/extension.ml[414,13779+32])
                Tcf_method "class_type_desc" Public
                  Concrete Override
                  expression (src/extension.ml[412,13685+28]..src/extension.ml[414,13779+32]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[393,13120+8]..src/extension.ml[393,13120+8]) ghost
                          Tpat_alias "self-2/5069"
                          pattern (src/extension.ml[393,13120+8]..src/extension.ml[393,13120+8]) ghost
                            Tpat_var "self-*/5068"
                        expression (src/extension.ml[412,13685+28]..src/extension.ml[414,13779+32]) ghost
                          Texp_poly
                          None
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[412,13685+28]..src/extension.ml[412,13685+29])
                                  Tpat_var "x/5070"
                                expression (src/extension.ml[413,13717+6]..src/extension.ml[414,13779+32])
                                  Texp_apply
                                  expression (src/extension.ml[414,13779+6]..src/extension.ml[414,13779+8])
                                    Texp_ident "Stdlib!.|>"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[413,13717+6]..src/extension.ml[413,13717+61])
                                        Texp_apply
                                        expression (src/extension.ml[413,13717+6]..src/extension.ml[413,13717+56])
                                          Texp_send "class_type_desc"
                                          expression (src/extension.ml[413,13717+6]..src/extension.ml[413,13717+40])
                                            Texp_ident "collect_unhandled_extension_errors/4214"
                                          None
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[413,13717+57]..src/extension.ml[413,13717+58])
                                              Texp_ident "x/5070"
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[413,13717+59]..src/extension.ml[413,13717+61])
                                              Texp_construct "[]"
                                              []
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[414,13779+9]..src/extension.ml[414,13779+32])
                                        Texp_ident "error_list_to_exception/4852"
                                  ]
                            ]
                    ]
              class_field (src/extension.ml[416,13813+4]..src/extension.ml[418,13919+32])
                Tcf_method "class_type_field_desc" Public
                  Concrete Override
                  expression (src/extension.ml[416,13813+34]..src/extension.ml[418,13919+32]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[393,13120+8]..src/extension.ml[393,13120+8]) ghost
                          Tpat_alias "self-2/5072"
                          pattern (src/extension.ml[393,13120+8]..src/extension.ml[393,13120+8]) ghost
                            Tpat_var "self-*/5071"
                        expression (src/extension.ml[416,13813+34]..src/extension.ml[418,13919+32]) ghost
                          Texp_poly
                          None
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[416,13813+34]..src/extension.ml[416,13813+35])
                                  Tpat_var "x/5073"
                                expression (src/extension.ml[417,13851+6]..src/extension.ml[418,13919+32])
                                  Texp_apply
                                  expression (src/extension.ml[418,13919+6]..src/extension.ml[418,13919+8])
                                    Texp_ident "Stdlib!.|>"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[417,13851+6]..src/extension.ml[417,13851+67])
                                        Texp_apply
                                        expression (src/extension.ml[417,13851+6]..src/extension.ml[417,13851+62])
                                          Texp_send "class_type_field_desc"
                                          expression (src/extension.ml[417,13851+6]..src/extension.ml[417,13851+40])
                                            Texp_ident "collect_unhandled_extension_errors/4214"
                                          None
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[417,13851+63]..src/extension.ml[417,13851+64])
                                              Texp_ident "x/5073"
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[417,13851+65]..src/extension.ml[417,13851+67])
                                              Texp_construct "[]"
                                              []
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[418,13919+9]..src/extension.ml[418,13919+32])
                                        Texp_ident "error_list_to_exception/4852"
                                  ]
                            ]
                    ]
              class_field (src/extension.ml[420,13953+4]..src/extension.ml[422,14047+32])
                Tcf_method "class_expr_desc" Public
                  Concrete Override
                  expression (src/extension.ml[420,13953+28]..src/extension.ml[422,14047+32]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[393,13120+8]..src/extension.ml[393,13120+8]) ghost
                          Tpat_alias "self-2/5075"
                          pattern (src/extension.ml[393,13120+8]..src/extension.ml[393,13120+8]) ghost
                            Tpat_var "self-*/5074"
                        expression (src/extension.ml[420,13953+28]..src/extension.ml[422,14047+32]) ghost
                          Texp_poly
                          None
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[420,13953+28]..src/extension.ml[420,13953+29])
                                  Tpat_var "x/5076"
                                expression (src/extension.ml[421,13985+6]..src/extension.ml[422,14047+32])
                                  Texp_apply
                                  expression (src/extension.ml[422,14047+6]..src/extension.ml[422,14047+8])
                                    Texp_ident "Stdlib!.|>"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[421,13985+6]..src/extension.ml[421,13985+61])
                                        Texp_apply
                                        expression (src/extension.ml[421,13985+6]..src/extension.ml[421,13985+56])
                                          Texp_send "class_expr_desc"
                                          expression (src/extension.ml[421,13985+6]..src/extension.ml[421,13985+40])
                                            Texp_ident "collect_unhandled_extension_errors/4214"
                                          None
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[421,13985+57]..src/extension.ml[421,13985+58])
                                              Texp_ident "x/5076"
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[421,13985+59]..src/extension.ml[421,13985+61])
                                              Texp_construct "[]"
                                              []
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[422,14047+9]..src/extension.ml[422,14047+32])
                                        Texp_ident "error_list_to_exception/4852"
                                  ]
                            ]
                    ]
              class_field (src/extension.ml[424,14081+4]..src/extension.ml[426,14177+32])
                Tcf_method "class_field_desc" Public
                  Concrete Override
                  expression (src/extension.ml[424,14081+29]..src/extension.ml[426,14177+32]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[393,13120+8]..src/extension.ml[393,13120+8]) ghost
                          Tpat_alias "self-2/5078"
                          pattern (src/extension.ml[393,13120+8]..src/extension.ml[393,13120+8]) ghost
                            Tpat_var "self-*/5077"
                        expression (src/extension.ml[424,14081+29]..src/extension.ml[426,14177+32]) ghost
                          Texp_poly
                          None
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[424,14081+29]..src/extension.ml[424,14081+30])
                                  Tpat_var "x/5079"
                                expression (src/extension.ml[425,14114+6]..src/extension.ml[426,14177+32])
                                  Texp_apply
                                  expression (src/extension.ml[426,14177+6]..src/extension.ml[426,14177+8])
                                    Texp_ident "Stdlib!.|>"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[425,14114+6]..src/extension.ml[425,14114+62])
                                        Texp_apply
                                        expression (src/extension.ml[425,14114+6]..src/extension.ml[425,14114+57])
                                          Texp_send "class_field_desc"
                                          expression (src/extension.ml[425,14114+6]..src/extension.ml[425,14114+40])
                                            Texp_ident "collect_unhandled_extension_errors/4214"
                                          None
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[425,14114+58]..src/extension.ml[425,14114+59])
                                              Texp_ident "x/5079"
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[425,14114+60]..src/extension.ml[425,14114+62])
                                              Texp_construct "[]"
                                              []
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[426,14177+9]..src/extension.ml[426,14177+32])
                                        Texp_ident "error_list_to_exception/4852"
                                  ]
                            ]
                    ]
              class_field (src/extension.ml[428,14211+4]..src/extension.ml[430,14307+32])
                Tcf_method "module_type_desc" Public
                  Concrete Override
                  expression (src/extension.ml[428,14211+29]..src/extension.ml[430,14307+32]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[393,13120+8]..src/extension.ml[393,13120+8]) ghost
                          Tpat_alias "self-2/5081"
                          pattern (src/extension.ml[393,13120+8]..src/extension.ml[393,13120+8]) ghost
                            Tpat_var "self-*/5080"
                        expression (src/extension.ml[428,14211+29]..src/extension.ml[430,14307+32]) ghost
                          Texp_poly
                          None
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[428,14211+29]..src/extension.ml[428,14211+30])
                                  Tpat_var "x/5082"
                                expression (src/extension.ml[429,14244+6]..src/extension.ml[430,14307+32])
                                  Texp_apply
                                  expression (src/extension.ml[430,14307+6]..src/extension.ml[430,14307+8])
                                    Texp_ident "Stdlib!.|>"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[429,14244+6]..src/extension.ml[429,14244+62])
                                        Texp_apply
                                        expression (src/extension.ml[429,14244+6]..src/extension.ml[429,14244+57])
                                          Texp_send "module_type_desc"
                                          expression (src/extension.ml[429,14244+6]..src/extension.ml[429,14244+40])
                                            Texp_ident "collect_unhandled_extension_errors/4214"
                                          None
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[429,14244+58]..src/extension.ml[429,14244+59])
                                              Texp_ident "x/5082"
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[429,14244+60]..src/extension.ml[429,14244+62])
                                              Texp_construct "[]"
                                              []
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[430,14307+9]..src/extension.ml[430,14307+32])
                                        Texp_ident "error_list_to_exception/4852"
                                  ]
                            ]
                    ]
              class_field (src/extension.ml[432,14341+4]..src/extension.ml[434,14443+32])
                Tcf_method "signature_item_desc" Public
                  Concrete Override
                  expression (src/extension.ml[432,14341+32]..src/extension.ml[434,14443+32]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[393,13120+8]..src/extension.ml[393,13120+8]) ghost
                          Tpat_alias "self-2/5084"
                          pattern (src/extension.ml[393,13120+8]..src/extension.ml[393,13120+8]) ghost
                            Tpat_var "self-*/5083"
                        expression (src/extension.ml[432,14341+32]..src/extension.ml[434,14443+32]) ghost
                          Texp_poly
                          None
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[432,14341+32]..src/extension.ml[432,14341+33])
                                  Tpat_var "x/5085"
                                expression (src/extension.ml[433,14377+6]..src/extension.ml[434,14443+32])
                                  Texp_apply
                                  expression (src/extension.ml[434,14443+6]..src/extension.ml[434,14443+8])
                                    Texp_ident "Stdlib!.|>"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[433,14377+6]..src/extension.ml[433,14377+65])
                                        Texp_apply
                                        expression (src/extension.ml[433,14377+6]..src/extension.ml[433,14377+60])
                                          Texp_send "signature_item_desc"
                                          expression (src/extension.ml[433,14377+6]..src/extension.ml[433,14377+40])
                                            Texp_ident "collect_unhandled_extension_errors/4214"
                                          None
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[433,14377+61]..src/extension.ml[433,14377+62])
                                              Texp_ident "x/5085"
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[433,14377+63]..src/extension.ml[433,14377+65])
                                              Texp_construct "[]"
                                              []
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[434,14443+9]..src/extension.ml[434,14443+32])
                                        Texp_ident "error_list_to_exception/4852"
                                  ]
                            ]
                    ]
              class_field (src/extension.ml[436,14477+4]..src/extension.ml[438,14573+32])
                Tcf_method "module_expr_desc" Public
                  Concrete Override
                  expression (src/extension.ml[436,14477+29]..src/extension.ml[438,14573+32]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[393,13120+8]..src/extension.ml[393,13120+8]) ghost
                          Tpat_alias "self-2/5087"
                          pattern (src/extension.ml[393,13120+8]..src/extension.ml[393,13120+8]) ghost
                            Tpat_var "self-*/5086"
                        expression (src/extension.ml[436,14477+29]..src/extension.ml[438,14573+32]) ghost
                          Texp_poly
                          None
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[436,14477+29]..src/extension.ml[436,14477+30])
                                  Tpat_var "x/5088"
                                expression (src/extension.ml[437,14510+6]..src/extension.ml[438,14573+32])
                                  Texp_apply
                                  expression (src/extension.ml[438,14573+6]..src/extension.ml[438,14573+8])
                                    Texp_ident "Stdlib!.|>"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[437,14510+6]..src/extension.ml[437,14510+62])
                                        Texp_apply
                                        expression (src/extension.ml[437,14510+6]..src/extension.ml[437,14510+57])
                                          Texp_send "module_expr_desc"
                                          expression (src/extension.ml[437,14510+6]..src/extension.ml[437,14510+40])
                                            Texp_ident "collect_unhandled_extension_errors/4214"
                                          None
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[437,14510+58]..src/extension.ml[437,14510+59])
                                              Texp_ident "x/5088"
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[437,14510+60]..src/extension.ml[437,14510+62])
                                              Texp_construct "[]"
                                              []
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[438,14573+9]..src/extension.ml[438,14573+32])
                                        Texp_ident "error_list_to_exception/4852"
                                  ]
                            ]
                    ]
              class_field (src/extension.ml[440,14607+4]..src/extension.ml[442,14709+32])
                Tcf_method "structure_item_desc" Public
                  Concrete Override
                  expression (src/extension.ml[440,14607+32]..src/extension.ml[442,14709+32]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/extension.ml[393,13120+8]..src/extension.ml[393,13120+8]) ghost
                          Tpat_alias "self-2/5090"
                          pattern (src/extension.ml[393,13120+8]..src/extension.ml[393,13120+8]) ghost
                            Tpat_var "self-*/5089"
                        expression (src/extension.ml[440,14607+32]..src/extension.ml[442,14709+32]) ghost
                          Texp_poly
                          None
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[440,14607+32]..src/extension.ml[440,14607+33])
                                  Tpat_var "x/5091"
                                expression (src/extension.ml[441,14643+6]..src/extension.ml[442,14709+32])
                                  Texp_apply
                                  expression (src/extension.ml[442,14709+6]..src/extension.ml[442,14709+8])
                                    Texp_ident "Stdlib!.|>"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[441,14643+6]..src/extension.ml[441,14643+65])
                                        Texp_apply
                                        expression (src/extension.ml[441,14643+6]..src/extension.ml[441,14643+60])
                                          Texp_send "structure_item_desc"
                                          expression (src/extension.ml[441,14643+6]..src/extension.ml[441,14643+40])
                                            Texp_ident "collect_unhandled_extension_errors/4214"
                                          None
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[441,14643+61]..src/extension.ml[441,14643+62])
                                              Texp_ident "x/5091"
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[441,14643+63]..src/extension.ml[441,14643+65])
                                              Texp_construct "[]"
                                              []
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[442,14709+9]..src/extension.ml[442,14709+32])
                                        Texp_ident "error_list_to_exception/4852"
                                  ]
                            ]
                    ]
            ]
    ]
  structure_item (src/extension.ml[445,14749+0]..src/extension.ml[470,15768+3])
    Tstr_module
    V3/5129
      module_expr (src/extension.ml[445,14749+12]..src/extension.ml[470,15768+3])
        Tmod_structure
        [
          structure_item (src/extension.ml[446,14768+2]..src/extension.ml[446,14768+19])
            Tstr_type Nonrec
            [
              type_declaration t/5092 (src/extension.ml[446,14768+2]..src/extension.ml[446,14768+19])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/extension.ml[446,14768+18]..src/extension.ml[446,14768+19])
                      Ttyp_constr "t/4174"
                      []
            ]
          structure_item (src/extension.ml[448,14789+2]..src/extension.ml[452,14984+20])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[448,14789+6]..src/extension.ml[448,14789+13])
                  Tpat_var "declare/5093"
                expression (src/extension.ml[448,14789+14]..src/extension.ml[452,14984+20]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/extension.ml[448,14789+14]..src/extension.ml[448,14789+18])
                        Tpat_var "name/5095"
                      expression (src/extension.ml[448,14789+19]..src/extension.ml[452,14984+20]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/extension.ml[448,14789+19]..src/extension.ml[448,14789+26])
                              Tpat_var "context/5096"
                            expression (src/extension.ml[448,14789+27]..src/extension.ml[452,14984+20]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/extension.ml[448,14789+27]..src/extension.ml[448,14789+34])
                                    Tpat_var "pattern/5097"
                                  expression (src/extension.ml[448,14789+35]..src/extension.ml[452,14984+20]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/extension.ml[448,14789+35]..src/extension.ml[448,14789+36])
                                          Tpat_var "k/5098"
                                        expression (src/extension.ml[449,14828+4]..src/extension.ml[452,14984+20])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/extension.ml[449,14828+8]..src/extension.ml[449,14828+15])
                                                Tpat_var "pattern/5099"
                                              expression (src/extension.ml[449,14828+18]..src/extension.ml[449,14828+71])
                                                Texp_apply
                                                expression (src/extension.ml[449,14828+18]..src/extension.ml[449,14828+40])
                                                  Texp_ident "Ppxlib__!.Ast_pattern.map_result"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/extension.ml[449,14828+41]..src/extension.ml[449,14828+48])
                                                      Texp_ident "pattern/5097"
                                                  <arg>
                                                    Labelled "f"
                                                    expression (src/extension.ml[449,14828+52]..src/extension.ml[449,14828+71])
                                                      Texp_function
                                                      Nolabel
                                                      [
                                                        <case>
                                                          pattern (src/extension.ml[449,14828+57]..src/extension.ml[449,14828+58])
                                                            Tpat_var "x/5100"
                                                          expression (src/extension.ml[449,14828+62]..src/extension.ml[449,14828+70])
                                                            Texp_construct "Simple"
                                                            [
                                                              expression (src/extension.ml[449,14828+69]..src/extension.ml[449,14828+70])
                                                                Texp_ident "x/5100"
                                                            ]
                                                      ]
                                                ]
                                          ]
                                          expression (src/extension.ml[450,14903+4]..src/extension.ml[452,14984+20])
                                            Texp_construct "T"
                                            [
                                              expression (src/extension.ml[451,14909+6]..src/extension.ml[452,14984+20])
                                                Texp_apply
                                                expression (src/extension.ml[451,14909+7]..src/extension.ml[451,14909+16])
                                                  Texp_ident "M/4124.declare"
                                                [
                                                  <arg>
                                                    Labelled "with_arg"
                                                    expression (src/extension.ml[451,14909+27]..src/extension.ml[451,14909+32])
                                                      Texp_construct "false"
                                                      []
                                                  <arg>
                                                    Nolabel
                                                    expression (src/extension.ml[451,14909+33]..src/extension.ml[451,14909+37])
                                                      Texp_ident "name/5095"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/extension.ml[451,14909+38]..src/extension.ml[451,14909+45])
                                                      Texp_ident "context/5096"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/extension.ml[451,14909+46]..src/extension.ml[451,14909+53])
                                                      Texp_ident "pattern/5099"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/extension.ml[451,14909+54]..src/extension.ml[452,14984+19])
                                                      Texp_function
                                                      Labelled "ctxt"
                                                      [
                                                        <case>
                                                          pattern (src/extension.ml[451,14909+60]..src/extension.ml[451,14909+64])
                                                            Tpat_var "ctxt/5101"
                                                          expression (src/extension.ml[451,14909+65]..src/extension.ml[452,14984+18]) ghost
                                                            Texp_function
                                                            Labelled "arg"
                                                            [
                                                              <case>
                                                                pattern (src/extension.ml[451,14909+70]..src/extension.ml[451,14909+71])
                                                                  Tpat_any
                                                                expression (src/extension.ml[452,14984+11]..src/extension.ml[452,14984+18])
                                                                  Texp_apply
                                                                  expression (src/extension.ml[452,14984+11]..src/extension.ml[452,14984+12])
                                                                    Texp_ident "k/5098"
                                                                  [
                                                                    <arg>
                                                                      Labelled "ctxt"
                                                                      expression (src/extension.ml[452,14984+14]..src/extension.ml[452,14984+18])
                                                                        Texp_ident "ctxt/5101"
                                                                  ]
                                                            ]
                                                      ]
                                                ]
                                            ]
                                    ]
                              ]
                        ]
                  ]
            ]
          structure_item (src/extension.ml[454,15006+2]..src/extension.ml[459,15279+20])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[454,15006+6]..src/extension.ml[454,15006+20])
                  Tpat_var "declare_inline/5103"
                expression (src/extension.ml[454,15006+21]..src/extension.ml[459,15279+20]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/extension.ml[454,15006+21]..src/extension.ml[454,15006+25])
                        Tpat_var "name/5105"
                      expression (src/extension.ml[454,15006+26]..src/extension.ml[459,15279+20]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/extension.ml[454,15006+26]..src/extension.ml[454,15006+33])
                              Tpat_var "context/5106"
                            expression (src/extension.ml[454,15006+34]..src/extension.ml[459,15279+20]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/extension.ml[454,15006+34]..src/extension.ml[454,15006+41])
                                    Tpat_var "pattern/5107"
                                  expression (src/extension.ml[454,15006+42]..src/extension.ml[459,15279+20]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/extension.ml[454,15006+42]..src/extension.ml[454,15006+43])
                                          Tpat_var "k/5108"
                                        expression (src/extension.ml[455,15052+4]..src/extension.ml[459,15279+20])
                                          Texp_sequence
                                          expression (src/extension.ml[455,15052+4]..src/extension.ml[455,15052+69])
                                            Texp_apply
                                            expression (src/extension.ml[455,15052+4]..src/extension.ml[455,15052+28])
                                              Texp_ident "check_context_for_inline/4176"
                                            [
                                              <arg>
                                                Labelled "func"
                                                expression (src/extension.ml[455,15052+43]..src/extension.ml[455,15052+69])
                                                  Texp_constant Const_string("Extension.declare_inline",(src/extension.ml[455,15052+44]..src/extension.ml[455,15052+68]),None)
                                              <arg>
                                                Nolabel
                                                expression (src/extension.ml[455,15052+29]..src/extension.ml[455,15052+36])
                                                  Texp_ident "context/5106"
                                            ]
                                          expression (src/extension.ml[456,15123+4]..src/extension.ml[459,15279+20])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/extension.ml[456,15123+8]..src/extension.ml[456,15123+15])
                                                  Tpat_var "pattern/5109"
                                                expression (src/extension.ml[456,15123+18]..src/extension.ml[456,15123+71])
                                                  Texp_apply
                                                  expression (src/extension.ml[456,15123+18]..src/extension.ml[456,15123+40])
                                                    Texp_ident "Ppxlib__!.Ast_pattern.map_result"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/extension.ml[456,15123+41]..src/extension.ml[456,15123+48])
                                                        Texp_ident "pattern/5107"
                                                    <arg>
                                                      Labelled "f"
                                                      expression (src/extension.ml[456,15123+52]..src/extension.ml[456,15123+71])
                                                        Texp_function
                                                        Nolabel
                                                        [
                                                          <case>
                                                            pattern (src/extension.ml[456,15123+57]..src/extension.ml[456,15123+58])
                                                              Tpat_var "x/5110"
                                                            expression (src/extension.ml[456,15123+62]..src/extension.ml[456,15123+70])
                                                              Texp_construct "Inline"
                                                              [
                                                                expression (src/extension.ml[456,15123+69]..src/extension.ml[456,15123+70])
                                                                  Texp_ident "x/5110"
                                                              ]
                                                        ]
                                                  ]
                                            ]
                                            expression (src/extension.ml[457,15198+4]..src/extension.ml[459,15279+20])
                                              Texp_construct "T"
                                              [
                                                expression (src/extension.ml[458,15204+6]..src/extension.ml[459,15279+20])
                                                  Texp_apply
                                                  expression (src/extension.ml[458,15204+7]..src/extension.ml[458,15204+16])
                                                    Texp_ident "M/4124.declare"
                                                  [
                                                    <arg>
                                                      Labelled "with_arg"
                                                      expression (src/extension.ml[458,15204+27]..src/extension.ml[458,15204+32])
                                                        Texp_construct "false"
                                                        []
                                                    <arg>
                                                      Nolabel
                                                      expression (src/extension.ml[458,15204+33]..src/extension.ml[458,15204+37])
                                                        Texp_ident "name/5105"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/extension.ml[458,15204+38]..src/extension.ml[458,15204+45])
                                                        Texp_ident "context/5106"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/extension.ml[458,15204+46]..src/extension.ml[458,15204+53])
                                                        Texp_ident "pattern/5109"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/extension.ml[458,15204+54]..src/extension.ml[459,15279+19])
                                                        Texp_function
                                                        Labelled "ctxt"
                                                        [
                                                          <case>
                                                            pattern (src/extension.ml[458,15204+60]..src/extension.ml[458,15204+64])
                                                              Tpat_var "ctxt/5111"
                                                            expression (src/extension.ml[458,15204+65]..src/extension.ml[459,15279+18]) ghost
                                                              Texp_function
                                                              Labelled "arg"
                                                              [
                                                                <case>
                                                                  pattern (src/extension.ml[458,15204+70]..src/extension.ml[458,15204+71])
                                                                    Tpat_any
                                                                  expression (src/extension.ml[459,15279+11]..src/extension.ml[459,15279+18])
                                                                    Texp_apply
                                                                    expression (src/extension.ml[459,15279+11]..src/extension.ml[459,15279+12])
                                                                      Texp_ident "k/5108"
                                                                    [
                                                                      <arg>
                                                                        Labelled "ctxt"
                                                                        expression (src/extension.ml[459,15279+14]..src/extension.ml[459,15279+18])
                                                                          Texp_ident "ctxt/5111"
                                                                    ]
                                                              ]
                                                        ]
                                                  ]
                                              ]
                                    ]
                              ]
                        ]
                  ]
            ]
          structure_item (src/extension.ml[461,15301+2]..src/extension.ml[463,15429+55])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[461,15301+6]..src/extension.ml[461,15301+27])
                  Tpat_var "declare_with_path_arg/5113"
                expression (src/extension.ml[461,15301+28]..src/extension.ml[463,15429+55]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/extension.ml[461,15301+28]..src/extension.ml[461,15301+32])
                        Tpat_var "name/5115"
                      expression (src/extension.ml[461,15301+33]..src/extension.ml[463,15429+55]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/extension.ml[461,15301+33]..src/extension.ml[461,15301+40])
                              Tpat_var "context/5116"
                            expression (src/extension.ml[461,15301+41]..src/extension.ml[463,15429+55]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/extension.ml[461,15301+41]..src/extension.ml[461,15301+48])
                                    Tpat_var "pattern/5117"
                                  expression (src/extension.ml[461,15301+49]..src/extension.ml[463,15429+55]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/extension.ml[461,15301+49]..src/extension.ml[461,15301+50])
                                          Tpat_var "k/5118"
                                        expression (src/extension.ml[462,15354+4]..src/extension.ml[463,15429+55])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/extension.ml[462,15354+8]..src/extension.ml[462,15354+15])
                                                Tpat_var "pattern/5119"
                                              expression (src/extension.ml[462,15354+18]..src/extension.ml[462,15354+71])
                                                Texp_apply
                                                expression (src/extension.ml[462,15354+18]..src/extension.ml[462,15354+40])
                                                  Texp_ident "Ppxlib__!.Ast_pattern.map_result"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/extension.ml[462,15354+41]..src/extension.ml[462,15354+48])
                                                      Texp_ident "pattern/5117"
                                                  <arg>
                                                    Labelled "f"
                                                    expression (src/extension.ml[462,15354+52]..src/extension.ml[462,15354+71])
                                                      Texp_function
                                                      Nolabel
                                                      [
                                                        <case>
                                                          pattern (src/extension.ml[462,15354+57]..src/extension.ml[462,15354+58])
                                                            Tpat_var "x/5120"
                                                          expression (src/extension.ml[462,15354+62]..src/extension.ml[462,15354+70])
                                                            Texp_construct "Simple"
                                                            [
                                                              expression (src/extension.ml[462,15354+69]..src/extension.ml[462,15354+70])
                                                                Texp_ident "x/5120"
                                                            ]
                                                      ]
                                                ]
                                          ]
                                          expression (src/extension.ml[463,15429+4]..src/extension.ml[463,15429+55])
                                            Texp_construct "T"
                                            [
                                              expression (src/extension.ml[463,15429+6]..src/extension.ml[463,15429+55])
                                                Texp_apply
                                                expression (src/extension.ml[463,15429+7]..src/extension.ml[463,15429+16])
                                                  Texp_ident "M/4124.declare"
                                                [
                                                  <arg>
                                                    Labelled "with_arg"
                                                    expression (src/extension.ml[463,15429+27]..src/extension.ml[463,15429+31])
                                                      Texp_construct "true"
                                                      []
                                                  <arg>
                                                    Nolabel
                                                    expression (src/extension.ml[463,15429+32]..src/extension.ml[463,15429+36])
                                                      Texp_ident "name/5115"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/extension.ml[463,15429+37]..src/extension.ml[463,15429+44])
                                                      Texp_ident "context/5116"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/extension.ml[463,15429+45]..src/extension.ml[463,15429+52])
                                                      Texp_ident "pattern/5119"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/extension.ml[463,15429+53]..src/extension.ml[463,15429+54])
                                                      Texp_ident "k/5118"
                                                ]
                                            ]
                                    ]
                              ]
                        ]
                  ]
            ]
          structure_item (src/extension.ml[465,15486+2]..src/extension.ml[469,15712+55])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[465,15486+6]..src/extension.ml[465,15486+34])
                  Tpat_var "declare_inline_with_path_arg/5121"
                expression (src/extension.ml[465,15486+35]..src/extension.ml[469,15712+55]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/extension.ml[465,15486+35]..src/extension.ml[465,15486+39])
                        Tpat_var "name/5123"
                      expression (src/extension.ml[465,15486+40]..src/extension.ml[469,15712+55]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/extension.ml[465,15486+40]..src/extension.ml[465,15486+47])
                              Tpat_var "context/5124"
                            expression (src/extension.ml[465,15486+48]..src/extension.ml[469,15712+55]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/extension.ml[465,15486+48]..src/extension.ml[465,15486+55])
                                    Tpat_var "pattern/5125"
                                  expression (src/extension.ml[465,15486+56]..src/extension.ml[469,15712+55]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/extension.ml[465,15486+56]..src/extension.ml[465,15486+57])
                                          Tpat_var "k/5126"
                                        expression (src/extension.ml[466,15546+4]..src/extension.ml[469,15712+55])
                                          Texp_sequence
                                          expression (src/extension.ml[466,15546+4]..src/extension.ml[467,15583+52])
                                            Texp_apply
                                            expression (src/extension.ml[466,15546+4]..src/extension.ml[466,15546+28])
                                              Texp_ident "check_context_for_inline/4176"
                                            [
                                              <arg>
                                                Labelled "func"
                                                expression (src/extension.ml[467,15583+12]..src/extension.ml[467,15583+52])
                                                  Texp_constant Const_string("Extension.declare_inline_with_path_arg",(src/extension.ml[467,15583+13]..src/extension.ml[467,15583+51]),None)
                                              <arg>
                                                Nolabel
                                                expression (src/extension.ml[466,15546+29]..src/extension.ml[466,15546+36])
                                                  Texp_ident "context/5124"
                                            ]
                                          expression (src/extension.ml[468,15637+4]..src/extension.ml[469,15712+55])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/extension.ml[468,15637+8]..src/extension.ml[468,15637+15])
                                                  Tpat_var "pattern/5127"
                                                expression (src/extension.ml[468,15637+18]..src/extension.ml[468,15637+71])
                                                  Texp_apply
                                                  expression (src/extension.ml[468,15637+18]..src/extension.ml[468,15637+40])
                                                    Texp_ident "Ppxlib__!.Ast_pattern.map_result"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/extension.ml[468,15637+41]..src/extension.ml[468,15637+48])
                                                        Texp_ident "pattern/5125"
                                                    <arg>
                                                      Labelled "f"
                                                      expression (src/extension.ml[468,15637+52]..src/extension.ml[468,15637+71])
                                                        Texp_function
                                                        Nolabel
                                                        [
                                                          <case>
                                                            pattern (src/extension.ml[468,15637+57]..src/extension.ml[468,15637+58])
                                                              Tpat_var "x/5128"
                                                            expression (src/extension.ml[468,15637+62]..src/extension.ml[468,15637+70])
                                                              Texp_construct "Inline"
                                                              [
                                                                expression (src/extension.ml[468,15637+69]..src/extension.ml[468,15637+70])
                                                                  Texp_ident "x/5128"
                                                              ]
                                                        ]
                                                  ]
                                            ]
                                            expression (src/extension.ml[469,15712+4]..src/extension.ml[469,15712+55])
                                              Texp_construct "T"
                                              [
                                                expression (src/extension.ml[469,15712+6]..src/extension.ml[469,15712+55])
                                                  Texp_apply
                                                  expression (src/extension.ml[469,15712+7]..src/extension.ml[469,15712+16])
                                                    Texp_ident "M/4124.declare"
                                                  [
                                                    <arg>
                                                      Labelled "with_arg"
                                                      expression (src/extension.ml[469,15712+27]..src/extension.ml[469,15712+31])
                                                        Texp_construct "true"
                                                        []
                                                    <arg>
                                                      Nolabel
                                                      expression (src/extension.ml[469,15712+32]..src/extension.ml[469,15712+36])
                                                        Texp_ident "name/5123"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/extension.ml[469,15712+37]..src/extension.ml[469,15712+44])
                                                        Texp_ident "context/5124"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/extension.ml[469,15712+45]..src/extension.ml[469,15712+52])
                                                        Texp_ident "pattern/5127"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/extension.ml[469,15712+53]..src/extension.ml[469,15712+54])
                                                        Texp_ident "k/5126"
                                                  ]
                                              ]
                                    ]
                              ]
                        ]
                  ]
            ]
        ]
  structure_item (src/extension.ml[472,15773+0]..src/extension.ml[474,15844+53])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/extension.ml[472,15773+4]..src/extension.ml[472,15773+11])
          Tpat_var "declare/5130"
        expression (src/extension.ml[472,15773+12]..src/extension.ml[474,15844+53]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/extension.ml[472,15773+12]..src/extension.ml[472,15773+16])
                Tpat_var "name/5132"
              expression (src/extension.ml[472,15773+17]..src/extension.ml[474,15844+53]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/extension.ml[472,15773+17]..src/extension.ml[472,15773+24])
                      Tpat_var "context/5133"
                    expression (src/extension.ml[472,15773+25]..src/extension.ml[474,15844+53]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/extension.ml[472,15773+25]..src/extension.ml[472,15773+32])
                            Tpat_var "pattern/5134"
                          expression (src/extension.ml[472,15773+33]..src/extension.ml[474,15844+53]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[472,15773+33]..src/extension.ml[472,15773+34])
                                  Tpat_var "f/5135"
                                expression (src/extension.ml[473,15810+2]..src/extension.ml[474,15844+53])
                                  Texp_apply
                                  expression (src/extension.ml[473,15810+2]..src/extension.ml[473,15810+12])
                                    Texp_ident "V3/5129.declare"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[473,15810+13]..src/extension.ml[473,15810+17])
                                        Texp_ident "name/5132"
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[473,15810+18]..src/extension.ml[473,15810+25])
                                        Texp_ident "context/5133"
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[473,15810+26]..src/extension.ml[473,15810+33])
                                        Texp_ident "pattern/5134"
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[474,15844+4]..src/extension.ml[474,15844+53])
                                        Texp_apply
                                        expression (src/extension.ml[474,15844+5]..src/extension.ml[474,15844+50])
                                          Texp_ident "Ppxlib__!.Expansion_context.Extension.with_loc_and_path"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[474,15844+51]..src/extension.ml[474,15844+52])
                                              Texp_ident "f/5135"
                                        ]
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/extension.ml[476,15899+0]..src/extension.ml[478,15984+53])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/extension.ml[476,15899+4]..src/extension.ml[476,15899+18])
          Tpat_var "declare_inline/5136"
        expression (src/extension.ml[476,15899+19]..src/extension.ml[478,15984+53]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/extension.ml[476,15899+19]..src/extension.ml[476,15899+23])
                Tpat_var "name/5138"
              expression (src/extension.ml[476,15899+24]..src/extension.ml[478,15984+53]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/extension.ml[476,15899+24]..src/extension.ml[476,15899+31])
                      Tpat_var "context/5139"
                    expression (src/extension.ml[476,15899+32]..src/extension.ml[478,15984+53]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/extension.ml[476,15899+32]..src/extension.ml[476,15899+39])
                            Tpat_var "pattern/5140"
                          expression (src/extension.ml[476,15899+40]..src/extension.ml[478,15984+53]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[476,15899+40]..src/extension.ml[476,15899+41])
                                  Tpat_var "f/5141"
                                expression (src/extension.ml[477,15943+2]..src/extension.ml[478,15984+53])
                                  Texp_apply
                                  expression (src/extension.ml[477,15943+2]..src/extension.ml[477,15943+19])
                                    Texp_ident "V3/5129.declare_inline"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[477,15943+20]..src/extension.ml[477,15943+24])
                                        Texp_ident "name/5138"
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[477,15943+25]..src/extension.ml[477,15943+32])
                                        Texp_ident "context/5139"
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[477,15943+33]..src/extension.ml[477,15943+40])
                                        Texp_ident "pattern/5140"
                                    <arg>
                                      Nolabel
                                      expression (src/extension.ml[478,15984+4]..src/extension.ml[478,15984+53])
                                        Texp_apply
                                        expression (src/extension.ml[478,15984+5]..src/extension.ml[478,15984+50])
                                          Texp_ident "Ppxlib__!.Expansion_context.Extension.with_loc_and_path"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[478,15984+51]..src/extension.ml[478,15984+52])
                                              Texp_ident "f/5141"
                                        ]
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/extension.ml[480,16039+0]..src/extension.ml[483,16225+54])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/extension.ml[480,16039+4]..src/extension.ml[480,16039+25])
          Tpat_var "declare_with_path_arg/5142"
        expression (src/extension.ml[480,16039+26]..src/extension.ml[483,16225+54]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/extension.ml[480,16039+26]..src/extension.ml[480,16039+30])
                Tpat_var "name/5144"
              expression (src/extension.ml[480,16039+31]..src/extension.ml[483,16225+54]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/extension.ml[480,16039+31]..src/extension.ml[480,16039+38])
                      Tpat_var "context/5145"
                    expression (src/extension.ml[480,16039+39]..src/extension.ml[483,16225+54]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/extension.ml[480,16039+39]..src/extension.ml[480,16039+46])
                            Tpat_var "pattern/5146"
                          expression (src/extension.ml[480,16039+47]..src/extension.ml[483,16225+54]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[480,16039+47]..src/extension.ml[480,16039+48])
                                  Tpat_var "k/5147"
                                expression (src/extension.ml[481,16090+2]..src/extension.ml[483,16225+54])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/extension.ml[481,16090+6]..src/extension.ml[481,16090+8])
                                        Tpat_var "k'/5148"
                                      expression (src/extension.ml[481,16090+11]..src/extension.ml[481,16090+58])
                                        Texp_apply
                                        expression (src/extension.ml[481,16090+11]..src/extension.ml[481,16090+56])
                                          Texp_ident "Ppxlib__!.Expansion_context.Extension.with_loc_and_path"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[481,16090+57]..src/extension.ml[481,16090+58])
                                              Texp_ident "k/5147"
                                        ]
                                  ]
                                  expression (src/extension.ml[482,16152+2]..src/extension.ml[483,16225+54])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/extension.ml[482,16152+6]..src/extension.ml[482,16152+13])
                                          Tpat_var "pattern/5149"
                                        expression (src/extension.ml[482,16152+16]..src/extension.ml[482,16152+69])
                                          Texp_apply
                                          expression (src/extension.ml[482,16152+16]..src/extension.ml[482,16152+38])
                                            Texp_ident "Ppxlib__!.Ast_pattern.map_result"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/extension.ml[482,16152+39]..src/extension.ml[482,16152+46])
                                                Texp_ident "pattern/5146"
                                            <arg>
                                              Labelled "f"
                                              expression (src/extension.ml[482,16152+50]..src/extension.ml[482,16152+69])
                                                Texp_function
                                                Nolabel
                                                [
                                                  <case>
                                                    pattern (src/extension.ml[482,16152+55]..src/extension.ml[482,16152+56])
                                                      Tpat_var "x/5150"
                                                    expression (src/extension.ml[482,16152+60]..src/extension.ml[482,16152+68])
                                                      Texp_construct "Simple"
                                                      [
                                                        expression (src/extension.ml[482,16152+67]..src/extension.ml[482,16152+68])
                                                          Texp_ident "x/5150"
                                                      ]
                                                ]
                                          ]
                                    ]
                                    expression (src/extension.ml[483,16225+2]..src/extension.ml[483,16225+54])
                                      Texp_construct "T"
                                      [
                                        expression (src/extension.ml[483,16225+4]..src/extension.ml[483,16225+54])
                                          Texp_apply
                                          expression (src/extension.ml[483,16225+5]..src/extension.ml[483,16225+14])
                                            Texp_ident "M/4124.declare"
                                          [
                                            <arg>
                                              Labelled "with_arg"
                                              expression (src/extension.ml[483,16225+25]..src/extension.ml[483,16225+29])
                                                Texp_construct "true"
                                                []
                                            <arg>
                                              Nolabel
                                              expression (src/extension.ml[483,16225+30]..src/extension.ml[483,16225+34])
                                                Texp_ident "name/5144"
                                            <arg>
                                              Nolabel
                                              expression (src/extension.ml[483,16225+35]..src/extension.ml[483,16225+42])
                                                Texp_ident "context/5145"
                                            <arg>
                                              Nolabel
                                              expression (src/extension.ml[483,16225+43]..src/extension.ml[483,16225+50])
                                                Texp_ident "pattern/5149"
                                            <arg>
                                              Nolabel
                                              expression (src/extension.ml[483,16225+51]..src/extension.ml[483,16225+53])
                                                Texp_ident "k'/5148"
                                          ]
                                      ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/extension.ml[485,16281+0]..src/extension.ml[490,16561+54])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/extension.ml[485,16281+4]..src/extension.ml[485,16281+32])
          Tpat_var "declare_inline_with_path_arg/5151"
        expression (src/extension.ml[485,16281+33]..src/extension.ml[490,16561+54]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/extension.ml[485,16281+33]..src/extension.ml[485,16281+37])
                Tpat_var "name/5153"
              expression (src/extension.ml[485,16281+38]..src/extension.ml[490,16561+54]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/extension.ml[485,16281+38]..src/extension.ml[485,16281+45])
                      Tpat_var "context/5154"
                    expression (src/extension.ml[485,16281+46]..src/extension.ml[490,16561+54]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/extension.ml[485,16281+46]..src/extension.ml[485,16281+53])
                            Tpat_var "pattern/5155"
                          expression (src/extension.ml[485,16281+54]..src/extension.ml[490,16561+54]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/extension.ml[485,16281+54]..src/extension.ml[485,16281+55])
                                  Tpat_var "k/5156"
                                expression (src/extension.ml[486,16339+2]..src/extension.ml[490,16561+54])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/extension.ml[486,16339+6]..src/extension.ml[486,16339+8])
                                        Tpat_var "k'/5157"
                                      expression (src/extension.ml[486,16339+11]..src/extension.ml[486,16339+58])
                                        Texp_apply
                                        expression (src/extension.ml[486,16339+11]..src/extension.ml[486,16339+56])
                                          Texp_ident "Ppxlib__!.Expansion_context.Extension.with_loc_and_path"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/extension.ml[486,16339+57]..src/extension.ml[486,16339+58])
                                              Texp_ident "k/5156"
                                        ]
                                  ]
                                  expression (src/extension.ml[487,16401+2]..src/extension.ml[490,16561+54])
                                    Texp_sequence
                                    expression (src/extension.ml[487,16401+2]..src/extension.ml[488,16436+50])
                                      Texp_apply
                                      expression (src/extension.ml[487,16401+2]..src/extension.ml[487,16401+26])
                                        Texp_ident "check_context_for_inline/4176"
                                      [
                                        <arg>
                                          Labelled "func"
                                          expression (src/extension.ml[488,16436+10]..src/extension.ml[488,16436+50])
                                            Texp_constant Const_string("Extension.declare_inline_with_path_arg",(src/extension.ml[488,16436+11]..src/extension.ml[488,16436+49]),None)
                                        <arg>
                                          Nolabel
                                          expression (src/extension.ml[487,16401+27]..src/extension.ml[487,16401+34])
                                            Texp_ident "context/5154"
                                      ]
                                    expression (src/extension.ml[489,16488+2]..src/extension.ml[490,16561+54])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/extension.ml[489,16488+6]..src/extension.ml[489,16488+13])
                                            Tpat_var "pattern/5158"
                                          expression (src/extension.ml[489,16488+16]..src/extension.ml[489,16488+69])
                                            Texp_apply
                                            expression (src/extension.ml[489,16488+16]..src/extension.ml[489,16488+38])
                                              Texp_ident "Ppxlib__!.Ast_pattern.map_result"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/extension.ml[489,16488+39]..src/extension.ml[489,16488+46])
                                                  Texp_ident "pattern/5155"
                                              <arg>
                                                Labelled "f"
                                                expression (src/extension.ml[489,16488+50]..src/extension.ml[489,16488+69])
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (src/extension.ml[489,16488+55]..src/extension.ml[489,16488+56])
                                                        Tpat_var "x/5159"
                                                      expression (src/extension.ml[489,16488+60]..src/extension.ml[489,16488+68])
                                                        Texp_construct "Inline"
                                                        [
                                                          expression (src/extension.ml[489,16488+67]..src/extension.ml[489,16488+68])
                                                            Texp_ident "x/5159"
                                                        ]
                                                  ]
                                            ]
                                      ]
                                      expression (src/extension.ml[490,16561+2]..src/extension.ml[490,16561+54])
                                        Texp_construct "T"
                                        [
                                          expression (src/extension.ml[490,16561+4]..src/extension.ml[490,16561+54])
                                            Texp_apply
                                            expression (src/extension.ml[490,16561+5]..src/extension.ml[490,16561+14])
                                              Texp_ident "M/4124.declare"
                                            [
                                              <arg>
                                                Labelled "with_arg"
                                                expression (src/extension.ml[490,16561+25]..src/extension.ml[490,16561+29])
                                                  Texp_construct "true"
                                                  []
                                              <arg>
                                                Nolabel
                                                expression (src/extension.ml[490,16561+30]..src/extension.ml[490,16561+34])
                                                  Texp_ident "name/5153"
                                              <arg>
                                                Nolabel
                                                expression (src/extension.ml[490,16561+35]..src/extension.ml[490,16561+42])
                                                  Texp_ident "context/5154"
                                              <arg>
                                                Nolabel
                                                expression (src/extension.ml[490,16561+43]..src/extension.ml[490,16561+50])
                                                  Texp_ident "pattern/5158"
                                              <arg>
                                                Nolabel
                                                expression (src/extension.ml[490,16561+51]..src/extension.ml[490,16561+53])
                                                  Texp_ident "k'/5157"
                                            ]
                                        ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/extension.ml[492,16617+0]..src/extension.ml[496,16867+51])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/extension.ml[492,16617+4]..src/extension.ml[492,16617+24])
          Tpat_var "__declare_ppx_import/5160"
        expression (src/extension.ml[492,16617+25]..src/extension.ml[496,16867+51]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/extension.ml[492,16617+25]..src/extension.ml[492,16617+29])
                Tpat_var "name/5162"
              expression (src/extension.ml[492,16617+30]..src/extension.ml[496,16867+51]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/extension.ml[492,16617+30]..src/extension.ml[492,16617+36])
                      Tpat_var "expand/5163"
                    expression (src/extension.ml[495,16786+2]..src/extension.ml[496,16867+51])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/extension.ml[495,16786+6]..src/extension.ml[495,16786+13])
                            Tpat_var "pattern/5164"
                          expression (src/extension.ml[495,16786+16]..src/extension.ml[495,16786+77])
                            Texp_open Fresh
                            module_expr (src/extension.ml[495,16786+16]..src/extension.ml[495,16786+27])
                              Tmod_ident "Ppxlib__!.Ast_pattern"
                            expression (src/extension.ml[495,16786+29]..src/extension.ml[495,16786+76])
                              Texp_apply
                              expression (src/extension.ml[495,16786+29]..src/extension.ml[495,16786+33])
                                Texp_ident "Ppxlib__!.Ast_pattern.pstr"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/extension.ml[495,16786+34]..src/extension.ml[495,16786+76])
                                    Texp_apply
                                    expression (src/extension.ml[495,16786+68]..src/extension.ml[495,16786+71])
                                      Texp_ident "Ppxlib__!.Ast_pattern.^::"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/extension.ml[495,16786+35]..src/extension.ml[495,16786+67])
                                          Texp_apply
                                          expression (src/extension.ml[495,16786+35]..src/extension.ml[495,16786+44])
                                            Texp_ident "Ppxlib__!.Ast_pattern.pstr_type"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/extension.ml[495,16786+45]..src/extension.ml[495,16786+54])
                                                Texp_ident "Ppxlib__!.Ast_pattern.recursive"
                                            <arg>
                                              Nolabel
                                              expression (src/extension.ml[495,16786+55]..src/extension.ml[495,16786+67])
                                                Texp_apply
                                                expression (src/extension.ml[495,16786+59]..src/extension.ml[495,16786+62])
                                                  Texp_ident "Ppxlib__!.Ast_pattern.^::"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/extension.ml[495,16786+56]..src/extension.ml[495,16786+58])
                                                      Texp_ident "Ppxlib__!.Ast_pattern.__"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/extension.ml[495,16786+63]..src/extension.ml[495,16786+66])
                                                      Texp_ident "Ppxlib__!.Ast_pattern.nil"
                                                ]
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/extension.ml[495,16786+72]..src/extension.ml[495,16786+75])
                                          Texp_ident "Ppxlib__!.Ast_pattern.nil"
                                    ]
                              ]
                      ]
                      expression (src/extension.ml[496,16867+2]..src/extension.ml[496,16867+51])
                        Texp_apply
                        expression (src/extension.ml[496,16867+2]..src/extension.ml[496,16867+12])
                          Texp_ident "V3/5129.declare"
                        [
                          <arg>
                            Nolabel
                            expression (src/extension.ml[496,16867+13]..src/extension.ml[496,16867+17])
                              Texp_ident "name/5162"
                          <arg>
                            Nolabel
                            expression (src/extension.ml[496,16867+18]..src/extension.ml[496,16867+36])
                              Texp_construct "Context.Ppx_import"
                              []
                          <arg>
                            Nolabel
                            expression (src/extension.ml[496,16867+37]..src/extension.ml[496,16867+44])
                              Texp_ident "pattern/5164"
                          <arg>
                            Nolabel
                            expression (src/extension.ml[496,16867+45]..src/extension.ml[496,16867+51])
                              Texp_ident "expand/5163"
                        ]
                ]
          ]
    ]
  structure_item (src/extension.ml[498,16920+0]..src/extension.ml[503,17022+3])
    Tstr_module
    V2/5168
      module_expr (src/extension.ml[498,16920+12]..src/extension.ml[503,17022+3])
        Tmod_structure
        [
          structure_item (src/extension.ml[499,16939+2]..src/extension.ml[499,16939+19])
            Tstr_type Nonrec
            [
              type_declaration t/5165 (src/extension.ml[499,16939+2]..src/extension.ml[499,16939+19])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/extension.ml[499,16939+18]..src/extension.ml[499,16939+19])
                      Ttyp_constr "t/4174"
                      []
            ]
          structure_item (src/extension.ml[501,16960+2]..src/extension.ml[501,16960+23])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[501,16960+6]..src/extension.ml[501,16960+13])
                  Tpat_var "declare/5166"
                expression (src/extension.ml[501,16960+16]..src/extension.ml[501,16960+23])
                  Texp_ident "declare/5130"
            ]
          structure_item (src/extension.ml[502,16984+2]..src/extension.ml[502,16984+37])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/extension.ml[502,16984+6]..src/extension.ml[502,16984+20])
                  Tpat_var "declare_inline/5167"
                expression (src/extension.ml[502,16984+23]..src/extension.ml[502,16984+37])
                  Texp_ident "declare_inline/5136"
            ]
        ]
]

(setglobal Ppxlib__Extension!
  (let
    (shared/20013 =a
       [0:
        #"arg_label" #"array" #"attribute" #"attributes" #"binding_op"
        #"bool" #"case" #"cases" #"char" #"class_declaration"
        #"class_description" #"class_expr" #"class_expr_desc" #"class_field"
        #"class_field_desc" #"class_field_kind" #"class_infos"
        #"class_signature" #"class_structure" #"class_type"
        #"class_type_declaration" #"class_type_desc" #"class_type_field"
        #"class_type_field_desc" #"closed_flag" #"constant"
        #"constructor_arguments" #"constructor_declaration" #"core_type"
        #"core_type_desc" #"direction_flag" #"directive_argument"
        #"directive_argument_desc" #"expression" #"expression_desc"
        #"extension" #"extension_constructor" #"extension_constructor_kind"
        #"functor_parameter" #"include_declaration" #"include_description"
        #"include_infos" #"injectivity" #"int" #"label" #"label_declaration"
        #"letop" #"list" #"loc" #"location" #"location_stack" #"longident"
        #"longident_loc" #"module_binding" #"module_declaration"
        #"module_expr" #"module_expr_desc" #"module_substitution"
        #"module_type" #"module_type_declaration" #"module_type_desc"
        #"mutable_flag" #"object_field" #"object_field_desc"
        #"open_declaration" #"open_description" #"open_infos" #"option"
        #"override_flag" #"package_type" #"pattern" #"pattern_desc"
        #"payload" #"position" #"private_flag" #"rec_flag" #"row_field"
        #"row_field_desc" #"signature" #"signature_item"
        #"signature_item_desc" #"string" #"structure" #"structure_item"
        #"structure_item_desc" #"toplevel_directive" #"toplevel_phrase"
        #"type_declaration" #"type_exception" #"type_extension" #"type_kind"
        #"value_binding" #"value_description" #"variance" #"virtual_flag"
        #"with_constraint"]
     shared/20021 =a
       [0:
        #"bool" #"cases" #"case" #"char" #"value_binding"
        #"extension_constructor_kind" #"core_type" #"structure" #"list"
        #"label_declaration" #"module_binding" #"position"
        #"toplevel_directive" #"directive_argument" #"object_field_desc"
        #"class_type_field_desc" #"open_infos" #"pattern_desc"
        #"signature_item" #"extension_constructor" #"toplevel_phrase"
        #"extension" #"location" #"variance" #"package_type" #"virtual_flag"
        #"module_type_desc" #"rec_flag" #"payload" #"type_exception" #"label"
        #"letop" #"location_stack" #"value_description" #"module_declaration"
        #"class_type_declaration" #"longident_loc" #"closed_flag"
        #"directive_argument_desc" #"attribute" #"class_infos"
        #"signature_item_desc" #"int" #"loc" #"row_field_desc"
        #"override_flag" #"structure_item_desc" #"class_field_desc"
        #"binding_op" #"module_expr_desc" #"class_signature"
        #"type_extension" #"class_field_kind" #"module_type_declaration"
        #"arg_label" #"row_field" #"longident" #"string" #"pattern"
        #"include_description" #"signature" #"class_type_field" #"attributes"
        #"open_description" #"with_constraint" #"include_declaration"
        #"class_type_desc" #"private_flag" #"injectivity" #"open_declaration"
        #"object_field" #"array" #"constant" #"class_expr"
        #"functor_parameter" #"direction_flag" #"core_type_desc"
        #"type_declaration" #"constructor_declaration" #"option" #"type_kind"
        #"module_expr" #"module_substitution" #"class_description"
        #"expression" #"class_type" #"structure_item" #"include_infos"
        #"class_declaration" #"module_type" #"class_expr_desc"
        #"class_structure" #"mutable_flag" #"expression_desc"
        #"constructor_arguments" #"class_field"]
     shared/20016 =a
       [0:
        #"with_constraint" #"virtual_flag" #"variance" #"value_description"
        #"value_binding" #"type_kind" #"type_extension" #"type_exception"
        #"type_declaration" #"toplevel_phrase" #"toplevel_directive"
        #"structure_item_desc" #"structure_item" #"structure" #"string"
        #"signature_item_desc" #"signature_item" #"signature"
        #"row_field_desc" #"row_field" #"rec_flag" #"private_flag"
        #"position" #"payload" #"pattern_desc" #"pattern" #"package_type"
        #"override_flag" #"option" #"open_infos" #"open_description"
        #"open_declaration" #"object_field_desc" #"object_field"
        #"mutable_flag" #"module_type_desc" #"module_type_declaration"
        #"module_type" #"module_substitution" #"module_expr_desc"
        #"module_expr" #"module_declaration" #"module_binding"
        #"longident_loc" #"longident" #"location_stack" #"location" #"loc"
        #"list" #"letop" #"label_declaration" #"label" #"int" #"injectivity"
        #"include_infos" #"include_description" #"include_declaration"
        #"functor_parameter" #"extension_constructor_kind"
        #"extension_constructor" #"extension" #"expression_desc"
        #"expression" #"directive_argument_desc" #"directive_argument"
        #"direction_flag" #"core_type_desc" #"core_type"
        #"constructor_declaration" #"constructor_arguments" #"constant"
        #"closed_flag" #"class_type_field_desc" #"class_type_field"
        #"class_type_desc" #"class_type_declaration" #"class_type"
        #"class_structure" #"class_signature" #"class_infos"
        #"class_field_kind" #"class_field_desc" #"class_field"
        #"class_expr_desc" #"class_expr" #"class_description"
        #"class_declaration" #"char" #"cases" #"case" #"bool" #"binding_op"
        #"attributes" #"attribute" #"array" #"arg_label"]
     Context/3201 =
       (module-defn(Context/3201) Ppxlib__Extension src/extension.ml(6):96-5040
         (let
           (class_expr/605 = 0
            class_field/606 = 1
            class_type/607 = 2
            class_type_field/608 = 3
            core_type/609 = 4
            expression/610 = 5
            module_expr/611 = 6
            module_type/612 = 7
            pattern/613 = 8
            signature_item/614 = 9
            structure_item/615 = 10
            desc/616 =
              (function param/1316
                (funct-body Ppxlib__Extension.Context.desc src/extension.ml(35):949-1428
                  (switch* param/1316
                   case int 0:
                    (before Ppxlib__Extension.Context.desc src/extension.ml(36):1009-1027
                      "class expression")
                   case int 1:
                    (before Ppxlib__Extension.Context.desc src/extension.ml(37):1049-1062
                      "class field")
                   case int 2:
                    (before Ppxlib__Extension.Context.desc src/extension.ml(38):1083-1095
                      "class type")
                   case int 3:
                    (before Ppxlib__Extension.Context.desc src/extension.ml(39):1122-1140
                      "class type field")
                   case int 4:
                    (before Ppxlib__Extension.Context.desc src/extension.ml(40):1160-1171
                      "core type")
                   case int 5:
                    (before Ppxlib__Extension.Context.desc src/extension.ml(41):1192-1204
                      "expression")
                   case int 6:
                    (before Ppxlib__Extension.Context.desc src/extension.ml(42):1226-1245
                      "module expression")
                   case int 7:
                    (before Ppxlib__Extension.Context.desc src/extension.ml(43):1267-1280
                      "module type")
                   case int 8:
                    (before Ppxlib__Extension.Context.desc src/extension.ml(44):1298-1307
                      "pattern")
                   case int 9:
                    (before Ppxlib__Extension.Context.desc src/extension.ml(45):1332-1348
                      "signature item")
                   case int 10:
                    (before Ppxlib__Extension.Context.desc src/extension.ml(46):1373-1389
                      "structure item")
                   case int 11:
                    (before Ppxlib__Extension.Context.desc src/extension.ml(47):1410-1428
                      "type declaration"))))
            eq/1317 =
              (function a/1320 b/1321
                (funct-body Ppxlib__Extension.Context.eq src/extension.ml(49):1436-2028
                  (before Ppxlib__Extension.Context.eq src/extension.ml(51):1501-2028
                    (let (*match*/19863 = a/1320 *match*/19864 = b/1321)
                      (catch
                        (switch* *match*/19863
                         case int 0:
                          (if *match*/19864 (exit 1)
                            (before Ppxlib__Extension.Context.eq src/extension.ml(52):1551-1553
                              0))
                         case int 1:
                          (if (!= *match*/19864 1) (exit 1)
                            (before Ppxlib__Extension.Context.eq src/extension.ml(53):1588-1590
                              0))
                         case int 2:
                          (if (!= *match*/19864 2) (exit 1)
                            (before Ppxlib__Extension.Context.eq src/extension.ml(54):1623-1625
                              0))
                         case int 3:
                          (if (!= *match*/19864 3) (exit 1)
                            (before Ppxlib__Extension.Context.eq src/extension.ml(55):1670-1672
                              0))
                         case int 4:
                          (if (!= *match*/19864 4) (exit 1)
                            (before Ppxlib__Extension.Context.eq src/extension.ml(56):1703-1705
                              0))
                         case int 5:
                          (if (!= *match*/19864 5) (exit 1)
                            (before Ppxlib__Extension.Context.eq src/extension.ml(57):1738-1740
                              0))
                         case int 6:
                          (if (!= *match*/19864 6) (exit 1)
                            (before Ppxlib__Extension.Context.eq src/extension.ml(58):1775-1777
                              0))
                         case int 7:
                          (if (!= *match*/19864 7) (exit 1)
                            (before Ppxlib__Extension.Context.eq src/extension.ml(59):1812-1814
                              0))
                         case int 8:
                          (if (!= *match*/19864 8) (exit 1)
                            (before Ppxlib__Extension.Context.eq src/extension.ml(60):1841-1843
                              0))
                         case int 9:
                          (if (!= *match*/19864 9) (exit 1)
                            (before Ppxlib__Extension.Context.eq src/extension.ml(61):1884-1886
                              0))
                         case int 10:
                          (if (!= *match*/19864 10) (exit 1)
                            (before Ppxlib__Extension.Context.eq src/extension.ml(62):1927-1929
                              0))
                         case int 11:
                          (if (>= *match*/19864 11)
                            (before Ppxlib__Extension.Context.eq src/extension.ml(63):1962-1964
                              0)
                            (exit 1)))
                       with (1)
                        (before Ppxlib__Extension.Context.eq src/extension.ml(65):1984-2028
                          (seq
                            (if
                              (after Ppxlib__Extension.Context.eq src/extension.ml(65):1991-2016
                                (apply
                                  (field_imm 5
                                    (field_imm 70 (global Ppxlib__Import!)))
                                  (makeblock 0 a/1320) (makeblock 0 b/1321)))
                              0
                              (raise
                                (after Ppxlib__Extension.Context.eq src/extension.ml(65):1984-2016
                                  (makeblock 0 (global Assert_failure/30!)
                                    [0: "src/extension.ml" 65 8]))))
                            (before Ppxlib__Extension.Context.eq src/extension.ml(66):2026-2028
                              1))))))))
            get_ppx_import_extension/1378 =
              (function type_decl/1380
                (funct-body Ppxlib__Extension.Context.get_ppx_import_extension src/extension.ml(68)<ghost>:2061-2422
                  (before Ppxlib__Extension.Context.get_ppx_import_extension src/extension.ml(69):2077-2422
                    (catch
                      (let (*match*/19870 =a (field_imm 5 type_decl/1380))
                        (if *match*/19870
                          (let
                            (*match*/19871 =a (field_imm 0 *match*/19870)
                             *match*/19872 =a (field_imm 0 *match*/19871))
                            (switch *match*/19872
                             case tag 10:
                              (let
                                (*match*/19879 =a
                                   (field_imm 7 type_decl/1380)
                                 *match*/19878 =a
                                   (field_imm 6 type_decl/1380)
                                 *match*/19877 =a (field_imm 3 *match*/19871)
                                 *match*/19876 =a (field_imm 2 *match*/19871)
                                 *match*/19875 =a (field_imm 1 *match*/19871)
                                 *match*/19873 =a (field_imm 0 *match*/19872)
                                 *match*/19874 =a (field_imm 1 *match*/19873)
                                 name/1381 =a (field_imm 0 *match*/19873)
                                 *match*/19869 =a
                                   (field_int 4 type_decl/1380)
                                 *match*/19868 =a
                                   (field_imm 3 type_decl/1380)
                                 *match*/19867 =a
                                   (field_imm 2 type_decl/1380)
                                 *match*/19866 =a
                                   (field_imm 1 type_decl/1380)
                                 *match*/19865 =a
                                   (field_imm 0 type_decl/1380))
                                (before Ppxlib__Extension.Context.get_ppx_import_extension src/extension.ml(72):2194-2406
                                  (let
                                    (virtual_payload/1382 =
                                       (after Ppxlib__Extension.Context.get_ppx_import_extension src/extension.ml(73):2226-2316
                                         (apply
                                           (field_imm 151
                                             (field_imm 0
                                               (global Ppxlib__Ast_builder!)))
                                           (field_imm 7 type_decl/1380) 1
                                           (makeblock 0 type_decl/1380 0))))
                                    (before Ppxlib__Extension.Context.get_ppx_import_extension src/extension.ml(76):2336-2406
                                      (let (attr/3090 = 0)
                                        (before Ppxlib__Extension.Context.get_ppx_import_extension src/extension.ml(77):2361-2406
                                          (makeblock 0
                                            (makeblock 0
                                              (makeblock 0 name/1381
                                                (makeblock 0
                                                  (makeblock 0
                                                    virtual_payload/1382 0)))
                                              attr/3090))))))))
                             default: (exit 2)))
                          (exit 2)))
                     with (2)
                      (before Ppxlib__Extension.Context.get_ppx_import_extension src/extension.ml(78):2418-2422
                        0)))))
            get_extension/3091 =
              (function t/3093 x/3094
                (funct-body Ppxlib__Extension.Context.get_extension src/extension.ml(80):2430-3660
                  (before Ppxlib__Extension.Context.get_extension src/extension.ml(82):2518-3660
                    (let (*match*/19880 = t/3093 *match*/19881 = x/3094)
                      (catch
                        (switch* *match*/19880
                         case int 0:
                          (let (*match*/19882 =a (field_imm 0 *match*/19881))
                            (switch *match*/19882
                             case tag 6:
                              (let
                                (a/3096 =a (field_imm 2 *match*/19881)
                                 *match*/19883 =a (field_imm 1 *match*/19881)
                                 e/3095 =a (field_imm 0 *match*/19882))
                                (before Ppxlib__Extension.Context.get_extension src/extension.ml(84):2619-2630
                                  (makeblock 0 (makeblock 0 e/3095 a/3096))))
                             default: (exit 3)))
                         case int 1:
                          (let (*match*/19884 =a (field_imm 0 *match*/19881))
                            (switch *match*/19884
                             case tag 6:
                              (let
                                (a/3098 =a (field_imm 2 *match*/19881)
                                 *match*/19885 =a (field_imm 1 *match*/19881)
                                 e/3097 =a (field_imm 0 *match*/19884))
                                (before Ppxlib__Extension.Context.get_extension src/extension.ml(86):2715-2726
                                  (makeblock 0 (makeblock 0 e/3097 a/3098))))
                             default: (exit 3)))
                         case int 2:
                          (let (*match*/19886 =a (field_imm 0 *match*/19881))
                            (switch *match*/19886
                             case tag 3:
                              (let
                                (a/3100 =a (field_imm 2 *match*/19881)
                                 *match*/19887 =a (field_imm 1 *match*/19881)
                                 e/3099 =a (field_imm 0 *match*/19886))
                                (before Ppxlib__Extension.Context.get_extension src/extension.ml(88):2813-2824
                                  (makeblock 0 (makeblock 0 e/3099 a/3100))))
                             default: (exit 3)))
                         case int 3:
                          (let (*match*/19888 =a (field_imm 0 *match*/19881))
                            (switch *match*/19888
                             case tag 5:
                              (let
                                (a/3102 =a (field_imm 2 *match*/19881)
                                 *match*/19889 =a (field_imm 1 *match*/19881)
                                 e/3101 =a (field_imm 0 *match*/19888))
                                (before Ppxlib__Extension.Context.get_extension src/extension.ml(91):2923-2934
                                  (makeblock 0 (makeblock 0 e/3101 a/3102))))
                             default: (exit 3)))
                         case int 4:
                          (let (*match*/19890 =a (field_imm 0 *match*/19881))
                            (switch *match*/19890
                             case tag 10:
                              (let
                                (a/3104 =a (field_imm 3 *match*/19881)
                                 *match*/19892 =a (field_imm 2 *match*/19881)
                                 *match*/19891 =a (field_imm 1 *match*/19881)
                                 e/3103 =a (field_imm 0 *match*/19890))
                                (before Ppxlib__Extension.Context.get_extension src/extension.ml(93):3020-3031
                                  (makeblock 0 (makeblock 0 e/3103 a/3104))))
                             default: (exit 3)))
                         case int 5:
                          (let (*match*/19893 =a (field_imm 0 *match*/19881))
                            (switch *match*/19893
                             case tag 35:
                              (let
                                (a/3106 =a (field_imm 3 *match*/19881)
                                 *match*/19895 =a (field_imm 2 *match*/19881)
                                 *match*/19894 =a (field_imm 1 *match*/19881)
                                 e/3105 =a (field_imm 0 *match*/19893))
                                (before Ppxlib__Extension.Context.get_extension src/extension.ml(95):3118-3129
                                  (makeblock 0 (makeblock 0 e/3105 a/3106))))
                             default: (exit 3)))
                         case int 6:
                          (let (*match*/19896 =a (field_imm 0 *match*/19881))
                            (switch *match*/19896
                             case tag 6:
                              (let
                                (a/3108 =a (field_imm 2 *match*/19881)
                                 *match*/19897 =a (field_imm 1 *match*/19881)
                                 e/3107 =a (field_imm 0 *match*/19896))
                                (before Ppxlib__Extension.Context.get_extension src/extension.ml(97):3217-3228
                                  (makeblock 0 (makeblock 0 e/3107 a/3108))))
                             default: (exit 3)))
                         case int 7:
                          (let (*match*/19898 =a (field_imm 0 *match*/19881))
                            (switch *match*/19898
                             case tag 5:
                              (let
                                (a/3110 =a (field_imm 2 *match*/19881)
                                 *match*/19899 =a (field_imm 1 *match*/19881)
                                 e/3109 =a (field_imm 0 *match*/19898))
                                (before Ppxlib__Extension.Context.get_extension src/extension.ml(99):3316-3327
                                  (makeblock 0 (makeblock 0 e/3109 a/3110))))
                             default: (exit 3)))
                         case int 8:
                          (let (*match*/19900 =a (field_imm 0 *match*/19881))
                            (switch *match*/19900
                             case tag 15:
                              (let
                                (a/3112 =a (field_imm 3 *match*/19881)
                                 *match*/19902 =a (field_imm 2 *match*/19881)
                                 *match*/19901 =a (field_imm 1 *match*/19881)
                                 e/3111 =a (field_imm 0 *match*/19900))
                                (before Ppxlib__Extension.Context.get_extension src/extension.ml(101):3411-3422
                                  (makeblock 0 (makeblock 0 e/3111 a/3112))))
                             default: (exit 3)))
                         case int 9:
                          (let (*match*/19903 =a (field_imm 0 *match*/19881))
                            (switch *match*/19903
                             case tag 15:
                              (let
                                (*match*/19904 =a (field_imm 1 *match*/19881)
                                 a/3114 =a (field_imm 1 *match*/19903)
                                 e/3113 =a (field_imm 0 *match*/19903))
                                (before Ppxlib__Extension.Context.get_extension src/extension.ml(102):3489-3500
                                  (makeblock 0 (makeblock 0 e/3113 a/3114))))
                             default: (exit 3)))
                         case int 10:
                          (let (*match*/19905 =a (field_imm 0 *match*/19881))
                            (switch *match*/19905
                             case tag 14:
                              (let
                                (*match*/19906 =a (field_imm 1 *match*/19881)
                                 a/3116 =a (field_imm 1 *match*/19905)
                                 e/3115 =a (field_imm 0 *match*/19905))
                                (before Ppxlib__Extension.Context.get_extension src/extension.ml(103):3567-3578
                                  (makeblock 0 (makeblock 0 e/3115 a/3116))))
                             default: (exit 3)))
                         case int 11:
                          (let (type_decl/3117 =a *match*/19881)
                            (before Ppxlib__Extension.Context.get_extension src/extension.ml(104):3610-3644
                              (after Ppxlib__Extension.Context.get_extension src/extension.ml(104):3610-3644
                                (apply get_ppx_import_extension/1378
                                  type_decl/3117)))))
                       with (3)
                        (before Ppxlib__Extension.Context.get_extension src/extension.ml(105):3656-3660
                          0))))))
            merge_attributes_res/3176 =
              (function t/3178 x/3179 attrs/3180
                (funct-body Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(107):3668-4844
                  (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(111):3807-4844
                    (switch* t/3178
                     case int 0:
                      (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(112):3840-3895
                        (makeblock 0
                          (let (init/19907 = x/3179)
                            (makeblock 0 (field_imm 0 init/19907)
                              (field_imm 1 init/19907)
                              (after Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(112):3869-3893
                                (apply
                                  (field_imm 97 (global Ppxlib__Import!))
                                  (field_imm 2 x/3179) attrs/3180))))))
                     case int 1:
                      (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(113):3917-3972
                        (makeblock 0
                          (let (init/19908 = x/3179)
                            (makeblock 0 (field_imm 0 init/19908)
                              (field_imm 1 init/19908)
                              (after Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(113):3946-3970
                                (apply
                                  (field_imm 97 (global Ppxlib__Import!))
                                  (field_imm 2 x/3179) attrs/3180))))))
                     case int 2:
                      (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(114):3993-4050
                        (makeblock 0
                          (let (init/19909 = x/3179)
                            (makeblock 0 (field_imm 0 init/19909)
                              (field_imm 1 init/19909)
                              (after Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(114):4023-4048
                                (apply
                                  (field_imm 97 (global Ppxlib__Import!))
                                  (field_imm 2 x/3179) attrs/3180))))))
                     case int 3:
                      (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(116):4085-4142
                        (makeblock 0
                          (let (init/19910 = x/3179)
                            (makeblock 0 (field_imm 0 init/19910)
                              (field_imm 1 init/19910)
                              (after Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(116):4115-4140
                                (apply
                                  (field_imm 97 (global Ppxlib__Import!))
                                  (field_imm 2 x/3179) attrs/3180))))))
                     case int 4:
                      (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(117):4162-4219
                        (makeblock 0
                          (let (init/19911 = x/3179)
                            (makeblock 0 (field_imm 0 init/19911)
                              (field_imm 1 init/19911)
                              (field_imm 2 init/19911)
                              (after Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(117):4192-4217
                                (apply
                                  (field_imm 97 (global Ppxlib__Import!))
                                  (field_imm 3 x/3179) attrs/3180))))))
                     case int 5:
                      (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(118):4240-4297
                        (makeblock 0
                          (let (init/19912 = x/3179)
                            (makeblock 0 (field_imm 0 init/19912)
                              (field_imm 1 init/19912)
                              (field_imm 2 init/19912)
                              (after Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(118):4270-4295
                                (apply
                                  (field_imm 97 (global Ppxlib__Import!))
                                  (field_imm 3 x/3179) attrs/3180))))))
                     case int 6:
                      (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(119):4319-4376
                        (makeblock 0
                          (let (init/19913 = x/3179)
                            (makeblock 0 (field_imm 0 init/19913)
                              (field_imm 1 init/19913)
                              (after Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(119):4349-4374
                                (apply
                                  (field_imm 97 (global Ppxlib__Import!))
                                  (field_imm 2 x/3179) attrs/3180))))))
                     case int 7:
                      (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(120):4398-4455
                        (makeblock 0
                          (let (init/19914 = x/3179)
                            (makeblock 0 (field_imm 0 init/19914)
                              (field_imm 1 init/19914)
                              (after Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(120):4428-4453
                                (apply
                                  (field_imm 97 (global Ppxlib__Import!))
                                  (field_imm 2 x/3179) attrs/3180))))))
                     case int 8:
                      (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(121):4473-4530
                        (makeblock 0
                          (let (init/19915 = x/3179)
                            (makeblock 0 (field_imm 0 init/19915)
                              (field_imm 1 init/19915)
                              (field_imm 2 init/19915)
                              (after Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(121):4503-4528
                                (apply
                                  (field_imm 97 (global Ppxlib__Import!))
                                  (field_imm 3 x/3179) attrs/3180))))))
                     case int 9:
                      (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(122):4555-4636
                        (let
                          (*match*/19916 =
                             (after Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(123):4571-4594
                               (apply (field_imm 9 (global Ppxlib__Common!))
                                 attrs/3180)))
                          (if *match*/19916
                            (let
                              (q/3182 =a (field_imm 1 *match*/19916)
                               t/3181 =a (field_imm 0 *match*/19916))
                              (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(123):4623-4635
                                (makeblock 1 (makeblock 0 t/3181 q/3182))))
                            (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(123):4606-4610
                              (makeblock 0 x/3179)))))
                     case int 10:
                      (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(124):4661-4742
                        (let
                          (*match*/19917 =
                             (after Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(125):4677-4700
                               (apply (field_imm 9 (global Ppxlib__Common!))
                                 attrs/3180)))
                          (if *match*/19917
                            (let
                              (q/3185 =a (field_imm 1 *match*/19917)
                               t/3184 =a (field_imm 0 *match*/19917))
                              (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(125):4729-4741
                                (makeblock 1 (makeblock 0 t/3184 q/3185))))
                            (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(125):4712-4716
                              (makeblock 0 x/3179)))))
                     case int 11:
                      (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(126):4763-4844
                        (let
                          (*match*/19918 =
                             (after Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(127):4779-4802
                               (apply (field_imm 9 (global Ppxlib__Common!))
                                 attrs/3180)))
                          (if *match*/19918
                            (let
                              (q/3187 =a (field_imm 1 *match*/19918)
                               t/3186 =a (field_imm 0 *match*/19918))
                              (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(127):4831-4843
                                (makeblock 1 (makeblock 0 t/3186 q/3187))))
                            (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(127):4814-4818
                              (makeblock 0 x/3179)))))))))
            merge_attributes/3188 =
              (function t/3190 x/3191 attrs/3192
                (funct-body Ppxlib__Extension.Context.merge_attributes src/extension.ml(129):4852-5036
                  (before Ppxlib__Extension.Context.merge_attributes src/extension.ml(131):4933-5036
                    (after Ppxlib__Extension.Context.merge_attributes src/extension.ml(131):4933-5036
                      (revapply
                        (after Ppxlib__Extension.Context.merge_attributes src/extension.ml(131):4933-4963
                          (apply merge_attributes_res/3176 t/3190 x/3191
                            attrs/3192))
                        (after Ppxlib__Extension.Context.merge_attributes src/extension.ml(132):4971-5036
                          (let
                            (func/19920 =
                               (field_imm 5
                                 (field_imm 93 (global Ppxlib__Import!)))
                             arg/19921 =
                               (function param/3200
                                 (funct-body Ppxlib__Extension.Context.merge_attributes.(fun) src/extension.ml(132):4994-5036
                                   (let
                                     (*match*/19919 =a
                                        (field_imm 1 param/3200)
                                      err/3199 =a (field_imm 0 param/3200))
                                     (before Ppxlib__Extension.Context.merge_attributes.(fun) src/extension.ml(132):5011-5035
                                       (after Ppxlib__Extension.Context.merge_attributes.(fun) src/extension.ml(132):5011-5035
                                         (apply
                                           (field_imm 7
                                             (field_imm 12
                                               (global Ppxlib__Location!)))
                                           err/3199)))))))
                            (function param/19922 stub
                              (apply func/19920 param/19922 arg/19921))))))))))
           (pseudo Ppxlib__Extension.Context src/extension.ml(6):113-5040
             (makeblock 0 class_expr/605 class_field/606 class_type/607
               class_type_field/608 core_type/609 expression/610
               module_expr/611 module_type/612 pattern/613 signature_item/614
               structure_item/615 desc/616 eq/1317
               get_ppx_import_extension/1378 get_extension/3091
               merge_attributes_res/3176 merge_attributes/3188))))
     registrar/3202 =
       (after Ppxlib__Extension.registrar src/extension.ml(136):5060-5194
         (apply (field_imm 0 (field_imm 3 (global Ppxlib__Name!)))
           "extension" #"src/extension.ml"
           (function param/3253
             (funct-body Ppxlib__Extension.registrar.(fun) src/extension.ml(137):5146-5194
               (let (ctx/3252 =a (field_imm 0 param/3253))
                 (before Ppxlib__Extension.registrar.(fun) src/extension.ml(137):5170-5193
                   (makeblock 0
                     (after Ppxlib__Extension.registrar.(fun) src/extension.ml(137):5175-5193
                       (apply (field_imm 11 Context/3201) ctx/3252)))))))))
     Make/4031 =
       (module-defn(Make/4031) Ppxlib__Extension src/extension.ml(139):5196-7522
         (function Callback/19938 is_a_functor
           (let
             (Callback/3255 =a Callback/19938
              declare/3619 =
                (function with_arg/3621 name/3622 context/3623 pattern/3624
                  k/3625
                  (funct-body Ppxlib__Extension.Make.declare src/extension.ml(155):5570-6341
                    (before Ppxlib__Extension.Make.declare src/extension.ml(166):5890-6341
                      (seq
                        (catch
                          (if (!= context/3623 4)
                            (if (>= context/3623 11)
                              (before Ppxlib__Extension.Make.declare src/extension.ml(168):5946-6014
                                (after Ppxlib__Extension.Make.declare src/extension.ml(168):5946-6014
                                  (apply
                                    (field_imm 2
                                      (field_imm 3 (global Ppxlib__Name!)))
                                    registrar/3202 [0: 4] name/3622)))
                              (exit 4))
                            (before Ppxlib__Extension.Make.declare src/extension.ml(170):6050-6119
                              (after Ppxlib__Extension.Make.declare src/extension.ml(170):6050-6119
                                (apply
                                  (field_imm 2
                                    (field_imm 3 (global Ppxlib__Name!)))
                                  registrar/3202 [0: 11] name/3622))))
                         with (4)
                          (before Ppxlib__Extension.Make.declare src/extension.ml(171):6131-6133
                            0))
                        (before Ppxlib__Extension.Make.declare src/extension.ml(172):6140-6341
                          (seq
                            (after Ppxlib__Extension.Make.declare src/extension.ml(172):6140-6215
                              (apply
                                (field_imm 1
                                  (field_imm 3 (global Ppxlib__Name!)))
                                115569503 registrar/3202
                                (makeblock 0 context/3623) name/3622))
                            (before Ppxlib__Extension.Make.declare src/extension.ml(173):6221-6341
                              (makeblock 0
                                (after Ppxlib__Extension.Make.declare src/extension.ml(174):6236-6258
                                  (apply
                                    (field_imm 0
                                      (field_imm 0 (global Ppxlib__Name!)))
                                    name/3622))
                                context/3623
                                (makeblock 0 pattern/3624 k/3625)
                                with_arg/3621))))))))
              find/3626 =
                (function ts/3628 ext/3629
                  (funct-body Ppxlib__Extension.Make.find src/extension.ml(180)<ghost>:6354-7518
                    (before Ppxlib__Extension.Make.find src/extension.ml(181):6381-7518
                      (let
                        (*match*/19937 = (field_mut 0 ext/3629)
                         loc/3631 =a (field_imm 1 *match*/19937)
                         name/3630 =a (field_imm 0 *match*/19937))
                        (before Ppxlib__Extension.Make.find src/extension.ml(182):6422-7518
                          (let
                            (*match*/19933 =
                               (after Ppxlib__Extension.Make.find src/extension.ml(182):6438-6458
                                 (apply (field_imm 1 (global Ppxlib__Name!))
                                   name/3630))
                             arg/3633 =a (field_imm 1 *match*/19933)
                             name/3632 =a (field_imm 0 *match*/19933))
                            (before Ppxlib__Extension.Make.find src/extension.ml(183):6466-7518
                              (let
                                (l/3708 =
                                   (after Ppxlib__Extension.Make.find src/extension.ml(183):6472-6533
                                     (apply
                                       (field_imm 28
                                         (field_imm 91
                                           (global Ppxlib__Import!)))
                                       (function t/3707
                                         (funct-body Ppxlib__Extension.Make.find.(fun) src/extension.ml(183):6490-6533
                                           (before Ppxlib__Extension.Make.find.(fun) src/extension.ml(183):6500-6532
                                             (after Ppxlib__Extension.Make.find.(fun) src/extension.ml(183):6500-6532
                                               (apply
                                                 (field_imm 2
                                                   (field_imm 0
                                                     (global Ppxlib__Name!)))
                                                 (field_imm 0 t/3707)
                                                 name/3632)))))
                                       ts/3628)))
                                (if l/3708
                                  (let
                                    (*match*/19927 =a (field_imm 1 l/3708)
                                     t/3709 =a (field_imm 0 l/3708))
                                    (if *match*/19927
                                      (let
                                        (*match*/19929 =a
                                           (field_imm 1 *match*/19927)
                                         *match*/19928 =a
                                           (field_imm 0 *match*/19927))
                                        (before Ppxlib__Extension.Make.find src/extension.ml(186):6593-6801
                                          (makeblock 1
                                            (makeblock 0
                                              (after Ppxlib__Extension.Make.find src/extension.ml(187):6611-6783
                                                (apply
                                                  (field_imm 1
                                                    (field_imm 12
                                                      (global Ppxlib__Location!)))
                                                  loc/3631
                                                  [0:
                                                   [11:
                                                    "Multiple match for extensions: "
                                                    [2: 0 0]]
                                                   "Multiple match for extensions: %s"]
                                                  (after Ppxlib__Extension.Make.find src/extension.ml(188):6689-6783
                                                    (apply
                                                      (field_imm 2
                                                        (field_imm 96
                                                          (global Ppxlib__Import!)))
                                                      ", "
                                                      (after Ppxlib__Extension.Make.find src/extension.ml(189):6731-6782
                                                        (apply
                                                          (field_imm 48
                                                            (field_imm 91
                                                              (global Ppxlib__Import!)))
                                                          l/3708
                                                          (function t/3886
                                                            (funct-body Ppxlib__Extension.Make.find.(fun) src/extension.ml(189):6746-6781
                                                              (before Ppxlib__Extension.Make.find.(fun) src/extension.ml(189):6756-6780
                                                                (after Ppxlib__Extension.Make.find.(fun) src/extension.ml(189):6756-6780
                                                                  (apply
                                                                    (field_imm 1
                                                                    (field_imm 0
                                                                    (global Ppxlib__Name!)))
                                                                    (field_imm 0
                                                                    t/3886))))))))))))
                                              0))))
                                      (before Ppxlib__Extension.Make.find src/extension.ml(192):6825-7518
                                        (if
                                          (&& (not (field_int 3 t/3709))
                                            (after Ppxlib__Extension.Make.find src/extension.ml(192):6848-6866
                                              (apply
                                                (field_imm 0
                                                  (field_imm 92
                                                    (global Ppxlib__Import!)))
                                                arg/3633)))
                                          (before Ppxlib__Extension.Make.find src/extension.ml(193):6882-7016
                                            (makeblock 1
                                              (makeblock 0
                                                (after Ppxlib__Extension.Make.find src/extension.ml(194):6902-6996
                                                  (apply
                                                    (field_imm 1
                                                      (field_imm 12
                                                        (global Ppxlib__Location!)))
                                                    loc/3631
                                                    [0:
                                                     [11:
                                                      "Extension "
                                                      [2:
                                                       0
                                                       [11:
                                                        " doesn't expect a path argument"
                                                        0]]]
                                                     "Extension %s doesn't expect a path argument"]
                                                    name/3632))
                                                0)))
                                          (before Ppxlib__Extension.Make.find src/extension.ml(198):7040-7518
                                            (let
                                              (arg/3892 =
                                                 (after Ppxlib__Extension.Make.find src/extension.ml(199):7062-7476
                                                   (apply
                                                     (field_imm 2
                                                       (field_imm 92
                                                         (global Ppxlib__Import!)))
                                                     arg/3633
                                                     (function s/3893
                                                       (funct-body Ppxlib__Extension.Make.find.(fun) src/extension.ml(199):7080-7476
                                                         (before Ppxlib__Extension.Make.find.(fun) src/extension.ml(200):7106-7475
                                                           (let
                                                             (shift/3894 =[int]
                                                                (+
                                                                  (string.length
                                                                    name/3632)
                                                                  1))
                                                             (before Ppxlib__Extension.Make.find.(fun) src/extension.ml(201):7160-7475
                                                               (let
                                                                 (start/3895 =
                                                                    (field_imm 0
                                                                    loc/3631))
                                                                 (before Ppxlib__Extension.Make.find.(fun) src/extension.ml(202):7205-7475
                                                                   (makeblock 0
                                                                    (after Ppxlib__Extension.Make.find.(fun) src/extension.ml(203):7231-7248
                                                                    (apply
                                                                    (field_imm 4
                                                                    (global Ppxlib__Longident!))
                                                                    s/3893))
                                                                    (let
                                                                    (init/19925 =
                                                                    loc/3631)
                                                                    (makeblock 0
                                                                    (let
                                                                    (init/19926 =
                                                                    start/3895)
                                                                    (makeblock 0 (*,int,int,int)
                                                                    (field_imm 0
                                                                    init/19926)
                                                                    (field_int 1
                                                                    init/19926)
                                                                    (field_int 2
                                                                    init/19926)
                                                                    (+
                                                                    (field_int 3
                                                                    start/3895)
                                                                    shift/3894)))
                                                                    (field_imm 1
                                                                    init/19925)
                                                                    (field_int 2
                                                                    init/19925))))))))))))))
                                              (before Ppxlib__Extension.Make.find src/extension.ml(212):7500-7518
                                                (makeblock 0
                                                  (makeblock 0
                                                    (makeblock 0 t/3709
                                                      arg/3892))))))))))
                                  (before Ppxlib__Extension.Make.find src/extension.ml(184):6551-6558
                                    [0: 0])))))))))))
             (pseudo Ppxlib__Extension.Make src/extension.ml(142):5243-7522
               (makeblock 0 declare/3619 find/3626)))))
     Expert/4078 =
       (module-defn(Expert/4078) Ppxlib__Extension src/extension.ml(215):7524-8235
         (let
           (include/19939 =
              (apply Make/4031
                (pseudo Ppxlib__Extension.Expert src/extension.ml(216):7563-7626
                  (makeblock 0)))
            declare/4045 =a (field_mut 0 include/19939)
            find/4046 =a (field_mut 1 include/19939)
            declare_with_path_arg/4047 =
              (function name/4049 ctx/4050 patt/4051 f/4052
                (funct-body Ppxlib__Extension.Expert.declare_with_path_arg src/extension.ml(220)<ghost>:7657-7717
                  (before Ppxlib__Extension.Expert.declare_with_path_arg src/extension.ml(221):7679-7717
                    (after Ppxlib__Extension.Expert.declare_with_path_arg src/extension.ml(221):7679-7717
                      (apply declare/4045 1 name/4049 ctx/4050 patt/4051
                        f/4052)))))
            declare/4053 =
              (function name/4054 ctx/4055 patt/4056 f/4057
                (funct-body Ppxlib__Extension.Expert.declare src/extension.ml(223)<ghost>:7733-7810
                  (before Ppxlib__Extension.Expert.declare src/extension.ml(224):7755-7810
                    (after Ppxlib__Extension.Expert.declare src/extension.ml(224):7755-7810
                      (apply declare/4045 0 name/4054 ctx/4055 patt/4056
                        (function param/4058
                          (funct-body Ppxlib__Extension.Expert.declare.(fun) src/extension.ml(224):7793-7810
                            (before Ppxlib__Extension.Expert.declare.(fun) src/extension.ml(224):7808-7809
                              f/4057))))))))
            convert_res/4059 =
              (function ts/4061 loc/4062 ext/4063
                (funct-body Ppxlib__Extension.Expert.convert_res src/extension.ml(226)<ghost>:7830-8101
                  (before Ppxlib__Extension.Expert.convert_res src/extension.ml(227):7848-8101
                    (after Ppxlib__Extension.Expert.convert_res src/extension.ml(228):7871-8101
                      (apply
                        (field_imm 3 (field_imm 93 (global Ppxlib__Import!)))
                        (after Ppxlib__Extension.Expert.convert_res src/extension.ml(228):7871-7882
                          (apply find/4046 ts/4061 ext/4063))
                        (function r/4064
                          (funct-body Ppxlib__Extension.Expert.convert_res.(fun) src/extension.ml(228):7887-8101
                            (before Ppxlib__Extension.Expert.convert_res.(fun) src/extension.ml(229):7900-8101
                              (if r/4064
                                (let
                                  (*match*/19940 =a (field_imm 0 r/4064)
                                   arg/4068 =a (field_imm 1 *match*/19940)
                                   *match*/19941 =a
                                     (field_imm 0 *match*/19940)
                                   *match*/19945 =a
                                     (field_int 3 *match*/19941)
                                   *match*/19944 =a
                                     (field_imm 2 *match*/19941)
                                   f/4067 =a (field_imm 1 *match*/19944)
                                   pattern/4066 =a
                                     (field_imm 0 *match*/19944)
                                   *match*/19943 =a
                                     (field_int 1 *match*/19941)
                                   *match*/19942 =a
                                     (field_imm 0 *match*/19941))
                                  (before Ppxlib__Extension.Expert.convert_res.(fun) src/extension.ml(232):8009-8101
                                    (after Ppxlib__Extension.Expert.convert_res.(fun) src/extension.ml(232):8009-8101
                                      (apply
                                        (field_imm 4
                                          (field_imm 93
                                            (global Ppxlib__Import!)))
                                        (after Ppxlib__Extension.Expert.convert_res.(fun) src/extension.ml(232):8009-8061
                                          (apply
                                            (field_imm 1
                                              (global Ppxlib__Ast_pattern!))
                                            pattern/4066 loc/4062 0
                                            (field_mut 1 ext/4063)
                                            (after Ppxlib__Extension.Expert.convert_res.(fun) src/extension.ml(232):8053-8061
                                              (apply f/4067 arg/4068))))
                                        (function payload/4069
                                          (funct-body Ppxlib__Extension.Expert.convert_res.(fun) src/extension.ml(232):8066-8101
                                            (before Ppxlib__Extension.Expert.convert_res.(fun) src/extension.ml(233):8089-8101
                                              (makeblock 0 payload/4069))))))))
                                (before Ppxlib__Extension.Expert.convert_res.(fun) src/extension.ml(230):7927-7934
                                  [0: 0]))))))))))
            convert/4071 =
              (function ts/4073 loc/4074 ext/4075
                (funct-body Ppxlib__Extension.Expert.convert src/extension.ml(235)<ghost>:8117-8231
                  (before Ppxlib__Extension.Expert.convert src/extension.ml(236):8135-8231
                    (after Ppxlib__Extension.Expert.convert src/extension.ml(236):8135-8231
                      (revapply
                        (after Ppxlib__Extension.Expert.convert src/extension.ml(236):8135-8158
                          (apply convert_res/4059 ts/4073 loc/4074 ext/4075))
                        (after Ppxlib__Extension.Expert.convert src/extension.ml(237):8166-8231
                          (let
                            (func/19947 =
                               (field_imm 5
                                 (field_imm 93 (global Ppxlib__Import!)))
                             arg/19948 =
                               (function param/4077
                                 (funct-body Ppxlib__Extension.Expert.convert.(fun) src/extension.ml(237):8189-8231
                                   (let
                                     (*match*/19946 =a
                                        (field_imm 1 param/4077)
                                      err/4076 =a (field_imm 0 param/4077))
                                     (before Ppxlib__Extension.Expert.convert.(fun) src/extension.ml(237):8206-8230
                                       (after Ppxlib__Extension.Expert.convert.(fun) src/extension.ml(237):8206-8230
                                         (apply
                                           (field_imm 7
                                             (field_imm 12
                                               (global Ppxlib__Location!)))
                                           err/4076)))))))
                            (function param/19949 stub
                              (apply func/19947 param/19949 arg/19948))))))))))
           (pseudo Ppxlib__Extension.Expert src/extension.ml(215):7540-8235
             (makeblock 0 find/4046 declare_with_path_arg/4047 declare/4053
               convert_res/4059 convert/4071))))
     M/4124 =
       (module-defn(M/4124) Ppxlib__Extension src/extension.ml(240):8237-8356
         (apply Make/4031
           (pseudo Ppxlib__Extension.M src/extension.ml(240):8254-8355
             (makeblock 0))))
     For_context/4173 =
       (module-defn(For_context/4173) Ppxlib__Extension src/extension.ml(247):8418-9695
         (let
           (convert_res/4129 =
              (function ts/4131 ctxt/4132 ext/4133
                (funct-body Ppxlib__Extension.For_context.convert_res src/extension.ml(250)<ghost>:8508-8965
                  (before Ppxlib__Extension.For_context.convert_res src/extension.ml(251):8527-8965
                    (let
                      (loc/4134 =
                         (after Ppxlib__Extension.For_context.convert_res src/extension.ml(251):8537-8589
                           (apply
                             (field_imm 0
                               (field_imm 1
                                 (global Ppxlib__Expansion_context!)))
                             ctxt/4132)))
                      (before Ppxlib__Extension.For_context.convert_res src/extension.ml(252):8597-8965
                        (after Ppxlib__Extension.For_context.convert_res src/extension.ml(253):8620-8965
                          (apply
                            (field_imm 3
                              (field_imm 93 (global Ppxlib__Import!)))
                            (after Ppxlib__Extension.For_context.convert_res src/extension.ml(253):8620-8633
                              (apply (field_imm 1 M/4124) ts/4131 ext/4133))
                            (function found/4136
                              (funct-body Ppxlib__Extension.For_context.convert_res.(fun) src/extension.ml(253):8638-8965
                                (before Ppxlib__Extension.For_context.convert_res.(fun) src/extension.ml(254):8655-8965
                                  (if found/4136
                                    (let
                                      (*match*/19951 =a
                                         (field_imm 0 found/4136)
                                       arg/4140 =a
                                         (field_imm 1 *match*/19951)
                                       *match*/19952 =a
                                         (field_imm 0 *match*/19951)
                                       *match*/19956 =a
                                         (field_int 3 *match*/19952)
                                       *match*/19955 =a
                                         (field_imm 2 *match*/19952)
                                       f/4139 =a (field_imm 1 *match*/19955)
                                       pattern/4138 =a
                                         (field_imm 0 *match*/19955)
                                       *match*/19954 =a
                                         (field_int 1 *match*/19952)
                                       *match*/19953 =a
                                         (field_imm 0 *match*/19952))
                                      (before Ppxlib__Extension.For_context.convert_res.(fun) src/extension.ml(256):8762-8965
                                        (after Ppxlib__Extension.For_context.convert_res.(fun) src/extension.ml(256):8762-8965
                                          (apply
                                            (field_imm 4
                                              (field_imm 93
                                                (global Ppxlib__Import!)))
                                            (after Ppxlib__Extension.For_context.convert_res.(fun) src/extension.ml(257):8772-8830
                                              (apply
                                                (field_imm 1
                                                  (global Ppxlib__Ast_pattern!))
                                                pattern/4138 loc/4134 0
                                                (field_mut 1 ext/4133)
                                                (after Ppxlib__Extension.For_context.convert_res.(fun) src/extension.ml(257):8816-8830
                                                  (apply f/4139 ctxt/4132
                                                    arg/4140))))
                                            (function payload/4141
                                              (funct-body Ppxlib__Extension.For_context.convert_res.(fun) src/extension.ml(258):8843-8964
                                                (before Ppxlib__Extension.For_context.convert_res.(fun) src/extension.ml(259):8866-8964
                                                  (switch* payload/4141
                                                   case tag 0:
                                                    (let
                                                      (x/4142 =a
                                                         (field_imm 0
                                                           payload/4141))
                                                      (before Ppxlib__Extension.For_context.convert_res.(fun) src/extension.ml(260):8907-8913
                                                        (makeblock 0 x/4142)))
                                                   case tag 1:
                                                    (let
                                                      (*match*/19950 =a
                                                         (field_imm 0
                                                           payload/4141))
                                                      (before Ppxlib__Extension.For_context.convert_res.(fun) src/extension.ml(261):8936-8964
                                                        (after Ppxlib__Extension.For_context.convert_res.(fun) src/extension.ml(261):8936-8964
                                                          (apply
                                                            (field_imm 1
                                                              (global Stdlib!))
                                                            "Extension.convert"))))))))))))
                                    (before Ppxlib__Extension.For_context.convert_res.(fun) src/extension.ml(255):8686-8693
                                      [0: 0]))))))))))))
            convert/4144 =
              (function ts/4146 ctxt/4147 ext/4148
                (funct-body Ppxlib__Extension.For_context.convert src/extension.ml(263)<ghost>:8981-9097
                  (before Ppxlib__Extension.For_context.convert src/extension.ml(264):9000-9097
                    (after Ppxlib__Extension.For_context.convert src/extension.ml(264):9000-9097
                      (revapply
                        (after Ppxlib__Extension.For_context.convert src/extension.ml(264):9000-9024
                          (apply convert_res/4129 ts/4146 ctxt/4147 ext/4148))
                        (after Ppxlib__Extension.For_context.convert src/extension.ml(265):9032-9097
                          (let
                            (func/19958 =
                               (field_imm 5
                                 (field_imm 93 (global Ppxlib__Import!)))
                             arg/19959 =
                               (function param/4150
                                 (funct-body Ppxlib__Extension.For_context.convert.(fun) src/extension.ml(265):9055-9097
                                   (let
                                     (*match*/19957 =a
                                        (field_imm 1 param/4150)
                                      err/4149 =a (field_imm 0 param/4150))
                                     (before Ppxlib__Extension.For_context.convert.(fun) src/extension.ml(265):9072-9096
                                       (after Ppxlib__Extension.For_context.convert.(fun) src/extension.ml(265):9072-9096
                                         (apply
                                           (field_imm 7
                                             (field_imm 12
                                               (global Ppxlib__Location!)))
                                           err/4149)))))))
                            (function param/19960 stub
                              (apply func/19958 param/19960 arg/19959)))))))))
            convert_inline_res/4151 =
              (function ts/4153 ctxt/4154 ext/4155
                (funct-body Ppxlib__Extension.For_context.convert_inline_res src/extension.ml(267)<ghost>:9124-9545
                  (before Ppxlib__Extension.For_context.convert_inline_res src/extension.ml(268):9143-9545
                    (let
                      (loc/4156 =
                         (after Ppxlib__Extension.For_context.convert_inline_res src/extension.ml(268):9153-9205
                           (apply
                             (field_imm 0
                               (field_imm 1
                                 (global Ppxlib__Expansion_context!)))
                             ctxt/4154)))
                      (before Ppxlib__Extension.For_context.convert_inline_res src/extension.ml(269):9213-9545
                        (after Ppxlib__Extension.For_context.convert_inline_res src/extension.ml(270):9236-9545
                          (apply
                            (field_imm 3
                              (field_imm 93 (global Ppxlib__Import!)))
                            (after Ppxlib__Extension.For_context.convert_inline_res src/extension.ml(270):9236-9249
                              (apply (field_imm 1 M/4124) ts/4153 ext/4155))
                            (function found/4157
                              (funct-body Ppxlib__Extension.For_context.convert_inline_res.(fun) src/extension.ml(270):9254-9545
                                (before Ppxlib__Extension.For_context.convert_inline_res.(fun) src/extension.ml(271):9271-9545
                                  (if found/4157
                                    (let
                                      (*match*/19961 =a
                                         (field_imm 0 found/4157)
                                       arg/4161 =a
                                         (field_imm 1 *match*/19961)
                                       *match*/19962 =a
                                         (field_imm 0 *match*/19961)
                                       *match*/19966 =a
                                         (field_int 3 *match*/19962)
                                       *match*/19965 =a
                                         (field_imm 2 *match*/19962)
                                       f/4160 =a (field_imm 1 *match*/19965)
                                       pattern/4159 =a
                                         (field_imm 0 *match*/19965)
                                       *match*/19964 =a
                                         (field_int 1 *match*/19962)
                                       *match*/19963 =a
                                         (field_imm 0 *match*/19962))
                                      (before Ppxlib__Extension.For_context.convert_inline_res.(fun) src/extension.ml(273):9378-9545
                                        (after Ppxlib__Extension.For_context.convert_inline_res.(fun) src/extension.ml(273):9378-9545
                                          (apply
                                            (field_imm 4
                                              (field_imm 93
                                                (global Ppxlib__Import!)))
                                            (after Ppxlib__Extension.For_context.convert_inline_res.(fun) src/extension.ml(274):9388-9446
                                              (apply
                                                (field_imm 1
                                                  (global Ppxlib__Ast_pattern!))
                                                pattern/4159 loc/4156 0
                                                (field_mut 1 ext/4155)
                                                (after Ppxlib__Extension.For_context.convert_inline_res.(fun) src/extension.ml(274):9432-9446
                                                  (apply f/4160 ctxt/4154
                                                    arg/4161))))
                                            (function payload/4162
                                              (funct-body Ppxlib__Extension.For_context.convert_inline_res.(fun) src/extension.ml(275):9459-9544
                                                (before Ppxlib__Extension.For_context.convert_inline_res.(fun) src/extension.ml(276):9482-9544
                                                  (switch* payload/4162
                                                   case tag 0:
                                                    (let
                                                      (x/4163 =a
                                                         (field_imm 0
                                                           payload/4162))
                                                      (before Ppxlib__Extension.For_context.convert_inline_res.(fun) src/extension.ml(276):9513-9523
                                                        (makeblock 0
                                                          (makeblock 0 x/4163
                                                            0))))
                                                   case tag 1:
                                                    (let
                                                      (l/4164 =a
                                                         (field_imm 0
                                                           payload/4162))
                                                      (before Ppxlib__Extension.For_context.convert_inline_res.(fun) src/extension.ml(276):9538-9544
                                                        (makeblock 0 l/4164)))))))))))
                                    (before Ppxlib__Extension.For_context.convert_inline_res.(fun) src/extension.ml(272):9302-9309
                                      [0: 0]))))))))))))
            convert_inline/4166 =
              (function ts/4168 ctxt/4169 ext/4170
                (funct-body Ppxlib__Extension.For_context.convert_inline src/extension.ml(278)<ghost>:9568-9691
                  (before Ppxlib__Extension.For_context.convert_inline src/extension.ml(279):9587-9691
                    (after Ppxlib__Extension.For_context.convert_inline src/extension.ml(279):9587-9691
                      (revapply
                        (after Ppxlib__Extension.For_context.convert_inline src/extension.ml(279):9587-9618
                          (apply convert_inline_res/4151 ts/4168 ctxt/4169
                            ext/4170))
                        (after Ppxlib__Extension.For_context.convert_inline src/extension.ml(280):9626-9691
                          (let
                            (func/19968 =
                               (field_imm 5
                                 (field_imm 93 (global Ppxlib__Import!)))
                             arg/19969 =
                               (function param/4172
                                 (funct-body Ppxlib__Extension.For_context.convert_inline.(fun) src/extension.ml(280):9649-9691
                                   (let
                                     (*match*/19967 =a
                                        (field_imm 1 param/4172)
                                      err/4171 =a (field_imm 0 param/4172))
                                     (before Ppxlib__Extension.For_context.convert_inline.(fun) src/extension.ml(280):9666-9690
                                       (after Ppxlib__Extension.For_context.convert_inline.(fun) src/extension.ml(280):9666-9690
                                         (apply
                                           (field_imm 7
                                             (field_imm 12
                                               (global Ppxlib__Location!)))
                                           err/4171)))))))
                            (function param/19970 stub
                              (apply func/19968 param/19970 arg/19969))))))))))
           (pseudo Ppxlib__Extension.For_context src/extension.ml(247):8439-9695
             (makeblock 0 convert_res/4129 convert/4144
               convert_inline_res/4151 convert_inline/4166))))
     check_context_for_inline/4176 =
       (function func/4178 ctx/4179
         (funct-body Ppxlib__Extension.check_context_for_inline src/extension.ml(285):9736-10084
           (before Ppxlib__Extension.check_context_for_inline src/extension.ml(287):9828-10084
             (catch
               (switch* ctx/4179
                case int 0: (exit 11)
                case int 1:
                 (before Ppxlib__Extension.check_context_for_inline src/extension.ml(288):9870-9872
                   0)
                case int 2: (exit 11)
                case int 3:
                 (before Ppxlib__Extension.check_context_for_inline src/extension.ml(289):9905-9907
                   0)
                case int 4: (exit 11)
                case int 5: (exit 11)
                case int 6: (exit 11)
                case int 7: (exit 11)
                case int 8: (exit 11)
                case int 9:
                 (before Ppxlib__Extension.check_context_for_inline src/extension.ml(290):9938-9940
                   0)
                case int 10:
                 (before Ppxlib__Extension.check_context_for_inline src/extension.ml(291):9971-9973
                   0)
                case int 11: (exit 11))
              with (11)
               (let (context/4180 =a ctx/4179)
                 (before Ppxlib__Extension.check_context_for_inline src/extension.ml(293):9995-10084
                   (after Ppxlib__Extension.check_context_for_inline src/extension.ml(293):9995-10084
                     (apply (field_imm 9 (global Stdlib__printf!))
                       (field_imm 0 (global Stdlib!))
                       [0:
                        [2: 0 [11: ": " [2: 0 [11: " can't be inlined" 0]]]]
                        "%s: %s can't be inlined"]
                       func/4178
                       (after Ppxlib__Extension.check_context_for_inline src/extension.ml(294):10062-10084
                         (apply (field_imm 11 Context/3201) context/4180)))))))))))
    (letrec
      (filter_by_context/4194
         (function context/4196 expanders/4197
           (funct-body Ppxlib__Extension.filter_by_context src/extension.ml(296):10094-10398
             (before Ppxlib__Extension.filter_by_context src/extension.ml(299):10202-10398
               (if expanders/4197
                 (let
                   (rest/4200 =a (field_imm 1 expanders/4197)
                    *match*/19972 =a (field_imm 0 expanders/4197)
                    t/4199 =a (field_imm 0 *match*/19972))
                   (before Ppxlib__Extension.filter_by_context src/extension.ml(301):10255-10398
                     (let
                       (*match*/19971 =
                          (after Ppxlib__Extension.filter_by_context src/extension.ml(302):10269-10297
                            (apply (field_imm 12 Context/3201) context/4196
                              (field_int 1 t/4199))))
                       (if *match*/19971
                         (before Ppxlib__Extension.filter_by_context src/extension.ml(304):10367-10397
                           (after Ppxlib__Extension.filter_by_context src/extension.ml(304):10367-10397
                             (apply filter_by_context/4194 context/4196
                               rest/4200)))
                         (before Ppxlib__Extension.filter_by_context src/extension.ml(303):10317-10352
                           (makeblock 0 t/4199
                             (after Ppxlib__Extension.filter_by_context src/extension.ml(303):10322-10352
                               (apply filter_by_context/4194 context/4196
                                 rest/4200))))))))
                 (before Ppxlib__Extension.filter_by_context src/extension.ml(300):10233-10235
                   0))))))
      (let
        (unhandled_extension_error/4203 =
           (function ctx/4205 param/4213
             (funct-body Ppxlib__Extension.unhandled_extension_error src/extension.ml(306)<ghost>:10430-10701
               (let
                 (*match*/19973 =a (field_imm 1 param/4213)
                  name/4206 =a (field_imm 0 param/4213))
                 (before Ppxlib__Extension.unhandled_extension_error src/extension.ml(307):10448-10701
                   (if
                     (not
                       (||
                         (after Ppxlib__Extension.unhandled_extension_error src/extension.ml(309):10466-10523
                           (apply
                             (field_imm 2
                               (field_imm 4 (global Ppxlib__Name!)))
                             115569503 (field_imm 0 name/4206)))
                         (after Ppxlib__Extension.unhandled_extension_error src/extension.ml(310):10533-10560
                           (apply (field_imm 6 (global Ppxlib__Name!))
                             (field_imm 0 name/4206)))))
                     (before Ppxlib__Extension.unhandled_extension_error src/extension.ml(312):10573-10691
                       (makeblock 0
                         (after Ppxlib__Extension.unhandled_extension_error src/extension.ml(313):10581-10684
                           (apply
                             (field_imm 0
                               (field_imm 4
                                 (field_imm 3 (global Ppxlib__Name!))))
                             registrar/3202 (makeblock 0 ctx/4205) 0
                             [0:
                              [11:
                               "Extension `"
                               [2: 0 [11: "' was not translated" 0]]]
                              "Extension `%s' was not translated"]
                             name/4206))
                         0))
                     (before Ppxlib__Extension.unhandled_extension_error src/extension.ml(316):10699-10701
                       0))))))
         collect_unhandled_extension_errors/4214 =
           (let
             (object_tables/19977 =o (makemutable 0 0 0 0)
              class/19981 =
                (apply (field_imm 15 (global CamlinternalOO!)) shared/20021)
              obj_init/20020 =
                (let
                  (ids/20015 =
                     (apply (field_imm 7 (global CamlinternalOO!))
                       class/19981 shared/20016)
                   with_constraint/4780 =o (field_mut 0 ids/20015)
                   virtual_flag/4779 =o (field_mut 1 ids/20015)
                   variance/4778 =o (field_mut 2 ids/20015)
                   value_description/4777 =o (field_mut 3 ids/20015)
                   value_binding/4776 =o (field_mut 4 ids/20015)
                   type_kind/4775 =o (field_mut 5 ids/20015)
                   type_extension/4774 =o (field_mut 6 ids/20015)
                   type_exception/4773 =o (field_mut 7 ids/20015)
                   type_declaration/4772 =o (field_mut 8 ids/20015)
                   toplevel_phrase/4771 =o (field_mut 9 ids/20015)
                   toplevel_directive/4770 =o (field_mut 10 ids/20015)
                   structure_item_desc/4696 =o (field_mut 11 ids/20015)
                   structure_item/4769 =o (field_mut 12 ids/20015)
                   structure/4768 =o (field_mut 13 ids/20015)
                   string/4767 =o (field_mut 14 ids/20015)
                   signature_item_desc/4694 =o (field_mut 15 ids/20015)
                   signature_item/4766 =o (field_mut 16 ids/20015)
                   signature/4765 =o (field_mut 17 ids/20015)
                   row_field_desc/4764 =o (field_mut 18 ids/20015)
                   row_field/4763 =o (field_mut 19 ids/20015)
                   rec_flag/4762 =o (field_mut 20 ids/20015)
                   private_flag/4761 =o (field_mut 21 ids/20015)
                   position/4760 =o (field_mut 22 ids/20015)
                   payload/4759 =o (field_mut 23 ids/20015)
                   pattern_desc/4687 =o (field_mut 24 ids/20015)
                   pattern/4758 =o (field_mut 25 ids/20015)
                   package_type/4757 =o (field_mut 26 ids/20015)
                   override_flag/4756 =o (field_mut 27 ids/20015)
                   option/4755 =o (field_mut 28 ids/20015)
                   open_infos/4754 =o (field_mut 29 ids/20015)
                   open_description/4753 =o (field_mut 30 ids/20015)
                   open_declaration/4752 =o (field_mut 31 ids/20015)
                   object_field_desc/4751 =o (field_mut 32 ids/20015)
                   object_field/4750 =o (field_mut 33 ids/20015)
                   mutable_flag/4749 =o (field_mut 34 ids/20015)
                   module_type_desc/4693 =o (field_mut 35 ids/20015)
                   module_type_declaration/4748 =o (field_mut 36 ids/20015)
                   module_type/4747 =o (field_mut 37 ids/20015)
                   module_substitution/4746 =o (field_mut 38 ids/20015)
                   module_expr_desc/4695 =o (field_mut 39 ids/20015)
                   module_expr/4745 =o (field_mut 40 ids/20015)
                   module_declaration/4744 =o (field_mut 41 ids/20015)
                   module_binding/4743 =o (field_mut 42 ids/20015)
                   longident_loc/4742 =o (field_mut 43 ids/20015)
                   longident/4741 =o (field_mut 44 ids/20015)
                   location_stack/4740 =o (field_mut 45 ids/20015)
                   location/4739 =o (field_mut 46 ids/20015)
                   loc/4738 =o (field_mut 47 ids/20015)
                   list/4737 =o (field_mut 48 ids/20015)
                   letop/4736 =o (field_mut 49 ids/20015)
                   label_declaration/4735 =o (field_mut 50 ids/20015)
                   label/4734 =o (field_mut 51 ids/20015)
                   int/4733 =o (field_mut 52 ids/20015)
                   injectivity/4732 =o (field_mut 53 ids/20015)
                   include_infos/4731 =o (field_mut 54 ids/20015)
                   include_description/4730 =o (field_mut 55 ids/20015)
                   include_declaration/4729 =o (field_mut 56 ids/20015)
                   functor_parameter/4728 =o (field_mut 57 ids/20015)
                   extension_constructor_kind/4727 =o
                     (field_mut 58 ids/20015)
                   extension_constructor/4726 =o (field_mut 59 ids/20015)
                   extension/4685 =o (field_mut 60 ids/20015)
                   expression_desc/4688 =o (field_mut 61 ids/20015)
                   expression/4725 =o (field_mut 62 ids/20015)
                   directive_argument_desc/4724 =o (field_mut 63 ids/20015)
                   directive_argument/4723 =o (field_mut 64 ids/20015)
                   direction_flag/4722 =o (field_mut 65 ids/20015)
                   core_type_desc/4686 =o (field_mut 66 ids/20015)
                   core_type/4721 =o (field_mut 67 ids/20015)
                   constructor_declaration/4720 =o (field_mut 68 ids/20015)
                   constructor_arguments/4719 =o (field_mut 69 ids/20015)
                   constant/4718 =o (field_mut 70 ids/20015)
                   closed_flag/4717 =o (field_mut 71 ids/20015)
                   class_type_field_desc/4690 =o (field_mut 72 ids/20015)
                   class_type_field/4716 =o (field_mut 73 ids/20015)
                   class_type_desc/4689 =o (field_mut 74 ids/20015)
                   class_type_declaration/4715 =o (field_mut 75 ids/20015)
                   class_type/4714 =o (field_mut 76 ids/20015)
                   class_structure/4713 =o (field_mut 77 ids/20015)
                   class_signature/4712 =o (field_mut 78 ids/20015)
                   class_infos/4711 =o (field_mut 79 ids/20015)
                   class_field_kind/4710 =o (field_mut 80 ids/20015)
                   class_field_desc/4692 =o (field_mut 81 ids/20015)
                   class_field/4709 =o (field_mut 82 ids/20015)
                   class_expr_desc/4691 =o (field_mut 83 ids/20015)
                   class_expr/4708 =o (field_mut 84 ids/20015)
                   class_description/4707 =o (field_mut 85 ids/20015)
                   class_declaration/4706 =o (field_mut 86 ids/20015)
                   char/4705 =o (field_mut 87 ids/20015)
                   cases/4704 =o (field_mut 88 ids/20015)
                   case/4703 =o (field_mut 89 ids/20015)
                   bool/4702 =o (field_mut 90 ids/20015)
                   binding_op/4701 =o (field_mut 91 ids/20015)
                   attributes/4700 =o (field_mut 92 ids/20015)
                   attribute/4699 =o (field_mut 93 ids/20015)
                   array/4698 =o (field_mut 94 ids/20015)
                   arg_label/4697 =o (field_mut 95 ids/20015)
                   inh/20014 =
                     (apply (field_imm 17 (global CamlinternalOO!))
                       class/19981 0 0 shared/20013
                       (field_imm 2 (global Ppxlib__Ast_traverse!)) 1)
                   obj_init/19985 =o (field_mut 0 inh/20014)
                   arg_label/4586 =o (field_mut 1 inh/20014)
                   array/4587 =o (field_mut 2 inh/20014)
                   attribute/4588 =o (field_mut 3 inh/20014)
                   attributes/4589 =o (field_mut 4 inh/20014)
                   binding_op/4590 =o (field_mut 5 inh/20014)
                   bool/4591 =o (field_mut 6 inh/20014)
                   case/4592 =o (field_mut 7 inh/20014)
                   cases/4593 =o (field_mut 8 inh/20014)
                   char/4594 =o (field_mut 9 inh/20014)
                   class_declaration/4595 =o (field_mut 10 inh/20014)
                   class_description/4596 =o (field_mut 11 inh/20014)
                   class_expr/4597 =o (field_mut 12 inh/20014)
                   class_expr_desc/4598 =o (field_mut 13 inh/20014)
                   class_field/4599 =o (field_mut 14 inh/20014)
                   class_field_desc/4600 =o (field_mut 15 inh/20014)
                   class_field_kind/4601 =o (field_mut 16 inh/20014)
                   class_infos/4602 =o (field_mut 17 inh/20014)
                   class_signature/4603 =o (field_mut 18 inh/20014)
                   class_structure/4604 =o (field_mut 19 inh/20014)
                   class_type/4605 =o (field_mut 20 inh/20014)
                   class_type_declaration/4606 =o (field_mut 21 inh/20014)
                   class_type_desc/4607 =o (field_mut 22 inh/20014)
                   class_type_field/4608 =o (field_mut 23 inh/20014)
                   class_type_field_desc/4609 =o (field_mut 24 inh/20014)
                   closed_flag/4610 =o (field_mut 25 inh/20014)
                   constant/4611 =o (field_mut 26 inh/20014)
                   constructor_arguments/4612 =o (field_mut 27 inh/20014)
                   constructor_declaration/4613 =o (field_mut 28 inh/20014)
                   core_type/4614 =o (field_mut 29 inh/20014)
                   core_type_desc/4615 =o (field_mut 30 inh/20014)
                   direction_flag/4616 =o (field_mut 31 inh/20014)
                   directive_argument/4617 =o (field_mut 32 inh/20014)
                   directive_argument_desc/4618 =o (field_mut 33 inh/20014)
                   expression/4619 =o (field_mut 34 inh/20014)
                   expression_desc/4620 =o (field_mut 35 inh/20014)
                   extension/4621 =o (field_mut 36 inh/20014)
                   extension_constructor/4622 =o (field_mut 37 inh/20014)
                   extension_constructor_kind/4623 =o
                     (field_mut 38 inh/20014)
                   functor_parameter/4624 =o (field_mut 39 inh/20014)
                   include_declaration/4625 =o (field_mut 40 inh/20014)
                   include_description/4626 =o (field_mut 41 inh/20014)
                   include_infos/4627 =o (field_mut 42 inh/20014)
                   injectivity/4628 =o (field_mut 43 inh/20014)
                   int/4629 =o (field_mut 44 inh/20014)
                   label/4630 =o (field_mut 45 inh/20014)
                   label_declaration/4631 =o (field_mut 46 inh/20014)
                   letop/4632 =o (field_mut 47 inh/20014)
                   list/4633 =o (field_mut 48 inh/20014)
                   loc/4634 =o (field_mut 49 inh/20014)
                   location/4635 =o (field_mut 50 inh/20014)
                   location_stack/4636 =o (field_mut 51 inh/20014)
                   longident/4637 =o (field_mut 52 inh/20014)
                   longident_loc/4638 =o (field_mut 53 inh/20014)
                   module_binding/4639 =o (field_mut 54 inh/20014)
                   module_declaration/4640 =o (field_mut 55 inh/20014)
                   module_expr/4641 =o (field_mut 56 inh/20014)
                   module_expr_desc/4642 =o (field_mut 57 inh/20014)
                   module_substitution/4643 =o (field_mut 58 inh/20014)
                   module_type/4644 =o (field_mut 59 inh/20014)
                   module_type_declaration/4645 =o (field_mut 60 inh/20014)
                   module_type_desc/4646 =o (field_mut 61 inh/20014)
                   mutable_flag/4647 =o (field_mut 62 inh/20014)
                   object_field/4648 =o (field_mut 63 inh/20014)
                   object_field_desc/4649 =o (field_mut 64 inh/20014)
                   open_declaration/4650 =o (field_mut 65 inh/20014)
                   open_description/4651 =o (field_mut 66 inh/20014)
                   open_infos/4652 =o (field_mut 67 inh/20014)
                   option/4653 =o (field_mut 68 inh/20014)
                   override_flag/4654 =o (field_mut 69 inh/20014)
                   package_type/4655 =o (field_mut 70 inh/20014)
                   pattern/4656 =o (field_mut 71 inh/20014)
                   pattern_desc/4657 =o (field_mut 72 inh/20014)
                   payload/4658 =o (field_mut 73 inh/20014)
                   position/4659 =o (field_mut 74 inh/20014)
                   private_flag/4660 =o (field_mut 75 inh/20014)
                   rec_flag/4661 =o (field_mut 76 inh/20014)
                   row_field/4662 =o (field_mut 77 inh/20014)
                   row_field_desc/4663 =o (field_mut 78 inh/20014)
                   signature/4664 =o (field_mut 79 inh/20014)
                   signature_item/4665 =o (field_mut 80 inh/20014)
                   signature_item_desc/4666 =o (field_mut 81 inh/20014)
                   string/4667 =o (field_mut 82 inh/20014)
                   structure/4668 =o (field_mut 83 inh/20014)
                   structure_item/4669 =o (field_mut 84 inh/20014)
                   structure_item_desc/4670 =o (field_mut 85 inh/20014)
                   toplevel_directive/4671 =o (field_mut 86 inh/20014)
                   toplevel_phrase/4672 =o (field_mut 87 inh/20014)
                   type_declaration/4673 =o (field_mut 88 inh/20014)
                   type_exception/4674 =o (field_mut 89 inh/20014)
                   type_extension/4675 =o (field_mut 90 inh/20014)
                   type_kind/4676 =o (field_mut 91 inh/20014)
                   value_binding/4677 =o (field_mut 92 inh/20014)
                   value_description/4678 =o (field_mut 93 inh/20014)
                   variance/4679 =o (field_mut 94 inh/20014)
                   virtual_flag/4680 =o (field_mut 95 inh/20014)
                   with_constraint/4681 =o (field_mut 96 inh/20014))
                  (seq
                    (apply (field_imm 10 (global CamlinternalOO!))
                      class/19981
                      (makeblock 0 extension/4685
                        (function self-1/4782 param/4785 acc/4784
                          (funct-body Ppxlib__Extension.collect_unhandled_extension_errors.object#extension src/extension.ml(322)<ghost>:10839-11008
                            (let
                              (self-*/4781 =a self-1/4782
                               *match*/20011 =a (field_imm 1 param/4785)
                               name/4783 =a (field_imm 0 param/4785))
                              (before Ppxlib__Extension.collect_unhandled_extension_errors.object#extension src/extension.ml(323):10861-11008
                                (after Ppxlib__Extension.collect_unhandled_extension_errors.object#extension src/extension.ml(323):10861-11008
                                  (apply
                                    (field_imm 97 (global Ppxlib__Import!))
                                    acc/4784
                                    (makeblock 0
                                      (after Ppxlib__Extension.collect_unhandled_extension_errors.object#extension src/extension.ml(325):10885-10997
                                        (apply
                                          (field_imm 1
                                            (field_imm 12
                                              (global Ppxlib__Location!)))
                                          (field_imm 1 name/4783)
                                          [0:
                                           [11:
                                            "extension not expected here, Ppxlib.Extension needs updating!"
                                            0]
                                           "extension not expected here, Ppxlib.Extension needs updating!"]))
                                      0)))))))
                        core_type_desc/4686
                        (function self-1/4787 x/4788 acc/4789
                          (funct-body Ppxlib__Extension.collect_unhandled_extension_errors.object#core_type_desc src/extension.ml(329)<ghost>:11037-11179
                            (let (self-*/4786 =a self-1/4787)
                              (before Ppxlib__Extension.collect_unhandled_extension_errors.object#core_type_desc src/extension.ml(330):11051-11179
                                (catch
                                  (switch x/4788
                                   case tag 10:
                                    (let (ext/4790 =a (field_imm 0 x/4788))
                                      (before Ppxlib__Extension.collect_unhandled_extension_errors.object#core_type_desc src/extension.ml(331):11094-11139
                                        (after Ppxlib__Extension.collect_unhandled_extension_errors.object#core_type_desc src/extension.ml(331):11094-11139
                                          (apply
                                            (field_imm 97
                                              (global Ppxlib__Import!))
                                            acc/4789
                                            (after Ppxlib__Extension.collect_unhandled_extension_errors.object#core_type_desc src/extension.ml(331):11100-11139
                                              (apply
                                                unhandled_extension_error/4203
                                                4 ext/4790))))))
                                   default: (exit 22))
                                 with (22)
                                  (let (x/4791 =a x/4788)
                                    (before Ppxlib__Extension.collect_unhandled_extension_errors.object#core_type_desc src/extension.ml(332):11153-11179
                                      (after Ppxlib__Extension.collect_unhandled_extension_errors.object#core_type_desc src/extension.ml(332):11153-11179
                                        (apply
                                          (after Ppxlib__Extension.collect_unhandled_extension_errors.object#core_type_desc src/extension.ml(332):11153-11173
                                            (apply core_type_desc/4615
                                              self-1/4787))
                                          x/4791 acc/4789)))))))))
                        pattern_desc/4687
                        (function self-1/4793 x/4794 acc/4795
                          (funct-body Ppxlib__Extension.collect_unhandled_extension_errors.object#pattern_desc src/extension.ml(334)<ghost>:11206-11344
                            (let (self-*/4792 =a self-1/4793)
                              (before Ppxlib__Extension.collect_unhandled_extension_errors.object#pattern_desc src/extension.ml(335):11220-11344
                                (catch
                                  (switch x/4794
                                   case tag 15:
                                    (let (ext/4796 =a (field_imm 0 x/4794))
                                      (before Ppxlib__Extension.collect_unhandled_extension_errors.object#pattern_desc src/extension.ml(336):11263-11306
                                        (after Ppxlib__Extension.collect_unhandled_extension_errors.object#pattern_desc src/extension.ml(336):11263-11306
                                          (apply
                                            (field_imm 97
                                              (global Ppxlib__Import!))
                                            acc/4795
                                            (after Ppxlib__Extension.collect_unhandled_extension_errors.object#pattern_desc src/extension.ml(336):11269-11306
                                              (apply
                                                unhandled_extension_error/4203
                                                8 ext/4796))))))
                                   default: (exit 21))
                                 with (21)
                                  (let (x/4797 =a x/4794)
                                    (before Ppxlib__Extension.collect_unhandled_extension_errors.object#pattern_desc src/extension.ml(337):11320-11344
                                      (after Ppxlib__Extension.collect_unhandled_extension_errors.object#pattern_desc src/extension.ml(337):11320-11344
                                        (apply
                                          (after Ppxlib__Extension.collect_unhandled_extension_errors.object#pattern_desc src/extension.ml(337):11320-11338
                                            (apply pattern_desc/4657
                                              self-1/4793))
                                          x/4797 acc/4795)))))))))
                        expression_desc/4688
                        (function self-1/4799 x/4800 acc/4801
                          (funct-body Ppxlib__Extension.collect_unhandled_extension_errors.object#expression_desc src/extension.ml(339)<ghost>:11374-11518
                            (let (self-*/4798 =a self-1/4799)
                              (before Ppxlib__Extension.collect_unhandled_extension_errors.object#expression_desc src/extension.ml(340):11388-11518
                                (catch
                                  (switch x/4800
                                   case tag 35:
                                    (let (ext/4802 =a (field_imm 0 x/4800))
                                      (before Ppxlib__Extension.collect_unhandled_extension_errors.object#expression_desc src/extension.ml(341):11431-11477
                                        (after Ppxlib__Extension.collect_unhandled_extension_errors.object#expression_desc src/extension.ml(341):11431-11477
                                          (apply
                                            (field_imm 97
                                              (global Ppxlib__Import!))
                                            acc/4801
                                            (after Ppxlib__Extension.collect_unhandled_extension_errors.object#expression_desc src/extension.ml(341):11437-11477
                                              (apply
                                                unhandled_extension_error/4203
                                                5 ext/4802))))))
                                   default: (exit 20))
                                 with (20)
                                  (let (x/4803 =a x/4800)
                                    (before Ppxlib__Extension.collect_unhandled_extension_errors.object#expression_desc src/extension.ml(342):11491-11518
                                      (after Ppxlib__Extension.collect_unhandled_extension_errors.object#expression_desc src/extension.ml(342):11491-11518
                                        (apply
                                          (after Ppxlib__Extension.collect_unhandled_extension_errors.object#expression_desc src/extension.ml(342):11491-11512
                                            (apply expression_desc/4620
                                              self-1/4799))
                                          x/4803 acc/4801)))))))))
                        class_type_desc/4689
                        (function self-1/4805 x/4806 acc/4807
                          (funct-body Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_desc src/extension.ml(344)<ghost>:11548-11692
                            (let (self-*/4804 =a self-1/4805)
                              (before Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_desc src/extension.ml(345):11562-11692
                                (catch
                                  (switch x/4806
                                   case tag 3:
                                    (let (ext/4808 =a (field_imm 0 x/4806))
                                      (before Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_desc src/extension.ml(346):11605-11651
                                        (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_desc src/extension.ml(346):11605-11651
                                          (apply
                                            (field_imm 97
                                              (global Ppxlib__Import!))
                                            acc/4807
                                            (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_desc src/extension.ml(346):11611-11651
                                              (apply
                                                unhandled_extension_error/4203
                                                2 ext/4808))))))
                                   default: (exit 19))
                                 with (19)
                                  (let (x/4809 =a x/4806)
                                    (before Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_desc src/extension.ml(347):11665-11692
                                      (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_desc src/extension.ml(347):11665-11692
                                        (apply
                                          (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_desc src/extension.ml(347):11665-11686
                                            (apply class_type_desc/4607
                                              self-1/4805))
                                          x/4809 acc/4807)))))))))
                        class_type_field_desc/4690
                        (function self-1/4811 x/4812 acc/4813
                          (funct-body Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_field_desc src/extension.ml(349)<ghost>:11728-11894
                            (let (self-*/4810 =a self-1/4811)
                              (before Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_field_desc src/extension.ml(350):11742-11894
                                (catch
                                  (switch x/4812
                                   case tag 5:
                                    (let (ext/4814 =a (field_imm 0 x/4812))
                                      (before Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_field_desc src/extension.ml(352):11795-11847
                                        (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_field_desc src/extension.ml(352):11795-11847
                                          (apply
                                            (field_imm 97
                                              (global Ppxlib__Import!))
                                            acc/4813
                                            (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_field_desc src/extension.ml(352):11801-11847
                                              (apply
                                                unhandled_extension_error/4203
                                                3 ext/4814))))))
                                   default: (exit 18))
                                 with (18)
                                  (let (x/4815 =a x/4812)
                                    (before Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_field_desc src/extension.ml(353):11861-11894
                                      (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_field_desc src/extension.ml(353):11861-11894
                                        (apply
                                          (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_field_desc src/extension.ml(353):11861-11888
                                            (apply class_type_field_desc/4609
                                              self-1/4811))
                                          x/4815 acc/4813)))))))))
                        class_expr_desc/4691
                        (function self-1/4817 x/4818 acc/4819
                          (funct-body Ppxlib__Extension.collect_unhandled_extension_errors.object#class_expr_desc src/extension.ml(355)<ghost>:11924-12067
                            (let (self-*/4816 =a self-1/4817)
                              (before Ppxlib__Extension.collect_unhandled_extension_errors.object#class_expr_desc src/extension.ml(356):11938-12067
                                (catch
                                  (switch x/4818
                                   case tag 6:
                                    (let (ext/4820 =a (field_imm 0 x/4818))
                                      (before Ppxlib__Extension.collect_unhandled_extension_errors.object#class_expr_desc src/extension.ml(357):11980-12026
                                        (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_expr_desc src/extension.ml(357):11980-12026
                                          (apply
                                            (field_imm 97
                                              (global Ppxlib__Import!))
                                            acc/4819
                                            (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_expr_desc src/extension.ml(357):11986-12026
                                              (apply
                                                unhandled_extension_error/4203
                                                0 ext/4820))))))
                                   default: (exit 17))
                                 with (17)
                                  (let (x/4821 =a x/4818)
                                    (before Ppxlib__Extension.collect_unhandled_extension_errors.object#class_expr_desc src/extension.ml(358):12040-12067
                                      (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_expr_desc src/extension.ml(358):12040-12067
                                        (apply
                                          (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_expr_desc src/extension.ml(358):12040-12061
                                            (apply class_expr_desc/4598
                                              self-1/4817))
                                          x/4821 acc/4819)))))))))
                        class_field_desc/4692
                        (function self-1/4823 x/4824 acc/4825
                          (funct-body Ppxlib__Extension.collect_unhandled_extension_errors.object#class_field_desc src/extension.ml(360)<ghost>:12098-12243
                            (let (self-*/4822 =a self-1/4823)
                              (before Ppxlib__Extension.collect_unhandled_extension_errors.object#class_field_desc src/extension.ml(361):12112-12243
                                (catch
                                  (switch x/4824
                                   case tag 6:
                                    (let (ext/4826 =a (field_imm 0 x/4824))
                                      (before Ppxlib__Extension.collect_unhandled_extension_errors.object#class_field_desc src/extension.ml(362):12154-12201
                                        (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_field_desc src/extension.ml(362):12154-12201
                                          (apply
                                            (field_imm 97
                                              (global Ppxlib__Import!))
                                            acc/4825
                                            (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_field_desc src/extension.ml(362):12160-12201
                                              (apply
                                                unhandled_extension_error/4203
                                                1 ext/4826))))))
                                   default: (exit 16))
                                 with (16)
                                  (let (x/4827 =a x/4824)
                                    (before Ppxlib__Extension.collect_unhandled_extension_errors.object#class_field_desc src/extension.ml(363):12215-12243
                                      (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_field_desc src/extension.ml(363):12215-12243
                                        (apply
                                          (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_field_desc src/extension.ml(363):12215-12237
                                            (apply class_field_desc/4600
                                              self-1/4823))
                                          x/4827 acc/4825)))))))))
                        module_type_desc/4693
                        (function self-1/4829 x/4830 acc/4831
                          (funct-body Ppxlib__Extension.collect_unhandled_extension_errors.object#module_type_desc src/extension.ml(365)<ghost>:12274-12420
                            (let (self-*/4828 =a self-1/4829)
                              (before Ppxlib__Extension.collect_unhandled_extension_errors.object#module_type_desc src/extension.ml(366):12288-12420
                                (catch
                                  (switch x/4830
                                   case tag 5:
                                    (let (ext/4832 =a (field_imm 0 x/4830))
                                      (before Ppxlib__Extension.collect_unhandled_extension_errors.object#module_type_desc src/extension.ml(367):12331-12378
                                        (after Ppxlib__Extension.collect_unhandled_extension_errors.object#module_type_desc src/extension.ml(367):12331-12378
                                          (apply
                                            (field_imm 97
                                              (global Ppxlib__Import!))
                                            acc/4831
                                            (after Ppxlib__Extension.collect_unhandled_extension_errors.object#module_type_desc src/extension.ml(367):12337-12378
                                              (apply
                                                unhandled_extension_error/4203
                                                7 ext/4832))))))
                                   default: (exit 15))
                                 with (15)
                                  (let (x/4833 =a x/4830)
                                    (before Ppxlib__Extension.collect_unhandled_extension_errors.object#module_type_desc src/extension.ml(368):12392-12420
                                      (after Ppxlib__Extension.collect_unhandled_extension_errors.object#module_type_desc src/extension.ml(368):12392-12420
                                        (apply
                                          (after Ppxlib__Extension.collect_unhandled_extension_errors.object#module_type_desc src/extension.ml(368):12392-12414
                                            (apply module_type_desc/4646
                                              self-1/4829))
                                          x/4833 acc/4831)))))))))
                        signature_item_desc/4694
                        (function self-1/4835 x/4836 acc/4837
                          (funct-body Ppxlib__Extension.collect_unhandled_extension_errors.object#signature_item_desc src/extension.ml(370)<ghost>:12454-12621
                            (let (self-*/4834 =a self-1/4835)
                              (before Ppxlib__Extension.collect_unhandled_extension_errors.object#signature_item_desc src/extension.ml(371):12468-12621
                                (catch
                                  (switch x/4836
                                   case tag 15:
                                    (let
                                      (*match*/20001 =a (field_imm 1 x/4836)
                                       ext/4838 =a (field_imm 0 x/4836))
                                      (before Ppxlib__Extension.collect_unhandled_extension_errors.object#signature_item_desc src/extension.ml(373):12526-12576
                                        (after Ppxlib__Extension.collect_unhandled_extension_errors.object#signature_item_desc src/extension.ml(373):12526-12576
                                          (apply
                                            (field_imm 97
                                              (global Ppxlib__Import!))
                                            acc/4837
                                            (after Ppxlib__Extension.collect_unhandled_extension_errors.object#signature_item_desc src/extension.ml(373):12532-12576
                                              (apply
                                                unhandled_extension_error/4203
                                                9 ext/4838))))))
                                   default: (exit 14))
                                 with (14)
                                  (let (x/4839 =a x/4836)
                                    (before Ppxlib__Extension.collect_unhandled_extension_errors.object#signature_item_desc src/extension.ml(374):12590-12621
                                      (after Ppxlib__Extension.collect_unhandled_extension_errors.object#signature_item_desc src/extension.ml(374):12590-12621
                                        (apply
                                          (after Ppxlib__Extension.collect_unhandled_extension_errors.object#signature_item_desc src/extension.ml(374):12590-12615
                                            (apply signature_item_desc/4666
                                              self-1/4835))
                                          x/4839 acc/4837)))))))))
                        module_expr_desc/4695
                        (function self-1/4841 x/4842 acc/4843
                          (funct-body Ppxlib__Extension.collect_unhandled_extension_errors.object#module_expr_desc src/extension.ml(376)<ghost>:12652-12798
                            (let (self-*/4840 =a self-1/4841)
                              (before Ppxlib__Extension.collect_unhandled_extension_errors.object#module_expr_desc src/extension.ml(377):12666-12798
                                (catch
                                  (switch x/4842
                                   case tag 6:
                                    (let (ext/4844 =a (field_imm 0 x/4842))
                                      (before Ppxlib__Extension.collect_unhandled_extension_errors.object#module_expr_desc src/extension.ml(378):12709-12756
                                        (after Ppxlib__Extension.collect_unhandled_extension_errors.object#module_expr_desc src/extension.ml(378):12709-12756
                                          (apply
                                            (field_imm 97
                                              (global Ppxlib__Import!))
                                            acc/4843
                                            (after Ppxlib__Extension.collect_unhandled_extension_errors.object#module_expr_desc src/extension.ml(378):12715-12756
                                              (apply
                                                unhandled_extension_error/4203
                                                6 ext/4844))))))
                                   default: (exit 13))
                                 with (13)
                                  (let (x/4845 =a x/4842)
                                    (before Ppxlib__Extension.collect_unhandled_extension_errors.object#module_expr_desc src/extension.ml(379):12770-12798
                                      (after Ppxlib__Extension.collect_unhandled_extension_errors.object#module_expr_desc src/extension.ml(379):12770-12798
                                        (apply
                                          (after Ppxlib__Extension.collect_unhandled_extension_errors.object#module_expr_desc src/extension.ml(379):12770-12792
                                            (apply module_expr_desc/4642
                                              self-1/4841))
                                          x/4845 acc/4843)))))))))
                        structure_item_desc/4696
                        (function self-1/4847 x/4848 acc/4849
                          (funct-body Ppxlib__Extension.collect_unhandled_extension_errors.object#structure_item_desc src/extension.ml(381)<ghost>:12832-12999
                            (let (self-*/4846 =a self-1/4847)
                              (before Ppxlib__Extension.collect_unhandled_extension_errors.object#structure_item_desc src/extension.ml(382):12846-12999
                                (catch
                                  (switch x/4848
                                   case tag 14:
                                    (let
                                      (*match*/19998 =a (field_imm 1 x/4848)
                                       ext/4850 =a (field_imm 0 x/4848))
                                      (before Ppxlib__Extension.collect_unhandled_extension_errors.object#structure_item_desc src/extension.ml(384):12904-12954
                                        (after Ppxlib__Extension.collect_unhandled_extension_errors.object#structure_item_desc src/extension.ml(384):12904-12954
                                          (apply
                                            (field_imm 97
                                              (global Ppxlib__Import!))
                                            acc/4849
                                            (after Ppxlib__Extension.collect_unhandled_extension_errors.object#structure_item_desc src/extension.ml(384):12910-12954
                                              (apply
                                                unhandled_extension_error/4203
                                                10 ext/4850))))))
                                   default: (exit 12))
                                 with (12)
                                  (let (x/4851 =a x/4848)
                                    (before Ppxlib__Extension.collect_unhandled_extension_errors.object#structure_item_desc src/extension.ml(385):12968-12999
                                      (after Ppxlib__Extension.collect_unhandled_extension_errors.object#structure_item_desc src/extension.ml(385):12968-12999
                                        (apply
                                          (after Ppxlib__Extension.collect_unhandled_extension_errors.object#structure_item_desc src/extension.ml(385):12968-12993
                                            (apply structure_item_desc/4670
                                              self-1/4847))
                                          x/4851 acc/4849)))))))))))
                    (function env/19983
                      (let
                        (self/19984 =
                           (apply (field_imm 23 (global CamlinternalOO!)) 0
                             class/19981))
                        (seq (apply obj_init/19985 self/19984)
                          (apply (field_imm 25 (global CamlinternalOO!)) 0
                            self/19984 class/19981)))))))
             (seq (apply (field_imm 16 (global CamlinternalOO!)) class/19981)
               (apply obj_init/20020 0)))
         error_list_to_exception/4852 =
           (function param/4855
             (funct-body Ppxlib__Extension.error_list_to_exception src/extension.ml(388):13037-13099
               (if param/4855
                 (let
                   (*match*/20022 =a (field_imm 1 param/4855)
                    err/4854 =a (field_imm 0 param/4855))
                   (before Ppxlib__Extension.error_list_to_exception src/extension.ml(390):13075-13099
                     (after Ppxlib__Extension.error_list_to_exception src/extension.ml(390):13075-13099
                       (apply
                         (field_imm 7
                           (field_imm 12 (global Ppxlib__Location!)))
                         err/4854))))
                 (before Ppxlib__Extension.error_list_to_exception src/extension.ml(389):13056-13058
                   0))))
         check_unused/4856 =
           (let
             (object_tables/20026 =o (makemutable 0 0 0 0)
              class/20030 =
                (apply (field_imm 15 (global CamlinternalOO!)) shared/20021)
              obj_init/20053 =
                (let
                  (ids/20049 =
                     (apply (field_imm 7 (global CamlinternalOO!))
                       class/20030 shared/20016)
                   with_constraint/5054 =o (field_mut 0 ids/20049)
                   virtual_flag/5053 =o (field_mut 1 ids/20049)
                   variance/5052 =o (field_mut 2 ids/20049)
                   value_description/5051 =o (field_mut 3 ids/20049)
                   value_binding/5050 =o (field_mut 4 ids/20049)
                   type_kind/5049 =o (field_mut 5 ids/20049)
                   type_extension/5048 =o (field_mut 6 ids/20049)
                   type_exception/5047 =o (field_mut 7 ids/20049)
                   type_declaration/5046 =o (field_mut 8 ids/20049)
                   toplevel_phrase/5045 =o (field_mut 9 ids/20049)
                   toplevel_directive/5044 =o (field_mut 10 ids/20049)
                   structure_item_desc/4970 =o (field_mut 11 ids/20049)
                   structure_item/5043 =o (field_mut 12 ids/20049)
                   structure/5042 =o (field_mut 13 ids/20049)
                   string/5041 =o (field_mut 14 ids/20049)
                   signature_item_desc/4968 =o (field_mut 15 ids/20049)
                   signature_item/5040 =o (field_mut 16 ids/20049)
                   signature/5039 =o (field_mut 17 ids/20049)
                   row_field_desc/5038 =o (field_mut 18 ids/20049)
                   row_field/5037 =o (field_mut 19 ids/20049)
                   rec_flag/5036 =o (field_mut 20 ids/20049)
                   private_flag/5035 =o (field_mut 21 ids/20049)
                   position/5034 =o (field_mut 22 ids/20049)
                   payload/5033 =o (field_mut 23 ids/20049)
                   pattern_desc/4961 =o (field_mut 24 ids/20049)
                   pattern/5032 =o (field_mut 25 ids/20049)
                   package_type/5031 =o (field_mut 26 ids/20049)
                   override_flag/5030 =o (field_mut 27 ids/20049)
                   option/5029 =o (field_mut 28 ids/20049)
                   open_infos/5028 =o (field_mut 29 ids/20049)
                   open_description/5027 =o (field_mut 30 ids/20049)
                   open_declaration/5026 =o (field_mut 31 ids/20049)
                   object_field_desc/5025 =o (field_mut 32 ids/20049)
                   object_field/5024 =o (field_mut 33 ids/20049)
                   mutable_flag/5023 =o (field_mut 34 ids/20049)
                   module_type_desc/4967 =o (field_mut 35 ids/20049)
                   module_type_declaration/5022 =o (field_mut 36 ids/20049)
                   module_type/5021 =o (field_mut 37 ids/20049)
                   module_substitution/5020 =o (field_mut 38 ids/20049)
                   module_expr_desc/4969 =o (field_mut 39 ids/20049)
                   module_expr/5019 =o (field_mut 40 ids/20049)
                   module_declaration/5018 =o (field_mut 41 ids/20049)
                   module_binding/5017 =o (field_mut 42 ids/20049)
                   longident_loc/5016 =o (field_mut 43 ids/20049)
                   longident/5015 =o (field_mut 44 ids/20049)
                   location_stack/5014 =o (field_mut 45 ids/20049)
                   location/5013 =o (field_mut 46 ids/20049)
                   loc/5012 =o (field_mut 47 ids/20049)
                   list/5011 =o (field_mut 48 ids/20049)
                   letop/5010 =o (field_mut 49 ids/20049)
                   label_declaration/5009 =o (field_mut 50 ids/20049)
                   label/5008 =o (field_mut 51 ids/20049)
                   int/5007 =o (field_mut 52 ids/20049)
                   injectivity/5006 =o (field_mut 53 ids/20049)
                   include_infos/5005 =o (field_mut 54 ids/20049)
                   include_description/5004 =o (field_mut 55 ids/20049)
                   include_declaration/5003 =o (field_mut 56 ids/20049)
                   functor_parameter/5002 =o (field_mut 57 ids/20049)
                   extension_constructor_kind/5001 =o
                     (field_mut 58 ids/20049)
                   extension_constructor/5000 =o (field_mut 59 ids/20049)
                   extension/4959 =o (field_mut 60 ids/20049)
                   expression_desc/4962 =o (field_mut 61 ids/20049)
                   expression/4999 =o (field_mut 62 ids/20049)
                   directive_argument_desc/4998 =o (field_mut 63 ids/20049)
                   directive_argument/4997 =o (field_mut 64 ids/20049)
                   direction_flag/4996 =o (field_mut 65 ids/20049)
                   core_type_desc/4960 =o (field_mut 66 ids/20049)
                   core_type/4995 =o (field_mut 67 ids/20049)
                   constructor_declaration/4994 =o (field_mut 68 ids/20049)
                   constructor_arguments/4993 =o (field_mut 69 ids/20049)
                   constant/4992 =o (field_mut 70 ids/20049)
                   closed_flag/4991 =o (field_mut 71 ids/20049)
                   class_type_field_desc/4964 =o (field_mut 72 ids/20049)
                   class_type_field/4990 =o (field_mut 73 ids/20049)
                   class_type_desc/4963 =o (field_mut 74 ids/20049)
                   class_type_declaration/4989 =o (field_mut 75 ids/20049)
                   class_type/4988 =o (field_mut 76 ids/20049)
                   class_structure/4987 =o (field_mut 77 ids/20049)
                   class_signature/4986 =o (field_mut 78 ids/20049)
                   class_infos/4985 =o (field_mut 79 ids/20049)
                   class_field_kind/4984 =o (field_mut 80 ids/20049)
                   class_field_desc/4966 =o (field_mut 81 ids/20049)
                   class_field/4983 =o (field_mut 82 ids/20049)
                   class_expr_desc/4965 =o (field_mut 83 ids/20049)
                   class_expr/4982 =o (field_mut 84 ids/20049)
                   class_description/4981 =o (field_mut 85 ids/20049)
                   class_declaration/4980 =o (field_mut 86 ids/20049)
                   char/4979 =o (field_mut 87 ids/20049)
                   cases/4978 =o (field_mut 88 ids/20049)
                   case/4977 =o (field_mut 89 ids/20049)
                   bool/4976 =o (field_mut 90 ids/20049)
                   binding_op/4975 =o (field_mut 91 ids/20049)
                   attributes/4974 =o (field_mut 92 ids/20049)
                   attribute/4973 =o (field_mut 93 ids/20049)
                   array/4972 =o (field_mut 94 ids/20049)
                   arg_label/4971 =o (field_mut 95 ids/20049)
                   inh/20048 =
                     (apply (field_imm 17 (global CamlinternalOO!))
                       class/20030 0 0 shared/20013
                       (field_imm 1 (global Ppxlib__Ast_traverse!)) 1)
                   obj_init/20034 =o (field_mut 0 inh/20048)
                   arg_label/4863 =o (field_mut 1 inh/20048)
                   array/4864 =o (field_mut 2 inh/20048)
                   attribute/4865 =o (field_mut 3 inh/20048)
                   attributes/4866 =o (field_mut 4 inh/20048)
                   binding_op/4867 =o (field_mut 5 inh/20048)
                   bool/4868 =o (field_mut 6 inh/20048)
                   case/4869 =o (field_mut 7 inh/20048)
                   cases/4870 =o (field_mut 8 inh/20048)
                   char/4871 =o (field_mut 9 inh/20048)
                   class_declaration/4872 =o (field_mut 10 inh/20048)
                   class_description/4873 =o (field_mut 11 inh/20048)
                   class_expr/4874 =o (field_mut 12 inh/20048)
                   class_expr_desc/4875 =o (field_mut 13 inh/20048)
                   class_field/4876 =o (field_mut 14 inh/20048)
                   class_field_desc/4877 =o (field_mut 15 inh/20048)
                   class_field_kind/4878 =o (field_mut 16 inh/20048)
                   class_infos/4879 =o (field_mut 17 inh/20048)
                   class_signature/4880 =o (field_mut 18 inh/20048)
                   class_structure/4881 =o (field_mut 19 inh/20048)
                   class_type/4882 =o (field_mut 20 inh/20048)
                   class_type_declaration/4883 =o (field_mut 21 inh/20048)
                   class_type_desc/4884 =o (field_mut 22 inh/20048)
                   class_type_field/4885 =o (field_mut 23 inh/20048)
                   class_type_field_desc/4886 =o (field_mut 24 inh/20048)
                   closed_flag/4887 =o (field_mut 25 inh/20048)
                   constant/4888 =o (field_mut 26 inh/20048)
                   constructor_arguments/4889 =o (field_mut 27 inh/20048)
                   constructor_declaration/4890 =o (field_mut 28 inh/20048)
                   core_type/4891 =o (field_mut 29 inh/20048)
                   core_type_desc/4892 =o (field_mut 30 inh/20048)
                   direction_flag/4893 =o (field_mut 31 inh/20048)
                   directive_argument/4894 =o (field_mut 32 inh/20048)
                   directive_argument_desc/4895 =o (field_mut 33 inh/20048)
                   expression/4896 =o (field_mut 34 inh/20048)
                   expression_desc/4897 =o (field_mut 35 inh/20048)
                   extension/4898 =o (field_mut 36 inh/20048)
                   extension_constructor/4899 =o (field_mut 37 inh/20048)
                   extension_constructor_kind/4900 =o
                     (field_mut 38 inh/20048)
                   functor_parameter/4901 =o (field_mut 39 inh/20048)
                   include_declaration/4902 =o (field_mut 40 inh/20048)
                   include_description/4903 =o (field_mut 41 inh/20048)
                   include_infos/4904 =o (field_mut 42 inh/20048)
                   injectivity/4905 =o (field_mut 43 inh/20048)
                   int/4906 =o (field_mut 44 inh/20048)
                   label/4907 =o (field_mut 45 inh/20048)
                   label_declaration/4908 =o (field_mut 46 inh/20048)
                   letop/4909 =o (field_mut 47 inh/20048)
                   list/4910 =o (field_mut 48 inh/20048)
                   loc/4911 =o (field_mut 49 inh/20048)
                   location/4912 =o (field_mut 50 inh/20048)
                   location_stack/4913 =o (field_mut 51 inh/20048)
                   longident/4914 =o (field_mut 52 inh/20048)
                   longident_loc/4915 =o (field_mut 53 inh/20048)
                   module_binding/4916 =o (field_mut 54 inh/20048)
                   module_declaration/4917 =o (field_mut 55 inh/20048)
                   module_expr/4918 =o (field_mut 56 inh/20048)
                   module_expr_desc/4919 =o (field_mut 57 inh/20048)
                   module_substitution/4920 =o (field_mut 58 inh/20048)
                   module_type/4921 =o (field_mut 59 inh/20048)
                   module_type_declaration/4922 =o (field_mut 60 inh/20048)
                   module_type_desc/4923 =o (field_mut 61 inh/20048)
                   mutable_flag/4924 =o (field_mut 62 inh/20048)
                   object_field/4925 =o (field_mut 63 inh/20048)
                   object_field_desc/4926 =o (field_mut 64 inh/20048)
                   open_declaration/4927 =o (field_mut 65 inh/20048)
                   open_description/4928 =o (field_mut 66 inh/20048)
                   open_infos/4929 =o (field_mut 67 inh/20048)
                   option/4930 =o (field_mut 68 inh/20048)
                   override_flag/4931 =o (field_mut 69 inh/20048)
                   package_type/4932 =o (field_mut 70 inh/20048)
                   pattern/4933 =o (field_mut 71 inh/20048)
                   pattern_desc/4934 =o (field_mut 72 inh/20048)
                   payload/4935 =o (field_mut 73 inh/20048)
                   position/4936 =o (field_mut 74 inh/20048)
                   private_flag/4937 =o (field_mut 75 inh/20048)
                   rec_flag/4938 =o (field_mut 76 inh/20048)
                   row_field/4939 =o (field_mut 77 inh/20048)
                   row_field_desc/4940 =o (field_mut 78 inh/20048)
                   signature/4941 =o (field_mut 79 inh/20048)
                   signature_item/4942 =o (field_mut 80 inh/20048)
                   signature_item_desc/4943 =o (field_mut 81 inh/20048)
                   string/4944 =o (field_mut 82 inh/20048)
                   structure/4945 =o (field_mut 83 inh/20048)
                   structure_item/4946 =o (field_mut 84 inh/20048)
                   structure_item_desc/4947 =o (field_mut 85 inh/20048)
                   toplevel_directive/4948 =o (field_mut 86 inh/20048)
                   toplevel_phrase/4949 =o (field_mut 87 inh/20048)
                   type_declaration/4950 =o (field_mut 88 inh/20048)
                   type_exception/4951 =o (field_mut 89 inh/20048)
                   type_extension/4952 =o (field_mut 90 inh/20048)
                   type_kind/4953 =o (field_mut 91 inh/20048)
                   value_binding/4954 =o (field_mut 92 inh/20048)
                   value_description/4955 =o (field_mut 93 inh/20048)
                   variance/4956 =o (field_mut 94 inh/20048)
                   virtual_flag/4957 =o (field_mut 95 inh/20048)
                   with_constraint/4958 =o (field_mut 96 inh/20048))
                  (seq
                    (apply (field_imm 10 (global CamlinternalOO!))
                      class/20030
                      (makeblock 0 extension/4959
                        (function self-2/5056 param/5058
                          (funct-body Ppxlib__Extension.check_unused.object#extension src/extension.ml(396)<ghost>:13182-13307
                            (let
                              (self-*/5055 =a self-2/5056
                               *match*/20046 =a (field_imm 1 param/5058)
                               name/5057 =a (field_imm 0 param/5058))
                              (before Ppxlib__Extension.check_unused.object#extension src/extension.ml(397):13200-13307
                                (after Ppxlib__Extension.check_unused.object#extension src/extension.ml(397):13200-13307
                                  (apply
                                    (field_imm 4 (global Ppxlib__Location!))
                                    (makeblock 0 (field_imm 1 name/5057))
                                    [0:
                                     [11:
                                      "extension not expected here, Ppxlib.Extension needs updating!"
                                      0]
                                     "extension not expected here, Ppxlib.Extension needs updating!"]))))))
                        core_type_desc/4960
                        (function self-2/5060 x/5061
                          (funct-body Ppxlib__Extension.check_unused.object#core_type_desc src/extension.ml(400)<ghost>:13336-13433
                            (let (self-*/5059 =a self-2/5060)
                              (before Ppxlib__Extension.check_unused.object#core_type_desc src/extension.ml(401):13346-13433
                                (after Ppxlib__Extension.check_unused.object#core_type_desc src/extension.ml(401):13346-13433
                                  (revapply
                                    (after Ppxlib__Extension.check_unused.object#core_type_desc src/extension.ml(401):13346-13400
                                      (send
                                        collect_unhandled_extension_errors/4214
                                        692169494 x/5061 0))
                                    error_list_to_exception/4852))))))
                        pattern_desc/4961
                        (function self-2/5063 x/5064
                          (funct-body Ppxlib__Extension.check_unused.object#pattern_desc src/extension.ml(404)<ghost>:13460-13555
                            (let (self-*/5062 =a self-2/5063)
                              (before Ppxlib__Extension.check_unused.object#pattern_desc src/extension.ml(405):13470-13555
                                (after Ppxlib__Extension.check_unused.object#pattern_desc src/extension.ml(405):13470-13555
                                  (revapply
                                    (after Ppxlib__Extension.check_unused.object#pattern_desc src/extension.ml(405):13470-13522
                                      (send
                                        collect_unhandled_extension_errors/4214
                                        -715681312 x/5064 0))
                                    error_list_to_exception/4852))))))
                        expression_desc/4962
                        (function self-2/5066 x/5067
                          (funct-body Ppxlib__Extension.check_unused.object#expression_desc src/extension.ml(408)<ghost>:13585-13683
                            (let (self-*/5065 =a self-2/5066)
                              (before Ppxlib__Extension.check_unused.object#expression_desc src/extension.ml(409):13595-13683
                                (after Ppxlib__Extension.check_unused.object#expression_desc src/extension.ml(409):13595-13683
                                  (revapply
                                    (after Ppxlib__Extension.check_unused.object#expression_desc src/extension.ml(409):13595-13650
                                      (send
                                        collect_unhandled_extension_errors/4214
                                        1037672856 x/5067 0))
                                    error_list_to_exception/4852))))))
                        class_type_desc/4963
                        (function self-2/5069 x/5070
                          (funct-body Ppxlib__Extension.check_unused.object#class_type_desc src/extension.ml(412)<ghost>:13713-13811
                            (let (self-*/5068 =a self-2/5069)
                              (before Ppxlib__Extension.check_unused.object#class_type_desc src/extension.ml(413):13723-13811
                                (after Ppxlib__Extension.check_unused.object#class_type_desc src/extension.ml(413):13723-13811
                                  (revapply
                                    (after Ppxlib__Extension.check_unused.object#class_type_desc src/extension.ml(413):13723-13778
                                      (send
                                        collect_unhandled_extension_errors/4214
                                        470470447 x/5070 0))
                                    error_list_to_exception/4852))))))
                        class_type_field_desc/4964
                        (function self-2/5072 x/5073
                          (funct-body Ppxlib__Extension.check_unused.object#class_type_field_desc src/extension.ml(416)<ghost>:13847-13951
                            (let (self-*/5071 =a self-2/5072)
                              (before Ppxlib__Extension.check_unused.object#class_type_field_desc src/extension.ml(417):13857-13951
                                (after Ppxlib__Extension.check_unused.object#class_type_field_desc src/extension.ml(417):13857-13951
                                  (revapply
                                    (after Ppxlib__Extension.check_unused.object#class_type_field_desc src/extension.ml(417):13857-13918
                                      (send
                                        collect_unhandled_extension_errors/4214
                                        -805179756 x/5073 0))
                                    error_list_to_exception/4852))))))
                        class_expr_desc/4965
                        (function self-2/5075 x/5076
                          (funct-body Ppxlib__Extension.check_unused.object#class_expr_desc src/extension.ml(420)<ghost>:13981-14079
                            (let (self-*/5074 =a self-2/5075)
                              (before Ppxlib__Extension.check_unused.object#class_expr_desc src/extension.ml(421):13991-14079
                                (after Ppxlib__Extension.check_unused.object#class_expr_desc src/extension.ml(421):13991-14079
                                  (revapply
                                    (after Ppxlib__Extension.check_unused.object#class_expr_desc src/extension.ml(421):13991-14046
                                      (send
                                        collect_unhandled_extension_errors/4214
                                        961996500 x/5076 0))
                                    error_list_to_exception/4852))))))
                        class_field_desc/4966
                        (function self-2/5078 x/5079
                          (funct-body Ppxlib__Extension.check_unused.object#class_field_desc src/extension.ml(424)<ghost>:14110-14209
                            (let (self-*/5077 =a self-2/5078)
                              (before Ppxlib__Extension.check_unused.object#class_field_desc src/extension.ml(425):14120-14209
                                (after Ppxlib__Extension.check_unused.object#class_field_desc src/extension.ml(425):14120-14209
                                  (revapply
                                    (after Ppxlib__Extension.check_unused.object#class_field_desc src/extension.ml(425):14120-14176
                                      (send
                                        collect_unhandled_extension_errors/4214
                                        104911645 x/5079 0))
                                    error_list_to_exception/4852))))))
                        module_type_desc/4967
                        (function self-2/5081 x/5082
                          (funct-body Ppxlib__Extension.check_unused.object#module_type_desc src/extension.ml(428)<ghost>:14240-14339
                            (let (self-*/5080 =a self-2/5081)
                              (before Ppxlib__Extension.check_unused.object#module_type_desc src/extension.ml(429):14250-14339
                                (after Ppxlib__Extension.check_unused.object#module_type_desc src/extension.ml(429):14250-14339
                                  (revapply
                                    (after Ppxlib__Extension.check_unused.object#module_type_desc src/extension.ml(429):14250-14306
                                      (send
                                        collect_unhandled_extension_errors/4214
                                        -326032221 x/5082 0))
                                    error_list_to_exception/4852))))))
                        signature_item_desc/4968
                        (function self-2/5084 x/5085
                          (funct-body Ppxlib__Extension.check_unused.object#signature_item_desc src/extension.ml(432)<ghost>:14373-14475
                            (let (self-*/5083 =a self-2/5084)
                              (before Ppxlib__Extension.check_unused.object#signature_item_desc src/extension.ml(433):14383-14475
                                (after Ppxlib__Extension.check_unused.object#signature_item_desc src/extension.ml(433):14383-14475
                                  (revapply
                                    (after Ppxlib__Extension.check_unused.object#signature_item_desc src/extension.ml(433):14383-14442
                                      (send
                                        collect_unhandled_extension_errors/4214
                                        -27659018 x/5085 0))
                                    error_list_to_exception/4852))))))
                        module_expr_desc/4969
                        (function self-2/5087 x/5088
                          (funct-body Ppxlib__Extension.check_unused.object#module_expr_desc src/extension.ml(436)<ghost>:14506-14605
                            (let (self-*/5086 =a self-2/5087)
                              (before Ppxlib__Extension.check_unused.object#module_expr_desc src/extension.ml(437):14516-14605
                                (after Ppxlib__Extension.check_unused.object#module_expr_desc src/extension.ml(437):14516-14605
                                  (revapply
                                    (after Ppxlib__Extension.check_unused.object#module_expr_desc src/extension.ml(437):14516-14572
                                      (send
                                        collect_unhandled_extension_errors/4214
                                        165493832 x/5088 0))
                                    error_list_to_exception/4852))))))
                        structure_item_desc/4970
                        (function self-2/5090 x/5091
                          (funct-body Ppxlib__Extension.check_unused.object#structure_item_desc src/extension.ml(440)<ghost>:14639-14741
                            (let (self-*/5089 =a self-2/5090)
                              (before Ppxlib__Extension.check_unused.object#structure_item_desc src/extension.ml(441):14649-14741
                                (after Ppxlib__Extension.check_unused.object#structure_item_desc src/extension.ml(441):14649-14741
                                  (revapply
                                    (after Ppxlib__Extension.check_unused.object#structure_item_desc src/extension.ml(441):14649-14708
                                      (send
                                        collect_unhandled_extension_errors/4214
                                        90676721 x/5091 0))
                                    error_list_to_exception/4852))))))))
                    (function env/20032
                      (let
                        (self/20033 =
                           (apply (field_imm 23 (global CamlinternalOO!)) 0
                             class/20030))
                        (seq (apply obj_init/20034 self/20033)
                          (apply (field_imm 25 (global CamlinternalOO!)) 0
                            self/20033 class/20030)))))))
             (seq (apply (field_imm 16 (global CamlinternalOO!)) class/20030)
               (apply obj_init/20053 0)))
         V3/5129 =
           (module-defn(V3/5129) Ppxlib__Extension src/extension.ml(445):14749-15771
             (let
               (declare/5093 =
                  (function name/5095 context/5096 pattern/5097 k/5098
                    (funct-body Ppxlib__Extension.V3.declare src/extension.ml(448)<ghost>:14803-15004
                      (before Ppxlib__Extension.V3.declare src/extension.ml(449):14832-15004
                        (let
                          (pattern/5099 =
                             (after Ppxlib__Extension.V3.declare src/extension.ml(449):14846-14899
                               (apply
                                 (field_imm 12 (global Ppxlib__Ast_pattern!))
                                 pattern/5097
                                 (function x/5100
                                   (funct-body Ppxlib__Extension.V3.declare.(fun) src/extension.ml(449):14880-14899
                                     (before Ppxlib__Extension.V3.declare.(fun) src/extension.ml(449):14890-14898
                                       (makeblock 0 x/5100)))))))
                          (before Ppxlib__Extension.V3.declare src/extension.ml(450):14907-15004
                            (makeblock 0
                              (after Ppxlib__Extension.V3.declare src/extension.ml(451):14915-15004
                                (apply (field_imm 0 M/4124) 0 name/5095
                                  context/5096 pattern/5099
                                  (function ctxt/5101 param/5102
                                    (funct-body Ppxlib__Extension.V3.declare.(fun) src/extension.ml(451):14963-15003
                                      (before Ppxlib__Extension.V3.declare.(fun) src/extension.ml(452):14995-15002
                                        (after Ppxlib__Extension.V3.declare.(fun) src/extension.ml(452):14995-15002
                                          (apply k/5098 ctxt/5101)))))))))))))
                declare_inline/5103 =
                  (function name/5105 context/5106 pattern/5107 k/5108
                    (funct-body Ppxlib__Extension.V3.declare_inline src/extension.ml(454)<ghost>:15027-15299
                      (before Ppxlib__Extension.V3.declare_inline src/extension.ml(455):15056-15299
                        (seq
                          (after Ppxlib__Extension.V3.declare_inline src/extension.ml(455):15056-15121
                            (apply check_context_for_inline/4176
                              "Extension.declare_inline" context/5106))
                          (before Ppxlib__Extension.V3.declare_inline src/extension.ml(456):15127-15299
                            (let
                              (pattern/5109 =
                                 (after Ppxlib__Extension.V3.declare_inline src/extension.ml(456):15141-15194
                                   (apply
                                     (field_imm 12
                                       (global Ppxlib__Ast_pattern!))
                                     pattern/5107
                                     (function x/5110
                                       (funct-body Ppxlib__Extension.V3.declare_inline.(fun) src/extension.ml(456):15175-15194
                                         (before Ppxlib__Extension.V3.declare_inline.(fun) src/extension.ml(456):15185-15193
                                           (makeblock 1 x/5110)))))))
                              (before Ppxlib__Extension.V3.declare_inline src/extension.ml(457):15202-15299
                                (makeblock 0
                                  (after Ppxlib__Extension.V3.declare_inline src/extension.ml(458):15210-15299
                                    (apply (field_imm 0 M/4124) 0 name/5105
                                      context/5106 pattern/5109
                                      (function ctxt/5111 param/5112
                                        (funct-body Ppxlib__Extension.V3.declare_inline.(fun) src/extension.ml(458):15258-15298
                                          (before Ppxlib__Extension.V3.declare_inline.(fun) src/extension.ml(459):15290-15297
                                            (after Ppxlib__Extension.V3.declare_inline.(fun) src/extension.ml(459):15290-15297
                                              (apply k/5108 ctxt/5111)))))))))))))))
                declare_with_path_arg/5113 =
                  (function name/5115 context/5116 pattern/5117 k/5118
                    (funct-body Ppxlib__Extension.V3.declare_with_path_arg src/extension.ml(461)<ghost>:15329-15484
                      (before Ppxlib__Extension.V3.declare_with_path_arg src/extension.ml(462):15358-15484
                        (let
                          (pattern/5119 =
                             (after Ppxlib__Extension.V3.declare_with_path_arg src/extension.ml(462):15372-15425
                               (apply
                                 (field_imm 12 (global Ppxlib__Ast_pattern!))
                                 pattern/5117
                                 (function x/5120
                                   (funct-body Ppxlib__Extension.V3.declare_with_path_arg.(fun) src/extension.ml(462):15406-15425
                                     (before Ppxlib__Extension.V3.declare_with_path_arg.(fun) src/extension.ml(462):15416-15424
                                       (makeblock 0 x/5120)))))))
                          (before Ppxlib__Extension.V3.declare_with_path_arg src/extension.ml(463):15433-15484
                            (makeblock 0
                              (after Ppxlib__Extension.V3.declare_with_path_arg src/extension.ml(463):15435-15484
                                (apply (field_imm 0 M/4124) 1 name/5115
                                  context/5116 pattern/5119 k/5118))))))))
                declare_inline_with_path_arg/5121 =
                  (function name/5123 context/5124 pattern/5125 k/5126
                    (funct-body Ppxlib__Extension.V3.declare_inline_with_path_arg src/extension.ml(465)<ghost>:15521-15767
                      (before Ppxlib__Extension.V3.declare_inline_with_path_arg src/extension.ml(466):15550-15767
                        (seq
                          (after Ppxlib__Extension.V3.declare_inline_with_path_arg src/extension.ml(466):15550-15635
                            (apply check_context_for_inline/4176
                              "Extension.declare_inline_with_path_arg"
                              context/5124))
                          (before Ppxlib__Extension.V3.declare_inline_with_path_arg src/extension.ml(468):15641-15767
                            (let
                              (pattern/5127 =
                                 (after Ppxlib__Extension.V3.declare_inline_with_path_arg src/extension.ml(468):15655-15708
                                   (apply
                                     (field_imm 12
                                       (global Ppxlib__Ast_pattern!))
                                     pattern/5125
                                     (function x/5128
                                       (funct-body Ppxlib__Extension.V3.declare_inline_with_path_arg.(fun) src/extension.ml(468):15689-15708
                                         (before Ppxlib__Extension.V3.declare_inline_with_path_arg.(fun) src/extension.ml(468):15699-15707
                                           (makeblock 1 x/5128)))))))
                              (before Ppxlib__Extension.V3.declare_inline_with_path_arg src/extension.ml(469):15716-15767
                                (makeblock 0
                                  (after Ppxlib__Extension.V3.declare_inline_with_path_arg src/extension.ml(469):15718-15767
                                    (apply (field_imm 0 M/4124) 1 name/5123
                                      context/5124 pattern/5127 k/5126)))))))))))
               (pseudo Ppxlib__Extension.V3 src/extension.ml(445):14761-15771
                 (makeblock 0 declare/5093 declare_inline/5103
                   declare_with_path_arg/5113
                   declare_inline_with_path_arg/5121))))
         declare/5130 =
           (function name/5132 context/5133 pattern/5134 f/5135
             (funct-body Ppxlib__Extension.declare src/extension.ml(472)<ghost>:15785-15897
               (before Ppxlib__Extension.declare src/extension.ml(473):15812-15897
                 (after Ppxlib__Extension.declare src/extension.ml(473):15812-15897
                   (apply (field_imm 0 V3/5129) name/5132 context/5133
                     pattern/5134
                     (after Ppxlib__Extension.declare src/extension.ml(474):15848-15897
                       (apply
                         (field_imm 4
                           (field_imm 1 (global Ppxlib__Expansion_context!)))
                         f/5135)))))))
         declare_inline/5136 =
           (function name/5138 context/5139 pattern/5140 f/5141
             (funct-body Ppxlib__Extension.declare_inline src/extension.ml(476)<ghost>:15918-16037
               (before Ppxlib__Extension.declare_inline src/extension.ml(477):15945-16037
                 (after Ppxlib__Extension.declare_inline src/extension.ml(477):15945-16037
                   (apply (field_imm 1 V3/5129) name/5138 context/5139
                     pattern/5140
                     (after Ppxlib__Extension.declare_inline src/extension.ml(478):15988-16037
                       (apply
                         (field_imm 4
                           (field_imm 1 (global Ppxlib__Expansion_context!)))
                         f/5141)))))))
         declare_with_path_arg/5142 =
           (function name/5144 context/5145 pattern/5146 k/5147
             (funct-body Ppxlib__Extension.declare_with_path_arg src/extension.ml(480)<ghost>:16065-16279
               (before Ppxlib__Extension.declare_with_path_arg src/extension.ml(481):16092-16279
                 (let
                   (k'/5148 =
                      (after Ppxlib__Extension.declare_with_path_arg src/extension.ml(481):16101-16148
                        (apply
                          (field_imm 4
                            (field_imm 1 (global Ppxlib__Expansion_context!)))
                          k/5147)))
                   (before Ppxlib__Extension.declare_with_path_arg src/extension.ml(482):16154-16279
                     (let
                       (pattern/5149 =
                          (after Ppxlib__Extension.declare_with_path_arg src/extension.ml(482):16168-16221
                            (apply
                              (field_imm 12 (global Ppxlib__Ast_pattern!))
                              pattern/5146
                              (function x/5150
                                (funct-body Ppxlib__Extension.declare_with_path_arg.(fun) src/extension.ml(482):16202-16221
                                  (before Ppxlib__Extension.declare_with_path_arg.(fun) src/extension.ml(482):16212-16220
                                    (makeblock 0 x/5150)))))))
                       (before Ppxlib__Extension.declare_with_path_arg src/extension.ml(483):16227-16279
                         (makeblock 0
                           (after Ppxlib__Extension.declare_with_path_arg src/extension.ml(483):16229-16279
                             (apply (field_imm 0 M/4124) 1 name/5144
                               context/5145 pattern/5149 k'/5148))))))))))
         declare_inline_with_path_arg/5151 =
           (function name/5153 context/5154 pattern/5155 k/5156
             (funct-body Ppxlib__Extension.declare_inline_with_path_arg src/extension.ml(485)<ghost>:16314-16615
               (before Ppxlib__Extension.declare_inline_with_path_arg src/extension.ml(486):16341-16615
                 (let
                   (k'/5157 =
                      (after Ppxlib__Extension.declare_inline_with_path_arg src/extension.ml(486):16350-16397
                        (apply
                          (field_imm 4
                            (field_imm 1 (global Ppxlib__Expansion_context!)))
                          k/5156)))
                   (before Ppxlib__Extension.declare_inline_with_path_arg src/extension.ml(487):16403-16615
                     (seq
                       (after Ppxlib__Extension.declare_inline_with_path_arg src/extension.ml(487):16403-16486
                         (apply check_context_for_inline/4176
                           "Extension.declare_inline_with_path_arg"
                           context/5154))
                       (before Ppxlib__Extension.declare_inline_with_path_arg src/extension.ml(489):16490-16615
                         (let
                           (pattern/5158 =
                              (after Ppxlib__Extension.declare_inline_with_path_arg src/extension.ml(489):16504-16557
                                (apply
                                  (field_imm 12
                                    (global Ppxlib__Ast_pattern!))
                                  pattern/5155
                                  (function x/5159
                                    (funct-body Ppxlib__Extension.declare_inline_with_path_arg.(fun) src/extension.ml(489):16538-16557
                                      (before Ppxlib__Extension.declare_inline_with_path_arg.(fun) src/extension.ml(489):16548-16556
                                        (makeblock 1 x/5159)))))))
                           (before Ppxlib__Extension.declare_inline_with_path_arg src/extension.ml(490):16563-16615
                             (makeblock 0
                               (after Ppxlib__Extension.declare_inline_with_path_arg src/extension.ml(490):16565-16615
                                 (apply (field_imm 0 M/4124) 1 name/5153
                                   context/5154 pattern/5158 k'/5157))))))))))))
         __declare_ppx_import/5160 =
           (function name/5162 expand/5163
             (funct-body Ppxlib__Extension.__declare_ppx_import src/extension.ml(492)<ghost>:16642-16918
               (before Ppxlib__Extension.__declare_ppx_import src/extension.ml(495):16788-16918
                 (let
                   (pattern/5164 =
                      (after Ppxlib__Extension.__declare_ppx_import src/extension.ml(495):16815-16862
                        (apply (field_imm 233 (global Ppxlib__Ast_pattern!))
                          (after Ppxlib__Extension.__declare_ppx_import src/extension.ml(495):16820-16862
                            (apply
                              (field_imm 23 (global Ppxlib__Ast_pattern!))
                              (after Ppxlib__Extension.__declare_ppx_import src/extension.ml(495):16821-16853
                                (apply
                                  (field_imm 267
                                    (global Ppxlib__Ast_pattern!))
                                  (field_imm 241
                                    (global Ppxlib__Ast_pattern!))
                                  (after Ppxlib__Extension.__declare_ppx_import src/extension.ml(495):16841-16853
                                    (apply
                                      (field_imm 23
                                        (global Ppxlib__Ast_pattern!))
                                      (field_imm 3
                                        (global Ppxlib__Ast_pattern!))
                                      (field_imm 22
                                        (global Ppxlib__Ast_pattern!))))))
                              (field_imm 22 (global Ppxlib__Ast_pattern!)))))))
                   (before Ppxlib__Extension.__declare_ppx_import src/extension.ml(496):16869-16918
                     (after Ppxlib__Extension.__declare_ppx_import src/extension.ml(496):16869-16918
                       (apply (field_imm 0 V3/5129) name/5162 11 pattern/5164
                         expand/5163)))))))
         V2/5168 =
           (module-defn(V2/5168) Ppxlib__Extension src/extension.ml(498):16920-17025
             (let
               (declare/5166 = declare/5130
                declare_inline/5167 = declare_inline/5136)
               (pseudo Ppxlib__Extension.V2 src/extension.ml(498):16932-17025
                 (makeblock 0 declare/5166 declare_inline/5167)))))
        (pseudo <unknown location>
          (makeblock 0
            (makeblock 0 (field_mut 0 Context/3201)
              (field_mut 1 Context/3201) (field_mut 2 Context/3201)
              (field_mut 3 Context/3201) (field_mut 4 Context/3201)
              (field_mut 5 Context/3201) (field_mut 6 Context/3201)
              (field_mut 7 Context/3201) (field_mut 8 Context/3201)
              (field_mut 9 Context/3201) (field_mut 10 Context/3201)
              (field_mut 12 Context/3201) (field_mut 14 Context/3201)
              (field_mut 16 Context/3201) (field_mut 15 Context/3201))
            declare/5130 declare_with_path_arg/5142 declare_inline/5136
            declare_inline_with_path_arg/5151 For_context/4173
            filter_by_context/4194
            (makeblock 0 (field_mut 2 Expert/4078) (field_mut 1 Expert/4078)
              (field_mut 3 Expert/4078) (field_mut 4 Expert/4078))
            check_unused/4856 collect_unhandled_extension_errors/4214 V2/5168
            V3/5129 check_context_for_inline/4176 __declare_ppx_import/5160))))))
(setglobal Ppxlib__Extension!
  (let
    (shared/20013 =a
       [0:
        #"arg_label" #"array" #"attribute" #"attributes" #"binding_op"
        #"bool" #"case" #"cases" #"char" #"class_declaration"
        #"class_description" #"class_expr" #"class_expr_desc" #"class_field"
        #"class_field_desc" #"class_field_kind" #"class_infos"
        #"class_signature" #"class_structure" #"class_type"
        #"class_type_declaration" #"class_type_desc" #"class_type_field"
        #"class_type_field_desc" #"closed_flag" #"constant"
        #"constructor_arguments" #"constructor_declaration" #"core_type"
        #"core_type_desc" #"direction_flag" #"directive_argument"
        #"directive_argument_desc" #"expression" #"expression_desc"
        #"extension" #"extension_constructor" #"extension_constructor_kind"
        #"functor_parameter" #"include_declaration" #"include_description"
        #"include_infos" #"injectivity" #"int" #"label" #"label_declaration"
        #"letop" #"list" #"loc" #"location" #"location_stack" #"longident"
        #"longident_loc" #"module_binding" #"module_declaration"
        #"module_expr" #"module_expr_desc" #"module_substitution"
        #"module_type" #"module_type_declaration" #"module_type_desc"
        #"mutable_flag" #"object_field" #"object_field_desc"
        #"open_declaration" #"open_description" #"open_infos" #"option"
        #"override_flag" #"package_type" #"pattern" #"pattern_desc"
        #"payload" #"position" #"private_flag" #"rec_flag" #"row_field"
        #"row_field_desc" #"signature" #"signature_item"
        #"signature_item_desc" #"string" #"structure" #"structure_item"
        #"structure_item_desc" #"toplevel_directive" #"toplevel_phrase"
        #"type_declaration" #"type_exception" #"type_extension" #"type_kind"
        #"value_binding" #"value_description" #"variance" #"virtual_flag"
        #"with_constraint"]
     shared/20021 =a
       [0:
        #"bool" #"cases" #"case" #"char" #"value_binding"
        #"extension_constructor_kind" #"core_type" #"structure" #"list"
        #"label_declaration" #"module_binding" #"position"
        #"toplevel_directive" #"directive_argument" #"object_field_desc"
        #"class_type_field_desc" #"open_infos" #"pattern_desc"
        #"signature_item" #"extension_constructor" #"toplevel_phrase"
        #"extension" #"location" #"variance" #"package_type" #"virtual_flag"
        #"module_type_desc" #"rec_flag" #"payload" #"type_exception" #"label"
        #"letop" #"location_stack" #"value_description" #"module_declaration"
        #"class_type_declaration" #"longident_loc" #"closed_flag"
        #"directive_argument_desc" #"attribute" #"class_infos"
        #"signature_item_desc" #"int" #"loc" #"row_field_desc"
        #"override_flag" #"structure_item_desc" #"class_field_desc"
        #"binding_op" #"module_expr_desc" #"class_signature"
        #"type_extension" #"class_field_kind" #"module_type_declaration"
        #"arg_label" #"row_field" #"longident" #"string" #"pattern"
        #"include_description" #"signature" #"class_type_field" #"attributes"
        #"open_description" #"with_constraint" #"include_declaration"
        #"class_type_desc" #"private_flag" #"injectivity" #"open_declaration"
        #"object_field" #"array" #"constant" #"class_expr"
        #"functor_parameter" #"direction_flag" #"core_type_desc"
        #"type_declaration" #"constructor_declaration" #"option" #"type_kind"
        #"module_expr" #"module_substitution" #"class_description"
        #"expression" #"class_type" #"structure_item" #"include_infos"
        #"class_declaration" #"module_type" #"class_expr_desc"
        #"class_structure" #"mutable_flag" #"expression_desc"
        #"constructor_arguments" #"class_field"]
     shared/20016 =a
       [0:
        #"with_constraint" #"virtual_flag" #"variance" #"value_description"
        #"value_binding" #"type_kind" #"type_extension" #"type_exception"
        #"type_declaration" #"toplevel_phrase" #"toplevel_directive"
        #"structure_item_desc" #"structure_item" #"structure" #"string"
        #"signature_item_desc" #"signature_item" #"signature"
        #"row_field_desc" #"row_field" #"rec_flag" #"private_flag"
        #"position" #"payload" #"pattern_desc" #"pattern" #"package_type"
        #"override_flag" #"option" #"open_infos" #"open_description"
        #"open_declaration" #"object_field_desc" #"object_field"
        #"mutable_flag" #"module_type_desc" #"module_type_declaration"
        #"module_type" #"module_substitution" #"module_expr_desc"
        #"module_expr" #"module_declaration" #"module_binding"
        #"longident_loc" #"longident" #"location_stack" #"location" #"loc"
        #"list" #"letop" #"label_declaration" #"label" #"int" #"injectivity"
        #"include_infos" #"include_description" #"include_declaration"
        #"functor_parameter" #"extension_constructor_kind"
        #"extension_constructor" #"extension" #"expression_desc"
        #"expression" #"directive_argument_desc" #"directive_argument"
        #"direction_flag" #"core_type_desc" #"core_type"
        #"constructor_declaration" #"constructor_arguments" #"constant"
        #"closed_flag" #"class_type_field_desc" #"class_type_field"
        #"class_type_desc" #"class_type_declaration" #"class_type"
        #"class_structure" #"class_signature" #"class_infos"
        #"class_field_kind" #"class_field_desc" #"class_field"
        #"class_expr_desc" #"class_expr" #"class_description"
        #"class_declaration" #"char" #"cases" #"case" #"bool" #"binding_op"
        #"attributes" #"attribute" #"array" #"arg_label"]
     Context/3201 =
       (module-defn(Context/3201) Ppxlib__Extension src/extension.ml(6):96-5040
         (let
           (class_expr/605 = 0
            class_field/606 = 1
            class_type/607 = 2
            class_type_field/608 = 3
            core_type/609 = 4
            expression/610 = 5
            module_expr/611 = 6
            module_type/612 = 7
            pattern/613 = 8
            signature_item/614 = 9
            structure_item/615 = 10
            desc/616 =
              (function param/1316
                (funct-body Ppxlib__Extension.Context.desc src/extension.ml(35):949-1428
                  (switch* param/1316
                   case int 0:
                    (before Ppxlib__Extension.Context.desc src/extension.ml(36):1009-1027
                      "class expression")
                   case int 1:
                    (before Ppxlib__Extension.Context.desc src/extension.ml(37):1049-1062
                      "class field")
                   case int 2:
                    (before Ppxlib__Extension.Context.desc src/extension.ml(38):1083-1095
                      "class type")
                   case int 3:
                    (before Ppxlib__Extension.Context.desc src/extension.ml(39):1122-1140
                      "class type field")
                   case int 4:
                    (before Ppxlib__Extension.Context.desc src/extension.ml(40):1160-1171
                      "core type")
                   case int 5:
                    (before Ppxlib__Extension.Context.desc src/extension.ml(41):1192-1204
                      "expression")
                   case int 6:
                    (before Ppxlib__Extension.Context.desc src/extension.ml(42):1226-1245
                      "module expression")
                   case int 7:
                    (before Ppxlib__Extension.Context.desc src/extension.ml(43):1267-1280
                      "module type")
                   case int 8:
                    (before Ppxlib__Extension.Context.desc src/extension.ml(44):1298-1307
                      "pattern")
                   case int 9:
                    (before Ppxlib__Extension.Context.desc src/extension.ml(45):1332-1348
                      "signature item")
                   case int 10:
                    (before Ppxlib__Extension.Context.desc src/extension.ml(46):1373-1389
                      "structure item")
                   case int 11:
                    (before Ppxlib__Extension.Context.desc src/extension.ml(47):1410-1428
                      "type declaration"))))
            eq/1317 =
              (function a/1320 b/1321
                (funct-body Ppxlib__Extension.Context.eq src/extension.ml(49):1436-2028
                  (before Ppxlib__Extension.Context.eq src/extension.ml(51):1501-2028
                    (let (*match*/19863 = a/1320 *match*/19864 = b/1321)
                      (catch
                        (switch* *match*/19863
                         case int 0:
                          (if *match*/19864 (exit 1)
                            (before Ppxlib__Extension.Context.eq src/extension.ml(52):1551-1553
                              0))
                         case int 1:
                          (if (!= *match*/19864 1) (exit 1)
                            (before Ppxlib__Extension.Context.eq src/extension.ml(53):1588-1590
                              0))
                         case int 2:
                          (if (!= *match*/19864 2) (exit 1)
                            (before Ppxlib__Extension.Context.eq src/extension.ml(54):1623-1625
                              0))
                         case int 3:
                          (if (!= *match*/19864 3) (exit 1)
                            (before Ppxlib__Extension.Context.eq src/extension.ml(55):1670-1672
                              0))
                         case int 4:
                          (if (!= *match*/19864 4) (exit 1)
                            (before Ppxlib__Extension.Context.eq src/extension.ml(56):1703-1705
                              0))
                         case int 5:
                          (if (!= *match*/19864 5) (exit 1)
                            (before Ppxlib__Extension.Context.eq src/extension.ml(57):1738-1740
                              0))
                         case int 6:
                          (if (!= *match*/19864 6) (exit 1)
                            (before Ppxlib__Extension.Context.eq src/extension.ml(58):1775-1777
                              0))
                         case int 7:
                          (if (!= *match*/19864 7) (exit 1)
                            (before Ppxlib__Extension.Context.eq src/extension.ml(59):1812-1814
                              0))
                         case int 8:
                          (if (!= *match*/19864 8) (exit 1)
                            (before Ppxlib__Extension.Context.eq src/extension.ml(60):1841-1843
                              0))
                         case int 9:
                          (if (!= *match*/19864 9) (exit 1)
                            (before Ppxlib__Extension.Context.eq src/extension.ml(61):1884-1886
                              0))
                         case int 10:
                          (if (!= *match*/19864 10) (exit 1)
                            (before Ppxlib__Extension.Context.eq src/extension.ml(62):1927-1929
                              0))
                         case int 11:
                          (if (>= *match*/19864 11)
                            (before Ppxlib__Extension.Context.eq src/extension.ml(63):1962-1964
                              0)
                            (exit 1)))
                       with (1)
                        (before Ppxlib__Extension.Context.eq src/extension.ml(65):1984-2028
                          (seq
                            (if
                              (after Ppxlib__Extension.Context.eq src/extension.ml(65):1991-2016
                                (apply
                                  (field_imm 5
                                    (field_imm 70 (global Ppxlib__Import!)))
                                  (makeblock 0 a/1320) (makeblock 0 b/1321)))
                              0
                              (raise
                                (after Ppxlib__Extension.Context.eq src/extension.ml(65):1984-2016
                                  (makeblock 0 (global Assert_failure/30!)
                                    [0: "src/extension.ml" 65 8]))))
                            (before Ppxlib__Extension.Context.eq src/extension.ml(66):2026-2028
                              1))))))))
            get_ppx_import_extension/1378 =
              (function type_decl/1380
                (funct-body Ppxlib__Extension.Context.get_ppx_import_extension src/extension.ml(68)<ghost>:2061-2422
                  (before Ppxlib__Extension.Context.get_ppx_import_extension src/extension.ml(69):2077-2422
                    (catch
                      (let (*match*/19870 =a (field_imm 5 type_decl/1380))
                        (if *match*/19870
                          (let
                            (*match*/19871 =a (field_imm 0 *match*/19870)
                             *match*/19872 =a (field_imm 0 *match*/19871))
                            (switch *match*/19872
                             case tag 10:
                              (let
                                (*match*/19873 =a (field_imm 0 *match*/19872)
                                 name/1381 =a (field_imm 0 *match*/19873))
                                (before Ppxlib__Extension.Context.get_ppx_import_extension src/extension.ml(72):2194-2406
                                  (let
                                    (virtual_payload/1382 =
                                       (after Ppxlib__Extension.Context.get_ppx_import_extension src/extension.ml(73):2226-2316
                                         (apply
                                           (field_imm 151
                                             (field_imm 0
                                               (global Ppxlib__Ast_builder!)))
                                           (field_imm 7 type_decl/1380) 1
                                           (makeblock 0 type_decl/1380 0))))
                                    (before Ppxlib__Extension.Context.get_ppx_import_extension src/extension.ml(76):2336-2406
                                      (let (attr/3090 = 0)
                                        (before Ppxlib__Extension.Context.get_ppx_import_extension src/extension.ml(77):2361-2406
                                          (makeblock 0
                                            (makeblock 0
                                              (makeblock 0 name/1381
                                                (makeblock 0
                                                  (makeblock 0
                                                    virtual_payload/1382 0)))
                                              attr/3090))))))))
                             default: (exit 2)))
                          (exit 2)))
                     with (2)
                      (before Ppxlib__Extension.Context.get_ppx_import_extension src/extension.ml(78):2418-2422
                        0)))))
            get_extension/3091 =
              (function t/3093 x/3094
                (funct-body Ppxlib__Extension.Context.get_extension src/extension.ml(80):2430-3660
                  (before Ppxlib__Extension.Context.get_extension src/extension.ml(82):2518-3660
                    (let (*match*/19880 = t/3093 *match*/19881 = x/3094)
                      (catch
                        (switch* *match*/19880
                         case int 0:
                          (let (*match*/19882 =a (field_imm 0 *match*/19881))
                            (switch *match*/19882
                             case tag 6:
                              (let
                                (a/3096 =a (field_imm 2 *match*/19881)
                                 e/3095 =a (field_imm 0 *match*/19882))
                                (before Ppxlib__Extension.Context.get_extension src/extension.ml(84):2619-2630
                                  (makeblock 0 (makeblock 0 e/3095 a/3096))))
                             default: (exit 3)))
                         case int 1:
                          (let (*match*/19884 =a (field_imm 0 *match*/19881))
                            (switch *match*/19884
                             case tag 6:
                              (let
                                (a/3098 =a (field_imm 2 *match*/19881)
                                 e/3097 =a (field_imm 0 *match*/19884))
                                (before Ppxlib__Extension.Context.get_extension src/extension.ml(86):2715-2726
                                  (makeblock 0 (makeblock 0 e/3097 a/3098))))
                             default: (exit 3)))
                         case int 2:
                          (let (*match*/19886 =a (field_imm 0 *match*/19881))
                            (switch *match*/19886
                             case tag 3:
                              (let
                                (a/3100 =a (field_imm 2 *match*/19881)
                                 e/3099 =a (field_imm 0 *match*/19886))
                                (before Ppxlib__Extension.Context.get_extension src/extension.ml(88):2813-2824
                                  (makeblock 0 (makeblock 0 e/3099 a/3100))))
                             default: (exit 3)))
                         case int 3:
                          (let (*match*/19888 =a (field_imm 0 *match*/19881))
                            (switch *match*/19888
                             case tag 5:
                              (let
                                (a/3102 =a (field_imm 2 *match*/19881)
                                 e/3101 =a (field_imm 0 *match*/19888))
                                (before Ppxlib__Extension.Context.get_extension src/extension.ml(91):2923-2934
                                  (makeblock 0 (makeblock 0 e/3101 a/3102))))
                             default: (exit 3)))
                         case int 4:
                          (let (*match*/19890 =a (field_imm 0 *match*/19881))
                            (switch *match*/19890
                             case tag 10:
                              (let
                                (a/3104 =a (field_imm 3 *match*/19881)
                                 e/3103 =a (field_imm 0 *match*/19890))
                                (before Ppxlib__Extension.Context.get_extension src/extension.ml(93):3020-3031
                                  (makeblock 0 (makeblock 0 e/3103 a/3104))))
                             default: (exit 3)))
                         case int 5:
                          (let (*match*/19893 =a (field_imm 0 *match*/19881))
                            (switch *match*/19893
                             case tag 35:
                              (let
                                (a/3106 =a (field_imm 3 *match*/19881)
                                 e/3105 =a (field_imm 0 *match*/19893))
                                (before Ppxlib__Extension.Context.get_extension src/extension.ml(95):3118-3129
                                  (makeblock 0 (makeblock 0 e/3105 a/3106))))
                             default: (exit 3)))
                         case int 6:
                          (let (*match*/19896 =a (field_imm 0 *match*/19881))
                            (switch *match*/19896
                             case tag 6:
                              (let
                                (a/3108 =a (field_imm 2 *match*/19881)
                                 e/3107 =a (field_imm 0 *match*/19896))
                                (before Ppxlib__Extension.Context.get_extension src/extension.ml(97):3217-3228
                                  (makeblock 0 (makeblock 0 e/3107 a/3108))))
                             default: (exit 3)))
                         case int 7:
                          (let (*match*/19898 =a (field_imm 0 *match*/19881))
                            (switch *match*/19898
                             case tag 5:
                              (let
                                (a/3110 =a (field_imm 2 *match*/19881)
                                 e/3109 =a (field_imm 0 *match*/19898))
                                (before Ppxlib__Extension.Context.get_extension src/extension.ml(99):3316-3327
                                  (makeblock 0 (makeblock 0 e/3109 a/3110))))
                             default: (exit 3)))
                         case int 8:
                          (let (*match*/19900 =a (field_imm 0 *match*/19881))
                            (switch *match*/19900
                             case tag 15:
                              (let
                                (a/3112 =a (field_imm 3 *match*/19881)
                                 e/3111 =a (field_imm 0 *match*/19900))
                                (before Ppxlib__Extension.Context.get_extension src/extension.ml(101):3411-3422
                                  (makeblock 0 (makeblock 0 e/3111 a/3112))))
                             default: (exit 3)))
                         case int 9:
                          (let (*match*/19903 =a (field_imm 0 *match*/19881))
                            (switch *match*/19903
                             case tag 15:
                              (let
                                (a/3114 =a (field_imm 1 *match*/19903)
                                 e/3113 =a (field_imm 0 *match*/19903))
                                (before Ppxlib__Extension.Context.get_extension src/extension.ml(102):3489-3500
                                  (makeblock 0 (makeblock 0 e/3113 a/3114))))
                             default: (exit 3)))
                         case int 10:
                          (let (*match*/19905 =a (field_imm 0 *match*/19881))
                            (switch *match*/19905
                             case tag 14:
                              (let
                                (a/3116 =a (field_imm 1 *match*/19905)
                                 e/3115 =a (field_imm 0 *match*/19905))
                                (before Ppxlib__Extension.Context.get_extension src/extension.ml(103):3567-3578
                                  (makeblock 0 (makeblock 0 e/3115 a/3116))))
                             default: (exit 3)))
                         case int 11:
                          (let (type_decl/3117 =a *match*/19881)
                            (before Ppxlib__Extension.Context.get_extension src/extension.ml(104):3610-3644
                              (after Ppxlib__Extension.Context.get_extension src/extension.ml(104):3610-3644
                                (apply get_ppx_import_extension/1378
                                  type_decl/3117)))))
                       with (3)
                        (before Ppxlib__Extension.Context.get_extension src/extension.ml(105):3656-3660
                          0))))))
            merge_attributes_res/3176 =
              (function t/3178 x/3179 attrs/3180
                (funct-body Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(107):3668-4844
                  (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(111):3807-4844
                    (switch* t/3178
                     case int 0:
                      (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(112):3840-3895
                        (makeblock 0
                          (let (init/19907 = x/3179)
                            (makeblock 0 (field_imm 0 init/19907)
                              (field_imm 1 init/19907)
                              (after Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(112):3869-3893
                                (apply
                                  (field_imm 97 (global Ppxlib__Import!))
                                  (field_imm 2 x/3179) attrs/3180))))))
                     case int 1:
                      (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(113):3917-3972
                        (makeblock 0
                          (let (init/19908 = x/3179)
                            (makeblock 0 (field_imm 0 init/19908)
                              (field_imm 1 init/19908)
                              (after Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(113):3946-3970
                                (apply
                                  (field_imm 97 (global Ppxlib__Import!))
                                  (field_imm 2 x/3179) attrs/3180))))))
                     case int 2:
                      (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(114):3993-4050
                        (makeblock 0
                          (let (init/19909 = x/3179)
                            (makeblock 0 (field_imm 0 init/19909)
                              (field_imm 1 init/19909)
                              (after Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(114):4023-4048
                                (apply
                                  (field_imm 97 (global Ppxlib__Import!))
                                  (field_imm 2 x/3179) attrs/3180))))))
                     case int 3:
                      (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(116):4085-4142
                        (makeblock 0
                          (let (init/19910 = x/3179)
                            (makeblock 0 (field_imm 0 init/19910)
                              (field_imm 1 init/19910)
                              (after Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(116):4115-4140
                                (apply
                                  (field_imm 97 (global Ppxlib__Import!))
                                  (field_imm 2 x/3179) attrs/3180))))))
                     case int 4:
                      (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(117):4162-4219
                        (makeblock 0
                          (let (init/19911 = x/3179)
                            (makeblock 0 (field_imm 0 init/19911)
                              (field_imm 1 init/19911)
                              (field_imm 2 init/19911)
                              (after Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(117):4192-4217
                                (apply
                                  (field_imm 97 (global Ppxlib__Import!))
                                  (field_imm 3 x/3179) attrs/3180))))))
                     case int 5:
                      (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(118):4240-4297
                        (makeblock 0
                          (let (init/19912 = x/3179)
                            (makeblock 0 (field_imm 0 init/19912)
                              (field_imm 1 init/19912)
                              (field_imm 2 init/19912)
                              (after Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(118):4270-4295
                                (apply
                                  (field_imm 97 (global Ppxlib__Import!))
                                  (field_imm 3 x/3179) attrs/3180))))))
                     case int 6:
                      (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(119):4319-4376
                        (makeblock 0
                          (let (init/19913 = x/3179)
                            (makeblock 0 (field_imm 0 init/19913)
                              (field_imm 1 init/19913)
                              (after Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(119):4349-4374
                                (apply
                                  (field_imm 97 (global Ppxlib__Import!))
                                  (field_imm 2 x/3179) attrs/3180))))))
                     case int 7:
                      (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(120):4398-4455
                        (makeblock 0
                          (let (init/19914 = x/3179)
                            (makeblock 0 (field_imm 0 init/19914)
                              (field_imm 1 init/19914)
                              (after Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(120):4428-4453
                                (apply
                                  (field_imm 97 (global Ppxlib__Import!))
                                  (field_imm 2 x/3179) attrs/3180))))))
                     case int 8:
                      (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(121):4473-4530
                        (makeblock 0
                          (let (init/19915 = x/3179)
                            (makeblock 0 (field_imm 0 init/19915)
                              (field_imm 1 init/19915)
                              (field_imm 2 init/19915)
                              (after Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(121):4503-4528
                                (apply
                                  (field_imm 97 (global Ppxlib__Import!))
                                  (field_imm 3 x/3179) attrs/3180))))))
                     case int 9:
                      (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(122):4555-4636
                        (let
                          (*match*/19916 =
                             (after Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(123):4571-4594
                               (apply (field_imm 9 (global Ppxlib__Common!))
                                 attrs/3180)))
                          (if *match*/19916
                            (let
                              (q/3182 =a (field_imm 1 *match*/19916)
                               t/3181 =a (field_imm 0 *match*/19916))
                              (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(123):4623-4635
                                (makeblock 1 (makeblock 0 t/3181 q/3182))))
                            (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(123):4606-4610
                              (makeblock 0 x/3179)))))
                     case int 10:
                      (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(124):4661-4742
                        (let
                          (*match*/19917 =
                             (after Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(125):4677-4700
                               (apply (field_imm 9 (global Ppxlib__Common!))
                                 attrs/3180)))
                          (if *match*/19917
                            (let
                              (q/3185 =a (field_imm 1 *match*/19917)
                               t/3184 =a (field_imm 0 *match*/19917))
                              (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(125):4729-4741
                                (makeblock 1 (makeblock 0 t/3184 q/3185))))
                            (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(125):4712-4716
                              (makeblock 0 x/3179)))))
                     case int 11:
                      (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(126):4763-4844
                        (let
                          (*match*/19918 =
                             (after Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(127):4779-4802
                               (apply (field_imm 9 (global Ppxlib__Common!))
                                 attrs/3180)))
                          (if *match*/19918
                            (let
                              (q/3187 =a (field_imm 1 *match*/19918)
                               t/3186 =a (field_imm 0 *match*/19918))
                              (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(127):4831-4843
                                (makeblock 1 (makeblock 0 t/3186 q/3187))))
                            (before Ppxlib__Extension.Context.merge_attributes_res src/extension.ml(127):4814-4818
                              (makeblock 0 x/3179)))))))))
            merge_attributes/3188 =
              (function t/3190 x/3191 attrs/3192
                (funct-body Ppxlib__Extension.Context.merge_attributes src/extension.ml(129):4852-5036
                  (before Ppxlib__Extension.Context.merge_attributes src/extension.ml(131):4933-5036
                    (after Ppxlib__Extension.Context.merge_attributes src/extension.ml(131):4933-5036
                      (apply
                        (after Ppxlib__Extension.Context.merge_attributes src/extension.ml(132):4971-5036
                          (let
                            (func/19920 =
                               (field_imm 5
                                 (field_imm 93 (global Ppxlib__Import!)))
                             arg/19921 =
                               (function param/3200
                                 (funct-body Ppxlib__Extension.Context.merge_attributes.(fun) src/extension.ml(132):4994-5036
                                   (let
                                     (err/3199 =a (field_imm 0 param/3200))
                                     (before Ppxlib__Extension.Context.merge_attributes.(fun) src/extension.ml(132):5011-5035
                                       (after Ppxlib__Extension.Context.merge_attributes.(fun) src/extension.ml(132):5011-5035
                                         (apply
                                           (field_imm 7
                                             (field_imm 12
                                               (global Ppxlib__Location!)))
                                           err/3199)))))))
                            (function param/19922 stub
                              (apply func/19920 param/19922 arg/19921))))
                        (after Ppxlib__Extension.Context.merge_attributes src/extension.ml(131):4933-4963
                          (apply merge_attributes_res/3176 t/3190 x/3191
                            attrs/3192))))))))
           (pseudo Ppxlib__Extension.Context src/extension.ml(6):113-5040
             (makeblock 0 class_expr/605 class_field/606 class_type/607
               class_type_field/608 core_type/609 expression/610
               module_expr/611 module_type/612 pattern/613 signature_item/614
               structure_item/615 desc/616 eq/1317
               get_ppx_import_extension/1378 get_extension/3091
               merge_attributes_res/3176 merge_attributes/3188))))
     registrar/3202 =
       (after Ppxlib__Extension.registrar src/extension.ml(136):5060-5194
         (apply (field_imm 0 (field_imm 3 (global Ppxlib__Name!)))
           "extension" #"src/extension.ml"
           (function param/3253
             (funct-body Ppxlib__Extension.registrar.(fun) src/extension.ml(137):5146-5194
               (let (ctx/3252 =a (field_imm 0 param/3253))
                 (before Ppxlib__Extension.registrar.(fun) src/extension.ml(137):5170-5193
                   (makeblock 0
                     (after Ppxlib__Extension.registrar.(fun) src/extension.ml(137):5175-5193
                       (apply (field_imm 11 Context/3201) ctx/3252)))))))))
     Make/4031 =
       (module-defn(Make/4031) Ppxlib__Extension src/extension.ml(139):5196-7522
         (function Callback/19938 is_a_functor
           (let
             (declare/3619 =
                (function with_arg/3621 name/3622 context/3623 pattern/3624
                  k/3625
                  (funct-body Ppxlib__Extension.Make.declare src/extension.ml(155):5570-6341
                    (before Ppxlib__Extension.Make.declare src/extension.ml(166):5890-6341
                      (seq
                        (if (!= context/3623 4)
                          (if (>= context/3623 11)
                            (before Ppxlib__Extension.Make.declare src/extension.ml(168):5946-6014
                              (after Ppxlib__Extension.Make.declare src/extension.ml(168):5946-6014
                                (apply
                                  (field_imm 2
                                    (field_imm 3 (global Ppxlib__Name!)))
                                  registrar/3202 [0: 4] name/3622)))
                            (before Ppxlib__Extension.Make.declare src/extension.ml(171):6131-6133
                              0))
                          (before Ppxlib__Extension.Make.declare src/extension.ml(170):6050-6119
                            (after Ppxlib__Extension.Make.declare src/extension.ml(170):6050-6119
                              (apply
                                (field_imm 2
                                  (field_imm 3 (global Ppxlib__Name!)))
                                registrar/3202 [0: 11] name/3622))))
                        (before Ppxlib__Extension.Make.declare src/extension.ml(172):6140-6341
                          (seq
                            (after Ppxlib__Extension.Make.declare src/extension.ml(172):6140-6215
                              (apply
                                (field_imm 1
                                  (field_imm 3 (global Ppxlib__Name!)))
                                115569503 registrar/3202
                                (makeblock 0 context/3623) name/3622))
                            (before Ppxlib__Extension.Make.declare src/extension.ml(173):6221-6341
                              (makeblock 0
                                (after Ppxlib__Extension.Make.declare src/extension.ml(174):6236-6258
                                  (apply
                                    (field_imm 0
                                      (field_imm 0 (global Ppxlib__Name!)))
                                    name/3622))
                                context/3623
                                (makeblock 0 pattern/3624 k/3625)
                                with_arg/3621))))))))
              find/3626 =
                (function ts/3628 ext/3629
                  (funct-body Ppxlib__Extension.Make.find src/extension.ml(180)<ghost>:6354-7518
                    (before Ppxlib__Extension.Make.find src/extension.ml(181):6381-7518
                      (let
                        (*match*/19937 = (field_mut 0 ext/3629)
                         loc/3631 =a (field_imm 1 *match*/19937)
                         name/3630 =a (field_imm 0 *match*/19937))
                        (before Ppxlib__Extension.Make.find src/extension.ml(182):6422-7518
                          (let
                            (*match*/19933 =
                               (after Ppxlib__Extension.Make.find src/extension.ml(182):6438-6458
                                 (apply (field_imm 1 (global Ppxlib__Name!))
                                   name/3630))
                             arg/3633 =a (field_imm 1 *match*/19933)
                             name/3632 =a (field_imm 0 *match*/19933))
                            (before Ppxlib__Extension.Make.find src/extension.ml(183):6466-7518
                              (let
                                (l/3708 =
                                   (after Ppxlib__Extension.Make.find src/extension.ml(183):6472-6533
                                     (apply
                                       (field_imm 28
                                         (field_imm 91
                                           (global Ppxlib__Import!)))
                                       (function t/3707
                                         (funct-body Ppxlib__Extension.Make.find.(fun) src/extension.ml(183):6490-6533
                                           (before Ppxlib__Extension.Make.find.(fun) src/extension.ml(183):6500-6532
                                             (after Ppxlib__Extension.Make.find.(fun) src/extension.ml(183):6500-6532
                                               (apply
                                                 (field_imm 2
                                                   (field_imm 0
                                                     (global Ppxlib__Name!)))
                                                 (field_imm 0 t/3707)
                                                 name/3632)))))
                                       ts/3628)))
                                (if l/3708
                                  (let
                                    (*match*/19927 =a (field_imm 1 l/3708)
                                     t/3709 =a (field_imm 0 l/3708))
                                    (if *match*/19927
                                      (before Ppxlib__Extension.Make.find src/extension.ml(186):6593-6801
                                        (makeblock 1
                                          (makeblock 0
                                            (after Ppxlib__Extension.Make.find src/extension.ml(187):6611-6783
                                              (apply
                                                (field_imm 1
                                                  (field_imm 12
                                                    (global Ppxlib__Location!)))
                                                loc/3631
                                                [0:
                                                 [11:
                                                  "Multiple match for extensions: "
                                                  [2: 0 0]]
                                                 "Multiple match for extensions: %s"]
                                                (after Ppxlib__Extension.Make.find src/extension.ml(188):6689-6783
                                                  (apply
                                                    (field_imm 2
                                                      (field_imm 96
                                                        (global Ppxlib__Import!)))
                                                    ", "
                                                    (after Ppxlib__Extension.Make.find src/extension.ml(189):6731-6782
                                                      (apply
                                                        (field_imm 48
                                                          (field_imm 91
                                                            (global Ppxlib__Import!)))
                                                        l/3708
                                                        (function t/3886
                                                          (funct-body Ppxlib__Extension.Make.find.(fun) src/extension.ml(189):6746-6781
                                                            (before Ppxlib__Extension.Make.find.(fun) src/extension.ml(189):6756-6780
                                                              (after Ppxlib__Extension.Make.find.(fun) src/extension.ml(189):6756-6780
                                                                (apply
                                                                  (field_imm 1
                                                                    (field_imm 0
                                                                    (global Ppxlib__Name!)))
                                                                  (field_imm 0
                                                                    t/3886))))))))))))
                                            0)))
                                      (before Ppxlib__Extension.Make.find src/extension.ml(192):6825-7518
                                        (if
                                          (&& (not (field_int 3 t/3709))
                                            (after Ppxlib__Extension.Make.find src/extension.ml(192):6848-6866
                                              (apply
                                                (field_imm 0
                                                  (field_imm 92
                                                    (global Ppxlib__Import!)))
                                                arg/3633)))
                                          (before Ppxlib__Extension.Make.find src/extension.ml(193):6882-7016
                                            (makeblock 1
                                              (makeblock 0
                                                (after Ppxlib__Extension.Make.find src/extension.ml(194):6902-6996
                                                  (apply
                                                    (field_imm 1
                                                      (field_imm 12
                                                        (global Ppxlib__Location!)))
                                                    loc/3631
                                                    [0:
                                                     [11:
                                                      "Extension "
                                                      [2:
                                                       0
                                                       [11:
                                                        " doesn't expect a path argument"
                                                        0]]]
                                                     "Extension %s doesn't expect a path argument"]
                                                    name/3632))
                                                0)))
                                          (before Ppxlib__Extension.Make.find src/extension.ml(198):7040-7518
                                            (let
                                              (arg/3892 =
                                                 (after Ppxlib__Extension.Make.find src/extension.ml(199):7062-7476
                                                   (apply
                                                     (field_imm 2
                                                       (field_imm 92
                                                         (global Ppxlib__Import!)))
                                                     arg/3633
                                                     (function s/3893
                                                       (funct-body Ppxlib__Extension.Make.find.(fun) src/extension.ml(199):7080-7476
                                                         (before Ppxlib__Extension.Make.find.(fun) src/extension.ml(200):7106-7475
                                                           (let
                                                             (shift/3894 =[int]
                                                                (+
                                                                  (string.length
                                                                    name/3632)
                                                                  1))
                                                             (before Ppxlib__Extension.Make.find.(fun) src/extension.ml(201):7160-7475
                                                               (let
                                                                 (start/3895 =
                                                                    (field_imm 0
                                                                    loc/3631))
                                                                 (before Ppxlib__Extension.Make.find.(fun) src/extension.ml(202):7205-7475
                                                                   (makeblock 0
                                                                    (after Ppxlib__Extension.Make.find.(fun) src/extension.ml(203):7231-7248
                                                                    (apply
                                                                    (field_imm 4
                                                                    (global Ppxlib__Longident!))
                                                                    s/3893))
                                                                    (let
                                                                    (init/19925 =
                                                                    loc/3631)
                                                                    (makeblock 0
                                                                    (let
                                                                    (init/19926 =
                                                                    start/3895)
                                                                    (makeblock 0 (*,int,int,int)
                                                                    (field_imm 0
                                                                    init/19926)
                                                                    (field_int 1
                                                                    init/19926)
                                                                    (field_int 2
                                                                    init/19926)
                                                                    (+
                                                                    (field_int 3
                                                                    start/3895)
                                                                    shift/3894)))
                                                                    (field_imm 1
                                                                    init/19925)
                                                                    (field_int 2
                                                                    init/19925))))))))))))))
                                              (before Ppxlib__Extension.Make.find src/extension.ml(212):7500-7518
                                                (makeblock 0
                                                  (makeblock 0
                                                    (makeblock 0 t/3709
                                                      arg/3892))))))))))
                                  (before Ppxlib__Extension.Make.find src/extension.ml(184):6551-6558
                                    [0: 0])))))))))))
             (pseudo Ppxlib__Extension.Make src/extension.ml(142):5243-7522
               (makeblock 0 declare/3619 find/3626)))))
     Expert/4078 =
       (module-defn(Expert/4078) Ppxlib__Extension src/extension.ml(215):7524-8235
         (let
           (include/19939 =
              (apply Make/4031
                (pseudo Ppxlib__Extension.Expert src/extension.ml(216):7563-7626
                  (makeblock 0)))
            declare/4045 =a (field_mut 0 include/19939)
            find/4046 =a (field_mut 1 include/19939)
            declare_with_path_arg/4047 =
              (function name/4049 ctx/4050 patt/4051 f/4052
                (funct-body Ppxlib__Extension.Expert.declare_with_path_arg src/extension.ml(220)<ghost>:7657-7717
                  (before Ppxlib__Extension.Expert.declare_with_path_arg src/extension.ml(221):7679-7717
                    (after Ppxlib__Extension.Expert.declare_with_path_arg src/extension.ml(221):7679-7717
                      (apply declare/4045 1 name/4049 ctx/4050 patt/4051
                        f/4052)))))
            declare/4053 =
              (function name/4054 ctx/4055 patt/4056 f/4057
                (funct-body Ppxlib__Extension.Expert.declare src/extension.ml(223)<ghost>:7733-7810
                  (before Ppxlib__Extension.Expert.declare src/extension.ml(224):7755-7810
                    (after Ppxlib__Extension.Expert.declare src/extension.ml(224):7755-7810
                      (apply declare/4045 0 name/4054 ctx/4055 patt/4056
                        (function param/4058
                          (funct-body Ppxlib__Extension.Expert.declare.(fun) src/extension.ml(224):7793-7810
                            (before Ppxlib__Extension.Expert.declare.(fun) src/extension.ml(224):7808-7809
                              f/4057))))))))
            convert_res/4059 =
              (function ts/4061 loc/4062 ext/4063
                (funct-body Ppxlib__Extension.Expert.convert_res src/extension.ml(226)<ghost>:7830-8101
                  (before Ppxlib__Extension.Expert.convert_res src/extension.ml(227):7848-8101
                    (after Ppxlib__Extension.Expert.convert_res src/extension.ml(228):7871-8101
                      (apply
                        (field_imm 3 (field_imm 93 (global Ppxlib__Import!)))
                        (after Ppxlib__Extension.Expert.convert_res src/extension.ml(228):7871-7882
                          (apply find/4046 ts/4061 ext/4063))
                        (function r/4064
                          (funct-body Ppxlib__Extension.Expert.convert_res.(fun) src/extension.ml(228):7887-8101
                            (before Ppxlib__Extension.Expert.convert_res.(fun) src/extension.ml(229):7900-8101
                              (if r/4064
                                (let
                                  (*match*/19940 =a (field_imm 0 r/4064)
                                   arg/4068 =a (field_imm 1 *match*/19940)
                                   *match*/19941 =a
                                     (field_imm 0 *match*/19940)
                                   *match*/19944 =a
                                     (field_imm 2 *match*/19941)
                                   f/4067 =a (field_imm 1 *match*/19944)
                                   pattern/4066 =a
                                     (field_imm 0 *match*/19944))
                                  (before Ppxlib__Extension.Expert.convert_res.(fun) src/extension.ml(232):8009-8101
                                    (after Ppxlib__Extension.Expert.convert_res.(fun) src/extension.ml(232):8009-8101
                                      (apply
                                        (field_imm 4
                                          (field_imm 93
                                            (global Ppxlib__Import!)))
                                        (after Ppxlib__Extension.Expert.convert_res.(fun) src/extension.ml(232):8009-8061
                                          (apply
                                            (field_imm 1
                                              (global Ppxlib__Ast_pattern!))
                                            pattern/4066 loc/4062 0
                                            (field_mut 1 ext/4063)
                                            (after Ppxlib__Extension.Expert.convert_res.(fun) src/extension.ml(232):8053-8061
                                              (apply f/4067 arg/4068))))
                                        (function payload/4069
                                          (funct-body Ppxlib__Extension.Expert.convert_res.(fun) src/extension.ml(232):8066-8101
                                            (before Ppxlib__Extension.Expert.convert_res.(fun) src/extension.ml(233):8089-8101
                                              (makeblock 0 payload/4069))))))))
                                (before Ppxlib__Extension.Expert.convert_res.(fun) src/extension.ml(230):7927-7934
                                  [0: 0]))))))))))
            convert/4071 =
              (function ts/4073 loc/4074 ext/4075
                (funct-body Ppxlib__Extension.Expert.convert src/extension.ml(235)<ghost>:8117-8231
                  (before Ppxlib__Extension.Expert.convert src/extension.ml(236):8135-8231
                    (after Ppxlib__Extension.Expert.convert src/extension.ml(236):8135-8231
                      (apply
                        (after Ppxlib__Extension.Expert.convert src/extension.ml(237):8166-8231
                          (let
                            (func/19947 =
                               (field_imm 5
                                 (field_imm 93 (global Ppxlib__Import!)))
                             arg/19948 =
                               (function param/4077
                                 (funct-body Ppxlib__Extension.Expert.convert.(fun) src/extension.ml(237):8189-8231
                                   (let
                                     (err/4076 =a (field_imm 0 param/4077))
                                     (before Ppxlib__Extension.Expert.convert.(fun) src/extension.ml(237):8206-8230
                                       (after Ppxlib__Extension.Expert.convert.(fun) src/extension.ml(237):8206-8230
                                         (apply
                                           (field_imm 7
                                             (field_imm 12
                                               (global Ppxlib__Location!)))
                                           err/4076)))))))
                            (function param/19949 stub
                              (apply func/19947 param/19949 arg/19948))))
                        (after Ppxlib__Extension.Expert.convert src/extension.ml(236):8135-8158
                          (apply convert_res/4059 ts/4073 loc/4074 ext/4075))))))))
           (pseudo Ppxlib__Extension.Expert src/extension.ml(215):7540-8235
             (makeblock 0 find/4046 declare_with_path_arg/4047 declare/4053
               convert_res/4059 convert/4071))))
     M/4124 =
       (module-defn(M/4124) Ppxlib__Extension src/extension.ml(240):8237-8356
         (apply Make/4031
           (pseudo Ppxlib__Extension.M src/extension.ml(240):8254-8355
             (makeblock 0))))
     For_context/4173 =
       (module-defn(For_context/4173) Ppxlib__Extension src/extension.ml(247):8418-9695
         (let
           (convert_res/4129 =
              (function ts/4131 ctxt/4132 ext/4133
                (funct-body Ppxlib__Extension.For_context.convert_res src/extension.ml(250)<ghost>:8508-8965
                  (before Ppxlib__Extension.For_context.convert_res src/extension.ml(251):8527-8965
                    (let
                      (loc/4134 =
                         (after Ppxlib__Extension.For_context.convert_res src/extension.ml(251):8537-8589
                           (apply
                             (field_imm 0
                               (field_imm 1
                                 (global Ppxlib__Expansion_context!)))
                             ctxt/4132)))
                      (before Ppxlib__Extension.For_context.convert_res src/extension.ml(252):8597-8965
                        (after Ppxlib__Extension.For_context.convert_res src/extension.ml(253):8620-8965
                          (apply
                            (field_imm 3
                              (field_imm 93 (global Ppxlib__Import!)))
                            (after Ppxlib__Extension.For_context.convert_res src/extension.ml(253):8620-8633
                              (apply (field_imm 1 M/4124) ts/4131 ext/4133))
                            (function found/4136
                              (funct-body Ppxlib__Extension.For_context.convert_res.(fun) src/extension.ml(253):8638-8965
                                (before Ppxlib__Extension.For_context.convert_res.(fun) src/extension.ml(254):8655-8965
                                  (if found/4136
                                    (let
                                      (*match*/19951 =a
                                         (field_imm 0 found/4136)
                                       arg/4140 =a
                                         (field_imm 1 *match*/19951)
                                       *match*/19952 =a
                                         (field_imm 0 *match*/19951)
                                       *match*/19955 =a
                                         (field_imm 2 *match*/19952)
                                       f/4139 =a (field_imm 1 *match*/19955)
                                       pattern/4138 =a
                                         (field_imm 0 *match*/19955))
                                      (before Ppxlib__Extension.For_context.convert_res.(fun) src/extension.ml(256):8762-8965
                                        (after Ppxlib__Extension.For_context.convert_res.(fun) src/extension.ml(256):8762-8965
                                          (apply
                                            (field_imm 4
                                              (field_imm 93
                                                (global Ppxlib__Import!)))
                                            (after Ppxlib__Extension.For_context.convert_res.(fun) src/extension.ml(257):8772-8830
                                              (apply
                                                (field_imm 1
                                                  (global Ppxlib__Ast_pattern!))
                                                pattern/4138 loc/4134 0
                                                (field_mut 1 ext/4133)
                                                (after Ppxlib__Extension.For_context.convert_res.(fun) src/extension.ml(257):8816-8830
                                                  (apply f/4139 ctxt/4132
                                                    arg/4140))))
                                            (function payload/4141
                                              (funct-body Ppxlib__Extension.For_context.convert_res.(fun) src/extension.ml(258):8843-8964
                                                (before Ppxlib__Extension.For_context.convert_res.(fun) src/extension.ml(259):8866-8964
                                                  (switch* payload/4141
                                                   case tag 0:
                                                    (let
                                                      (x/4142 =a
                                                         (field_imm 0
                                                           payload/4141))
                                                      (before Ppxlib__Extension.For_context.convert_res.(fun) src/extension.ml(260):8907-8913
                                                        (makeblock 0 x/4142)))
                                                   case tag 1:
                                                    (before Ppxlib__Extension.For_context.convert_res.(fun) src/extension.ml(261):8936-8964
                                                      (after Ppxlib__Extension.For_context.convert_res.(fun) src/extension.ml(261):8936-8964
                                                        (apply
                                                          (field_imm 1
                                                            (global Stdlib!))
                                                          "Extension.convert")))))))))))
                                    (before Ppxlib__Extension.For_context.convert_res.(fun) src/extension.ml(255):8686-8693
                                      [0: 0]))))))))))))
            convert/4144 =
              (function ts/4146 ctxt/4147 ext/4148
                (funct-body Ppxlib__Extension.For_context.convert src/extension.ml(263)<ghost>:8981-9097
                  (before Ppxlib__Extension.For_context.convert src/extension.ml(264):9000-9097
                    (after Ppxlib__Extension.For_context.convert src/extension.ml(264):9000-9097
                      (apply
                        (after Ppxlib__Extension.For_context.convert src/extension.ml(265):9032-9097
                          (let
                            (func/19958 =
                               (field_imm 5
                                 (field_imm 93 (global Ppxlib__Import!)))
                             arg/19959 =
                               (function param/4150
                                 (funct-body Ppxlib__Extension.For_context.convert.(fun) src/extension.ml(265):9055-9097
                                   (let
                                     (err/4149 =a (field_imm 0 param/4150))
                                     (before Ppxlib__Extension.For_context.convert.(fun) src/extension.ml(265):9072-9096
                                       (after Ppxlib__Extension.For_context.convert.(fun) src/extension.ml(265):9072-9096
                                         (apply
                                           (field_imm 7
                                             (field_imm 12
                                               (global Ppxlib__Location!)))
                                           err/4149)))))))
                            (function param/19960 stub
                              (apply func/19958 param/19960 arg/19959))))
                        (after Ppxlib__Extension.For_context.convert src/extension.ml(264):9000-9024
                          (apply convert_res/4129 ts/4146 ctxt/4147 ext/4148)))))))
            convert_inline_res/4151 =
              (function ts/4153 ctxt/4154 ext/4155
                (funct-body Ppxlib__Extension.For_context.convert_inline_res src/extension.ml(267)<ghost>:9124-9545
                  (before Ppxlib__Extension.For_context.convert_inline_res src/extension.ml(268):9143-9545
                    (let
                      (loc/4156 =
                         (after Ppxlib__Extension.For_context.convert_inline_res src/extension.ml(268):9153-9205
                           (apply
                             (field_imm 0
                               (field_imm 1
                                 (global Ppxlib__Expansion_context!)))
                             ctxt/4154)))
                      (before Ppxlib__Extension.For_context.convert_inline_res src/extension.ml(269):9213-9545
                        (after Ppxlib__Extension.For_context.convert_inline_res src/extension.ml(270):9236-9545
                          (apply
                            (field_imm 3
                              (field_imm 93 (global Ppxlib__Import!)))
                            (after Ppxlib__Extension.For_context.convert_inline_res src/extension.ml(270):9236-9249
                              (apply (field_imm 1 M/4124) ts/4153 ext/4155))
                            (function found/4157
                              (funct-body Ppxlib__Extension.For_context.convert_inline_res.(fun) src/extension.ml(270):9254-9545
                                (before Ppxlib__Extension.For_context.convert_inline_res.(fun) src/extension.ml(271):9271-9545
                                  (if found/4157
                                    (let
                                      (*match*/19961 =a
                                         (field_imm 0 found/4157)
                                       arg/4161 =a
                                         (field_imm 1 *match*/19961)
                                       *match*/19962 =a
                                         (field_imm 0 *match*/19961)
                                       *match*/19965 =a
                                         (field_imm 2 *match*/19962)
                                       f/4160 =a (field_imm 1 *match*/19965)
                                       pattern/4159 =a
                                         (field_imm 0 *match*/19965))
                                      (before Ppxlib__Extension.For_context.convert_inline_res.(fun) src/extension.ml(273):9378-9545
                                        (after Ppxlib__Extension.For_context.convert_inline_res.(fun) src/extension.ml(273):9378-9545
                                          (apply
                                            (field_imm 4
                                              (field_imm 93
                                                (global Ppxlib__Import!)))
                                            (after Ppxlib__Extension.For_context.convert_inline_res.(fun) src/extension.ml(274):9388-9446
                                              (apply
                                                (field_imm 1
                                                  (global Ppxlib__Ast_pattern!))
                                                pattern/4159 loc/4156 0
                                                (field_mut 1 ext/4155)
                                                (after Ppxlib__Extension.For_context.convert_inline_res.(fun) src/extension.ml(274):9432-9446
                                                  (apply f/4160 ctxt/4154
                                                    arg/4161))))
                                            (function payload/4162
                                              (funct-body Ppxlib__Extension.For_context.convert_inline_res.(fun) src/extension.ml(275):9459-9544
                                                (before Ppxlib__Extension.For_context.convert_inline_res.(fun) src/extension.ml(276):9482-9544
                                                  (switch* payload/4162
                                                   case tag 0:
                                                    (let
                                                      (x/4163 =a
                                                         (field_imm 0
                                                           payload/4162))
                                                      (before Ppxlib__Extension.For_context.convert_inline_res.(fun) src/extension.ml(276):9513-9523
                                                        (makeblock 0
                                                          (makeblock 0 x/4163
                                                            0))))
                                                   case tag 1:
                                                    (let
                                                      (l/4164 =a
                                                         (field_imm 0
                                                           payload/4162))
                                                      (before Ppxlib__Extension.For_context.convert_inline_res.(fun) src/extension.ml(276):9538-9544
                                                        (makeblock 0 l/4164)))))))))))
                                    (before Ppxlib__Extension.For_context.convert_inline_res.(fun) src/extension.ml(272):9302-9309
                                      [0: 0]))))))))))))
            convert_inline/4166 =
              (function ts/4168 ctxt/4169 ext/4170
                (funct-body Ppxlib__Extension.For_context.convert_inline src/extension.ml(278)<ghost>:9568-9691
                  (before Ppxlib__Extension.For_context.convert_inline src/extension.ml(279):9587-9691
                    (after Ppxlib__Extension.For_context.convert_inline src/extension.ml(279):9587-9691
                      (apply
                        (after Ppxlib__Extension.For_context.convert_inline src/extension.ml(280):9626-9691
                          (let
                            (func/19968 =
                               (field_imm 5
                                 (field_imm 93 (global Ppxlib__Import!)))
                             arg/19969 =
                               (function param/4172
                                 (funct-body Ppxlib__Extension.For_context.convert_inline.(fun) src/extension.ml(280):9649-9691
                                   (let
                                     (err/4171 =a (field_imm 0 param/4172))
                                     (before Ppxlib__Extension.For_context.convert_inline.(fun) src/extension.ml(280):9666-9690
                                       (after Ppxlib__Extension.For_context.convert_inline.(fun) src/extension.ml(280):9666-9690
                                         (apply
                                           (field_imm 7
                                             (field_imm 12
                                               (global Ppxlib__Location!)))
                                           err/4171)))))))
                            (function param/19970 stub
                              (apply func/19968 param/19970 arg/19969))))
                        (after Ppxlib__Extension.For_context.convert_inline src/extension.ml(279):9587-9618
                          (apply convert_inline_res/4151 ts/4168 ctxt/4169
                            ext/4170))))))))
           (pseudo Ppxlib__Extension.For_context src/extension.ml(247):8439-9695
             (makeblock 0 convert_res/4129 convert/4144
               convert_inline_res/4151 convert_inline/4166))))
     check_context_for_inline/4176 =
       (function func/4178 ctx/4179
         (funct-body Ppxlib__Extension.check_context_for_inline src/extension.ml(285):9736-10084
           (before Ppxlib__Extension.check_context_for_inline src/extension.ml(287):9828-10084
             (catch
               (switch* ctx/4179
                case int 0: (exit 11)
                case int 1:
                 (before Ppxlib__Extension.check_context_for_inline src/extension.ml(288):9870-9872
                   0)
                case int 2: (exit 11)
                case int 3:
                 (before Ppxlib__Extension.check_context_for_inline src/extension.ml(289):9905-9907
                   0)
                case int 4: (exit 11)
                case int 5: (exit 11)
                case int 6: (exit 11)
                case int 7: (exit 11)
                case int 8: (exit 11)
                case int 9:
                 (before Ppxlib__Extension.check_context_for_inline src/extension.ml(290):9938-9940
                   0)
                case int 10:
                 (before Ppxlib__Extension.check_context_for_inline src/extension.ml(291):9971-9973
                   0)
                case int 11: (exit 11))
              with (11)
               (let (context/4180 =a ctx/4179)
                 (before Ppxlib__Extension.check_context_for_inline src/extension.ml(293):9995-10084
                   (after Ppxlib__Extension.check_context_for_inline src/extension.ml(293):9995-10084
                     (apply (field_imm 9 (global Stdlib__printf!))
                       (field_imm 0 (global Stdlib!))
                       [0:
                        [2: 0 [11: ": " [2: 0 [11: " can't be inlined" 0]]]]
                        "%s: %s can't be inlined"]
                       func/4178
                       (after Ppxlib__Extension.check_context_for_inline src/extension.ml(294):10062-10084
                         (apply (field_imm 11 Context/3201) context/4180)))))))))))
    (letrec
      (filter_by_context/4194
         (function context/4196 expanders/4197
           (funct-body Ppxlib__Extension.filter_by_context src/extension.ml(296):10094-10398
             (before Ppxlib__Extension.filter_by_context src/extension.ml(299):10202-10398
               (if expanders/4197
                 (let
                   (rest/4200 =a (field_imm 1 expanders/4197)
                    *match*/19972 =a (field_imm 0 expanders/4197)
                    t/4199 =a (field_imm 0 *match*/19972))
                   (before Ppxlib__Extension.filter_by_context src/extension.ml(301):10255-10398
                     (let
                       (*match*/19971 =
                          (after Ppxlib__Extension.filter_by_context src/extension.ml(302):10269-10297
                            (apply (field_imm 12 Context/3201) context/4196
                              (field_int 1 t/4199))))
                       (if *match*/19971
                         (before Ppxlib__Extension.filter_by_context src/extension.ml(304):10367-10397
                           (after Ppxlib__Extension.filter_by_context src/extension.ml(304):10367-10397
                             (apply filter_by_context/4194 context/4196
                               rest/4200)))
                         (before Ppxlib__Extension.filter_by_context src/extension.ml(303):10317-10352
                           (makeblock 0 t/4199
                             (after Ppxlib__Extension.filter_by_context src/extension.ml(303):10322-10352
                               (apply filter_by_context/4194 context/4196
                                 rest/4200))))))))
                 (before Ppxlib__Extension.filter_by_context src/extension.ml(300):10233-10235
                   0))))))
      (let
        (unhandled_extension_error/4203 =
           (function ctx/4205 param/4213
             (funct-body Ppxlib__Extension.unhandled_extension_error src/extension.ml(306)<ghost>:10430-10701
               (let (name/4206 =a (field_imm 0 param/4213))
                 (before Ppxlib__Extension.unhandled_extension_error src/extension.ml(307):10448-10701
                   (if
                     (not
                       (||
                         (after Ppxlib__Extension.unhandled_extension_error src/extension.ml(309):10466-10523
                           (apply
                             (field_imm 2
                               (field_imm 4 (global Ppxlib__Name!)))
                             115569503 (field_imm 0 name/4206)))
                         (after Ppxlib__Extension.unhandled_extension_error src/extension.ml(310):10533-10560
                           (apply (field_imm 6 (global Ppxlib__Name!))
                             (field_imm 0 name/4206)))))
                     (before Ppxlib__Extension.unhandled_extension_error src/extension.ml(312):10573-10691
                       (makeblock 0
                         (after Ppxlib__Extension.unhandled_extension_error src/extension.ml(313):10581-10684
                           (apply
                             (field_imm 0
                               (field_imm 4
                                 (field_imm 3 (global Ppxlib__Name!))))
                             registrar/3202 (makeblock 0 ctx/4205) 0
                             [0:
                              [11:
                               "Extension `"
                               [2: 0 [11: "' was not translated" 0]]]
                              "Extension `%s' was not translated"]
                             name/4206))
                         0))
                     (before Ppxlib__Extension.unhandled_extension_error src/extension.ml(316):10699-10701
                       0))))))
         collect_unhandled_extension_errors/4214 =
           (let
             (class/19981 =
                (apply (field_imm 15 (global CamlinternalOO!)) shared/20021)
              obj_init/20020 =
                (let
                  (ids/20015 =
                     (apply (field_imm 7 (global CamlinternalOO!))
                       class/19981 shared/20016)
                   structure_item_desc/4696 =o (field_mut 11 ids/20015)
                   signature_item_desc/4694 =o (field_mut 15 ids/20015)
                   pattern_desc/4687 =o (field_mut 24 ids/20015)
                   module_type_desc/4693 =o (field_mut 35 ids/20015)
                   module_expr_desc/4695 =o (field_mut 39 ids/20015)
                   extension/4685 =o (field_mut 60 ids/20015)
                   expression_desc/4688 =o (field_mut 61 ids/20015)
                   core_type_desc/4686 =o (field_mut 66 ids/20015)
                   class_type_field_desc/4690 =o (field_mut 72 ids/20015)
                   class_type_desc/4689 =o (field_mut 74 ids/20015)
                   class_field_desc/4692 =o (field_mut 81 ids/20015)
                   class_expr_desc/4691 =o (field_mut 83 ids/20015)
                   inh/20014 =
                     (apply (field_imm 17 (global CamlinternalOO!))
                       class/19981 0 0 shared/20013
                       (field_imm 2 (global Ppxlib__Ast_traverse!)) 1)
                   obj_init/19985 =o (field_mut 0 inh/20014)
                   class_expr_desc/4598 =o (field_mut 13 inh/20014)
                   class_field_desc/4600 =o (field_mut 15 inh/20014)
                   class_type_desc/4607 =o (field_mut 22 inh/20014)
                   class_type_field_desc/4609 =o (field_mut 24 inh/20014)
                   core_type_desc/4615 =o (field_mut 30 inh/20014)
                   expression_desc/4620 =o (field_mut 35 inh/20014)
                   module_expr_desc/4642 =o (field_mut 57 inh/20014)
                   module_type_desc/4646 =o (field_mut 61 inh/20014)
                   pattern_desc/4657 =o (field_mut 72 inh/20014)
                   signature_item_desc/4666 =o (field_mut 81 inh/20014)
                   structure_item_desc/4670 =o (field_mut 85 inh/20014))
                  (seq
                    (apply (field_imm 10 (global CamlinternalOO!))
                      class/19981
                      (makeblock 0 extension/4685
                        (function self-1/4782 param/4785 acc/4784
                          (funct-body Ppxlib__Extension.collect_unhandled_extension_errors.object#extension src/extension.ml(322)<ghost>:10839-11008
                            (let (name/4783 =a (field_imm 0 param/4785))
                              (before Ppxlib__Extension.collect_unhandled_extension_errors.object#extension src/extension.ml(323):10861-11008
                                (after Ppxlib__Extension.collect_unhandled_extension_errors.object#extension src/extension.ml(323):10861-11008
                                  (apply
                                    (field_imm 97 (global Ppxlib__Import!))
                                    acc/4784
                                    (makeblock 0
                                      (after Ppxlib__Extension.collect_unhandled_extension_errors.object#extension src/extension.ml(325):10885-10997
                                        (apply
                                          (field_imm 1
                                            (field_imm 12
                                              (global Ppxlib__Location!)))
                                          (field_imm 1 name/4783)
                                          [0:
                                           [11:
                                            "extension not expected here, Ppxlib.Extension needs updating!"
                                            0]
                                           "extension not expected here, Ppxlib.Extension needs updating!"]))
                                      0)))))))
                        core_type_desc/4686
                        (function self-1/4787 x/4788 acc/4789
                          (funct-body Ppxlib__Extension.collect_unhandled_extension_errors.object#core_type_desc src/extension.ml(329)<ghost>:11037-11179
                            (before Ppxlib__Extension.collect_unhandled_extension_errors.object#core_type_desc src/extension.ml(330):11051-11179
                              (catch
                                (switch x/4788
                                 case tag 10:
                                  (let (ext/4790 =a (field_imm 0 x/4788))
                                    (before Ppxlib__Extension.collect_unhandled_extension_errors.object#core_type_desc src/extension.ml(331):11094-11139
                                      (after Ppxlib__Extension.collect_unhandled_extension_errors.object#core_type_desc src/extension.ml(331):11094-11139
                                        (apply
                                          (field_imm 97
                                            (global Ppxlib__Import!))
                                          acc/4789
                                          (after Ppxlib__Extension.collect_unhandled_extension_errors.object#core_type_desc src/extension.ml(331):11100-11139
                                            (apply
                                              unhandled_extension_error/4203
                                              4 ext/4790))))))
                                 default: (exit 22))
                               with (22)
                                (let (x/4791 =a x/4788)
                                  (before Ppxlib__Extension.collect_unhandled_extension_errors.object#core_type_desc src/extension.ml(332):11153-11179
                                    (after Ppxlib__Extension.collect_unhandled_extension_errors.object#core_type_desc src/extension.ml(332):11153-11179
                                      (apply
                                        (after Ppxlib__Extension.collect_unhandled_extension_errors.object#core_type_desc src/extension.ml(332):11153-11173
                                          (apply core_type_desc/4615
                                            self-1/4787))
                                        x/4791 acc/4789))))))))
                        pattern_desc/4687
                        (function self-1/4793 x/4794 acc/4795
                          (funct-body Ppxlib__Extension.collect_unhandled_extension_errors.object#pattern_desc src/extension.ml(334)<ghost>:11206-11344
                            (before Ppxlib__Extension.collect_unhandled_extension_errors.object#pattern_desc src/extension.ml(335):11220-11344
                              (catch
                                (switch x/4794
                                 case tag 15:
                                  (let (ext/4796 =a (field_imm 0 x/4794))
                                    (before Ppxlib__Extension.collect_unhandled_extension_errors.object#pattern_desc src/extension.ml(336):11263-11306
                                      (after Ppxlib__Extension.collect_unhandled_extension_errors.object#pattern_desc src/extension.ml(336):11263-11306
                                        (apply
                                          (field_imm 97
                                            (global Ppxlib__Import!))
                                          acc/4795
                                          (after Ppxlib__Extension.collect_unhandled_extension_errors.object#pattern_desc src/extension.ml(336):11269-11306
                                            (apply
                                              unhandled_extension_error/4203
                                              8 ext/4796))))))
                                 default: (exit 21))
                               with (21)
                                (let (x/4797 =a x/4794)
                                  (before Ppxlib__Extension.collect_unhandled_extension_errors.object#pattern_desc src/extension.ml(337):11320-11344
                                    (after Ppxlib__Extension.collect_unhandled_extension_errors.object#pattern_desc src/extension.ml(337):11320-11344
                                      (apply
                                        (after Ppxlib__Extension.collect_unhandled_extension_errors.object#pattern_desc src/extension.ml(337):11320-11338
                                          (apply pattern_desc/4657
                                            self-1/4793))
                                        x/4797 acc/4795))))))))
                        expression_desc/4688
                        (function self-1/4799 x/4800 acc/4801
                          (funct-body Ppxlib__Extension.collect_unhandled_extension_errors.object#expression_desc src/extension.ml(339)<ghost>:11374-11518
                            (before Ppxlib__Extension.collect_unhandled_extension_errors.object#expression_desc src/extension.ml(340):11388-11518
                              (catch
                                (switch x/4800
                                 case tag 35:
                                  (let (ext/4802 =a (field_imm 0 x/4800))
                                    (before Ppxlib__Extension.collect_unhandled_extension_errors.object#expression_desc src/extension.ml(341):11431-11477
                                      (after Ppxlib__Extension.collect_unhandled_extension_errors.object#expression_desc src/extension.ml(341):11431-11477
                                        (apply
                                          (field_imm 97
                                            (global Ppxlib__Import!))
                                          acc/4801
                                          (after Ppxlib__Extension.collect_unhandled_extension_errors.object#expression_desc src/extension.ml(341):11437-11477
                                            (apply
                                              unhandled_extension_error/4203
                                              5 ext/4802))))))
                                 default: (exit 20))
                               with (20)
                                (let (x/4803 =a x/4800)
                                  (before Ppxlib__Extension.collect_unhandled_extension_errors.object#expression_desc src/extension.ml(342):11491-11518
                                    (after Ppxlib__Extension.collect_unhandled_extension_errors.object#expression_desc src/extension.ml(342):11491-11518
                                      (apply
                                        (after Ppxlib__Extension.collect_unhandled_extension_errors.object#expression_desc src/extension.ml(342):11491-11512
                                          (apply expression_desc/4620
                                            self-1/4799))
                                        x/4803 acc/4801))))))))
                        class_type_desc/4689
                        (function self-1/4805 x/4806 acc/4807
                          (funct-body Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_desc src/extension.ml(344)<ghost>:11548-11692
                            (before Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_desc src/extension.ml(345):11562-11692
                              (switch x/4806
                               case tag 3:
                                (let (ext/4808 =a (field_imm 0 x/4806))
                                  (before Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_desc src/extension.ml(346):11605-11651
                                    (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_desc src/extension.ml(346):11605-11651
                                      (apply
                                        (field_imm 97
                                          (global Ppxlib__Import!))
                                        acc/4807
                                        (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_desc src/extension.ml(346):11611-11651
                                          (apply
                                            unhandled_extension_error/4203 2
                                            ext/4808))))))
                               default:
                                (let (x/4809 =a x/4806)
                                  (before Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_desc src/extension.ml(347):11665-11692
                                    (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_desc src/extension.ml(347):11665-11692
                                      (apply
                                        (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_desc src/extension.ml(347):11665-11686
                                          (apply class_type_desc/4607
                                            self-1/4805))
                                        x/4809 acc/4807))))))))
                        class_type_field_desc/4690
                        (function self-1/4811 x/4812 acc/4813
                          (funct-body Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_field_desc src/extension.ml(349)<ghost>:11728-11894
                            (before Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_field_desc src/extension.ml(350):11742-11894
                              (switch x/4812
                               case tag 5:
                                (let (ext/4814 =a (field_imm 0 x/4812))
                                  (before Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_field_desc src/extension.ml(352):11795-11847
                                    (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_field_desc src/extension.ml(352):11795-11847
                                      (apply
                                        (field_imm 97
                                          (global Ppxlib__Import!))
                                        acc/4813
                                        (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_field_desc src/extension.ml(352):11801-11847
                                          (apply
                                            unhandled_extension_error/4203 3
                                            ext/4814))))))
                               default:
                                (let (x/4815 =a x/4812)
                                  (before Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_field_desc src/extension.ml(353):11861-11894
                                    (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_field_desc src/extension.ml(353):11861-11894
                                      (apply
                                        (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_type_field_desc src/extension.ml(353):11861-11888
                                          (apply class_type_field_desc/4609
                                            self-1/4811))
                                        x/4815 acc/4813))))))))
                        class_expr_desc/4691
                        (function self-1/4817 x/4818 acc/4819
                          (funct-body Ppxlib__Extension.collect_unhandled_extension_errors.object#class_expr_desc src/extension.ml(355)<ghost>:11924-12067
                            (before Ppxlib__Extension.collect_unhandled_extension_errors.object#class_expr_desc src/extension.ml(356):11938-12067
                              (switch x/4818
                               case tag 6:
                                (let (ext/4820 =a (field_imm 0 x/4818))
                                  (before Ppxlib__Extension.collect_unhandled_extension_errors.object#class_expr_desc src/extension.ml(357):11980-12026
                                    (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_expr_desc src/extension.ml(357):11980-12026
                                      (apply
                                        (field_imm 97
                                          (global Ppxlib__Import!))
                                        acc/4819
                                        (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_expr_desc src/extension.ml(357):11986-12026
                                          (apply
                                            unhandled_extension_error/4203 0
                                            ext/4820))))))
                               default:
                                (let (x/4821 =a x/4818)
                                  (before Ppxlib__Extension.collect_unhandled_extension_errors.object#class_expr_desc src/extension.ml(358):12040-12067
                                    (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_expr_desc src/extension.ml(358):12040-12067
                                      (apply
                                        (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_expr_desc src/extension.ml(358):12040-12061
                                          (apply class_expr_desc/4598
                                            self-1/4817))
                                        x/4821 acc/4819))))))))
                        class_field_desc/4692
                        (function self-1/4823 x/4824 acc/4825
                          (funct-body Ppxlib__Extension.collect_unhandled_extension_errors.object#class_field_desc src/extension.ml(360)<ghost>:12098-12243
                            (before Ppxlib__Extension.collect_unhandled_extension_errors.object#class_field_desc src/extension.ml(361):12112-12243
                              (switch x/4824
                               case tag 6:
                                (let (ext/4826 =a (field_imm 0 x/4824))
                                  (before Ppxlib__Extension.collect_unhandled_extension_errors.object#class_field_desc src/extension.ml(362):12154-12201
                                    (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_field_desc src/extension.ml(362):12154-12201
                                      (apply
                                        (field_imm 97
                                          (global Ppxlib__Import!))
                                        acc/4825
                                        (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_field_desc src/extension.ml(362):12160-12201
                                          (apply
                                            unhandled_extension_error/4203 1
                                            ext/4826))))))
                               default:
                                (let (x/4827 =a x/4824)
                                  (before Ppxlib__Extension.collect_unhandled_extension_errors.object#class_field_desc src/extension.ml(363):12215-12243
                                    (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_field_desc src/extension.ml(363):12215-12243
                                      (apply
                                        (after Ppxlib__Extension.collect_unhandled_extension_errors.object#class_field_desc src/extension.ml(363):12215-12237
                                          (apply class_field_desc/4600
                                            self-1/4823))
                                        x/4827 acc/4825))))))))
                        module_type_desc/4693
                        (function self-1/4829 x/4830 acc/4831
                          (funct-body Ppxlib__Extension.collect_unhandled_extension_errors.object#module_type_desc src/extension.ml(365)<ghost>:12274-12420
                            (before Ppxlib__Extension.collect_unhandled_extension_errors.object#module_type_desc src/extension.ml(366):12288-12420
                              (switch x/4830
                               case tag 5:
                                (let (ext/4832 =a (field_imm 0 x/4830))
                                  (before Ppxlib__Extension.collect_unhandled_extension_errors.object#module_type_desc src/extension.ml(367):12331-12378
                                    (after Ppxlib__Extension.collect_unhandled_extension_errors.object#module_type_desc src/extension.ml(367):12331-12378
                                      (apply
                                        (field_imm 97
                                          (global Ppxlib__Import!))
                                        acc/4831
                                        (after Ppxlib__Extension.collect_unhandled_extension_errors.object#module_type_desc src/extension.ml(367):12337-12378
                                          (apply
                                            unhandled_extension_error/4203 7
                                            ext/4832))))))
                               default:
                                (let (x/4833 =a x/4830)
                                  (before Ppxlib__Extension.collect_unhandled_extension_errors.object#module_type_desc src/extension.ml(368):12392-12420
                                    (after Ppxlib__Extension.collect_unhandled_extension_errors.object#module_type_desc src/extension.ml(368):12392-12420
                                      (apply
                                        (after Ppxlib__Extension.collect_unhandled_extension_errors.object#module_type_desc src/extension.ml(368):12392-12414
                                          (apply module_type_desc/4646
                                            self-1/4829))
                                        x/4833 acc/4831))))))))
                        signature_item_desc/4694
                        (function self-1/4835 x/4836 acc/4837
                          (funct-body Ppxlib__Extension.collect_unhandled_extension_errors.object#signature_item_desc src/extension.ml(370)<ghost>:12454-12621
                            (before Ppxlib__Extension.collect_unhandled_extension_errors.object#signature_item_desc src/extension.ml(371):12468-12621
                              (switch x/4836
                               case tag 15:
                                (let (ext/4838 =a (field_imm 0 x/4836))
                                  (before Ppxlib__Extension.collect_unhandled_extension_errors.object#signature_item_desc src/extension.ml(373):12526-12576
                                    (after Ppxlib__Extension.collect_unhandled_extension_errors.object#signature_item_desc src/extension.ml(373):12526-12576
                                      (apply
                                        (field_imm 97
                                          (global Ppxlib__Import!))
                                        acc/4837
                                        (after Ppxlib__Extension.collect_unhandled_extension_errors.object#signature_item_desc src/extension.ml(373):12532-12576
                                          (apply
                                            unhandled_extension_error/4203 9
                                            ext/4838))))))
                               default:
                                (let (x/4839 =a x/4836)
                                  (before Ppxlib__Extension.collect_unhandled_extension_errors.object#signature_item_desc src/extension.ml(374):12590-12621
                                    (after Ppxlib__Extension.collect_unhandled_extension_errors.object#signature_item_desc src/extension.ml(374):12590-12621
                                      (apply
                                        (after Ppxlib__Extension.collect_unhandled_extension_errors.object#signature_item_desc src/extension.ml(374):12590-12615
                                          (apply signature_item_desc/4666
                                            self-1/4835))
                                        x/4839 acc/4837))))))))
                        module_expr_desc/4695
                        (function self-1/4841 x/4842 acc/4843
                          (funct-body Ppxlib__Extension.collect_unhandled_extension_errors.object#module_expr_desc src/extension.ml(376)<ghost>:12652-12798
                            (before Ppxlib__Extension.collect_unhandled_extension_errors.object#module_expr_desc src/extension.ml(377):12666-12798
                              (switch x/4842
                               case tag 6:
                                (let (ext/4844 =a (field_imm 0 x/4842))
                                  (before Ppxlib__Extension.collect_unhandled_extension_errors.object#module_expr_desc src/extension.ml(378):12709-12756
                                    (after Ppxlib__Extension.collect_unhandled_extension_errors.object#module_expr_desc src/extension.ml(378):12709-12756
                                      (apply
                                        (field_imm 97
                                          (global Ppxlib__Import!))
                                        acc/4843
                                        (after Ppxlib__Extension.collect_unhandled_extension_errors.object#module_expr_desc src/extension.ml(378):12715-12756
                                          (apply
                                            unhandled_extension_error/4203 6
                                            ext/4844))))))
                               default:
                                (let (x/4845 =a x/4842)
                                  (before Ppxlib__Extension.collect_unhandled_extension_errors.object#module_expr_desc src/extension.ml(379):12770-12798
                                    (after Ppxlib__Extension.collect_unhandled_extension_errors.object#module_expr_desc src/extension.ml(379):12770-12798
                                      (apply
                                        (after Ppxlib__Extension.collect_unhandled_extension_errors.object#module_expr_desc src/extension.ml(379):12770-12792
                                          (apply module_expr_desc/4642
                                            self-1/4841))
                                        x/4845 acc/4843))))))))
                        structure_item_desc/4696
                        (function self-1/4847 x/4848 acc/4849
                          (funct-body Ppxlib__Extension.collect_unhandled_extension_errors.object#structure_item_desc src/extension.ml(381)<ghost>:12832-12999
                            (before Ppxlib__Extension.collect_unhandled_extension_errors.object#structure_item_desc src/extension.ml(382):12846-12999
                              (switch x/4848
                               case tag 14:
                                (let (ext/4850 =a (field_imm 0 x/4848))
                                  (before Ppxlib__Extension.collect_unhandled_extension_errors.object#structure_item_desc src/extension.ml(384):12904-12954
                                    (after Ppxlib__Extension.collect_unhandled_extension_errors.object#structure_item_desc src/extension.ml(384):12904-12954
                                      (apply
                                        (field_imm 97
                                          (global Ppxlib__Import!))
                                        acc/4849
                                        (after Ppxlib__Extension.collect_unhandled_extension_errors.object#structure_item_desc src/extension.ml(384):12910-12954
                                          (apply
                                            unhandled_extension_error/4203 10
                                            ext/4850))))))
                               default:
                                (let (x/4851 =a x/4848)
                                  (before Ppxlib__Extension.collect_unhandled_extension_errors.object#structure_item_desc src/extension.ml(385):12968-12999
                                    (after Ppxlib__Extension.collect_unhandled_extension_errors.object#structure_item_desc src/extension.ml(385):12968-12999
                                      (apply
                                        (after Ppxlib__Extension.collect_unhandled_extension_errors.object#structure_item_desc src/extension.ml(385):12968-12993
                                          (apply structure_item_desc/4670
                                            self-1/4847))
                                        x/4851 acc/4849))))))))))
                    (function env/19983
                      (let
                        (self/19984 =
                           (apply (field_imm 23 (global CamlinternalOO!)) 0
                             class/19981))
                        (seq (apply obj_init/19985 self/19984)
                          (apply (field_imm 25 (global CamlinternalOO!)) 0
                            self/19984 class/19981)))))))
             (seq (apply (field_imm 16 (global CamlinternalOO!)) class/19981)
               (apply obj_init/20020 0)))
         error_list_to_exception/4852 =
           (function param/4855
             (funct-body Ppxlib__Extension.error_list_to_exception src/extension.ml(388):13037-13099
               (if param/4855
                 (let (err/4854 =a (field_imm 0 param/4855))
                   (before Ppxlib__Extension.error_list_to_exception src/extension.ml(390):13075-13099
                     (after Ppxlib__Extension.error_list_to_exception src/extension.ml(390):13075-13099
                       (apply
                         (field_imm 7
                           (field_imm 12 (global Ppxlib__Location!)))
                         err/4854))))
                 (before Ppxlib__Extension.error_list_to_exception src/extension.ml(389):13056-13058
                   0))))
         check_unused/4856 =
           (let
             (class/20030 =
                (apply (field_imm 15 (global CamlinternalOO!)) shared/20021)
              obj_init/20053 =
                (let
                  (ids/20049 =
                     (apply (field_imm 7 (global CamlinternalOO!))
                       class/20030 shared/20016)
                   structure_item_desc/4970 =o (field_mut 11 ids/20049)
                   signature_item_desc/4968 =o (field_mut 15 ids/20049)
                   pattern_desc/4961 =o (field_mut 24 ids/20049)
                   module_type_desc/4967 =o (field_mut 35 ids/20049)
                   module_expr_desc/4969 =o (field_mut 39 ids/20049)
                   extension/4959 =o (field_mut 60 ids/20049)
                   expression_desc/4962 =o (field_mut 61 ids/20049)
                   core_type_desc/4960 =o (field_mut 66 ids/20049)
                   class_type_field_desc/4964 =o (field_mut 72 ids/20049)
                   class_type_desc/4963 =o (field_mut 74 ids/20049)
                   class_field_desc/4966 =o (field_mut 81 ids/20049)
                   class_expr_desc/4965 =o (field_mut 83 ids/20049)
                   inh/20048 =
                     (apply (field_imm 17 (global CamlinternalOO!))
                       class/20030 0 0 shared/20013
                       (field_imm 1 (global Ppxlib__Ast_traverse!)) 1)
                   obj_init/20034 =o (field_mut 0 inh/20048))
                  (seq
                    (apply (field_imm 10 (global CamlinternalOO!))
                      class/20030
                      (makeblock 0 extension/4959
                        (function self-2/5056 param/5058
                          (funct-body Ppxlib__Extension.check_unused.object#extension src/extension.ml(396)<ghost>:13182-13307
                            (let (name/5057 =a (field_imm 0 param/5058))
                              (before Ppxlib__Extension.check_unused.object#extension src/extension.ml(397):13200-13307
                                (after Ppxlib__Extension.check_unused.object#extension src/extension.ml(397):13200-13307
                                  (apply
                                    (field_imm 4 (global Ppxlib__Location!))
                                    (makeblock 0 (field_imm 1 name/5057))
                                    [0:
                                     [11:
                                      "extension not expected here, Ppxlib.Extension needs updating!"
                                      0]
                                     "extension not expected here, Ppxlib.Extension needs updating!"]))))))
                        core_type_desc/4960
                        (function self-2/5060 x/5061
                          (funct-body Ppxlib__Extension.check_unused.object#core_type_desc src/extension.ml(400)<ghost>:13336-13433
                            (before Ppxlib__Extension.check_unused.object#core_type_desc src/extension.ml(401):13346-13433
                              (after Ppxlib__Extension.check_unused.object#core_type_desc src/extension.ml(401):13346-13433
                                (apply error_list_to_exception/4852
                                  (after Ppxlib__Extension.check_unused.object#core_type_desc src/extension.ml(401):13346-13400
                                    (send
                                      collect_unhandled_extension_errors/4214
                                      692169494 x/5061 0)))))))
                        pattern_desc/4961
                        (function self-2/5063 x/5064
                          (funct-body Ppxlib__Extension.check_unused.object#pattern_desc src/extension.ml(404)<ghost>:13460-13555
                            (before Ppxlib__Extension.check_unused.object#pattern_desc src/extension.ml(405):13470-13555
                              (after Ppxlib__Extension.check_unused.object#pattern_desc src/extension.ml(405):13470-13555
                                (apply error_list_to_exception/4852
                                  (after Ppxlib__Extension.check_unused.object#pattern_desc src/extension.ml(405):13470-13522
                                    (send
                                      collect_unhandled_extension_errors/4214
                                      -715681312 x/5064 0)))))))
                        expression_desc/4962
                        (function self-2/5066 x/5067
                          (funct-body Ppxlib__Extension.check_unused.object#expression_desc src/extension.ml(408)<ghost>:13585-13683
                            (before Ppxlib__Extension.check_unused.object#expression_desc src/extension.ml(409):13595-13683
                              (after Ppxlib__Extension.check_unused.object#expression_desc src/extension.ml(409):13595-13683
                                (apply error_list_to_exception/4852
                                  (after Ppxlib__Extension.check_unused.object#expression_desc src/extension.ml(409):13595-13650
                                    (send
                                      collect_unhandled_extension_errors/4214
                                      1037672856 x/5067 0)))))))
                        class_type_desc/4963
                        (function self-2/5069 x/5070
                          (funct-body Ppxlib__Extension.check_unused.object#class_type_desc src/extension.ml(412)<ghost>:13713-13811
                            (before Ppxlib__Extension.check_unused.object#class_type_desc src/extension.ml(413):13723-13811
                              (after Ppxlib__Extension.check_unused.object#class_type_desc src/extension.ml(413):13723-13811
                                (apply error_list_to_exception/4852
                                  (after Ppxlib__Extension.check_unused.object#class_type_desc src/extension.ml(413):13723-13778
                                    (send
                                      collect_unhandled_extension_errors/4214
                                      470470447 x/5070 0)))))))
                        class_type_field_desc/4964
                        (function self-2/5072 x/5073
                          (funct-body Ppxlib__Extension.check_unused.object#class_type_field_desc src/extension.ml(416)<ghost>:13847-13951
                            (before Ppxlib__Extension.check_unused.object#class_type_field_desc src/extension.ml(417):13857-13951
                              (after Ppxlib__Extension.check_unused.object#class_type_field_desc src/extension.ml(417):13857-13951
                                (apply error_list_to_exception/4852
                                  (after Ppxlib__Extension.check_unused.object#class_type_field_desc src/extension.ml(417):13857-13918
                                    (send
                                      collect_unhandled_extension_errors/4214
                                      -805179756 x/5073 0)))))))
                        class_expr_desc/4965
                        (function self-2/5075 x/5076
                          (funct-body Ppxlib__Extension.check_unused.object#class_expr_desc src/extension.ml(420)<ghost>:13981-14079
                            (before Ppxlib__Extension.check_unused.object#class_expr_desc src/extension.ml(421):13991-14079
                              (after Ppxlib__Extension.check_unused.object#class_expr_desc src/extension.ml(421):13991-14079
                                (apply error_list_to_exception/4852
                                  (after Ppxlib__Extension.check_unused.object#class_expr_desc src/extension.ml(421):13991-14046
                                    (send
                                      collect_unhandled_extension_errors/4214
                                      961996500 x/5076 0)))))))
                        class_field_desc/4966
                        (function self-2/5078 x/5079
                          (funct-body Ppxlib__Extension.check_unused.object#class_field_desc src/extension.ml(424)<ghost>:14110-14209
                            (before Ppxlib__Extension.check_unused.object#class_field_desc src/extension.ml(425):14120-14209
                              (after Ppxlib__Extension.check_unused.object#class_field_desc src/extension.ml(425):14120-14209
                                (apply error_list_to_exception/4852
                                  (after Ppxlib__Extension.check_unused.object#class_field_desc src/extension.ml(425):14120-14176
                                    (send
                                      collect_unhandled_extension_errors/4214
                                      104911645 x/5079 0)))))))
                        module_type_desc/4967
                        (function self-2/5081 x/5082
                          (funct-body Ppxlib__Extension.check_unused.object#module_type_desc src/extension.ml(428)<ghost>:14240-14339
                            (before Ppxlib__Extension.check_unused.object#module_type_desc src/extension.ml(429):14250-14339
                              (after Ppxlib__Extension.check_unused.object#module_type_desc src/extension.ml(429):14250-14339
                                (apply error_list_to_exception/4852
                                  (after Ppxlib__Extension.check_unused.object#module_type_desc src/extension.ml(429):14250-14306
                                    (send
                                      collect_unhandled_extension_errors/4214
                                      -326032221 x/5082 0)))))))
                        signature_item_desc/4968
                        (function self-2/5084 x/5085
                          (funct-body Ppxlib__Extension.check_unused.object#signature_item_desc src/extension.ml(432)<ghost>:14373-14475
                            (before Ppxlib__Extension.check_unused.object#signature_item_desc src/extension.ml(433):14383-14475
                              (after Ppxlib__Extension.check_unused.object#signature_item_desc src/extension.ml(433):14383-14475
                                (apply error_list_to_exception/4852
                                  (after Ppxlib__Extension.check_unused.object#signature_item_desc src/extension.ml(433):14383-14442
                                    (send
                                      collect_unhandled_extension_errors/4214
                                      -27659018 x/5085 0)))))))
                        module_expr_desc/4969
                        (function self-2/5087 x/5088
                          (funct-body Ppxlib__Extension.check_unused.object#module_expr_desc src/extension.ml(436)<ghost>:14506-14605
                            (before Ppxlib__Extension.check_unused.object#module_expr_desc src/extension.ml(437):14516-14605
                              (after Ppxlib__Extension.check_unused.object#module_expr_desc src/extension.ml(437):14516-14605
                                (apply error_list_to_exception/4852
                                  (after Ppxlib__Extension.check_unused.object#module_expr_desc src/extension.ml(437):14516-14572
                                    (send
                                      collect_unhandled_extension_errors/4214
                                      165493832 x/5088 0)))))))
                        structure_item_desc/4970
                        (function self-2/5090 x/5091
                          (funct-body Ppxlib__Extension.check_unused.object#structure_item_desc src/extension.ml(440)<ghost>:14639-14741
                            (before Ppxlib__Extension.check_unused.object#structure_item_desc src/extension.ml(441):14649-14741
                              (after Ppxlib__Extension.check_unused.object#structure_item_desc src/extension.ml(441):14649-14741
                                (apply error_list_to_exception/4852
                                  (after Ppxlib__Extension.check_unused.object#structure_item_desc src/extension.ml(441):14649-14708
                                    (send
                                      collect_unhandled_extension_errors/4214
                                      90676721 x/5091 0)))))))))
                    (function env/20032
                      (let
                        (self/20033 =
                           (apply (field_imm 23 (global CamlinternalOO!)) 0
                             class/20030))
                        (seq (apply obj_init/20034 self/20033)
                          (apply (field_imm 25 (global CamlinternalOO!)) 0
                            self/20033 class/20030)))))))
             (seq (apply (field_imm 16 (global CamlinternalOO!)) class/20030)
               (apply obj_init/20053 0)))
         V3/5129 =
           (module-defn(V3/5129) Ppxlib__Extension src/extension.ml(445):14749-15771
             (let
               (declare/5093 =
                  (function name/5095 context/5096 pattern/5097 k/5098
                    (funct-body Ppxlib__Extension.V3.declare src/extension.ml(448)<ghost>:14803-15004
                      (before Ppxlib__Extension.V3.declare src/extension.ml(449):14832-15004
                        (let
                          (pattern/5099 =
                             (after Ppxlib__Extension.V3.declare src/extension.ml(449):14846-14899
                               (apply
                                 (field_imm 12 (global Ppxlib__Ast_pattern!))
                                 pattern/5097
                                 (function x/5100
                                   (funct-body Ppxlib__Extension.V3.declare.(fun) src/extension.ml(449):14880-14899
                                     (before Ppxlib__Extension.V3.declare.(fun) src/extension.ml(449):14890-14898
                                       (makeblock 0 x/5100)))))))
                          (before Ppxlib__Extension.V3.declare src/extension.ml(450):14907-15004
                            (makeblock 0
                              (after Ppxlib__Extension.V3.declare src/extension.ml(451):14915-15004
                                (apply (field_imm 0 M/4124) 0 name/5095
                                  context/5096 pattern/5099
                                  (function ctxt/5101 param/5102
                                    (funct-body Ppxlib__Extension.V3.declare.(fun) src/extension.ml(451):14963-15003
                                      (before Ppxlib__Extension.V3.declare.(fun) src/extension.ml(452):14995-15002
                                        (after Ppxlib__Extension.V3.declare.(fun) src/extension.ml(452):14995-15002
                                          (apply k/5098 ctxt/5101)))))))))))))
                declare_inline/5103 =
                  (function name/5105 context/5106 pattern/5107 k/5108
                    (funct-body Ppxlib__Extension.V3.declare_inline src/extension.ml(454)<ghost>:15027-15299
                      (before Ppxlib__Extension.V3.declare_inline src/extension.ml(455):15056-15299
                        (seq
                          (after Ppxlib__Extension.V3.declare_inline src/extension.ml(455):15056-15121
                            (apply check_context_for_inline/4176
                              "Extension.declare_inline" context/5106))
                          (before Ppxlib__Extension.V3.declare_inline src/extension.ml(456):15127-15299
                            (let
                              (pattern/5109 =
                                 (after Ppxlib__Extension.V3.declare_inline src/extension.ml(456):15141-15194
                                   (apply
                                     (field_imm 12
                                       (global Ppxlib__Ast_pattern!))
                                     pattern/5107
                                     (function x/5110
                                       (funct-body Ppxlib__Extension.V3.declare_inline.(fun) src/extension.ml(456):15175-15194
                                         (before Ppxlib__Extension.V3.declare_inline.(fun) src/extension.ml(456):15185-15193
                                           (makeblock 1 x/5110)))))))
                              (before Ppxlib__Extension.V3.declare_inline src/extension.ml(457):15202-15299
                                (makeblock 0
                                  (after Ppxlib__Extension.V3.declare_inline src/extension.ml(458):15210-15299
                                    (apply (field_imm 0 M/4124) 0 name/5105
                                      context/5106 pattern/5109
                                      (function ctxt/5111 param/5112
                                        (funct-body Ppxlib__Extension.V3.declare_inline.(fun) src/extension.ml(458):15258-15298
                                          (before Ppxlib__Extension.V3.declare_inline.(fun) src/extension.ml(459):15290-15297
                                            (after Ppxlib__Extension.V3.declare_inline.(fun) src/extension.ml(459):15290-15297
                                              (apply k/5108 ctxt/5111)))))))))))))))
                declare_with_path_arg/5113 =
                  (function name/5115 context/5116 pattern/5117 k/5118
                    (funct-body Ppxlib__Extension.V3.declare_with_path_arg src/extension.ml(461)<ghost>:15329-15484
                      (before Ppxlib__Extension.V3.declare_with_path_arg src/extension.ml(462):15358-15484
                        (let
                          (pattern/5119 =
                             (after Ppxlib__Extension.V3.declare_with_path_arg src/extension.ml(462):15372-15425
                               (apply
                                 (field_imm 12 (global Ppxlib__Ast_pattern!))
                                 pattern/5117
                                 (function x/5120
                                   (funct-body Ppxlib__Extension.V3.declare_with_path_arg.(fun) src/extension.ml(462):15406-15425
                                     (before Ppxlib__Extension.V3.declare_with_path_arg.(fun) src/extension.ml(462):15416-15424
                                       (makeblock 0 x/5120)))))))
                          (before Ppxlib__Extension.V3.declare_with_path_arg src/extension.ml(463):15433-15484
                            (makeblock 0
                              (after Ppxlib__Extension.V3.declare_with_path_arg src/extension.ml(463):15435-15484
                                (apply (field_imm 0 M/4124) 1 name/5115
                                  context/5116 pattern/5119 k/5118))))))))
                declare_inline_with_path_arg/5121 =
                  (function name/5123 context/5124 pattern/5125 k/5126
                    (funct-body Ppxlib__Extension.V3.declare_inline_with_path_arg src/extension.ml(465)<ghost>:15521-15767
                      (before Ppxlib__Extension.V3.declare_inline_with_path_arg src/extension.ml(466):15550-15767
                        (seq
                          (after Ppxlib__Extension.V3.declare_inline_with_path_arg src/extension.ml(466):15550-15635
                            (apply check_context_for_inline/4176
                              "Extension.declare_inline_with_path_arg"
                              context/5124))
                          (before Ppxlib__Extension.V3.declare_inline_with_path_arg src/extension.ml(468):15641-15767
                            (let
                              (pattern/5127 =
                                 (after Ppxlib__Extension.V3.declare_inline_with_path_arg src/extension.ml(468):15655-15708
                                   (apply
                                     (field_imm 12
                                       (global Ppxlib__Ast_pattern!))
                                     pattern/5125
                                     (function x/5128
                                       (funct-body Ppxlib__Extension.V3.declare_inline_with_path_arg.(fun) src/extension.ml(468):15689-15708
                                         (before Ppxlib__Extension.V3.declare_inline_with_path_arg.(fun) src/extension.ml(468):15699-15707
                                           (makeblock 1 x/5128)))))))
                              (before Ppxlib__Extension.V3.declare_inline_with_path_arg src/extension.ml(469):15716-15767
                                (makeblock 0
                                  (after Ppxlib__Extension.V3.declare_inline_with_path_arg src/extension.ml(469):15718-15767
                                    (apply (field_imm 0 M/4124) 1 name/5123
                                      context/5124 pattern/5127 k/5126)))))))))))
               (pseudo Ppxlib__Extension.V3 src/extension.ml(445):14761-15771
                 (makeblock 0 declare/5093 declare_inline/5103
                   declare_with_path_arg/5113
                   declare_inline_with_path_arg/5121))))
         declare/5130 =
           (function name/5132 context/5133 pattern/5134 f/5135
             (funct-body Ppxlib__Extension.declare src/extension.ml(472)<ghost>:15785-15897
               (before Ppxlib__Extension.declare src/extension.ml(473):15812-15897
                 (after Ppxlib__Extension.declare src/extension.ml(473):15812-15897
                   (apply (field_imm 0 V3/5129) name/5132 context/5133
                     pattern/5134
                     (after Ppxlib__Extension.declare src/extension.ml(474):15848-15897
                       (apply
                         (field_imm 4
                           (field_imm 1 (global Ppxlib__Expansion_context!)))
                         f/5135)))))))
         declare_inline/5136 =
           (function name/5138 context/5139 pattern/5140 f/5141
             (funct-body Ppxlib__Extension.declare_inline src/extension.ml(476)<ghost>:15918-16037
               (before Ppxlib__Extension.declare_inline src/extension.ml(477):15945-16037
                 (after Ppxlib__Extension.declare_inline src/extension.ml(477):15945-16037
                   (apply (field_imm 1 V3/5129) name/5138 context/5139
                     pattern/5140
                     (after Ppxlib__Extension.declare_inline src/extension.ml(478):15988-16037
                       (apply
                         (field_imm 4
                           (field_imm 1 (global Ppxlib__Expansion_context!)))
                         f/5141)))))))
         declare_with_path_arg/5142 =
           (function name/5144 context/5145 pattern/5146 k/5147
             (funct-body Ppxlib__Extension.declare_with_path_arg src/extension.ml(480)<ghost>:16065-16279
               (before Ppxlib__Extension.declare_with_path_arg src/extension.ml(481):16092-16279
                 (let
                   (k'/5148 =
                      (after Ppxlib__Extension.declare_with_path_arg src/extension.ml(481):16101-16148
                        (apply
                          (field_imm 4
                            (field_imm 1 (global Ppxlib__Expansion_context!)))
                          k/5147)))
                   (before Ppxlib__Extension.declare_with_path_arg src/extension.ml(482):16154-16279
                     (let
                       (pattern/5149 =
                          (after Ppxlib__Extension.declare_with_path_arg src/extension.ml(482):16168-16221
                            (apply
                              (field_imm 12 (global Ppxlib__Ast_pattern!))
                              pattern/5146
                              (function x/5150
                                (funct-body Ppxlib__Extension.declare_with_path_arg.(fun) src/extension.ml(482):16202-16221
                                  (before Ppxlib__Extension.declare_with_path_arg.(fun) src/extension.ml(482):16212-16220
                                    (makeblock 0 x/5150)))))))
                       (before Ppxlib__Extension.declare_with_path_arg src/extension.ml(483):16227-16279
                         (makeblock 0
                           (after Ppxlib__Extension.declare_with_path_arg src/extension.ml(483):16229-16279
                             (apply (field_imm 0 M/4124) 1 name/5144
                               context/5145 pattern/5149 k'/5148))))))))))
         declare_inline_with_path_arg/5151 =
           (function name/5153 context/5154 pattern/5155 k/5156
             (funct-body Ppxlib__Extension.declare_inline_with_path_arg src/extension.ml(485)<ghost>:16314-16615
               (before Ppxlib__Extension.declare_inline_with_path_arg src/extension.ml(486):16341-16615
                 (let
                   (k'/5157 =
                      (after Ppxlib__Extension.declare_inline_with_path_arg src/extension.ml(486):16350-16397
                        (apply
                          (field_imm 4
                            (field_imm 1 (global Ppxlib__Expansion_context!)))
                          k/5156)))
                   (before Ppxlib__Extension.declare_inline_with_path_arg src/extension.ml(487):16403-16615
                     (seq
                       (after Ppxlib__Extension.declare_inline_with_path_arg src/extension.ml(487):16403-16486
                         (apply check_context_for_inline/4176
                           "Extension.declare_inline_with_path_arg"
                           context/5154))
                       (before Ppxlib__Extension.declare_inline_with_path_arg src/extension.ml(489):16490-16615
                         (let
                           (pattern/5158 =
                              (after Ppxlib__Extension.declare_inline_with_path_arg src/extension.ml(489):16504-16557
                                (apply
                                  (field_imm 12
                                    (global Ppxlib__Ast_pattern!))
                                  pattern/5155
                                  (function x/5159
                                    (funct-body Ppxlib__Extension.declare_inline_with_path_arg.(fun) src/extension.ml(489):16538-16557
                                      (before Ppxlib__Extension.declare_inline_with_path_arg.(fun) src/extension.ml(489):16548-16556
                                        (makeblock 1 x/5159)))))))
                           (before Ppxlib__Extension.declare_inline_with_path_arg src/extension.ml(490):16563-16615
                             (makeblock 0
                               (after Ppxlib__Extension.declare_inline_with_path_arg src/extension.ml(490):16565-16615
                                 (apply (field_imm 0 M/4124) 1 name/5153
                                   context/5154 pattern/5158 k'/5157))))))))))))
         __declare_ppx_import/5160 =
           (function name/5162 expand/5163
             (funct-body Ppxlib__Extension.__declare_ppx_import src/extension.ml(492)<ghost>:16642-16918
               (before Ppxlib__Extension.__declare_ppx_import src/extension.ml(495):16788-16918
                 (let
                   (pattern/5164 =
                      (after Ppxlib__Extension.__declare_ppx_import src/extension.ml(495):16815-16862
                        (apply (field_imm 233 (global Ppxlib__Ast_pattern!))
                          (after Ppxlib__Extension.__declare_ppx_import src/extension.ml(495):16820-16862
                            (apply
                              (field_imm 23 (global Ppxlib__Ast_pattern!))
                              (after Ppxlib__Extension.__declare_ppx_import src/extension.ml(495):16821-16853
                                (apply
                                  (field_imm 267
                                    (global Ppxlib__Ast_pattern!))
                                  (field_imm 241
                                    (global Ppxlib__Ast_pattern!))
                                  (after Ppxlib__Extension.__declare_ppx_import src/extension.ml(495):16841-16853
                                    (apply
                                      (field_imm 23
                                        (global Ppxlib__Ast_pattern!))
                                      (field_imm 3
                                        (global Ppxlib__Ast_pattern!))
                                      (field_imm 22
                                        (global Ppxlib__Ast_pattern!))))))
                              (field_imm 22 (global Ppxlib__Ast_pattern!)))))))
                   (before Ppxlib__Extension.__declare_ppx_import src/extension.ml(496):16869-16918
                     (after Ppxlib__Extension.__declare_ppx_import src/extension.ml(496):16869-16918
                       (apply (field_imm 0 V3/5129) name/5162 11 pattern/5164
                         expand/5163)))))))
         V2/5168 =
           (module-defn(V2/5168) Ppxlib__Extension src/extension.ml(498):16920-17025
             (let
               (declare/5166 = declare/5130
                declare_inline/5167 = declare_inline/5136)
               (pseudo Ppxlib__Extension.V2 src/extension.ml(498):16932-17025
                 (makeblock 0 declare/5166 declare_inline/5167)))))
        (pseudo <unknown location>
          (makeblock 0
            (makeblock 0 (field_mut 0 Context/3201)
              (field_mut 1 Context/3201) (field_mut 2 Context/3201)
              (field_mut 3 Context/3201) (field_mut 4 Context/3201)
              (field_mut 5 Context/3201) (field_mut 6 Context/3201)
              (field_mut 7 Context/3201) (field_mut 8 Context/3201)
              (field_mut 9 Context/3201) (field_mut 10 Context/3201)
              (field_mut 12 Context/3201) (field_mut 14 Context/3201)
              (field_mut 16 Context/3201) (field_mut 15 Context/3201))
            declare/5130 declare_with_path_arg/5142 declare_inline/5136
            declare_inline_with_path_arg/5151 For_context/4173
            filter_by_context/4194
            (makeblock 0 (field_mut 2 Expert/4078) (field_mut 1 Expert/4078)
              (field_mut 3 Expert/4078) (field_mut 4 Expert/4078))
            check_unused/4856 collect_unhandled_extension_errors/4214 V2/5168
            V3/5129 check_context_for_inline/4176 __declare_ppx_import/5160))))))
