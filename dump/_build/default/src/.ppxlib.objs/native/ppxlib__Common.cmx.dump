[
  structure_item (src/common.ml[1,0+0]..[1,0+12])
    Pstr_open Override
    module_expr (src/common.ml[1,0+6]..[1,0+12])
      Pmod_ident "Import" (src/common.ml[1,0+6]..[1,0+12])
  structure_item (src/common.ml[2,13+0]..[2,13+24])
    Pstr_open Fresh
    module_expr (src/common.ml[2,13+5]..[2,13+24])
      Pmod_ident "Ast_builder.Default" (src/common.ml[2,13+5]..[2,13+24])
  structure_item (src/common.ml[3,38+0]..[3,38+29])
    Pstr_module
    "Buffer" (src/common.ml[3,38+7]..[3,38+13])
      module_expr (src/common.ml[3,38+16]..[3,38+29])
        Pmod_ident "Stdlib.Buffer" (src/common.ml[3,38+16]..[3,38+29])
  structure_item (src/common.ml[4,68+0]..[4,68+29])
    Pstr_module
    "Format" (src/common.ml[4,68+7]..[4,68+13])
      module_expr (src/common.ml[4,68+16]..[4,68+29])
        Pmod_ident "Stdlib.Format" (src/common.ml[4,68+16]..[4,68+29])
  structure_item (src/common.ml[6,99+0]..[6,99+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[6,99+4]..[6,99+10])
          Ppat_var "lident" (src/common.ml[6,99+4]..[6,99+10])
        expression (src/common.ml[6,99+11]..[6,99+33]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/common.ml[6,99+11]..[6,99+12])
            Ppat_var "x" (src/common.ml[6,99+11]..[6,99+12])
          expression (src/common.ml[6,99+15]..[6,99+33])
            Pexp_construct "Longident.Lident" (src/common.ml[6,99+15]..[6,99+31])
            Some
              expression (src/common.ml[6,99+32]..[6,99+33])
                Pexp_ident "x" (src/common.ml[6,99+32]..[6,99+33])
    ]
  structure_item (src/common.ml[8,134+0]..[12,264+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[8,134+4]..[8,134+33])
          Ppat_var "core_type_of_type_declaration" (src/common.ml[8,134+4]..[8,134+33])
        expression (src/common.ml[8,134+34]..[12,264+37]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/common.ml[8,134+34]..[8,134+36])
            Ppat_var "td" (src/common.ml[8,134+34]..[8,134+36])
          expression (src/common.ml[9,173+2]..[12,264+37])
            Pexp_let Nonrec
            [
              <def>
                pattern (src/common.ml[9,173+6]..[9,173+9])
                  Ppat_var "loc" (src/common.ml[9,173+6]..[9,173+9])
                expression (src/common.ml[9,173+12]..[9,173+29])
                  Pexp_field
                  expression (src/common.ml[9,173+12]..[9,173+25])
                    Pexp_field
                    expression (src/common.ml[9,173+12]..[9,173+14])
                      Pexp_ident "td" (src/common.ml[9,173+12]..[9,173+14])
                    "ptype_name" (src/common.ml[9,173+15]..[9,173+25])
                  "loc" (src/common.ml[9,173+26]..[9,173+29])
            ]
            expression (src/common.ml[10,206+2]..[12,264+37])
              Pexp_apply
              expression (src/common.ml[10,206+2]..[10,206+13])
                Pexp_ident "ptyp_constr" (src/common.ml[10,206+2]..[10,206+13])
              [
                <arg>
                Labelled "loc"
                  expression (src/common.ml[10,206+15]..[10,206+18])
                    Pexp_ident "loc" (src/common.ml[10,206+15]..[10,206+18])
                <arg>
                Nolabel
                  expression (src/common.ml[11,225+4]..[11,225+38])
                    Pexp_apply
                    expression (src/common.ml[11,225+5]..[11,225+16])
                      Pexp_ident "Located.map" (src/common.ml[11,225+5]..[11,225+16])
                    [
                      <arg>
                      Nolabel
                        expression (src/common.ml[11,225+17]..[11,225+23])
                          Pexp_ident "lident" (src/common.ml[11,225+17]..[11,225+23])
                      <arg>
                      Nolabel
                        expression (src/common.ml[11,225+24]..[11,225+37])
                          Pexp_field
                          expression (src/common.ml[11,225+24]..[11,225+26])
                            Pexp_ident "td" (src/common.ml[11,225+24]..[11,225+26])
                          "ptype_name" (src/common.ml[11,225+27]..[11,225+37])
                    ]
                <arg>
                Nolabel
                  expression (src/common.ml[12,264+4]..[12,264+37])
                    Pexp_apply
                    expression (src/common.ml[12,264+5]..[12,264+13])
                      Pexp_ident "List.map" (src/common.ml[12,264+5]..[12,264+13])
                    [
                      <arg>
                      Nolabel
                        expression (src/common.ml[12,264+14]..[12,264+29])
                          Pexp_field
                          expression (src/common.ml[12,264+14]..[12,264+16])
                            Pexp_ident "td" (src/common.ml[12,264+14]..[12,264+16])
                          "ptype_params" (src/common.ml[12,264+17]..[12,264+29])
                      <arg>
                      Labelled "f"
                        expression (src/common.ml[12,264+33]..[12,264+36])
                          Pexp_ident "fst" (src/common.ml[12,264+33]..[12,264+36])
                    ]
              ]
    ]
  structure_item (src/common.ml[14,303+0]..[31,855+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[14,303+4]..[14,303+27])
          Ppat_var "strip_gen_symbol_suffix" (src/common.ml[14,303+4]..[14,303+27])
        expression (src/common.ml[15,333+2]..[31,855+15])
          Pexp_let Nonrec
          [
            <def>
              pattern (src/common.ml[15,333+6]..[15,333+10])
                Ppat_var "chop" (src/common.ml[15,333+6]..[15,333+10])
              expression (src/common.ml[15,333+11]..[20,506+18]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (src/common.ml[15,333+11]..[15,333+12])
                  Ppat_var "n" (src/common.ml[15,333+11]..[15,333+12])
                expression (src/common.ml[15,333+13]..[20,506+18]) ghost
                  Pexp_fun
                  Labelled "or_more"
                  None
                  pattern (src/common.ml[15,333+14]..[15,333+21])
                    Ppat_var "or_more" (src/common.ml[15,333+14]..[15,333+21])
                  expression (src/common.ml[15,333+22]..[20,506+18]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/common.ml[15,333+22]..[15,333+28])
                      Ppat_var "string" (src/common.ml[15,333+22]..[15,333+28])
                    expression (src/common.ml[15,333+29]..[20,506+18]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/common.ml[15,333+29]..[15,333+32])
                        Ppat_var "pos" (src/common.ml[15,333+29]..[15,333+32])
                      expression (src/common.ml[15,333+33]..[20,506+18]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/common.ml[15,333+33]..[15,333+34])
                          Ppat_var "f" (src/common.ml[15,333+33]..[15,333+34])
                        expression (src/common.ml[16,370+4]..[20,506+18])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/common.ml[16,370+8]..[16,370+14])
                                Ppat_var "target" (src/common.ml[16,370+8]..[16,370+14])
                              expression (src/common.ml[16,370+17]..[16,370+25])
                                Pexp_apply
                                expression (src/common.ml[16,370+22]..[16,370+23])
                                  Pexp_ident "-" (src/common.ml[16,370+22]..[16,370+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/common.ml[16,370+17]..[16,370+21])
                                      Pexp_apply
                                      expression (src/common.ml[16,370+17]..[16,370+18])
                                        Pexp_ident "!" (src/common.ml[16,370+17]..[16,370+18])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/common.ml[16,370+18]..[16,370+21])
                                            Pexp_ident "pos" (src/common.ml[16,370+18]..[16,370+21])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (src/common.ml[16,370+24]..[16,370+25])
                                      Pexp_ident "n" (src/common.ml[16,370+24]..[16,370+25])
                                ]
                          ]
                          expression (src/common.ml[17,399+4]..[20,506+18])
                            Pexp_sequence
                            expression (src/common.ml[17,399+4]..[19,496+8])
                              Pexp_while
                              expression (src/common.ml[17,399+10]..[17,399+71])
                                Pexp_apply
                                expression (src/common.ml[17,399+19]..[17,399+21])
                                  Pexp_ident "&&" (src/common.ml[17,399+19]..[17,399+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/common.ml[17,399+10]..[17,399+18])
                                      Pexp_apply
                                      expression (src/common.ml[17,399+15]..[17,399+16])
                                        Pexp_ident ">" (src/common.ml[17,399+15]..[17,399+16])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/common.ml[17,399+10]..[17,399+14])
                                            Pexp_apply
                                            expression (src/common.ml[17,399+10]..[17,399+11])
                                              Pexp_ident "!" (src/common.ml[17,399+10]..[17,399+11])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/common.ml[17,399+11]..[17,399+14])
                                                  Pexp_ident "pos" (src/common.ml[17,399+11]..[17,399+14])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (src/common.ml[17,399+17]..[17,399+18])
                                            Pexp_constant PConst_int (0,None)
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (src/common.ml[17,399+22]..[17,399+71])
                                      Pexp_apply
                                      expression (src/common.ml[17,399+49]..[17,399+51])
                                        Pexp_ident "&&" (src/common.ml[17,399+49]..[17,399+51])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/common.ml[17,399+22]..[17,399+48])
                                            Pexp_apply
                                            expression (src/common.ml[17,399+31]..[17,399+33])
                                              Pexp_ident "||" (src/common.ml[17,399+31]..[17,399+33])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/common.ml[17,399+23]..[17,399+30])
                                                  Pexp_ident "or_more" (src/common.ml[17,399+23]..[17,399+30])
                                              <arg>
                                              Nolabel
                                                expression (src/common.ml[17,399+34]..[17,399+47])
                                                  Pexp_apply
                                                  expression (src/common.ml[17,399+39]..[17,399+40])
                                                    Pexp_ident ">" (src/common.ml[17,399+39]..[17,399+40])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/common.ml[17,399+34]..[17,399+38])
                                                        Pexp_apply
                                                        expression (src/common.ml[17,399+34]..[17,399+35])
                                                          Pexp_ident "!" (src/common.ml[17,399+34]..[17,399+35])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/common.ml[17,399+35]..[17,399+38])
                                                              Pexp_ident "pos" (src/common.ml[17,399+35]..[17,399+38])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (src/common.ml[17,399+41]..[17,399+47])
                                                        Pexp_ident "target" (src/common.ml[17,399+41]..[17,399+47])
                                                  ]
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (src/common.ml[17,399+52]..[17,399+71])
                                            Pexp_apply
                                            expression (src/common.ml[17,399+52]..[17,399+53])
                                              Pexp_ident "f" (src/common.ml[17,399+52]..[17,399+53])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/common.ml[17,399+54]..[17,399+71])
                                                  Pexp_apply
                                                  expression (src/common.ml[17,399+54]..[17,399+71]) ghost
                                                    Pexp_ident "String.get" (src/common.ml[17,399+54]..[17,399+71]) ghost
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/common.ml[17,399+54]..[17,399+60])
                                                        Pexp_ident "string" (src/common.ml[17,399+54]..[17,399+60])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/common.ml[17,399+62]..[17,399+70])
                                                        Pexp_apply
                                                        expression (src/common.ml[17,399+67]..[17,399+68])
                                                          Pexp_ident "-" (src/common.ml[17,399+67]..[17,399+68])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/common.ml[17,399+62]..[17,399+66])
                                                              Pexp_apply
                                                              expression (src/common.ml[17,399+62]..[17,399+63])
                                                                Pexp_ident "!" (src/common.ml[17,399+62]..[17,399+63])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/common.ml[17,399+63]..[17,399+66])
                                                                    Pexp_ident "pos" (src/common.ml[17,399+63]..[17,399+66])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (src/common.ml[17,399+69]..[17,399+70])
                                                              Pexp_constant PConst_int (1,None)
                                                        ]
                                                  ]
                                            ]
                                      ]
                                ]
                              expression (src/common.ml[18,474+6]..[18,474+21])
                                Pexp_apply
                                expression (src/common.ml[18,474+10]..[18,474+12])
                                  Pexp_ident ":=" (src/common.ml[18,474+10]..[18,474+12])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/common.ml[18,474+6]..[18,474+9])
                                      Pexp_ident "pos" (src/common.ml[18,474+6]..[18,474+9])
                                  <arg>
                                  Nolabel
                                    expression (src/common.ml[18,474+13]..[18,474+21])
                                      Pexp_apply
                                      expression (src/common.ml[18,474+18]..[18,474+19])
                                        Pexp_ident "-" (src/common.ml[18,474+18]..[18,474+19])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/common.ml[18,474+13]..[18,474+17])
                                            Pexp_apply
                                            expression (src/common.ml[18,474+13]..[18,474+14])
                                              Pexp_ident "!" (src/common.ml[18,474+13]..[18,474+14])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/common.ml[18,474+14]..[18,474+17])
                                                  Pexp_ident "pos" (src/common.ml[18,474+14]..[18,474+17])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (src/common.ml[18,474+20]..[18,474+21])
                                            Pexp_constant PConst_int (1,None)
                                      ]
                                ]
                            expression (src/common.ml[20,506+4]..[20,506+18])
                              Pexp_apply
                              expression (src/common.ml[20,506+9]..[20,506+11])
                                Pexp_ident "<=" (src/common.ml[20,506+9]..[20,506+11])
                              [
                                <arg>
                                Nolabel
                                  expression (src/common.ml[20,506+4]..[20,506+8])
                                    Pexp_apply
                                    expression (src/common.ml[20,506+4]..[20,506+5])
                                      Pexp_ident "!" (src/common.ml[20,506+4]..[20,506+5])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/common.ml[20,506+5]..[20,506+8])
                                          Pexp_ident "pos" (src/common.ml[20,506+5]..[20,506+8])
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/common.ml[20,506+12]..[20,506+18])
                                    Pexp_ident "target" (src/common.ml[20,506+12]..[20,506+18])
                              ]
          ]
          expression (src/common.ml[22,530+2]..[31,855+15])
            Pexp_fun
            Nolabel
            None
            pattern (src/common.ml[22,530+6]..[22,530+12])
              Ppat_var "string" (src/common.ml[22,530+6]..[22,530+12])
            expression (src/common.ml[23,546+4]..[31,855+15])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/common.ml[23,546+8]..[23,546+11])
                    Ppat_var "pos" (src/common.ml[23,546+8]..[23,546+11])
                  expression (src/common.ml[23,546+14]..[23,546+40])
                    Pexp_apply
                    expression (src/common.ml[23,546+14]..[23,546+17])
                      Pexp_ident "ref" (src/common.ml[23,546+14]..[23,546+17])
                    [
                      <arg>
                      Nolabel
                        expression (src/common.ml[23,546+18]..[23,546+40])
                          Pexp_apply
                          expression (src/common.ml[23,546+19]..[23,546+32])
                            Pexp_ident "String.length" (src/common.ml[23,546+19]..[23,546+32])
                          [
                            <arg>
                            Nolabel
                              expression (src/common.ml[23,546+33]..[23,546+39])
                                Pexp_ident "string" (src/common.ml[23,546+33]..[23,546+39])
                          ]
                    ]
              ]
              expression (src/common.ml[24,590+4]..[31,855+15])
                Pexp_ifthenelse
                expression (src/common.ml[25,597+6]..[29,761+58])
                  Pexp_apply
                  expression (src/common.ml[26,653+6]..[26,653+8])
                    Pexp_ident "&&" (src/common.ml[26,653+6]..[26,653+8])
                  [
                    <arg>
                    Nolabel
                      expression (src/common.ml[25,597+6]..[25,597+55])
                        Pexp_apply
                        expression (src/common.ml[25,597+6]..[25,597+10])
                          Pexp_ident "chop" (src/common.ml[25,597+6]..[25,597+10])
                        [
                          <arg>
                          Nolabel
                            expression (src/common.ml[25,597+11]..[25,597+12])
                              Pexp_constant PConst_int (1,None)
                          <arg>
                          Labelled "or_more"
                            expression (src/common.ml[25,597+22]..[25,597+27])
                              Pexp_construct "false" (src/common.ml[25,597+22]..[25,597+27])
                              None
                          <arg>
                          Nolabel
                            expression (src/common.ml[25,597+28]..[25,597+34])
                              Pexp_ident "string" (src/common.ml[25,597+28]..[25,597+34])
                          <arg>
                          Nolabel
                            expression (src/common.ml[25,597+35]..[25,597+38])
                              Pexp_ident "pos" (src/common.ml[25,597+35]..[25,597+38])
                          <arg>
                          Nolabel
                            expression (src/common.ml[25,597+39]..[25,597+55])
                              Pexp_apply
                              expression (src/common.ml[25,597+40]..[25,597+50])
                                Pexp_ident "Char.equal" (src/common.ml[25,597+40]..[25,597+50])
                              [
                                <arg>
                                Nolabel
                                  expression (src/common.ml[25,597+51]..[25,597+54])
                                    Pexp_constant PConst_char 5f
                              ]
                        ]
                    <arg>
                    Nolabel
                      expression (src/common.ml[26,653+9]..[29,761+58])
                        Pexp_apply
                        expression (src/common.ml[29,761+6]..[29,761+8])
                          Pexp_ident "&&" (src/common.ml[29,761+6]..[29,761+8])
                        [
                          <arg>
                          Nolabel
                            expression (src/common.ml[26,653+9]..[28,736+24])
                              Pexp_apply
                              expression (src/common.ml[26,653+9]..[26,653+13])
                                Pexp_ident "chop" (src/common.ml[26,653+9]..[26,653+13])
                              [
                                <arg>
                                Nolabel
                                  expression (src/common.ml[26,653+14]..[26,653+15])
                                    Pexp_constant PConst_int (3,None)
                                <arg>
                                Labelled "or_more"
                                  expression (src/common.ml[26,653+25]..[26,653+29])
                                    Pexp_construct "true" (src/common.ml[26,653+25]..[26,653+29])
                                    None
                                <arg>
                                Nolabel
                                  expression (src/common.ml[26,653+30]..[26,653+36])
                                    Pexp_ident "string" (src/common.ml[26,653+30]..[26,653+36])
                                <arg>
                                Nolabel
                                  expression (src/common.ml[26,653+37]..[26,653+40])
                                    Pexp_ident "pos" (src/common.ml[26,653+37]..[26,653+40])
                                <arg>
                                Nolabel
                                  expression (src/common.ml[26,653+41]..[28,736+24])
                                    Pexp_function
                                    [
                                      <case>
                                        pattern (src/common.ml[27,704+13]..[27,704+23])
                                          Ppat_interval PConst_char 30..PConst_char 39
                                        expression (src/common.ml[27,704+27]..[27,704+31])
                                          Pexp_construct "true" (src/common.ml[27,704+27]..[27,704+31])
                                          None
                                      <case>
                                        pattern (src/common.ml[28,736+13]..[28,736+14])
                                          Ppat_any
                                        expression (src/common.ml[28,736+18]..[28,736+23])
                                          Pexp_construct "false" (src/common.ml[28,736+18]..[28,736+23])
                                          None
                                    ]
                              ]
                          <arg>
                          Nolabel
                            expression (src/common.ml[29,761+9]..[29,761+58])
                              Pexp_apply
                              expression (src/common.ml[29,761+9]..[29,761+13])
                                Pexp_ident "chop" (src/common.ml[29,761+9]..[29,761+13])
                              [
                                <arg>
                                Nolabel
                                  expression (src/common.ml[29,761+14]..[29,761+15])
                                    Pexp_constant PConst_int (2,None)
                                <arg>
                                Labelled "or_more"
                                  expression (src/common.ml[29,761+25]..[29,761+30])
                                    Pexp_construct "false" (src/common.ml[29,761+25]..[29,761+30])
                                    None
                                <arg>
                                Nolabel
                                  expression (src/common.ml[29,761+31]..[29,761+37])
                                    Pexp_ident "string" (src/common.ml[29,761+31]..[29,761+37])
                                <arg>
                                Nolabel
                                  expression (src/common.ml[29,761+38]..[29,761+41])
                                    Pexp_ident "pos" (src/common.ml[29,761+38]..[29,761+41])
                                <arg>
                                Nolabel
                                  expression (src/common.ml[29,761+42]..[29,761+58])
                                    Pexp_apply
                                    expression (src/common.ml[29,761+43]..[29,761+53])
                                      Pexp_ident "Char.equal" (src/common.ml[29,761+43]..[29,761+53])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/common.ml[29,761+54]..[29,761+57])
                                          Pexp_constant PConst_char 5f
                                    ]
                              ]
                        ]
                  ]
                expression (src/common.ml[30,820+9]..[30,820+34])
                  Pexp_apply
                  expression (src/common.ml[30,820+9]..[30,820+22])
                    Pexp_ident "String.prefix" (src/common.ml[30,820+9]..[30,820+22])
                  [
                    <arg>
                    Nolabel
                      expression (src/common.ml[30,820+23]..[30,820+29])
                        Pexp_ident "string" (src/common.ml[30,820+23]..[30,820+29])
                    <arg>
                    Nolabel
                      expression (src/common.ml[30,820+30]..[30,820+34])
                        Pexp_apply
                        expression (src/common.ml[30,820+30]..[30,820+31])
                          Pexp_ident "!" (src/common.ml[30,820+30]..[30,820+31])
                        [
                          <arg>
                          Nolabel
                            expression (src/common.ml[30,820+31]..[30,820+34])
                              Pexp_ident "pos" (src/common.ml[30,820+31]..[30,820+34])
                        ]
                  ]
                Some
                  expression (src/common.ml[31,855+9]..[31,855+15])
                    Pexp_ident "string" (src/common.ml[31,855+9]..[31,855+15])
    ]
  structure_item (src/common.ml[33,872+0]..[38,1011+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[33,872+4]..[33,872+14])
          Ppat_var "gen_symbol" (src/common.ml[33,872+4]..[33,872+14])
        expression (src/common.ml[34,889+2]..[38,1011+42])
          Pexp_let Nonrec
          [
            <def>
              pattern (src/common.ml[34,889+6]..[34,889+9])
                Ppat_var "cnt" (src/common.ml[34,889+6]..[34,889+9])
              expression (src/common.ml[34,889+12]..[34,889+17])
                Pexp_apply
                expression (src/common.ml[34,889+12]..[34,889+15])
                  Pexp_ident "ref" (src/common.ml[34,889+12]..[34,889+15])
                [
                  <arg>
                  Nolabel
                    expression (src/common.ml[34,889+16]..[34,889+17])
                      Pexp_constant PConst_int (0,None)
                ]
          ]
          expression (src/common.ml[35,910+2]..[38,1011+42])
            Pexp_fun
            Optional "prefix"
            Some
              expression (src/common.ml[35,910+17]..[35,910+21])
                Pexp_constant PConst_string("_x",(src/common.ml[35,910+18]..[35,910+20]),None)
            pattern (src/common.ml[35,910+8]..[35,910+14])
              Ppat_var "prefix" (src/common.ml[35,910+8]..[35,910+14])
            expression (src/common.ml[35,910+23]..[38,1011+42]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/common.ml[35,910+23]..[35,910+25])
                Ppat_construct "()" (src/common.ml[35,910+23]..[35,910+25])
                None
              expression (src/common.ml[36,939+4]..[38,1011+42])
                Pexp_sequence
                expression (src/common.ml[36,939+4]..[36,939+19])
                  Pexp_apply
                  expression (src/common.ml[36,939+8]..[36,939+10])
                    Pexp_ident ":=" (src/common.ml[36,939+8]..[36,939+10])
                  [
                    <arg>
                    Nolabel
                      expression (src/common.ml[36,939+4]..[36,939+7])
                        Pexp_ident "cnt" (src/common.ml[36,939+4]..[36,939+7])
                    <arg>
                    Nolabel
                      expression (src/common.ml[36,939+11]..[36,939+19])
                        Pexp_apply
                        expression (src/common.ml[36,939+16]..[36,939+17])
                          Pexp_ident "+" (src/common.ml[36,939+16]..[36,939+17])
                        [
                          <arg>
                          Nolabel
                            expression (src/common.ml[36,939+11]..[36,939+15])
                              Pexp_apply
                              expression (src/common.ml[36,939+11]..[36,939+12])
                                Pexp_ident "!" (src/common.ml[36,939+11]..[36,939+12])
                              [
                                <arg>
                                Nolabel
                                  expression (src/common.ml[36,939+12]..[36,939+15])
                                    Pexp_ident "cnt" (src/common.ml[36,939+12]..[36,939+15])
                              ]
                          <arg>
                          Nolabel
                            expression (src/common.ml[36,939+18]..[36,939+19])
                              Pexp_constant PConst_int (1,None)
                        ]
                  ]
                expression (src/common.ml[37,960+4]..[38,1011+42])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/common.ml[37,960+8]..[37,960+14])
                        Ppat_var "prefix" (src/common.ml[37,960+8]..[37,960+14])
                      expression (src/common.ml[37,960+17]..[37,960+47])
                        Pexp_apply
                        expression (src/common.ml[37,960+17]..[37,960+40])
                          Pexp_ident "strip_gen_symbol_suffix" (src/common.ml[37,960+17]..[37,960+40])
                        [
                          <arg>
                          Nolabel
                            expression (src/common.ml[37,960+41]..[37,960+47])
                              Pexp_ident "prefix" (src/common.ml[37,960+41]..[37,960+47])
                        ]
                  ]
                  expression (src/common.ml[38,1011+4]..[38,1011+42])
                    Pexp_apply
                    expression (src/common.ml[38,1011+4]..[38,1011+18])
                      Pexp_ident "Printf.sprintf" (src/common.ml[38,1011+4]..[38,1011+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/common.ml[38,1011+19]..[38,1011+30])
                          Pexp_constant PConst_string("%s__%03i_",(src/common.ml[38,1011+20]..[38,1011+29]),None)
                      <arg>
                      Nolabel
                        expression (src/common.ml[38,1011+31]..[38,1011+37])
                          Pexp_ident "prefix" (src/common.ml[38,1011+31]..[38,1011+37])
                      <arg>
                      Nolabel
                        expression (src/common.ml[38,1011+38]..[38,1011+42])
                          Pexp_apply
                          expression (src/common.ml[38,1011+38]..[38,1011+39])
                            Pexp_ident "!" (src/common.ml[38,1011+38]..[38,1011+39])
                          [
                            <arg>
                            Nolabel
                              expression (src/common.ml[38,1011+39]..[38,1011+42])
                                Pexp_ident "cnt" (src/common.ml[38,1011+39]..[38,1011+42])
                          ]
                    ]
    ]
  structure_item (src/common.ml[40,1055+0]..[61,1819+78])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[40,1055+4]..[40,1055+30])
          Ppat_var "name_type_params_in_td_res" (src/common.ml[40,1055+4]..[40,1055+30])
        expression (src/common.ml[40,1055+31]..[61,1819+78]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/common.ml[40,1055+31]..[40,1055+54])
            Ppat_constraint
            pattern (src/common.ml[40,1055+32]..[40,1055+34])
              Ppat_var "td" (src/common.ml[40,1055+32]..[40,1055+34])
            core_type (src/common.ml[40,1055+37]..[40,1055+53])
              Ptyp_constr "type_declaration" (src/common.ml[40,1055+37]..[40,1055+53])
              []
          expression (src/common.ml[40,1055+55]..[61,1819+78]) ghost
            Pexp_constraint
            expression (src/common.ml[42,1147+2]..[61,1819+78])
              Pexp_open Fresh
              module_expr (src/common.ml[42,1147+11]..[42,1147+17])
                Pmod_ident "Result" (src/common.ml[42,1147+11]..[42,1147+17])
              expression (src/common.ml[43,1168+2]..[61,1819+78])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/common.ml[43,1168+6]..[43,1168+19])
                      Ppat_var "prefix_string" (src/common.ml[43,1168+6]..[43,1168+19])
                    expression (src/common.ml[43,1168+20]..[45,1231+70]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/common.ml[43,1168+20]..[43,1168+21])
                        Ppat_var "i" (src/common.ml[43,1168+20]..[43,1168+21])
                      expression (src/common.ml[45,1231+4]..[45,1231+70])
                        Pexp_apply
                        expression (src/common.ml[45,1231+4]..[45,1231+15])
                          Pexp_ident "String.make" (src/common.ml[45,1231+4]..[45,1231+15])
                        [
                          <arg>
                          Nolabel
                            expression (src/common.ml[45,1231+16]..[45,1231+30])
                              Pexp_apply
                              expression (src/common.ml[45,1231+26]..[45,1231+27])
                                Pexp_ident "+" (src/common.ml[45,1231+26]..[45,1231+27])
                              [
                                <arg>
                                Nolabel
                                  expression (src/common.ml[45,1231+17]..[45,1231+25])
                                    Pexp_apply
                                    expression (src/common.ml[45,1231+20]..[45,1231+21])
                                      Pexp_ident "/" (src/common.ml[45,1231+20]..[45,1231+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/common.ml[45,1231+18]..[45,1231+19])
                                          Pexp_ident "i" (src/common.ml[45,1231+18]..[45,1231+19])
                                      <arg>
                                      Nolabel
                                        expression (src/common.ml[45,1231+22]..[45,1231+24])
                                          Pexp_constant PConst_int (26,None)
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/common.ml[45,1231+28]..[45,1231+29])
                                    Pexp_constant PConst_int (1,None)
                              ]
                          <arg>
                          Nolabel
                            expression (src/common.ml[45,1231+31]..[45,1231+70])
                              Pexp_apply
                              expression (src/common.ml[45,1231+32]..[45,1231+40])
                                Pexp_ident "Char.chr" (src/common.ml[45,1231+32]..[45,1231+40])
                              [
                                <arg>
                                Nolabel
                                  expression (src/common.ml[45,1231+41]..[45,1231+69])
                                    Pexp_apply
                                    expression (src/common.ml[45,1231+56]..[45,1231+57])
                                      Pexp_ident "+" (src/common.ml[45,1231+56]..[45,1231+57])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/common.ml[45,1231+42]..[45,1231+55])
                                          Pexp_apply
                                          expression (src/common.ml[45,1231+42]..[45,1231+51])
                                            Pexp_ident "Char.code" (src/common.ml[45,1231+42]..[45,1231+51])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/common.ml[45,1231+52]..[45,1231+55])
                                                Pexp_constant PConst_char 61
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (src/common.ml[45,1231+58]..[45,1231+68])
                                          Pexp_apply
                                          expression (src/common.ml[45,1231+61]..[45,1231+64])
                                            Pexp_ident "mod" (src/common.ml[45,1231+61]..[45,1231+64])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/common.ml[45,1231+59]..[45,1231+60])
                                                Pexp_ident "i" (src/common.ml[45,1231+59]..[45,1231+60])
                                            <arg>
                                            Nolabel
                                              expression (src/common.ml[45,1231+65]..[45,1231+67])
                                                Pexp_constant PConst_int (26,None)
                                          ]
                                    ]
                              ]
                        ]
                ]
                expression (src/common.ml[47,1307+2]..[61,1819+78])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/common.ml[47,1307+6]..[47,1307+16])
                        Ppat_var "name_param" (src/common.ml[47,1307+6]..[47,1307+16])
                      expression (src/common.ml[47,1307+17]..[53,1567+58]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/common.ml[47,1307+17]..[47,1307+18])
                          Ppat_var "i" (src/common.ml[47,1307+17]..[47,1307+18])
                        expression (src/common.ml[47,1307+19]..[53,1567+58]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/common.ml[47,1307+19]..[47,1307+33])
                            Ppat_tuple
                            [
                              pattern (src/common.ml[47,1307+20]..[47,1307+22])
                                Ppat_var "tp" (src/common.ml[47,1307+20]..[47,1307+22])
                              pattern (src/common.ml[47,1307+24]..[47,1307+32])
                                Ppat_var "variance" (src/common.ml[47,1307+24]..[47,1307+32])
                            ]
                          expression (src/common.ml[48,1343+4]..[53,1567+58])
                            Pexp_apply
                            expression (src/common.ml[53,1567+4]..[53,1567+7])
                              Pexp_ident ">>|" (src/common.ml[53,1567+4]..[53,1567+7])
                            [
                              <arg>
                              Nolabel
                                expression (src/common.ml[48,1343+4]..[52,1487+79])
                                  Pexp_match
                                  expression (src/common.ml[48,1343+11]..[48,1343+23])
                                    Pexp_field
                                    expression (src/common.ml[48,1343+11]..[48,1343+13])
                                      Pexp_ident "tp" (src/common.ml[48,1343+11]..[48,1343+13])
                                    "ptyp_desc" (src/common.ml[48,1343+14]..[48,1343+23])
                                  [
                                    <case>
                                      pattern (src/common.ml[49,1372+6]..[49,1372+14])
                                        Ppat_construct "Ptyp_any" (src/common.ml[49,1372+6]..[49,1372+14])
                                        None
                                      expression (src/common.ml[49,1372+18]..[49,1372+73])
                                        Pexp_construct "Ok" (src/common.ml[49,1372+18]..[49,1372+20])
                                        Some
                                          expression (src/common.ml[49,1372+21]..[49,1372+73])
                                            Pexp_construct "Ptyp_var" (src/common.ml[49,1372+22]..[49,1372+30])
                                            Some
                                              expression (src/common.ml[49,1372+31]..[49,1372+72])
                                                Pexp_apply
                                                expression (src/common.ml[49,1372+32]..[49,1372+42])
                                                  Pexp_ident "gen_symbol" (src/common.ml[49,1372+32]..[49,1372+42])
                                                [
                                                  <arg>
                                                  Labelled "prefix"
                                                    expression (src/common.ml[49,1372+51]..[49,1372+68])
                                                      Pexp_apply
                                                      expression (src/common.ml[49,1372+52]..[49,1372+65])
                                                        Pexp_ident "prefix_string" (src/common.ml[49,1372+52]..[49,1372+65])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/common.ml[49,1372+66]..[49,1372+67])
                                                            Pexp_ident "i" (src/common.ml[49,1372+66]..[49,1372+67])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (src/common.ml[49,1372+69]..[49,1372+71])
                                                      Pexp_construct "()" (src/common.ml[49,1372+69]..[49,1372+71])
                                                      None
                                                ]
                                    <case>
                                      pattern (src/common.ml[50,1446+6]..[50,1446+21])
                                        Ppat_alias "v" (src/common.ml[50,1446+20]..[50,1446+21])
                                        pattern (src/common.ml[50,1446+6]..[50,1446+16])
                                          Ppat_construct "Ptyp_var" (src/common.ml[50,1446+6]..[50,1446+14])
                                          Some
                                            pattern (src/common.ml[50,1446+15]..[50,1446+16])
                                              Ppat_any
                                      expression (src/common.ml[50,1446+25]..[50,1446+29])
                                        Pexp_construct "Ok" (src/common.ml[50,1446+25]..[50,1446+27])
                                        Some
                                          expression (src/common.ml[50,1446+28]..[50,1446+29])
                                            Pexp_ident "v" (src/common.ml[50,1446+28]..[50,1446+29])
                                    <case>
                                      pattern (src/common.ml[51,1476+6]..[51,1476+7])
                                        Ppat_any
                                      expression (src/common.ml[52,1487+8]..[52,1487+78])
                                        Pexp_construct "Error" (src/common.ml[52,1487+8]..[52,1487+13])
                                        Some
                                          expression (src/common.ml[52,1487+14]..[52,1487+78])
                                            Pexp_apply
                                            expression (src/common.ml[52,1487+15]..[52,1487+37])
                                              Pexp_ident "Location.Error.createf" (src/common.ml[52,1487+15]..[52,1487+37])
                                            [
                                              <arg>
                                              Labelled "loc"
                                                expression (src/common.ml[52,1487+43]..[52,1487+54])
                                                  Pexp_field
                                                  expression (src/common.ml[52,1487+43]..[52,1487+45])
                                                    Pexp_ident "tp" (src/common.ml[52,1487+43]..[52,1487+45])
                                                  "ptyp_loc" (src/common.ml[52,1487+46]..[52,1487+54])
                                              <arg>
                                              Nolabel
                                                expression (src/common.ml[52,1487+55]..[52,1487+77])
                                                  Pexp_constant PConst_string("not a type parameter",(src/common.ml[52,1487+56]..[52,1487+76]),None)
                                            ]
                                  ]
                              <arg>
                              Nolabel
                                expression (src/common.ml[53,1567+8]..[53,1567+58])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/common.ml[53,1567+12]..[53,1567+21])
                                    Ppat_var "ptyp_desc" (src/common.ml[53,1567+12]..[53,1567+21])
                                  expression (src/common.ml[53,1567+25]..[53,1567+58])
                                    Pexp_tuple
                                    [
                                      expression (src/common.ml[53,1567+26]..[53,1567+47])
                                        Pexp_record
                                        [
                                          "ptyp_desc" (src/common.ml[53,1567+36]..[53,1567+45])
                                            expression (src/common.ml[53,1567+36]..[53,1567+45]) ghost
                                              Pexp_ident "ptyp_desc" (src/common.ml[53,1567+36]..[53,1567+45]) ghost
                                        ]
                                        Some
                                          expression (src/common.ml[53,1567+28]..[53,1567+30])
                                            Pexp_ident "tp" (src/common.ml[53,1567+28]..[53,1567+30])
                                      expression (src/common.ml[53,1567+49]..[53,1567+57])
                                        Pexp_ident "variance" (src/common.ml[53,1567+49]..[53,1567+57])
                                    ]
                            ]
                  ]
                  expression (src/common.ml[55,1631+2]..[61,1819+78])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/common.ml[55,1631+6]..[55,1631+26])
                          Ppat_tuple
                          [
                            pattern (src/common.ml[55,1631+6]..[55,1631+18])
                              Ppat_var "ptype_params" (src/common.ml[55,1631+6]..[55,1631+18])
                            pattern (src/common.ml[55,1631+20]..[55,1631+26])
                              Ppat_var "errors" (src/common.ml[55,1631+20]..[55,1631+26])
                          ]
                        expression (src/common.ml[56,1660+4]..[59,1776+37])
                          Pexp_apply
                          expression (src/common.ml[57,1707+4]..[57,1707+6])
                            Pexp_ident "|>" (src/common.ml[57,1707+4]..[57,1707+6])
                          [
                            <arg>
                            Nolabel
                              expression (src/common.ml[56,1660+4]..[56,1660+46])
                                Pexp_apply
                                expression (src/common.ml[56,1660+20]..[56,1660+22])
                                  Pexp_ident "|>" (src/common.ml[56,1660+20]..[56,1660+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/common.ml[56,1660+4]..[56,1660+19])
                                      Pexp_field
                                      expression (src/common.ml[56,1660+4]..[56,1660+6])
                                        Pexp_ident "td" (src/common.ml[56,1660+4]..[56,1660+6])
                                      "ptype_params" (src/common.ml[56,1660+7]..[56,1660+19])
                                  <arg>
                                  Nolabel
                                    expression (src/common.ml[56,1660+23]..[56,1660+46])
                                      Pexp_apply
                                      expression (src/common.ml[56,1660+23]..[56,1660+32])
                                        Pexp_ident "List.mapi" (src/common.ml[56,1660+23]..[56,1660+32])
                                      [
                                        <arg>
                                        Labelled "f"
                                          expression (src/common.ml[56,1660+36]..[56,1660+46])
                                            Pexp_ident "name_param" (src/common.ml[56,1660+36]..[56,1660+46])
                                      ]
                                ]
                            <arg>
                            Nolabel
                              expression (src/common.ml[57,1707+7]..[59,1776+37])
                                Pexp_apply
                                expression (src/common.ml[57,1707+7]..[57,1707+25])
                                  Pexp_ident "List.partition_map" (src/common.ml[57,1707+7]..[57,1707+25])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/common.ml[57,1707+26]..[59,1776+37])
                                      Pexp_function
                                      [
                                        <case>
                                          pattern (src/common.ml[58,1743+11]..[58,1743+15])
                                            Ppat_construct "Ok" (src/common.ml[58,1743+11]..[58,1743+13])
                                            Some
                                              pattern (src/common.ml[58,1743+14]..[58,1743+15])
                                                Ppat_var "o" (src/common.ml[58,1743+14]..[58,1743+15])
                                          expression (src/common.ml[58,1743+19]..[58,1743+32])
                                            Pexp_construct "Either.Left" (src/common.ml[58,1743+19]..[58,1743+30])
                                            Some
                                              expression (src/common.ml[58,1743+31]..[58,1743+32])
                                                Pexp_ident "o" (src/common.ml[58,1743+31]..[58,1743+32])
                                        <case>
                                          pattern (src/common.ml[59,1776+11]..[59,1776+18])
                                            Ppat_construct "Error" (src/common.ml[59,1776+11]..[59,1776+16])
                                            Some
                                              pattern (src/common.ml[59,1776+17]..[59,1776+18])
                                                Ppat_var "e" (src/common.ml[59,1776+17]..[59,1776+18])
                                          expression (src/common.ml[59,1776+22]..[59,1776+36])
                                            Pexp_construct "Either.Right" (src/common.ml[59,1776+22]..[59,1776+34])
                                            Some
                                              expression (src/common.ml[59,1776+35]..[59,1776+36])
                                                Pexp_ident "e" (src/common.ml[59,1776+35]..[59,1776+36])
                                      ]
                                ]
                          ]
                    ]
                    expression (src/common.ml[61,1819+2]..[61,1819+78])
                      Pexp_match
                      expression (src/common.ml[61,1819+8]..[61,1819+14])
                        Pexp_ident "errors" (src/common.ml[61,1819+8]..[61,1819+14])
                      [
                        <case>
                          pattern (src/common.ml[61,1819+20]..[61,1819+22])
                            Ppat_construct "[]" (src/common.ml[61,1819+20]..[61,1819+22])
                            None
                          expression (src/common.ml[61,1819+26]..[61,1819+53])
                            Pexp_construct "Ok" (src/common.ml[61,1819+26]..[61,1819+28])
                            Some
                              expression (src/common.ml[61,1819+29]..[61,1819+53])
                                Pexp_record
                                [
                                  "ptype_params" (src/common.ml[61,1819+39]..[61,1819+51])
                                    expression (src/common.ml[61,1819+39]..[61,1819+51]) ghost
                                      Pexp_ident "ptype_params" (src/common.ml[61,1819+39]..[61,1819+51]) ghost
                                ]
                                Some
                                  expression (src/common.ml[61,1819+31]..[61,1819+33])
                                    Pexp_ident "td" (src/common.ml[61,1819+31]..[61,1819+33])
                        <case>
                          pattern (src/common.ml[61,1819+56]..[61,1819+62])
                            Ppat_construct "::" (src/common.ml[61,1819+58]..[61,1819+60])
                            Some
                              pattern (src/common.ml[61,1819+56]..[61,1819+62]) ghost
                                Ppat_tuple
                                [
                                  pattern (src/common.ml[61,1819+56]..[61,1819+57])
                                    Ppat_var "t" (src/common.ml[61,1819+56]..[61,1819+57])
                                  pattern (src/common.ml[61,1819+61]..[61,1819+62])
                                    Ppat_var "q" (src/common.ml[61,1819+61]..[61,1819+62])
                                ]
                          expression (src/common.ml[61,1819+66]..[61,1819+78])
                            Pexp_construct "Error" (src/common.ml[61,1819+66]..[61,1819+71])
                            Some
                              expression (src/common.ml[61,1819+72]..[61,1819+78])
                                Pexp_tuple
                                [
                                  expression (src/common.ml[61,1819+73]..[61,1819+74])
                                    Pexp_ident "t" (src/common.ml[61,1819+73]..[61,1819+74])
                                  expression (src/common.ml[61,1819+76]..[61,1819+77])
                                    Pexp_ident "q" (src/common.ml[61,1819+76]..[61,1819+77])
                                ]
                      ]
            core_type (src/common.ml[41,1112+4]..[41,1112+32])
              Ptyp_constr "result" (src/common.ml[41,1112+26]..[41,1112+32])
              [
                core_type (src/common.ml[41,1112+5]..[41,1112+21])
                  Ptyp_constr "type_declaration" (src/common.ml[41,1112+5]..[41,1112+21])
                  []
                core_type (src/common.ml[41,1112+23]..[41,1112+24])
                  Ptyp_any
              ]
    ]
  structure_item (src/common.ml[63,1899+0]..[66,2032+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[63,1899+4]..[63,1899+26])
          Ppat_var "name_type_params_in_td" (src/common.ml[63,1899+4]..[63,1899+26])
        expression (src/common.ml[63,1899+27]..[66,2032+46]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/common.ml[63,1899+27]..[63,1899+50])
            Ppat_constraint
            pattern (src/common.ml[63,1899+28]..[63,1899+30])
              Ppat_var "td" (src/common.ml[63,1899+28]..[63,1899+30])
            core_type (src/common.ml[63,1899+33]..[63,1899+49])
              Ptyp_constr "type_declaration" (src/common.ml[63,1899+33]..[63,1899+49])
              []
          expression (src/common.ml[63,1899+51]..[66,2032+46]) ghost
            Pexp_constraint
            expression (src/common.ml[64,1971+2]..[66,2032+46])
              Pexp_match
              expression (src/common.ml[64,1971+8]..[64,1971+37])
                Pexp_apply
                expression (src/common.ml[64,1971+8]..[64,1971+34])
                  Pexp_ident "name_type_params_in_td_res" (src/common.ml[64,1971+8]..[64,1971+34])
                [
                  <arg>
                  Nolabel
                    expression (src/common.ml[64,1971+35]..[64,1971+37])
                      Pexp_ident "td" (src/common.ml[64,1971+35]..[64,1971+37])
                ]
              [
                <case>
                  pattern (src/common.ml[65,2014+4]..[65,2014+10])
                    Ppat_construct "Ok" (src/common.ml[65,2014+4]..[65,2014+6])
                    Some
                      pattern (src/common.ml[65,2014+7]..[65,2014+10])
                        Ppat_var "res" (src/common.ml[65,2014+7]..[65,2014+10])
                  expression (src/common.ml[65,2014+14]..[65,2014+17])
                    Pexp_ident "res" (src/common.ml[65,2014+14]..[65,2014+17])
                <case>
                  pattern (src/common.ml[66,2032+4]..[66,2032+18])
                    Ppat_construct "Error" (src/common.ml[66,2032+4]..[66,2032+9])
                    Some
                      pattern (src/common.ml[66,2032+10]..[66,2032+18])
                        Ppat_tuple
                        [
                          pattern (src/common.ml[66,2032+11]..[66,2032+14])
                            Ppat_var "err" (src/common.ml[66,2032+11]..[66,2032+14])
                          pattern (src/common.ml[66,2032+16]..[66,2032+17])
                            Ppat_any
                        ]
                  expression (src/common.ml[66,2032+22]..[66,2032+46])
                    Pexp_apply
                    expression (src/common.ml[66,2032+22]..[66,2032+42])
                      Pexp_ident "Location.Error.raise" (src/common.ml[66,2032+22]..[66,2032+42])
                    [
                      <arg>
                      Nolabel
                        expression (src/common.ml[66,2032+43]..[66,2032+46])
                          Pexp_ident "err" (src/common.ml[66,2032+43]..[66,2032+46])
                    ]
              ]
            core_type (src/common.ml[63,1899+53]..[63,1899+69])
              Ptyp_constr "type_declaration" (src/common.ml[63,1899+53]..[63,1899+69])
              []
    ]
  structure_item (src/common.ml[68,2080+0]..[76,2375+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[68,2080+4]..[68,2080+39])
          Ppat_var "combinator_type_of_type_declaration" (src/common.ml[68,2080+4]..[68,2080+39])
        expression (src/common.ml[68,2080+40]..[76,2375+46]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/common.ml[68,2080+40]..[68,2080+42])
            Ppat_var "td" (src/common.ml[68,2080+40]..[68,2080+42])
          expression (src/common.ml[68,2080+43]..[76,2375+46]) ghost
            Pexp_fun
            Labelled "f"
            None
            pattern (src/common.ml[68,2080+44]..[68,2080+45])
              Ppat_var "f" (src/common.ml[68,2080+44]..[68,2080+45])
            expression (src/common.ml[69,2128+2]..[76,2375+46])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/common.ml[69,2128+6]..[69,2128+8])
                    Ppat_var "td" (src/common.ml[69,2128+6]..[69,2128+8])
                  expression (src/common.ml[69,2128+11]..[69,2128+36])
                    Pexp_apply
                    expression (src/common.ml[69,2128+11]..[69,2128+33])
                      Pexp_ident "name_type_params_in_td" (src/common.ml[69,2128+11]..[69,2128+33])
                    [
                      <arg>
                      Nolabel
                        expression (src/common.ml[69,2128+34]..[69,2128+36])
                          Pexp_ident "td" (src/common.ml[69,2128+34]..[69,2128+36])
                    ]
              ]
              expression (src/common.ml[70,2168+2]..[76,2375+46])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/common.ml[70,2168+6]..[70,2168+17])
                      Ppat_var "result_type" (src/common.ml[70,2168+6]..[70,2168+17])
                    expression (src/common.ml[71,2188+4]..[71,2188+63])
                      Pexp_apply
                      expression (src/common.ml[71,2188+4]..[71,2188+5])
                        Pexp_ident "f" (src/common.ml[71,2188+4]..[71,2188+5])
                      [
                        <arg>
                        Labelled "loc"
                          expression (src/common.ml[71,2188+11]..[71,2188+28])
                            Pexp_field
                            expression (src/common.ml[71,2188+11]..[71,2188+24])
                              Pexp_field
                              expression (src/common.ml[71,2188+11]..[71,2188+13])
                                Pexp_ident "td" (src/common.ml[71,2188+11]..[71,2188+13])
                              "ptype_name" (src/common.ml[71,2188+14]..[71,2188+24])
                            "loc" (src/common.ml[71,2188+25]..[71,2188+28])
                        <arg>
                        Nolabel
                          expression (src/common.ml[71,2188+29]..[71,2188+63])
                            Pexp_apply
                            expression (src/common.ml[71,2188+30]..[71,2188+59])
                              Pexp_ident "core_type_of_type_declaration" (src/common.ml[71,2188+30]..[71,2188+59])
                            [
                              <arg>
                              Nolabel
                                expression (src/common.ml[71,2188+60]..[71,2188+62])
                                  Pexp_ident "td" (src/common.ml[71,2188+60]..[71,2188+62])
                            ]
                      ]
                ]
                expression (src/common.ml[73,2257+2]..[76,2375+46])
                  Pexp_apply
                  expression (src/common.ml[73,2257+2]..[73,2257+17])
                    Pexp_ident "List.fold_right" (src/common.ml[73,2257+2]..[73,2257+17])
                  [
                    <arg>
                    Nolabel
                      expression (src/common.ml[73,2257+18]..[73,2257+33])
                        Pexp_field
                        expression (src/common.ml[73,2257+18]..[73,2257+20])
                          Pexp_ident "td" (src/common.ml[73,2257+18]..[73,2257+20])
                        "ptype_params" (src/common.ml[73,2257+21]..[73,2257+33])
                    <arg>
                    Labelled "init"
                      expression (src/common.ml[73,2257+40]..[73,2257+51])
                        Pexp_ident "result_type" (src/common.ml[73,2257+40]..[73,2257+51])
                    <arg>
                    Labelled "f"
                      expression (src/common.ml[74,2309+7]..[76,2375+46])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/common.ml[74,2309+12]..[74,2309+27])
                          Ppat_tuple
                          [
                            pattern (src/common.ml[74,2309+13]..[74,2309+15])
                              Ppat_var "tp" (src/common.ml[74,2309+13]..[74,2309+15])
                            pattern (src/common.ml[74,2309+17]..[74,2309+26])
                              Ppat_var "_variance" (src/common.ml[74,2309+17]..[74,2309+26])
                          ]
                        expression (src/common.ml[74,2309+28]..[76,2375+45]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/common.ml[74,2309+28]..[74,2309+31])
                            Ppat_var "acc" (src/common.ml[74,2309+28]..[74,2309+31])
                          expression (src/common.ml[75,2344+6]..[76,2375+45])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/common.ml[75,2344+10]..[75,2344+13])
                                  Ppat_var "loc" (src/common.ml[75,2344+10]..[75,2344+13])
                                expression (src/common.ml[75,2344+16]..[75,2344+27])
                                  Pexp_field
                                  expression (src/common.ml[75,2344+16]..[75,2344+18])
                                    Pexp_ident "tp" (src/common.ml[75,2344+16]..[75,2344+18])
                                  "ptyp_loc" (src/common.ml[75,2344+19]..[75,2344+27])
                            ]
                            expression (src/common.ml[76,2375+6]..[76,2375+45])
                              Pexp_apply
                              expression (src/common.ml[76,2375+6]..[76,2375+16])
                                Pexp_ident "ptyp_arrow" (src/common.ml[76,2375+6]..[76,2375+16])
                              [
                                <arg>
                                Labelled "loc"
                                  expression (src/common.ml[76,2375+18]..[76,2375+21])
                                    Pexp_ident "loc" (src/common.ml[76,2375+18]..[76,2375+21])
                                <arg>
                                Nolabel
                                  expression (src/common.ml[76,2375+22]..[76,2375+29])
                                    Pexp_construct "Nolabel" (src/common.ml[76,2375+22]..[76,2375+29])
                                    None
                                <arg>
                                Nolabel
                                  expression (src/common.ml[76,2375+30]..[76,2375+41])
                                    Pexp_apply
                                    expression (src/common.ml[76,2375+31]..[76,2375+32])
                                      Pexp_ident "f" (src/common.ml[76,2375+31]..[76,2375+32])
                                    [
                                      <arg>
                                      Labelled "loc"
                                        expression (src/common.ml[76,2375+34]..[76,2375+37])
                                          Pexp_ident "loc" (src/common.ml[76,2375+34]..[76,2375+37])
                                      <arg>
                                      Nolabel
                                        expression (src/common.ml[76,2375+38]..[76,2375+40])
                                          Pexp_ident "tp" (src/common.ml[76,2375+38]..[76,2375+40])
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/common.ml[76,2375+42]..[76,2375+45])
                                    Pexp_ident "acc" (src/common.ml[76,2375+42]..[76,2375+45])
                              ]
                  ]
    ]
  structure_item (src/common.ml[78,2423+0]..[83,2593+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[78,2423+4]..[78,2423+23])
          Ppat_var "string_of_core_type" (src/common.ml[78,2423+4]..[78,2423+23])
        expression (src/common.ml[78,2423+24]..[83,2593+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/common.ml[78,2423+24]..[78,2423+26])
            Ppat_var "ct" (src/common.ml[78,2423+24]..[78,2423+26])
          expression (src/common.ml[79,2452+2]..[83,2593+21])
            Pexp_let Nonrec
            [
              <def>
                pattern (src/common.ml[79,2452+6]..[79,2452+9])
                  Ppat_var "buf" (src/common.ml[79,2452+6]..[79,2452+9])
                expression (src/common.ml[79,2452+12]..[79,2452+29])
                  Pexp_apply
                  expression (src/common.ml[79,2452+12]..[79,2452+25])
                    Pexp_ident "Buffer.create" (src/common.ml[79,2452+12]..[79,2452+25])
                  [
                    <arg>
                    Nolabel
                      expression (src/common.ml[79,2452+26]..[79,2452+29])
                        Pexp_constant PConst_int (128,None)
                  ]
            ]
            expression (src/common.ml[80,2485+2]..[83,2593+21])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/common.ml[80,2485+6]..[80,2485+9])
                    Ppat_var "ppf" (src/common.ml[80,2485+6]..[80,2485+9])
                  expression (src/common.ml[80,2485+12]..[80,2485+42])
                    Pexp_apply
                    expression (src/common.ml[80,2485+12]..[80,2485+38])
                      Pexp_ident "Format.formatter_of_buffer" (src/common.ml[80,2485+12]..[80,2485+38])
                    [
                      <arg>
                      Nolabel
                        expression (src/common.ml[80,2485+39]..[80,2485+42])
                          Pexp_ident "buf" (src/common.ml[80,2485+39]..[80,2485+42])
                    ]
              ]
              expression (src/common.ml[81,2531+2]..[83,2593+21])
                Pexp_sequence
                expression (src/common.ml[81,2531+2]..[81,2531+28])
                  Pexp_apply
                  expression (src/common.ml[81,2531+2]..[81,2531+21])
                    Pexp_ident "Pprintast.core_type" (src/common.ml[81,2531+2]..[81,2531+21])
                  [
                    <arg>
                    Nolabel
                      expression (src/common.ml[81,2531+22]..[81,2531+25])
                        Pexp_ident "ppf" (src/common.ml[81,2531+22]..[81,2531+25])
                    <arg>
                    Nolabel
                      expression (src/common.ml[81,2531+26]..[81,2531+28])
                        Pexp_ident "ct" (src/common.ml[81,2531+26]..[81,2531+28])
                  ]
                expression (src/common.ml[82,2561+2]..[83,2593+21])
                  Pexp_sequence
                  expression (src/common.ml[82,2561+2]..[82,2561+30])
                    Pexp_apply
                    expression (src/common.ml[82,2561+2]..[82,2561+23])
                      Pexp_ident "Format.pp_print_flush" (src/common.ml[82,2561+2]..[82,2561+23])
                    [
                      <arg>
                      Nolabel
                        expression (src/common.ml[82,2561+24]..[82,2561+27])
                          Pexp_ident "ppf" (src/common.ml[82,2561+24]..[82,2561+27])
                      <arg>
                      Nolabel
                        expression (src/common.ml[82,2561+28]..[82,2561+30])
                          Pexp_construct "()" (src/common.ml[82,2561+28]..[82,2561+30])
                          None
                    ]
                  expression (src/common.ml[83,2593+2]..[83,2593+21])
                    Pexp_apply
                    expression (src/common.ml[83,2593+2]..[83,2593+17])
                      Pexp_ident "Buffer.contents" (src/common.ml[83,2593+2]..[83,2593+17])
                    [
                      <arg>
                      Nolabel
                        expression (src/common.ml[83,2593+18]..[83,2593+21])
                          Pexp_ident "buf" (src/common.ml[83,2593+18]..[83,2593+21])
                    ]
    ]
  structure_item (src/common.ml[85,2616+0]..[89,2754+71])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[85,2616+4]..[85,2616+27])
          Ppat_var "get_type_param_name_res" (src/common.ml[85,2616+4]..[85,2616+27])
        expression (src/common.ml[85,2616+28]..[89,2754+71]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/common.ml[85,2616+28]..[85,2616+35])
            Ppat_tuple
            [
              pattern (src/common.ml[85,2616+29]..[85,2616+31])
                Ppat_var "ty" (src/common.ml[85,2616+29]..[85,2616+31])
              pattern (src/common.ml[85,2616+33]..[85,2616+34])
                Ppat_any
            ]
          expression (src/common.ml[86,2654+2]..[89,2754+71])
            Pexp_let Nonrec
            [
              <def>
                pattern (src/common.ml[86,2654+6]..[86,2654+9])
                  Ppat_var "loc" (src/common.ml[86,2654+6]..[86,2654+9])
                expression (src/common.ml[86,2654+12]..[86,2654+23])
                  Pexp_field
                  expression (src/common.ml[86,2654+12]..[86,2654+14])
                    Pexp_ident "ty" (src/common.ml[86,2654+12]..[86,2654+14])
                  "ptyp_loc" (src/common.ml[86,2654+15]..[86,2654+23])
            ]
            expression (src/common.ml[87,2681+2]..[89,2754+71])
              Pexp_match
              expression (src/common.ml[87,2681+8]..[87,2681+20])
                Pexp_field
                expression (src/common.ml[87,2681+8]..[87,2681+10])
                  Pexp_ident "ty" (src/common.ml[87,2681+8]..[87,2681+10])
                "ptyp_desc" (src/common.ml[87,2681+11]..[87,2681+20])
              [
                <case>
                  pattern (src/common.ml[88,2707+4]..[88,2707+17])
                    Ppat_construct "Ptyp_var" (src/common.ml[88,2707+4]..[88,2707+12])
                    Some
                      pattern (src/common.ml[88,2707+13]..[88,2707+17])
                        Ppat_var "name" (src/common.ml[88,2707+13]..[88,2707+17])
                  expression (src/common.ml[88,2707+21]..[88,2707+46])
                    Pexp_construct "Ok" (src/common.ml[88,2707+21]..[88,2707+23])
                    Some
                      expression (src/common.ml[88,2707+24]..[88,2707+46])
                        Pexp_apply
                        expression (src/common.ml[88,2707+25]..[88,2707+35])
                          Pexp_ident "Located.mk" (src/common.ml[88,2707+25]..[88,2707+35])
                        [
                          <arg>
                          Labelled "loc"
                            expression (src/common.ml[88,2707+37]..[88,2707+40])
                              Pexp_ident "loc" (src/common.ml[88,2707+37]..[88,2707+40])
                          <arg>
                          Nolabel
                            expression (src/common.ml[88,2707+41]..[88,2707+45])
                              Pexp_ident "name" (src/common.ml[88,2707+41]..[88,2707+45])
                        ]
                <case>
                  pattern (src/common.ml[89,2754+4]..[89,2754+5])
                    Ppat_any
                  expression (src/common.ml[89,2754+9]..[89,2754+71])
                    Pexp_construct "Error" (src/common.ml[89,2754+9]..[89,2754+14])
                    Some
                      expression (src/common.ml[89,2754+15]..[89,2754+71])
                        Pexp_tuple
                        [
                          expression (src/common.ml[89,2754+16]..[89,2754+66])
                            Pexp_apply
                            expression (src/common.ml[89,2754+16]..[89,2754+38])
                              Pexp_ident "Location.Error.createf" (src/common.ml[89,2754+16]..[89,2754+38])
                            [
                              <arg>
                              Labelled "loc"
                                expression (src/common.ml[89,2754+40]..[89,2754+43])
                                  Pexp_ident "loc" (src/common.ml[89,2754+40]..[89,2754+43])
                              <arg>
                              Nolabel
                                expression (src/common.ml[89,2754+44]..[89,2754+66])
                                  Pexp_constant PConst_string("not a type parameter",(src/common.ml[89,2754+45]..[89,2754+65]),None)
                            ]
                          expression (src/common.ml[89,2754+68]..[89,2754+70])
                            Pexp_construct "[]" (src/common.ml[89,2754+68]..[89,2754+70])
                            None
                        ]
              ]
    ]
  structure_item (src/common.ml[91,2827+0]..[94,2908+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[91,2827+4]..[91,2827+23])
          Ppat_var "get_type_param_name" (src/common.ml[91,2827+4]..[91,2827+23])
        expression (src/common.ml[91,2827+24]..[94,2908+46]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/common.ml[91,2827+24]..[91,2827+25])
            Ppat_var "t" (src/common.ml[91,2827+24]..[91,2827+25])
          expression (src/common.ml[92,2855+2]..[94,2908+46])
            Pexp_match
            expression (src/common.ml[92,2855+8]..[92,2855+33])
              Pexp_apply
              expression (src/common.ml[92,2855+8]..[92,2855+31])
                Pexp_ident "get_type_param_name_res" (src/common.ml[92,2855+8]..[92,2855+31])
              [
                <arg>
                Nolabel
                  expression (src/common.ml[92,2855+32]..[92,2855+33])
                    Pexp_ident "t" (src/common.ml[92,2855+32]..[92,2855+33])
              ]
            [
              <case>
                pattern (src/common.ml[93,2894+4]..[93,2894+8])
                  Ppat_construct "Ok" (src/common.ml[93,2894+4]..[93,2894+6])
                  Some
                    pattern (src/common.ml[93,2894+7]..[93,2894+8])
                      Ppat_var "e" (src/common.ml[93,2894+7]..[93,2894+8])
                expression (src/common.ml[93,2894+12]..[93,2894+13])
                  Pexp_ident "e" (src/common.ml[93,2894+12]..[93,2894+13])
              <case>
                pattern (src/common.ml[94,2908+4]..[94,2908+18])
                  Ppat_construct "Error" (src/common.ml[94,2908+4]..[94,2908+9])
                  Some
                    pattern (src/common.ml[94,2908+10]..[94,2908+18])
                      Ppat_tuple
                      [
                        pattern (src/common.ml[94,2908+11]..[94,2908+14])
                          Ppat_var "err" (src/common.ml[94,2908+11]..[94,2908+14])
                        pattern (src/common.ml[94,2908+16]..[94,2908+17])
                          Ppat_any
                      ]
                expression (src/common.ml[94,2908+22]..[94,2908+46])
                  Pexp_apply
                  expression (src/common.ml[94,2908+22]..[94,2908+42])
                    Pexp_ident "Location.Error.raise" (src/common.ml[94,2908+22]..[94,2908+42])
                  [
                    <arg>
                    Nolabel
                      expression (src/common.ml[94,2908+43]..[94,2908+46])
                        Pexp_ident "err" (src/common.ml[94,2908+43]..[94,2908+46])
                  ]
            ]
    ]
  structure_item (src/common.ml[96,2956+0]..[96,2956+27])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (src/common.ml[96,2956+0]..[96,2956+27])
          pext_name = "Type_is_recursive"
          pext_kind =
            Pext_decl
              []
              None
  structure_item (src/common.ml[98,2985+0]..[128,4078+5])
    Pstr_class
    [
      class_declaration (src/common.ml[98,2985+0]..[128,4078+5])
        pci_virt = Concrete
        pci_params =
          []
        pci_name = "type_is_recursive" (src/common.ml[98,2985+6]..[98,2985+23])
        pci_expr =
          class_expr (src/common.ml[98,2985+24]..[128,4078+5])
            Pcl_fun
            Nolabel
            None
            pattern (src/common.ml[98,2985+24]..[98,2985+32])
              Ppat_var "rec_flag" (src/common.ml[98,2985+24]..[98,2985+32])
            class_expr (src/common.ml[98,2985+33]..[128,4078+5])
              Pcl_fun
              Nolabel
              None
              pattern (src/common.ml[98,2985+33]..[98,2985+36])
                Ppat_var "tds" (src/common.ml[98,2985+33]..[98,2985+36])
              class_expr (src/common.ml[99,3024+2]..[128,4078+5])
                Pcl_structure
                class_structure
                  pattern (src/common.ml[99,3024+9]..[99,3024+15])
                    Ppat_var "self" (src/common.ml[99,3024+10]..[99,3024+14])
                  [
                    class_field (src/common.ml[100,3040+4]..[100,3040+39])
                      Pcf_inherit Fresh
                        class_expr (src/common.ml[100,3040+12]..[100,3040+30])
                          Pcl_constr "Ast_traverse0.iter" (src/common.ml[100,3040+12]..[100,3040+30])
                          []
                        Some
                          "super" (src/common.ml[100,3040+34]..[100,3040+39])
                    class_field (src/common.ml[101,3080+4]..[101,3080+80])
                      Pcf_val Immutable
                        "type_names" (src/common.ml[101,3080+8]..[101,3080+18])
                        Concrete Fresh
                        expression (src/common.ml[101,3080+8]..[101,3080+80]) ghost
                          Pexp_constraint
                          expression (src/common.ml[101,3080+35]..[101,3080+80])
                            Pexp_apply
                            expression (src/common.ml[101,3080+35]..[101,3080+43])
                              Pexp_ident "List.map" (src/common.ml[101,3080+35]..[101,3080+43])
                            [
                              <arg>
                              Nolabel
                                expression (src/common.ml[101,3080+44]..[101,3080+47])
                                  Pexp_ident "tds" (src/common.ml[101,3080+44]..[101,3080+47])
                              <arg>
                              Labelled "f"
                                expression (src/common.ml[101,3080+51]..[101,3080+80])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/common.ml[101,3080+56]..[101,3080+58])
                                    Ppat_var "td" (src/common.ml[101,3080+56]..[101,3080+58])
                                  expression (src/common.ml[101,3080+62]..[101,3080+79])
                                    Pexp_field
                                    expression (src/common.ml[101,3080+62]..[101,3080+75])
                                      Pexp_field
                                      expression (src/common.ml[101,3080+62]..[101,3080+64])
                                        Pexp_ident "td" (src/common.ml[101,3080+62]..[101,3080+64])
                                      "ptype_name" (src/common.ml[101,3080+65]..[101,3080+75])
                                    "txt" (src/common.ml[101,3080+76]..[101,3080+79])
                            ]
                          core_type (src/common.ml[101,3080+21]..[101,3080+32])
                            Ptyp_constr "list" (src/common.ml[101,3080+28]..[101,3080+32])
                            [
                              core_type (src/common.ml[101,3080+21]..[101,3080+27])
                                Ptyp_constr "string" (src/common.ml[101,3080+21]..[101,3080+27])
                                []
                            ]
                    class_field (src/common.ml[102,3161+4]..[102,3161+59])
                      Pcf_method Public
                        "return_true" (src/common.ml[102,3161+11]..[102,3161+22])
                        Concrete Fresh
                        expression (src/common.ml[102,3161+23]..[102,3161+59]) ghost
                          Pexp_poly
                          expression (src/common.ml[102,3161+23]..[102,3161+59]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/common.ml[102,3161+23]..[102,3161+25])
                              Ppat_construct "()" (src/common.ml[102,3161+23]..[102,3161+25])
                              None
                            expression (src/common.ml[102,3161+28]..[102,3161+59])
                              Pexp_apply
                              expression (src/common.ml[102,3161+28]..[102,3161+41])
                                Pexp_ident "raise_notrace" (src/common.ml[102,3161+28]..[102,3161+41])
                              [
                                <arg>
                                Nolabel
                                  expression (src/common.ml[102,3161+42]..[102,3161+59])
                                    Pexp_construct "Type_is_recursive" (src/common.ml[102,3161+42]..[102,3161+59])
                                    None
                              ]
                          None
                    class_field (src/common.ml[104,3222+4]..[110,3444+34])
                      Pcf_method Public
                        "core_type" (src/common.ml[104,3222+12]..[104,3222+21])
                        Concrete Override
                        expression (src/common.ml[104,3222+22]..[110,3444+34]) ghost
                          Pexp_poly
                          expression (src/common.ml[104,3222+22]..[110,3444+34]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/common.ml[104,3222+22]..[104,3222+27])
                              Ppat_var "ctype" (src/common.ml[104,3222+22]..[104,3222+27])
                            expression (src/common.ml[105,3252+6]..[110,3444+34])
                              Pexp_match
                              expression (src/common.ml[105,3252+12]..[105,3252+27])
                                Pexp_field
                                expression (src/common.ml[105,3252+12]..[105,3252+17])
                                  Pexp_ident "ctype" (src/common.ml[105,3252+12]..[105,3252+17])
                                "ptyp_desc" (src/common.ml[105,3252+18]..[105,3252+27])
                              [
                                <case>
                                  pattern (src/common.ml[106,3285+8]..[106,3285+20])
                                    Ppat_construct "Ptyp_arrow" (src/common.ml[106,3285+8]..[106,3285+18])
                                    Some
                                      pattern (src/common.ml[106,3285+19]..[106,3285+20])
                                        Ppat_any
                                  expression (src/common.ml[106,3285+24]..[106,3285+26])
                                    Pexp_construct "()" (src/common.ml[106,3285+24]..[106,3285+26])
                                    None
                                <case>
                                  pattern (src/common.ml[107,3312+8]..[107,3312+57])
                                    Ppat_construct "Ptyp_constr" (src/common.ml[107,3312+8]..[107,3312+19])
                                    Some
                                      pattern (src/common.ml[107,3312+20]..[107,3312+57])
                                        Ppat_tuple
                                        [
                                          pattern (src/common.ml[107,3312+21]..[107,3312+53])
                                            Ppat_record Open
                                            [
                                              "txt" (src/common.ml[107,3312+23]..[107,3312+26])
                                                pattern (src/common.ml[107,3312+29]..[107,3312+48])
                                                  Ppat_construct "Longident.Lident" (src/common.ml[107,3312+29]..[107,3312+45])
                                                  Some
                                                    pattern (src/common.ml[107,3312+46]..[107,3312+48])
                                                      Ppat_var "id" (src/common.ml[107,3312+46]..[107,3312+48])
                                            ]
                                          pattern (src/common.ml[107,3312+55]..[107,3312+56])
                                            Ppat_any
                                        ]
                                  <when>
                                    expression (src/common.ml[108,3370+13]..[108,3370+40])
                                      Pexp_apply
                                      expression (src/common.ml[108,3370+13]..[108,3370+21])
                                        Pexp_ident "List.mem" (src/common.ml[108,3370+13]..[108,3370+21])
                                      [
                                        <arg>
                                        Labelled "set"
                                          expression (src/common.ml[108,3370+27]..[108,3370+37])
                                            Pexp_ident "type_names" (src/common.ml[108,3370+27]..[108,3370+37])
                                        <arg>
                                        Nolabel
                                          expression (src/common.ml[108,3370+38]..[108,3370+40])
                                            Pexp_ident "id" (src/common.ml[108,3370+38]..[108,3370+40])
                                      ]
                                  expression (src/common.ml[109,3414+10]..[109,3414+29])
                                    Pexp_apply
                                    expression (src/common.ml[109,3414+10]..[109,3414+26])
                                      Pexp_send "return_true"
                                      expression (src/common.ml[109,3414+10]..[109,3414+14])
                                        Pexp_ident "self" (src/common.ml[109,3414+10]..[109,3414+14])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/common.ml[109,3414+27]..[109,3414+29])
                                          Pexp_construct "()" (src/common.ml[109,3414+27]..[109,3414+29])
                                          None
                                    ]
                                <case>
                                  pattern (src/common.ml[110,3444+8]..[110,3444+9])
                                    Ppat_any
                                  expression (src/common.ml[110,3444+13]..[110,3444+34])
                                    Pexp_apply
                                    expression (src/common.ml[110,3444+13]..[110,3444+28])
                                      Pexp_send "core_type"
                                      expression (src/common.ml[110,3444+13]..[110,3444+18])
                                        Pexp_ident "super" (src/common.ml[110,3444+13]..[110,3444+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/common.ml[110,3444+29]..[110,3444+34])
                                          Pexp_ident "ctype" (src/common.ml[110,3444+29]..[110,3444+34])
                                    ]
                              ]
                          None
                    class_field (src/common.ml[112,3480+4]..[116,3656+73])
                      Pcf_method Public
                        "constructor_declaration" (src/common.ml[112,3480+12]..[112,3480+35])
                        Concrete Override
                        expression (src/common.ml[112,3480+36]..[116,3656+73]) ghost
                          Pexp_poly
                          expression (src/common.ml[112,3480+36]..[116,3656+73]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/common.ml[112,3480+36]..[112,3480+38])
                              Ppat_var "cd" (src/common.ml[112,3480+36]..[112,3480+38])
                            expression (src/common.ml[114,3566+6]..[116,3656+73])
                              Pexp_match
                              expression (src/common.ml[114,3566+12]..[114,3566+23])
                                Pexp_field
                                expression (src/common.ml[114,3566+12]..[114,3566+14])
                                  Pexp_ident "cd" (src/common.ml[114,3566+12]..[114,3566+14])
                                "pcd_args" (src/common.ml[114,3566+15]..[114,3566+23])
                              [
                                <case>
                                  pattern (src/common.ml[115,3595+8]..[115,3595+24])
                                    Ppat_construct "Pcstr_tuple" (src/common.ml[115,3595+8]..[115,3595+19])
                                    Some
                                      pattern (src/common.ml[115,3595+20]..[115,3595+24])
                                        Ppat_var "args" (src/common.ml[115,3595+20]..[115,3595+24])
                                  expression (src/common.ml[115,3595+28]..[115,3595+60])
                                    Pexp_apply
                                    expression (src/common.ml[115,3595+28]..[115,3595+37])
                                      Pexp_ident "List.iter" (src/common.ml[115,3595+28]..[115,3595+37])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/common.ml[115,3595+38]..[115,3595+42])
                                          Pexp_ident "args" (src/common.ml[115,3595+38]..[115,3595+42])
                                      <arg>
                                      Labelled "f"
                                        expression (src/common.ml[115,3595+46]..[115,3595+60])
                                          Pexp_send "core_type"
                                          expression (src/common.ml[115,3595+46]..[115,3595+50])
                                            Pexp_ident "self" (src/common.ml[115,3595+46]..[115,3595+50])
                                    ]
                                <case>
                                  pattern (src/common.ml[116,3656+8]..[116,3656+27])
                                    Ppat_construct "Pcstr_record" (src/common.ml[116,3656+8]..[116,3656+20])
                                    Some
                                      pattern (src/common.ml[116,3656+21]..[116,3656+27])
                                        Ppat_var "fields" (src/common.ml[116,3656+21]..[116,3656+27])
                                  expression (src/common.ml[116,3656+31]..[116,3656+73])
                                    Pexp_apply
                                    expression (src/common.ml[116,3656+31]..[116,3656+40])
                                      Pexp_ident "List.iter" (src/common.ml[116,3656+31]..[116,3656+40])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/common.ml[116,3656+41]..[116,3656+47])
                                          Pexp_ident "fields" (src/common.ml[116,3656+41]..[116,3656+47])
                                      <arg>
                                      Labelled "f"
                                        expression (src/common.ml[116,3656+51]..[116,3656+73])
                                          Pexp_send "label_declaration"
                                          expression (src/common.ml[116,3656+51]..[116,3656+55])
                                            Pexp_ident "self" (src/common.ml[116,3656+51]..[116,3656+55])
                                    ]
                              ]
                          None
                    class_field (src/common.ml[118,3731+4]..[119,3797+29])
                      Pcf_method Public
                        "attributes" (src/common.ml[118,3731+12]..[118,3731+22])
                        Concrete Override
                        expression (src/common.ml[118,3731+23]..[119,3797+29]) ghost
                          Pexp_poly
                          expression (src/common.ml[118,3731+23]..[119,3797+29]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/common.ml[118,3731+23]..[118,3731+24])
                              Ppat_any
                            expression (src/common.ml[119,3797+27]..[119,3797+29])
                              Pexp_construct "()" (src/common.ml[119,3797+27]..[119,3797+29])
                              None
                          None
                    class_field (src/common.ml[121,3828+4]..[127,4046+31])
                      Pcf_method Public
                        "go" (src/common.ml[121,3828+11]..[121,3828+13])
                        Concrete Fresh
                        expression (src/common.ml[121,3828+14]..[127,4046+31]) ghost
                          Pexp_poly
                          expression (src/common.ml[121,3828+14]..[127,4046+31]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/common.ml[121,3828+14]..[121,3828+16])
                              Ppat_construct "()" (src/common.ml[121,3828+14]..[121,3828+16])
                              None
                            expression (src/common.ml[122,3847+6]..[127,4046+31])
                              Pexp_match
                              expression (src/common.ml[122,3847+12]..[122,3847+20])
                                Pexp_ident "rec_flag" (src/common.ml[122,3847+12]..[122,3847+20])
                              [
                                <case>
                                  pattern (src/common.ml[123,3873+8]..[123,3873+20])
                                    Ppat_construct "Nonrecursive" (src/common.ml[123,3873+8]..[123,3873+20])
                                    None
                                  expression (src/common.ml[123,3873+24]..[123,3873+36])
                                    Pexp_construct "Nonrecursive" (src/common.ml[123,3873+24]..[123,3873+36])
                                    None
                                <case>
                                  pattern (src/common.ml[124,3910+8]..[124,3910+17])
                                    Ppat_construct "Recursive" (src/common.ml[124,3910+8]..[124,3910+17])
                                    None
                                  expression (src/common.ml[124,3910+21]..[127,4046+31])
                                    Pexp_match
                                    expression (src/common.ml[125,3933+16]..[125,3933+54])
                                      Pexp_apply
                                      expression (src/common.ml[125,3933+16]..[125,3933+25])
                                        Pexp_ident "List.iter" (src/common.ml[125,3933+16]..[125,3933+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/common.ml[125,3933+26]..[125,3933+29])
                                            Pexp_ident "tds" (src/common.ml[125,3933+26]..[125,3933+29])
                                        <arg>
                                        Labelled "f"
                                          expression (src/common.ml[125,3933+33]..[125,3933+54])
                                            Pexp_send "type_declaration"
                                            expression (src/common.ml[125,3933+33]..[125,3933+37])
                                              Pexp_ident "self" (src/common.ml[125,3933+33]..[125,3933+37])
                                      ]
                                    [
                                      <case>
                                        pattern (src/common.ml[126,3993+12]..[126,3993+39])
                                          Ppat_exception
                                          pattern (src/common.ml[126,3993+22]..[126,3993+39])
                                            Ppat_construct "Type_is_recursive" (src/common.ml[126,3993+22]..[126,3993+39])
                                            None
                                        expression (src/common.ml[126,3993+43]..[126,3993+52])
                                          Pexp_construct "Recursive" (src/common.ml[126,3993+43]..[126,3993+52])
                                          None
                                      <case>
                                        pattern (src/common.ml[127,4046+12]..[127,4046+14])
                                          Ppat_construct "()" (src/common.ml[127,4046+12]..[127,4046+14])
                                          None
                                        expression (src/common.ml[127,4046+18]..[127,4046+30])
                                          Pexp_construct "Nonrecursive" (src/common.ml[127,4046+18]..[127,4046+30])
                                          None
                                    ]
                              ]
                          None
                  ]
    ]
  structure_item (src/common.ml[130,4085+0]..[130,4085+78])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[130,4085+4]..[130,4085+20])
          Ppat_var "really_recursive" (src/common.ml[130,4085+4]..[130,4085+20])
        expression (src/common.ml[130,4085+21]..[130,4085+78]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/common.ml[130,4085+21]..[130,4085+29])
            Ppat_var "rec_flag" (src/common.ml[130,4085+21]..[130,4085+29])
          expression (src/common.ml[130,4085+30]..[130,4085+78]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/common.ml[130,4085+30]..[130,4085+33])
              Ppat_var "tds" (src/common.ml[130,4085+30]..[130,4085+33])
            expression (src/common.ml[130,4085+36]..[130,4085+78])
              Pexp_apply
              expression (src/common.ml[130,4085+36]..[130,4085+75])
                Pexp_send "go"
                expression (src/common.ml[130,4085+36]..[130,4085+72])
                  Pexp_apply
                  expression (src/common.ml[130,4085+37]..[130,4085+58])
                    Pexp_new "type_is_recursive" (src/common.ml[130,4085+41]..[130,4085+58])
                  [
                    <arg>
                    Nolabel
                      expression (src/common.ml[130,4085+59]..[130,4085+67])
                        Pexp_ident "rec_flag" (src/common.ml[130,4085+59]..[130,4085+67])
                    <arg>
                    Nolabel
                      expression (src/common.ml[130,4085+68]..[130,4085+71])
                        Pexp_ident "tds" (src/common.ml[130,4085+68]..[130,4085+71])
                  ]
              [
                <arg>
                Nolabel
                  expression (src/common.ml[130,4085+76]..[130,4085+78])
                    Pexp_construct "()" (src/common.ml[130,4085+76]..[130,4085+78])
                    None
              ]
    ]
  structure_item (src/common.ml[131,4164+0]..[131,4164+60])
    Pstr_value Rec
    [
      <def>
        pattern (src/common.ml[131,4164+8]..[131,4164+12])
          Ppat_var "last" (src/common.ml[131,4164+8]..[131,4164+12])
        expression (src/common.ml[131,4164+13]..[131,4164+60]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/common.ml[131,4164+13]..[131,4164+14])
            Ppat_var "x" (src/common.ml[131,4164+13]..[131,4164+14])
          expression (src/common.ml[131,4164+15]..[131,4164+60]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/common.ml[131,4164+15]..[131,4164+16])
              Ppat_var "l" (src/common.ml[131,4164+15]..[131,4164+16])
            expression (src/common.ml[131,4164+19]..[131,4164+60])
              Pexp_match
              expression (src/common.ml[131,4164+25]..[131,4164+26])
                Pexp_ident "l" (src/common.ml[131,4164+25]..[131,4164+26])
              [
                <case>
                  pattern (src/common.ml[131,4164+32]..[131,4164+34])
                    Ppat_construct "[]" (src/common.ml[131,4164+32]..[131,4164+34])
                    None
                  expression (src/common.ml[131,4164+38]..[131,4164+39])
                    Pexp_ident "x" (src/common.ml[131,4164+38]..[131,4164+39])
                <case>
                  pattern (src/common.ml[131,4164+42]..[131,4164+48])
                    Ppat_construct "::" (src/common.ml[131,4164+44]..[131,4164+46])
                    Some
                      pattern (src/common.ml[131,4164+42]..[131,4164+48]) ghost
                        Ppat_tuple
                        [
                          pattern (src/common.ml[131,4164+42]..[131,4164+43])
                            Ppat_var "x" (src/common.ml[131,4164+42]..[131,4164+43])
                          pattern (src/common.ml[131,4164+47]..[131,4164+48])
                            Ppat_var "l" (src/common.ml[131,4164+47]..[131,4164+48])
                        ]
                  expression (src/common.ml[131,4164+52]..[131,4164+60])
                    Pexp_apply
                    expression (src/common.ml[131,4164+52]..[131,4164+56])
                      Pexp_ident "last" (src/common.ml[131,4164+52]..[131,4164+56])
                    [
                      <arg>
                      Nolabel
                        expression (src/common.ml[131,4164+57]..[131,4164+58])
                          Pexp_ident "x" (src/common.ml[131,4164+57]..[131,4164+58])
                      <arg>
                      Nolabel
                        expression (src/common.ml[131,4164+59]..[131,4164+60])
                          Pexp_ident "l" (src/common.ml[131,4164+59]..[131,4164+60])
                    ]
              ]
    ]
  structure_item (src/common.ml[133,4226+0]..[141,4554+72])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[133,4226+4]..[133,4226+27])
          Ppat_var "loc_of_name_and_payload" (src/common.ml[133,4226+4]..[133,4226+27])
        expression (src/common.ml[133,4226+28]..[141,4554+72]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/common.ml[133,4226+28]..[133,4226+32])
            Ppat_var "name" (src/common.ml[133,4226+28]..[133,4226+32])
          expression (src/common.ml[133,4226+33]..[141,4554+72]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/common.ml[133,4226+33]..[133,4226+40])
              Ppat_var "payload" (src/common.ml[133,4226+33]..[133,4226+40])
            expression (src/common.ml[134,4269+2]..[141,4554+72])
              Pexp_match
              expression (src/common.ml[134,4269+8]..[134,4269+15])
                Pexp_ident "payload" (src/common.ml[134,4269+8]..[134,4269+15])
              [
                <case>
                  pattern (src/common.ml[135,4290+4]..[135,4290+11])
                    Ppat_construct "PStr" (src/common.ml[135,4290+4]..[135,4290+8])
                    Some
                      pattern (src/common.ml[135,4290+9]..[135,4290+11])
                        Ppat_construct "[]" (src/common.ml[135,4290+9]..[135,4290+11])
                        None
                  expression (src/common.ml[135,4290+15]..[135,4290+23])
                    Pexp_field
                    expression (src/common.ml[135,4290+15]..[135,4290+19])
                      Pexp_ident "name" (src/common.ml[135,4290+15]..[135,4290+19])
                    "loc" (src/common.ml[135,4290+20]..[135,4290+23])
                <case>
                  pattern (src/common.ml[136,4314+4]..[136,4314+17])
                    Ppat_construct "PStr" (src/common.ml[136,4314+4]..[136,4314+8])
                    Some
                      pattern (src/common.ml[136,4314+9]..[136,4314+17])
                        Ppat_construct "::" (src/common.ml[136,4314+12]..[136,4314+14])
                        Some
                          pattern (src/common.ml[136,4314+10]..[136,4314+16]) ghost
                            Ppat_tuple
                            [
                              pattern (src/common.ml[136,4314+10]..[136,4314+11])
                                Ppat_var "x" (src/common.ml[136,4314+10]..[136,4314+11])
                              pattern (src/common.ml[136,4314+15]..[136,4314+16])
                                Ppat_var "l" (src/common.ml[136,4314+15]..[136,4314+16])
                            ]
                  expression (src/common.ml[136,4314+21]..[136,4314+78])
                    Pexp_record
                    [
                      "loc_end" (src/common.ml[136,4314+39]..[136,4314+46])
                        expression (src/common.ml[136,4314+49]..[136,4314+76])
                          Pexp_field
                          expression (src/common.ml[136,4314+49]..[136,4314+68])
                            Pexp_field
                            expression (src/common.ml[136,4314+49]..[136,4314+59])
                              Pexp_apply
                              expression (src/common.ml[136,4314+50]..[136,4314+54])
                                Pexp_ident "last" (src/common.ml[136,4314+50]..[136,4314+54])
                              [
                                <arg>
                                Nolabel
                                  expression (src/common.ml[136,4314+55]..[136,4314+56])
                                    Pexp_ident "x" (src/common.ml[136,4314+55]..[136,4314+56])
                                <arg>
                                Nolabel
                                  expression (src/common.ml[136,4314+57]..[136,4314+58])
                                    Pexp_ident "l" (src/common.ml[136,4314+57]..[136,4314+58])
                              ]
                            "pstr_loc" (src/common.ml[136,4314+60]..[136,4314+68])
                          "loc_end" (src/common.ml[136,4314+69]..[136,4314+76])
                    ]
                    Some
                      expression (src/common.ml[136,4314+23]..[136,4314+33])
                        Pexp_field
                        expression (src/common.ml[136,4314+23]..[136,4314+24])
                          Pexp_ident "x" (src/common.ml[136,4314+23]..[136,4314+24])
                        "pstr_loc" (src/common.ml[136,4314+25]..[136,4314+33])
                <case>
                  pattern (src/common.ml[137,4393+4]..[137,4393+11])
                    Ppat_construct "PSig" (src/common.ml[137,4393+4]..[137,4393+8])
                    Some
                      pattern (src/common.ml[137,4393+9]..[137,4393+11])
                        Ppat_construct "[]" (src/common.ml[137,4393+9]..[137,4393+11])
                        None
                  expression (src/common.ml[137,4393+15]..[137,4393+23])
                    Pexp_field
                    expression (src/common.ml[137,4393+15]..[137,4393+19])
                      Pexp_ident "name" (src/common.ml[137,4393+15]..[137,4393+19])
                    "loc" (src/common.ml[137,4393+20]..[137,4393+23])
                <case>
                  pattern (src/common.ml[138,4417+4]..[138,4417+17])
                    Ppat_construct "PSig" (src/common.ml[138,4417+4]..[138,4417+8])
                    Some
                      pattern (src/common.ml[138,4417+9]..[138,4417+17])
                        Ppat_construct "::" (src/common.ml[138,4417+12]..[138,4417+14])
                        Some
                          pattern (src/common.ml[138,4417+10]..[138,4417+16]) ghost
                            Ppat_tuple
                            [
                              pattern (src/common.ml[138,4417+10]..[138,4417+11])
                                Ppat_var "x" (src/common.ml[138,4417+10]..[138,4417+11])
                              pattern (src/common.ml[138,4417+15]..[138,4417+16])
                                Ppat_var "l" (src/common.ml[138,4417+15]..[138,4417+16])
                            ]
                  expression (src/common.ml[138,4417+21]..[138,4417+78])
                    Pexp_record
                    [
                      "loc_end" (src/common.ml[138,4417+39]..[138,4417+46])
                        expression (src/common.ml[138,4417+49]..[138,4417+76])
                          Pexp_field
                          expression (src/common.ml[138,4417+49]..[138,4417+68])
                            Pexp_field
                            expression (src/common.ml[138,4417+49]..[138,4417+59])
                              Pexp_apply
                              expression (src/common.ml[138,4417+50]..[138,4417+54])
                                Pexp_ident "last" (src/common.ml[138,4417+50]..[138,4417+54])
                              [
                                <arg>
                                Nolabel
                                  expression (src/common.ml[138,4417+55]..[138,4417+56])
                                    Pexp_ident "x" (src/common.ml[138,4417+55]..[138,4417+56])
                                <arg>
                                Nolabel
                                  expression (src/common.ml[138,4417+57]..[138,4417+58])
                                    Pexp_ident "l" (src/common.ml[138,4417+57]..[138,4417+58])
                              ]
                            "psig_loc" (src/common.ml[138,4417+60]..[138,4417+68])
                          "loc_end" (src/common.ml[138,4417+69]..[138,4417+76])
                    ]
                    Some
                      expression (src/common.ml[138,4417+23]..[138,4417+33])
                        Pexp_field
                        expression (src/common.ml[138,4417+23]..[138,4417+24])
                          Pexp_ident "x" (src/common.ml[138,4417+23]..[138,4417+24])
                        "psig_loc" (src/common.ml[138,4417+25]..[138,4417+33])
                <case>
                  pattern (src/common.ml[139,4496+4]..[139,4496+10])
                    Ppat_construct "PTyp" (src/common.ml[139,4496+4]..[139,4496+8])
                    Some
                      pattern (src/common.ml[139,4496+9]..[139,4496+10])
                        Ppat_var "t" (src/common.ml[139,4496+9]..[139,4496+10])
                  expression (src/common.ml[139,4496+14]..[139,4496+24])
                    Pexp_field
                    expression (src/common.ml[139,4496+14]..[139,4496+15])
                      Pexp_ident "t" (src/common.ml[139,4496+14]..[139,4496+15])
                    "ptyp_loc" (src/common.ml[139,4496+16]..[139,4496+24])
                <case>
                  pattern (src/common.ml[140,4521+4]..[140,4521+18])
                    Ppat_construct "PPat" (src/common.ml[140,4521+4]..[140,4521+8])
                    Some
                      pattern (src/common.ml[140,4521+9]..[140,4521+18])
                        Ppat_tuple
                        [
                          pattern (src/common.ml[140,4521+10]..[140,4521+11])
                            Ppat_var "x" (src/common.ml[140,4521+10]..[140,4521+11])
                          pattern (src/common.ml[140,4521+13]..[140,4521+17])
                            Ppat_construct "None" (src/common.ml[140,4521+13]..[140,4521+17])
                            None
                        ]
                  expression (src/common.ml[140,4521+22]..[140,4521+32])
                    Pexp_field
                    expression (src/common.ml[140,4521+22]..[140,4521+23])
                      Pexp_ident "x" (src/common.ml[140,4521+22]..[140,4521+23])
                    "ppat_loc" (src/common.ml[140,4521+24]..[140,4521+32])
                <case>
                  pattern (src/common.ml[141,4554+4]..[141,4554+20])
                    Ppat_construct "PPat" (src/common.ml[141,4554+4]..[141,4554+8])
                    Some
                      pattern (src/common.ml[141,4554+9]..[141,4554+20])
                        Ppat_tuple
                        [
                          pattern (src/common.ml[141,4554+10]..[141,4554+11])
                            Ppat_var "x" (src/common.ml[141,4554+10]..[141,4554+11])
                          pattern (src/common.ml[141,4554+13]..[141,4554+19])
                            Ppat_construct "Some" (src/common.ml[141,4554+13]..[141,4554+17])
                            Some
                              pattern (src/common.ml[141,4554+18]..[141,4554+19])
                                Ppat_var "e" (src/common.ml[141,4554+18]..[141,4554+19])
                        ]
                  expression (src/common.ml[141,4554+24]..[141,4554+72])
                    Pexp_record
                    [
                      "loc_end" (src/common.ml[141,4554+42]..[141,4554+49])
                        expression (src/common.ml[141,4554+52]..[141,4554+70])
                          Pexp_field
                          expression (src/common.ml[141,4554+52]..[141,4554+62])
                            Pexp_field
                            expression (src/common.ml[141,4554+52]..[141,4554+53])
                              Pexp_ident "e" (src/common.ml[141,4554+52]..[141,4554+53])
                            "pexp_loc" (src/common.ml[141,4554+54]..[141,4554+62])
                          "loc_end" (src/common.ml[141,4554+63]..[141,4554+70])
                    ]
                    Some
                      expression (src/common.ml[141,4554+26]..[141,4554+36])
                        Pexp_field
                        expression (src/common.ml[141,4554+26]..[141,4554+27])
                          Pexp_ident "x" (src/common.ml[141,4554+26]..[141,4554+27])
                        "ppat_loc" (src/common.ml[141,4554+28]..[141,4554+36])
              ]
    ]
  structure_item (src/common.ml[143,4628+0]..[144,4691+48])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[143,4628+4]..[143,4628+18])
          Ppat_var "loc_of_payload" (src/common.ml[143,4628+4]..[143,4628+18])
        expression (src/common.ml[143,4628+19]..[144,4691+48]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/common.ml[143,4628+19]..[143,4628+60])
            Ppat_record Closed
            [
              "attr_name" (src/common.ml[143,4628+21]..[143,4628+30]) ghost
                pattern (src/common.ml[143,4628+21]..[143,4628+30])
                  Ppat_var "attr_name" (src/common.ml[143,4628+21]..[143,4628+30])
              "attr_payload" (src/common.ml[143,4628+32]..[143,4628+44]) ghost
                pattern (src/common.ml[143,4628+32]..[143,4628+44])
                  Ppat_var "attr_payload" (src/common.ml[143,4628+32]..[143,4628+44])
              "attr_loc" (src/common.ml[143,4628+46]..[143,4628+54])
                pattern (src/common.ml[143,4628+57]..[143,4628+58])
                  Ppat_any
            ]
          expression (src/common.ml[144,4691+2]..[144,4691+48])
            Pexp_apply
            expression (src/common.ml[144,4691+2]..[144,4691+25])
              Pexp_ident "loc_of_name_and_payload" (src/common.ml[144,4691+2]..[144,4691+25])
            [
              <arg>
              Nolabel
                expression (src/common.ml[144,4691+26]..[144,4691+35])
                  Pexp_ident "attr_name" (src/common.ml[144,4691+26]..[144,4691+35])
              <arg>
              Nolabel
                expression (src/common.ml[144,4691+36]..[144,4691+48])
                  Pexp_ident "attr_payload" (src/common.ml[144,4691+36]..[144,4691+48])
            ]
    ]
  structure_item (src/common.ml[146,4741+0]..[157,5235+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[146,4741+4]..[146,4741+20])
          Ppat_var "loc_of_attribute" (src/common.ml[146,4741+4]..[146,4741+20])
        expression (src/common.ml[146,4741+21]..[157,5235+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/common.ml[146,4741+21]..[146,4741+62])
            Ppat_record Closed
            [
              "attr_name" (src/common.ml[146,4741+23]..[146,4741+32]) ghost
                pattern (src/common.ml[146,4741+23]..[146,4741+32])
                  Ppat_var "attr_name" (src/common.ml[146,4741+23]..[146,4741+32])
              "attr_payload" (src/common.ml[146,4741+34]..[146,4741+46]) ghost
                pattern (src/common.ml[146,4741+34]..[146,4741+46])
                  Ppat_var "attr_payload" (src/common.ml[146,4741+34]..[146,4741+46])
              "attr_loc" (src/common.ml[146,4741+48]..[146,4741+56])
                pattern (src/common.ml[146,4741+59]..[146,4741+60])
                  Ppat_any
            ]
          expression (src/common.ml[151,5023+2]..[157,5235+5])
            Pexp_ifthenelse
            expression (src/common.ml[151,5023+5]..[151,5023+43])
              Pexp_apply
              expression (src/common.ml[151,5023+5]..[151,5023+15])
                Pexp_ident "Poly.=" (src/common.ml[151,5023+5]..[151,5023+15])
              [
                <arg>
                Nolabel
                  expression (src/common.ml[151,5023+16]..[151,5023+29])
                    Pexp_field
                    expression (src/common.ml[151,5023+16]..[151,5023+25])
                      Pexp_ident "attr_name" (src/common.ml[151,5023+16]..[151,5023+25])
                    "loc" (src/common.ml[151,5023+26]..[151,5023+29])
                <arg>
                Nolabel
                  expression (src/common.ml[151,5023+30]..[151,5023+43])
                    Pexp_ident "Location.none" (src/common.ml[151,5023+30]..[151,5023+43])
              ]
            expression (src/common.ml[152,5072+4]..[152,5072+50])
              Pexp_apply
              expression (src/common.ml[152,5072+4]..[152,5072+27])
                Pexp_ident "loc_of_name_and_payload" (src/common.ml[152,5072+4]..[152,5072+27])
              [
                <arg>
                Nolabel
                  expression (src/common.ml[152,5072+28]..[152,5072+37])
                    Pexp_ident "attr_name" (src/common.ml[152,5072+28]..[152,5072+37])
                <arg>
                Nolabel
                  expression (src/common.ml[152,5072+38]..[152,5072+50])
                    Pexp_ident "attr_payload" (src/common.ml[152,5072+38]..[152,5072+50])
              ]
            Some
              expression (src/common.ml[154,5130+4]..[157,5235+5])
                Pexp_record
                [
                  "loc_end" (src/common.ml[156,5161+6]..[156,5161+13])
                    expression (src/common.ml[156,5161+16]..[156,5161+72])
                      Pexp_field
                      expression (src/common.ml[156,5161+16]..[156,5161+64])
                        Pexp_apply
                        expression (src/common.ml[156,5161+17]..[156,5161+40])
                          Pexp_ident "loc_of_name_and_payload" (src/common.ml[156,5161+17]..[156,5161+40])
                        [
                          <arg>
                          Nolabel
                            expression (src/common.ml[156,5161+41]..[156,5161+50])
                              Pexp_ident "attr_name" (src/common.ml[156,5161+41]..[156,5161+50])
                          <arg>
                          Nolabel
                            expression (src/common.ml[156,5161+51]..[156,5161+63])
                              Pexp_ident "attr_payload" (src/common.ml[156,5161+51]..[156,5161+63])
                        ]
                      "loc_end" (src/common.ml[156,5161+65]..[156,5161+72])
                ]
                Some
                  expression (src/common.ml[155,5136+6]..[155,5136+19])
                    Pexp_field
                    expression (src/common.ml[155,5136+6]..[155,5136+15])
                      Pexp_ident "attr_name" (src/common.ml[155,5136+6]..[155,5136+15])
                    "loc" (src/common.ml[155,5136+16]..[155,5136+19])
    ]
  structure_item (src/common.ml[159,5242+0]..[162,5369+78])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[159,5242+4]..[159,5242+20])
          Ppat_var "loc_of_extension" (src/common.ml[159,5242+4]..[159,5242+20])
        expression (src/common.ml[159,5242+21]..[162,5369+78]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/common.ml[159,5242+21]..[159,5242+36])
            Ppat_tuple
            [
              pattern (src/common.ml[159,5242+22]..[159,5242+26])
                Ppat_var "name" (src/common.ml[159,5242+22]..[159,5242+26])
              pattern (src/common.ml[159,5242+28]..[159,5242+35])
                Ppat_var "payload" (src/common.ml[159,5242+28]..[159,5242+35])
            ]
          expression (src/common.ml[160,5281+2]..[162,5369+78])
            Pexp_ifthenelse
            expression (src/common.ml[160,5281+5]..[160,5281+38])
              Pexp_apply
              expression (src/common.ml[160,5281+5]..[160,5281+15])
                Pexp_ident "Poly.=" (src/common.ml[160,5281+5]..[160,5281+15])
              [
                <arg>
                Nolabel
                  expression (src/common.ml[160,5281+16]..[160,5281+24])
                    Pexp_field
                    expression (src/common.ml[160,5281+16]..[160,5281+20])
                      Pexp_ident "name" (src/common.ml[160,5281+16]..[160,5281+20])
                    "loc" (src/common.ml[160,5281+21]..[160,5281+24])
                <arg>
                Nolabel
                  expression (src/common.ml[160,5281+25]..[160,5281+38])
                    Pexp_ident "Location.none" (src/common.ml[160,5281+25]..[160,5281+38])
              ]
            expression (src/common.ml[160,5281+44]..[160,5281+80])
              Pexp_apply
              expression (src/common.ml[160,5281+44]..[160,5281+67])
                Pexp_ident "loc_of_name_and_payload" (src/common.ml[160,5281+44]..[160,5281+67])
              [
                <arg>
                Nolabel
                  expression (src/common.ml[160,5281+68]..[160,5281+72])
                    Pexp_ident "name" (src/common.ml[160,5281+68]..[160,5281+72])
                <arg>
                Nolabel
                  expression (src/common.ml[160,5281+73]..[160,5281+80])
                    Pexp_ident "payload" (src/common.ml[160,5281+73]..[160,5281+80])
              ]
            Some
              expression (src/common.ml[162,5369+4]..[162,5369+78])
                Pexp_record
                [
                  "loc_end" (src/common.ml[162,5369+20]..[162,5369+27])
                    expression (src/common.ml[162,5369+30]..[162,5369+76])
                      Pexp_field
                      expression (src/common.ml[162,5369+30]..[162,5369+68])
                        Pexp_apply
                        expression (src/common.ml[162,5369+31]..[162,5369+54])
                          Pexp_ident "loc_of_name_and_payload" (src/common.ml[162,5369+31]..[162,5369+54])
                        [
                          <arg>
                          Nolabel
                            expression (src/common.ml[162,5369+55]..[162,5369+59])
                              Pexp_ident "name" (src/common.ml[162,5369+55]..[162,5369+59])
                          <arg>
                          Nolabel
                            expression (src/common.ml[162,5369+60]..[162,5369+67])
                              Pexp_ident "payload" (src/common.ml[162,5369+60]..[162,5369+67])
                        ]
                      "loc_end" (src/common.ml[162,5369+69]..[162,5369+76])
                ]
                Some
                  expression (src/common.ml[162,5369+6]..[162,5369+14])
                    Pexp_field
                    expression (src/common.ml[162,5369+6]..[162,5369+10])
                      Pexp_ident "name" (src/common.ml[162,5369+6]..[162,5369+10])
                    "loc" (src/common.ml[162,5369+11]..[162,5369+14])
    ]
  structure_item (src/common.ml[164,5449+0]..[175,5819+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[164,5449+4]..[164,5449+22])
          Ppat_var "curry_applications" (src/common.ml[164,5449+4]..[164,5449+22])
        expression (src/common.ml[164,5449+23]..[175,5819+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/common.ml[164,5449+23]..[164,5449+27])
            Ppat_var "expr" (src/common.ml[164,5449+23]..[164,5449+27])
          expression (src/common.ml[165,5479+2]..[175,5819+13])
            Pexp_open Fresh
            module_expr (src/common.ml[165,5479+11]..[165,5479+34])
              Pmod_ident "Ast_builder_generated.M" (src/common.ml[165,5479+11]..[165,5479+34])
            expression (src/common.ml[166,5517+2]..[175,5819+13])
              Pexp_match
              expression (src/common.ml[166,5517+8]..[166,5517+22])
                Pexp_field
                expression (src/common.ml[166,5517+8]..[166,5517+12])
                  Pexp_ident "expr" (src/common.ml[166,5517+8]..[166,5517+12])
                "pexp_desc" (src/common.ml[166,5517+13]..[166,5517+22])
              [
                <case>
                  pattern (src/common.ml[167,5545+4]..[167,5545+37])
                    Ppat_construct "Pexp_apply" (src/common.ml[167,5545+4]..[167,5545+14])
                    Some
                      pattern (src/common.ml[167,5545+15]..[167,5545+37])
                        Ppat_tuple
                        [
                          pattern (src/common.ml[167,5545+16]..[167,5545+17])
                            Ppat_var "f" (src/common.ml[167,5545+16]..[167,5545+17])
                          pattern (src/common.ml[167,5545+19]..[167,5545+36])
                            Ppat_var "orig_forward_args" (src/common.ml[167,5545+19]..[167,5545+36])
                        ]
                  expression (src/common.ml[168,5586+6]..[174,5779+39])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/common.ml[168,5586+10]..[168,5586+13])
                          Ppat_var "loc" (src/common.ml[168,5586+10]..[168,5586+13])
                        expression (src/common.ml[168,5586+16]..[168,5586+29])
                          Pexp_field
                          expression (src/common.ml[168,5586+16]..[168,5586+20])
                            Pexp_ident "expr" (src/common.ml[168,5586+16]..[168,5586+20])
                          "pexp_loc" (src/common.ml[168,5586+21]..[168,5586+29])
                    ]
                    expression (src/common.ml[169,5619+6]..[174,5779+39])
                      Pexp_let Rec
                      [
                        <def>
                          pattern (src/common.ml[169,5619+14]..[169,5619+18])
                            Ppat_var "loop" (src/common.ml[169,5619+14]..[169,5619+18])
                          expression (src/common.ml[169,5619+21]..[172,5707+62])
                            Pexp_function
                            [
                              <case>
                                pattern (src/common.ml[170,5649+10]..[170,5649+12])
                                  Ppat_construct "[]" (src/common.ml[170,5649+10]..[170,5649+12])
                                  None
                                expression (src/common.ml[170,5649+16]..[170,5649+17])
                                  Pexp_ident "f" (src/common.ml[170,5649+16]..[170,5649+17])
                              <case>
                                pattern (src/common.ml[171,5667+10]..[171,5667+36])
                                  Ppat_construct "::" (src/common.ml[171,5667+19]..[171,5667+21])
                                  Some
                                    pattern (src/common.ml[171,5667+10]..[171,5667+36]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (src/common.ml[171,5667+10]..[171,5667+18])
                                          Ppat_var "last_arg" (src/common.ml[171,5667+10]..[171,5667+18])
                                        pattern (src/common.ml[171,5667+22]..[171,5667+36])
                                          Ppat_var "rev_front_args" (src/common.ml[171,5667+22]..[171,5667+36])
                                      ]
                                expression (src/common.ml[172,5707+12]..[172,5707+62])
                                  Pexp_apply
                                  expression (src/common.ml[172,5707+12]..[172,5707+22])
                                    Pexp_ident "pexp_apply" (src/common.ml[172,5707+12]..[172,5707+22])
                                  [
                                    <arg>
                                    Labelled "loc"
                                      expression (src/common.ml[172,5707+24]..[172,5707+27])
                                        Pexp_ident "loc" (src/common.ml[172,5707+24]..[172,5707+27])
                                    <arg>
                                    Nolabel
                                      expression (src/common.ml[172,5707+28]..[172,5707+49])
                                        Pexp_apply
                                        expression (src/common.ml[172,5707+29]..[172,5707+33])
                                          Pexp_ident "loop" (src/common.ml[172,5707+29]..[172,5707+33])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/common.ml[172,5707+34]..[172,5707+48])
                                              Pexp_ident "rev_front_args" (src/common.ml[172,5707+34]..[172,5707+48])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (src/common.ml[172,5707+50]..[172,5707+62])
                                        Pexp_construct "::" (src/common.ml[172,5707+52]..[172,5707+62]) ghost
                                        Some
                                          expression (src/common.ml[172,5707+52]..[172,5707+62]) ghost
                                            Pexp_tuple
                                            [
                                              expression (src/common.ml[172,5707+52]..[172,5707+60])
                                                Pexp_ident "last_arg" (src/common.ml[172,5707+52]..[172,5707+60])
                                              expression (src/common.ml[172,5707+61]..[172,5707+62]) ghost
                                                Pexp_construct "[]" (src/common.ml[172,5707+61]..[172,5707+62]) ghost
                                                None
                                            ]
                                  ]
                            ]
                      ]
                      expression (src/common.ml[174,5779+6]..[174,5779+39])
                        Pexp_apply
                        expression (src/common.ml[174,5779+6]..[174,5779+10])
                          Pexp_ident "loop" (src/common.ml[174,5779+6]..[174,5779+10])
                        [
                          <arg>
                          Nolabel
                            expression (src/common.ml[174,5779+11]..[174,5779+39])
                              Pexp_apply
                              expression (src/common.ml[174,5779+12]..[174,5779+20])
                                Pexp_ident "List.rev" (src/common.ml[174,5779+12]..[174,5779+20])
                              [
                                <arg>
                                Nolabel
                                  expression (src/common.ml[174,5779+21]..[174,5779+38])
                                    Pexp_ident "orig_forward_args" (src/common.ml[174,5779+21]..[174,5779+38])
                              ]
                        ]
                <case>
                  pattern (src/common.ml[175,5819+4]..[175,5819+5])
                    Ppat_any
                  expression (src/common.ml[175,5819+9]..[175,5819+13])
                    Pexp_ident "expr" (src/common.ml[175,5819+9]..[175,5819+13])
              ]
    ]
  structure_item (src/common.ml[177,5834+0]..[184,6069+73])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[177,5834+4]..[177,5834+21])
          Ppat_var "attributes_errors" (src/common.ml[177,5834+4]..[177,5834+21])
        expression (src/common.ml[178,5858+2]..[184,6069+73])
          Pexp_apply
          expression (src/common.ml[178,5858+2]..[178,5858+17])
            Pexp_ident "List.filter_map" (src/common.ml[178,5858+2]..[178,5858+17])
          [
            <arg>
            Labelled "f"
              expression (src/common.ml[178,5858+21]..[184,6069+73])
                Pexp_function
                [
                  <case>
                    pattern (src/common.ml[179,5889+6]..[179,5889+58])
                      Ppat_record Closed
                      [
                        "attr_name" (src/common.ml[179,5889+8]..[179,5889+17])
                          pattern (src/common.ml[179,5889+20]..[179,5889+24])
                            Ppat_var "name" (src/common.ml[179,5889+20]..[179,5889+24])
                        "attr_loc" (src/common.ml[179,5889+26]..[179,5889+34])
                          pattern (src/common.ml[179,5889+37]..[179,5889+38])
                            Ppat_any
                        "attr_payload" (src/common.ml[179,5889+40]..[179,5889+52])
                          pattern (src/common.ml[179,5889+55]..[179,5889+56])
                            Ppat_any
                      ]
                    <when>
                      expression (src/common.ml[180,5948+11]..[180,5948+47])
                        Pexp_apply
                        expression (src/common.ml[180,5948+11]..[180,5948+29])
                          Pexp_ident "Name.ignore_checks" (src/common.ml[180,5948+11]..[180,5948+29])
                        [
                          <arg>
                          Nolabel
                            expression (src/common.ml[180,5948+30]..[180,5948+47])
                              Pexp_field
                              expression (src/common.ml[180,5948+30]..[180,5948+34])
                                Pexp_ident "name" (src/common.ml[180,5948+30]..[180,5948+34])
                              "Location.txt" (src/common.ml[180,5948+35]..[180,5948+47])
                        ]
                    expression (src/common.ml[181,5999+8]..[181,5999+12])
                      Pexp_construct "None" (src/common.ml[181,5999+8]..[181,5999+12])
                      None
                  <case>
                    pattern (src/common.ml[182,6012+6]..[182,6012+10])
                      Ppat_var "attr" (src/common.ml[182,6012+6]..[182,6012+10])
                    expression (src/common.ml[183,6026+8]..[184,6069+72])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/common.ml[183,6026+12]..[183,6026+15])
                            Ppat_var "loc" (src/common.ml[183,6026+12]..[183,6026+15])
                          expression (src/common.ml[183,6026+18]..[183,6026+39])
                            Pexp_apply
                            expression (src/common.ml[183,6026+18]..[183,6026+34])
                              Pexp_ident "loc_of_attribute" (src/common.ml[183,6026+18]..[183,6026+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/common.ml[183,6026+35]..[183,6026+39])
                                  Pexp_ident "attr" (src/common.ml[183,6026+35]..[183,6026+39])
                            ]
                      ]
                      expression (src/common.ml[184,6069+8]..[184,6069+72])
                        Pexp_construct "Some" (src/common.ml[184,6069+8]..[184,6069+12])
                        Some
                          expression (src/common.ml[184,6069+13]..[184,6069+72])
                            Pexp_apply
                            expression (src/common.ml[184,6069+14]..[184,6069+36])
                              Pexp_ident "Location.Error.createf" (src/common.ml[184,6069+14]..[184,6069+36])
                            [
                              <arg>
                              Labelled "loc"
                                expression (src/common.ml[184,6069+38]..[184,6069+41])
                                  Pexp_ident "loc" (src/common.ml[184,6069+38]..[184,6069+41])
                              <arg>
                              Nolabel
                                expression (src/common.ml[184,6069+42]..[184,6069+71])
                                  Pexp_constant PConst_string("Attributes not allowed here",(src/common.ml[184,6069+43]..[184,6069+70]),None)
                            ]
                ]
          ]
    ]
  structure_item (src/common.ml[186,6144+0]..[190,6300+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[186,6144+4]..[186,6144+29])
          Ppat_var "collect_attributes_errors" (src/common.ml[186,6144+4]..[186,6144+29])
        expression (src/common.ml[187,6176+2]..[190,6300+5])
          Pexp_object
          class_structure
            pattern (src/common.ml[187,6176+8]..[187,6176+8]) ghost
              Ppat_any
            [
              class_field (src/common.ml[188,6185+4]..[188,6185+54])
                Pcf_inherit Fresh
                  class_expr (src/common.ml[188,6185+12]..[188,6185+54])
                    Pcl_constr "Ast_traverse0.fold" (src/common.ml[188,6185+36]..[188,6185+54])
                    [
                      core_type (src/common.ml[188,6185+13]..[188,6185+34])
                        Ptyp_constr "list" (src/common.ml[188,6185+30]..[188,6185+34])
                        [
                          core_type (src/common.ml[188,6185+13]..[188,6185+29])
                            Ptyp_constr "Location.Error.t" (src/common.ml[188,6185+13]..[188,6185+29])
                            []
                        ]
                    ]
                  None
              class_field (src/common.ml[189,6240+4]..[189,6240+59])
                Pcf_method Public
                  "attribute" (src/common.ml[189,6240+12]..[189,6240+21])
                  Concrete Override
                  expression (src/common.ml[189,6240+22]..[189,6240+59]) ghost
                    Pexp_poly
                    expression (src/common.ml[189,6240+22]..[189,6240+59]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/common.ml[189,6240+22]..[189,6240+23])
                        Ppat_var "a" (src/common.ml[189,6240+22]..[189,6240+23])
                      expression (src/common.ml[189,6240+24]..[189,6240+59]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/common.ml[189,6240+24]..[189,6240+27])
                          Ppat_var "acc" (src/common.ml[189,6240+24]..[189,6240+27])
                        expression (src/common.ml[189,6240+30]..[189,6240+59])
                          Pexp_apply
                          expression (src/common.ml[189,6240+54]..[189,6240+55])
                            Pexp_ident "@" (src/common.ml[189,6240+54]..[189,6240+55])
                          [
                            <arg>
                            Nolabel
                              expression (src/common.ml[189,6240+30]..[189,6240+53])
                                Pexp_apply
                                expression (src/common.ml[189,6240+30]..[189,6240+47])
                                  Pexp_ident "attributes_errors" (src/common.ml[189,6240+30]..[189,6240+47])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/common.ml[189,6240+48]..[189,6240+53])
                                      Pexp_construct "::" (src/common.ml[189,6240+50]..[189,6240+53]) ghost
                                      Some
                                        expression (src/common.ml[189,6240+50]..[189,6240+53]) ghost
                                          Pexp_tuple
                                          [
                                            expression (src/common.ml[189,6240+50]..[189,6240+51])
                                              Pexp_ident "a" (src/common.ml[189,6240+50]..[189,6240+51])
                                            expression (src/common.ml[189,6240+52]..[189,6240+53]) ghost
                                              Pexp_construct "[]" (src/common.ml[189,6240+52]..[189,6240+53]) ghost
                                              None
                                          ]
                                ]
                            <arg>
                            Nolabel
                              expression (src/common.ml[189,6240+56]..[189,6240+59])
                                Pexp_ident "acc" (src/common.ml[189,6240+56]..[189,6240+59])
                          ]
                    None
            ]
    ]
  structure_item (src/common.ml[192,6307+0]..[195,6382+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[192,6307+4]..[192,6307+24])
          Ppat_var "assert_no_attributes" (src/common.ml[192,6307+4]..[192,6307+24])
        expression (src/common.ml[192,6307+25]..[195,6382+40]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/common.ml[192,6307+25]..[192,6307+26])
            Ppat_var "l" (src/common.ml[192,6307+25]..[192,6307+26])
          expression (src/common.ml[193,6336+2]..[195,6382+40])
            Pexp_match
            expression (src/common.ml[193,6336+8]..[193,6336+27])
              Pexp_apply
              expression (src/common.ml[193,6336+8]..[193,6336+25])
                Pexp_ident "attributes_errors" (src/common.ml[193,6336+8]..[193,6336+25])
              [
                <arg>
                Nolabel
                  expression (src/common.ml[193,6336+26]..[193,6336+27])
                    Pexp_ident "l" (src/common.ml[193,6336+26]..[193,6336+27])
              ]
            [
              <case>
                pattern (src/common.ml[194,6369+4]..[194,6369+6])
                  Ppat_construct "[]" (src/common.ml[194,6369+4]..[194,6369+6])
                  None
                expression (src/common.ml[194,6369+10]..[194,6369+12])
                  Pexp_construct "()" (src/common.ml[194,6369+10]..[194,6369+12])
                  None
              <case>
                pattern (src/common.ml[195,6382+4]..[195,6382+12])
                  Ppat_construct "::" (src/common.ml[195,6382+8]..[195,6382+10])
                  Some
                    pattern (src/common.ml[195,6382+4]..[195,6382+12]) ghost
                      Ppat_tuple
                      [
                        pattern (src/common.ml[195,6382+4]..[195,6382+7])
                          Ppat_var "err" (src/common.ml[195,6382+4]..[195,6382+7])
                        pattern (src/common.ml[195,6382+11]..[195,6382+12])
                          Ppat_any
                      ]
                expression (src/common.ml[195,6382+16]..[195,6382+40])
                  Pexp_apply
                  expression (src/common.ml[195,6382+16]..[195,6382+36])
                    Pexp_ident "Location.Error.raise" (src/common.ml[195,6382+16]..[195,6382+36])
                  [
                    <arg>
                    Nolabel
                      expression (src/common.ml[195,6382+37]..[195,6382+40])
                        Pexp_ident "err" (src/common.ml[195,6382+37]..[195,6382+40])
                  ]
            ]
    ]
  structure_item (src/common.ml[197,6424+0]..[201,6547+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[197,6424+4]..[197,6424+27])
          Ppat_var "assert_no_attributes_in" (src/common.ml[197,6424+4]..[197,6424+27])
        expression (src/common.ml[198,6454+2]..[201,6547+5])
          Pexp_object
          class_structure
            pattern (src/common.ml[198,6454+8]..[198,6454+8]) ghost
              Ppat_any
            [
              class_field (src/common.ml[199,6463+4]..[199,6463+30])
                Pcf_inherit Fresh
                  class_expr (src/common.ml[199,6463+12]..[199,6463+30])
                    Pcl_constr "Ast_traverse0.iter" (src/common.ml[199,6463+12]..[199,6463+30])
                    []
                  None
              class_field (src/common.ml[200,6494+4]..[200,6494+52])
                Pcf_method Public
                  "attribute" (src/common.ml[200,6494+12]..[200,6494+21])
                  Concrete Override
                  expression (src/common.ml[200,6494+22]..[200,6494+52]) ghost
                    Pexp_poly
                    expression (src/common.ml[200,6494+22]..[200,6494+52]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/common.ml[200,6494+22]..[200,6494+23])
                        Ppat_var "a" (src/common.ml[200,6494+22]..[200,6494+23])
                      expression (src/common.ml[200,6494+26]..[200,6494+52])
                        Pexp_apply
                        expression (src/common.ml[200,6494+26]..[200,6494+46])
                          Pexp_ident "assert_no_attributes" (src/common.ml[200,6494+26]..[200,6494+46])
                        [
                          <arg>
                          Nolabel
                            expression (src/common.ml[200,6494+47]..[200,6494+52])
                              Pexp_construct "::" (src/common.ml[200,6494+49]..[200,6494+52]) ghost
                              Some
                                expression (src/common.ml[200,6494+49]..[200,6494+52]) ghost
                                  Pexp_tuple
                                  [
                                    expression (src/common.ml[200,6494+49]..[200,6494+50])
                                      Pexp_ident "a" (src/common.ml[200,6494+49]..[200,6494+50])
                                    expression (src/common.ml[200,6494+51]..[200,6494+52]) ghost
                                      Pexp_construct "[]" (src/common.ml[200,6494+51]..[200,6494+52]) ghost
                                      None
                                  ]
                        ]
                    None
            ]
    ]
  structure_item (src/common.ml[203,6554+0]..[208,6725+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[203,6554+4]..[203,6554+24])
          Ppat_var "attribute_of_warning" (src/common.ml[203,6554+4]..[203,6554+24])
        expression (src/common.ml[203,6554+25]..[208,6725+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/common.ml[203,6554+25]..[203,6554+28])
            Ppat_var "loc" (src/common.ml[203,6554+25]..[203,6554+28])
          expression (src/common.ml[203,6554+29]..[208,6725+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/common.ml[203,6554+29]..[203,6554+30])
              Ppat_var "s" (src/common.ml[203,6554+29]..[203,6554+30])
            expression (src/common.ml[204,6587+2]..[208,6725+3])
              Pexp_record
              [
                "attr_name" (src/common.ml[205,6591+4]..[205,6591+13])
                  expression (src/common.ml[205,6591+16]..[205,6591+48])
                    Pexp_record
                    [
                      "loc" (src/common.ml[205,6591+18]..[205,6591+21])
                        expression (src/common.ml[205,6591+18]..[205,6591+21]) ghost
                          Pexp_ident "loc" (src/common.ml[205,6591+18]..[205,6591+21]) ghost
                      "txt" (src/common.ml[205,6591+23]..[205,6591+26])
                        expression (src/common.ml[205,6591+29]..[205,6591+46])
                          Pexp_constant PConst_string("ocaml.ppwarning",(src/common.ml[205,6591+30]..[205,6591+45]),None)
                    ]
                    None
                "attr_payload" (src/common.ml[206,6641+4]..[206,6641+16])
                  expression (src/common.ml[206,6641+19]..[206,6641+62])
                    Pexp_construct "PStr" (src/common.ml[206,6641+19]..[206,6641+23])
                    Some
                      expression (src/common.ml[206,6641+24]..[206,6641+62])
                        Pexp_construct "::" (src/common.ml[206,6641+26]..[206,6641+62]) ghost
                        Some
                          expression (src/common.ml[206,6641+26]..[206,6641+62]) ghost
                            Pexp_tuple
                            [
                              expression (src/common.ml[206,6641+26]..[206,6641+60])
                                Pexp_apply
                                expression (src/common.ml[206,6641+26]..[206,6641+35])
                                  Pexp_ident "pstr_eval" (src/common.ml[206,6641+26]..[206,6641+35])
                                [
                                  <arg>
                                  Labelled "loc"
                                    expression (src/common.ml[206,6641+37]..[206,6641+40])
                                      Pexp_ident "loc" (src/common.ml[206,6641+37]..[206,6641+40])
                                  <arg>
                                  Nolabel
                                    expression (src/common.ml[206,6641+41]..[206,6641+57])
                                      Pexp_apply
                                      expression (src/common.ml[206,6641+42]..[206,6641+49])
                                        Pexp_ident "estring" (src/common.ml[206,6641+42]..[206,6641+49])
                                      [
                                        <arg>
                                        Labelled "loc"
                                          expression (src/common.ml[206,6641+51]..[206,6641+54])
                                            Pexp_ident "loc" (src/common.ml[206,6641+51]..[206,6641+54])
                                        <arg>
                                        Nolabel
                                          expression (src/common.ml[206,6641+55]..[206,6641+56])
                                            Pexp_ident "s" (src/common.ml[206,6641+55]..[206,6641+56])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (src/common.ml[206,6641+58]..[206,6641+60])
                                      Pexp_construct "[]" (src/common.ml[206,6641+58]..[206,6641+60])
                                      None
                                ]
                              expression (src/common.ml[206,6641+61]..[206,6641+62]) ghost
                                Pexp_construct "[]" (src/common.ml[206,6641+61]..[206,6641+62]) ghost
                                None
                            ]
                "attr_loc" (src/common.ml[207,6705+4]..[207,6705+12])
                  expression (src/common.ml[207,6705+15]..[207,6705+18])
                    Pexp_ident "loc" (src/common.ml[207,6705+15]..[207,6705+18])
              ]
              None
    ]
  structure_item (src/common.ml[210,6730+0]..[226,7397+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[210,6730+4]..[210,6730+26])
          Ppat_var "is_polymorphic_variant" (src/common.ml[210,6730+4]..[210,6730+26])
        expression (src/common.ml[211,6759+2]..[226,7397+32])
          Pexp_let Rec
          [
            <def>
              pattern (src/common.ml[211,6759+10]..[211,6759+15])
                Ppat_var "check" (src/common.ml[211,6759+10]..[211,6759+15])
              expression (src/common.ml[211,6759+18]..[215,6948+22])
                Pexp_function
                [
                  <case>
                    pattern (src/common.ml[212,6786+6]..[212,6786+39])
                      Ppat_record Open
                      [
                        "ptyp_desc" (src/common.ml[212,6786+8]..[212,6786+17])
                          pattern (src/common.ml[212,6786+20]..[212,6786+34])
                            Ppat_construct "Ptyp_variant" (src/common.ml[212,6786+20]..[212,6786+32])
                            Some
                              pattern (src/common.ml[212,6786+33]..[212,6786+34])
                                Ppat_any
                      ]
                    expression (src/common.ml[212,6786+43]..[212,6786+54])
                      Pexp_variant "Definitely"
                      None
                  <case>
                    pattern (src/common.ml[213,6841+6]..[213,6841+44])
                      Ppat_record Open
                      [
                        "ptyp_desc" (src/common.ml[213,6841+8]..[213,6841+17])
                          pattern (src/common.ml[213,6841+20]..[213,6841+39])
                            Ppat_construct "Ptyp_alias" (src/common.ml[213,6841+20]..[213,6841+30])
                            Some
                              pattern (src/common.ml[213,6841+31]..[213,6841+39])
                                Ppat_tuple
                                [
                                  pattern (src/common.ml[213,6841+32]..[213,6841+35])
                                    Ppat_var "typ" (src/common.ml[213,6841+32]..[213,6841+35])
                                  pattern (src/common.ml[213,6841+37]..[213,6841+38])
                                    Ppat_any
                                ]
                      ]
                    expression (src/common.ml[213,6841+48]..[213,6841+57])
                      Pexp_apply
                      expression (src/common.ml[213,6841+48]..[213,6841+53])
                        Pexp_ident "check" (src/common.ml[213,6841+48]..[213,6841+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/common.ml[213,6841+54]..[213,6841+57])
                            Pexp_ident "typ" (src/common.ml[213,6841+54]..[213,6841+57])
                      ]
                  <case>
                    pattern (src/common.ml[214,6899+6]..[214,6899+38])
                      Ppat_record Open
                      [
                        "ptyp_desc" (src/common.ml[214,6899+8]..[214,6899+17])
                          pattern (src/common.ml[214,6899+20]..[214,6899+33])
                            Ppat_construct "Ptyp_constr" (src/common.ml[214,6899+20]..[214,6899+31])
                            Some
                              pattern (src/common.ml[214,6899+32]..[214,6899+33])
                                Ppat_any
                      ]
                    expression (src/common.ml[214,6899+42]..[214,6899+48])
                      Pexp_variant "Maybe"
                      None
                  <case>
                    pattern (src/common.ml[215,6948+6]..[215,6948+7])
                      Ppat_any
                    expression (src/common.ml[215,6948+11]..[215,6948+22])
                      Pexp_variant "Surely_not"
                      None
                ]
          ]
          expression (src/common.ml[220,7165+2]..[226,7397+32])
            Pexp_fun
            Nolabel
            None
            pattern (src/common.ml[220,7165+6]..[220,7165+8])
              Ppat_var "td" (src/common.ml[220,7165+6]..[220,7165+8])
            expression (src/common.ml[220,7165+9]..[226,7397+32]) ghost
              Pexp_fun
              Labelled "sig_"
              None
              pattern (src/common.ml[220,7165+10]..[220,7165+14])
                Ppat_var "sig_" (src/common.ml[220,7165+10]..[220,7165+14])
              expression (src/common.ml[221,7183+4]..[226,7397+32])
                Pexp_match
                expression (src/common.ml[221,7183+10]..[221,7183+23])
                  Pexp_field
                  expression (src/common.ml[221,7183+10]..[221,7183+12])
                    Pexp_ident "td" (src/common.ml[221,7183+10]..[221,7183+12])
                  "ptype_kind" (src/common.ml[221,7183+13]..[221,7183+23])
                [
                  <case>
                    pattern (src/common.ml[222,7212+6]..[222,7212+51])
                      Ppat_or
                      pattern (src/common.ml[222,7212+6]..[222,7212+38])
                        Ppat_or
                        pattern (src/common.ml[222,7212+6]..[222,7212+21])
                          Ppat_construct "Ptype_variant" (src/common.ml[222,7212+6]..[222,7212+19])
                          Some
                            pattern (src/common.ml[222,7212+20]..[222,7212+21])
                              Ppat_any
                        pattern (src/common.ml[222,7212+24]..[222,7212+38])
                          Ppat_construct "Ptype_record" (src/common.ml[222,7212+24]..[222,7212+36])
                          Some
                            pattern (src/common.ml[222,7212+37]..[222,7212+38])
                              Ppat_any
                      pattern (src/common.ml[222,7212+41]..[222,7212+51])
                        Ppat_construct "Ptype_open" (src/common.ml[222,7212+41]..[222,7212+51])
                        None
                    expression (src/common.ml[222,7212+55]..[222,7212+66])
                      Pexp_variant "Surely_not"
                      None
                  <case>
                    pattern (src/common.ml[223,7279+6]..[223,7279+20])
                      Ppat_construct "Ptype_abstract" (src/common.ml[223,7279+6]..[223,7279+20])
                      None
                    expression (src/common.ml[223,7279+24]..[226,7397+32])
                      Pexp_match
                      expression (src/common.ml[224,7305+14]..[224,7305+31])
                        Pexp_field
                        expression (src/common.ml[224,7305+14]..[224,7305+16])
                          Pexp_ident "td" (src/common.ml[224,7305+14]..[224,7305+16])
                        "ptype_manifest" (src/common.ml[224,7305+17]..[224,7305+31])
                      [
                        <case>
                          pattern (src/common.ml[225,7342+10]..[225,7342+14])
                            Ppat_construct "None" (src/common.ml[225,7342+10]..[225,7342+14])
                            None
                          expression (src/common.ml[225,7342+18]..[225,7342+54])
                            Pexp_ifthenelse
                            expression (src/common.ml[225,7342+21]..[225,7342+25])
                              Pexp_ident "sig_" (src/common.ml[225,7342+21]..[225,7342+25])
                            expression (src/common.ml[225,7342+31]..[225,7342+37])
                              Pexp_variant "Maybe"
                              None
                            Some
                              expression (src/common.ml[225,7342+43]..[225,7342+54])
                                Pexp_variant "Surely_not"
                                None
                        <case>
                          pattern (src/common.ml[226,7397+10]..[226,7397+18])
                            Ppat_construct "Some" (src/common.ml[226,7397+10]..[226,7397+14])
                            Some
                              pattern (src/common.ml[226,7397+15]..[226,7397+18])
                                Ppat_var "typ" (src/common.ml[226,7397+15]..[226,7397+18])
                          expression (src/common.ml[226,7397+22]..[226,7397+31])
                            Pexp_apply
                            expression (src/common.ml[226,7397+22]..[226,7397+27])
                              Pexp_ident "check" (src/common.ml[226,7397+22]..[226,7397+27])
                            [
                              <arg>
                              Nolabel
                                expression (src/common.ml[226,7397+28]..[226,7397+31])
                                  Pexp_ident "typ" (src/common.ml[226,7397+28]..[226,7397+31])
                            ]
                      ]
                ]
    ]
  structure_item (src/common.ml[228,7431+0]..[255,8494+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[228,7431+4]..[228,7431+16])
          Ppat_var "mk_named_sig" (src/common.ml[228,7431+4]..[228,7431+16])
        expression (src/common.ml[228,7431+17]..[255,8494+13]) ghost
          Pexp_fun
          Labelled "loc"
          None
          pattern (src/common.ml[228,7431+18]..[228,7431+21])
            Ppat_var "loc" (src/common.ml[228,7431+18]..[228,7431+21])
          expression (src/common.ml[228,7431+22]..[255,8494+13]) ghost
            Pexp_fun
            Labelled "sg_name"
            None
            pattern (src/common.ml[228,7431+23]..[228,7431+30])
              Ppat_var "sg_name" (src/common.ml[228,7431+23]..[228,7431+30])
            expression (src/common.ml[228,7431+31]..[255,8494+13]) ghost
              Pexp_fun
              Labelled "handle_polymorphic_variant"
              None
              pattern (src/common.ml[228,7431+32]..[228,7431+58])
                Ppat_var "handle_polymorphic_variant" (src/common.ml[228,7431+32]..[228,7431+58])
              expression (src/common.ml[228,7431+61]..[255,8494+13])
                Pexp_function
                [
                  <case>
                    pattern (src/common.ml[229,7501+4]..[229,7501+10])
                      Ppat_construct "::" (src/common.ml[229,7501+6]..[229,7501+10]) ghost
                      Some
                        pattern (src/common.ml[229,7501+6]..[229,7501+10]) ghost
                          Ppat_tuple
                          [
                            pattern (src/common.ml[229,7501+6]..[229,7501+8])
                              Ppat_var "td" (src/common.ml[229,7501+6]..[229,7501+8])
                            pattern (src/common.ml[229,7501+9]..[229,7501+10]) ghost
                              Ppat_construct "[]" (src/common.ml[229,7501+9]..[229,7501+10]) ghost
                              None
                          ]
                    <when>
                      expression (src/common.ml[230,7512+9]..[230,7512+75])
                        Pexp_apply
                        expression (src/common.ml[230,7512+44]..[230,7512+46])
                          Pexp_ident "&&" (src/common.ml[230,7512+44]..[230,7512+46])
                        [
                          <arg>
                          Nolabel
                            expression (src/common.ml[230,7512+9]..[230,7512+43])
                              Pexp_apply
                              expression (src/common.ml[230,7512+9]..[230,7512+21])
                                Pexp_ident "String.equal" (src/common.ml[230,7512+9]..[230,7512+21])
                              [
                                <arg>
                                Nolabel
                                  expression (src/common.ml[230,7512+22]..[230,7512+39])
                                    Pexp_field
                                    expression (src/common.ml[230,7512+22]..[230,7512+35])
                                      Pexp_field
                                      expression (src/common.ml[230,7512+22]..[230,7512+24])
                                        Pexp_ident "td" (src/common.ml[230,7512+22]..[230,7512+24])
                                      "ptype_name" (src/common.ml[230,7512+25]..[230,7512+35])
                                    "txt" (src/common.ml[230,7512+36]..[230,7512+39])
                                <arg>
                                Nolabel
                                  expression (src/common.ml[230,7512+40]..[230,7512+43])
                                    Pexp_constant PConst_string("t",(src/common.ml[230,7512+41]..[230,7512+42]),None)
                              ]
                          <arg>
                          Nolabel
                            expression (src/common.ml[230,7512+47]..[230,7512+75])
                              Pexp_apply
                              expression (src/common.ml[230,7512+47]..[230,7512+60])
                                Pexp_ident "List.is_empty" (src/common.ml[230,7512+47]..[230,7512+60])
                              [
                                <arg>
                                Nolabel
                                  expression (src/common.ml[230,7512+61]..[230,7512+75])
                                    Pexp_field
                                    expression (src/common.ml[230,7512+61]..[230,7512+63])
                                      Pexp_ident "td" (src/common.ml[230,7512+61]..[230,7512+63])
                                    "ptype_cstrs" (src/common.ml[230,7512+64]..[230,7512+75])
                              ]
                        ]
                    expression (src/common.ml[231,7591+6]..[254,8417+76])
                      Pexp_ifthenelse
                      expression (src/common.ml[232,7600+8]..[233,7641+72])
                        Pexp_apply
                        expression (src/common.ml[233,7641+8]..[233,7641+10])
                          Pexp_ident "&&" (src/common.ml[233,7641+8]..[233,7641+10])
                        [
                          <arg>
                          Nolabel
                            expression (src/common.ml[232,7600+8]..[232,7600+40])
                              Pexp_apply
                              expression (src/common.ml[232,7600+9]..[232,7600+12])
                                Pexp_ident "not" (src/common.ml[232,7600+9]..[232,7600+12])
                              [
                                <arg>
                                Nolabel
                                  expression (src/common.ml[232,7600+13]..[232,7600+39])
                                    Pexp_ident "handle_polymorphic_variant" (src/common.ml[232,7600+13]..[232,7600+39])
                              ]
                          <arg>
                          Nolabel
                            expression (src/common.ml[233,7641+11]..[233,7641+72])
                              Pexp_apply
                              expression (src/common.ml[233,7641+11]..[233,7641+21])
                                Pexp_ident "Poly.=" (src/common.ml[233,7641+11]..[233,7641+21])
                              [
                                <arg>
                                Nolabel
                                  expression (src/common.ml[233,7641+22]..[233,7641+60])
                                    Pexp_apply
                                    expression (src/common.ml[233,7641+23]..[233,7641+45])
                                      Pexp_ident "is_polymorphic_variant" (src/common.ml[233,7641+23]..[233,7641+45])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/common.ml[233,7641+46]..[233,7641+48])
                                          Pexp_ident "td" (src/common.ml[233,7641+46]..[233,7641+48])
                                      <arg>
                                      Labelled "sig_"
                                        expression (src/common.ml[233,7641+55]..[233,7641+59])
                                          Pexp_construct "true" (src/common.ml[233,7641+55]..[233,7641+59])
                                          None
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/common.ml[233,7641+61]..[233,7641+72])
                                    Pexp_variant "Definitely"
                                    None
                              ]
                        ]
                      expression (src/common.ml[234,7714+11]..[234,7714+15])
                        Pexp_construct "None" (src/common.ml[234,7714+11]..[234,7714+15])
                        None
                      Some
                        expression (src/common.ml[236,7741+8]..[254,8417+76])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/common.ml[236,7741+12]..[236,7741+17])
                                Ppat_var "arity" (src/common.ml[236,7741+12]..[236,7741+17])
                              expression (src/common.ml[236,7741+20]..[236,7741+47])
                                Pexp_apply
                                expression (src/common.ml[236,7741+20]..[236,7741+31])
                                  Pexp_ident "List.length" (src/common.ml[236,7741+20]..[236,7741+31])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/common.ml[236,7741+32]..[236,7741+47])
                                      Pexp_field
                                      expression (src/common.ml[236,7741+32]..[236,7741+34])
                                        Pexp_ident "td" (src/common.ml[236,7741+32]..[236,7741+34])
                                      "ptype_params" (src/common.ml[236,7741+35]..[236,7741+47])
                                ]
                          ]
                          expression (src/common.ml[237,7792+8]..[254,8417+76])
                            Pexp_ifthenelse
                            expression (src/common.ml[237,7792+11]..[237,7792+21])
                              Pexp_apply
                              expression (src/common.ml[237,7792+17]..[237,7792+19])
                                Pexp_ident ">=" (src/common.ml[237,7792+17]..[237,7792+19])
                              [
                                <arg>
                                Nolabel
                                  expression (src/common.ml[237,7792+11]..[237,7792+16])
                                    Pexp_ident "arity" (src/common.ml[237,7792+11]..[237,7792+16])
                                <arg>
                                Nolabel
                                  expression (src/common.ml[237,7792+20]..[237,7792+21])
                                    Pexp_constant PConst_int (4,None)
                              ]
                            expression (src/common.ml[237,7792+27]..[237,7792+31])
                              Pexp_construct "None" (src/common.ml[237,7792+27]..[237,7792+31])
                              None
                            Some
                              expression (src/common.ml[239,7837+10]..[254,8417+76])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (src/common.ml[239,7837+14]..[239,7837+17])
                                      Ppat_var "mty" (src/common.ml[239,7837+14]..[239,7837+17])
                                    expression (src/common.ml[240,7857+12]..[240,7857+78])
                                      Pexp_ifthenelse
                                      expression (src/common.ml[240,7857+15]..[240,7857+24])
                                        Pexp_apply
                                        expression (src/common.ml[240,7857+21]..[240,7857+22])
                                          Pexp_ident "=" (src/common.ml[240,7857+21]..[240,7857+22])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/common.ml[240,7857+15]..[240,7857+20])
                                              Pexp_ident "arity" (src/common.ml[240,7857+15]..[240,7857+20])
                                          <arg>
                                          Nolabel
                                            expression (src/common.ml[240,7857+23]..[240,7857+24])
                                              Pexp_constant PConst_int (0,None)
                                        ]
                                      expression (src/common.ml[240,7857+30]..[240,7857+37])
                                        Pexp_ident "sg_name" (src/common.ml[240,7857+30]..[240,7857+37])
                                      Some
                                        expression (src/common.ml[240,7857+43]..[240,7857+78])
                                          Pexp_apply
                                          expression (src/common.ml[240,7857+43]..[240,7857+57])
                                            Pexp_ident "Printf.sprintf" (src/common.ml[240,7857+43]..[240,7857+57])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/common.ml[240,7857+58]..[240,7857+64])
                                                Pexp_constant PConst_string("%s%d",(src/common.ml[240,7857+59]..[240,7857+63]),None)
                                            <arg>
                                            Nolabel
                                              expression (src/common.ml[240,7857+65]..[240,7857+72])
                                                Pexp_ident "sg_name" (src/common.ml[240,7857+65]..[240,7857+72])
                                            <arg>
                                            Nolabel
                                              expression (src/common.ml[240,7857+73]..[240,7857+78])
                                                Pexp_ident "arity" (src/common.ml[240,7857+73]..[240,7857+78])
                                          ]
                                ]
                                expression (src/common.ml[242,7949+10]..[254,8417+76])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/common.ml[242,7949+14]..[242,7949+16])
                                        Ppat_var "td" (src/common.ml[242,7949+14]..[242,7949+16])
                                      expression (src/common.ml[242,7949+19]..[242,7949+44])
                                        Pexp_apply
                                        expression (src/common.ml[242,7949+19]..[242,7949+41])
                                          Pexp_ident "name_type_params_in_td" (src/common.ml[242,7949+19]..[242,7949+41])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/common.ml[242,7949+42]..[242,7949+44])
                                              Pexp_ident "td" (src/common.ml[242,7949+42]..[242,7949+44])
                                        ]
                                  ]
                                  expression (src/common.ml[243,7997+10]..[254,8417+76])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/common.ml[243,7997+14]..[243,7997+23])
                                          Ppat_var "for_subst" (src/common.ml[243,7997+14]..[243,7997+23])
                                        expression (src/common.ml[244,8023+12]..[248,8210+53])
                                          Pexp_apply
                                          expression (src/common.ml[244,8023+12]..[244,8023+30])
                                            Pexp_ident "Ast_helper.Type.mk" (src/common.ml[244,8023+12]..[244,8023+30])
                                          [
                                            <arg>
                                            Labelled "loc"
                                              expression (src/common.ml[244,8023+32]..[244,8023+35])
                                                Pexp_ident "loc" (src/common.ml[244,8023+32]..[244,8023+35])
                                            <arg>
                                            Nolabel
                                              expression (src/common.ml[244,8023+36]..[244,8023+49])
                                                Pexp_field
                                                expression (src/common.ml[244,8023+36]..[244,8023+38])
                                                  Pexp_ident "td" (src/common.ml[244,8023+36]..[244,8023+38])
                                                "ptype_name" (src/common.ml[244,8023+39]..[244,8023+49])
                                            <arg>
                                            Labelled "params"
                                              expression (src/common.ml[244,8023+58]..[244,8023+73])
                                                Pexp_field
                                                expression (src/common.ml[244,8023+58]..[244,8023+60])
                                                  Pexp_ident "td" (src/common.ml[244,8023+58]..[244,8023+60])
                                                "ptype_params" (src/common.ml[244,8023+61]..[244,8023+73])
                                            <arg>
                                            Labelled "manifest"
                                              expression (src/common.ml[246,8122+16]..[248,8210+53])
                                                Pexp_apply
                                                expression (src/common.ml[246,8122+17]..[246,8122+28])
                                                  Pexp_ident "ptyp_constr" (src/common.ml[246,8122+17]..[246,8122+28])
                                                [
                                                  <arg>
                                                  Labelled "loc"
                                                    expression (src/common.ml[246,8122+30]..[246,8122+33])
                                                      Pexp_ident "loc" (src/common.ml[246,8122+30]..[246,8122+33])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/common.ml[247,8156+19]..[247,8156+53])
                                                      Pexp_apply
                                                      expression (src/common.ml[247,8156+20]..[247,8156+38])
                                                        Pexp_ident "Located.map_lident" (src/common.ml[247,8156+20]..[247,8156+38])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/common.ml[247,8156+39]..[247,8156+52])
                                                            Pexp_field
                                                            expression (src/common.ml[247,8156+39]..[247,8156+41])
                                                              Pexp_ident "td" (src/common.ml[247,8156+39]..[247,8156+41])
                                                            "ptype_name" (src/common.ml[247,8156+42]..[247,8156+52])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (src/common.ml[248,8210+19]..[248,8210+52])
                                                      Pexp_apply
                                                      expression (src/common.ml[248,8210+20]..[248,8210+28])
                                                        Pexp_ident "List.map" (src/common.ml[248,8210+20]..[248,8210+28])
                                                      [
                                                        <arg>
                                                        Labelled "f"
                                                          expression (src/common.ml[248,8210+32]..[248,8210+35])
                                                            Pexp_ident "fst" (src/common.ml[248,8210+32]..[248,8210+35])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/common.ml[248,8210+36]..[248,8210+51])
                                                            Pexp_field
                                                            expression (src/common.ml[248,8210+36]..[248,8210+38])
                                                              Pexp_ident "td" (src/common.ml[248,8210+36]..[248,8210+38])
                                                            "ptype_params" (src/common.ml[248,8210+39]..[248,8210+51])
                                                      ]
                                                ]
                                          ]
                                    ]
                                    expression (src/common.ml[250,8277+10]..[254,8417+76])
                                      Pexp_construct "Some" (src/common.ml[250,8277+10]..[250,8277+14])
                                      Some
                                        expression (src/common.ml[251,8292+12]..[254,8417+76])
                                          Pexp_apply
                                          expression (src/common.ml[251,8292+13]..[251,8292+26])
                                            Pexp_ident "include_infos" (src/common.ml[251,8292+13]..[251,8292+26])
                                          [
                                            <arg>
                                            Labelled "loc"
                                              expression (src/common.ml[251,8292+28]..[251,8292+31])
                                                Pexp_ident "loc" (src/common.ml[251,8292+28]..[251,8292+31])
                                            <arg>
                                            Nolabel
                                              expression (src/common.ml[252,8324+15]..[254,8417+75])
                                                Pexp_apply
                                                expression (src/common.ml[252,8324+16]..[252,8324+25])
                                                  Pexp_ident "pmty_with" (src/common.ml[252,8324+16]..[252,8324+25])
                                                [
                                                  <arg>
                                                  Labelled "loc"
                                                    expression (src/common.ml[252,8324+27]..[252,8324+30])
                                                      Pexp_ident "loc" (src/common.ml[252,8324+27]..[252,8324+30])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/common.ml[253,8355+18]..[253,8355+61])
                                                      Pexp_apply
                                                      expression (src/common.ml[253,8355+19]..[253,8355+29])
                                                        Pexp_ident "pmty_ident" (src/common.ml[253,8355+19]..[253,8355+29])
                                                      [
                                                        <arg>
                                                        Labelled "loc"
                                                          expression (src/common.ml[253,8355+31]..[253,8355+34])
                                                            Pexp_ident "loc" (src/common.ml[253,8355+31]..[253,8355+34])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/common.ml[253,8355+35]..[253,8355+60])
                                                            Pexp_apply
                                                            expression (src/common.ml[253,8355+36]..[253,8355+50])
                                                              Pexp_ident "Located.lident" (src/common.ml[253,8355+36]..[253,8355+50])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/common.ml[253,8355+51]..[253,8355+54])
                                                                  Pexp_ident "mty" (src/common.ml[253,8355+51]..[253,8355+54])
                                                              <arg>
                                                              Labelled "loc"
                                                                expression (src/common.ml[253,8355+56]..[253,8355+59])
                                                                  Pexp_ident "loc" (src/common.ml[253,8355+56]..[253,8355+59])
                                                            ]
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (src/common.ml[254,8417+18]..[254,8417+74])
                                                      Pexp_construct "::" (src/common.ml[254,8417+20]..[254,8417+74]) ghost
                                                      Some
                                                        expression (src/common.ml[254,8417+20]..[254,8417+74]) ghost
                                                          Pexp_tuple
                                                          [
                                                            expression (src/common.ml[254,8417+20]..[254,8417+72])
                                                              Pexp_construct "Pwith_typesubst" (src/common.ml[254,8417+20]..[254,8417+35])
                                                              Some
                                                                expression (src/common.ml[254,8417+36]..[254,8417+72])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (src/common.ml[254,8417+37]..[254,8417+60])
                                                                      Pexp_apply
                                                                      expression (src/common.ml[254,8417+37]..[254,8417+51])
Pexp_ident "Located.lident" (src/common.ml[254,8417+37]..[254,8417+51])
                                                                      [
<arg>
Labelled "loc"
  expression (src/common.ml[254,8417+53]..[254,8417+56])
    Pexp_ident "loc" (src/common.ml[254,8417+53]..[254,8417+56])
<arg>
Nolabel
  expression (src/common.ml[254,8417+57]..[254,8417+60])
    Pexp_constant PConst_string("t",(src/common.ml[254,8417+58]..[254,8417+59]),None)
                                                                      ]
                                                                    expression (src/common.ml[254,8417+62]..[254,8417+71])
                                                                      Pexp_ident "for_subst" (src/common.ml[254,8417+62]..[254,8417+71])
                                                                  ]
                                                            expression (src/common.ml[254,8417+73]..[254,8417+74]) ghost
                                                              Pexp_construct "[]" (src/common.ml[254,8417+73]..[254,8417+74]) ghost
                                                              None
                                                          ]
                                                ]
                                          ]
                  <case>
                    pattern (src/common.ml[255,8494+4]..[255,8494+5])
                      Ppat_any
                    expression (src/common.ml[255,8494+9]..[255,8494+13])
                      Pexp_construct "None" (src/common.ml[255,8494+9]..[255,8494+13])
                      None
                ]
    ]
  structure_item (src/common.ml[257,8509+0]..[274,8957+3])
    Pstr_module
    "With_errors" (src/common.ml[257,8509+7]..[257,8509+18])
      module_expr (src/common.ml[257,8509+21]..[274,8957+3])
        Pmod_structure
        [
          structure_item (src/common.ml[258,8537+2]..[258,8537+40])
            Pstr_type Rec
            [
              type_declaration "t" (src/common.ml[258,8537+10]..[258,8537+11]) (src/common.ml[258,8537+2]..[258,8537+40])
                ptype_params =
                  [
                    core_type (src/common.ml[258,8537+7]..[258,8537+9])
                      Ptyp_var a
                  ]
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/common.ml[258,8537+14]..[258,8537+40])
                      Ptyp_tuple
                      [
                        core_type (src/common.ml[258,8537+14]..[258,8537+16])
                          Ptyp_var a
                        core_type (src/common.ml[258,8537+19]..[258,8537+40])
                          Ptyp_constr "list" (src/common.ml[258,8537+36]..[258,8537+40])
                          [
                            core_type (src/common.ml[258,8537+19]..[258,8537+35])
                              Ptyp_constr "Location.Error.t" (src/common.ml[258,8537+19]..[258,8537+35])
                              []
                          ]
                      ]
            ]
          structure_item (src/common.ml[260,8579+2]..[260,8579+24])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/common.ml[260,8579+6]..[260,8579+12])
                  Ppat_var "return" (src/common.ml[260,8579+6]..[260,8579+12])
                expression (src/common.ml[260,8579+13]..[260,8579+24]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/common.ml[260,8579+13]..[260,8579+14])
                    Ppat_var "e" (src/common.ml[260,8579+13]..[260,8579+14])
                  expression (src/common.ml[260,8579+17]..[260,8579+24])
                    Pexp_tuple
                    [
                      expression (src/common.ml[260,8579+18]..[260,8579+19])
                        Pexp_ident "e" (src/common.ml[260,8579+18]..[260,8579+19])
                      expression (src/common.ml[260,8579+21]..[260,8579+23])
                        Pexp_construct "[]" (src/common.ml[260,8579+21]..[260,8579+23])
                        None
                    ]
            ]
          structure_item (src/common.ml[262,8605+2]..[264,8664+26])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/common.ml[262,8605+6]..[262,8605+13])
                  Ppat_var ">>=" (src/common.ml[262,8605+6]..[262,8605+13])
                expression (src/common.ml[262,8605+14]..[264,8664+26]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/common.ml[262,8605+14]..[262,8605+26])
                    Ppat_tuple
                    [
                      pattern (src/common.ml[262,8605+15]..[262,8605+16])
                        Ppat_var "x" (src/common.ml[262,8605+15]..[262,8605+16])
                      pattern (src/common.ml[262,8605+18]..[262,8605+25])
                        Ppat_var "errors1" (src/common.ml[262,8605+18]..[262,8605+25])
                    ]
                  expression (src/common.ml[262,8605+27]..[264,8664+26]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/common.ml[262,8605+27]..[262,8605+28])
                      Ppat_var "f" (src/common.ml[262,8605+27]..[262,8605+28])
                    expression (src/common.ml[263,8636+4]..[264,8664+26])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/common.ml[263,8636+8]..[263,8636+18])
                            Ppat_tuple
                            [
                              pattern (src/common.ml[263,8636+8]..[263,8636+9])
                                Ppat_var "y" (src/common.ml[263,8636+8]..[263,8636+9])
                              pattern (src/common.ml[263,8636+11]..[263,8636+18])
                                Ppat_var "errors2" (src/common.ml[263,8636+11]..[263,8636+18])
                            ]
                          expression (src/common.ml[263,8636+21]..[263,8636+24])
                            Pexp_apply
                            expression (src/common.ml[263,8636+21]..[263,8636+22])
                              Pexp_ident "f" (src/common.ml[263,8636+21]..[263,8636+22])
                            [
                              <arg>
                              Nolabel
                                expression (src/common.ml[263,8636+23]..[263,8636+24])
                                  Pexp_ident "x" (src/common.ml[263,8636+23]..[263,8636+24])
                            ]
                      ]
                      expression (src/common.ml[264,8664+4]..[264,8664+26])
                        Pexp_tuple
                        [
                          expression (src/common.ml[264,8664+5]..[264,8664+6])
                            Pexp_ident "y" (src/common.ml[264,8664+5]..[264,8664+6])
                          expression (src/common.ml[264,8664+8]..[264,8664+25])
                            Pexp_apply
                            expression (src/common.ml[264,8664+16]..[264,8664+17])
                              Pexp_ident "@" (src/common.ml[264,8664+16]..[264,8664+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/common.ml[264,8664+8]..[264,8664+15])
                                  Pexp_ident "errors1" (src/common.ml[264,8664+8]..[264,8664+15])
                              <arg>
                              Nolabel
                                expression (src/common.ml[264,8664+18]..[264,8664+25])
                                  Pexp_ident "errors2" (src/common.ml[264,8664+18]..[264,8664+25])
                            ]
                        ]
            ]
          structure_item (src/common.ml[266,8692+2]..[266,8692+43])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/common.ml[266,8692+6]..[266,8692+13])
                  Ppat_var ">>|" (src/common.ml[266,8692+6]..[266,8692+13])
                expression (src/common.ml[266,8692+14]..[266,8692+43]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/common.ml[266,8692+14]..[266,8692+25])
                    Ppat_tuple
                    [
                      pattern (src/common.ml[266,8692+15]..[266,8692+16])
                        Ppat_var "x" (src/common.ml[266,8692+15]..[266,8692+16])
                      pattern (src/common.ml[266,8692+18]..[266,8692+24])
                        Ppat_var "errors" (src/common.ml[266,8692+18]..[266,8692+24])
                    ]
                  expression (src/common.ml[266,8692+26]..[266,8692+43]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/common.ml[266,8692+26]..[266,8692+27])
                      Ppat_var "f" (src/common.ml[266,8692+26]..[266,8692+27])
                    expression (src/common.ml[266,8692+30]..[266,8692+43])
                      Pexp_tuple
                      [
                        expression (src/common.ml[266,8692+31]..[266,8692+34])
                          Pexp_apply
                          expression (src/common.ml[266,8692+31]..[266,8692+32])
                            Pexp_ident "f" (src/common.ml[266,8692+31]..[266,8692+32])
                          [
                            <arg>
                            Nolabel
                              expression (src/common.ml[266,8692+33]..[266,8692+34])
                                Pexp_ident "x" (src/common.ml[266,8692+33]..[266,8692+34])
                          ]
                        expression (src/common.ml[266,8692+36]..[266,8692+42])
                          Pexp_ident "errors" (src/common.ml[266,8692+36]..[266,8692+42])
                      ]
            ]
          structure_item (src/common.ml[268,8737+2]..[271,8815+60])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/common.ml[268,8737+6]..[268,8737+15])
                  Ppat_var "of_result" (src/common.ml[268,8737+6]..[268,8737+15])
                expression (src/common.ml[268,8737+16]..[271,8815+60]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/common.ml[268,8737+16]..[268,8737+22])
                    Ppat_var "result" (src/common.ml[268,8737+16]..[268,8737+22])
                  expression (src/common.ml[268,8737+23]..[271,8815+60]) ghost
                    Pexp_fun
                    Labelled "default"
                    None
                    pattern (src/common.ml[268,8737+24]..[268,8737+31])
                      Ppat_var "default" (src/common.ml[268,8737+24]..[268,8737+31])
                    expression (src/common.ml[269,8771+4]..[271,8815+60])
                      Pexp_match
                      expression (src/common.ml[269,8771+10]..[269,8771+16])
                        Pexp_ident "result" (src/common.ml[269,8771+10]..[269,8771+16])
                      [
                        <case>
                          pattern (src/common.ml[270,8793+6]..[270,8793+10])
                            Ppat_construct "Ok" (src/common.ml[270,8793+6]..[270,8793+8])
                            Some
                              pattern (src/common.ml[270,8793+9]..[270,8793+10])
                                Ppat_var "x" (src/common.ml[270,8793+9]..[270,8793+10])
                          expression (src/common.ml[270,8793+14]..[270,8793+21])
                            Pexp_tuple
                            [
                              expression (src/common.ml[270,8793+15]..[270,8793+16])
                                Pexp_ident "x" (src/common.ml[270,8793+15]..[270,8793+16])
                              expression (src/common.ml[270,8793+18]..[270,8793+20])
                                Pexp_construct "[]" (src/common.ml[270,8793+18]..[270,8793+20])
                                None
                            ]
                        <case>
                          pattern (src/common.ml[271,8815+6]..[271,8815+18])
                            Ppat_construct "Error" (src/common.ml[271,8815+6]..[271,8815+11])
                            Some
                              pattern (src/common.ml[271,8815+12]..[271,8815+18])
                                Ppat_var "errors" (src/common.ml[271,8815+12]..[271,8815+18])
                          expression (src/common.ml[271,8815+22]..[271,8815+60])
                            Pexp_tuple
                            [
                              expression (src/common.ml[271,8815+23]..[271,8815+30])
                                Pexp_ident "default" (src/common.ml[271,8815+23]..[271,8815+30])
                              expression (src/common.ml[271,8815+32]..[271,8815+59])
                                Pexp_apply
                                expression (src/common.ml[271,8815+32]..[271,8815+52])
                                  Pexp_ident "NonEmptyList.to_list" (src/common.ml[271,8815+32]..[271,8815+52])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/common.ml[271,8815+53]..[271,8815+59])
                                      Pexp_ident "errors" (src/common.ml[271,8815+53]..[271,8815+59])
                                ]
                            ]
                      ]
            ]
          structure_item (src/common.ml[273,8877+2]..[273,8877+79])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/common.ml[273,8877+6]..[273,8877+20])
                  Ppat_var "combine_errors" (src/common.ml[273,8877+6]..[273,8877+20])
                expression (src/common.ml[273,8877+21]..[273,8877+79]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/common.ml[273,8877+21]..[273,8877+25])
                    Ppat_var "list" (src/common.ml[273,8877+21]..[273,8877+25])
                  expression (src/common.ml[273,8877+28]..[273,8877+79])
                    Pexp_tuple
                    [
                      expression (src/common.ml[273,8877+29]..[273,8877+49])
                        Pexp_apply
                        expression (src/common.ml[273,8877+29]..[273,8877+37])
                          Pexp_ident "List.map" (src/common.ml[273,8877+29]..[273,8877+37])
                        [
                          <arg>
                          Nolabel
                            expression (src/common.ml[273,8877+38]..[273,8877+42])
                              Pexp_ident "list" (src/common.ml[273,8877+38]..[273,8877+42])
                          <arg>
                          Labelled "f"
                            expression (src/common.ml[273,8877+46]..[273,8877+49])
                              Pexp_ident "fst" (src/common.ml[273,8877+46]..[273,8877+49])
                        ]
                      expression (src/common.ml[273,8877+51]..[273,8877+78])
                        Pexp_apply
                        expression (src/common.ml[273,8877+51]..[273,8877+66])
                          Pexp_ident "List.concat_map" (src/common.ml[273,8877+51]..[273,8877+66])
                        [
                          <arg>
                          Nolabel
                            expression (src/common.ml[273,8877+67]..[273,8877+71])
                              Pexp_ident "list" (src/common.ml[273,8877+67]..[273,8877+71])
                          <arg>
                          Labelled "f"
                            expression (src/common.ml[273,8877+75]..[273,8877+78])
                              Pexp_ident "snd" (src/common.ml[273,8877+75]..[273,8877+78])
                        ]
                    ]
            ]
        ]
]

open! Import
open Ast_builder.Default
module Buffer = Stdlib.Buffer
module Format = Stdlib.Format
let lident x = Longident.Lident x
let core_type_of_type_declaration td =
  let loc = (td.ptype_name).loc in
  ptyp_constr ~loc (Located.map lident td.ptype_name)
    (List.map td.ptype_params ~f:fst)
let strip_gen_symbol_suffix =
  let chop n ~or_more  string pos f =
    let target = (!pos) - n in
    while
      ((!pos) > 0) &&
        ((or_more || ((!pos) > target)) && (f (string.[(!pos) - 1])))
      do pos := ((!pos) - 1) done;
    (!pos) <= target in
  fun string ->
    let pos = ref (String.length string) in
    if
      (chop 1 ~or_more:false string pos (Char.equal '_')) &&
        ((chop 3 ~or_more:true string pos
            (function | '0'..'9' -> true | _ -> false))
           && (chop 2 ~or_more:false string pos (Char.equal '_')))
    then String.prefix string (!pos)
    else string
let gen_symbol =
  let cnt = ref 0 in
  fun ?(prefix= "_x") ->
    fun () ->
      cnt := ((!cnt) + 1);
      (let prefix = strip_gen_symbol_suffix prefix in
       Printf.sprintf "%s__%03i_" prefix (!cnt))
let name_type_params_in_td_res (td : type_declaration) =
  (let open Result in
     let prefix_string i =
       String.make ((i / 26) + 1) (Char.chr ((Char.code 'a') + (i mod 26))) in
     let name_param i (tp, variance) =
       (match tp.ptyp_desc with
        | Ptyp_any -> Ok (Ptyp_var (gen_symbol ~prefix:(prefix_string i) ()))
        | Ptyp_var _ as v -> Ok v
        | _ ->
            Error
              (Location.Error.createf ~loc:(tp.ptyp_loc)
                 "not a type parameter"))
         >>| (fun ptyp_desc -> ({ tp with ptyp_desc }, variance)) in
     let (ptype_params, errors) =
       (td.ptype_params |> (List.mapi ~f:name_param)) |>
         (List.partition_map
            (function | Ok o -> Either.Left o | Error e -> Either.Right e)) in
     match errors with
     | [] -> Ok { td with ptype_params }
     | t::q -> Error (t, q) : (type_declaration, _) result)
let name_type_params_in_td (td : type_declaration) =
  (match name_type_params_in_td_res td with
   | Ok res -> res
   | Error (err, _) -> Location.Error.raise err : type_declaration)
let combinator_type_of_type_declaration td ~f  =
  let td = name_type_params_in_td td in
  let result_type =
    f ~loc:((td.ptype_name).loc) (core_type_of_type_declaration td) in
  List.fold_right td.ptype_params ~init:result_type
    ~f:(fun (tp, _variance) ->
          fun acc ->
            let loc = tp.ptyp_loc in ptyp_arrow ~loc Nolabel (f ~loc tp) acc)
let string_of_core_type ct =
  let buf = Buffer.create 128 in
  let ppf = Format.formatter_of_buffer buf in
  Pprintast.core_type ppf ct;
  Format.pp_print_flush ppf ();
  Buffer.contents buf
let get_type_param_name_res (ty, _) =
  let loc = ty.ptyp_loc in
  match ty.ptyp_desc with
  | Ptyp_var name -> Ok (Located.mk ~loc name)
  | _ -> Error ((Location.Error.createf ~loc "not a type parameter"), [])
let get_type_param_name t =
  match get_type_param_name_res t with
  | Ok e -> e
  | Error (err, _) -> Location.Error.raise err
exception Type_is_recursive 
class type_is_recursive rec_flag  tds =
  object (self)
    inherit  Ast_traverse0.iter as super
    val type_names =
      (List.map tds ~f:(fun td -> (td.ptype_name).txt) : string list)
    method return_true () = raise_notrace Type_is_recursive
    method! core_type ctype =
      match ctype.ptyp_desc with
      | Ptyp_arrow _ -> ()
      | Ptyp_constr ({ txt = Longident.Lident id;_}, _) when
          List.mem ~set:type_names id -> self#return_true ()
      | _ -> super#core_type ctype
    method! constructor_declaration cd =
      match cd.pcd_args with
      | Pcstr_tuple args -> List.iter args ~f:(self#core_type)
      | Pcstr_record fields -> List.iter fields ~f:(self#label_declaration)
    method! attributes _ = ()
    method go () =
      match rec_flag with
      | Nonrecursive -> Nonrecursive
      | Recursive ->
          (match List.iter tds ~f:(self#type_declaration) with
           | exception Type_is_recursive -> Recursive
           | () -> Nonrecursive)
  end
let really_recursive rec_flag tds =
  ((new type_is_recursive) rec_flag tds)#go ()
let rec last x l = match l with | [] -> x | x::l -> last x l
let loc_of_name_and_payload name payload =
  match payload with
  | PStr [] -> name.loc
  | PStr (x::l) ->
      { (x.pstr_loc) with loc_end = (((last x l).pstr_loc).loc_end) }
  | PSig [] -> name.loc
  | PSig (x::l) ->
      { (x.psig_loc) with loc_end = (((last x l).psig_loc).loc_end) }
  | PTyp t -> t.ptyp_loc
  | PPat (x, None) -> x.ppat_loc
  | PPat (x, Some e) ->
      { (x.ppat_loc) with loc_end = ((e.pexp_loc).loc_end) }
let loc_of_payload { attr_name; attr_payload; attr_loc = _ } =
  loc_of_name_and_payload attr_name attr_payload
let loc_of_attribute { attr_name; attr_payload; attr_loc = _ } =
  if Poly.(=) attr_name.loc Location.none
  then loc_of_name_and_payload attr_name attr_payload
  else
    {
      (attr_name.loc) with
      loc_end = ((loc_of_name_and_payload attr_name attr_payload).loc_end)
    }
let loc_of_extension (name, payload) =
  if Poly.(=) name.loc Location.none
  then loc_of_name_and_payload name payload
  else
    {
      (name.loc) with
      loc_end = ((loc_of_name_and_payload name payload).loc_end)
    }
let curry_applications expr =
  let open Ast_builder_generated.M in
    match expr.pexp_desc with
    | Pexp_apply (f, orig_forward_args) ->
        let loc = expr.pexp_loc in
        let rec loop =
          function
          | [] -> f
          | last_arg::rev_front_args ->
              pexp_apply ~loc (loop rev_front_args) [last_arg] in
        loop (List.rev orig_forward_args)
    | _ -> expr
let attributes_errors =
  List.filter_map
    ~f:(function
        | { attr_name = name; attr_loc = _; attr_payload = _ } when
            Name.ignore_checks name.Location.txt -> None
        | attr ->
            let loc = loc_of_attribute attr in
            Some (Location.Error.createf ~loc "Attributes not allowed here"))
let collect_attributes_errors =
  object
    inherit  [Location.Error.t list] Ast_traverse0.fold
    method! attribute a acc = (attributes_errors [a]) @ acc
  end
let assert_no_attributes l =
  match attributes_errors l with
  | [] -> ()
  | err::_ -> Location.Error.raise err
let assert_no_attributes_in =
  object
    inherit  Ast_traverse0.iter
    method! attribute a = assert_no_attributes [a]
  end
let attribute_of_warning loc s =
  {
    attr_name = { loc; txt = "ocaml.ppwarning" };
    attr_payload = (PStr [pstr_eval ~loc (estring ~loc s) []]);
    attr_loc = loc
  }
let is_polymorphic_variant =
  let rec check =
    function
    | { ptyp_desc = Ptyp_variant _;_} -> `Definitely
    | { ptyp_desc = Ptyp_alias (typ, _);_} -> check typ
    | { ptyp_desc = Ptyp_constr _;_} -> `Maybe
    | _ -> `Surely_not in
  fun td ->
    fun ~sig_ ->
      match td.ptype_kind with
      | Ptype_variant _ | Ptype_record _ | Ptype_open -> `Surely_not
      | Ptype_abstract ->
          (match td.ptype_manifest with
           | None -> if sig_ then `Maybe else `Surely_not
           | Some typ -> check typ)
let mk_named_sig ~loc  ~sg_name  ~handle_polymorphic_variant  =
  function
  | td::[] when
      (String.equal (td.ptype_name).txt "t") &&
        (List.is_empty td.ptype_cstrs)
      ->
      if
        (not handle_polymorphic_variant) &&
          (Poly.(=) (is_polymorphic_variant td ~sig_:true) `Definitely)
      then None
      else
        (let arity = List.length td.ptype_params in
         if arity >= 4
         then None
         else
           (let mty =
              if arity = 0
              then sg_name
              else Printf.sprintf "%s%d" sg_name arity in
            let td = name_type_params_in_td td in
            let for_subst =
              Ast_helper.Type.mk ~loc td.ptype_name ~params:(td.ptype_params)
                ~manifest:(ptyp_constr ~loc
                             (Located.map_lident td.ptype_name)
                             (List.map ~f:fst td.ptype_params)) in
            Some
              (include_infos ~loc
                 (pmty_with ~loc (pmty_ident ~loc (Located.lident mty ~loc))
                    [Pwith_typesubst ((Located.lident ~loc "t"), for_subst)]))))
  | _ -> None
module With_errors =
  struct
    type 'a t = ('a * Location.Error.t list)
    let return e = (e, [])
    let (>>=) (x, errors1) f =
      let (y, errors2) = f x in (y, (errors1 @ errors2))
    let (>>|) (x, errors) f = ((f x), errors)
    let of_result result ~default  =
      match result with
      | Ok x -> (x, [])
      | Error errors -> (default, (NonEmptyList.to_list errors))
    let combine_errors list =
      ((List.map list ~f:fst), (List.concat_map list ~f:snd))
  end
[
  structure_item (src/common.ml[1,0+0]..src/common.ml[1,0+12])
    Tstr_open Override
    module_expr (src/common.ml[1,0+6]..src/common.ml[1,0+12])
      Tmod_ident "Ppxlib__!.Import"
  structure_item (src/common.ml[2,13+0]..src/common.ml[2,13+24])
    Tstr_open Fresh
    module_expr (src/common.ml[2,13+5]..src/common.ml[2,13+24])
      Tmod_ident "Ppxlib__!.Ast_builder.Default"
  structure_item (src/common.ml[3,38+0]..src/common.ml[3,38+29])
    Tstr_module
    Buffer/2083
      module_expr (src/common.ml[3,38+16]..src/common.ml[3,38+29])
        Tmod_ident "Stdlib!.Buffer"
  structure_item (src/common.ml[4,68+0]..src/common.ml[4,68+29])
    Tstr_module
    Format/2084
      module_expr (src/common.ml[4,68+16]..src/common.ml[4,68+29])
        Tmod_ident "Stdlib!.Format"
  structure_item (src/common.ml[6,99+0]..src/common.ml[6,99+33])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[6,99+4]..src/common.ml[6,99+10])
          Tpat_var "lident/2085"
        expression (src/common.ml[6,99+11]..src/common.ml[6,99+33]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/common.ml[6,99+11]..src/common.ml[6,99+12])
                Tpat_var "x/2087"
              expression (src/common.ml[6,99+15]..src/common.ml[6,99+33])
                Texp_construct "Longident.Lident"
                [
                  expression (src/common.ml[6,99+32]..src/common.ml[6,99+33])
                    Texp_ident "x/2087"
                ]
          ]
    ]
  structure_item (src/common.ml[8,134+0]..src/common.ml[12,264+37])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[8,134+4]..src/common.ml[8,134+33])
          Tpat_var "core_type_of_type_declaration/2186"
        expression (src/common.ml[8,134+34]..src/common.ml[12,264+37]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/common.ml[8,134+34]..src/common.ml[8,134+36])
                Tpat_var "td/2188"
              expression (src/common.ml[9,173+2]..src/common.ml[12,264+37])
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/common.ml[9,173+6]..src/common.ml[9,173+9])
                      Tpat_var "loc/2189"
                    expression (src/common.ml[9,173+12]..src/common.ml[9,173+29])
                      Texp_field
                      expression (src/common.ml[9,173+12]..src/common.ml[9,173+25])
                        Texp_field
                        expression (src/common.ml[9,173+12]..src/common.ml[9,173+14])
                          Texp_ident "td/2188"
                        "ptype_name"
                      "loc"
                ]
                expression (src/common.ml[10,206+2]..src/common.ml[12,264+37])
                  Texp_apply
                  expression (src/common.ml[10,206+2]..src/common.ml[10,206+13])
                    Texp_ident "Ppxlib__!.Ast_builder.Default.ptyp_constr"
                  [
                    <arg>
                      Labelled "loc"
                      expression (src/common.ml[10,206+15]..src/common.ml[10,206+18])
                        Texp_ident "loc/2189"
                    <arg>
                      Nolabel
                      expression (src/common.ml[11,225+4]..src/common.ml[11,225+38])
                        Texp_apply
                        expression (src/common.ml[11,225+5]..src/common.ml[11,225+16])
                          Texp_ident "Ppxlib__!.Ast_builder.Default.Located.map"
                        [
                          <arg>
                            Nolabel
                            expression (src/common.ml[11,225+17]..src/common.ml[11,225+23])
                              Texp_ident "lident/2085"
                          <arg>
                            Nolabel
                            expression (src/common.ml[11,225+24]..src/common.ml[11,225+37])
                              Texp_field
                              expression (src/common.ml[11,225+24]..src/common.ml[11,225+26])
                                Texp_ident "td/2188"
                              "ptype_name"
                        ]
                    <arg>
                      Nolabel
                      expression (src/common.ml[12,264+4]..src/common.ml[12,264+37])
                        Texp_apply
                        expression (src/common.ml[12,264+5]..src/common.ml[12,264+13])
                          Texp_ident "Ppxlib__!.Import.List.map"
                        [
                          <arg>
                            Nolabel
                            expression (src/common.ml[12,264+14]..src/common.ml[12,264+29])
                              Texp_field
                              expression (src/common.ml[12,264+14]..src/common.ml[12,264+16])
                                Texp_ident "td/2188"
                              "ptype_params"
                          <arg>
                            Labelled "f"
                            expression (src/common.ml[12,264+33]..src/common.ml[12,264+36])
                              Texp_ident "Stdlib!.fst"
                        ]
                  ]
          ]
    ]
  structure_item (src/common.ml[14,303+0]..src/common.ml[31,855+15])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[14,303+4]..src/common.ml[14,303+27])
          Tpat_var "strip_gen_symbol_suffix/3148"
        expression (src/common.ml[15,333+2]..src/common.ml[31,855+15])
          Texp_let Nonrec
          [
            <def>
              pattern (src/common.ml[15,333+6]..src/common.ml[15,333+10])
                Tpat_var "chop/3149"
              expression (src/common.ml[15,333+11]..src/common.ml[20,506+18]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/common.ml[15,333+11]..src/common.ml[15,333+12])
                      Tpat_var "n/3151"
                    expression (src/common.ml[15,333+13]..src/common.ml[20,506+18]) ghost
                      Texp_function
                      Labelled "or_more"
                      [
                        <case>
                          pattern (src/common.ml[15,333+14]..src/common.ml[15,333+21])
                            Tpat_var "or_more/3152"
                          expression (src/common.ml[15,333+22]..src/common.ml[20,506+18]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/common.ml[15,333+22]..src/common.ml[15,333+28])
                                  Tpat_var "string/3153"
                                expression (src/common.ml[15,333+29]..src/common.ml[20,506+18]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/common.ml[15,333+29]..src/common.ml[15,333+32])
                                        Tpat_var "pos/3154"
                                      expression (src/common.ml[15,333+33]..src/common.ml[20,506+18]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/common.ml[15,333+33]..src/common.ml[15,333+34])
                                              Tpat_var "f/3155"
                                            expression (src/common.ml[16,370+4]..src/common.ml[20,506+18])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/common.ml[16,370+8]..src/common.ml[16,370+14])
                                                    Tpat_var "target/3156"
                                                  expression (src/common.ml[16,370+17]..src/common.ml[16,370+25])
                                                    Texp_apply
                                                    expression (src/common.ml[16,370+22]..src/common.ml[16,370+23])
                                                      Texp_ident "Stdlib!.-"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/common.ml[16,370+17]..src/common.ml[16,370+21])
                                                          Texp_apply
                                                          expression (src/common.ml[16,370+17]..src/common.ml[16,370+18])
                                                            Texp_ident "Stdlib!.!"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/common.ml[16,370+18]..src/common.ml[16,370+21])
                                                                Texp_ident "pos/3154"
                                                          ]
                                                      <arg>
                                                        Nolabel
                                                        expression (src/common.ml[16,370+24]..src/common.ml[16,370+25])
                                                          Texp_ident "n/3151"
                                                    ]
                                              ]
                                              expression (src/common.ml[17,399+4]..src/common.ml[20,506+18])
                                                Texp_sequence
                                                expression (src/common.ml[17,399+4]..src/common.ml[19,496+8])
                                                  Texp_while
                                                  expression (src/common.ml[17,399+10]..src/common.ml[17,399+71])
                                                    Texp_apply
                                                    expression (src/common.ml[17,399+19]..src/common.ml[17,399+21])
                                                      Texp_ident "Stdlib!.&&"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/common.ml[17,399+10]..src/common.ml[17,399+18])
                                                          Texp_apply
                                                          expression (src/common.ml[17,399+15]..src/common.ml[17,399+16])
                                                            Texp_ident "Ppxlib__!.Import.>"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/common.ml[17,399+10]..src/common.ml[17,399+14])
                                                                Texp_apply
                                                                expression (src/common.ml[17,399+10]..src/common.ml[17,399+11])
                                                                  Texp_ident "Stdlib!.!"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/common.ml[17,399+11]..src/common.ml[17,399+14])
                                                                      Texp_ident "pos/3154"
                                                                ]
                                                            <arg>
                                                              Nolabel
                                                              expression (src/common.ml[17,399+17]..src/common.ml[17,399+18])
                                                                Texp_constant Const_int 0
                                                          ]
                                                      <arg>
                                                        Nolabel
                                                        expression (src/common.ml[17,399+22]..src/common.ml[17,399+71])
                                                          Texp_apply
                                                          expression (src/common.ml[17,399+49]..src/common.ml[17,399+51])
                                                            Texp_ident "Stdlib!.&&"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/common.ml[17,399+22]..src/common.ml[17,399+48])
                                                                Texp_apply
                                                                expression (src/common.ml[17,399+31]..src/common.ml[17,399+33])
                                                                  Texp_ident "Stdlib!.||"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/common.ml[17,399+23]..src/common.ml[17,399+30])
                                                                      Texp_ident "or_more/3152"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/common.ml[17,399+34]..src/common.ml[17,399+47])
                                                                      Texp_apply
                                                                      expression (src/common.ml[17,399+39]..src/common.ml[17,399+40])
                                                                        Texp_ident "Ppxlib__!.Import.>"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/common.ml[17,399+34]..src/common.ml[17,399+38])
                                                                            Texp_apply
                                                                            expression (src/common.ml[17,399+34]..src/common.ml[17,399+35])
                                                                              Texp_ident "Stdlib!.!"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/common.ml[17,399+35]..src/common.ml[17,399+38])
                                                                                  Texp_ident "pos/3154"
                                                                            ]
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/common.ml[17,399+41]..src/common.ml[17,399+47])
                                                                            Texp_ident "target/3156"
                                                                      ]
                                                                ]
                                                            <arg>
                                                              Nolabel
                                                              expression (src/common.ml[17,399+52]..src/common.ml[17,399+71])
                                                                Texp_apply
                                                                expression (src/common.ml[17,399+52]..src/common.ml[17,399+53])
                                                                  Texp_ident "f/3155"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/common.ml[17,399+54]..src/common.ml[17,399+71])
                                                                      Texp_apply
                                                                      expression (src/common.ml[17,399+54]..src/common.ml[17,399+71]) ghost
                                                                        Texp_ident "Ppxlib__!.Import.String.get"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/common.ml[17,399+54]..src/common.ml[17,399+60])
                                                                            Texp_ident "string/3153"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/common.ml[17,399+62]..src/common.ml[17,399+70])
                                                                            Texp_apply
                                                                            expression (src/common.ml[17,399+67]..src/common.ml[17,399+68])
                                                                              Texp_ident "Stdlib!.-"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/common.ml[17,399+62]..src/common.ml[17,399+66])
                                                                                  Texp_apply
                                                                                  expression (src/common.ml[17,399+62]..src/common.ml[17,399+63])
                                                                                    Texp_ident "Stdlib!.!"
                                                                                  [
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/common.ml[17,399+63]..src/common.ml[17,399+66])
                                                                                        Texp_ident "pos/3154"
                                                                                  ]
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/common.ml[17,399+69]..src/common.ml[17,399+70])
                                                                                  Texp_constant Const_int 1
                                                                            ]
                                                                      ]
                                                                ]
                                                          ]
                                                    ]
                                                  expression (src/common.ml[18,474+6]..src/common.ml[18,474+21])
                                                    Texp_apply
                                                    expression (src/common.ml[18,474+10]..src/common.ml[18,474+12])
                                                      Texp_ident "Stdlib!.:="
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/common.ml[18,474+6]..src/common.ml[18,474+9])
                                                          Texp_ident "pos/3154"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/common.ml[18,474+13]..src/common.ml[18,474+21])
                                                          Texp_apply
                                                          expression (src/common.ml[18,474+18]..src/common.ml[18,474+19])
                                                            Texp_ident "Stdlib!.-"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/common.ml[18,474+13]..src/common.ml[18,474+17])
                                                                Texp_apply
                                                                expression (src/common.ml[18,474+13]..src/common.ml[18,474+14])
                                                                  Texp_ident "Stdlib!.!"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/common.ml[18,474+14]..src/common.ml[18,474+17])
                                                                      Texp_ident "pos/3154"
                                                                ]
                                                            <arg>
                                                              Nolabel
                                                              expression (src/common.ml[18,474+20]..src/common.ml[18,474+21])
                                                                Texp_constant Const_int 1
                                                          ]
                                                    ]
                                                expression (src/common.ml[20,506+4]..src/common.ml[20,506+18])
                                                  Texp_apply
                                                  expression (src/common.ml[20,506+9]..src/common.ml[20,506+11])
                                                    Texp_ident "Ppxlib__!.Import.<="
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/common.ml[20,506+4]..src/common.ml[20,506+8])
                                                        Texp_apply
                                                        expression (src/common.ml[20,506+4]..src/common.ml[20,506+5])
                                                          Texp_ident "Stdlib!.!"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/common.ml[20,506+5]..src/common.ml[20,506+8])
                                                              Texp_ident "pos/3154"
                                                        ]
                                                    <arg>
                                                      Nolabel
                                                      expression (src/common.ml[20,506+12]..src/common.ml[20,506+18])
                                                        Texp_ident "target/3156"
                                                  ]
                                        ]
                                  ]
                            ]
                      ]
                ]
          ]
          expression (src/common.ml[22,530+2]..src/common.ml[31,855+15])
            Texp_function
            Nolabel
            [
              <case>
                pattern (src/common.ml[22,530+6]..src/common.ml[22,530+12])
                  Tpat_var "string/3313"
                expression (src/common.ml[23,546+4]..src/common.ml[31,855+15])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (src/common.ml[23,546+8]..src/common.ml[23,546+11])
                        Tpat_var "pos/3314"
                      expression (src/common.ml[23,546+14]..src/common.ml[23,546+40])
                        Texp_apply
                        expression (src/common.ml[23,546+14]..src/common.ml[23,546+17])
                          Texp_ident "Stdlib!.ref"
                        [
                          <arg>
                            Nolabel
                            expression (src/common.ml[23,546+18]..src/common.ml[23,546+40])
                              Texp_apply
                              expression (src/common.ml[23,546+19]..src/common.ml[23,546+32])
                                Texp_ident "Ppxlib__!.Import.String.length"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/common.ml[23,546+33]..src/common.ml[23,546+39])
                                    Texp_ident "string/3313"
                              ]
                        ]
                  ]
                  expression (src/common.ml[24,590+4]..src/common.ml[31,855+15])
                    Texp_ifthenelse
                    expression (src/common.ml[25,597+6]..src/common.ml[29,761+58])
                      Texp_apply
                      expression (src/common.ml[26,653+6]..src/common.ml[26,653+8])
                        Texp_ident "Stdlib!.&&"
                      [
                        <arg>
                          Nolabel
                          expression (src/common.ml[25,597+6]..src/common.ml[25,597+55])
                            Texp_apply
                            expression (src/common.ml[25,597+6]..src/common.ml[25,597+10])
                              Texp_ident "chop/3149"
                            [
                              <arg>
                                Nolabel
                                expression (src/common.ml[25,597+11]..src/common.ml[25,597+12])
                                  Texp_constant Const_int 1
                              <arg>
                                Labelled "or_more"
                                expression (src/common.ml[25,597+22]..src/common.ml[25,597+27])
                                  Texp_construct "false"
                                  []
                              <arg>
                                Nolabel
                                expression (src/common.ml[25,597+28]..src/common.ml[25,597+34])
                                  Texp_ident "string/3313"
                              <arg>
                                Nolabel
                                expression (src/common.ml[25,597+35]..src/common.ml[25,597+38])
                                  Texp_ident "pos/3314"
                              <arg>
                                Nolabel
                                expression (src/common.ml[25,597+39]..src/common.ml[25,597+55])
                                  Texp_apply
                                  expression (src/common.ml[25,597+40]..src/common.ml[25,597+50])
                                    Texp_ident "Ppxlib__!.Import.Char.equal"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/common.ml[25,597+51]..src/common.ml[25,597+54])
                                        Texp_constant Const_char 5f
                                  ]
                            ]
                        <arg>
                          Nolabel
                          expression (src/common.ml[26,653+9]..src/common.ml[29,761+58])
                            Texp_apply
                            expression (src/common.ml[29,761+6]..src/common.ml[29,761+8])
                              Texp_ident "Stdlib!.&&"
                            [
                              <arg>
                                Nolabel
                                expression (src/common.ml[26,653+9]..src/common.ml[28,736+24])
                                  Texp_apply
                                  expression (src/common.ml[26,653+9]..src/common.ml[26,653+13])
                                    Texp_ident "chop/3149"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/common.ml[26,653+14]..src/common.ml[26,653+15])
                                        Texp_constant Const_int 3
                                    <arg>
                                      Labelled "or_more"
                                      expression (src/common.ml[26,653+25]..src/common.ml[26,653+29])
                                        Texp_construct "true"
                                        []
                                    <arg>
                                      Nolabel
                                      expression (src/common.ml[26,653+30]..src/common.ml[26,653+36])
                                        Texp_ident "string/3313"
                                    <arg>
                                      Nolabel
                                      expression (src/common.ml[26,653+37]..src/common.ml[26,653+40])
                                        Texp_ident "pos/3314"
                                    <arg>
                                      Nolabel
                                      expression (src/common.ml[26,653+41]..src/common.ml[28,736+24])
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/common.ml[27,704+13]..src/common.ml[27,704+23])
                                              Tpat_or
                                              pattern (src/common.ml[27,704+13]..src/common.ml[27,704+23]) ghost
                                                Tpat_constant Const_char 30
                                              pattern (src/common.ml[27,704+13]..src/common.ml[27,704+23]) ghost
                                                Tpat_or
                                                pattern (src/common.ml[27,704+13]..src/common.ml[27,704+23]) ghost
                                                  Tpat_constant Const_char 31
                                                pattern (src/common.ml[27,704+13]..src/common.ml[27,704+23]) ghost
                                                  Tpat_or
                                                  pattern (src/common.ml[27,704+13]..src/common.ml[27,704+23]) ghost
                                                    Tpat_constant Const_char 32
                                                  pattern (src/common.ml[27,704+13]..src/common.ml[27,704+23]) ghost
                                                    Tpat_or
                                                    pattern (src/common.ml[27,704+13]..src/common.ml[27,704+23]) ghost
                                                      Tpat_constant Const_char 33
                                                    pattern (src/common.ml[27,704+13]..src/common.ml[27,704+23]) ghost
                                                      Tpat_or
                                                      pattern (src/common.ml[27,704+13]..src/common.ml[27,704+23]) ghost
                                                        Tpat_constant Const_char 34
                                                      pattern (src/common.ml[27,704+13]..src/common.ml[27,704+23]) ghost
                                                        Tpat_or
                                                        pattern (src/common.ml[27,704+13]..src/common.ml[27,704+23]) ghost
                                                          Tpat_constant Const_char 35
                                                        pattern (src/common.ml[27,704+13]..src/common.ml[27,704+23]) ghost
                                                          Tpat_or
                                                          pattern (src/common.ml[27,704+13]..src/common.ml[27,704+23]) ghost
                                                            Tpat_constant Const_char 36
                                                          pattern (src/common.ml[27,704+13]..src/common.ml[27,704+23]) ghost
                                                            Tpat_or
                                                            pattern (src/common.ml[27,704+13]..src/common.ml[27,704+23]) ghost
                                                              Tpat_constant Const_char 37
                                                            pattern (src/common.ml[27,704+13]..src/common.ml[27,704+23]) ghost
                                                              Tpat_or
                                                              pattern (src/common.ml[27,704+13]..src/common.ml[27,704+23]) ghost
                                                                Tpat_constant Const_char 38
                                                              pattern (src/common.ml[27,704+13]..src/common.ml[27,704+23]) ghost
                                                                Tpat_constant Const_char 39
                                            expression (src/common.ml[27,704+27]..src/common.ml[27,704+31])
                                              Texp_construct "true"
                                              []
                                          <case>
                                            pattern (src/common.ml[28,736+13]..src/common.ml[28,736+14])
                                              Tpat_any
                                            expression (src/common.ml[28,736+18]..src/common.ml[28,736+23])
                                              Texp_construct "false"
                                              []
                                        ]
                                  ]
                              <arg>
                                Nolabel
                                expression (src/common.ml[29,761+9]..src/common.ml[29,761+58])
                                  Texp_apply
                                  expression (src/common.ml[29,761+9]..src/common.ml[29,761+13])
                                    Texp_ident "chop/3149"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/common.ml[29,761+14]..src/common.ml[29,761+15])
                                        Texp_constant Const_int 2
                                    <arg>
                                      Labelled "or_more"
                                      expression (src/common.ml[29,761+25]..src/common.ml[29,761+30])
                                        Texp_construct "false"
                                        []
                                    <arg>
                                      Nolabel
                                      expression (src/common.ml[29,761+31]..src/common.ml[29,761+37])
                                        Texp_ident "string/3313"
                                    <arg>
                                      Nolabel
                                      expression (src/common.ml[29,761+38]..src/common.ml[29,761+41])
                                        Texp_ident "pos/3314"
                                    <arg>
                                      Nolabel
                                      expression (src/common.ml[29,761+42]..src/common.ml[29,761+58])
                                        Texp_apply
                                        expression (src/common.ml[29,761+43]..src/common.ml[29,761+53])
                                          Texp_ident "Ppxlib__!.Import.Char.equal"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/common.ml[29,761+54]..src/common.ml[29,761+57])
                                              Texp_constant Const_char 5f
                                        ]
                                  ]
                            ]
                      ]
                    expression (src/common.ml[30,820+9]..src/common.ml[30,820+34])
                      Texp_apply
                      expression (src/common.ml[30,820+9]..src/common.ml[30,820+22])
                        Texp_ident "Ppxlib__!.Import.String.prefix"
                      [
                        <arg>
                          Nolabel
                          expression (src/common.ml[30,820+23]..src/common.ml[30,820+29])
                            Texp_ident "string/3313"
                        <arg>
                          Nolabel
                          expression (src/common.ml[30,820+30]..src/common.ml[30,820+34])
                            Texp_apply
                            expression (src/common.ml[30,820+30]..src/common.ml[30,820+31])
                              Texp_ident "Stdlib!.!"
                            [
                              <arg>
                                Nolabel
                                expression (src/common.ml[30,820+31]..src/common.ml[30,820+34])
                                  Texp_ident "pos/3314"
                            ]
                      ]
                    Some
                      expression (src/common.ml[31,855+9]..src/common.ml[31,855+15])
                        Texp_ident "string/3313"
            ]
    ]
  structure_item (src/common.ml[33,872+0]..src/common.ml[38,1011+42])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[33,872+4]..src/common.ml[33,872+14])
          Tpat_var "gen_symbol/3336"
        expression (src/common.ml[34,889+2]..src/common.ml[38,1011+42])
          Texp_let Nonrec
          [
            <def>
              pattern (src/common.ml[34,889+6]..src/common.ml[34,889+9])
                Tpat_var "cnt/3337"
              expression (src/common.ml[34,889+12]..src/common.ml[34,889+17])
                Texp_apply
                expression (src/common.ml[34,889+12]..src/common.ml[34,889+15])
                  Texp_ident "Stdlib!.ref"
                [
                  <arg>
                    Nolabel
                    expression (src/common.ml[34,889+16]..src/common.ml[34,889+17])
                      Texp_constant Const_int 0
                ]
          ]
          expression (src/common.ml[35,910+2]..src/common.ml[38,1011+42])
            Texp_function
            Optional "prefix"
            [
              <case>
                pattern (src/common.ml[35,910+8]..src/common.ml[35,910+21]) ghost
                  Tpat_var "*opt*/3338"
                expression (src/common.ml[35,910+2]..src/common.ml[38,1011+42])
                  attribute "#default"
                    []
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (src/common.ml[35,910+8]..src/common.ml[35,910+14])
                        Tpat_var "prefix/3339"
                      expression (src/common.ml[35,910+8]..src/common.ml[35,910+21]) ghost
                        Texp_match
                        expression (src/common.ml[35,910+2]..src/common.ml[38,1011+42])
                          Texp_ident "*opt*/3338"
                        [
                          <case>
                            pattern (src/common.ml[35,910+17]..src/common.ml[35,910+21])
                              Tpat_value
                              pattern (src/common.ml[35,910+17]..src/common.ml[35,910+21])
                                Tpat_construct "*predef*.Some"
                                [
                                  pattern (src/common.ml[35,910+17]..src/common.ml[35,910+21])
                                    Tpat_var "*sth*/3340"
                                ]
                            expression (src/common.ml[35,910+17]..src/common.ml[35,910+21])
                              Texp_ident "*sth*/3340"
                          <case>
                            pattern (src/common.ml[35,910+17]..src/common.ml[35,910+21])
                              Tpat_value
                              pattern (src/common.ml[35,910+17]..src/common.ml[35,910+21])
                                Tpat_construct "*predef*.None"
                                []
                            expression (src/common.ml[35,910+17]..src/common.ml[35,910+21])
                              Texp_constant Const_string("_x",(src/common.ml[35,910+18]..src/common.ml[35,910+20]),None)
                        ]
                        []
                  ]
                  expression (src/common.ml[35,910+23]..src/common.ml[38,1011+42]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/common.ml[35,910+23]..src/common.ml[35,910+25])
                          Tpat_construct "()"
                          []
                        expression (src/common.ml[36,939+4]..src/common.ml[38,1011+42])
                          Texp_sequence
                          expression (src/common.ml[36,939+4]..src/common.ml[36,939+19])
                            Texp_apply
                            expression (src/common.ml[36,939+8]..src/common.ml[36,939+10])
                              Texp_ident "Stdlib!.:="
                            [
                              <arg>
                                Nolabel
                                expression (src/common.ml[36,939+4]..src/common.ml[36,939+7])
                                  Texp_ident "cnt/3337"
                              <arg>
                                Nolabel
                                expression (src/common.ml[36,939+11]..src/common.ml[36,939+19])
                                  Texp_apply
                                  expression (src/common.ml[36,939+16]..src/common.ml[36,939+17])
                                    Texp_ident "Stdlib!.+"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/common.ml[36,939+11]..src/common.ml[36,939+15])
                                        Texp_apply
                                        expression (src/common.ml[36,939+11]..src/common.ml[36,939+12])
                                          Texp_ident "Stdlib!.!"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/common.ml[36,939+12]..src/common.ml[36,939+15])
                                              Texp_ident "cnt/3337"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/common.ml[36,939+18]..src/common.ml[36,939+19])
                                        Texp_constant Const_int 1
                                  ]
                            ]
                          expression (src/common.ml[37,960+4]..src/common.ml[38,1011+42])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/common.ml[37,960+8]..src/common.ml[37,960+14])
                                  Tpat_var "prefix/3341"
                                expression (src/common.ml[37,960+17]..src/common.ml[37,960+47])
                                  Texp_apply
                                  expression (src/common.ml[37,960+17]..src/common.ml[37,960+40])
                                    Texp_ident "strip_gen_symbol_suffix/3148"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/common.ml[37,960+41]..src/common.ml[37,960+47])
                                        Texp_ident "prefix/3339"
                                  ]
                            ]
                            expression (src/common.ml[38,1011+4]..src/common.ml[38,1011+42])
                              Texp_apply
                              expression (src/common.ml[38,1011+4]..src/common.ml[38,1011+18])
                                Texp_ident "Stdlib!.Printf.sprintf"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/common.ml[38,1011+19]..src/common.ml[38,1011+30])
                                    Texp_construct "CamlinternalFormatBasics.Format"
                                    [
                                      expression (src/common.ml[38,1011+19]..src/common.ml[38,1011+30]) ghost
                                        Texp_construct "CamlinternalFormatBasics.String"
                                        [
                                          expression (src/common.ml[38,1011+19]..src/common.ml[38,1011+30]) ghost
                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                            []
                                          expression (src/common.ml[38,1011+19]..src/common.ml[38,1011+30]) ghost
                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                            [
                                              expression (src/common.ml[38,1011+19]..src/common.ml[38,1011+30]) ghost
                                                Texp_constant Const_string("__",(src/common.ml[38,1011+19]..src/common.ml[38,1011+30]) ghost,None)
                                              expression (src/common.ml[38,1011+19]..src/common.ml[38,1011+30]) ghost
                                                Texp_construct "CamlinternalFormatBasics.Int"
                                                [
                                                  expression (src/common.ml[38,1011+19]..src/common.ml[38,1011+30]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.Int_i"
                                                    []
                                                  expression (src/common.ml[38,1011+19]..src/common.ml[38,1011+30]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.Lit_padding"
                                                    [
                                                      expression (src/common.ml[38,1011+19]..src/common.ml[38,1011+30]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.Zeros"
                                                        []
                                                      expression (src/common.ml[38,1011+19]..src/common.ml[38,1011+30]) ghost
                                                        Texp_constant Const_int 3
                                                    ]
                                                  expression (src/common.ml[38,1011+19]..src/common.ml[38,1011+30]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.No_precision"
                                                    []
                                                  expression (src/common.ml[38,1011+19]..src/common.ml[38,1011+30]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                    [
                                                      expression (src/common.ml[38,1011+19]..src/common.ml[38,1011+30]) ghost
                                                        Texp_constant Const_char 5f
                                                      expression (src/common.ml[38,1011+19]..src/common.ml[38,1011+30]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                        []
                                                    ]
                                                ]
                                            ]
                                        ]
                                      expression (src/common.ml[38,1011+19]..src/common.ml[38,1011+30]) ghost
                                        Texp_constant Const_string("%s__%03i_",(src/common.ml[38,1011+19]..src/common.ml[38,1011+30]) ghost,None)
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/common.ml[38,1011+31]..src/common.ml[38,1011+37])
                                    Texp_ident "prefix/3341"
                                <arg>
                                  Nolabel
                                  expression (src/common.ml[38,1011+38]..src/common.ml[38,1011+42])
                                    Texp_apply
                                    expression (src/common.ml[38,1011+38]..src/common.ml[38,1011+39])
                                      Texp_ident "Stdlib!.!"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/common.ml[38,1011+39]..src/common.ml[38,1011+42])
                                          Texp_ident "cnt/3337"
                                    ]
                              ]
                    ]
            ]
    ]
  structure_item (src/common.ml[40,1055+0]..src/common.ml[61,1819+78])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[40,1055+4]..src/common.ml[40,1055+30])
          Tpat_var "name_type_params_in_td_res/3376"
        expression (src/common.ml[40,1055+31]..src/common.ml[61,1819+78]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/common.ml[40,1055+32]..src/common.ml[40,1055+34])
                Tpat_extra_constraint
                core_type (src/common.ml[40,1055+37]..src/common.ml[40,1055+53])
                  Ttyp_constr "Ppxlib__!.Import.type_declaration"
                  []
                pattern (src/common.ml[40,1055+32]..src/common.ml[40,1055+34])
                  Tpat_alias "td/3378"
                  pattern (src/common.ml[40,1055+32]..src/common.ml[40,1055+34])
                    Tpat_any
              expression (src/common.ml[42,1147+2]..src/common.ml[61,1819+78])
                Texp_constraint
                core_type (src/common.ml[41,1112+4]..src/common.ml[41,1112+32])
                  Ttyp_constr "Stdlib!.result"
                  [
                    core_type (src/common.ml[41,1112+5]..src/common.ml[41,1112+21])
                      Ttyp_constr "Ppxlib__!.Import.type_declaration"
                      []
                    core_type (src/common.ml[41,1112+23]..src/common.ml[41,1112+24])
                      Ttyp_any
                  ]
                  Texp_open Fresh
                  module_expr (src/common.ml[42,1147+11]..src/common.ml[42,1147+17])
                    Tmod_ident "Ppxlib__!.Import.Result"
                  expression (src/common.ml[43,1168+2]..src/common.ml[61,1819+78])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/common.ml[43,1168+6]..src/common.ml[43,1168+19])
                          Tpat_var "prefix_string/3385"
                        expression (src/common.ml[43,1168+20]..src/common.ml[45,1231+70]) ghost
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/common.ml[43,1168+20]..src/common.ml[43,1168+21])
                                Tpat_var "i/3387"
                              expression (src/common.ml[45,1231+4]..src/common.ml[45,1231+70])
                                Texp_apply
                                expression (src/common.ml[45,1231+4]..src/common.ml[45,1231+15])
                                  Texp_ident "Ppxlib__!.Import.String.make"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/common.ml[45,1231+16]..src/common.ml[45,1231+30])
                                      Texp_apply
                                      expression (src/common.ml[45,1231+26]..src/common.ml[45,1231+27])
                                        Texp_ident "Stdlib!.+"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/common.ml[45,1231+17]..src/common.ml[45,1231+25])
                                            Texp_apply
                                            expression (src/common.ml[45,1231+20]..src/common.ml[45,1231+21])
                                              Texp_ident "Stdlib!./"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/common.ml[45,1231+18]..src/common.ml[45,1231+19])
                                                  Texp_ident "i/3387"
                                              <arg>
                                                Nolabel
                                                expression (src/common.ml[45,1231+22]..src/common.ml[45,1231+24])
                                                  Texp_constant Const_int 26
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/common.ml[45,1231+28]..src/common.ml[45,1231+29])
                                            Texp_constant Const_int 1
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (src/common.ml[45,1231+31]..src/common.ml[45,1231+70])
                                      Texp_apply
                                      expression (src/common.ml[45,1231+32]..src/common.ml[45,1231+40])
                                        Texp_ident "Ppxlib__!.Import.Char.chr"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/common.ml[45,1231+41]..src/common.ml[45,1231+69])
                                            Texp_apply
                                            expression (src/common.ml[45,1231+56]..src/common.ml[45,1231+57])
                                              Texp_ident "Stdlib!.+"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/common.ml[45,1231+42]..src/common.ml[45,1231+55])
                                                  Texp_apply
                                                  expression (src/common.ml[45,1231+42]..src/common.ml[45,1231+51])
                                                    Texp_ident "Ppxlib__!.Import.Char.code"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/common.ml[45,1231+52]..src/common.ml[45,1231+55])
                                                        Texp_constant Const_char 61
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (src/common.ml[45,1231+58]..src/common.ml[45,1231+68])
                                                  Texp_apply
                                                  expression (src/common.ml[45,1231+61]..src/common.ml[45,1231+64])
                                                    Texp_ident "Stdlib!.mod"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/common.ml[45,1231+59]..src/common.ml[45,1231+60])
                                                        Texp_ident "i/3387"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/common.ml[45,1231+65]..src/common.ml[45,1231+67])
                                                        Texp_constant Const_int 26
                                                  ]
                                            ]
                                      ]
                                ]
                          ]
                    ]
                    expression (src/common.ml[47,1307+2]..src/common.ml[61,1819+78])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/common.ml[47,1307+6]..src/common.ml[47,1307+16])
                            Tpat_var "name_param/3388"
                          expression (src/common.ml[47,1307+17]..src/common.ml[53,1567+58]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/common.ml[47,1307+17]..src/common.ml[47,1307+18])
                                  Tpat_var "i/3390"
                                expression (src/common.ml[47,1307+19]..src/common.ml[53,1567+58]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/common.ml[47,1307+19]..src/common.ml[47,1307+33])
                                        Tpat_tuple
                                        [
                                          pattern (src/common.ml[47,1307+20]..src/common.ml[47,1307+22])
                                            Tpat_var "tp/3391"
                                          pattern (src/common.ml[47,1307+24]..src/common.ml[47,1307+32])
                                            Tpat_var "variance/3392"
                                        ]
                                      expression (src/common.ml[48,1343+4]..src/common.ml[53,1567+58])
                                        Texp_apply
                                        expression (src/common.ml[53,1567+4]..src/common.ml[53,1567+7])
                                          Texp_ident "Ppxlib__!.Import.Result.>>|"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/common.ml[48,1343+4]..src/common.ml[52,1487+79])
                                              Texp_match
                                              expression (src/common.ml[48,1343+11]..src/common.ml[48,1343+23])
                                                Texp_field
                                                expression (src/common.ml[48,1343+11]..src/common.ml[48,1343+13])
                                                  Texp_ident "tp/3391"
                                                "ptyp_desc"
                                              [
                                                <case>
                                                  pattern (src/common.ml[49,1372+6]..src/common.ml[49,1372+14])
                                                    Tpat_value
                                                    pattern (src/common.ml[49,1372+6]..src/common.ml[49,1372+14])
                                                      Tpat_construct "Ptyp_any"
                                                      []
                                                  expression (src/common.ml[49,1372+18]..src/common.ml[49,1372+73])
                                                    Texp_construct "Ok"
                                                    [
                                                      expression (src/common.ml[49,1372+21]..src/common.ml[49,1372+73])
                                                        Texp_construct "Ptyp_var"
                                                        [
                                                          expression (src/common.ml[49,1372+31]..src/common.ml[49,1372+72])
                                                            Texp_apply
                                                            expression (src/common.ml[49,1372+32]..src/common.ml[49,1372+42])
                                                              Texp_ident "gen_symbol/3336"
                                                            [
                                                              <arg>
                                                                Optional "prefix"
                                                                expression (src/common.ml[49,1372+51]..src/common.ml[49,1372+68])
                                                                  Texp_construct "Some"
                                                                  [
                                                                    expression (src/common.ml[49,1372+51]..src/common.ml[49,1372+68])
                                                                      Texp_apply
                                                                      expression (src/common.ml[49,1372+52]..src/common.ml[49,1372+65])
                                                                        Texp_ident "prefix_string/3385"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/common.ml[49,1372+66]..src/common.ml[49,1372+67])
                                                                            Texp_ident "i/3390"
                                                                      ]
                                                                  ]
                                                              <arg>
                                                                Nolabel
                                                                expression (src/common.ml[49,1372+69]..src/common.ml[49,1372+71])
                                                                  Texp_construct "()"
                                                                  []
                                                            ]
                                                        ]
                                                    ]
                                                <case>
                                                  pattern (src/common.ml[50,1446+6]..src/common.ml[50,1446+21])
                                                    Tpat_value
                                                    pattern (src/common.ml[50,1446+6]..src/common.ml[50,1446+21])
                                                      Tpat_alias "v/3393"
                                                      pattern (src/common.ml[50,1446+6]..src/common.ml[50,1446+16])
                                                        Tpat_construct "Ptyp_var"
                                                        [
                                                          pattern (src/common.ml[50,1446+15]..src/common.ml[50,1446+16])
                                                            Tpat_any
                                                        ]
                                                  expression (src/common.ml[50,1446+25]..src/common.ml[50,1446+29])
                                                    Texp_construct "Ok"
                                                    [
                                                      expression (src/common.ml[50,1446+28]..src/common.ml[50,1446+29])
                                                        Texp_ident "v/3393"
                                                    ]
                                                <case>
                                                  pattern (src/common.ml[51,1476+6]..src/common.ml[51,1476+7])
                                                    Tpat_value
                                                    pattern (src/common.ml[51,1476+6]..src/common.ml[51,1476+7])
                                                      Tpat_any
                                                  expression (src/common.ml[52,1487+8]..src/common.ml[52,1487+78])
                                                    Texp_construct "Error"
                                                    [
                                                      expression (src/common.ml[52,1487+14]..src/common.ml[52,1487+78])
                                                        Texp_apply
                                                        expression (src/common.ml[52,1487+15]..src/common.ml[52,1487+37])
                                                          Texp_ident "Ppxlib__!.Location.Error.createf"
                                                        [
                                                          <arg>
                                                            Labelled "loc"
                                                            expression (src/common.ml[52,1487+43]..src/common.ml[52,1487+54])
                                                              Texp_field
                                                              expression (src/common.ml[52,1487+43]..src/common.ml[52,1487+45])
                                                                Texp_ident "tp/3391"
                                                              "ptyp_loc"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/common.ml[52,1487+55]..src/common.ml[52,1487+77])
                                                              Texp_construct "CamlinternalFormatBasics.Format"
                                                              [
                                                                expression (src/common.ml[52,1487+55]..src/common.ml[52,1487+77]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                  [
                                                                    expression (src/common.ml[52,1487+55]..src/common.ml[52,1487+77]) ghost
                                                                      Texp_constant Const_string("not a type parameter",(src/common.ml[52,1487+55]..src/common.ml[52,1487+77]) ghost,None)
                                                                    expression (src/common.ml[52,1487+55]..src/common.ml[52,1487+77]) ghost
                                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                      []
                                                                  ]
                                                                expression (src/common.ml[52,1487+55]..src/common.ml[52,1487+77]) ghost
                                                                  Texp_constant Const_string("not a type parameter",(src/common.ml[52,1487+55]..src/common.ml[52,1487+77]) ghost,None)
                                                              ]
                                                        ]
                                                    ]
                                              ]
                                              []
                                          <arg>
                                            Nolabel
                                            expression (src/common.ml[53,1567+8]..src/common.ml[53,1567+58])
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/common.ml[53,1567+12]..src/common.ml[53,1567+21])
                                                    Tpat_var "ptyp_desc/3498"
                                                  expression (src/common.ml[53,1567+25]..src/common.ml[53,1567+58])
                                                    Texp_tuple
                                                    [
                                                      expression (src/common.ml[53,1567+26]..src/common.ml[53,1567+47])
                                                        Texp_record
                                                          fields =
                                                            [
                                                              "ptyp_desc"
                                                                expression (src/common.ml[53,1567+36]..src/common.ml[53,1567+45]) ghost
                                                                  Texp_ident "ptyp_desc/3498"
                                                              <kept>                                                              <kept>                                                              <kept>                                                            ]
                                                          representation =
                                                            Record_regular
                                                          extended_expression =
                                                            Some
                                                              expression (src/common.ml[53,1567+28]..src/common.ml[53,1567+30])
                                                                Texp_ident "tp/3391"
                                                      expression (src/common.ml[53,1567+49]..src/common.ml[53,1567+57])
                                                        Texp_ident "variance/3392"
                                                    ]
                                              ]
                                        ]
                                  ]
                            ]
                      ]
                      expression (src/common.ml[55,1631+2]..src/common.ml[61,1819+78])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/common.ml[55,1631+6]..src/common.ml[55,1631+26])
                              Tpat_tuple
                              [
                                pattern (src/common.ml[55,1631+6]..src/common.ml[55,1631+18])
                                  Tpat_var "ptype_params/3500"
                                pattern (src/common.ml[55,1631+20]..src/common.ml[55,1631+26])
                                  Tpat_var "errors/3501"
                              ]
                            expression (src/common.ml[56,1660+4]..src/common.ml[59,1776+37])
                              Texp_apply
                              expression (src/common.ml[57,1707+4]..src/common.ml[57,1707+6])
                                Texp_ident "Stdlib!.|>"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/common.ml[56,1660+4]..src/common.ml[56,1660+46])
                                    Texp_apply
                                    expression (src/common.ml[56,1660+20]..src/common.ml[56,1660+22])
                                      Texp_ident "Stdlib!.|>"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/common.ml[56,1660+4]..src/common.ml[56,1660+19])
                                          Texp_field
                                          expression (src/common.ml[56,1660+4]..src/common.ml[56,1660+6])
                                            Texp_ident "td/3378"
                                          "ptype_params"
                                      <arg>
                                        Nolabel
                                        expression (src/common.ml[56,1660+23]..src/common.ml[56,1660+46])
                                          Texp_apply
                                          expression (src/common.ml[56,1660+23]..src/common.ml[56,1660+32])
                                            Texp_ident "Ppxlib__!.Import.List.mapi"
                                          [
                                            <arg>
                                              Nolabel
                                            <arg>
                                              Labelled "f"
                                              expression (src/common.ml[56,1660+36]..src/common.ml[56,1660+46])
                                                Texp_ident "name_param/3388"
                                          ]
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/common.ml[57,1707+7]..src/common.ml[59,1776+37])
                                    Texp_apply
                                    expression (src/common.ml[57,1707+7]..src/common.ml[57,1707+25])
                                      Texp_ident "Ppxlib__!.Import.List.partition_map"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/common.ml[57,1707+26]..src/common.ml[59,1776+37])
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/common.ml[58,1743+11]..src/common.ml[58,1743+15])
                                                Tpat_construct "Ok"
                                                [
                                                  pattern (src/common.ml[58,1743+14]..src/common.ml[58,1743+15])
                                                    Tpat_var "o/3503"
                                                ]
                                              expression (src/common.ml[58,1743+19]..src/common.ml[58,1743+32])
                                                Texp_construct "Either.Left"
                                                [
                                                  expression (src/common.ml[58,1743+31]..src/common.ml[58,1743+32])
                                                    Texp_ident "o/3503"
                                                ]
                                            <case>
                                              pattern (src/common.ml[59,1776+11]..src/common.ml[59,1776+18])
                                                Tpat_construct "Error"
                                                [
                                                  pattern (src/common.ml[59,1776+17]..src/common.ml[59,1776+18])
                                                    Tpat_var "e/3504"
                                                ]
                                              expression (src/common.ml[59,1776+22]..src/common.ml[59,1776+36])
                                                Texp_construct "Either.Right"
                                                [
                                                  expression (src/common.ml[59,1776+35]..src/common.ml[59,1776+36])
                                                    Texp_ident "e/3504"
                                                ]
                                          ]
                                    ]
                              ]
                        ]
                        expression (src/common.ml[61,1819+2]..src/common.ml[61,1819+78])
                          Texp_match
                          expression (src/common.ml[61,1819+8]..src/common.ml[61,1819+14])
                            Texp_ident "errors/3501"
                          [
                            <case>
                              pattern (src/common.ml[61,1819+20]..src/common.ml[61,1819+22])
                                Tpat_value
                                pattern (src/common.ml[61,1819+20]..src/common.ml[61,1819+22])
                                  Tpat_construct "[]"
                                  []
                              expression (src/common.ml[61,1819+26]..src/common.ml[61,1819+53])
                                Texp_construct "Ok"
                                [
                                  expression (src/common.ml[61,1819+29]..src/common.ml[61,1819+53])
                                    Texp_record
                                      fields =
                                        [
                                          <kept>                                          "ptype_params"
                                            expression (src/common.ml[61,1819+39]..src/common.ml[61,1819+51]) ghost
                                              Texp_ident "ptype_params/3500"
                                          <kept>                                          <kept>                                          <kept>                                          <kept>                                          <kept>                                          <kept>                                        ]
                                      representation =
                                        Record_regular
                                      extended_expression =
                                        Some
                                          expression (src/common.ml[61,1819+31]..src/common.ml[61,1819+33])
                                            Texp_ident "td/3378"
                                ]
                            <case>
                              pattern (src/common.ml[61,1819+56]..src/common.ml[61,1819+62])
                                Tpat_value
                                pattern (src/common.ml[61,1819+56]..src/common.ml[61,1819+62])
                                  Tpat_construct "::"
                                  [
                                    pattern (src/common.ml[61,1819+56]..src/common.ml[61,1819+57])
                                      Tpat_var "t/3508"
                                    pattern (src/common.ml[61,1819+61]..src/common.ml[61,1819+62])
                                      Tpat_var "q/3509"
                                  ]
                              expression (src/common.ml[61,1819+66]..src/common.ml[61,1819+78])
                                Texp_construct "Error"
                                [
                                  expression (src/common.ml[61,1819+72]..src/common.ml[61,1819+78])
                                    Texp_tuple
                                    [
                                      expression (src/common.ml[61,1819+73]..src/common.ml[61,1819+74])
                                        Texp_ident "t/3508"
                                      expression (src/common.ml[61,1819+76]..src/common.ml[61,1819+77])
                                        Texp_ident "q/3509"
                                    ]
                                ]
                          ]
                          []
          ]
    ]
  structure_item (src/common.ml[63,1899+0]..src/common.ml[66,2032+46])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[63,1899+4]..src/common.ml[63,1899+26])
          Tpat_var "name_type_params_in_td/3511"
        expression (src/common.ml[63,1899+27]..src/common.ml[66,2032+46]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/common.ml[63,1899+28]..src/common.ml[63,1899+30])
                Tpat_extra_constraint
                core_type (src/common.ml[63,1899+33]..src/common.ml[63,1899+49])
                  Ttyp_constr "Ppxlib__!.Import.type_declaration"
                  []
                pattern (src/common.ml[63,1899+28]..src/common.ml[63,1899+30])
                  Tpat_alias "td/3513"
                  pattern (src/common.ml[63,1899+28]..src/common.ml[63,1899+30])
                    Tpat_any
              expression (src/common.ml[64,1971+2]..src/common.ml[66,2032+46])
                Texp_constraint
                core_type (src/common.ml[63,1899+53]..src/common.ml[63,1899+69])
                  Ttyp_constr "Ppxlib__!.Import.type_declaration"
                  []
                  Texp_match
                  expression (src/common.ml[64,1971+8]..src/common.ml[64,1971+37])
                    Texp_apply
                    expression (src/common.ml[64,1971+8]..src/common.ml[64,1971+34])
                      Texp_ident "name_type_params_in_td_res/3376"
                    [
                      <arg>
                        Nolabel
                        expression (src/common.ml[64,1971+35]..src/common.ml[64,1971+37])
                          Texp_ident "td/3513"
                    ]
                  [
                    <case>
                      pattern (src/common.ml[65,2014+4]..src/common.ml[65,2014+10])
                        Tpat_value
                        pattern (src/common.ml[65,2014+4]..src/common.ml[65,2014+10])
                          Tpat_construct "Ok"
                          [
                            pattern (src/common.ml[65,2014+7]..src/common.ml[65,2014+10])
                              Tpat_var "res/3514"
                          ]
                      expression (src/common.ml[65,2014+14]..src/common.ml[65,2014+17])
                        Texp_ident "res/3514"
                    <case>
                      pattern (src/common.ml[66,2032+4]..src/common.ml[66,2032+18])
                        Tpat_value
                        pattern (src/common.ml[66,2032+4]..src/common.ml[66,2032+18])
                          Tpat_construct "Error"
                          [
                            pattern (src/common.ml[66,2032+10]..src/common.ml[66,2032+18])
                              Tpat_tuple
                              [
                                pattern (src/common.ml[66,2032+11]..src/common.ml[66,2032+14])
                                  Tpat_var "err/3515"
                                pattern (src/common.ml[66,2032+16]..src/common.ml[66,2032+17])
                                  Tpat_any
                              ]
                          ]
                      expression (src/common.ml[66,2032+22]..src/common.ml[66,2032+46])
                        Texp_apply
                        expression (src/common.ml[66,2032+22]..src/common.ml[66,2032+42])
                          Texp_ident "Ppxlib__!.Location.Error.raise"
                        [
                          <arg>
                            Nolabel
                            expression (src/common.ml[66,2032+43]..src/common.ml[66,2032+46])
                              Texp_ident "err/3515"
                        ]
                  ]
                  []
          ]
    ]
  structure_item (src/common.ml[68,2080+0]..src/common.ml[76,2375+46])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[68,2080+4]..src/common.ml[68,2080+39])
          Tpat_var "combinator_type_of_type_declaration/3516"
        expression (src/common.ml[68,2080+40]..src/common.ml[76,2375+46]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/common.ml[68,2080+40]..src/common.ml[68,2080+42])
                Tpat_var "td/3518"
              expression (src/common.ml[68,2080+43]..src/common.ml[76,2375+46]) ghost
                Texp_function
                Labelled "f"
                [
                  <case>
                    pattern (src/common.ml[68,2080+44]..src/common.ml[68,2080+45])
                      Tpat_var "f/3519"
                    expression (src/common.ml[69,2128+2]..src/common.ml[76,2375+46])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/common.ml[69,2128+6]..src/common.ml[69,2128+8])
                            Tpat_var "td/3520"
                          expression (src/common.ml[69,2128+11]..src/common.ml[69,2128+36])
                            Texp_apply
                            expression (src/common.ml[69,2128+11]..src/common.ml[69,2128+33])
                              Texp_ident "name_type_params_in_td/3511"
                            [
                              <arg>
                                Nolabel
                                expression (src/common.ml[69,2128+34]..src/common.ml[69,2128+36])
                                  Texp_ident "td/3518"
                            ]
                      ]
                      expression (src/common.ml[70,2168+2]..src/common.ml[76,2375+46])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/common.ml[70,2168+6]..src/common.ml[70,2168+17])
                              Tpat_var "result_type/3521"
                            expression (src/common.ml[71,2188+4]..src/common.ml[71,2188+63])
                              Texp_apply
                              expression (src/common.ml[71,2188+4]..src/common.ml[71,2188+5])
                                Texp_ident "f/3519"
                              [
                                <arg>
                                  Labelled "loc"
                                  expression (src/common.ml[71,2188+11]..src/common.ml[71,2188+28])
                                    Texp_field
                                    expression (src/common.ml[71,2188+11]..src/common.ml[71,2188+24])
                                      Texp_field
                                      expression (src/common.ml[71,2188+11]..src/common.ml[71,2188+13])
                                        Texp_ident "td/3520"
                                      "ptype_name"
                                    "loc"
                                <arg>
                                  Nolabel
                                  expression (src/common.ml[71,2188+29]..src/common.ml[71,2188+63])
                                    Texp_apply
                                    expression (src/common.ml[71,2188+30]..src/common.ml[71,2188+59])
                                      Texp_ident "core_type_of_type_declaration/2186"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/common.ml[71,2188+60]..src/common.ml[71,2188+62])
                                          Texp_ident "td/3520"
                                    ]
                              ]
                        ]
                        expression (src/common.ml[73,2257+2]..src/common.ml[76,2375+46])
                          Texp_apply
                          expression (src/common.ml[73,2257+2]..src/common.ml[73,2257+17])
                            Texp_ident "Ppxlib__!.Import.List.fold_right"
                          [
                            <arg>
                              Nolabel
                              expression (src/common.ml[73,2257+18]..src/common.ml[73,2257+33])
                                Texp_field
                                expression (src/common.ml[73,2257+18]..src/common.ml[73,2257+20])
                                  Texp_ident "td/3520"
                                "ptype_params"
                            <arg>
                              Labelled "init"
                              expression (src/common.ml[73,2257+40]..src/common.ml[73,2257+51])
                                Texp_ident "result_type/3521"
                            <arg>
                              Labelled "f"
                              expression (src/common.ml[74,2309+7]..src/common.ml[76,2375+46])
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/common.ml[74,2309+12]..src/common.ml[74,2309+27])
                                      Tpat_tuple
                                      [
                                        pattern (src/common.ml[74,2309+13]..src/common.ml[74,2309+15])
                                          Tpat_var "tp/3522"
                                        pattern (src/common.ml[74,2309+17]..src/common.ml[74,2309+26])
                                          Tpat_var "_variance/3523"
                                      ]
                                    expression (src/common.ml[74,2309+28]..src/common.ml[76,2375+45]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (src/common.ml[74,2309+28]..src/common.ml[74,2309+31])
                                            Tpat_var "acc/3524"
                                          expression (src/common.ml[75,2344+6]..src/common.ml[76,2375+45])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/common.ml[75,2344+10]..src/common.ml[75,2344+13])
                                                  Tpat_var "loc/3525"
                                                expression (src/common.ml[75,2344+16]..src/common.ml[75,2344+27])
                                                  Texp_field
                                                  expression (src/common.ml[75,2344+16]..src/common.ml[75,2344+18])
                                                    Texp_ident "tp/3522"
                                                  "ptyp_loc"
                                            ]
                                            expression (src/common.ml[76,2375+6]..src/common.ml[76,2375+45])
                                              Texp_apply
                                              expression (src/common.ml[76,2375+6]..src/common.ml[76,2375+16])
                                                Texp_ident "Ppxlib__!.Ast_builder.Default.ptyp_arrow"
                                              [
                                                <arg>
                                                  Labelled "loc"
                                                  expression (src/common.ml[76,2375+18]..src/common.ml[76,2375+21])
                                                    Texp_ident "loc/3525"
                                                <arg>
                                                  Nolabel
                                                  expression (src/common.ml[76,2375+22]..src/common.ml[76,2375+29])
                                                    Texp_construct "Nolabel"
                                                    []
                                                <arg>
                                                  Nolabel
                                                  expression (src/common.ml[76,2375+30]..src/common.ml[76,2375+41])
                                                    Texp_apply
                                                    expression (src/common.ml[76,2375+31]..src/common.ml[76,2375+32])
                                                      Texp_ident "f/3519"
                                                    [
                                                      <arg>
                                                        Labelled "loc"
                                                        expression (src/common.ml[76,2375+34]..src/common.ml[76,2375+37])
                                                          Texp_ident "loc/3525"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/common.ml[76,2375+38]..src/common.ml[76,2375+40])
                                                          Texp_ident "tp/3522"
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (src/common.ml[76,2375+42]..src/common.ml[76,2375+45])
                                                    Texp_ident "acc/3524"
                                              ]
                                      ]
                                ]
                          ]
                ]
          ]
    ]
  structure_item (src/common.ml[78,2423+0]..src/common.ml[83,2593+21])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[78,2423+4]..src/common.ml[78,2423+23])
          Tpat_var "string_of_core_type/3527"
        expression (src/common.ml[78,2423+24]..src/common.ml[83,2593+21]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/common.ml[78,2423+24]..src/common.ml[78,2423+26])
                Tpat_var "ct/3529"
              expression (src/common.ml[79,2452+2]..src/common.ml[83,2593+21])
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/common.ml[79,2452+6]..src/common.ml[79,2452+9])
                      Tpat_var "buf/3530"
                    expression (src/common.ml[79,2452+12]..src/common.ml[79,2452+29])
                      Texp_apply
                      expression (src/common.ml[79,2452+12]..src/common.ml[79,2452+25])
                        Texp_ident "Buffer/2083.create"
                      [
                        <arg>
                          Nolabel
                          expression (src/common.ml[79,2452+26]..src/common.ml[79,2452+29])
                            Texp_constant Const_int 128
                      ]
                ]
                expression (src/common.ml[80,2485+2]..src/common.ml[83,2593+21])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (src/common.ml[80,2485+6]..src/common.ml[80,2485+9])
                        Tpat_var "ppf/3573"
                      expression (src/common.ml[80,2485+12]..src/common.ml[80,2485+42])
                        Texp_apply
                        expression (src/common.ml[80,2485+12]..src/common.ml[80,2485+38])
                          Texp_ident "Format/2084.formatter_of_buffer"
                        [
                          <arg>
                            Nolabel
                            expression (src/common.ml[80,2485+39]..src/common.ml[80,2485+42])
                              Texp_ident "buf/3530"
                        ]
                  ]
                  expression (src/common.ml[81,2531+2]..src/common.ml[83,2593+21])
                    Texp_sequence
                    expression (src/common.ml[81,2531+2]..src/common.ml[81,2531+28])
                      Texp_apply
                      expression (src/common.ml[81,2531+2]..src/common.ml[81,2531+21])
                        Texp_ident "Ppxlib__!.Import.Pprintast.core_type"
                      [
                        <arg>
                          Nolabel
                          expression (src/common.ml[81,2531+22]..src/common.ml[81,2531+25])
                            Texp_ident "ppf/3573"
                        <arg>
                          Nolabel
                          expression (src/common.ml[81,2531+26]..src/common.ml[81,2531+28])
                            Texp_ident "ct/3529"
                      ]
                    expression (src/common.ml[82,2561+2]..src/common.ml[83,2593+21])
                      Texp_sequence
                      expression (src/common.ml[82,2561+2]..src/common.ml[82,2561+30])
                        Texp_apply
                        expression (src/common.ml[82,2561+2]..src/common.ml[82,2561+23])
                          Texp_ident "Format/2084.pp_print_flush"
                        [
                          <arg>
                            Nolabel
                            expression (src/common.ml[82,2561+24]..src/common.ml[82,2561+27])
                              Texp_ident "ppf/3573"
                          <arg>
                            Nolabel
                            expression (src/common.ml[82,2561+28]..src/common.ml[82,2561+30])
                              Texp_construct "()"
                              []
                        ]
                      expression (src/common.ml[83,2593+2]..src/common.ml[83,2593+21])
                        Texp_apply
                        expression (src/common.ml[83,2593+2]..src/common.ml[83,2593+17])
                          Texp_ident "Buffer/2083.contents"
                        [
                          <arg>
                            Nolabel
                            expression (src/common.ml[83,2593+18]..src/common.ml[83,2593+21])
                              Texp_ident "buf/3530"
                        ]
          ]
    ]
  structure_item (src/common.ml[85,2616+0]..src/common.ml[89,2754+71])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[85,2616+4]..src/common.ml[85,2616+27])
          Tpat_var "get_type_param_name_res/3947"
        expression (src/common.ml[85,2616+28]..src/common.ml[89,2754+71]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/common.ml[85,2616+28]..src/common.ml[85,2616+35])
                Tpat_tuple
                [
                  pattern (src/common.ml[85,2616+29]..src/common.ml[85,2616+31])
                    Tpat_var "ty/3949"
                  pattern (src/common.ml[85,2616+33]..src/common.ml[85,2616+34])
                    Tpat_any
                ]
              expression (src/common.ml[86,2654+2]..src/common.ml[89,2754+71])
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/common.ml[86,2654+6]..src/common.ml[86,2654+9])
                      Tpat_var "loc/3950"
                    expression (src/common.ml[86,2654+12]..src/common.ml[86,2654+23])
                      Texp_field
                      expression (src/common.ml[86,2654+12]..src/common.ml[86,2654+14])
                        Texp_ident "ty/3949"
                      "ptyp_loc"
                ]
                expression (src/common.ml[87,2681+2]..src/common.ml[89,2754+71])
                  Texp_match
                  expression (src/common.ml[87,2681+8]..src/common.ml[87,2681+20])
                    Texp_field
                    expression (src/common.ml[87,2681+8]..src/common.ml[87,2681+10])
                      Texp_ident "ty/3949"
                    "ptyp_desc"
                  [
                    <case>
                      pattern (src/common.ml[88,2707+4]..src/common.ml[88,2707+17])
                        Tpat_value
                        pattern (src/common.ml[88,2707+4]..src/common.ml[88,2707+17])
                          Tpat_construct "Ptyp_var"
                          [
                            pattern (src/common.ml[88,2707+13]..src/common.ml[88,2707+17])
                              Tpat_var "name/3951"
                          ]
                      expression (src/common.ml[88,2707+21]..src/common.ml[88,2707+46])
                        Texp_construct "Ok"
                        [
                          expression (src/common.ml[88,2707+24]..src/common.ml[88,2707+46])
                            Texp_apply
                            expression (src/common.ml[88,2707+25]..src/common.ml[88,2707+35])
                              Texp_ident "Ppxlib__!.Ast_builder.Default.Located.mk"
                            [
                              <arg>
                                Labelled "loc"
                                expression (src/common.ml[88,2707+37]..src/common.ml[88,2707+40])
                                  Texp_ident "loc/3950"
                              <arg>
                                Nolabel
                                expression (src/common.ml[88,2707+41]..src/common.ml[88,2707+45])
                                  Texp_ident "name/3951"
                            ]
                        ]
                    <case>
                      pattern (src/common.ml[89,2754+4]..src/common.ml[89,2754+5])
                        Tpat_value
                        pattern (src/common.ml[89,2754+4]..src/common.ml[89,2754+5])
                          Tpat_any
                      expression (src/common.ml[89,2754+9]..src/common.ml[89,2754+71])
                        Texp_construct "Error"
                        [
                          expression (src/common.ml[89,2754+15]..src/common.ml[89,2754+71])
                            Texp_tuple
                            [
                              expression (src/common.ml[89,2754+16]..src/common.ml[89,2754+66])
                                Texp_apply
                                expression (src/common.ml[89,2754+16]..src/common.ml[89,2754+38])
                                  Texp_ident "Ppxlib__!.Location.Error.createf"
                                [
                                  <arg>
                                    Labelled "loc"
                                    expression (src/common.ml[89,2754+40]..src/common.ml[89,2754+43])
                                      Texp_ident "loc/3950"
                                  <arg>
                                    Nolabel
                                    expression (src/common.ml[89,2754+44]..src/common.ml[89,2754+66])
                                      Texp_construct "CamlinternalFormatBasics.Format"
                                      [
                                        expression (src/common.ml[89,2754+44]..src/common.ml[89,2754+66]) ghost
                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                          [
                                            expression (src/common.ml[89,2754+44]..src/common.ml[89,2754+66]) ghost
                                              Texp_constant Const_string("not a type parameter",(src/common.ml[89,2754+44]..src/common.ml[89,2754+66]) ghost,None)
                                            expression (src/common.ml[89,2754+44]..src/common.ml[89,2754+66]) ghost
                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                              []
                                          ]
                                        expression (src/common.ml[89,2754+44]..src/common.ml[89,2754+66]) ghost
                                          Texp_constant Const_string("not a type parameter",(src/common.ml[89,2754+44]..src/common.ml[89,2754+66]) ghost,None)
                                      ]
                                ]
                              expression (src/common.ml[89,2754+68]..src/common.ml[89,2754+70])
                                Texp_construct "[]"
                                []
                            ]
                        ]
                  ]
                  []
          ]
    ]
  structure_item (src/common.ml[91,2827+0]..src/common.ml[94,2908+46])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[91,2827+4]..src/common.ml[91,2827+23])
          Tpat_var "get_type_param_name/4742"
        expression (src/common.ml[91,2827+24]..src/common.ml[94,2908+46]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/common.ml[91,2827+24]..src/common.ml[91,2827+25])
                Tpat_var "t/4744"
              expression (src/common.ml[92,2855+2]..src/common.ml[94,2908+46])
                Texp_match
                expression (src/common.ml[92,2855+8]..src/common.ml[92,2855+33])
                  Texp_apply
                  expression (src/common.ml[92,2855+8]..src/common.ml[92,2855+31])
                    Texp_ident "get_type_param_name_res/3947"
                  [
                    <arg>
                      Nolabel
                      expression (src/common.ml[92,2855+32]..src/common.ml[92,2855+33])
                        Texp_ident "t/4744"
                  ]
                [
                  <case>
                    pattern (src/common.ml[93,2894+4]..src/common.ml[93,2894+8])
                      Tpat_value
                      pattern (src/common.ml[93,2894+4]..src/common.ml[93,2894+8])
                        Tpat_construct "Ok"
                        [
                          pattern (src/common.ml[93,2894+7]..src/common.ml[93,2894+8])
                            Tpat_var "e/4745"
                        ]
                    expression (src/common.ml[93,2894+12]..src/common.ml[93,2894+13])
                      Texp_ident "e/4745"
                  <case>
                    pattern (src/common.ml[94,2908+4]..src/common.ml[94,2908+18])
                      Tpat_value
                      pattern (src/common.ml[94,2908+4]..src/common.ml[94,2908+18])
                        Tpat_construct "Error"
                        [
                          pattern (src/common.ml[94,2908+10]..src/common.ml[94,2908+18])
                            Tpat_tuple
                            [
                              pattern (src/common.ml[94,2908+11]..src/common.ml[94,2908+14])
                                Tpat_var "err/4746"
                              pattern (src/common.ml[94,2908+16]..src/common.ml[94,2908+17])
                                Tpat_any
                            ]
                        ]
                    expression (src/common.ml[94,2908+22]..src/common.ml[94,2908+46])
                      Texp_apply
                      expression (src/common.ml[94,2908+22]..src/common.ml[94,2908+42])
                        Texp_ident "Ppxlib__!.Location.Error.raise"
                      [
                        <arg>
                          Nolabel
                          expression (src/common.ml[94,2908+43]..src/common.ml[94,2908+46])
                            Texp_ident "err/4746"
                      ]
                ]
                []
          ]
    ]
  structure_item (src/common.ml[96,2956+0]..src/common.ml[96,2956+27])
    Tstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (src/common.ml[96,2956+0]..src/common.ml[96,2956+27])
          pext_name = "Type_is_recursive/4747"
          pext_kind =
            Text_decl
              []
              None
  structure_item (src/common.ml[98,2985+0]..src/common.ml[128,4078+5])
    Tstr_class
    [
      class_declaration (src/common.ml[98,2985+0]..src/common.ml[128,4078+5])
        pci_virt = Concrete
        pci_params =
          []
        pci_name = "type_is_recursive"
        pci_expr =
          class_expr (src/common.ml[98,2985+24]..src/common.ml[128,4078+5])
            Tcl_fun
            Nolabel
            pattern (src/common.ml[98,2985+24]..src/common.ml[98,2985+32])
              Tpat_var "rec_flag/4752"
            class_expr (src/common.ml[98,2985+33]..src/common.ml[128,4078+5])
              Tcl_fun
              Nolabel
              pattern (src/common.ml[98,2985+33]..src/common.ml[98,2985+36])
                Tpat_var "tds/4754"
              class_expr (src/common.ml[99,3024+2]..src/common.ml[128,4078+5])
                Tcl_structure
                class_structure
                  pattern (_none_[0,0+-1].._none_[0,0+-1]) ghost
                    Tpat_alias "selfpat-1/4758"
                    pattern (_none_[0,0+-1].._none_[0,0+-1]) ghost
                      Tpat_alias "selfpat-*/4757"
                      pattern (src/common.ml[99,3024+9]..src/common.ml[99,3024+15])
                        Tpat_var "self/4756"
                  [
                    class_field (src/common.ml[100,3040+4]..src/common.ml[100,3040+39])
                      Tcf_inherit Fresh
                        class_expr (src/common.ml[100,3040+12]..src/common.ml[100,3040+30])
                          class_expr (src/common.ml[100,3040+12]..src/common.ml[100,3040+30])
                            Tcl_ident "Ppxlib__!.Ast_traverse0.iter"
                            []
                        Some
                          "super"
                    class_field (src/common.ml[101,3080+4]..src/common.ml[101,3080+80])
                      Tcf_val "type_names" Immutable
                        Concrete Fresh
                        expression (src/common.ml[101,3080+35]..src/common.ml[101,3080+80])
                          Texp_constraint
                          core_type (src/common.ml[101,3080+21]..src/common.ml[101,3080+32])
                            Ttyp_constr "list/11!"
                            [
                              core_type (src/common.ml[101,3080+21]..src/common.ml[101,3080+27])
                                Ttyp_constr "string/17!"
                                []
                            ]
                            Texp_apply
                            expression (src/common.ml[101,3080+35]..src/common.ml[101,3080+43])
                              Texp_ident "Ppxlib__!.Import.List.map"
                            [
                              <arg>
                                Nolabel
                                expression (src/common.ml[101,3080+44]..src/common.ml[101,3080+47])
                                  Texp_ident "tds/4754"
                              <arg>
                                Labelled "f"
                                expression (src/common.ml[101,3080+51]..src/common.ml[101,3080+80])
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/common.ml[101,3080+56]..src/common.ml[101,3080+58])
                                        Tpat_var "td/5188"
                                      expression (src/common.ml[101,3080+62]..src/common.ml[101,3080+79])
                                        Texp_field
                                        expression (src/common.ml[101,3080+62]..src/common.ml[101,3080+75])
                                          Texp_field
                                          expression (src/common.ml[101,3080+62]..src/common.ml[101,3080+64])
                                            Texp_ident "td/5188"
                                          "ptype_name"
                                        "txt"
                                  ]
                            ]
                    class_field (src/common.ml[102,3161+4]..src/common.ml[102,3161+59])
                      Tcf_method "return_true" Public
                        Concrete Fresh
                        expression (src/common.ml[102,3161+23]..src/common.ml[102,3161+59]) ghost
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/common.ml[99,3024+9]..src/common.ml[99,3024+15]) ghost
                                Tpat_alias "self-1/5292"
                                pattern (src/common.ml[99,3024+9]..src/common.ml[99,3024+15]) ghost
                                  Tpat_var "self-*/5291"
                              expression (src/common.ml[102,3161+23]..src/common.ml[102,3161+59]) ghost
                                Texp_poly
                                None
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/common.ml[102,3161+23]..src/common.ml[102,3161+25])
                                        Tpat_construct "()"
                                        []
                                      expression (src/common.ml[102,3161+28]..src/common.ml[102,3161+59])
                                        Texp_apply
                                        expression (src/common.ml[102,3161+28]..src/common.ml[102,3161+41])
                                          Texp_ident "Stdlib!.raise_notrace"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/common.ml[102,3161+42]..src/common.ml[102,3161+59])
                                              Texp_construct "Type_is_recursive"
                                              []
                                        ]
                                  ]
                          ]
                    class_field (src/common.ml[104,3222+4]..src/common.ml[110,3444+34])
                      Tcf_method "core_type" Public
                        Concrete Override
                        expression (src/common.ml[104,3222+22]..src/common.ml[110,3444+34]) ghost
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/common.ml[99,3024+9]..src/common.ml[99,3024+15]) ghost
                                Tpat_alias "self-1/5295"
                                pattern (src/common.ml[99,3024+9]..src/common.ml[99,3024+15]) ghost
                                  Tpat_var "self-*/5294"
                              expression (src/common.ml[104,3222+22]..src/common.ml[110,3444+34]) ghost
                                Texp_poly
                                None
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/common.ml[104,3222+22]..src/common.ml[104,3222+27])
                                        Tpat_var "ctype/5296"
                                      expression (src/common.ml[105,3252+6]..src/common.ml[110,3444+34])
                                        Texp_match
                                        expression (src/common.ml[105,3252+12]..src/common.ml[105,3252+27])
                                          Texp_field
                                          expression (src/common.ml[105,3252+12]..src/common.ml[105,3252+17])
                                            Texp_ident "ctype/5296"
                                          "ptyp_desc"
                                        [
                                          <case>
                                            pattern (src/common.ml[106,3285+8]..src/common.ml[106,3285+20])
                                              Tpat_value
                                              pattern (src/common.ml[106,3285+8]..src/common.ml[106,3285+20])
                                                Tpat_construct "Ptyp_arrow"
                                                [
                                                  pattern (src/common.ml[106,3285+19]..src/common.ml[106,3285+20])
                                                    Tpat_any
                                                  pattern (src/common.ml[106,3285+19]..src/common.ml[106,3285+20])
                                                    Tpat_any
                                                  pattern (src/common.ml[106,3285+19]..src/common.ml[106,3285+20])
                                                    Tpat_any
                                                ]
                                            expression (src/common.ml[106,3285+24]..src/common.ml[106,3285+26])
                                              Texp_construct "()"
                                              []
                                          <case>
                                            pattern (src/common.ml[107,3312+8]..src/common.ml[107,3312+57])
                                              Tpat_value
                                              pattern (src/common.ml[107,3312+8]..src/common.ml[107,3312+57])
                                                Tpat_construct "Ptyp_constr"
                                                [
                                                  pattern (src/common.ml[107,3312+21]..src/common.ml[107,3312+53])
                                                    Tpat_record
                                                    [
                                                      "txt"
                                                        pattern (src/common.ml[107,3312+29]..src/common.ml[107,3312+48])
                                                          Tpat_construct "Longident.Lident"
                                                          [
                                                            pattern (src/common.ml[107,3312+46]..src/common.ml[107,3312+48])
                                                              Tpat_var "id/5297"
                                                          ]
                                                    ]
                                                  pattern (src/common.ml[107,3312+55]..src/common.ml[107,3312+56])
                                                    Tpat_any
                                                ]
                                            <when>
                                              expression (src/common.ml[108,3370+13]..src/common.ml[108,3370+40])
                                                Texp_apply
                                                expression (src/common.ml[108,3370+13]..src/common.ml[108,3370+21])
                                                  Texp_ident "Ppxlib__!.Import.List.mem"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/common.ml[108,3370+38]..src/common.ml[108,3370+40])
                                                      Texp_ident "id/5297"
                                                  <arg>
                                                    Labelled "set"
                                                    expression (src/common.ml[108,3370+27]..src/common.ml[108,3370+37])
                                                      Texp_instvar "type_names/5191"
                                                ]
                                            expression (src/common.ml[109,3414+10]..src/common.ml[109,3414+29])
                                              Texp_apply
                                              expression (src/common.ml[109,3414+10]..src/common.ml[109,3414+26])
                                                Texp_send "return_true/5192"
                                                expression (src/common.ml[109,3414+10]..src/common.ml[109,3414+14])
                                                  Texp_ident "self-1/5295"
                                                None
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/common.ml[109,3414+27]..src/common.ml[109,3414+29])
                                                    Texp_construct "()"
                                                    []
                                              ]
                                          <case>
                                            pattern (src/common.ml[110,3444+8]..src/common.ml[110,3444+9])
                                              Tpat_value
                                              pattern (src/common.ml[110,3444+8]..src/common.ml[110,3444+9])
                                                Tpat_any
                                            expression (src/common.ml[110,3444+13]..src/common.ml[110,3444+34])
                                              Texp_apply
                                              expression (src/common.ml[110,3444+13]..src/common.ml[110,3444+28])
                                                Texp_send "core_type"
                                                expression (src/common.ml[110,3444+13]..src/common.ml[110,3444+18])
                                                  Texp_ident "super/5187"
                                                Some
                                                  expression (src/common.ml[110,3444+13]..src/common.ml[110,3444+28])
                                                    Texp_apply
                                                    expression (src/common.ml[110,3444+13]..src/common.ml[110,3444+28])
                                                      Texp_ident "core_type/5117"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/common.ml[110,3444+13]..src/common.ml[110,3444+18])
                                                          Texp_ident "self-1/5295"
                                                    ]
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/common.ml[110,3444+29]..src/common.ml[110,3444+34])
                                                    Texp_ident "ctype/5296"
                                              ]
                                        ]
                                        []
                                  ]
                          ]
                    class_field (src/common.ml[112,3480+4]..src/common.ml[116,3656+73])
                      Tcf_method "constructor_declaration" Public
                        Concrete Override
                        expression (src/common.ml[112,3480+36]..src/common.ml[116,3656+73]) ghost
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/common.ml[99,3024+9]..src/common.ml[99,3024+15]) ghost
                                Tpat_alias "self-1/5299"
                                pattern (src/common.ml[99,3024+9]..src/common.ml[99,3024+15]) ghost
                                  Tpat_var "self-*/5298"
                              expression (src/common.ml[112,3480+36]..src/common.ml[116,3656+73]) ghost
                                Texp_poly
                                None
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/common.ml[112,3480+36]..src/common.ml[112,3480+38])
                                        Tpat_var "cd/5300"
                                      expression (src/common.ml[114,3566+6]..src/common.ml[116,3656+73])
                                        Texp_match
                                        expression (src/common.ml[114,3566+12]..src/common.ml[114,3566+23])
                                          Texp_field
                                          expression (src/common.ml[114,3566+12]..src/common.ml[114,3566+14])
                                            Texp_ident "cd/5300"
                                          "pcd_args"
                                        [
                                          <case>
                                            pattern (src/common.ml[115,3595+8]..src/common.ml[115,3595+24])
                                              Tpat_value
                                              pattern (src/common.ml[115,3595+8]..src/common.ml[115,3595+24])
                                                Tpat_construct "Pcstr_tuple"
                                                [
                                                  pattern (src/common.ml[115,3595+20]..src/common.ml[115,3595+24])
                                                    Tpat_var "args/5301"
                                                ]
                                            expression (src/common.ml[115,3595+28]..src/common.ml[115,3595+60])
                                              Texp_apply
                                              expression (src/common.ml[115,3595+28]..src/common.ml[115,3595+37])
                                                Texp_ident "Ppxlib__!.Import.List.iter"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/common.ml[115,3595+38]..src/common.ml[115,3595+42])
                                                    Texp_ident "args/5301"
                                                <arg>
                                                  Labelled "f"
                                                  expression (src/common.ml[115,3595+46]..src/common.ml[115,3595+60])
                                                    Texp_send "core_type/5193"
                                                    expression (src/common.ml[115,3595+46]..src/common.ml[115,3595+50])
                                                      Texp_ident "self-1/5299"
                                                    None
                                              ]
                                          <case>
                                            pattern (src/common.ml[116,3656+8]..src/common.ml[116,3656+27])
                                              Tpat_value
                                              pattern (src/common.ml[116,3656+8]..src/common.ml[116,3656+27])
                                                Tpat_construct "Pcstr_record"
                                                [
                                                  pattern (src/common.ml[116,3656+21]..src/common.ml[116,3656+27])
                                                    Tpat_var "fields/5302"
                                                ]
                                            expression (src/common.ml[116,3656+31]..src/common.ml[116,3656+73])
                                              Texp_apply
                                              expression (src/common.ml[116,3656+31]..src/common.ml[116,3656+40])
                                                Texp_ident "Ppxlib__!.Import.List.iter"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/common.ml[116,3656+41]..src/common.ml[116,3656+47])
                                                    Texp_ident "fields/5302"
                                                <arg>
                                                  Labelled "f"
                                                  expression (src/common.ml[116,3656+51]..src/common.ml[116,3656+73])
                                                    Texp_send "label_declaration/5240"
                                                    expression (src/common.ml[116,3656+51]..src/common.ml[116,3656+55])
                                                      Texp_ident "self-1/5299"
                                                    None
                                              ]
                                        ]
                                        []
                                  ]
                          ]
                    class_field (src/common.ml[118,3731+4]..src/common.ml[119,3797+29])
                      Tcf_method "attributes" Public
                        Concrete Override
                        expression (src/common.ml[118,3731+23]..src/common.ml[119,3797+29]) ghost
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/common.ml[99,3024+9]..src/common.ml[99,3024+15]) ghost
                                Tpat_alias "self-1/5304"
                                pattern (src/common.ml[99,3024+9]..src/common.ml[99,3024+15]) ghost
                                  Tpat_var "self-*/5303"
                              expression (src/common.ml[118,3731+23]..src/common.ml[119,3797+29]) ghost
                                Texp_poly
                                None
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/common.ml[118,3731+23]..src/common.ml[118,3731+24])
                                        Tpat_any
                                      expression (src/common.ml[119,3797+27]..src/common.ml[119,3797+29])
                                        Texp_construct "()"
                                        []
                                  ]
                          ]
                    class_field (src/common.ml[121,3828+4]..src/common.ml[127,4046+31])
                      Tcf_method "go" Public
                        Concrete Fresh
                        expression (src/common.ml[121,3828+14]..src/common.ml[127,4046+31]) ghost
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/common.ml[99,3024+9]..src/common.ml[99,3024+15]) ghost
                                Tpat_alias "self-1/5307"
                                pattern (src/common.ml[99,3024+9]..src/common.ml[99,3024+15]) ghost
                                  Tpat_var "self-*/5306"
                              expression (src/common.ml[121,3828+14]..src/common.ml[127,4046+31]) ghost
                                Texp_poly
                                None
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/common.ml[121,3828+14]..src/common.ml[121,3828+16])
                                        Tpat_construct "()"
                                        []
                                      expression (src/common.ml[122,3847+6]..src/common.ml[127,4046+31])
                                        Texp_match
                                        expression (src/common.ml[122,3847+12]..src/common.ml[122,3847+20])
                                          Texp_instvar "rec_flag/4753"
                                        [
                                          <case>
                                            pattern (src/common.ml[123,3873+8]..src/common.ml[123,3873+20])
                                              Tpat_value
                                              pattern (src/common.ml[123,3873+8]..src/common.ml[123,3873+20])
                                                Tpat_construct "Nonrecursive"
                                                []
                                            expression (src/common.ml[123,3873+24]..src/common.ml[123,3873+36])
                                              Texp_construct "Nonrecursive"
                                              []
                                          <case>
                                            pattern (src/common.ml[124,3910+8]..src/common.ml[124,3910+17])
                                              Tpat_value
                                              pattern (src/common.ml[124,3910+8]..src/common.ml[124,3910+17])
                                                Tpat_construct "Recursive"
                                                []
                                            expression (src/common.ml[124,3910+21]..src/common.ml[127,4046+31])
                                              Texp_match
                                              expression (src/common.ml[125,3933+16]..src/common.ml[125,3933+54])
                                                Texp_apply
                                                expression (src/common.ml[125,3933+16]..src/common.ml[125,3933+25])
                                                  Texp_ident "Ppxlib__!.Import.List.iter"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/common.ml[125,3933+26]..src/common.ml[125,3933+29])
                                                      Texp_instvar "tds/4755"
                                                  <arg>
                                                    Labelled "f"
                                                    expression (src/common.ml[125,3933+33]..src/common.ml[125,3933+54])
                                                      Texp_send "type_declaration/5282"
                                                      expression (src/common.ml[125,3933+33]..src/common.ml[125,3933+37])
                                                        Texp_ident "self-1/5307"
                                                      None
                                                ]
                                              [
                                                <case>
                                                  pattern (src/common.ml[126,3993+12]..src/common.ml[126,3993+39])
                                                    Tpat_exception
                                                    pattern (src/common.ml[126,3993+22]..src/common.ml[126,3993+39])
                                                      Tpat_construct "Type_is_recursive"
                                                      []
                                                  expression (src/common.ml[126,3993+43]..src/common.ml[126,3993+52])
                                                    Texp_construct "Recursive"
                                                    []
                                                <case>
                                                  pattern (src/common.ml[127,4046+12]..src/common.ml[127,4046+14])
                                                    Tpat_value
                                                    pattern (src/common.ml[127,4046+12]..src/common.ml[127,4046+14])
                                                      Tpat_construct "()"
                                                      []
                                                  expression (src/common.ml[127,4046+18]..src/common.ml[127,4046+30])
                                                    Texp_construct "Nonrecursive"
                                                    []
                                              ]
                                              []
                                        ]
                                        []
                                  ]
                          ]
                  ]
    ]
  structure_item (src/common.ml[130,4085+0]..src/common.ml[130,4085+78])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[130,4085+4]..src/common.ml[130,4085+20])
          Tpat_var "really_recursive/5309"
        expression (src/common.ml[130,4085+21]..src/common.ml[130,4085+78]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/common.ml[130,4085+21]..src/common.ml[130,4085+29])
                Tpat_var "rec_flag/5311"
              expression (src/common.ml[130,4085+30]..src/common.ml[130,4085+78]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/common.ml[130,4085+30]..src/common.ml[130,4085+33])
                      Tpat_var "tds/5312"
                    expression (src/common.ml[130,4085+36]..src/common.ml[130,4085+78])
                      Texp_apply
                      expression (src/common.ml[130,4085+36]..src/common.ml[130,4085+75])
                        Texp_send "go"
                        expression (src/common.ml[130,4085+36]..src/common.ml[130,4085+72])
                          Texp_apply
                          expression (src/common.ml[130,4085+37]..src/common.ml[130,4085+58])
                            Texp_new "type_is_recursive/4751"
                          [
                            <arg>
                              Nolabel
                              expression (src/common.ml[130,4085+59]..src/common.ml[130,4085+67])
                                Texp_ident "rec_flag/5311"
                            <arg>
                              Nolabel
                              expression (src/common.ml[130,4085+68]..src/common.ml[130,4085+71])
                                Texp_ident "tds/5312"
                          ]
                        None
                      [
                        <arg>
                          Nolabel
                          expression (src/common.ml[130,4085+76]..src/common.ml[130,4085+78])
                            Texp_construct "()"
                            []
                      ]
                ]
          ]
    ]
  structure_item (src/common.ml[131,4164+0]..src/common.ml[131,4164+60])
    Tstr_value Rec
    [
      <def>
        pattern (src/common.ml[131,4164+8]..src/common.ml[131,4164+12])
          Tpat_var "last/5313"
        expression (src/common.ml[131,4164+13]..src/common.ml[131,4164+60]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/common.ml[131,4164+13]..src/common.ml[131,4164+14])
                Tpat_var "x/5314"
              expression (src/common.ml[131,4164+15]..src/common.ml[131,4164+60]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/common.ml[131,4164+15]..src/common.ml[131,4164+16])
                      Tpat_var "l/5315"
                    expression (src/common.ml[131,4164+19]..src/common.ml[131,4164+60])
                      Texp_match
                      expression (src/common.ml[131,4164+25]..src/common.ml[131,4164+26])
                        Texp_ident "l/5315"
                      [
                        <case>
                          pattern (src/common.ml[131,4164+32]..src/common.ml[131,4164+34])
                            Tpat_value
                            pattern (src/common.ml[131,4164+32]..src/common.ml[131,4164+34])
                              Tpat_construct "[]"
                              []
                          expression (src/common.ml[131,4164+38]..src/common.ml[131,4164+39])
                            Texp_ident "x/5314"
                        <case>
                          pattern (src/common.ml[131,4164+42]..src/common.ml[131,4164+48])
                            Tpat_value
                            pattern (src/common.ml[131,4164+42]..src/common.ml[131,4164+48])
                              Tpat_construct "::"
                              [
                                pattern (src/common.ml[131,4164+42]..src/common.ml[131,4164+43])
                                  Tpat_var "x/5316"
                                pattern (src/common.ml[131,4164+47]..src/common.ml[131,4164+48])
                                  Tpat_var "l/5317"
                              ]
                          expression (src/common.ml[131,4164+52]..src/common.ml[131,4164+60])
                            Texp_apply
                            expression (src/common.ml[131,4164+52]..src/common.ml[131,4164+56])
                              Texp_ident "last/5313"
                            [
                              <arg>
                                Nolabel
                                expression (src/common.ml[131,4164+57]..src/common.ml[131,4164+58])
                                  Texp_ident "x/5316"
                              <arg>
                                Nolabel
                                expression (src/common.ml[131,4164+59]..src/common.ml[131,4164+60])
                                  Texp_ident "l/5317"
                            ]
                      ]
                      []
                ]
          ]
    ]
  structure_item (src/common.ml[133,4226+0]..src/common.ml[141,4554+72])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[133,4226+4]..src/common.ml[133,4226+27])
          Tpat_var "loc_of_name_and_payload/5318"
        expression (src/common.ml[133,4226+28]..src/common.ml[141,4554+72]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/common.ml[133,4226+28]..src/common.ml[133,4226+32])
                Tpat_var "name/5320"
              expression (src/common.ml[133,4226+33]..src/common.ml[141,4554+72]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/common.ml[133,4226+33]..src/common.ml[133,4226+40])
                      Tpat_var "payload/5321"
                    expression (src/common.ml[134,4269+2]..src/common.ml[141,4554+72])
                      Texp_match
                      expression (src/common.ml[134,4269+8]..src/common.ml[134,4269+15])
                        Texp_ident "payload/5321"
                      [
                        <case>
                          pattern (src/common.ml[135,4290+4]..src/common.ml[135,4290+11])
                            Tpat_value
                            pattern (src/common.ml[135,4290+4]..src/common.ml[135,4290+11])
                              Tpat_construct "PStr"
                              [
                                pattern (src/common.ml[135,4290+9]..src/common.ml[135,4290+11])
                                  Tpat_construct "[]"
                                  []
                              ]
                          expression (src/common.ml[135,4290+15]..src/common.ml[135,4290+23])
                            Texp_field
                            expression (src/common.ml[135,4290+15]..src/common.ml[135,4290+19])
                              Texp_ident "name/5320"
                            "loc"
                        <case>
                          pattern (src/common.ml[136,4314+4]..src/common.ml[136,4314+17])
                            Tpat_value
                            pattern (src/common.ml[136,4314+4]..src/common.ml[136,4314+17])
                              Tpat_construct "PStr"
                              [
                                pattern (src/common.ml[136,4314+9]..src/common.ml[136,4314+17])
                                  Tpat_construct "::"
                                  [
                                    pattern (src/common.ml[136,4314+10]..src/common.ml[136,4314+11])
                                      Tpat_var "x/5322"
                                    pattern (src/common.ml[136,4314+15]..src/common.ml[136,4314+16])
                                      Tpat_var "l/5323"
                                  ]
                              ]
                          expression (src/common.ml[136,4314+21]..src/common.ml[136,4314+78])
                            Texp_record
                              fields =
                                [
                                  <kept>                                  "loc_end"
                                    expression (src/common.ml[136,4314+49]..src/common.ml[136,4314+76])
                                      Texp_field
                                      expression (src/common.ml[136,4314+49]..src/common.ml[136,4314+68])
                                        Texp_field
                                        expression (src/common.ml[136,4314+49]..src/common.ml[136,4314+59])
                                          Texp_apply
                                          expression (src/common.ml[136,4314+50]..src/common.ml[136,4314+54])
                                            Texp_ident "last/5313"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/common.ml[136,4314+55]..src/common.ml[136,4314+56])
                                                Texp_ident "x/5322"
                                            <arg>
                                              Nolabel
                                              expression (src/common.ml[136,4314+57]..src/common.ml[136,4314+58])
                                                Texp_ident "l/5323"
                                          ]
                                        "pstr_loc"
                                      "loc_end"
                                  <kept>                                ]
                              representation =
                                Record_regular
                              extended_expression =
                                Some
                                  expression (src/common.ml[136,4314+23]..src/common.ml[136,4314+33])
                                    Texp_field
                                    expression (src/common.ml[136,4314+23]..src/common.ml[136,4314+24])
                                      Texp_ident "x/5322"
                                    "pstr_loc"
                        <case>
                          pattern (src/common.ml[137,4393+4]..src/common.ml[137,4393+11])
                            Tpat_value
                            pattern (src/common.ml[137,4393+4]..src/common.ml[137,4393+11])
                              Tpat_construct "PSig"
                              [
                                pattern (src/common.ml[137,4393+9]..src/common.ml[137,4393+11])
                                  Tpat_construct "[]"
                                  []
                              ]
                          expression (src/common.ml[137,4393+15]..src/common.ml[137,4393+23])
                            Texp_field
                            expression (src/common.ml[137,4393+15]..src/common.ml[137,4393+19])
                              Texp_ident "name/5320"
                            "loc"
                        <case>
                          pattern (src/common.ml[138,4417+4]..src/common.ml[138,4417+17])
                            Tpat_value
                            pattern (src/common.ml[138,4417+4]..src/common.ml[138,4417+17])
                              Tpat_construct "PSig"
                              [
                                pattern (src/common.ml[138,4417+9]..src/common.ml[138,4417+17])
                                  Tpat_construct "::"
                                  [
                                    pattern (src/common.ml[138,4417+10]..src/common.ml[138,4417+11])
                                      Tpat_var "x/5324"
                                    pattern (src/common.ml[138,4417+15]..src/common.ml[138,4417+16])
                                      Tpat_var "l/5325"
                                  ]
                              ]
                          expression (src/common.ml[138,4417+21]..src/common.ml[138,4417+78])
                            Texp_record
                              fields =
                                [
                                  <kept>                                  "loc_end"
                                    expression (src/common.ml[138,4417+49]..src/common.ml[138,4417+76])
                                      Texp_field
                                      expression (src/common.ml[138,4417+49]..src/common.ml[138,4417+68])
                                        Texp_field
                                        expression (src/common.ml[138,4417+49]..src/common.ml[138,4417+59])
                                          Texp_apply
                                          expression (src/common.ml[138,4417+50]..src/common.ml[138,4417+54])
                                            Texp_ident "last/5313"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/common.ml[138,4417+55]..src/common.ml[138,4417+56])
                                                Texp_ident "x/5324"
                                            <arg>
                                              Nolabel
                                              expression (src/common.ml[138,4417+57]..src/common.ml[138,4417+58])
                                                Texp_ident "l/5325"
                                          ]
                                        "psig_loc"
                                      "loc_end"
                                  <kept>                                ]
                              representation =
                                Record_regular
                              extended_expression =
                                Some
                                  expression (src/common.ml[138,4417+23]..src/common.ml[138,4417+33])
                                    Texp_field
                                    expression (src/common.ml[138,4417+23]..src/common.ml[138,4417+24])
                                      Texp_ident "x/5324"
                                    "psig_loc"
                        <case>
                          pattern (src/common.ml[139,4496+4]..src/common.ml[139,4496+10])
                            Tpat_value
                            pattern (src/common.ml[139,4496+4]..src/common.ml[139,4496+10])
                              Tpat_construct "PTyp"
                              [
                                pattern (src/common.ml[139,4496+9]..src/common.ml[139,4496+10])
                                  Tpat_var "t/5326"
                              ]
                          expression (src/common.ml[139,4496+14]..src/common.ml[139,4496+24])
                            Texp_field
                            expression (src/common.ml[139,4496+14]..src/common.ml[139,4496+15])
                              Texp_ident "t/5326"
                            "ptyp_loc"
                        <case>
                          pattern (src/common.ml[140,4521+4]..src/common.ml[140,4521+18])
                            Tpat_value
                            pattern (src/common.ml[140,4521+4]..src/common.ml[140,4521+18])
                              Tpat_construct "PPat"
                              [
                                pattern (src/common.ml[140,4521+10]..src/common.ml[140,4521+11])
                                  Tpat_var "x/5327"
                                pattern (src/common.ml[140,4521+13]..src/common.ml[140,4521+17])
                                  Tpat_construct "None"
                                  []
                              ]
                          expression (src/common.ml[140,4521+22]..src/common.ml[140,4521+32])
                            Texp_field
                            expression (src/common.ml[140,4521+22]..src/common.ml[140,4521+23])
                              Texp_ident "x/5327"
                            "ppat_loc"
                        <case>
                          pattern (src/common.ml[141,4554+4]..src/common.ml[141,4554+20])
                            Tpat_value
                            pattern (src/common.ml[141,4554+4]..src/common.ml[141,4554+20])
                              Tpat_construct "PPat"
                              [
                                pattern (src/common.ml[141,4554+10]..src/common.ml[141,4554+11])
                                  Tpat_var "x/5328"
                                pattern (src/common.ml[141,4554+13]..src/common.ml[141,4554+19])
                                  Tpat_construct "Some"
                                  [
                                    pattern (src/common.ml[141,4554+18]..src/common.ml[141,4554+19])
                                      Tpat_var "e/5329"
                                  ]
                              ]
                          expression (src/common.ml[141,4554+24]..src/common.ml[141,4554+72])
                            Texp_record
                              fields =
                                [
                                  <kept>                                  "loc_end"
                                    expression (src/common.ml[141,4554+52]..src/common.ml[141,4554+70])
                                      Texp_field
                                      expression (src/common.ml[141,4554+52]..src/common.ml[141,4554+62])
                                        Texp_field
                                        expression (src/common.ml[141,4554+52]..src/common.ml[141,4554+53])
                                          Texp_ident "e/5329"
                                        "pexp_loc"
                                      "loc_end"
                                  <kept>                                ]
                              representation =
                                Record_regular
                              extended_expression =
                                Some
                                  expression (src/common.ml[141,4554+26]..src/common.ml[141,4554+36])
                                    Texp_field
                                    expression (src/common.ml[141,4554+26]..src/common.ml[141,4554+27])
                                      Texp_ident "x/5328"
                                    "ppat_loc"
                      ]
                      []
                ]
          ]
    ]
  structure_item (src/common.ml[143,4628+0]..src/common.ml[144,4691+48])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[143,4628+4]..src/common.ml[143,4628+18])
          Tpat_var "loc_of_payload/5360"
        expression (src/common.ml[143,4628+19]..src/common.ml[144,4691+48]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/common.ml[143,4628+19]..src/common.ml[143,4628+60])
                Tpat_record
                [
                  "attr_name"
                    pattern (src/common.ml[143,4628+21]..src/common.ml[143,4628+30])
                      Tpat_var "attr_name/5362"
                  "attr_payload"
                    pattern (src/common.ml[143,4628+32]..src/common.ml[143,4628+44])
                      Tpat_var "attr_payload/5363"
                  "attr_loc"
                    pattern (src/common.ml[143,4628+57]..src/common.ml[143,4628+58])
                      Tpat_any
                ]
              expression (src/common.ml[144,4691+2]..src/common.ml[144,4691+48])
                Texp_apply
                expression (src/common.ml[144,4691+2]..src/common.ml[144,4691+25])
                  Texp_ident "loc_of_name_and_payload/5318"
                [
                  <arg>
                    Nolabel
                    expression (src/common.ml[144,4691+26]..src/common.ml[144,4691+35])
                      Texp_ident "attr_name/5362"
                  <arg>
                    Nolabel
                    expression (src/common.ml[144,4691+36]..src/common.ml[144,4691+48])
                      Texp_ident "attr_payload/5363"
                ]
          ]
    ]
  structure_item (src/common.ml[146,4741+0]..src/common.ml[157,5235+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[146,4741+4]..src/common.ml[146,4741+20])
          Tpat_var "loc_of_attribute/5365"
        expression (src/common.ml[146,4741+21]..src/common.ml[157,5235+5]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/common.ml[146,4741+21]..src/common.ml[146,4741+62])
                Tpat_record
                [
                  "attr_name"
                    pattern (src/common.ml[146,4741+23]..src/common.ml[146,4741+32])
                      Tpat_var "attr_name/5367"
                  "attr_payload"
                    pattern (src/common.ml[146,4741+34]..src/common.ml[146,4741+46])
                      Tpat_var "attr_payload/5368"
                  "attr_loc"
                    pattern (src/common.ml[146,4741+59]..src/common.ml[146,4741+60])
                      Tpat_any
                ]
              expression (src/common.ml[151,5023+2]..src/common.ml[157,5235+5])
                Texp_ifthenelse
                expression (src/common.ml[151,5023+5]..src/common.ml[151,5023+43])
                  Texp_apply
                  expression (src/common.ml[151,5023+5]..src/common.ml[151,5023+15])
                    Texp_ident "Ppxlib__!.Import.Poly.="
                  [
                    <arg>
                      Nolabel
                      expression (src/common.ml[151,5023+16]..src/common.ml[151,5023+29])
                        Texp_field
                        expression (src/common.ml[151,5023+16]..src/common.ml[151,5023+25])
                          Texp_ident "attr_name/5367"
                        "loc"
                    <arg>
                      Nolabel
                      expression (src/common.ml[151,5023+30]..src/common.ml[151,5023+43])
                        Texp_ident "Ppxlib__!.Location.none"
                  ]
                expression (src/common.ml[152,5072+4]..src/common.ml[152,5072+50])
                  Texp_apply
                  expression (src/common.ml[152,5072+4]..src/common.ml[152,5072+27])
                    Texp_ident "loc_of_name_and_payload/5318"
                  [
                    <arg>
                      Nolabel
                      expression (src/common.ml[152,5072+28]..src/common.ml[152,5072+37])
                        Texp_ident "attr_name/5367"
                    <arg>
                      Nolabel
                      expression (src/common.ml[152,5072+38]..src/common.ml[152,5072+50])
                        Texp_ident "attr_payload/5368"
                  ]
                Some
                  expression (src/common.ml[154,5130+4]..src/common.ml[157,5235+5])
                    Texp_record
                      fields =
                        [
                          <kept>                          "loc_end"
                            expression (src/common.ml[156,5161+16]..src/common.ml[156,5161+72])
                              Texp_field
                              expression (src/common.ml[156,5161+16]..src/common.ml[156,5161+64])
                                Texp_apply
                                expression (src/common.ml[156,5161+17]..src/common.ml[156,5161+40])
                                  Texp_ident "loc_of_name_and_payload/5318"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/common.ml[156,5161+41]..src/common.ml[156,5161+50])
                                      Texp_ident "attr_name/5367"
                                  <arg>
                                    Nolabel
                                    expression (src/common.ml[156,5161+51]..src/common.ml[156,5161+63])
                                      Texp_ident "attr_payload/5368"
                                ]
                              "loc_end"
                          <kept>                        ]
                      representation =
                        Record_regular
                      extended_expression =
                        Some
                          expression (src/common.ml[155,5136+6]..src/common.ml[155,5136+19])
                            Texp_field
                            expression (src/common.ml[155,5136+6]..src/common.ml[155,5136+15])
                              Texp_ident "attr_name/5367"
                            "loc"
          ]
    ]
  structure_item (src/common.ml[159,5242+0]..src/common.ml[162,5369+78])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[159,5242+4]..src/common.ml[159,5242+20])
          Tpat_var "loc_of_extension/5380"
        expression (src/common.ml[159,5242+21]..src/common.ml[162,5369+78]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/common.ml[159,5242+21]..src/common.ml[159,5242+36])
                Tpat_tuple
                [
                  pattern (src/common.ml[159,5242+22]..src/common.ml[159,5242+26])
                    Tpat_var "name/5382"
                  pattern (src/common.ml[159,5242+28]..src/common.ml[159,5242+35])
                    Tpat_var "payload/5383"
                ]
              expression (src/common.ml[160,5281+2]..src/common.ml[162,5369+78])
                Texp_ifthenelse
                expression (src/common.ml[160,5281+5]..src/common.ml[160,5281+38])
                  Texp_apply
                  expression (src/common.ml[160,5281+5]..src/common.ml[160,5281+15])
                    Texp_ident "Ppxlib__!.Import.Poly.="
                  [
                    <arg>
                      Nolabel
                      expression (src/common.ml[160,5281+16]..src/common.ml[160,5281+24])
                        Texp_field
                        expression (src/common.ml[160,5281+16]..src/common.ml[160,5281+20])
                          Texp_ident "name/5382"
                        "loc"
                    <arg>
                      Nolabel
                      expression (src/common.ml[160,5281+25]..src/common.ml[160,5281+38])
                        Texp_ident "Ppxlib__!.Location.none"
                  ]
                expression (src/common.ml[160,5281+44]..src/common.ml[160,5281+80])
                  Texp_apply
                  expression (src/common.ml[160,5281+44]..src/common.ml[160,5281+67])
                    Texp_ident "loc_of_name_and_payload/5318"
                  [
                    <arg>
                      Nolabel
                      expression (src/common.ml[160,5281+68]..src/common.ml[160,5281+72])
                        Texp_ident "name/5382"
                    <arg>
                      Nolabel
                      expression (src/common.ml[160,5281+73]..src/common.ml[160,5281+80])
                        Texp_ident "payload/5383"
                  ]
                Some
                  expression (src/common.ml[162,5369+4]..src/common.ml[162,5369+78])
                    Texp_record
                      fields =
                        [
                          <kept>                          "loc_end"
                            expression (src/common.ml[162,5369+30]..src/common.ml[162,5369+76])
                              Texp_field
                              expression (src/common.ml[162,5369+30]..src/common.ml[162,5369+68])
                                Texp_apply
                                expression (src/common.ml[162,5369+31]..src/common.ml[162,5369+54])
                                  Texp_ident "loc_of_name_and_payload/5318"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/common.ml[162,5369+55]..src/common.ml[162,5369+59])
                                      Texp_ident "name/5382"
                                  <arg>
                                    Nolabel
                                    expression (src/common.ml[162,5369+60]..src/common.ml[162,5369+67])
                                      Texp_ident "payload/5383"
                                ]
                              "loc_end"
                          <kept>                        ]
                      representation =
                        Record_regular
                      extended_expression =
                        Some
                          expression (src/common.ml[162,5369+6]..src/common.ml[162,5369+14])
                            Texp_field
                            expression (src/common.ml[162,5369+6]..src/common.ml[162,5369+10])
                              Texp_ident "name/5382"
                            "loc"
          ]
    ]
  structure_item (src/common.ml[164,5449+0]..src/common.ml[175,5819+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[164,5449+4]..src/common.ml[164,5449+22])
          Tpat_var "curry_applications/5385"
        expression (src/common.ml[164,5449+23]..src/common.ml[175,5819+13]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/common.ml[164,5449+23]..src/common.ml[164,5449+27])
                Tpat_var "expr/5387"
              expression (src/common.ml[165,5479+2]..src/common.ml[175,5819+13])
                Texp_open Fresh
                module_expr (src/common.ml[165,5479+11]..src/common.ml[165,5479+34])
                  Tmod_ident "Ppxlib__!.Ast_builder_generated.M"
                expression (src/common.ml[166,5517+2]..src/common.ml[175,5819+13])
                  Texp_match
                  expression (src/common.ml[166,5517+8]..src/common.ml[166,5517+22])
                    Texp_field
                    expression (src/common.ml[166,5517+8]..src/common.ml[166,5517+12])
                      Texp_ident "expr/5387"
                    "pexp_desc"
                  [
                    <case>
                      pattern (src/common.ml[167,5545+4]..src/common.ml[167,5545+37])
                        Tpat_value
                        pattern (src/common.ml[167,5545+4]..src/common.ml[167,5545+37])
                          Tpat_construct "Pexp_apply"
                          [
                            pattern (src/common.ml[167,5545+16]..src/common.ml[167,5545+17])
                              Tpat_var "f/5907"
                            pattern (src/common.ml[167,5545+19]..src/common.ml[167,5545+36])
                              Tpat_var "orig_forward_args/5908"
                          ]
                      expression (src/common.ml[168,5586+6]..src/common.ml[174,5779+39])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/common.ml[168,5586+10]..src/common.ml[168,5586+13])
                              Tpat_var "loc/5909"
                            expression (src/common.ml[168,5586+16]..src/common.ml[168,5586+29])
                              Texp_field
                              expression (src/common.ml[168,5586+16]..src/common.ml[168,5586+20])
                                Texp_ident "expr/5387"
                              "pexp_loc"
                        ]
                        expression (src/common.ml[169,5619+6]..src/common.ml[174,5779+39])
                          Texp_let Rec
                          [
                            <def>
                              pattern (src/common.ml[169,5619+14]..src/common.ml[169,5619+18])
                                Tpat_var "loop/5910"
                              expression (src/common.ml[169,5619+21]..src/common.ml[172,5707+62])
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/common.ml[170,5649+10]..src/common.ml[170,5649+12])
                                      Tpat_construct "[]"
                                      []
                                    expression (src/common.ml[170,5649+16]..src/common.ml[170,5649+17])
                                      Texp_ident "f/5907"
                                  <case>
                                    pattern (src/common.ml[171,5667+10]..src/common.ml[171,5667+36])
                                      Tpat_construct "::"
                                      [
                                        pattern (src/common.ml[171,5667+10]..src/common.ml[171,5667+18])
                                          Tpat_var "last_arg/5911"
                                        pattern (src/common.ml[171,5667+22]..src/common.ml[171,5667+36])
                                          Tpat_var "rev_front_args/5912"
                                      ]
                                    expression (src/common.ml[172,5707+12]..src/common.ml[172,5707+62])
                                      Texp_apply
                                      expression (src/common.ml[172,5707+12]..src/common.ml[172,5707+22])
                                        Texp_ident "Ppxlib__!.Ast_builder_generated.M.pexp_apply"
                                      [
                                        <arg>
                                          Labelled "loc"
                                          expression (src/common.ml[172,5707+24]..src/common.ml[172,5707+27])
                                            Texp_ident "loc/5909"
                                        <arg>
                                          Nolabel
                                          expression (src/common.ml[172,5707+28]..src/common.ml[172,5707+49])
                                            Texp_apply
                                            expression (src/common.ml[172,5707+29]..src/common.ml[172,5707+33])
                                              Texp_ident "loop/5910"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/common.ml[172,5707+34]..src/common.ml[172,5707+48])
                                                  Texp_ident "rev_front_args/5912"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/common.ml[172,5707+50]..src/common.ml[172,5707+62])
                                            Texp_construct "::"
                                            [
                                              expression (src/common.ml[172,5707+52]..src/common.ml[172,5707+60])
                                                Texp_ident "last_arg/5911"
                                              expression (src/common.ml[172,5707+61]..src/common.ml[172,5707+62]) ghost
                                                Texp_construct "[]"
                                                []
                                            ]
                                      ]
                                ]
                          ]
                          expression (src/common.ml[174,5779+6]..src/common.ml[174,5779+39])
                            Texp_apply
                            expression (src/common.ml[174,5779+6]..src/common.ml[174,5779+10])
                              Texp_ident "loop/5910"
                            [
                              <arg>
                                Nolabel
                                expression (src/common.ml[174,5779+11]..src/common.ml[174,5779+39])
                                  Texp_apply
                                  expression (src/common.ml[174,5779+12]..src/common.ml[174,5779+20])
                                    Texp_ident "Ppxlib__!.Import.List.rev"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/common.ml[174,5779+21]..src/common.ml[174,5779+38])
                                        Texp_ident "orig_forward_args/5908"
                                  ]
                            ]
                    <case>
                      pattern (src/common.ml[175,5819+4]..src/common.ml[175,5819+5])
                        Tpat_value
                        pattern (src/common.ml[175,5819+4]..src/common.ml[175,5819+5])
                          Tpat_any
                      expression (src/common.ml[175,5819+9]..src/common.ml[175,5819+13])
                        Texp_ident "expr/5387"
                  ]
                  []
          ]
    ]
  structure_item (src/common.ml[177,5834+0]..src/common.ml[184,6069+73])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[177,5834+4]..src/common.ml[177,5834+21])
          Tpat_var "attributes_errors/5914"
        expression (src/common.ml[178,5858+2]..src/common.ml[184,6069+73])
          Texp_apply
          expression (src/common.ml[178,5858+2]..src/common.ml[178,5858+17])
            Texp_ident "Ppxlib__!.Import.List.filter_map"
          [
            <arg>
              Nolabel
            <arg>
              Labelled "f"
              expression (src/common.ml[178,5858+21]..src/common.ml[184,6069+73])
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/common.ml[179,5889+6]..src/common.ml[179,5889+58])
                      Tpat_record
                      [
                        "attr_name"
                          pattern (src/common.ml[179,5889+20]..src/common.ml[179,5889+24])
                            Tpat_var "name/5915"
                        "attr_payload"
                          pattern (src/common.ml[179,5889+55]..src/common.ml[179,5889+56])
                            Tpat_any
                        "attr_loc"
                          pattern (src/common.ml[179,5889+37]..src/common.ml[179,5889+38])
                            Tpat_any
                      ]
                    <when>
                      expression (src/common.ml[180,5948+11]..src/common.ml[180,5948+47])
                        Texp_apply
                        expression (src/common.ml[180,5948+11]..src/common.ml[180,5948+29])
                          Texp_ident "Ppxlib__!.Name.ignore_checks"
                        [
                          <arg>
                            Nolabel
                            expression (src/common.ml[180,5948+30]..src/common.ml[180,5948+47])
                              Texp_field
                              expression (src/common.ml[180,5948+30]..src/common.ml[180,5948+34])
                                Texp_ident "name/5915"
                              "Location.txt"
                        ]
                    expression (src/common.ml[181,5999+8]..src/common.ml[181,5999+12])
                      Texp_construct "None"
                      []
                  <case>
                    pattern (src/common.ml[182,6012+6]..src/common.ml[182,6012+10])
                      Tpat_var "attr/5916"
                    expression (src/common.ml[183,6026+8]..src/common.ml[184,6069+72])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/common.ml[183,6026+12]..src/common.ml[183,6026+15])
                            Tpat_var "loc/5947"
                          expression (src/common.ml[183,6026+18]..src/common.ml[183,6026+39])
                            Texp_apply
                            expression (src/common.ml[183,6026+18]..src/common.ml[183,6026+34])
                              Texp_ident "loc_of_attribute/5365"
                            [
                              <arg>
                                Nolabel
                                expression (src/common.ml[183,6026+35]..src/common.ml[183,6026+39])
                                  Texp_ident "attr/5916"
                            ]
                      ]
                      expression (src/common.ml[184,6069+8]..src/common.ml[184,6069+72])
                        Texp_construct "Some"
                        [
                          expression (src/common.ml[184,6069+13]..src/common.ml[184,6069+72])
                            Texp_apply
                            expression (src/common.ml[184,6069+14]..src/common.ml[184,6069+36])
                              Texp_ident "Ppxlib__!.Location.Error.createf"
                            [
                              <arg>
                                Labelled "loc"
                                expression (src/common.ml[184,6069+38]..src/common.ml[184,6069+41])
                                  Texp_ident "loc/5947"
                              <arg>
                                Nolabel
                                expression (src/common.ml[184,6069+42]..src/common.ml[184,6069+71])
                                  Texp_construct "CamlinternalFormatBasics.Format"
                                  [
                                    expression (src/common.ml[184,6069+42]..src/common.ml[184,6069+71]) ghost
                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                      [
                                        expression (src/common.ml[184,6069+42]..src/common.ml[184,6069+71]) ghost
                                          Texp_constant Const_string("Attributes not allowed here",(src/common.ml[184,6069+42]..src/common.ml[184,6069+71]) ghost,None)
                                        expression (src/common.ml[184,6069+42]..src/common.ml[184,6069+71]) ghost
                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                          []
                                      ]
                                    expression (src/common.ml[184,6069+42]..src/common.ml[184,6069+71]) ghost
                                      Texp_constant Const_string("Attributes not allowed here",(src/common.ml[184,6069+42]..src/common.ml[184,6069+71]) ghost,None)
                                  ]
                            ]
                        ]
                ]
          ]
    ]
  structure_item (src/common.ml[186,6144+0]..src/common.ml[190,6300+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[186,6144+4]..src/common.ml[186,6144+29])
          Tpat_var "collect_attributes_errors/5948"
        expression (src/common.ml[187,6176+2]..src/common.ml[190,6300+5])
          Texp_object          class_structure
            pattern (_none_[0,0+-1].._none_[0,0+-1]) ghost
              Tpat_alias "selfpat-2/5950"
              pattern (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Tpat_alias "selfpat-*/5949"
                pattern (src/common.ml[187,6176+8]..src/common.ml[187,6176+8]) ghost
                  Tpat_any
            [
              class_field (src/common.ml[188,6185+4]..src/common.ml[188,6185+54])
                Tcf_inherit Fresh
                  class_expr (src/common.ml[188,6185+12]..src/common.ml[188,6185+54])
                    class_expr (src/common.ml[188,6185+12]..src/common.ml[188,6185+54])
                      Tcl_ident "Ppxlib__!.Ast_traverse0.fold"
                      [
                        core_type (src/common.ml[188,6185+13]..src/common.ml[188,6185+34])
                          Ttyp_constr "list/11!"
                          [
                            core_type (src/common.ml[188,6185+13]..src/common.ml[188,6185+29])
                              Ttyp_constr "Ppxlib__!.Location.Error.t"
                              []
                          ]
                      ]
                  None
              class_field (src/common.ml[189,6240+4]..src/common.ml[189,6240+59])
                Tcf_method "attribute" Public
                  Concrete Override
                  expression (src/common.ml[189,6240+22]..src/common.ml[189,6240+59]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/common.ml[187,6176+8]..src/common.ml[187,6176+8]) ghost
                          Tpat_alias "self-2/6148"
                          pattern (src/common.ml[187,6176+8]..src/common.ml[187,6176+8]) ghost
                            Tpat_var "self-*/6147"
                        expression (src/common.ml[189,6240+22]..src/common.ml[189,6240+59]) ghost
                          Texp_poly
                          None
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/common.ml[189,6240+22]..src/common.ml[189,6240+23])
                                  Tpat_var "a/6149"
                                expression (src/common.ml[189,6240+24]..src/common.ml[189,6240+59]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/common.ml[189,6240+24]..src/common.ml[189,6240+27])
                                        Tpat_var "acc/6150"
                                      expression (src/common.ml[189,6240+30]..src/common.ml[189,6240+59])
                                        Texp_apply
                                        expression (src/common.ml[189,6240+54]..src/common.ml[189,6240+55])
                                          Texp_ident "Ppxlib__!.Import.@"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/common.ml[189,6240+30]..src/common.ml[189,6240+53])
                                              Texp_apply
                                              expression (src/common.ml[189,6240+30]..src/common.ml[189,6240+47])
                                                Texp_ident "attributes_errors/5914"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/common.ml[189,6240+48]..src/common.ml[189,6240+53])
                                                    Texp_construct "::"
                                                    [
                                                      expression (src/common.ml[189,6240+50]..src/common.ml[189,6240+51])
                                                        Texp_ident "a/6149"
                                                      expression (src/common.ml[189,6240+52]..src/common.ml[189,6240+53]) ghost
                                                        Texp_construct "[]"
                                                        []
                                                    ]
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/common.ml[189,6240+56]..src/common.ml[189,6240+59])
                                              Texp_ident "acc/6150"
                                        ]
                                  ]
                            ]
                    ]
            ]
    ]
  structure_item (src/common.ml[192,6307+0]..src/common.ml[195,6382+40])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[192,6307+4]..src/common.ml[192,6307+24])
          Tpat_var "assert_no_attributes/6151"
        expression (src/common.ml[192,6307+25]..src/common.ml[195,6382+40]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/common.ml[192,6307+25]..src/common.ml[192,6307+26])
                Tpat_var "l/6153"
              expression (src/common.ml[193,6336+2]..src/common.ml[195,6382+40])
                Texp_match
                expression (src/common.ml[193,6336+8]..src/common.ml[193,6336+27])
                  Texp_apply
                  expression (src/common.ml[193,6336+8]..src/common.ml[193,6336+25])
                    Texp_ident "attributes_errors/5914"
                  [
                    <arg>
                      Nolabel
                      expression (src/common.ml[193,6336+26]..src/common.ml[193,6336+27])
                        Texp_ident "l/6153"
                  ]
                [
                  <case>
                    pattern (src/common.ml[194,6369+4]..src/common.ml[194,6369+6])
                      Tpat_value
                      pattern (src/common.ml[194,6369+4]..src/common.ml[194,6369+6])
                        Tpat_construct "[]"
                        []
                    expression (src/common.ml[194,6369+10]..src/common.ml[194,6369+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/common.ml[195,6382+4]..src/common.ml[195,6382+12])
                      Tpat_value
                      pattern (src/common.ml[195,6382+4]..src/common.ml[195,6382+12])
                        Tpat_construct "::"
                        [
                          pattern (src/common.ml[195,6382+4]..src/common.ml[195,6382+7])
                            Tpat_var "err/6154"
                          pattern (src/common.ml[195,6382+11]..src/common.ml[195,6382+12])
                            Tpat_any
                        ]
                    expression (src/common.ml[195,6382+16]..src/common.ml[195,6382+40])
                      Texp_apply
                      expression (src/common.ml[195,6382+16]..src/common.ml[195,6382+36])
                        Texp_ident "Ppxlib__!.Location.Error.raise"
                      [
                        <arg>
                          Nolabel
                          expression (src/common.ml[195,6382+37]..src/common.ml[195,6382+40])
                            Texp_ident "err/6154"
                      ]
                ]
                []
          ]
    ]
  structure_item (src/common.ml[197,6424+0]..src/common.ml[201,6547+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[197,6424+4]..src/common.ml[197,6424+27])
          Tpat_var "assert_no_attributes_in/6155"
        expression (src/common.ml[198,6454+2]..src/common.ml[201,6547+5])
          Texp_object          class_structure
            pattern (_none_[0,0+-1].._none_[0,0+-1]) ghost
              Tpat_alias "selfpat-3/6157"
              pattern (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Tpat_alias "selfpat-*/6156"
                pattern (src/common.ml[198,6454+8]..src/common.ml[198,6454+8]) ghost
                  Tpat_any
            [
              class_field (src/common.ml[199,6463+4]..src/common.ml[199,6463+30])
                Tcf_inherit Fresh
                  class_expr (src/common.ml[199,6463+12]..src/common.ml[199,6463+30])
                    class_expr (src/common.ml[199,6463+12]..src/common.ml[199,6463+30])
                      Tcl_ident "Ppxlib__!.Ast_traverse0.iter"
                      []
                  None
              class_field (src/common.ml[200,6494+4]..src/common.ml[200,6494+52])
                Tcf_method "attribute" Public
                  Concrete Override
                  expression (src/common.ml[200,6494+22]..src/common.ml[200,6494+52]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/common.ml[198,6454+8]..src/common.ml[198,6454+8]) ghost
                          Tpat_alias "self-3/6355"
                          pattern (src/common.ml[198,6454+8]..src/common.ml[198,6454+8]) ghost
                            Tpat_var "self-*/6354"
                        expression (src/common.ml[200,6494+22]..src/common.ml[200,6494+52]) ghost
                          Texp_poly
                          None
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/common.ml[200,6494+22]..src/common.ml[200,6494+23])
                                  Tpat_var "a/6356"
                                expression (src/common.ml[200,6494+26]..src/common.ml[200,6494+52])
                                  Texp_apply
                                  expression (src/common.ml[200,6494+26]..src/common.ml[200,6494+46])
                                    Texp_ident "assert_no_attributes/6151"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/common.ml[200,6494+47]..src/common.ml[200,6494+52])
                                        Texp_construct "::"
                                        [
                                          expression (src/common.ml[200,6494+49]..src/common.ml[200,6494+50])
                                            Texp_ident "a/6356"
                                          expression (src/common.ml[200,6494+51]..src/common.ml[200,6494+52]) ghost
                                            Texp_construct "[]"
                                            []
                                        ]
                                  ]
                            ]
                    ]
            ]
    ]
  structure_item (src/common.ml[203,6554+0]..src/common.ml[208,6725+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[203,6554+4]..src/common.ml[203,6554+24])
          Tpat_var "attribute_of_warning/6357"
        expression (src/common.ml[203,6554+25]..src/common.ml[208,6725+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/common.ml[203,6554+25]..src/common.ml[203,6554+28])
                Tpat_var "loc/6359"
              expression (src/common.ml[203,6554+29]..src/common.ml[208,6725+3]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/common.ml[203,6554+29]..src/common.ml[203,6554+30])
                      Tpat_var "s/6360"
                    expression (src/common.ml[204,6587+2]..src/common.ml[208,6725+3])
                      Texp_record
                        fields =
                          [
                            "attr_name"
                              expression (src/common.ml[205,6591+16]..src/common.ml[205,6591+48])
                                Texp_record
                                  fields =
                                    [
                                      "txt"
                                        expression (src/common.ml[205,6591+29]..src/common.ml[205,6591+46])
                                          Texp_constant Const_string("ocaml.ppwarning",(src/common.ml[205,6591+30]..src/common.ml[205,6591+45]),None)
                                      "loc"
                                        expression (src/common.ml[205,6591+18]..src/common.ml[205,6591+21]) ghost
                                          Texp_ident "loc/6359"
                                    ]
                                  representation =
                                    Record_regular
                                  extended_expression =
                                    None
                            "attr_payload"
                              expression (src/common.ml[206,6641+19]..src/common.ml[206,6641+62])
                                Texp_construct "PStr"
                                [
                                  expression (src/common.ml[206,6641+24]..src/common.ml[206,6641+62])
                                    Texp_construct "::"
                                    [
                                      expression (src/common.ml[206,6641+26]..src/common.ml[206,6641+60])
                                        Texp_apply
                                        expression (src/common.ml[206,6641+26]..src/common.ml[206,6641+35])
                                          Texp_ident "Ppxlib__!.Ast_builder.Default.pstr_eval"
                                        [
                                          <arg>
                                            Labelled "loc"
                                            expression (src/common.ml[206,6641+37]..src/common.ml[206,6641+40])
                                              Texp_ident "loc/6359"
                                          <arg>
                                            Nolabel
                                            expression (src/common.ml[206,6641+41]..src/common.ml[206,6641+57])
                                              Texp_apply
                                              expression (src/common.ml[206,6641+42]..src/common.ml[206,6641+49])
                                                Texp_ident "Ppxlib__!.Ast_builder.Default.estring"
                                              [
                                                <arg>
                                                  Labelled "loc"
                                                  expression (src/common.ml[206,6641+51]..src/common.ml[206,6641+54])
                                                    Texp_ident "loc/6359"
                                                <arg>
                                                  Nolabel
                                                  expression (src/common.ml[206,6641+55]..src/common.ml[206,6641+56])
                                                    Texp_ident "s/6360"
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/common.ml[206,6641+58]..src/common.ml[206,6641+60])
                                              Texp_construct "[]"
                                              []
                                        ]
                                      expression (src/common.ml[206,6641+61]..src/common.ml[206,6641+62]) ghost
                                        Texp_construct "[]"
                                        []
                                    ]
                                ]
                            "attr_loc"
                              expression (src/common.ml[207,6705+15]..src/common.ml[207,6705+18])
                                Texp_ident "loc/6359"
                          ]
                        representation =
                          Record_regular
                        extended_expression =
                          None
                ]
          ]
    ]
  structure_item (src/common.ml[210,6730+0]..src/common.ml[226,7397+32])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[210,6730+4]..src/common.ml[210,6730+26])
          Tpat_var "is_polymorphic_variant/6361"
        expression (src/common.ml[211,6759+2]..src/common.ml[226,7397+32])
          Texp_let Rec
          [
            <def>
              pattern (src/common.ml[211,6759+10]..src/common.ml[211,6759+15])
                Tpat_var "check/6362"
              expression (src/common.ml[211,6759+18]..src/common.ml[215,6948+22])
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/common.ml[212,6786+6]..src/common.ml[212,6786+39])
                      Tpat_record
                      [
                        "ptyp_desc"
                          pattern (src/common.ml[212,6786+20]..src/common.ml[212,6786+34])
                            Tpat_construct "Ptyp_variant"
                            [
                              pattern (src/common.ml[212,6786+33]..src/common.ml[212,6786+34])
                                Tpat_any
                              pattern (src/common.ml[212,6786+33]..src/common.ml[212,6786+34])
                                Tpat_any
                              pattern (src/common.ml[212,6786+33]..src/common.ml[212,6786+34])
                                Tpat_any
                            ]
                      ]
                    expression (src/common.ml[212,6786+43]..src/common.ml[212,6786+54])
                      Texp_variant "Definitely"
                      None
                  <case>
                    pattern (src/common.ml[213,6841+6]..src/common.ml[213,6841+44])
                      Tpat_record
                      [
                        "ptyp_desc"
                          pattern (src/common.ml[213,6841+20]..src/common.ml[213,6841+39])
                            Tpat_construct "Ptyp_alias"
                            [
                              pattern (src/common.ml[213,6841+32]..src/common.ml[213,6841+35])
                                Tpat_var "typ/6363"
                              pattern (src/common.ml[213,6841+37]..src/common.ml[213,6841+38])
                                Tpat_any
                            ]
                      ]
                    expression (src/common.ml[213,6841+48]..src/common.ml[213,6841+57])
                      Texp_apply
                      expression (src/common.ml[213,6841+48]..src/common.ml[213,6841+53])
                        Texp_ident "check/6362"
                      [
                        <arg>
                          Nolabel
                          expression (src/common.ml[213,6841+54]..src/common.ml[213,6841+57])
                            Texp_ident "typ/6363"
                      ]
                  <case>
                    pattern (src/common.ml[214,6899+6]..src/common.ml[214,6899+38])
                      Tpat_record
                      [
                        "ptyp_desc"
                          pattern (src/common.ml[214,6899+20]..src/common.ml[214,6899+33])
                            Tpat_construct "Ptyp_constr"
                            [
                              pattern (src/common.ml[214,6899+32]..src/common.ml[214,6899+33])
                                Tpat_any
                              pattern (src/common.ml[214,6899+32]..src/common.ml[214,6899+33])
                                Tpat_any
                            ]
                      ]
                    expression (src/common.ml[214,6899+42]..src/common.ml[214,6899+48])
                      Texp_variant "Maybe"
                      None
                  <case>
                    pattern (src/common.ml[215,6948+6]..src/common.ml[215,6948+7])
                      Tpat_any
                    expression (src/common.ml[215,6948+11]..src/common.ml[215,6948+22])
                      Texp_variant "Surely_not"
                      None
                ]
          ]
          expression (src/common.ml[220,7165+2]..src/common.ml[226,7397+32])
            Texp_function
            Nolabel
            [
              <case>
                pattern (src/common.ml[220,7165+6]..src/common.ml[220,7165+8])
                  Tpat_var "td/6365"
                expression (src/common.ml[220,7165+9]..src/common.ml[226,7397+32]) ghost
                  Texp_function
                  Labelled "sig_"
                  [
                    <case>
                      pattern (src/common.ml[220,7165+10]..src/common.ml[220,7165+14])
                        Tpat_var "sig_/6366"
                      expression (src/common.ml[221,7183+4]..src/common.ml[226,7397+32])
                        Texp_match
                        expression (src/common.ml[221,7183+10]..src/common.ml[221,7183+23])
                          Texp_field
                          expression (src/common.ml[221,7183+10]..src/common.ml[221,7183+12])
                            Texp_ident "td/6365"
                          "ptype_kind"
                        [
                          <case>
                            pattern (src/common.ml[222,7212+6]..src/common.ml[222,7212+51])
                              Tpat_or
                              pattern (src/common.ml[222,7212+6]..src/common.ml[222,7212+38])
                                Tpat_or
                                pattern (src/common.ml[222,7212+6]..src/common.ml[222,7212+21])
                                  Tpat_value
                                  pattern (src/common.ml[222,7212+6]..src/common.ml[222,7212+21])
                                    Tpat_construct "Ptype_variant"
                                    [
                                      pattern (src/common.ml[222,7212+20]..src/common.ml[222,7212+21])
                                        Tpat_any
                                    ]
                                pattern (src/common.ml[222,7212+24]..src/common.ml[222,7212+38])
                                  Tpat_value
                                  pattern (src/common.ml[222,7212+24]..src/common.ml[222,7212+38])
                                    Tpat_construct "Ptype_record"
                                    [
                                      pattern (src/common.ml[222,7212+37]..src/common.ml[222,7212+38])
                                        Tpat_any
                                    ]
                              pattern (src/common.ml[222,7212+41]..src/common.ml[222,7212+51])
                                Tpat_value
                                pattern (src/common.ml[222,7212+41]..src/common.ml[222,7212+51])
                                  Tpat_construct "Ptype_open"
                                  []
                            expression (src/common.ml[222,7212+55]..src/common.ml[222,7212+66])
                              Texp_variant "Surely_not"
                              None
                          <case>
                            pattern (src/common.ml[223,7279+6]..src/common.ml[223,7279+20])
                              Tpat_value
                              pattern (src/common.ml[223,7279+6]..src/common.ml[223,7279+20])
                                Tpat_construct "Ptype_abstract"
                                []
                            expression (src/common.ml[223,7279+24]..src/common.ml[226,7397+32])
                              Texp_match
                              expression (src/common.ml[224,7305+14]..src/common.ml[224,7305+31])
                                Texp_field
                                expression (src/common.ml[224,7305+14]..src/common.ml[224,7305+16])
                                  Texp_ident "td/6365"
                                "ptype_manifest"
                              [
                                <case>
                                  pattern (src/common.ml[225,7342+10]..src/common.ml[225,7342+14])
                                    Tpat_value
                                    pattern (src/common.ml[225,7342+10]..src/common.ml[225,7342+14])
                                      Tpat_construct "None"
                                      []
                                  expression (src/common.ml[225,7342+18]..src/common.ml[225,7342+54])
                                    Texp_ifthenelse
                                    expression (src/common.ml[225,7342+21]..src/common.ml[225,7342+25])
                                      Texp_ident "sig_/6366"
                                    expression (src/common.ml[225,7342+31]..src/common.ml[225,7342+37])
                                      Texp_variant "Maybe"
                                      None
                                    Some
                                      expression (src/common.ml[225,7342+43]..src/common.ml[225,7342+54])
                                        Texp_variant "Surely_not"
                                        None
                                <case>
                                  pattern (src/common.ml[226,7397+10]..src/common.ml[226,7397+18])
                                    Tpat_value
                                    pattern (src/common.ml[226,7397+10]..src/common.ml[226,7397+18])
                                      Tpat_construct "Some"
                                      [
                                        pattern (src/common.ml[226,7397+15]..src/common.ml[226,7397+18])
                                          Tpat_var "typ/6367"
                                      ]
                                  expression (src/common.ml[226,7397+22]..src/common.ml[226,7397+31])
                                    Texp_apply
                                    expression (src/common.ml[226,7397+22]..src/common.ml[226,7397+27])
                                      Texp_ident "check/6362"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/common.ml[226,7397+28]..src/common.ml[226,7397+31])
                                          Texp_ident "typ/6367"
                                    ]
                              ]
                              []
                        ]
                        []
                  ]
            ]
    ]
  structure_item (src/common.ml[228,7431+0]..src/common.ml[255,8494+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/common.ml[228,7431+4]..src/common.ml[228,7431+16])
          Tpat_var "mk_named_sig/6368"
        expression (src/common.ml[228,7431+17]..src/common.ml[255,8494+13]) ghost
          Texp_function
          Labelled "loc"
          [
            <case>
              pattern (src/common.ml[228,7431+18]..src/common.ml[228,7431+21])
                Tpat_var "loc/6370"
              expression (src/common.ml[228,7431+22]..src/common.ml[255,8494+13]) ghost
                Texp_function
                Labelled "sg_name"
                [
                  <case>
                    pattern (src/common.ml[228,7431+23]..src/common.ml[228,7431+30])
                      Tpat_var "sg_name/6371"
                    expression (src/common.ml[228,7431+31]..src/common.ml[255,8494+13]) ghost
                      Texp_function
                      Labelled "handle_polymorphic_variant"
                      [
                        <case>
                          pattern (src/common.ml[228,7431+32]..src/common.ml[228,7431+58])
                            Tpat_var "handle_polymorphic_variant/6372"
                          expression (src/common.ml[228,7431+61]..src/common.ml[255,8494+13])
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/common.ml[229,7501+4]..src/common.ml[229,7501+10])
                                  Tpat_construct "::"
                                  [
                                    pattern (src/common.ml[229,7501+6]..src/common.ml[229,7501+8])
                                      Tpat_var "td/6373"
                                    pattern (src/common.ml[229,7501+9]..src/common.ml[229,7501+10]) ghost
                                      Tpat_construct "[]"
                                      []
                                  ]
                                <when>
                                  expression (src/common.ml[230,7512+9]..src/common.ml[230,7512+75])
                                    Texp_apply
                                    expression (src/common.ml[230,7512+44]..src/common.ml[230,7512+46])
                                      Texp_ident "Stdlib!.&&"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/common.ml[230,7512+9]..src/common.ml[230,7512+43])
                                          Texp_apply
                                          expression (src/common.ml[230,7512+9]..src/common.ml[230,7512+21])
                                            Texp_ident "Ppxlib__!.Import.String.equal"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/common.ml[230,7512+22]..src/common.ml[230,7512+39])
                                                Texp_field
                                                expression (src/common.ml[230,7512+22]..src/common.ml[230,7512+35])
                                                  Texp_field
                                                  expression (src/common.ml[230,7512+22]..src/common.ml[230,7512+24])
                                                    Texp_ident "td/6373"
                                                  "ptype_name"
                                                "txt"
                                            <arg>
                                              Nolabel
                                              expression (src/common.ml[230,7512+40]..src/common.ml[230,7512+43])
                                                Texp_constant Const_string("t",(src/common.ml[230,7512+41]..src/common.ml[230,7512+42]),None)
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/common.ml[230,7512+47]..src/common.ml[230,7512+75])
                                          Texp_apply
                                          expression (src/common.ml[230,7512+47]..src/common.ml[230,7512+60])
                                            Texp_ident "Ppxlib__!.Import.List.is_empty"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/common.ml[230,7512+61]..src/common.ml[230,7512+75])
                                                Texp_field
                                                expression (src/common.ml[230,7512+61]..src/common.ml[230,7512+63])
                                                  Texp_ident "td/6373"
                                                "ptype_cstrs"
                                          ]
                                    ]
                                expression (src/common.ml[231,7591+6]..src/common.ml[254,8417+76])
                                  Texp_ifthenelse
                                  expression (src/common.ml[232,7600+8]..src/common.ml[233,7641+72])
                                    Texp_apply
                                    expression (src/common.ml[233,7641+8]..src/common.ml[233,7641+10])
                                      Texp_ident "Stdlib!.&&"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/common.ml[232,7600+8]..src/common.ml[232,7600+40])
                                          Texp_apply
                                          expression (src/common.ml[232,7600+9]..src/common.ml[232,7600+12])
                                            Texp_ident "Stdlib!.not"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/common.ml[232,7600+13]..src/common.ml[232,7600+39])
                                                Texp_ident "handle_polymorphic_variant/6372"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/common.ml[233,7641+11]..src/common.ml[233,7641+72])
                                          Texp_apply
                                          expression (src/common.ml[233,7641+11]..src/common.ml[233,7641+21])
                                            Texp_ident "Ppxlib__!.Import.Poly.="
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/common.ml[233,7641+22]..src/common.ml[233,7641+60])
                                                Texp_apply
                                                expression (src/common.ml[233,7641+23]..src/common.ml[233,7641+45])
                                                  Texp_ident "is_polymorphic_variant/6361"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/common.ml[233,7641+46]..src/common.ml[233,7641+48])
                                                      Texp_ident "td/6373"
                                                  <arg>
                                                    Labelled "sig_"
                                                    expression (src/common.ml[233,7641+55]..src/common.ml[233,7641+59])
                                                      Texp_construct "true"
                                                      []
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (src/common.ml[233,7641+61]..src/common.ml[233,7641+72])
                                                Texp_variant "Definitely"
                                                None
                                          ]
                                    ]
                                  expression (src/common.ml[234,7714+11]..src/common.ml[234,7714+15])
                                    Texp_construct "None"
                                    []
                                  Some
                                    expression (src/common.ml[236,7741+8]..src/common.ml[254,8417+76])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/common.ml[236,7741+12]..src/common.ml[236,7741+17])
                                            Tpat_var "arity/6374"
                                          expression (src/common.ml[236,7741+20]..src/common.ml[236,7741+47])
                                            Texp_apply
                                            expression (src/common.ml[236,7741+20]..src/common.ml[236,7741+31])
                                              Texp_ident "Ppxlib__!.Import.List.length"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/common.ml[236,7741+32]..src/common.ml[236,7741+47])
                                                  Texp_field
                                                  expression (src/common.ml[236,7741+32]..src/common.ml[236,7741+34])
                                                    Texp_ident "td/6373"
                                                  "ptype_params"
                                            ]
                                      ]
                                      expression (src/common.ml[237,7792+8]..src/common.ml[254,8417+76])
                                        Texp_ifthenelse
                                        expression (src/common.ml[237,7792+11]..src/common.ml[237,7792+21])
                                          Texp_apply
                                          expression (src/common.ml[237,7792+17]..src/common.ml[237,7792+19])
                                            Texp_ident "Ppxlib__!.Import.>="
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/common.ml[237,7792+11]..src/common.ml[237,7792+16])
                                                Texp_ident "arity/6374"
                                            <arg>
                                              Nolabel
                                              expression (src/common.ml[237,7792+20]..src/common.ml[237,7792+21])
                                                Texp_constant Const_int 4
                                          ]
                                        expression (src/common.ml[237,7792+27]..src/common.ml[237,7792+31])
                                          Texp_construct "None"
                                          []
                                        Some
                                          expression (src/common.ml[239,7837+10]..src/common.ml[254,8417+76])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/common.ml[239,7837+14]..src/common.ml[239,7837+17])
                                                  Tpat_var "mty/6375"
                                                expression (src/common.ml[240,7857+12]..src/common.ml[240,7857+78])
                                                  Texp_ifthenelse
                                                  expression (src/common.ml[240,7857+15]..src/common.ml[240,7857+24])
                                                    Texp_apply
                                                    expression (src/common.ml[240,7857+21]..src/common.ml[240,7857+22])
                                                      Texp_ident "Ppxlib__!.Import.="
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/common.ml[240,7857+15]..src/common.ml[240,7857+20])
                                                          Texp_ident "arity/6374"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/common.ml[240,7857+23]..src/common.ml[240,7857+24])
                                                          Texp_constant Const_int 0
                                                    ]
                                                  expression (src/common.ml[240,7857+30]..src/common.ml[240,7857+37])
                                                    Texp_ident "sg_name/6371"
                                                  Some
                                                    expression (src/common.ml[240,7857+43]..src/common.ml[240,7857+78])
                                                      Texp_apply
                                                      expression (src/common.ml[240,7857+43]..src/common.ml[240,7857+57])
                                                        Texp_ident "Stdlib!.Printf.sprintf"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/common.ml[240,7857+58]..src/common.ml[240,7857+64])
                                                            Texp_construct "CamlinternalFormatBasics.Format"
                                                            [
                                                              expression (src/common.ml[240,7857+58]..src/common.ml[240,7857+64]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.String"
                                                                [
                                                                  expression (src/common.ml[240,7857+58]..src/common.ml[240,7857+64]) ghost
                                                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                    []
                                                                  expression (src/common.ml[240,7857+58]..src/common.ml[240,7857+64]) ghost
                                                                    Texp_construct "CamlinternalFormatBasics.Int"
                                                                    [
                                                                      expression (src/common.ml[240,7857+58]..src/common.ml[240,7857+64]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.Int_d"
                                                                        []
                                                                      expression (src/common.ml[240,7857+58]..src/common.ml[240,7857+64]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                        []
                                                                      expression (src/common.ml[240,7857+58]..src/common.ml[240,7857+64]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.No_precision"
                                                                        []
                                                                      expression (src/common.ml[240,7857+58]..src/common.ml[240,7857+64]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                        []
                                                                    ]
                                                                ]
                                                              expression (src/common.ml[240,7857+58]..src/common.ml[240,7857+64]) ghost
                                                                Texp_constant Const_string("%s%d",(src/common.ml[240,7857+58]..src/common.ml[240,7857+64]) ghost,None)
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (src/common.ml[240,7857+65]..src/common.ml[240,7857+72])
                                                            Texp_ident "sg_name/6371"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/common.ml[240,7857+73]..src/common.ml[240,7857+78])
                                                            Texp_ident "arity/6374"
                                                      ]
                                            ]
                                            expression (src/common.ml[242,7949+10]..src/common.ml[254,8417+76])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/common.ml[242,7949+14]..src/common.ml[242,7949+16])
                                                    Tpat_var "td/6376"
                                                  expression (src/common.ml[242,7949+19]..src/common.ml[242,7949+44])
                                                    Texp_apply
                                                    expression (src/common.ml[242,7949+19]..src/common.ml[242,7949+41])
                                                      Texp_ident "name_type_params_in_td/3511"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/common.ml[242,7949+42]..src/common.ml[242,7949+44])
                                                          Texp_ident "td/6373"
                                                    ]
                                              ]
                                              expression (src/common.ml[243,7997+10]..src/common.ml[254,8417+76])
                                                Texp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (src/common.ml[243,7997+14]..src/common.ml[243,7997+23])
                                                      Tpat_var "for_subst/6377"
                                                    expression (src/common.ml[244,8023+12]..src/common.ml[248,8210+53])
                                                      Texp_apply
                                                      expression (src/common.ml[244,8023+12]..src/common.ml[244,8023+30])
                                                        Texp_ident "Ppxlib__!.Import.Ast_helper.Type.mk"
                                                      [
                                                        <arg>
                                                          Optional "loc"
                                                          expression (src/common.ml[244,8023+32]..src/common.ml[244,8023+35])
                                                            Texp_construct "Some"
                                                            [
                                                              expression (src/common.ml[244,8023+32]..src/common.ml[244,8023+35])
                                                                Texp_ident "loc/6370"
                                                            ]
                                                        <arg>
                                                          Optional "attrs"
                                                          expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                                            Texp_construct "None"
                                                            []
                                                        <arg>
                                                          Optional "params"
                                                          expression (src/common.ml[244,8023+58]..src/common.ml[244,8023+73])
                                                            Texp_construct "Some"
                                                            [
                                                              expression (src/common.ml[244,8023+58]..src/common.ml[244,8023+73])
                                                                Texp_field
                                                                expression (src/common.ml[244,8023+58]..src/common.ml[244,8023+60])
                                                                  Texp_ident "td/6376"
                                                                "ptype_params"
                                                            ]
                                                        <arg>
                                                          Optional "cstrs"
                                                          expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                                            Texp_construct "None"
                                                            []
                                                        <arg>
                                                          Optional "kind"
                                                          expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                                            Texp_construct "None"
                                                            []
                                                        <arg>
                                                          Optional "priv"
                                                          expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                                            Texp_construct "None"
                                                            []
                                                        <arg>
                                                          Optional "manifest"
                                                          expression (src/common.ml[246,8122+16]..src/common.ml[248,8210+53])
                                                            Texp_construct "Some"
                                                            [
                                                              expression (src/common.ml[246,8122+16]..src/common.ml[248,8210+53])
                                                                Texp_apply
                                                                expression (src/common.ml[246,8122+17]..src/common.ml[246,8122+28])
                                                                  Texp_ident "Ppxlib__!.Ast_builder.Default.ptyp_constr"
                                                                [
                                                                  <arg>
                                                                    Labelled "loc"
                                                                    expression (src/common.ml[246,8122+30]..src/common.ml[246,8122+33])
                                                                      Texp_ident "loc/6370"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/common.ml[247,8156+19]..src/common.ml[247,8156+53])
                                                                      Texp_apply
                                                                      expression (src/common.ml[247,8156+20]..src/common.ml[247,8156+38])
                                                                        Texp_ident "Ppxlib__!.Ast_builder.Default.Located.map_lident"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/common.ml[247,8156+39]..src/common.ml[247,8156+52])
                                                                            Texp_field
                                                                            expression (src/common.ml[247,8156+39]..src/common.ml[247,8156+41])
                                                                              Texp_ident "td/6376"
                                                                            "ptype_name"
                                                                      ]
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/common.ml[248,8210+19]..src/common.ml[248,8210+52])
                                                                      Texp_apply
                                                                      expression (src/common.ml[248,8210+20]..src/common.ml[248,8210+28])
                                                                        Texp_ident "Ppxlib__!.Import.List.map"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/common.ml[248,8210+36]..src/common.ml[248,8210+51])
                                                                            Texp_field
                                                                            expression (src/common.ml[248,8210+36]..src/common.ml[248,8210+38])
                                                                              Texp_ident "td/6376"
                                                                            "ptype_params"
                                                                        <arg>
                                                                          Labelled "f"
                                                                          expression (src/common.ml[248,8210+32]..src/common.ml[248,8210+35])
                                                                            Texp_ident "Stdlib!.fst"
                                                                      ]
                                                                ]
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (src/common.ml[244,8023+36]..src/common.ml[244,8023+49])
                                                            Texp_field
                                                            expression (src/common.ml[244,8023+36]..src/common.ml[244,8023+38])
                                                              Texp_ident "td/6376"
                                                            "ptype_name"
                                                      ]
                                                ]
                                                expression (src/common.ml[250,8277+10]..src/common.ml[254,8417+76])
                                                  Texp_construct "Some"
                                                  [
                                                    expression (src/common.ml[251,8292+12]..src/common.ml[254,8417+76])
                                                      Texp_apply
                                                      expression (src/common.ml[251,8292+13]..src/common.ml[251,8292+26])
                                                        Texp_ident "Ppxlib__!.Ast_builder.Default.include_infos"
                                                      [
                                                        <arg>
                                                          Labelled "loc"
                                                          expression (src/common.ml[251,8292+28]..src/common.ml[251,8292+31])
                                                            Texp_ident "loc/6370"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/common.ml[252,8324+15]..src/common.ml[254,8417+75])
                                                            Texp_apply
                                                            expression (src/common.ml[252,8324+16]..src/common.ml[252,8324+25])
                                                              Texp_ident "Ppxlib__!.Ast_builder.Default.pmty_with"
                                                            [
                                                              <arg>
                                                                Labelled "loc"
                                                                expression (src/common.ml[252,8324+27]..src/common.ml[252,8324+30])
                                                                  Texp_ident "loc/6370"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/common.ml[253,8355+18]..src/common.ml[253,8355+61])
                                                                  Texp_apply
                                                                  expression (src/common.ml[253,8355+19]..src/common.ml[253,8355+29])
                                                                    Texp_ident "Ppxlib__!.Ast_builder.Default.pmty_ident"
                                                                  [
                                                                    <arg>
                                                                      Labelled "loc"
                                                                      expression (src/common.ml[253,8355+31]..src/common.ml[253,8355+34])
                                                                        Texp_ident "loc/6370"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/common.ml[253,8355+35]..src/common.ml[253,8355+60])
                                                                        Texp_apply
                                                                        expression (src/common.ml[253,8355+36]..src/common.ml[253,8355+50])
                                                                          Texp_ident "Ppxlib__!.Ast_builder.Default.Located.lident"
                                                                        [
                                                                          <arg>
                                                                            Labelled "loc"
                                                                            expression (src/common.ml[253,8355+56]..src/common.ml[253,8355+59])
                                                                              Texp_ident "loc/6370"
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/common.ml[253,8355+51]..src/common.ml[253,8355+54])
                                                                              Texp_ident "mty/6375"
                                                                        ]
                                                                  ]
                                                              <arg>
                                                                Nolabel
                                                                expression (src/common.ml[254,8417+18]..src/common.ml[254,8417+74])
                                                                  Texp_construct "::"
                                                                  [
                                                                    expression (src/common.ml[254,8417+20]..src/common.ml[254,8417+72])
                                                                      Texp_construct "Pwith_typesubst"
                                                                      [
                                                                        expression (src/common.ml[254,8417+37]..src/common.ml[254,8417+60])
                                                                          Texp_apply
                                                                          expression (src/common.ml[254,8417+37]..src/common.ml[254,8417+51])
                                                                            Texp_ident "Ppxlib__!.Ast_builder.Default.Located.lident"
                                                                          [
                                                                            <arg>
                                                                              Labelled "loc"
                                                                              expression (src/common.ml[254,8417+53]..src/common.ml[254,8417+56])
                                                                                Texp_ident "loc/6370"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/common.ml[254,8417+57]..src/common.ml[254,8417+60])
                                                                                Texp_constant Const_string("t",(src/common.ml[254,8417+58]..src/common.ml[254,8417+59]),None)
                                                                          ]
                                                                        expression (src/common.ml[254,8417+62]..src/common.ml[254,8417+71])
                                                                          Texp_ident "for_subst/6377"
                                                                      ]
                                                                    expression (src/common.ml[254,8417+73]..src/common.ml[254,8417+74]) ghost
                                                                      Texp_construct "[]"
                                                                      []
                                                                  ]
                                                            ]
                                                      ]
                                                  ]
                              <case>
                                pattern (src/common.ml[255,8494+4]..src/common.ml[255,8494+5])
                                  Tpat_any
                                expression (src/common.ml[255,8494+9]..src/common.ml[255,8494+13])
                                  Texp_construct "None"
                                  []
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/common.ml[257,8509+0]..src/common.ml[274,8957+3])
    Tstr_module
    With_errors/6986
      module_expr (src/common.ml[257,8509+21]..src/common.ml[274,8957+3])
        Tmod_structure
        [
          structure_item (src/common.ml[258,8537+2]..src/common.ml[258,8537+40])
            Tstr_type Rec
            [
              type_declaration t/6953 (src/common.ml[258,8537+2]..src/common.ml[258,8537+40])
                ptype_params =
                  [
                    core_type (src/common.ml[258,8537+7]..src/common.ml[258,8537+9])
                      Ttyp_var a
                  ]
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/common.ml[258,8537+14]..src/common.ml[258,8537+40])
                      Ttyp_tuple
                      [
                        core_type (src/common.ml[258,8537+14]..src/common.ml[258,8537+16])
                          Ttyp_var a
                        core_type (src/common.ml[258,8537+19]..src/common.ml[258,8537+40])
                          Ttyp_constr "list/11!"
                          [
                            core_type (src/common.ml[258,8537+19]..src/common.ml[258,8537+35])
                              Ttyp_constr "Ppxlib__!.Location.Error.t"
                              []
                          ]
                      ]
            ]
          structure_item (src/common.ml[260,8579+2]..src/common.ml[260,8579+24])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/common.ml[260,8579+6]..src/common.ml[260,8579+12])
                  Tpat_var "return/6954"
                expression (src/common.ml[260,8579+13]..src/common.ml[260,8579+24]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/common.ml[260,8579+13]..src/common.ml[260,8579+14])
                        Tpat_var "e/6956"
                      expression (src/common.ml[260,8579+17]..src/common.ml[260,8579+24])
                        Texp_tuple
                        [
                          expression (src/common.ml[260,8579+18]..src/common.ml[260,8579+19])
                            Texp_ident "e/6956"
                          expression (src/common.ml[260,8579+21]..src/common.ml[260,8579+23])
                            Texp_construct "[]"
                            []
                        ]
                  ]
            ]
          structure_item (src/common.ml[262,8605+2]..src/common.ml[264,8664+26])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/common.ml[262,8605+6]..src/common.ml[262,8605+13])
                  Tpat_var ">>=/6957"
                expression (src/common.ml[262,8605+14]..src/common.ml[264,8664+26]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/common.ml[262,8605+14]..src/common.ml[262,8605+26])
                        Tpat_tuple
                        [
                          pattern (src/common.ml[262,8605+15]..src/common.ml[262,8605+16])
                            Tpat_var "x/6959"
                          pattern (src/common.ml[262,8605+18]..src/common.ml[262,8605+25])
                            Tpat_var "errors1/6960"
                        ]
                      expression (src/common.ml[262,8605+27]..src/common.ml[264,8664+26]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/common.ml[262,8605+27]..src/common.ml[262,8605+28])
                              Tpat_var "f/6961"
                            expression (src/common.ml[263,8636+4]..src/common.ml[264,8664+26])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/common.ml[263,8636+8]..src/common.ml[263,8636+18])
                                    Tpat_tuple
                                    [
                                      pattern (src/common.ml[263,8636+8]..src/common.ml[263,8636+9])
                                        Tpat_var "y/6962"
                                      pattern (src/common.ml[263,8636+11]..src/common.ml[263,8636+18])
                                        Tpat_var "errors2/6963"
                                    ]
                                  expression (src/common.ml[263,8636+21]..src/common.ml[263,8636+24])
                                    Texp_apply
                                    expression (src/common.ml[263,8636+21]..src/common.ml[263,8636+22])
                                      Texp_ident "f/6961"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/common.ml[263,8636+23]..src/common.ml[263,8636+24])
                                          Texp_ident "x/6959"
                                    ]
                              ]
                              expression (src/common.ml[264,8664+4]..src/common.ml[264,8664+26])
                                Texp_tuple
                                [
                                  expression (src/common.ml[264,8664+5]..src/common.ml[264,8664+6])
                                    Texp_ident "y/6962"
                                  expression (src/common.ml[264,8664+8]..src/common.ml[264,8664+25])
                                    Texp_apply
                                    expression (src/common.ml[264,8664+16]..src/common.ml[264,8664+17])
                                      Texp_ident "Ppxlib__!.Import.@"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/common.ml[264,8664+8]..src/common.ml[264,8664+15])
                                          Texp_ident "errors1/6960"
                                      <arg>
                                        Nolabel
                                        expression (src/common.ml[264,8664+18]..src/common.ml[264,8664+25])
                                          Texp_ident "errors2/6963"
                                    ]
                                ]
                        ]
                  ]
            ]
          structure_item (src/common.ml[266,8692+2]..src/common.ml[266,8692+43])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/common.ml[266,8692+6]..src/common.ml[266,8692+13])
                  Tpat_var ">>|/6965"
                expression (src/common.ml[266,8692+14]..src/common.ml[266,8692+43]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/common.ml[266,8692+14]..src/common.ml[266,8692+25])
                        Tpat_tuple
                        [
                          pattern (src/common.ml[266,8692+15]..src/common.ml[266,8692+16])
                            Tpat_var "x/6967"
                          pattern (src/common.ml[266,8692+18]..src/common.ml[266,8692+24])
                            Tpat_var "errors/6968"
                        ]
                      expression (src/common.ml[266,8692+26]..src/common.ml[266,8692+43]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/common.ml[266,8692+26]..src/common.ml[266,8692+27])
                              Tpat_var "f/6969"
                            expression (src/common.ml[266,8692+30]..src/common.ml[266,8692+43])
                              Texp_tuple
                              [
                                expression (src/common.ml[266,8692+31]..src/common.ml[266,8692+34])
                                  Texp_apply
                                  expression (src/common.ml[266,8692+31]..src/common.ml[266,8692+32])
                                    Texp_ident "f/6969"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/common.ml[266,8692+33]..src/common.ml[266,8692+34])
                                        Texp_ident "x/6967"
                                  ]
                                expression (src/common.ml[266,8692+36]..src/common.ml[266,8692+42])
                                  Texp_ident "errors/6968"
                              ]
                        ]
                  ]
            ]
          structure_item (src/common.ml[268,8737+2]..src/common.ml[271,8815+60])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/common.ml[268,8737+6]..src/common.ml[268,8737+15])
                  Tpat_var "of_result/6971"
                expression (src/common.ml[268,8737+16]..src/common.ml[271,8815+60]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/common.ml[268,8737+16]..src/common.ml[268,8737+22])
                        Tpat_var "result/6973"
                      expression (src/common.ml[268,8737+23]..src/common.ml[271,8815+60]) ghost
                        Texp_function
                        Labelled "default"
                        [
                          <case>
                            pattern (src/common.ml[268,8737+24]..src/common.ml[268,8737+31])
                              Tpat_var "default/6974"
                            expression (src/common.ml[269,8771+4]..src/common.ml[271,8815+60])
                              Texp_match
                              expression (src/common.ml[269,8771+10]..src/common.ml[269,8771+16])
                                Texp_ident "result/6973"
                              [
                                <case>
                                  pattern (src/common.ml[270,8793+6]..src/common.ml[270,8793+10])
                                    Tpat_value
                                    pattern (src/common.ml[270,8793+6]..src/common.ml[270,8793+10])
                                      Tpat_construct "Ok"
                                      [
                                        pattern (src/common.ml[270,8793+9]..src/common.ml[270,8793+10])
                                          Tpat_var "x/6975"
                                      ]
                                  expression (src/common.ml[270,8793+14]..src/common.ml[270,8793+21])
                                    Texp_tuple
                                    [
                                      expression (src/common.ml[270,8793+15]..src/common.ml[270,8793+16])
                                        Texp_ident "x/6975"
                                      expression (src/common.ml[270,8793+18]..src/common.ml[270,8793+20])
                                        Texp_construct "[]"
                                        []
                                    ]
                                <case>
                                  pattern (src/common.ml[271,8815+6]..src/common.ml[271,8815+18])
                                    Tpat_value
                                    pattern (src/common.ml[271,8815+6]..src/common.ml[271,8815+18])
                                      Tpat_construct "Error"
                                      [
                                        pattern (src/common.ml[271,8815+12]..src/common.ml[271,8815+18])
                                          Tpat_var "errors/6976"
                                      ]
                                  expression (src/common.ml[271,8815+22]..src/common.ml[271,8815+60])
                                    Texp_tuple
                                    [
                                      expression (src/common.ml[271,8815+23]..src/common.ml[271,8815+30])
                                        Texp_ident "default/6974"
                                      expression (src/common.ml[271,8815+32]..src/common.ml[271,8815+59])
                                        Texp_apply
                                        expression (src/common.ml[271,8815+32]..src/common.ml[271,8815+52])
                                          Texp_ident "Ppxlib__!.Import.NonEmptyList.to_list"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/common.ml[271,8815+53]..src/common.ml[271,8815+59])
                                              Texp_ident "errors/6976"
                                        ]
                                    ]
                              ]
                              []
                        ]
                  ]
            ]
          structure_item (src/common.ml[273,8877+2]..src/common.ml[273,8877+79])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/common.ml[273,8877+6]..src/common.ml[273,8877+20])
                  Tpat_var "combine_errors/6983"
                expression (src/common.ml[273,8877+21]..src/common.ml[273,8877+79]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/common.ml[273,8877+21]..src/common.ml[273,8877+25])
                        Tpat_var "list/6985"
                      expression (src/common.ml[273,8877+28]..src/common.ml[273,8877+79])
                        Texp_tuple
                        [
                          expression (src/common.ml[273,8877+29]..src/common.ml[273,8877+49])
                            Texp_apply
                            expression (src/common.ml[273,8877+29]..src/common.ml[273,8877+37])
                              Texp_ident "Ppxlib__!.Import.List.map"
                            [
                              <arg>
                                Nolabel
                                expression (src/common.ml[273,8877+38]..src/common.ml[273,8877+42])
                                  Texp_ident "list/6985"
                              <arg>
                                Labelled "f"
                                expression (src/common.ml[273,8877+46]..src/common.ml[273,8877+49])
                                  Texp_ident "Stdlib!.fst"
                            ]
                          expression (src/common.ml[273,8877+51]..src/common.ml[273,8877+78])
                            Texp_apply
                            expression (src/common.ml[273,8877+51]..src/common.ml[273,8877+66])
                              Texp_ident "Ppxlib__!.Import.List.concat_map"
                            [
                              <arg>
                                Nolabel
                                expression (src/common.ml[273,8877+67]..src/common.ml[273,8877+71])
                                  Texp_ident "list/6985"
                              <arg>
                                Labelled "f"
                                expression (src/common.ml[273,8877+75]..src/common.ml[273,8877+78])
                                  Texp_ident "Stdlib!.snd"
                            ]
                        ]
                  ]
            ]
        ]
]

(let
  (shared/16684 =a
     [0:
      #"arg_label" #"array" #"attribute" #"attributes" #"binding_op" #"bool"
      #"case" #"cases" #"char" #"class_declaration" #"class_description"
      #"class_expr" #"class_expr_desc" #"class_field" #"class_field_desc"
      #"class_field_kind" #"class_infos" #"class_signature"
      #"class_structure" #"class_type" #"class_type_declaration"
      #"class_type_desc" #"class_type_field" #"class_type_field_desc"
      #"closed_flag" #"constant" #"constructor_arguments"
      #"constructor_declaration" #"core_type" #"core_type_desc"
      #"direction_flag" #"directive_argument" #"directive_argument_desc"
      #"expression" #"expression_desc" #"extension" #"extension_constructor"
      #"extension_constructor_kind" #"functor_parameter"
      #"include_declaration" #"include_description" #"include_infos"
      #"injectivity" #"int" #"label" #"label_declaration" #"letop" #"list"
      #"loc" #"location" #"location_stack" #"longident" #"longident_loc"
      #"module_binding" #"module_declaration" #"module_expr"
      #"module_expr_desc" #"module_substitution" #"module_type"
      #"module_type_declaration" #"module_type_desc" #"mutable_flag"
      #"object_field" #"object_field_desc" #"open_declaration"
      #"open_description" #"open_infos" #"option" #"override_flag"
      #"package_type" #"pattern" #"pattern_desc" #"payload" #"position"
      #"private_flag" #"rec_flag" #"row_field" #"row_field_desc" #"signature"
      #"signature_item" #"signature_item_desc" #"string" #"structure"
      #"structure_item" #"structure_item_desc" #"toplevel_directive"
      #"toplevel_phrase" #"type_declaration" #"type_exception"
      #"type_extension" #"type_kind" #"value_binding" #"value_description"
      #"variance" #"virtual_flag" #"with_constraint"]
   shared/16693 =a
     [0:
      #"bool" #"cases" #"case" #"char" #"value_binding"
      #"extension_constructor_kind" #"core_type" #"structure" #"list"
      #"label_declaration" #"module_binding" #"position"
      #"toplevel_directive" #"directive_argument" #"object_field_desc"
      #"class_type_field_desc" #"open_infos" #"pattern_desc"
      #"signature_item" #"extension_constructor" #"toplevel_phrase"
      #"extension" #"location" #"variance" #"package_type" #"virtual_flag"
      #"module_type_desc" #"rec_flag" #"payload" #"type_exception" #"label"
      #"letop" #"location_stack" #"value_description" #"module_declaration"
      #"class_type_declaration" #"longident_loc" #"closed_flag"
      #"directive_argument_desc" #"return_true" #"attribute" #"class_infos"
      #"signature_item_desc" #"go" #"int" #"loc" #"row_field_desc"
      #"override_flag" #"structure_item_desc" #"class_field_desc"
      #"binding_op" #"module_expr_desc" #"class_signature" #"type_extension"
      #"class_field_kind" #"module_type_declaration" #"arg_label"
      #"row_field" #"longident" #"string" #"pattern" #"include_description"
      #"signature" #"class_type_field" #"attributes" #"open_description"
      #"with_constraint" #"include_declaration" #"class_type_desc"
      #"private_flag" #"injectivity" #"open_declaration" #"object_field"
      #"array" #"constant" #"class_expr" #"functor_parameter"
      #"direction_flag" #"core_type_desc" #"type_declaration"
      #"constructor_declaration" #"option" #"type_kind" #"module_expr"
      #"module_substitution" #"class_description" #"expression" #"class_type"
      #"structure_item" #"include_infos" #"class_declaration" #"module_type"
      #"class_expr_desc" #"class_structure" #"mutable_flag"
      #"expression_desc" #"constructor_arguments" #"class_field"]
   shared/16733 =a
     [0:
      #"bool" #"cases" #"case" #"char" #"value_binding"
      #"extension_constructor_kind" #"core_type" #"structure" #"list"
      #"label_declaration" #"module_binding" #"position"
      #"toplevel_directive" #"directive_argument" #"object_field_desc"
      #"class_type_field_desc" #"open_infos" #"pattern_desc"
      #"signature_item" #"extension_constructor" #"toplevel_phrase"
      #"extension" #"location" #"variance" #"package_type" #"virtual_flag"
      #"module_type_desc" #"rec_flag" #"payload" #"type_exception" #"label"
      #"letop" #"location_stack" #"value_description" #"module_declaration"
      #"class_type_declaration" #"longident_loc" #"closed_flag"
      #"directive_argument_desc" #"attribute" #"class_infos"
      #"signature_item_desc" #"int" #"loc" #"row_field_desc" #"override_flag"
      #"structure_item_desc" #"class_field_desc" #"binding_op"
      #"module_expr_desc" #"class_signature" #"type_extension"
      #"class_field_kind" #"module_type_declaration" #"arg_label"
      #"row_field" #"longident" #"string" #"pattern" #"include_description"
      #"signature" #"class_type_field" #"attributes" #"open_description"
      #"with_constraint" #"include_declaration" #"class_type_desc"
      #"private_flag" #"injectivity" #"open_declaration" #"object_field"
      #"array" #"constant" #"class_expr" #"functor_parameter"
      #"direction_flag" #"core_type_desc" #"type_declaration"
      #"constructor_declaration" #"option" #"type_kind" #"module_expr"
      #"module_substitution" #"class_description" #"expression" #"class_type"
      #"structure_item" #"include_infos" #"class_declaration" #"module_type"
      #"class_expr_desc" #"class_structure" #"mutable_flag"
      #"expression_desc" #"constructor_arguments" #"class_field"]
   shared/16687 =a [0: #"type_names"]
   shared/16688 =a
     [0:
      #"with_constraint" #"virtual_flag" #"variance" #"value_description"
      #"value_binding" #"type_kind" #"type_extension" #"type_exception"
      #"type_declaration" #"toplevel_phrase" #"toplevel_directive"
      #"structure_item_desc" #"structure_item" #"structure" #"string"
      #"signature_item_desc" #"signature_item" #"signature" #"row_field_desc"
      #"row_field" #"return_true" #"rec_flag" #"private_flag" #"position"
      #"payload" #"pattern_desc" #"pattern" #"package_type" #"override_flag"
      #"option" #"open_infos" #"open_description" #"open_declaration"
      #"object_field_desc" #"object_field" #"mutable_flag"
      #"module_type_desc" #"module_type_declaration" #"module_type"
      #"module_substitution" #"module_expr_desc" #"module_expr"
      #"module_declaration" #"module_binding" #"longident_loc" #"longident"
      #"location_stack" #"location" #"loc" #"list" #"letop"
      #"label_declaration" #"label" #"int" #"injectivity" #"include_infos"
      #"include_description" #"include_declaration" #"go"
      #"functor_parameter" #"extension_constructor_kind"
      #"extension_constructor" #"extension" #"expression_desc" #"expression"
      #"directive_argument_desc" #"directive_argument" #"direction_flag"
      #"core_type_desc" #"core_type" #"constructor_declaration"
      #"constructor_arguments" #"constant" #"closed_flag"
      #"class_type_field_desc" #"class_type_field" #"class_type_desc"
      #"class_type_declaration" #"class_type" #"class_structure"
      #"class_signature" #"class_infos" #"class_field_kind"
      #"class_field_desc" #"class_field" #"class_expr_desc" #"class_expr"
      #"class_description" #"class_declaration" #"char" #"cases" #"case"
      #"bool" #"binding_op" #"attributes" #"attribute" #"array" #"arg_label"
      #"*dummy method*"]
   shared/16728 =a
     [0:
      #"with_constraint" #"virtual_flag" #"variance" #"value_description"
      #"value_binding" #"type_kind" #"type_extension" #"type_exception"
      #"type_declaration" #"toplevel_phrase" #"toplevel_directive"
      #"structure_item_desc" #"structure_item" #"structure" #"string"
      #"signature_item_desc" #"signature_item" #"signature" #"row_field_desc"
      #"row_field" #"rec_flag" #"private_flag" #"position" #"payload"
      #"pattern_desc" #"pattern" #"package_type" #"override_flag" #"option"
      #"open_infos" #"open_description" #"open_declaration"
      #"object_field_desc" #"object_field" #"mutable_flag"
      #"module_type_desc" #"module_type_declaration" #"module_type"
      #"module_substitution" #"module_expr_desc" #"module_expr"
      #"module_declaration" #"module_binding" #"longident_loc" #"longident"
      #"location_stack" #"location" #"loc" #"list" #"letop"
      #"label_declaration" #"label" #"int" #"injectivity" #"include_infos"
      #"include_description" #"include_declaration" #"functor_parameter"
      #"extension_constructor_kind" #"extension_constructor" #"extension"
      #"expression_desc" #"expression" #"directive_argument_desc"
      #"directive_argument" #"direction_flag" #"core_type_desc" #"core_type"
      #"constructor_declaration" #"constructor_arguments" #"constant"
      #"closed_flag" #"class_type_field_desc" #"class_type_field"
      #"class_type_desc" #"class_type_declaration" #"class_type"
      #"class_structure" #"class_signature" #"class_infos"
      #"class_field_kind" #"class_field_desc" #"class_field"
      #"class_expr_desc" #"class_expr" #"class_description"
      #"class_declaration" #"char" #"cases" #"case" #"bool" #"binding_op"
      #"attributes" #"attribute" #"array" #"arg_label"])
  (seq
    (setfield_ptr(root-init) 32 (global Ppxlib__Common!)
      (caml_make_vect 1 0))
    (let (lident/2085 = (function x/2087 (makeblock 0 x/2087)))
      (setfield_ptr(root-init) 0 (global Ppxlib__Common!) lident/2085))
    (let
      (core_type_of_type_declaration/2186 =
         (function td/2188
           (let (loc/2189 = (field_imm 1 (field_imm 0 td/2188)))
             (apply
               (field_imm 37 (field_imm 0 (global Ppxlib__Ast_builder!)))
               loc/2189
               (apply
                 (field_imm 2
                   (field_imm 0 (field_imm 0 (global Ppxlib__Ast_builder!))))
                 (field_imm 0 (global Ppxlib__Common!))
                 (field_imm 0 td/2188))
               (apply (field_imm 48 (field_imm 91 (global Ppxlib__Import!)))
                 (field_imm 1 td/2188)
                 (function prim/16619 stub (field_mut 0 prim/16619)))))))
      (setfield_ptr(root-init) 1 (global Ppxlib__Common!)
        core_type_of_type_declaration/2186))
    (let
      (strip_gen_symbol_suffix/3148 =
         (let
           (chop/3149 =
              (function n/3151[int] or_more/3152 string/3153 pos/3154 f/3155
                (let (target/3156 =[int] (- (field_int 0 pos/3154) n/3151))
                  (seq
                    (while
                      (&&
                        (apply (field_imm 75 (global Ppxlib__Import!))
                          (field_int 0 pos/3154) 0)
                        (&&
                          (|| or_more/3152
                            (apply (field_imm 75 (global Ppxlib__Import!))
                              (field_int 0 pos/3154) target/3156))
                          (apply f/3155
                            (string.get string/3153
                              (- (field_int 0 pos/3154) 1)))))
                      (setfield_imm 0 pos/3154 (- (field_int 0 pos/3154) 1)))
                    (apply (field_imm 77 (global Ppxlib__Import!))
                      (field_int 0 pos/3154) target/3156)))))
           (function string/3313
             (let
               (pos/3314 = (makemutable 0 (int) (string.length string/3313)))
               (if
                 (&&
                   (apply chop/3149 1 0 string/3313 pos/3314
                     (apply
                       (field_imm 7 (field_imm 83 (global Ppxlib__Import!)))
                       '_'))
                   (&&
                     (apply chop/3149 3 1 string/3313 pos/3314
                       (function param/3335[int]
                         (catch
                           (catch
                             (let (switcher/16620 =a (-48+ param/3335))
                               (if (isout 9 switcher/16620) (exit 2)
                                 (exit 1)))
                            with (2) 0)
                          with (1) 1)))
                     (apply chop/3149 2 0 string/3313 pos/3314
                       (apply
                         (field_imm 7
                           (field_imm 83 (global Ppxlib__Import!)))
                         '_'))))
                 (apply
                   (field_imm 29 (field_imm 96 (global Ppxlib__Import!)))
                   string/3313 (field_int 0 pos/3314))
                 string/3313)))))
      (setfield_ptr(root-init) 23 (global Ppxlib__Common!)
        strip_gen_symbol_suffix/3148))
    (let
      (gen_symbol/3336 =
         (let (cnt/3337 = (makemutable 0 (int) 0))
           (function *opt*/3338 param/3375
             (let
               (prefix/3339 =
                  (if *opt*/3338
                    (let (*sth*/3340 =a (field_imm 0 *opt*/3338)) *sth*/3340)
                    "_x"))
               (seq (setfield_imm 0 cnt/3337 (+ (field_int 0 cnt/3337) 1))
                 (let
                   (prefix/3341 =
                      (apply (field_imm 23 (global Ppxlib__Common!))
                        prefix/3339))
                   (apply (field_imm 3 (global Stdlib__printf!))
                     [0:
                      [2: 0 [11: "__" [4: 3 [0: 2 3] 0 [12: '_' 0]]]]
                      "%s__%03i_"]
                     prefix/3341 (field_int 0 cnt/3337))))))))
      (setfield_ptr(root-init) 5 (global Ppxlib__Common!) gen_symbol/3336))
    (let
      (name_type_params_in_td_res/3376 =
         (function td/3378
           (let
             (prefix_string/3385 =
                (function i/3387[int]
                  (apply
                    (field_imm 0 (field_imm 96 (global Ppxlib__Import!)))
                    (+ (/ i/3387 26) 1)
                    (apply
                      (field_imm 0 (field_imm 83 (global Ppxlib__Import!)))
                      (+ (id 'a') (mod i/3387 26)))))
              name_param/3388 =
                (function i/3390[int] param/3499
                  (let
                    (variance/3392 =a (field_imm 1 param/3499)
                     tp/3391 =a (field_imm 0 param/3499))
                    (apply
                      (field_imm 4 (field_imm 93 (global Ppxlib__Import!)))
                      (let (v/3393 = (field_imm 0 tp/3391))
                        (catch
                          (switch v/3393
                           case int 0:
                            (makeblock 0
                              (makeblock 0
                                (apply (field_imm 5 (global Ppxlib__Common!))
                                  (makeblock 0
                                    (apply prefix_string/3385 i/3390))
                                  0)))
                           case tag 0:
                            (let (*match*/16628 =a (field_imm 0 v/3393))
                              (makeblock 0 v/3393))
                           default: (exit 6))
                         with (6)
                          (makeblock 1
                            (apply
                              (field_imm 1
                                (field_imm 12 (global Ppxlib__Location!)))
                              (field_imm 1 tp/3391)
                              [0:
                               [11: "not a type parameter" 0]
                               "not a type parameter"]))))
                      (function ptyp_desc/3498
                        (makeblock 0
                          (let (init/16629 = tp/3391)
                            (makeblock 0 ptyp_desc/3498
                              (field_imm 1 init/16629)
                              (field_imm 2 init/16629)
                              (field_imm 3 init/16629)))
                          variance/3392)))))
              *match*/16627 =
                (revapply
                  (revapply (field_imm 1 td/3378)
                    (let
                      (func/16622 =
                         (field_imm 49
                           (field_imm 91 (global Ppxlib__Import!))))
                      (function param/16623 stub
                        (apply func/16622 param/16623 name_param/3388))))
                  (apply
                    (field_imm 57 (field_imm 91 (global Ppxlib__Import!)))
                    (function param/3507
                      (switch* param/3507
                       case tag 0:
                        (let (o/3503 =a (field_imm 0 param/3507))
                          (makeblock 0 o/3503))
                       case tag 1:
                        (let (e/3504 =a (field_imm 0 param/3507))
                          (makeblock 1 e/3504))))))
              errors/3501 =a (field_imm 1 *match*/16627))
             (if errors/3501
               (let
                 (q/3509 =a (field_imm 1 errors/3501)
                  t/3508 =a (field_imm 0 errors/3501))
                 (makeblock 1 (makeblock 0 t/3508 q/3509)))
               (let (ptype_params/3500 =a (field_imm 0 *match*/16627))
                 (makeblock 0
                   (let (init/16621 = td/3378)
                     (makeblock 0 (field_imm 0 init/16621) ptype_params/3500
                       (field_imm 2 init/16621) (field_imm 3 init/16621)
                       (field_int 4 init/16621) (field_imm 5 init/16621)
                       (field_imm 6 init/16621) (field_imm 7 init/16621)))))))))
      (setfield_ptr(root-init) 2 (global Ppxlib__Common!)
        name_type_params_in_td_res/3376))
    (let
      (name_type_params_in_td/3511 =
         (function td/3513
           (let
             (*match*/16630 =
                (apply (field_imm 2 (global Ppxlib__Common!)) td/3513))
             (switch* *match*/16630
              case tag 0:
               (let (res/3514 =a (field_imm 0 *match*/16630)) res/3514)
              case tag 1:
               (let
                 (*match*/16631 =a (field_imm 0 *match*/16630)
                  *match*/16632 =a (field_imm 1 *match*/16631)
                  err/3515 =a (field_imm 0 *match*/16631))
                 (apply
                   (field_imm 7 (field_imm 12 (global Ppxlib__Location!)))
                   err/3515))))))
      (setfield_ptr(root-init) 3 (global Ppxlib__Common!)
        name_type_params_in_td/3511))
    (let
      (combinator_type_of_type_declaration/3516 =
         (function td/3518 f/3519
           (let
             (td/3520 =
                (apply (field_imm 3 (global Ppxlib__Common!)) td/3518)
              result_type/3521 =
                (apply f/3519 (field_imm 1 (field_imm 0 td/3520))
                  (apply (field_imm 1 (global Ppxlib__Common!)) td/3520)))
             (apply (field_imm 50 (field_imm 91 (global Ppxlib__Import!)))
               (field_imm 1 td/3520) result_type/3521
               (function param/3526 acc/3524
                 (let
                   (_variance/3523 =a (field_imm 1 param/3526)
                    tp/3522 =a (field_imm 0 param/3526)
                    loc/3525 = (field_imm 1 tp/3522))
                   (apply
                     (field_imm 35
                       (field_imm 0 (global Ppxlib__Ast_builder!)))
                     loc/3525 0 (apply f/3519 loc/3525 tp/3522) acc/3524)))))))
      (setfield_ptr(root-init) 4 (global Ppxlib__Common!)
        combinator_type_of_type_declaration/3516))
    (let
      (string_of_core_type/3527 =
         (function ct/3529
           (let
             (buf/3530 = (apply (field_imm 0 (global Stdlib__buffer!)) 128)
              ppf/3573 =
                (apply (field_imm 111 (global Stdlib__format!)) buf/3530))
             (seq
               (apply (field_imm 4 (global Astlib__Pprintast!)) ppf/3573
                 ct/3529)
               (apply (field_imm 35 (global Stdlib__format!)) ppf/3573 0)
               (apply (field_imm 1 (global Stdlib__buffer!)) buf/3530)))))
      (setfield_ptr(root-init) 6 (global Ppxlib__Common!)
        string_of_core_type/3527))
    (let
      (get_type_param_name_res/3947 =
         (function (param/16633, param/16634)
           (let
             (ty/3949 =a param/16633
              loc/3950 = (field_imm 1 ty/3949)
              *match*/16635 = (field_imm 0 ty/3949))
             (catch
               (switch *match*/16635
                case tag 0:
                 (let (name/3951 =a (field_imm 0 *match*/16635))
                   (makeblock 0
                     (apply
                       (field_imm 1
                         (field_imm 0
                           (field_imm 0 (global Ppxlib__Ast_builder!))))
                       loc/3950 name/3951)))
                default: (exit 7))
              with (7)
               (makeblock 1
                 (makeblock 0
                   (apply
                     (field_imm 1 (field_imm 12 (global Ppxlib__Location!)))
                     loc/3950
                     [0:
                      [11: "not a type parameter" 0] "not a type parameter"])
                   0))))))
      (setfield_ptr(root-init) 11 (global Ppxlib__Common!)
        get_type_param_name_res/3947))
    (let
      (get_type_param_name/4742 =
         (function t/4744
           (let
             (*match*/16636 =
                (apply (field_imm 11 (global Ppxlib__Common!)) t/4744))
             (switch* *match*/16636
              case tag 0:
               (let (e/4745 =a (field_imm 0 *match*/16636)) e/4745)
              case tag 1:
               (let
                 (*match*/16637 =a (field_imm 0 *match*/16636)
                  *match*/16638 =a (field_imm 1 *match*/16637)
                  err/4746 =a (field_imm 0 *match*/16637))
                 (apply
                   (field_imm 7 (field_imm 12 (global Ppxlib__Location!)))
                   err/4746))))))
      (setfield_ptr(root-init) 12 (global Ppxlib__Common!)
        get_type_param_name/4742))
    (let
      (Type_is_recursive/4747 =
         (makeblock 248 "Ppxlib__Common.Type_is_recursive"
           (caml_fresh_oo_id 0)))
      (setfield_ptr(root-init) 24 (global Ppxlib__Common!)
        Type_is_recursive/4747))
    (letrec
      (type_is_recursive/4751
         (let
           (type_is_recursive_tables/16641 =o (makemutable 0 0 0 0)
            type_is_recursive_init/16690 =
              (function class/16645
                (let
                  (rec_flag/4753 =o
                     (apply (field_imm 2 (global CamlinternalOO!))
                       class/16645 #"")
                   tds/4755 =o
                     (apply (field_imm 2 (global CamlinternalOO!))
                       class/16645 #"")
                   ids/16686 =
                     (apply (field_imm 3 (global CamlinternalOO!))
                       class/16645 shared/16688 shared/16687)
                   with_constraint/5290 =o (field_mut 0 ids/16686)
                   virtual_flag/5289 =o (field_mut 1 ids/16686)
                   variance/5288 =o (field_mut 2 ids/16686)
                   value_description/5287 =o (field_mut 3 ids/16686)
                   value_binding/5286 =o (field_mut 4 ids/16686)
                   type_kind/5285 =o (field_mut 5 ids/16686)
                   type_extension/5284 =o (field_mut 6 ids/16686)
                   type_exception/5283 =o (field_mut 7 ids/16686)
                   type_declaration/5282 =o (field_mut 8 ids/16686)
                   toplevel_phrase/5281 =o (field_mut 9 ids/16686)
                   toplevel_directive/5280 =o (field_mut 10 ids/16686)
                   structure_item_desc/5279 =o (field_mut 11 ids/16686)
                   structure_item/5278 =o (field_mut 12 ids/16686)
                   structure/5277 =o (field_mut 13 ids/16686)
                   string/5276 =o (field_mut 14 ids/16686)
                   signature_item_desc/5275 =o (field_mut 15 ids/16686)
                   signature_item/5274 =o (field_mut 16 ids/16686)
                   signature/5273 =o (field_mut 17 ids/16686)
                   row_field_desc/5272 =o (field_mut 18 ids/16686)
                   row_field/5271 =o (field_mut 19 ids/16686)
                   return_true/5192 =o (field_mut 20 ids/16686)
                   rec_flag/5270 =o (field_mut 21 ids/16686)
                   private_flag/5269 =o (field_mut 22 ids/16686)
                   position/5268 =o (field_mut 23 ids/16686)
                   payload/5267 =o (field_mut 24 ids/16686)
                   pattern_desc/5266 =o (field_mut 25 ids/16686)
                   pattern/5265 =o (field_mut 26 ids/16686)
                   package_type/5264 =o (field_mut 27 ids/16686)
                   override_flag/5263 =o (field_mut 28 ids/16686)
                   option/5262 =o (field_mut 29 ids/16686)
                   open_infos/5261 =o (field_mut 30 ids/16686)
                   open_description/5260 =o (field_mut 31 ids/16686)
                   open_declaration/5259 =o (field_mut 32 ids/16686)
                   object_field_desc/5258 =o (field_mut 33 ids/16686)
                   object_field/5257 =o (field_mut 34 ids/16686)
                   mutable_flag/5256 =o (field_mut 35 ids/16686)
                   module_type_desc/5255 =o (field_mut 36 ids/16686)
                   module_type_declaration/5254 =o (field_mut 37 ids/16686)
                   module_type/5253 =o (field_mut 38 ids/16686)
                   module_substitution/5252 =o (field_mut 39 ids/16686)
                   module_expr_desc/5251 =o (field_mut 40 ids/16686)
                   module_expr/5250 =o (field_mut 41 ids/16686)
                   module_declaration/5249 =o (field_mut 42 ids/16686)
                   module_binding/5248 =o (field_mut 43 ids/16686)
                   longident_loc/5247 =o (field_mut 44 ids/16686)
                   longident/5246 =o (field_mut 45 ids/16686)
                   location_stack/5245 =o (field_mut 46 ids/16686)
                   location/5244 =o (field_mut 47 ids/16686)
                   loc/5243 =o (field_mut 48 ids/16686)
                   list/5242 =o (field_mut 49 ids/16686)
                   letop/5241 =o (field_mut 50 ids/16686)
                   label_declaration/5240 =o (field_mut 51 ids/16686)
                   label/5239 =o (field_mut 52 ids/16686)
                   int/5238 =o (field_mut 53 ids/16686)
                   injectivity/5237 =o (field_mut 54 ids/16686)
                   include_infos/5236 =o (field_mut 55 ids/16686)
                   include_description/5235 =o (field_mut 56 ids/16686)
                   include_declaration/5234 =o (field_mut 57 ids/16686)
                   go/5196 =o (field_mut 58 ids/16686)
                   functor_parameter/5233 =o (field_mut 59 ids/16686)
                   extension_constructor_kind/5232 =o
                     (field_mut 60 ids/16686)
                   extension_constructor/5231 =o (field_mut 61 ids/16686)
                   extension/5230 =o (field_mut 62 ids/16686)
                   expression_desc/5229 =o (field_mut 63 ids/16686)
                   expression/5228 =o (field_mut 64 ids/16686)
                   directive_argument_desc/5227 =o (field_mut 65 ids/16686)
                   directive_argument/5226 =o (field_mut 66 ids/16686)
                   direction_flag/5225 =o (field_mut 67 ids/16686)
                   core_type_desc/5224 =o (field_mut 68 ids/16686)
                   core_type/5193 =o (field_mut 69 ids/16686)
                   constructor_declaration/5194 =o (field_mut 70 ids/16686)
                   constructor_arguments/5223 =o (field_mut 71 ids/16686)
                   constant/5222 =o (field_mut 72 ids/16686)
                   closed_flag/5221 =o (field_mut 73 ids/16686)
                   class_type_field_desc/5220 =o (field_mut 74 ids/16686)
                   class_type_field/5219 =o (field_mut 75 ids/16686)
                   class_type_desc/5218 =o (field_mut 76 ids/16686)
                   class_type_declaration/5217 =o (field_mut 77 ids/16686)
                   class_type/5216 =o (field_mut 78 ids/16686)
                   class_structure/5215 =o (field_mut 79 ids/16686)
                   class_signature/5214 =o (field_mut 80 ids/16686)
                   class_infos/5213 =o (field_mut 81 ids/16686)
                   class_field_kind/5212 =o (field_mut 82 ids/16686)
                   class_field_desc/5211 =o (field_mut 83 ids/16686)
                   class_field/5210 =o (field_mut 84 ids/16686)
                   class_expr_desc/5209 =o (field_mut 85 ids/16686)
                   class_expr/5208 =o (field_mut 86 ids/16686)
                   class_description/5207 =o (field_mut 87 ids/16686)
                   class_declaration/5206 =o (field_mut 88 ids/16686)
                   char/5205 =o (field_mut 89 ids/16686)
                   cases/5204 =o (field_mut 90 ids/16686)
                   case/5203 =o (field_mut 91 ids/16686)
                   bool/5202 =o (field_mut 92 ids/16686)
                   binding_op/5201 =o (field_mut 93 ids/16686)
                   attributes/5195 =o (field_mut 94 ids/16686)
                   attribute/5200 =o (field_mut 95 ids/16686)
                   array/5199 =o (field_mut 96 ids/16686)
                   arg_label/5198 =o (field_mut 97 ids/16686)
                   *dummy method*/5197 =o (field_mut 98 ids/16686)
                   type_names/5191 =o (field_mut 99 ids/16686)
                   inh/16685 =
                     (apply (field_imm 17 (global CamlinternalOO!))
                       class/16645 0 0 shared/16684
                       (field_imm 1 (global Ppxlib__Ast_traverse0!)) 1)
                   obj_init/16649 =o (field_mut 0 inh/16685)
                   arg_label/5089 =o (field_mut 1 inh/16685)
                   array/5090 =o (field_mut 2 inh/16685)
                   attribute/5091 =o (field_mut 3 inh/16685)
                   attributes/5092 =o (field_mut 4 inh/16685)
                   binding_op/5093 =o (field_mut 5 inh/16685)
                   bool/5094 =o (field_mut 6 inh/16685)
                   case/5095 =o (field_mut 7 inh/16685)
                   cases/5096 =o (field_mut 8 inh/16685)
                   char/5097 =o (field_mut 9 inh/16685)
                   class_declaration/5098 =o (field_mut 10 inh/16685)
                   class_description/5099 =o (field_mut 11 inh/16685)
                   class_expr/5100 =o (field_mut 12 inh/16685)
                   class_expr_desc/5101 =o (field_mut 13 inh/16685)
                   class_field/5102 =o (field_mut 14 inh/16685)
                   class_field_desc/5103 =o (field_mut 15 inh/16685)
                   class_field_kind/5104 =o (field_mut 16 inh/16685)
                   class_infos/5105 =o (field_mut 17 inh/16685)
                   class_signature/5106 =o (field_mut 18 inh/16685)
                   class_structure/5107 =o (field_mut 19 inh/16685)
                   class_type/5108 =o (field_mut 20 inh/16685)
                   class_type_declaration/5109 =o (field_mut 21 inh/16685)
                   class_type_desc/5110 =o (field_mut 22 inh/16685)
                   class_type_field/5111 =o (field_mut 23 inh/16685)
                   class_type_field_desc/5112 =o (field_mut 24 inh/16685)
                   closed_flag/5113 =o (field_mut 25 inh/16685)
                   constant/5114 =o (field_mut 26 inh/16685)
                   constructor_arguments/5115 =o (field_mut 27 inh/16685)
                   constructor_declaration/5116 =o (field_mut 28 inh/16685)
                   core_type/5117 =o (field_mut 29 inh/16685)
                   core_type_desc/5118 =o (field_mut 30 inh/16685)
                   direction_flag/5119 =o (field_mut 31 inh/16685)
                   directive_argument/5120 =o (field_mut 32 inh/16685)
                   directive_argument_desc/5121 =o (field_mut 33 inh/16685)
                   expression/5122 =o (field_mut 34 inh/16685)
                   expression_desc/5123 =o (field_mut 35 inh/16685)
                   extension/5124 =o (field_mut 36 inh/16685)
                   extension_constructor/5125 =o (field_mut 37 inh/16685)
                   extension_constructor_kind/5126 =o
                     (field_mut 38 inh/16685)
                   functor_parameter/5127 =o (field_mut 39 inh/16685)
                   include_declaration/5128 =o (field_mut 40 inh/16685)
                   include_description/5129 =o (field_mut 41 inh/16685)
                   include_infos/5130 =o (field_mut 42 inh/16685)
                   injectivity/5131 =o (field_mut 43 inh/16685)
                   int/5132 =o (field_mut 44 inh/16685)
                   label/5133 =o (field_mut 45 inh/16685)
                   label_declaration/5134 =o (field_mut 46 inh/16685)
                   letop/5135 =o (field_mut 47 inh/16685)
                   list/5136 =o (field_mut 48 inh/16685)
                   loc/5137 =o (field_mut 49 inh/16685)
                   location/5138 =o (field_mut 50 inh/16685)
                   location_stack/5139 =o (field_mut 51 inh/16685)
                   longident/5140 =o (field_mut 52 inh/16685)
                   longident_loc/5141 =o (field_mut 53 inh/16685)
                   module_binding/5142 =o (field_mut 54 inh/16685)
                   module_declaration/5143 =o (field_mut 55 inh/16685)
                   module_expr/5144 =o (field_mut 56 inh/16685)
                   module_expr_desc/5145 =o (field_mut 57 inh/16685)
                   module_substitution/5146 =o (field_mut 58 inh/16685)
                   module_type/5147 =o (field_mut 59 inh/16685)
                   module_type_declaration/5148 =o (field_mut 60 inh/16685)
                   module_type_desc/5149 =o (field_mut 61 inh/16685)
                   mutable_flag/5150 =o (field_mut 62 inh/16685)
                   object_field/5151 =o (field_mut 63 inh/16685)
                   object_field_desc/5152 =o (field_mut 64 inh/16685)
                   open_declaration/5153 =o (field_mut 65 inh/16685)
                   open_description/5154 =o (field_mut 66 inh/16685)
                   open_infos/5155 =o (field_mut 67 inh/16685)
                   option/5156 =o (field_mut 68 inh/16685)
                   override_flag/5157 =o (field_mut 69 inh/16685)
                   package_type/5158 =o (field_mut 70 inh/16685)
                   pattern/5159 =o (field_mut 71 inh/16685)
                   pattern_desc/5160 =o (field_mut 72 inh/16685)
                   payload/5161 =o (field_mut 73 inh/16685)
                   position/5162 =o (field_mut 74 inh/16685)
                   private_flag/5163 =o (field_mut 75 inh/16685)
                   rec_flag/5164 =o (field_mut 76 inh/16685)
                   row_field/5165 =o (field_mut 77 inh/16685)
                   row_field_desc/5166 =o (field_mut 78 inh/16685)
                   signature/5167 =o (field_mut 79 inh/16685)
                   signature_item/5168 =o (field_mut 80 inh/16685)
                   signature_item_desc/5169 =o (field_mut 81 inh/16685)
                   string/5170 =o (field_mut 82 inh/16685)
                   structure/5171 =o (field_mut 83 inh/16685)
                   structure_item/5172 =o (field_mut 84 inh/16685)
                   structure_item_desc/5173 =o (field_mut 85 inh/16685)
                   toplevel_directive/5174 =o (field_mut 86 inh/16685)
                   toplevel_phrase/5175 =o (field_mut 87 inh/16685)
                   type_declaration/5176 =o (field_mut 88 inh/16685)
                   type_exception/5177 =o (field_mut 89 inh/16685)
                   type_extension/5178 =o (field_mut 90 inh/16685)
                   type_kind/5179 =o (field_mut 91 inh/16685)
                   value_binding/5180 =o (field_mut 92 inh/16685)
                   value_description/5181 =o (field_mut 93 inh/16685)
                   variance/5182 =o (field_mut 94 inh/16685)
                   virtual_flag/5183 =o (field_mut 95 inh/16685)
                   with_constraint/5184 =o (field_mut 96 inh/16685))
                  (seq
                    (apply (field_imm 10 (global CamlinternalOO!))
                      class/16645
                      (makeblock 0 return_true/5192
                        (let
                          (method_return_true/16683 =
                             (function self-1/5292 param/5293
                               (let (self-*/5291 =a self-1/5292)
                                 (raise_notrace
                                   (field_imm 24 (global Ppxlib__Common!))))))
                          method_return_true/16683)
                        core_type/5193
                        (let
                          (method_core_type/16681 =
                             (function self-1/5295 ctype/5296
                               (let
                                 (self-*/5294 =a self-1/5295
                                  *match*/16672 = (field_imm 0 ctype/5296))
                                 (catch
                                   (switch *match*/16672
                                    case tag 1:
                                     (let
                                       (*match*/16675 =a
                                          (field_imm 2 *match*/16672)
                                        *match*/16674 =a
                                          (field_imm 1 *match*/16672)
                                        *match*/16673 =a
                                          (field_imm 0 *match*/16672))
                                       0)
                                    case tag 3:
                                     (let
                                       (*match*/16676 =a
                                          (field_imm 0 *match*/16672)
                                        *match*/16677 =a
                                          (field_imm 0 *match*/16676))
                                       (switch* *match*/16677
                                        case tag 0:
                                         (let
                                           (*match*/16679 =a
                                              (field_imm 1 *match*/16672)
                                            *match*/16678 =a
                                              (field_imm 1 *match*/16676)
                                            id/5297 =a
                                              (field_imm 0 *match*/16677))
                                           (if
                                             (apply
                                               (field_imm 24
                                                 (field_imm 91
                                                   (global Ppxlib__Import!)))
                                               id/5297
                                               (field_computed self-1/5295
                                                 type_names/5191))
                                             (sendself self-1/5295
                                               return_true/5192 0)
                                             (exit 11)))
                                        case tag 1: (exit 11)
                                        case tag 2: (exit 11)))
                                    default: (exit 11))
                                  with (11)
                                   (apply core_type/5117 self-1/5295
                                     ctype/5296)))))
                          method_core_type/16681)
                        constructor_declaration/5194
                        (let
                          (method_constructor_declaration/16671 =
                             (function self-1/5299 cd/5300
                               (let
                                 (self-*/5298 =a self-1/5299
                                  *match*/16669 = (field_imm 2 cd/5300))
                                 (switch* *match*/16669
                                  case tag 0:
                                   (let
                                     (args/5301 =a
                                        (field_imm 0 *match*/16669))
                                     (apply
                                       (field_imm 70
                                         (field_imm 91
                                           (global Ppxlib__Import!)))
                                       args/5301
                                       (sendself self-1/5299 core_type/5193)))
                                  case tag 1:
                                   (let
                                     (fields/5302 =a
                                        (field_imm 0 *match*/16669))
                                     (apply
                                       (field_imm 70
                                         (field_imm 91
                                           (global Ppxlib__Import!)))
                                       fields/5302
                                       (sendself self-1/5299
                                         label_declaration/5240)))))))
                          method_constructor_declaration/16671)
                        attributes/5195
                        (let
                          (method_attributes/16668 =
                             (function self-1/5304 param/5305
                               (let (self-*/5303 =a self-1/5304) 0)))
                          method_attributes/16668)
                        go/5196
                        (let
                          (method_go/16666 =
                             (function self-1/5307 param/5308
                               (let
                                 (self-*/5306 =a self-1/5307
                                  *match*/16664 =
                                    (field_computed self-1/5307
                                      rec_flag/4753))
                                 (if *match*/16664
                                   (catch
                                     (try
                                       (exit 9
                                         (apply
                                           (field_imm 70
                                             (field_imm 91
                                               (global Ppxlib__Import!)))
                                           (field_computed self-1/5307
                                             tds/4755)
                                           (sendself self-1/5307
                                             type_declaration/5282)))
                                      with exn/16663
                                       (catch
                                         (if
                                           (== exn/16663
                                             (field_imm 24
                                               (global Ppxlib__Common!)))
                                           1 (exit 10))
                                        with (10) (reraise exn/16663)))
                                    with (9 val/16662) 0)
                                   0))))
                          method_go/16666)))
                    (function env/16647 self/16646 rec_flag/4752 tds/4754
                      (let
                        (self/16648 =
                           (apply (field_imm 23 (global CamlinternalOO!))
                             self/16646 class/16645))
                        (seq
                          (seq
                            (ifused tds/4755
                              (setfield_ptr_computed self/16648 tds/4755
                                tds/4754))
                            (ifused rec_flag/4753
                              (setfield_imm_computed self/16648 rec_flag/4753
                                rec_flag/4752))
                            (apply obj_init/16649 self/16648)
                            (setfield_ptr_computed self/16648 type_names/5191
                              (apply
                                (field_imm 48
                                  (field_imm 91 (global Ppxlib__Import!)))
                                tds/4754
                                (function td/5188
                                  (field_imm 0 (field_imm 0 td/5188))))))
                          (apply (field_imm 25 (global CamlinternalOO!))
                            self/16646 self/16648 class/16645))))))))
           (apply (field_imm 18 (global CamlinternalOO!)) shared/16693
             type_is_recursive_init/16690)))
      (setfield_ptr(root-init) 13 (global Ppxlib__Common!)
        type_is_recursive/4751))
    (let
      (really_recursive/5309 =
         (function rec_flag/5311 tds/5312
           (sendcache
             (apply (field_mut 0 (field_imm 13 (global Ppxlib__Common!))) 0
               rec_flag/5311 tds/5312)
             23080 (field_mut 32 (global Ppxlib__Common!)) 0 0)))
      (setfield_ptr(root-init) 14 (global Ppxlib__Common!)
        really_recursive/5309))
    (letrec
      (last/5313
         (function x/5314 l/5315
           (if l/5315
             (let
               (l/5317 =a (field_imm 1 l/5315)
                x/5316 =a (field_imm 0 l/5315))
               (apply last/5313 x/5316 l/5317))
             x/5314)))
      (setfield_ptr(root-init) 25 (global Ppxlib__Common!) last/5313))
    (let
      (loc_of_name_and_payload/5318 =
         (function name/5320 payload/5321
           (catch
             (switch* payload/5321
              case tag 0: (exit 12)
              case tag 1: (exit 12)
              case tag 2:
               (let (t/5326 =a (field_imm 0 payload/5321))
                 (field_imm 1 t/5326))
              case tag 3:
               (let
                 (*match*/16699 =a (field_imm 1 payload/5321)
                  x/5327 =a (field_imm 0 payload/5321))
                 (if *match*/16699
                   (let
                     (x/5328 =a x/5327
                      e/5329 =a (field_imm 0 *match*/16699)
                      init/16696 = (field_imm 1 x/5328))
                     (makeblock 0 (field_imm 0 init/16696)
                       (field_imm 1 (field_imm 1 e/5329))
                       (field_int 2 init/16696)))
                   (field_imm 1 x/5327))))
            with (12)
             (let (*match*/16697 =a (field_imm 0 payload/5321))
               (if *match*/16697
                 (let
                   (l/5323 =a (field_imm 1 *match*/16697)
                    x/5322 =a (field_imm 0 *match*/16697)
                    init/16694 = (field_imm 1 x/5322))
                   (makeblock 0 (field_imm 0 init/16694)
                     (field_imm 1
                       (field_imm 1
                         (apply (field_imm 25 (global Ppxlib__Common!))
                           x/5322 l/5323)))
                     (field_int 2 init/16694)))
                 (field_imm 1 name/5320))))))
      (setfield_ptr(root-init) 26 (global Ppxlib__Common!)
        loc_of_name_and_payload/5318))
    (let
      (loc_of_payload/5360 =
         (function param/5364
           (let
             (*match*/16700 =a (field_imm 2 param/5364)
              attr_payload/5363 =a (field_imm 1 param/5364)
              attr_name/5362 =a (field_imm 0 param/5364))
             (apply (field_imm 26 (global Ppxlib__Common!)) attr_name/5362
               attr_payload/5363))))
      (setfield_ptr(root-init) 15 (global Ppxlib__Common!)
        loc_of_payload/5360))
    (let
      (loc_of_attribute/5365 =
         (function param/5379
           (let
             (*match*/16702 =a (field_imm 2 param/5379)
              attr_payload/5368 =a (field_imm 1 param/5379)
              attr_name/5367 =a (field_imm 0 param/5379))
             (if
               (apply (field_imm 2 (field_imm 70 (global Ppxlib__Import!)))
                 (field_imm 1 attr_name/5367)
                 (field_imm 2 (global Ppxlib__Location!)))
               (apply (field_imm 26 (global Ppxlib__Common!)) attr_name/5367
                 attr_payload/5368)
               (let (init/16701 = (field_imm 1 attr_name/5367))
                 (makeblock 0 (field_imm 0 init/16701)
                   (field_imm 1
                     (apply (field_imm 26 (global Ppxlib__Common!))
                       attr_name/5367 attr_payload/5368))
                   (field_int 2 init/16701)))))))
      (setfield_ptr(root-init) 16 (global Ppxlib__Common!)
        loc_of_attribute/5365))
    (let
      (loc_of_extension/5380 =
         (function (param/16703, param/16704)
           (let (payload/5383 =a param/16704 name/5382 =a param/16703)
             (if
               (apply (field_imm 2 (field_imm 70 (global Ppxlib__Import!)))
                 (field_imm 1 name/5382)
                 (field_imm 2 (global Ppxlib__Location!)))
               (apply (field_imm 26 (global Ppxlib__Common!)) name/5382
                 payload/5383)
               (let (init/16705 = (field_imm 1 name/5382))
                 (makeblock 0 (field_imm 0 init/16705)
                   (field_imm 1
                     (apply (field_imm 26 (global Ppxlib__Common!)) name/5382
                       payload/5383))
                   (field_int 2 init/16705)))))))
      (setfield_ptr(root-init) 17 (global Ppxlib__Common!)
        loc_of_extension/5380))
    (let
      (curry_applications/5385 =
         (function expr/5387
           (let (*match*/16706 = (field_imm 0 expr/5387))
             (catch
               (switch *match*/16706
                case tag 5:
                 (let
                   (orig_forward_args/5908 =a (field_imm 1 *match*/16706)
                    f/5907 =a (field_imm 0 *match*/16706)
                    loc/5909 = (field_imm 1 expr/5387))
                   (letrec
                     (loop/5910
                        (function param/5913
                          (if param/5913
                            (let
                              (rev_front_args/5912 =a
                                 (field_imm 1 param/5913)
                               last_arg/5911 =a (field_imm 0 param/5913))
                              (apply
                                (field_imm 54
                                  (field_imm 0
                                    (global Ppxlib__Ast_builder_generated!)))
                                loc/5909
                                (apply loop/5910 rev_front_args/5912)
                                (makeblock 0 last_arg/5911 0)))
                            f/5907)))
                     (apply loop/5910
                       (apply
                         (field_imm 8
                           (field_imm 91 (global Ppxlib__Import!)))
                         orig_forward_args/5908))))
                default: (exit 14))
              with (14) expr/5387))))
      (setfield_ptr(root-init) 18 (global Ppxlib__Common!)
        curry_applications/5385))
    (let
      (attributes_errors/5914 =
         (let
           (func/16709 =
              (field_imm 62 (field_imm 91 (global Ppxlib__Import!)))
            arg/16710 =
              (function attr/5916
                (catch
                  (let
                    (*match*/16708 =a (field_imm 2 attr/5916)
                     *match*/16707 =a (field_imm 1 attr/5916)
                     name/5915 =a (field_imm 0 attr/5916))
                    (if
                      (apply (field_imm 6 (global Ppxlib__Name!))
                        (field_imm 0 name/5915))
                      0 (exit 15)))
                 with (15)
                  (let
                    (loc/5947 =
                       (apply (field_imm 16 (global Ppxlib__Common!))
                         attr/5916))
                    (makeblock 0
                      (apply
                        (field_imm 1
                          (field_imm 12 (global Ppxlib__Location!)))
                        loc/5947
                        [0:
                         [11: "Attributes not allowed here" 0]
                         "Attributes not allowed here"]))))))
           (function param/16711 stub
             (apply func/16709 param/16711 arg/16710))))
      (setfield_ptr(root-init) 9 (global Ppxlib__Common!)
        attributes_errors/5914))
    (let
      (collect_attributes_errors/5948 =
         (let
           (object_tables/16715 =o (makemutable 0 0 0 0)
            class/16719 =
              (apply (field_imm 15 (global CamlinternalOO!)) shared/16733)
            obj_init/16732 =
              (let
                (ids/16727 =
                   (apply (field_imm 7 (global CamlinternalOO!)) class/16719
                     shared/16728)
                 with_constraint/6146 =o (field_mut 0 ids/16727)
                 virtual_flag/6145 =o (field_mut 1 ids/16727)
                 variance/6144 =o (field_mut 2 ids/16727)
                 value_description/6143 =o (field_mut 3 ids/16727)
                 value_binding/6142 =o (field_mut 4 ids/16727)
                 type_kind/6141 =o (field_mut 5 ids/16727)
                 type_extension/6140 =o (field_mut 6 ids/16727)
                 type_exception/6139 =o (field_mut 7 ids/16727)
                 type_declaration/6138 =o (field_mut 8 ids/16727)
                 toplevel_phrase/6137 =o (field_mut 9 ids/16727)
                 toplevel_directive/6136 =o (field_mut 10 ids/16727)
                 structure_item_desc/6135 =o (field_mut 11 ids/16727)
                 structure_item/6134 =o (field_mut 12 ids/16727)
                 structure/6133 =o (field_mut 13 ids/16727)
                 string/6132 =o (field_mut 14 ids/16727)
                 signature_item_desc/6131 =o (field_mut 15 ids/16727)
                 signature_item/6130 =o (field_mut 16 ids/16727)
                 signature/6129 =o (field_mut 17 ids/16727)
                 row_field_desc/6128 =o (field_mut 18 ids/16727)
                 row_field/6127 =o (field_mut 19 ids/16727)
                 rec_flag/6126 =o (field_mut 20 ids/16727)
                 private_flag/6125 =o (field_mut 21 ids/16727)
                 position/6124 =o (field_mut 22 ids/16727)
                 payload/6123 =o (field_mut 23 ids/16727)
                 pattern_desc/6122 =o (field_mut 24 ids/16727)
                 pattern/6121 =o (field_mut 25 ids/16727)
                 package_type/6120 =o (field_mut 26 ids/16727)
                 override_flag/6119 =o (field_mut 27 ids/16727)
                 option/6118 =o (field_mut 28 ids/16727)
                 open_infos/6117 =o (field_mut 29 ids/16727)
                 open_description/6116 =o (field_mut 30 ids/16727)
                 open_declaration/6115 =o (field_mut 31 ids/16727)
                 object_field_desc/6114 =o (field_mut 32 ids/16727)
                 object_field/6113 =o (field_mut 33 ids/16727)
                 mutable_flag/6112 =o (field_mut 34 ids/16727)
                 module_type_desc/6111 =o (field_mut 35 ids/16727)
                 module_type_declaration/6110 =o (field_mut 36 ids/16727)
                 module_type/6109 =o (field_mut 37 ids/16727)
                 module_substitution/6108 =o (field_mut 38 ids/16727)
                 module_expr_desc/6107 =o (field_mut 39 ids/16727)
                 module_expr/6106 =o (field_mut 40 ids/16727)
                 module_declaration/6105 =o (field_mut 41 ids/16727)
                 module_binding/6104 =o (field_mut 42 ids/16727)
                 longident_loc/6103 =o (field_mut 43 ids/16727)
                 longident/6102 =o (field_mut 44 ids/16727)
                 location_stack/6101 =o (field_mut 45 ids/16727)
                 location/6100 =o (field_mut 46 ids/16727)
                 loc/6099 =o (field_mut 47 ids/16727)
                 list/6098 =o (field_mut 48 ids/16727)
                 letop/6097 =o (field_mut 49 ids/16727)
                 label_declaration/6096 =o (field_mut 50 ids/16727)
                 label/6095 =o (field_mut 51 ids/16727)
                 int/6094 =o (field_mut 52 ids/16727)
                 injectivity/6093 =o (field_mut 53 ids/16727)
                 include_infos/6092 =o (field_mut 54 ids/16727)
                 include_description/6091 =o (field_mut 55 ids/16727)
                 include_declaration/6090 =o (field_mut 56 ids/16727)
                 functor_parameter/6089 =o (field_mut 57 ids/16727)
                 extension_constructor_kind/6088 =o (field_mut 58 ids/16727)
                 extension_constructor/6087 =o (field_mut 59 ids/16727)
                 extension/6086 =o (field_mut 60 ids/16727)
                 expression_desc/6085 =o (field_mut 61 ids/16727)
                 expression/6084 =o (field_mut 62 ids/16727)
                 directive_argument_desc/6083 =o (field_mut 63 ids/16727)
                 directive_argument/6082 =o (field_mut 64 ids/16727)
                 direction_flag/6081 =o (field_mut 65 ids/16727)
                 core_type_desc/6080 =o (field_mut 66 ids/16727)
                 core_type/6079 =o (field_mut 67 ids/16727)
                 constructor_declaration/6078 =o (field_mut 68 ids/16727)
                 constructor_arguments/6077 =o (field_mut 69 ids/16727)
                 constant/6076 =o (field_mut 70 ids/16727)
                 closed_flag/6075 =o (field_mut 71 ids/16727)
                 class_type_field_desc/6074 =o (field_mut 72 ids/16727)
                 class_type_field/6073 =o (field_mut 73 ids/16727)
                 class_type_desc/6072 =o (field_mut 74 ids/16727)
                 class_type_declaration/6071 =o (field_mut 75 ids/16727)
                 class_type/6070 =o (field_mut 76 ids/16727)
                 class_structure/6069 =o (field_mut 77 ids/16727)
                 class_signature/6068 =o (field_mut 78 ids/16727)
                 class_infos/6067 =o (field_mut 79 ids/16727)
                 class_field_kind/6066 =o (field_mut 80 ids/16727)
                 class_field_desc/6065 =o (field_mut 81 ids/16727)
                 class_field/6064 =o (field_mut 82 ids/16727)
                 class_expr_desc/6063 =o (field_mut 83 ids/16727)
                 class_expr/6062 =o (field_mut 84 ids/16727)
                 class_description/6061 =o (field_mut 85 ids/16727)
                 class_declaration/6060 =o (field_mut 86 ids/16727)
                 char/6059 =o (field_mut 87 ids/16727)
                 cases/6058 =o (field_mut 88 ids/16727)
                 case/6057 =o (field_mut 89 ids/16727)
                 bool/6056 =o (field_mut 90 ids/16727)
                 binding_op/6055 =o (field_mut 91 ids/16727)
                 attributes/6054 =o (field_mut 92 ids/16727)
                 attribute/6051 =o (field_mut 93 ids/16727)
                 array/6053 =o (field_mut 94 ids/16727)
                 arg_label/6052 =o (field_mut 95 ids/16727)
                 inh/16726 =
                   (apply (field_imm 17 (global CamlinternalOO!)) class/16719
                     0 0 shared/16684
                     (field_imm 2 (global Ppxlib__Ast_traverse0!)) 1)
                 obj_init/16723 =o (field_mut 0 inh/16726)
                 arg_label/5955 =o (field_mut 1 inh/16726)
                 array/5956 =o (field_mut 2 inh/16726)
                 attribute/5957 =o (field_mut 3 inh/16726)
                 attributes/5958 =o (field_mut 4 inh/16726)
                 binding_op/5959 =o (field_mut 5 inh/16726)
                 bool/5960 =o (field_mut 6 inh/16726)
                 case/5961 =o (field_mut 7 inh/16726)
                 cases/5962 =o (field_mut 8 inh/16726)
                 char/5963 =o (field_mut 9 inh/16726)
                 class_declaration/5964 =o (field_mut 10 inh/16726)
                 class_description/5965 =o (field_mut 11 inh/16726)
                 class_expr/5966 =o (field_mut 12 inh/16726)
                 class_expr_desc/5967 =o (field_mut 13 inh/16726)
                 class_field/5968 =o (field_mut 14 inh/16726)
                 class_field_desc/5969 =o (field_mut 15 inh/16726)
                 class_field_kind/5970 =o (field_mut 16 inh/16726)
                 class_infos/5971 =o (field_mut 17 inh/16726)
                 class_signature/5972 =o (field_mut 18 inh/16726)
                 class_structure/5973 =o (field_mut 19 inh/16726)
                 class_type/5974 =o (field_mut 20 inh/16726)
                 class_type_declaration/5975 =o (field_mut 21 inh/16726)
                 class_type_desc/5976 =o (field_mut 22 inh/16726)
                 class_type_field/5977 =o (field_mut 23 inh/16726)
                 class_type_field_desc/5978 =o (field_mut 24 inh/16726)
                 closed_flag/5979 =o (field_mut 25 inh/16726)
                 constant/5980 =o (field_mut 26 inh/16726)
                 constructor_arguments/5981 =o (field_mut 27 inh/16726)
                 constructor_declaration/5982 =o (field_mut 28 inh/16726)
                 core_type/5983 =o (field_mut 29 inh/16726)
                 core_type_desc/5984 =o (field_mut 30 inh/16726)
                 direction_flag/5985 =o (field_mut 31 inh/16726)
                 directive_argument/5986 =o (field_mut 32 inh/16726)
                 directive_argument_desc/5987 =o (field_mut 33 inh/16726)
                 expression/5988 =o (field_mut 34 inh/16726)
                 expression_desc/5989 =o (field_mut 35 inh/16726)
                 extension/5990 =o (field_mut 36 inh/16726)
                 extension_constructor/5991 =o (field_mut 37 inh/16726)
                 extension_constructor_kind/5992 =o (field_mut 38 inh/16726)
                 functor_parameter/5993 =o (field_mut 39 inh/16726)
                 include_declaration/5994 =o (field_mut 40 inh/16726)
                 include_description/5995 =o (field_mut 41 inh/16726)
                 include_infos/5996 =o (field_mut 42 inh/16726)
                 injectivity/5997 =o (field_mut 43 inh/16726)
                 int/5998 =o (field_mut 44 inh/16726)
                 label/5999 =o (field_mut 45 inh/16726)
                 label_declaration/6000 =o (field_mut 46 inh/16726)
                 letop/6001 =o (field_mut 47 inh/16726)
                 list/6002 =o (field_mut 48 inh/16726)
                 loc/6003 =o (field_mut 49 inh/16726)
                 location/6004 =o (field_mut 50 inh/16726)
                 location_stack/6005 =o (field_mut 51 inh/16726)
                 longident/6006 =o (field_mut 52 inh/16726)
                 longident_loc/6007 =o (field_mut 53 inh/16726)
                 module_binding/6008 =o (field_mut 54 inh/16726)
                 module_declaration/6009 =o (field_mut 55 inh/16726)
                 module_expr/6010 =o (field_mut 56 inh/16726)
                 module_expr_desc/6011 =o (field_mut 57 inh/16726)
                 module_substitution/6012 =o (field_mut 58 inh/16726)
                 module_type/6013 =o (field_mut 59 inh/16726)
                 module_type_declaration/6014 =o (field_mut 60 inh/16726)
                 module_type_desc/6015 =o (field_mut 61 inh/16726)
                 mutable_flag/6016 =o (field_mut 62 inh/16726)
                 object_field/6017 =o (field_mut 63 inh/16726)
                 object_field_desc/6018 =o (field_mut 64 inh/16726)
                 open_declaration/6019 =o (field_mut 65 inh/16726)
                 open_description/6020 =o (field_mut 66 inh/16726)
                 open_infos/6021 =o (field_mut 67 inh/16726)
                 option/6022 =o (field_mut 68 inh/16726)
                 override_flag/6023 =o (field_mut 69 inh/16726)
                 package_type/6024 =o (field_mut 70 inh/16726)
                 pattern/6025 =o (field_mut 71 inh/16726)
                 pattern_desc/6026 =o (field_mut 72 inh/16726)
                 payload/6027 =o (field_mut 73 inh/16726)
                 position/6028 =o (field_mut 74 inh/16726)
                 private_flag/6029 =o (field_mut 75 inh/16726)
                 rec_flag/6030 =o (field_mut 76 inh/16726)
                 row_field/6031 =o (field_mut 77 inh/16726)
                 row_field_desc/6032 =o (field_mut 78 inh/16726)
                 signature/6033 =o (field_mut 79 inh/16726)
                 signature_item/6034 =o (field_mut 80 inh/16726)
                 signature_item_desc/6035 =o (field_mut 81 inh/16726)
                 string/6036 =o (field_mut 82 inh/16726)
                 structure/6037 =o (field_mut 83 inh/16726)
                 structure_item/6038 =o (field_mut 84 inh/16726)
                 structure_item_desc/6039 =o (field_mut 85 inh/16726)
                 toplevel_directive/6040 =o (field_mut 86 inh/16726)
                 toplevel_phrase/6041 =o (field_mut 87 inh/16726)
                 type_declaration/6042 =o (field_mut 88 inh/16726)
                 type_exception/6043 =o (field_mut 89 inh/16726)
                 type_extension/6044 =o (field_mut 90 inh/16726)
                 type_kind/6045 =o (field_mut 91 inh/16726)
                 value_binding/6046 =o (field_mut 92 inh/16726)
                 value_description/6047 =o (field_mut 93 inh/16726)
                 variance/6048 =o (field_mut 94 inh/16726)
                 virtual_flag/6049 =o (field_mut 95 inh/16726)
                 with_constraint/6050 =o (field_mut 96 inh/16726))
                (seq
                  (apply (field_imm 9 (global CamlinternalOO!)) class/16719
                    attribute/6051
                    (let
                      (method_attribute/16725 =
                         (function self-2/6148 a/6149 acc/6150
                           (let (self-*/6147 =a self-2/6148)
                             (apply (field_imm 97 (global Ppxlib__Import!))
                               (apply (field_imm 9 (global Ppxlib__Common!))
                                 (makeblock 0 a/6149 0))
                               acc/6150))))
                      method_attribute/16725))
                  (function env/16721
                    (let
                      (self/16722 =
                         (apply (field_imm 23 (global CamlinternalOO!)) 0
                           class/16719))
                      (seq (apply obj_init/16723 self/16722)
                        (apply (field_imm 25 (global CamlinternalOO!)) 0
                          self/16722 class/16719)))))))
           (seq (apply (field_imm 16 (global CamlinternalOO!)) class/16719)
             (apply obj_init/16732 0))))
      (setfield_ptr(root-init) 10 (global Ppxlib__Common!)
        collect_attributes_errors/5948))
    (let
      (assert_no_attributes/6151 =
         (function l/6153
           (let
             (*match*/16734 =
                (apply (field_imm 9 (global Ppxlib__Common!)) l/6153))
             (if *match*/16734
               (let
                 (*match*/16735 =a (field_imm 1 *match*/16734)
                  err/6154 =a (field_imm 0 *match*/16734))
                 (apply
                   (field_imm 7 (field_imm 12 (global Ppxlib__Location!)))
                   err/6154))
               0))))
      (setfield_ptr(root-init) 7 (global Ppxlib__Common!)
        assert_no_attributes/6151))
    (let
      (assert_no_attributes_in/6155 =
         (let
           (object_tables/16739 =o (makemutable 0 0 0 0)
            class/16743 =
              (apply (field_imm 15 (global CamlinternalOO!)) shared/16733)
            obj_init/16755 =
              (let
                (ids/16751 =
                   (apply (field_imm 7 (global CamlinternalOO!)) class/16743
                     shared/16728)
                 with_constraint/6353 =o (field_mut 0 ids/16751)
                 virtual_flag/6352 =o (field_mut 1 ids/16751)
                 variance/6351 =o (field_mut 2 ids/16751)
                 value_description/6350 =o (field_mut 3 ids/16751)
                 value_binding/6349 =o (field_mut 4 ids/16751)
                 type_kind/6348 =o (field_mut 5 ids/16751)
                 type_extension/6347 =o (field_mut 6 ids/16751)
                 type_exception/6346 =o (field_mut 7 ids/16751)
                 type_declaration/6345 =o (field_mut 8 ids/16751)
                 toplevel_phrase/6344 =o (field_mut 9 ids/16751)
                 toplevel_directive/6343 =o (field_mut 10 ids/16751)
                 structure_item_desc/6342 =o (field_mut 11 ids/16751)
                 structure_item/6341 =o (field_mut 12 ids/16751)
                 structure/6340 =o (field_mut 13 ids/16751)
                 string/6339 =o (field_mut 14 ids/16751)
                 signature_item_desc/6338 =o (field_mut 15 ids/16751)
                 signature_item/6337 =o (field_mut 16 ids/16751)
                 signature/6336 =o (field_mut 17 ids/16751)
                 row_field_desc/6335 =o (field_mut 18 ids/16751)
                 row_field/6334 =o (field_mut 19 ids/16751)
                 rec_flag/6333 =o (field_mut 20 ids/16751)
                 private_flag/6332 =o (field_mut 21 ids/16751)
                 position/6331 =o (field_mut 22 ids/16751)
                 payload/6330 =o (field_mut 23 ids/16751)
                 pattern_desc/6329 =o (field_mut 24 ids/16751)
                 pattern/6328 =o (field_mut 25 ids/16751)
                 package_type/6327 =o (field_mut 26 ids/16751)
                 override_flag/6326 =o (field_mut 27 ids/16751)
                 option/6325 =o (field_mut 28 ids/16751)
                 open_infos/6324 =o (field_mut 29 ids/16751)
                 open_description/6323 =o (field_mut 30 ids/16751)
                 open_declaration/6322 =o (field_mut 31 ids/16751)
                 object_field_desc/6321 =o (field_mut 32 ids/16751)
                 object_field/6320 =o (field_mut 33 ids/16751)
                 mutable_flag/6319 =o (field_mut 34 ids/16751)
                 module_type_desc/6318 =o (field_mut 35 ids/16751)
                 module_type_declaration/6317 =o (field_mut 36 ids/16751)
                 module_type/6316 =o (field_mut 37 ids/16751)
                 module_substitution/6315 =o (field_mut 38 ids/16751)
                 module_expr_desc/6314 =o (field_mut 39 ids/16751)
                 module_expr/6313 =o (field_mut 40 ids/16751)
                 module_declaration/6312 =o (field_mut 41 ids/16751)
                 module_binding/6311 =o (field_mut 42 ids/16751)
                 longident_loc/6310 =o (field_mut 43 ids/16751)
                 longident/6309 =o (field_mut 44 ids/16751)
                 location_stack/6308 =o (field_mut 45 ids/16751)
                 location/6307 =o (field_mut 46 ids/16751)
                 loc/6306 =o (field_mut 47 ids/16751)
                 list/6305 =o (field_mut 48 ids/16751)
                 letop/6304 =o (field_mut 49 ids/16751)
                 label_declaration/6303 =o (field_mut 50 ids/16751)
                 label/6302 =o (field_mut 51 ids/16751)
                 int/6301 =o (field_mut 52 ids/16751)
                 injectivity/6300 =o (field_mut 53 ids/16751)
                 include_infos/6299 =o (field_mut 54 ids/16751)
                 include_description/6298 =o (field_mut 55 ids/16751)
                 include_declaration/6297 =o (field_mut 56 ids/16751)
                 functor_parameter/6296 =o (field_mut 57 ids/16751)
                 extension_constructor_kind/6295 =o (field_mut 58 ids/16751)
                 extension_constructor/6294 =o (field_mut 59 ids/16751)
                 extension/6293 =o (field_mut 60 ids/16751)
                 expression_desc/6292 =o (field_mut 61 ids/16751)
                 expression/6291 =o (field_mut 62 ids/16751)
                 directive_argument_desc/6290 =o (field_mut 63 ids/16751)
                 directive_argument/6289 =o (field_mut 64 ids/16751)
                 direction_flag/6288 =o (field_mut 65 ids/16751)
                 core_type_desc/6287 =o (field_mut 66 ids/16751)
                 core_type/6286 =o (field_mut 67 ids/16751)
                 constructor_declaration/6285 =o (field_mut 68 ids/16751)
                 constructor_arguments/6284 =o (field_mut 69 ids/16751)
                 constant/6283 =o (field_mut 70 ids/16751)
                 closed_flag/6282 =o (field_mut 71 ids/16751)
                 class_type_field_desc/6281 =o (field_mut 72 ids/16751)
                 class_type_field/6280 =o (field_mut 73 ids/16751)
                 class_type_desc/6279 =o (field_mut 74 ids/16751)
                 class_type_declaration/6278 =o (field_mut 75 ids/16751)
                 class_type/6277 =o (field_mut 76 ids/16751)
                 class_structure/6276 =o (field_mut 77 ids/16751)
                 class_signature/6275 =o (field_mut 78 ids/16751)
                 class_infos/6274 =o (field_mut 79 ids/16751)
                 class_field_kind/6273 =o (field_mut 80 ids/16751)
                 class_field_desc/6272 =o (field_mut 81 ids/16751)
                 class_field/6271 =o (field_mut 82 ids/16751)
                 class_expr_desc/6270 =o (field_mut 83 ids/16751)
                 class_expr/6269 =o (field_mut 84 ids/16751)
                 class_description/6268 =o (field_mut 85 ids/16751)
                 class_declaration/6267 =o (field_mut 86 ids/16751)
                 char/6266 =o (field_mut 87 ids/16751)
                 cases/6265 =o (field_mut 88 ids/16751)
                 case/6264 =o (field_mut 89 ids/16751)
                 bool/6263 =o (field_mut 90 ids/16751)
                 binding_op/6262 =o (field_mut 91 ids/16751)
                 attributes/6261 =o (field_mut 92 ids/16751)
                 attribute/6258 =o (field_mut 93 ids/16751)
                 array/6260 =o (field_mut 94 ids/16751)
                 arg_label/6259 =o (field_mut 95 ids/16751)
                 inh/16750 =
                   (apply (field_imm 17 (global CamlinternalOO!)) class/16743
                     0 0 shared/16684
                     (field_imm 1 (global Ppxlib__Ast_traverse0!)) 1)
                 obj_init/16747 =o (field_mut 0 inh/16750)
                 arg_label/6162 =o (field_mut 1 inh/16750)
                 array/6163 =o (field_mut 2 inh/16750)
                 attribute/6164 =o (field_mut 3 inh/16750)
                 attributes/6165 =o (field_mut 4 inh/16750)
                 binding_op/6166 =o (field_mut 5 inh/16750)
                 bool/6167 =o (field_mut 6 inh/16750)
                 case/6168 =o (field_mut 7 inh/16750)
                 cases/6169 =o (field_mut 8 inh/16750)
                 char/6170 =o (field_mut 9 inh/16750)
                 class_declaration/6171 =o (field_mut 10 inh/16750)
                 class_description/6172 =o (field_mut 11 inh/16750)
                 class_expr/6173 =o (field_mut 12 inh/16750)
                 class_expr_desc/6174 =o (field_mut 13 inh/16750)
                 class_field/6175 =o (field_mut 14 inh/16750)
                 class_field_desc/6176 =o (field_mut 15 inh/16750)
                 class_field_kind/6177 =o (field_mut 16 inh/16750)
                 class_infos/6178 =o (field_mut 17 inh/16750)
                 class_signature/6179 =o (field_mut 18 inh/16750)
                 class_structure/6180 =o (field_mut 19 inh/16750)
                 class_type/6181 =o (field_mut 20 inh/16750)
                 class_type_declaration/6182 =o (field_mut 21 inh/16750)
                 class_type_desc/6183 =o (field_mut 22 inh/16750)
                 class_type_field/6184 =o (field_mut 23 inh/16750)
                 class_type_field_desc/6185 =o (field_mut 24 inh/16750)
                 closed_flag/6186 =o (field_mut 25 inh/16750)
                 constant/6187 =o (field_mut 26 inh/16750)
                 constructor_arguments/6188 =o (field_mut 27 inh/16750)
                 constructor_declaration/6189 =o (field_mut 28 inh/16750)
                 core_type/6190 =o (field_mut 29 inh/16750)
                 core_type_desc/6191 =o (field_mut 30 inh/16750)
                 direction_flag/6192 =o (field_mut 31 inh/16750)
                 directive_argument/6193 =o (field_mut 32 inh/16750)
                 directive_argument_desc/6194 =o (field_mut 33 inh/16750)
                 expression/6195 =o (field_mut 34 inh/16750)
                 expression_desc/6196 =o (field_mut 35 inh/16750)
                 extension/6197 =o (field_mut 36 inh/16750)
                 extension_constructor/6198 =o (field_mut 37 inh/16750)
                 extension_constructor_kind/6199 =o (field_mut 38 inh/16750)
                 functor_parameter/6200 =o (field_mut 39 inh/16750)
                 include_declaration/6201 =o (field_mut 40 inh/16750)
                 include_description/6202 =o (field_mut 41 inh/16750)
                 include_infos/6203 =o (field_mut 42 inh/16750)
                 injectivity/6204 =o (field_mut 43 inh/16750)
                 int/6205 =o (field_mut 44 inh/16750)
                 label/6206 =o (field_mut 45 inh/16750)
                 label_declaration/6207 =o (field_mut 46 inh/16750)
                 letop/6208 =o (field_mut 47 inh/16750)
                 list/6209 =o (field_mut 48 inh/16750)
                 loc/6210 =o (field_mut 49 inh/16750)
                 location/6211 =o (field_mut 50 inh/16750)
                 location_stack/6212 =o (field_mut 51 inh/16750)
                 longident/6213 =o (field_mut 52 inh/16750)
                 longident_loc/6214 =o (field_mut 53 inh/16750)
                 module_binding/6215 =o (field_mut 54 inh/16750)
                 module_declaration/6216 =o (field_mut 55 inh/16750)
                 module_expr/6217 =o (field_mut 56 inh/16750)
                 module_expr_desc/6218 =o (field_mut 57 inh/16750)
                 module_substitution/6219 =o (field_mut 58 inh/16750)
                 module_type/6220 =o (field_mut 59 inh/16750)
                 module_type_declaration/6221 =o (field_mut 60 inh/16750)
                 module_type_desc/6222 =o (field_mut 61 inh/16750)
                 mutable_flag/6223 =o (field_mut 62 inh/16750)
                 object_field/6224 =o (field_mut 63 inh/16750)
                 object_field_desc/6225 =o (field_mut 64 inh/16750)
                 open_declaration/6226 =o (field_mut 65 inh/16750)
                 open_description/6227 =o (field_mut 66 inh/16750)
                 open_infos/6228 =o (field_mut 67 inh/16750)
                 option/6229 =o (field_mut 68 inh/16750)
                 override_flag/6230 =o (field_mut 69 inh/16750)
                 package_type/6231 =o (field_mut 70 inh/16750)
                 pattern/6232 =o (field_mut 71 inh/16750)
                 pattern_desc/6233 =o (field_mut 72 inh/16750)
                 payload/6234 =o (field_mut 73 inh/16750)
                 position/6235 =o (field_mut 74 inh/16750)
                 private_flag/6236 =o (field_mut 75 inh/16750)
                 rec_flag/6237 =o (field_mut 76 inh/16750)
                 row_field/6238 =o (field_mut 77 inh/16750)
                 row_field_desc/6239 =o (field_mut 78 inh/16750)
                 signature/6240 =o (field_mut 79 inh/16750)
                 signature_item/6241 =o (field_mut 80 inh/16750)
                 signature_item_desc/6242 =o (field_mut 81 inh/16750)
                 string/6243 =o (field_mut 82 inh/16750)
                 structure/6244 =o (field_mut 83 inh/16750)
                 structure_item/6245 =o (field_mut 84 inh/16750)
                 structure_item_desc/6246 =o (field_mut 85 inh/16750)
                 toplevel_directive/6247 =o (field_mut 86 inh/16750)
                 toplevel_phrase/6248 =o (field_mut 87 inh/16750)
                 type_declaration/6249 =o (field_mut 88 inh/16750)
                 type_exception/6250 =o (field_mut 89 inh/16750)
                 type_extension/6251 =o (field_mut 90 inh/16750)
                 type_kind/6252 =o (field_mut 91 inh/16750)
                 value_binding/6253 =o (field_mut 92 inh/16750)
                 value_description/6254 =o (field_mut 93 inh/16750)
                 variance/6255 =o (field_mut 94 inh/16750)
                 virtual_flag/6256 =o (field_mut 95 inh/16750)
                 with_constraint/6257 =o (field_mut 96 inh/16750))
                (seq
                  (apply (field_imm 9 (global CamlinternalOO!)) class/16743
                    attribute/6258
                    (let
                      (method_attribute/16749 =
                         (function self-3/6355 a/6356
                           (let (self-*/6354 =a self-3/6355)
                             (apply (field_imm 7 (global Ppxlib__Common!))
                               (makeblock 0 a/6356 0)))))
                      method_attribute/16749))
                  (function env/16745
                    (let
                      (self/16746 =
                         (apply (field_imm 23 (global CamlinternalOO!)) 0
                           class/16743))
                      (seq (apply obj_init/16747 self/16746)
                        (apply (field_imm 25 (global CamlinternalOO!)) 0
                          self/16746 class/16743)))))))
           (seq (apply (field_imm 16 (global CamlinternalOO!)) class/16743)
             (apply obj_init/16755 0))))
      (setfield_ptr(root-init) 8 (global Ppxlib__Common!)
        assert_no_attributes_in/6155))
    (let
      (attribute_of_warning/6357 =
         (function loc/6359 s/6360
           (makeblock 0 (makeblock 0 "ocaml.ppwarning" loc/6359)
             (makeblock 0
               (makeblock 0
                 (apply
                   (field_imm 148
                     (field_imm 0 (global Ppxlib__Ast_builder!)))
                   loc/6359
                   (apply
                     (field_imm 174
                       (field_imm 0 (global Ppxlib__Ast_builder!)))
                     loc/6359 s/6360)
                   0)
                 0))
             loc/6359)))
      (setfield_ptr(root-init) 19 (global Ppxlib__Common!)
        attribute_of_warning/6357))
    (let
      (is_polymorphic_variant/6361 =
         (letrec
           (check/6362
              (function param/6364
                (catch
                  (let (*match*/16762 =a (field_imm 0 param/6364))
                    (switch *match*/16762
                     case tag 3:
                      (let
                        (*match*/16777 =a (field_imm 3 param/6364)
                         *match*/16776 =a (field_imm 2 param/6364)
                         *match*/16775 =a (field_imm 1 param/6364)
                         *match*/16774 =a (field_imm 1 *match*/16762)
                         *match*/16773 =a (field_imm 0 *match*/16762))
                        374637448)
                     case tag 6:
                      (let
                        (*match*/16772 =a (field_imm 3 param/6364)
                         *match*/16771 =a (field_imm 2 param/6364)
                         *match*/16770 =a (field_imm 1 param/6364)
                         *match*/16769 =a (field_imm 1 *match*/16762)
                         typ/6363 =a (field_imm 0 *match*/16762))
                        (apply check/6362 typ/6363))
                     case tag 7:
                      (let
                        (*match*/16768 =a (field_imm 3 param/6364)
                         *match*/16767 =a (field_imm 2 param/6364)
                         *match*/16766 =a (field_imm 1 param/6364)
                         *match*/16765 =a (field_imm 2 *match*/16762)
                         *match*/16764 =a (field_imm 1 *match*/16762)
                         *match*/16763 =a (field_imm 0 *match*/16762))
                        -491008483)
                     default: (exit 17)))
                 with (17) 974048726)))
           (function td/6365 sig_/6366
             (let (*match*/16759 = (field_imm 3 td/6365))
               (catch
                 (if (isint *match*/16759)
                   (if *match*/16759 (exit 16)
                     (let (*match*/16758 = (field_imm 5 td/6365))
                       (if *match*/16758
                         (let (typ/6367 =a (field_imm 0 *match*/16758))
                           (apply check/6362 typ/6367))
                         (if sig_/6366 374637448 974048726))))
                   (let (*match*/16760 =a (field_imm 0 *match*/16759))
                     (exit 16)))
                with (16) 974048726)))))
      (setfield_ptr(root-init) 20 (global Ppxlib__Common!)
        is_polymorphic_variant/6361))
    (let
      (mk_named_sig/6368 =
         (function loc/6370 sg_name/6371 handle_polymorphic_variant/6372
           param/6952
           (catch
             (if param/6952
               (let (*match*/16779 =a (field_imm 1 param/6952))
                 (if *match*/16779 (exit 18)
                   (let (td/6373 =a (field_imm 0 param/6952))
                     (if
                       (&&
                         (apply
                           (field_imm 47
                             (field_imm 96 (global Ppxlib__Import!)))
                           (field_imm 0 (field_imm 0 td/6373)) "t")
                         (apply
                           (field_imm 59
                             (field_imm 91 (global Ppxlib__Import!)))
                           (field_imm 2 td/6373)))
                       (if
                         (&& (not handle_polymorphic_variant/6372)
                           (apply
                             (field_imm 2
                               (field_imm 70 (global Ppxlib__Import!)))
                             (apply (field_imm 20 (global Ppxlib__Common!))
                               td/6373 1)
                             -491008483))
                         0
                         (let
                           (arity/6374 =[int]
                              (apply
                                (field_imm 0
                                  (field_imm 91 (global Ppxlib__Import!)))
                                (field_imm 1 td/6373)))
                           (if
                             (apply (field_imm 78 (global Ppxlib__Import!))
                               arity/6374 4)
                             0
                             (let
                               (mty/6375 =
                                  (if
                                    (apply
                                      (field_imm 73 (global Ppxlib__Import!))
                                      arity/6374 0)
                                    sg_name/6371
                                    (apply
                                      (field_imm 3 (global Stdlib__printf!))
                                      [0: [2: 0 [4: 0 0 0 0]] "%s%d"]
                                      sg_name/6371 arity/6374))
                                td/6376 =
                                  (apply
                                    (field_imm 3 (global Ppxlib__Common!))
                                    td/6373)
                                for_subst/6377 =
                                  (apply
                                    (field_imm 0
                                      (field_imm 8
                                        (global Ppxlib_ast__Ast_helper_lite!)))
                                    (makeblock 0 loc/6370) 0
                                    (makeblock 0 (field_imm 1 td/6376)) 0 0 0
                                    (makeblock 0
                                      (apply
                                        (field_imm 37
                                          (field_imm 0
                                            (global Ppxlib__Ast_builder!)))
                                        loc/6370
                                        (apply
                                          (field_imm 3
                                            (field_imm 0
                                              (field_imm 0
                                                (global Ppxlib__Ast_builder!))))
                                          (field_imm 0 td/6376))
                                        (apply
                                          (field_imm 48
                                            (field_imm 91
                                              (global Ppxlib__Import!)))
                                          (field_imm 1 td/6376)
                                          (function prim/16778 stub
                                            (field_mut 0 prim/16778)))))
                                    (field_imm 0 td/6376)))
                               (makeblock 0
                                 (apply
                                   (field_imm 87
                                     (field_imm 0
                                       (global Ppxlib__Ast_builder!)))
                                   loc/6370
                                   (apply
                                     (field_imm 104
                                       (field_imm 0
                                         (global Ppxlib__Ast_builder!)))
                                     loc/6370
                                     (apply
                                       (field_imm 101
                                         (field_imm 0
                                           (global Ppxlib__Ast_builder!)))
                                       loc/6370
                                       (apply
                                         (field_imm 4
                                           (field_imm 0
                                             (field_imm 0
                                               (global Ppxlib__Ast_builder!))))
                                         loc/6370 mty/6375))
                                     (makeblock 0
                                       (makeblock 4
                                         (apply
                                           (field_imm 4
                                             (field_imm 0
                                               (field_imm 0
                                                 (global Ppxlib__Ast_builder!))))
                                           loc/6370 "t")
                                         for_subst/6377)
                                       0))))))))
                       (exit 18)))))
               (exit 18))
            with (18) 0)))
      (setfield_ptr(root-init) 21 (global Ppxlib__Common!) mk_named_sig/6368))
    (let (return/6954 = (function e/6956 (makeblock 0 e/6956 0)))
      (setfield_ptr(root-init) 27 (global Ppxlib__Common!) return/6954))
    (let
      (>>=/6957 =
         (function param/6964 f/6961
           (let
             (errors1/6960 =a (field_imm 1 param/6964)
              x/6959 =a (field_imm 0 param/6964)
              *match*/16783 = (apply f/6961 x/6959)
              errors2/6963 =a (field_imm 1 *match*/16783)
              y/6962 =a (field_imm 0 *match*/16783))
             (makeblock 0 y/6962
               (apply (field_imm 97 (global Ppxlib__Import!)) errors1/6960
                 errors2/6963)))))
      (setfield_ptr(root-init) 28 (global Ppxlib__Common!) >>=/6957))
    (let
      (>>|/6965 =
         (function param/6970 f/6969
           (let
             (errors/6968 =a (field_imm 1 param/6970)
              x/6967 =a (field_imm 0 param/6970))
             (makeblock 0 (apply f/6969 x/6967) errors/6968))))
      (setfield_ptr(root-init) 29 (global Ppxlib__Common!) >>|/6965))
    (let
      (of_result/6971 =
         (function result/6973 default/6974
           (switch* result/6973
            case tag 0:
             (let (x/6975 =a (field_imm 0 result/6973))
               (makeblock 0 x/6975 0))
            case tag 1:
             (let (errors/6976 =a (field_imm 0 result/6973))
               (makeblock 0 default/6974
                 (apply (field_imm 2 (field_imm 94 (global Ppxlib__Import!)))
                   errors/6976))))))
      (setfield_ptr(root-init) 30 (global Ppxlib__Common!) of_result/6971))
    (let
      (combine_errors/6983 =
         (function list/6985
           (makeblock 0
             (apply (field_imm 48 (field_imm 91 (global Ppxlib__Import!)))
               list/6985 (function prim/16784 stub (field_mut 0 prim/16784)))
             (apply (field_imm 63 (field_imm 91 (global Ppxlib__Import!)))
               list/6985 (function prim/16785 stub (field_mut 1 prim/16785))))))
      (setfield_ptr(root-init) 31 (global Ppxlib__Common!)
        combine_errors/6983))
    0
    (let
      (With_errors/6986 =
         (makeblock 0 (field_imm 27 (global Ppxlib__Common!))
           (field_imm 28 (global Ppxlib__Common!))
           (field_imm 29 (global Ppxlib__Common!))
           (field_imm 30 (global Ppxlib__Common!))
           (field_imm 31 (global Ppxlib__Common!))))
      (seq
        (setfield_ptr(root-init) 22 (global Ppxlib__Common!)
          With_errors/6986)
        0))))
(let
  (shared/16684 =a
     [0:
      #"arg_label" #"array" #"attribute" #"attributes" #"binding_op" #"bool"
      #"case" #"cases" #"char" #"class_declaration" #"class_description"
      #"class_expr" #"class_expr_desc" #"class_field" #"class_field_desc"
      #"class_field_kind" #"class_infos" #"class_signature"
      #"class_structure" #"class_type" #"class_type_declaration"
      #"class_type_desc" #"class_type_field" #"class_type_field_desc"
      #"closed_flag" #"constant" #"constructor_arguments"
      #"constructor_declaration" #"core_type" #"core_type_desc"
      #"direction_flag" #"directive_argument" #"directive_argument_desc"
      #"expression" #"expression_desc" #"extension" #"extension_constructor"
      #"extension_constructor_kind" #"functor_parameter"
      #"include_declaration" #"include_description" #"include_infos"
      #"injectivity" #"int" #"label" #"label_declaration" #"letop" #"list"
      #"loc" #"location" #"location_stack" #"longident" #"longident_loc"
      #"module_binding" #"module_declaration" #"module_expr"
      #"module_expr_desc" #"module_substitution" #"module_type"
      #"module_type_declaration" #"module_type_desc" #"mutable_flag"
      #"object_field" #"object_field_desc" #"open_declaration"
      #"open_description" #"open_infos" #"option" #"override_flag"
      #"package_type" #"pattern" #"pattern_desc" #"payload" #"position"
      #"private_flag" #"rec_flag" #"row_field" #"row_field_desc" #"signature"
      #"signature_item" #"signature_item_desc" #"string" #"structure"
      #"structure_item" #"structure_item_desc" #"toplevel_directive"
      #"toplevel_phrase" #"type_declaration" #"type_exception"
      #"type_extension" #"type_kind" #"value_binding" #"value_description"
      #"variance" #"virtual_flag" #"with_constraint"]
   shared/16733 =a
     [0:
      #"bool" #"cases" #"case" #"char" #"value_binding"
      #"extension_constructor_kind" #"core_type" #"structure" #"list"
      #"label_declaration" #"module_binding" #"position"
      #"toplevel_directive" #"directive_argument" #"object_field_desc"
      #"class_type_field_desc" #"open_infos" #"pattern_desc"
      #"signature_item" #"extension_constructor" #"toplevel_phrase"
      #"extension" #"location" #"variance" #"package_type" #"virtual_flag"
      #"module_type_desc" #"rec_flag" #"payload" #"type_exception" #"label"
      #"letop" #"location_stack" #"value_description" #"module_declaration"
      #"class_type_declaration" #"longident_loc" #"closed_flag"
      #"directive_argument_desc" #"attribute" #"class_infos"
      #"signature_item_desc" #"int" #"loc" #"row_field_desc" #"override_flag"
      #"structure_item_desc" #"class_field_desc" #"binding_op"
      #"module_expr_desc" #"class_signature" #"type_extension"
      #"class_field_kind" #"module_type_declaration" #"arg_label"
      #"row_field" #"longident" #"string" #"pattern" #"include_description"
      #"signature" #"class_type_field" #"attributes" #"open_description"
      #"with_constraint" #"include_declaration" #"class_type_desc"
      #"private_flag" #"injectivity" #"open_declaration" #"object_field"
      #"array" #"constant" #"class_expr" #"functor_parameter"
      #"direction_flag" #"core_type_desc" #"type_declaration"
      #"constructor_declaration" #"option" #"type_kind" #"module_expr"
      #"module_substitution" #"class_description" #"expression" #"class_type"
      #"structure_item" #"include_infos" #"class_declaration" #"module_type"
      #"class_expr_desc" #"class_structure" #"mutable_flag"
      #"expression_desc" #"constructor_arguments" #"class_field"]
   shared/16687 =a [0: #"type_names"]
   shared/16688 =a
     [0:
      #"with_constraint" #"virtual_flag" #"variance" #"value_description"
      #"value_binding" #"type_kind" #"type_extension" #"type_exception"
      #"type_declaration" #"toplevel_phrase" #"toplevel_directive"
      #"structure_item_desc" #"structure_item" #"structure" #"string"
      #"signature_item_desc" #"signature_item" #"signature" #"row_field_desc"
      #"row_field" #"return_true" #"rec_flag" #"private_flag" #"position"
      #"payload" #"pattern_desc" #"pattern" #"package_type" #"override_flag"
      #"option" #"open_infos" #"open_description" #"open_declaration"
      #"object_field_desc" #"object_field" #"mutable_flag"
      #"module_type_desc" #"module_type_declaration" #"module_type"
      #"module_substitution" #"module_expr_desc" #"module_expr"
      #"module_declaration" #"module_binding" #"longident_loc" #"longident"
      #"location_stack" #"location" #"loc" #"list" #"letop"
      #"label_declaration" #"label" #"int" #"injectivity" #"include_infos"
      #"include_description" #"include_declaration" #"go"
      #"functor_parameter" #"extension_constructor_kind"
      #"extension_constructor" #"extension" #"expression_desc" #"expression"
      #"directive_argument_desc" #"directive_argument" #"direction_flag"
      #"core_type_desc" #"core_type" #"constructor_declaration"
      #"constructor_arguments" #"constant" #"closed_flag"
      #"class_type_field_desc" #"class_type_field" #"class_type_desc"
      #"class_type_declaration" #"class_type" #"class_structure"
      #"class_signature" #"class_infos" #"class_field_kind"
      #"class_field_desc" #"class_field" #"class_expr_desc" #"class_expr"
      #"class_description" #"class_declaration" #"char" #"cases" #"case"
      #"bool" #"binding_op" #"attributes" #"attribute" #"array" #"arg_label"
      #"*dummy method*"]
   shared/16728 =a
     [0:
      #"with_constraint" #"virtual_flag" #"variance" #"value_description"
      #"value_binding" #"type_kind" #"type_extension" #"type_exception"
      #"type_declaration" #"toplevel_phrase" #"toplevel_directive"
      #"structure_item_desc" #"structure_item" #"structure" #"string"
      #"signature_item_desc" #"signature_item" #"signature" #"row_field_desc"
      #"row_field" #"rec_flag" #"private_flag" #"position" #"payload"
      #"pattern_desc" #"pattern" #"package_type" #"override_flag" #"option"
      #"open_infos" #"open_description" #"open_declaration"
      #"object_field_desc" #"object_field" #"mutable_flag"
      #"module_type_desc" #"module_type_declaration" #"module_type"
      #"module_substitution" #"module_expr_desc" #"module_expr"
      #"module_declaration" #"module_binding" #"longident_loc" #"longident"
      #"location_stack" #"location" #"loc" #"list" #"letop"
      #"label_declaration" #"label" #"int" #"injectivity" #"include_infos"
      #"include_description" #"include_declaration" #"functor_parameter"
      #"extension_constructor_kind" #"extension_constructor" #"extension"
      #"expression_desc" #"expression" #"directive_argument_desc"
      #"directive_argument" #"direction_flag" #"core_type_desc" #"core_type"
      #"constructor_declaration" #"constructor_arguments" #"constant"
      #"closed_flag" #"class_type_field_desc" #"class_type_field"
      #"class_type_desc" #"class_type_declaration" #"class_type"
      #"class_structure" #"class_signature" #"class_infos"
      #"class_field_kind" #"class_field_desc" #"class_field"
      #"class_expr_desc" #"class_expr" #"class_description"
      #"class_declaration" #"char" #"cases" #"case" #"bool" #"binding_op"
      #"attributes" #"attribute" #"array" #"arg_label"])
  (seq
    (setfield_ptr(root-init) 32 (global Ppxlib__Common!)
      (caml_make_vect 1 0))
    (let (lident/2085 = (function x/2087 (makeblock 0 x/2087)))
      (setfield_ptr(root-init) 0 (global Ppxlib__Common!) lident/2085))
    (let
      (core_type_of_type_declaration/2186 =
         (function td/2188
           (let (loc/2189 = (field_imm 1 (field_imm 0 td/2188)))
             (apply
               (field_imm 37 (field_imm 0 (global Ppxlib__Ast_builder!)))
               loc/2189
               (apply
                 (field_imm 2
                   (field_imm 0 (field_imm 0 (global Ppxlib__Ast_builder!))))
                 (field_imm 0 (global Ppxlib__Common!))
                 (field_imm 0 td/2188))
               (apply (field_imm 48 (field_imm 91 (global Ppxlib__Import!)))
                 (field_imm 1 td/2188)
                 (function prim/16619 stub (field_mut 0 prim/16619)))))))
      (setfield_ptr(root-init) 1 (global Ppxlib__Common!)
        core_type_of_type_declaration/2186))
    (let
      (strip_gen_symbol_suffix/3148 =
         (let
           (chop/3149 =
              (function n/3151[int] or_more/3152 string/3153 pos/3154 f/3155
                (let (target/3156 =[int] (- (field_int 0 pos/3154) n/3151))
                  (seq
                    (while
                      (&&
                        (apply (field_imm 75 (global Ppxlib__Import!))
                          (field_int 0 pos/3154) 0)
                        (&&
                          (|| or_more/3152
                            (apply (field_imm 75 (global Ppxlib__Import!))
                              (field_int 0 pos/3154) target/3156))
                          (apply f/3155
                            (string.get string/3153
                              (- (field_int 0 pos/3154) 1)))))
                      (setfield_imm 0 pos/3154 (- (field_int 0 pos/3154) 1)))
                    (apply (field_imm 77 (global Ppxlib__Import!))
                      (field_int 0 pos/3154) target/3156)))))
           (function string/3313
             (let
               (pos/3314 = (makemutable 0 (int) (string.length string/3313)))
               (if
                 (&&
                   (apply chop/3149 1 0 string/3313 pos/3314
                     (apply
                       (field_imm 7 (field_imm 83 (global Ppxlib__Import!)))
                       '_'))
                   (&&
                     (apply chop/3149 3 1 string/3313 pos/3314
                       (function param/3335[int]
                         (if (isout 9 (-48+ param/3335)) 0 1)))
                     (apply chop/3149 2 0 string/3313 pos/3314
                       (apply
                         (field_imm 7
                           (field_imm 83 (global Ppxlib__Import!)))
                         '_'))))
                 (apply
                   (field_imm 29 (field_imm 96 (global Ppxlib__Import!)))
                   string/3313 (field_int 0 pos/3314))
                 string/3313)))))
      (setfield_ptr(root-init) 23 (global Ppxlib__Common!)
        strip_gen_symbol_suffix/3148))
    (let
      (gen_symbol/3336 =
         (let (cnt/3337 = (makemutable 0 (int) 0))
           (function *opt*/3338 param/3375
             (let
               (prefix/3339 = (if *opt*/3338 (field_imm 0 *opt*/3338) "_x"))
               (seq (setfield_imm 0 cnt/3337 (+ (field_int 0 cnt/3337) 1))
                 (let
                   (prefix/3341 =
                      (apply (field_imm 23 (global Ppxlib__Common!))
                        prefix/3339))
                   (apply (field_imm 3 (global Stdlib__printf!))
                     [0:
                      [2: 0 [11: "__" [4: 3 [0: 2 3] 0 [12: '_' 0]]]]
                      "%s__%03i_"]
                     prefix/3341 (field_int 0 cnt/3337))))))))
      (setfield_ptr(root-init) 5 (global Ppxlib__Common!) gen_symbol/3336))
    (let
      (name_type_params_in_td_res/3376 =
         (function td/3378
           (let
             (name_param/3388 =
                (function i/3390[int] param/3499
                  (let
                    (variance/3392 =a (field_imm 1 param/3499)
                     tp/3391 =a (field_imm 0 param/3499))
                    (apply
                      (field_imm 4 (field_imm 93 (global Ppxlib__Import!)))
                      (let (v/3393 = (field_imm 0 tp/3391))
                        (switch v/3393
                         case int 0:
                          (makeblock 0
                            (makeblock 0
                              (apply (field_imm 5 (global Ppxlib__Common!))
                                (makeblock 0
                                  (apply
                                    (field_imm 0
                                      (field_imm 96 (global Ppxlib__Import!)))
                                    (+ (/ i/3390 26) 1)
                                    (apply
                                      (field_imm 0
                                        (field_imm 83
                                          (global Ppxlib__Import!)))
                                      (+ 'a' (mod i/3390 26)))))
                                0)))
                         case tag 0: (makeblock 0 v/3393)
                         default:
                          (makeblock 1
                            (apply
                              (field_imm 1
                                (field_imm 12 (global Ppxlib__Location!)))
                              (field_imm 1 tp/3391)
                              [0:
                               [11: "not a type parameter" 0]
                               "not a type parameter"]))))
                      (function ptyp_desc/3498
                        (makeblock 0
                          (makeblock 0 ptyp_desc/3498 (field_imm 1 tp/3391)
                            (field_imm 2 tp/3391) (field_imm 3 tp/3391))
                          variance/3392)))))
              *match*/16627 =
                (apply (field_imm 57 (field_imm 91 (global Ppxlib__Import!)))
                  (function param/3507
                    (switch* param/3507
                     case tag 0: (makeblock 0 (field_imm 0 param/3507))
                     case tag 1: (makeblock 1 (field_imm 0 param/3507))))
                  (apply
                    (let
                      (func/16622 =
                         (field_imm 49
                           (field_imm 91 (global Ppxlib__Import!))))
                      (function param/16623 stub
                        (apply func/16622 param/16623 name_param/3388)))
                    (field_imm 1 td/3378)))
              errors/3501 =a (field_imm 1 *match*/16627))
             (if errors/3501
               (makeblock 1
                 (makeblock 0 (field_imm 0 errors/3501)
                   (field_imm 1 errors/3501)))
               (makeblock 0
                 (makeblock 0 (field_imm 0 td/3378)
                   (field_imm 0 *match*/16627) (field_imm 2 td/3378)
                   (field_imm 3 td/3378) (field_int 4 td/3378)
                   (field_imm 5 td/3378) (field_imm 6 td/3378)
                   (field_imm 7 td/3378)))))))
      (setfield_ptr(root-init) 2 (global Ppxlib__Common!)
        name_type_params_in_td_res/3376))
    (let
      (name_type_params_in_td/3511 =
         (function td/3513
           (let
             (*match*/16630 =
                (apply (field_imm 2 (global Ppxlib__Common!)) td/3513))
             (switch* *match*/16630
              case tag 0: (field_imm 0 *match*/16630)
              case tag 1:
               (apply (field_imm 7 (field_imm 12 (global Ppxlib__Location!)))
                 (field_imm 0 (field_imm 0 *match*/16630)))))))
      (setfield_ptr(root-init) 3 (global Ppxlib__Common!)
        name_type_params_in_td/3511))
    (let
      (combinator_type_of_type_declaration/3516 =
         (function td/3518 f/3519
           (let
             (td/3520 =
                (apply (field_imm 3 (global Ppxlib__Common!)) td/3518)
              result_type/3521 =
                (apply f/3519 (field_imm 1 (field_imm 0 td/3520))
                  (apply (field_imm 1 (global Ppxlib__Common!)) td/3520)))
             (apply (field_imm 50 (field_imm 91 (global Ppxlib__Import!)))
               (field_imm 1 td/3520) result_type/3521
               (function param/3526 acc/3524
                 (let
                   (tp/3522 =a (field_imm 0 param/3526)
                    loc/3525 = (field_imm 1 tp/3522))
                   (apply
                     (field_imm 35
                       (field_imm 0 (global Ppxlib__Ast_builder!)))
                     loc/3525 0 (apply f/3519 loc/3525 tp/3522) acc/3524)))))))
      (setfield_ptr(root-init) 4 (global Ppxlib__Common!)
        combinator_type_of_type_declaration/3516))
    (let
      (string_of_core_type/3527 =
         (function ct/3529
           (let
             (buf/3530 = (apply (field_imm 0 (global Stdlib__buffer!)) 128)
              ppf/3573 =
                (apply (field_imm 111 (global Stdlib__format!)) buf/3530))
             (seq
               (apply (field_imm 4 (global Astlib__Pprintast!)) ppf/3573
                 ct/3529)
               (apply (field_imm 35 (global Stdlib__format!)) ppf/3573 0)
               (apply (field_imm 1 (global Stdlib__buffer!)) buf/3530)))))
      (setfield_ptr(root-init) 6 (global Ppxlib__Common!)
        string_of_core_type/3527))
    (let
      (get_type_param_name_res/3947 =
         (function (param/16633, param/16634)
           (let
             (loc/3950 = (field_imm 1 param/16633)
              *match*/16635 = (field_imm 0 param/16633))
             (catch
               (switch *match*/16635
                case tag 0:
                 (makeblock 0
                   (apply
                     (field_imm 1
                       (field_imm 0
                         (field_imm 0 (global Ppxlib__Ast_builder!))))
                     loc/3950 (field_imm 0 *match*/16635)))
                default: (exit 7))
              with (7)
               (makeblock 1
                 (makeblock 0
                   (apply
                     (field_imm 1 (field_imm 12 (global Ppxlib__Location!)))
                     loc/3950
                     [0:
                      [11: "not a type parameter" 0] "not a type parameter"])
                   0))))))
      (setfield_ptr(root-init) 11 (global Ppxlib__Common!)
        get_type_param_name_res/3947))
    (let
      (get_type_param_name/4742 =
         (function t/4744
           (let
             (*match*/16636 =
                (apply (field_imm 11 (global Ppxlib__Common!)) t/4744))
             (switch* *match*/16636
              case tag 0: (field_imm 0 *match*/16636)
              case tag 1:
               (apply (field_imm 7 (field_imm 12 (global Ppxlib__Location!)))
                 (field_imm 0 (field_imm 0 *match*/16636)))))))
      (setfield_ptr(root-init) 12 (global Ppxlib__Common!)
        get_type_param_name/4742))
    (let
      (Type_is_recursive/4747 =
         (makeblock 248 "Ppxlib__Common.Type_is_recursive"
           (caml_fresh_oo_id 0)))
      (setfield_ptr(root-init) 24 (global Ppxlib__Common!)
        Type_is_recursive/4747))
    (letrec
      (type_is_recursive/4751
         (let
           (type_is_recursive_init/16690 =
              (function class/16645
                (let
                  (rec_flag/4753 =o
                     (apply (field_imm 2 (global CamlinternalOO!))
                       class/16645 #"")
                   tds/4755 =o
                     (apply (field_imm 2 (global CamlinternalOO!))
                       class/16645 #"")
                   ids/16686 =
                     (apply (field_imm 3 (global CamlinternalOO!))
                       class/16645 shared/16688 shared/16687)
                   type_declaration/5282 =o (field_mut 8 ids/16686)
                   return_true/5192 =o (field_mut 20 ids/16686)
                   label_declaration/5240 =o (field_mut 51 ids/16686)
                   go/5196 =o (field_mut 58 ids/16686)
                   core_type/5193 =o (field_mut 69 ids/16686)
                   constructor_declaration/5194 =o (field_mut 70 ids/16686)
                   attributes/5195 =o (field_mut 94 ids/16686)
                   type_names/5191 =o (field_mut 99 ids/16686)
                   inh/16685 =
                     (apply (field_imm 17 (global CamlinternalOO!))
                       class/16645 0 0 shared/16684
                       (field_imm 1 (global Ppxlib__Ast_traverse0!)) 1)
                   obj_init/16649 =o (field_mut 0 inh/16685)
                   core_type/5117 =o (field_mut 29 inh/16685))
                  (seq
                    (apply (field_imm 10 (global CamlinternalOO!))
                      class/16645
                      (makeblock 0 return_true/5192
                        (function self-1/5292 param/5293
                          (raise_notrace
                            (field_imm 24 (global Ppxlib__Common!))))
                        core_type/5193
                        (function self-1/5295 ctype/5296
                          (let (*match*/16672 = (field_imm 0 ctype/5296))
                            (catch
                              (switch *match*/16672
                               case tag 1: 0
                               case tag 3:
                                (let
                                  (*match*/16677 =a
                                     (field_imm 0
                                       (field_imm 0 *match*/16672)))
                                  (switch* *match*/16677
                                   case tag 0:
                                    (if
                                      (apply
                                        (field_imm 24
                                          (field_imm 91
                                            (global Ppxlib__Import!)))
                                        (field_imm 0 *match*/16677)
                                        (field_computed self-1/5295
                                          type_names/5191))
                                      (sendself self-1/5295 return_true/5192
                                        0)
                                      (exit 11))
                                   case tag 1: (exit 11)
                                   case tag 2: (exit 11)))
                               default: (exit 11))
                             with (11)
                              (apply core_type/5117 self-1/5295 ctype/5296))))
                        constructor_declaration/5194
                        (function self-1/5299 cd/5300
                          (let (*match*/16669 = (field_imm 2 cd/5300))
                            (switch* *match*/16669
                             case tag 0:
                              (apply
                                (field_imm 70
                                  (field_imm 91 (global Ppxlib__Import!)))
                                (field_imm 0 *match*/16669)
                                (sendself self-1/5299 core_type/5193))
                             case tag 1:
                              (apply
                                (field_imm 70
                                  (field_imm 91 (global Ppxlib__Import!)))
                                (field_imm 0 *match*/16669)
                                (sendself self-1/5299 label_declaration/5240)))))
                        attributes/5195 (function self-1/5304 param/5305 0)
                        go/5196
                        (function self-1/5307 param/5308
                          (let
                            (*match*/16664 =
                               (field_computed self-1/5307 rec_flag/4753))
                            (if *match*/16664
                              (catch
                                (try
                                  (exit 9
                                    (apply
                                      (field_imm 70
                                        (field_imm 91
                                          (global Ppxlib__Import!)))
                                      (field_computed self-1/5307 tds/4755)
                                      (sendself self-1/5307
                                        type_declaration/5282)))
                                 with exn/16663
                                  (if
                                    (== exn/16663
                                      (field_imm 24 (global Ppxlib__Common!)))
                                    1 (reraise exn/16663)))
                               with (9 val/16662) 0)
                              0)))))
                    (function env/16647 self/16646 rec_flag/4752 tds/4754
                      (let
                        (self/16648 =
                           (apply (field_imm 23 (global CamlinternalOO!))
                             self/16646 class/16645))
                        (seq
                          (seq
                            (setfield_ptr_computed self/16648 tds/4755
                              tds/4754)
                            (setfield_imm_computed self/16648 rec_flag/4753
                              rec_flag/4752)
                            (apply obj_init/16649 self/16648)
                            (setfield_ptr_computed self/16648 type_names/5191
                              (apply
                                (field_imm 48
                                  (field_imm 91 (global Ppxlib__Import!)))
                                tds/4754
                                (function td/5188
                                  (field_imm 0 (field_imm 0 td/5188))))))
                          (apply (field_imm 25 (global CamlinternalOO!))
                            self/16646 self/16648 class/16645))))))))
           (apply (field_imm 18 (global CamlinternalOO!))
             [0:
              #"bool" #"cases" #"case" #"char" #"value_binding"
              #"extension_constructor_kind" #"core_type" #"structure" #"list"
              #"label_declaration" #"module_binding" #"position"
              #"toplevel_directive" #"directive_argument"
              #"object_field_desc" #"class_type_field_desc" #"open_infos"
              #"pattern_desc" #"signature_item" #"extension_constructor"
              #"toplevel_phrase" #"extension" #"location" #"variance"
              #"package_type" #"virtual_flag" #"module_type_desc" #"rec_flag"
              #"payload" #"type_exception" #"label" #"letop"
              #"location_stack" #"value_description" #"module_declaration"
              #"class_type_declaration" #"longident_loc" #"closed_flag"
              #"directive_argument_desc" #"return_true" #"attribute"
              #"class_infos" #"signature_item_desc" #"go" #"int" #"loc"
              #"row_field_desc" #"override_flag" #"structure_item_desc"
              #"class_field_desc" #"binding_op" #"module_expr_desc"
              #"class_signature" #"type_extension" #"class_field_kind"
              #"module_type_declaration" #"arg_label" #"row_field"
              #"longident" #"string" #"pattern" #"include_description"
              #"signature" #"class_type_field" #"attributes"
              #"open_description" #"with_constraint" #"include_declaration"
              #"class_type_desc" #"private_flag" #"injectivity"
              #"open_declaration" #"object_field" #"array" #"constant"
              #"class_expr" #"functor_parameter" #"direction_flag"
              #"core_type_desc" #"type_declaration"
              #"constructor_declaration" #"option" #"type_kind"
              #"module_expr" #"module_substitution" #"class_description"
              #"expression" #"class_type" #"structure_item" #"include_infos"
              #"class_declaration" #"module_type" #"class_expr_desc"
              #"class_structure" #"mutable_flag" #"expression_desc"
              #"constructor_arguments" #"class_field"]
             type_is_recursive_init/16690)))
      (setfield_ptr(root-init) 13 (global Ppxlib__Common!)
        type_is_recursive/4751))
    (let
      (really_recursive/5309 =
         (function rec_flag/5311 tds/5312
           (sendcache
             (apply (field_mut 0 (field_imm 13 (global Ppxlib__Common!))) 0
               rec_flag/5311 tds/5312)
             23080 (field_mut 32 (global Ppxlib__Common!)) 0 0)))
      (setfield_ptr(root-init) 14 (global Ppxlib__Common!)
        really_recursive/5309))
    (letrec
      (last/5313
         (function x/5314 l/5315
           (if l/5315
             (apply last/5313 (field_imm 0 l/5315) (field_imm 1 l/5315))
             x/5314)))
      (setfield_ptr(root-init) 25 (global Ppxlib__Common!) last/5313))
    (let
      (loc_of_name_and_payload/5318 =
         (function name/5320 payload/5321
           (catch
             (switch* payload/5321
              case tag 0: (exit 12)
              case tag 1: (exit 12)
              case tag 2: (field_imm 1 (field_imm 0 payload/5321))
              case tag 3:
               (let
                 (*match*/16699 =a (field_imm 1 payload/5321)
                  x/5327 =a (field_imm 0 payload/5321))
                 (if *match*/16699
                   (let (init/16696 = (field_imm 1 x/5327))
                     (makeblock 0 (field_imm 0 init/16696)
                       (field_imm 1
                         (field_imm 1 (field_imm 0 *match*/16699)))
                       (field_int 2 init/16696)))
                   (field_imm 1 x/5327))))
            with (12)
             (let (*match*/16697 =a (field_imm 0 payload/5321))
               (if *match*/16697
                 (let
                   (x/5322 =a (field_imm 0 *match*/16697)
                    init/16694 = (field_imm 1 x/5322))
                   (makeblock 0 (field_imm 0 init/16694)
                     (field_imm 1
                       (field_imm 1
                         (apply (field_imm 25 (global Ppxlib__Common!))
                           x/5322 (field_imm 1 *match*/16697))))
                     (field_int 2 init/16694)))
                 (field_imm 1 name/5320))))))
      (setfield_ptr(root-init) 26 (global Ppxlib__Common!)
        loc_of_name_and_payload/5318))
    (let
      (loc_of_payload/5360 =
         (function param/5364
           (apply (field_imm 26 (global Ppxlib__Common!))
             (field_imm 0 param/5364) (field_imm 1 param/5364))))
      (setfield_ptr(root-init) 15 (global Ppxlib__Common!)
        loc_of_payload/5360))
    (let
      (loc_of_attribute/5365 =
         (function param/5379
           (let
             (attr_payload/5368 =a (field_imm 1 param/5379)
              attr_name/5367 =a (field_imm 0 param/5379))
             (if
               (apply (field_imm 2 (field_imm 70 (global Ppxlib__Import!)))
                 (field_imm 1 attr_name/5367)
                 (field_imm 2 (global Ppxlib__Location!)))
               (apply (field_imm 26 (global Ppxlib__Common!)) attr_name/5367
                 attr_payload/5368)
               (let (init/16701 = (field_imm 1 attr_name/5367))
                 (makeblock 0 (field_imm 0 init/16701)
                   (field_imm 1
                     (apply (field_imm 26 (global Ppxlib__Common!))
                       attr_name/5367 attr_payload/5368))
                   (field_int 2 init/16701)))))))
      (setfield_ptr(root-init) 16 (global Ppxlib__Common!)
        loc_of_attribute/5365))
    (let
      (loc_of_extension/5380 =
         (function (param/16703, param/16704)
           (if
             (apply (field_imm 2 (field_imm 70 (global Ppxlib__Import!)))
               (field_imm 1 param/16703)
               (field_imm 2 (global Ppxlib__Location!)))
             (apply (field_imm 26 (global Ppxlib__Common!)) param/16703
               param/16704)
             (let (init/16705 = (field_imm 1 param/16703))
               (makeblock 0 (field_imm 0 init/16705)
                 (field_imm 1
                   (apply (field_imm 26 (global Ppxlib__Common!)) param/16703
                     param/16704))
                 (field_int 2 init/16705))))))
      (setfield_ptr(root-init) 17 (global Ppxlib__Common!)
        loc_of_extension/5380))
    (let
      (curry_applications/5385 =
         (function expr/5387
           (let (*match*/16706 = (field_imm 0 expr/5387))
             (catch
               (switch *match*/16706
                case tag 5:
                 (let
                   (f/5907 =a (field_imm 0 *match*/16706)
                    loc/5909 = (field_imm 1 expr/5387))
                   (letrec
                     (loop/5910
                        (function param/5913
                          (if param/5913
                            (apply
                              (field_imm 54
                                (field_imm 0
                                  (global Ppxlib__Ast_builder_generated!)))
                              loc/5909
                              (apply loop/5910 (field_imm 1 param/5913))
                              (makeblock 0 (field_imm 0 param/5913) 0))
                            f/5907)))
                     (apply loop/5910
                       (apply
                         (field_imm 8
                           (field_imm 91 (global Ppxlib__Import!)))
                         (field_imm 1 *match*/16706)))))
                default: (exit 14))
              with (14) expr/5387))))
      (setfield_ptr(root-init) 18 (global Ppxlib__Common!)
        curry_applications/5385))
    (let
      (attributes_errors/5914 =
         (let
           (func/16709 =
              (field_imm 62 (field_imm 91 (global Ppxlib__Import!)))
            arg/16710 =
              (function attr/5916
                (if
                  (apply (field_imm 6 (global Ppxlib__Name!))
                    (field_imm 0 (field_imm 0 attr/5916)))
                  0
                  (let
                    (loc/5947 =
                       (apply (field_imm 16 (global Ppxlib__Common!))
                         attr/5916))
                    (makeblock 0
                      (apply
                        (field_imm 1
                          (field_imm 12 (global Ppxlib__Location!)))
                        loc/5947
                        [0:
                         [11: "Attributes not allowed here" 0]
                         "Attributes not allowed here"]))))))
           (function param/16711 stub
             (apply func/16709 param/16711 arg/16710))))
      (setfield_ptr(root-init) 9 (global Ppxlib__Common!)
        attributes_errors/5914))
    (let
      (collect_attributes_errors/5948 =
         (let
           (class/16719 =
              (apply (field_imm 15 (global CamlinternalOO!)) shared/16733)
            obj_init/16732 =
              (let
                (ids/16727 =
                   (apply (field_imm 7 (global CamlinternalOO!)) class/16719
                     shared/16728)
                 attribute/6051 =o (field_mut 93 ids/16727)
                 inh/16726 =
                   (apply (field_imm 17 (global CamlinternalOO!)) class/16719
                     0 0 shared/16684
                     (field_imm 2 (global Ppxlib__Ast_traverse0!)) 1)
                 obj_init/16723 =o (field_mut 0 inh/16726))
                (seq
                  (apply (field_imm 9 (global CamlinternalOO!)) class/16719
                    attribute/6051
                    (function self-2/6148 a/6149 acc/6150
                      (apply (field_imm 97 (global Ppxlib__Import!))
                        (apply (field_imm 9 (global Ppxlib__Common!))
                          (makeblock 0 a/6149 0))
                        acc/6150)))
                  (function env/16721
                    (let
                      (self/16722 =
                         (apply (field_imm 23 (global CamlinternalOO!)) 0
                           class/16719))
                      (seq (apply obj_init/16723 self/16722)
                        (apply (field_imm 25 (global CamlinternalOO!)) 0
                          self/16722 class/16719)))))))
           (seq (apply (field_imm 16 (global CamlinternalOO!)) class/16719)
             (apply obj_init/16732 0))))
      (setfield_ptr(root-init) 10 (global Ppxlib__Common!)
        collect_attributes_errors/5948))
    (let
      (assert_no_attributes/6151 =
         (function l/6153
           (let
             (*match*/16734 =
                (apply (field_imm 9 (global Ppxlib__Common!)) l/6153))
             (if *match*/16734
               (apply (field_imm 7 (field_imm 12 (global Ppxlib__Location!)))
                 (field_imm 0 *match*/16734))
               0))))
      (setfield_ptr(root-init) 7 (global Ppxlib__Common!)
        assert_no_attributes/6151))
    (let
      (assert_no_attributes_in/6155 =
         (let
           (class/16743 =
              (apply (field_imm 15 (global CamlinternalOO!)) shared/16733)
            obj_init/16755 =
              (let
                (ids/16751 =
                   (apply (field_imm 7 (global CamlinternalOO!)) class/16743
                     shared/16728)
                 attribute/6258 =o (field_mut 93 ids/16751)
                 inh/16750 =
                   (apply (field_imm 17 (global CamlinternalOO!)) class/16743
                     0 0 shared/16684
                     (field_imm 1 (global Ppxlib__Ast_traverse0!)) 1)
                 obj_init/16747 =o (field_mut 0 inh/16750))
                (seq
                  (apply (field_imm 9 (global CamlinternalOO!)) class/16743
                    attribute/6258
                    (function self-3/6355 a/6356
                      (apply (field_imm 7 (global Ppxlib__Common!))
                        (makeblock 0 a/6356 0))))
                  (function env/16745
                    (let
                      (self/16746 =
                         (apply (field_imm 23 (global CamlinternalOO!)) 0
                           class/16743))
                      (seq (apply obj_init/16747 self/16746)
                        (apply (field_imm 25 (global CamlinternalOO!)) 0
                          self/16746 class/16743)))))))
           (seq (apply (field_imm 16 (global CamlinternalOO!)) class/16743)
             (apply obj_init/16755 0))))
      (setfield_ptr(root-init) 8 (global Ppxlib__Common!)
        assert_no_attributes_in/6155))
    (let
      (attribute_of_warning/6357 =
         (function loc/6359 s/6360
           (makeblock 0 (makeblock 0 "ocaml.ppwarning" loc/6359)
             (makeblock 0
               (makeblock 0
                 (apply
                   (field_imm 148
                     (field_imm 0 (global Ppxlib__Ast_builder!)))
                   loc/6359
                   (apply
                     (field_imm 174
                       (field_imm 0 (global Ppxlib__Ast_builder!)))
                     loc/6359 s/6360)
                   0)
                 0))
             loc/6359)))
      (setfield_ptr(root-init) 19 (global Ppxlib__Common!)
        attribute_of_warning/6357))
    (let
      (is_polymorphic_variant/6361 =
         (letrec
           (check/6362
              (function param/6364
                (catch
                  (let (*match*/16762 =a (field_imm 0 param/6364))
                    (switch *match*/16762
                     case tag 3: 374637448
                     case tag 6:
                      (apply check/6362 (field_imm 0 *match*/16762))
                     case tag 7: -491008483
                     default: (exit 17)))
                 with (17) 974048726)))
           (function td/6365 sig_/6366
             (let (*match*/16759 = (field_imm 3 td/6365))
               (catch
                 (if (isint *match*/16759)
                   (if *match*/16759 (exit 16)
                     (let (*match*/16758 = (field_imm 5 td/6365))
                       (if *match*/16758
                         (apply check/6362 (field_imm 0 *match*/16758))
                         (if sig_/6366 374637448 974048726))))
                   (exit 16))
                with (16) 974048726)))))
      (setfield_ptr(root-init) 20 (global Ppxlib__Common!)
        is_polymorphic_variant/6361))
    (let
      (mk_named_sig/6368 =
         (function loc/6370 sg_name/6371 handle_polymorphic_variant/6372
           param/6952
           (catch
             (if param/6952
               (if (field_imm 1 param/6952) (exit 18)
                 (let (td/6373 =a (field_imm 0 param/6952))
                   (if
                     (&&
                       (apply
                         (field_imm 47
                           (field_imm 96 (global Ppxlib__Import!)))
                         (field_imm 0 (field_imm 0 td/6373)) "t")
                       (apply
                         (field_imm 59
                           (field_imm 91 (global Ppxlib__Import!)))
                         (field_imm 2 td/6373)))
                     (if
                       (&& (not handle_polymorphic_variant/6372)
                         (apply
                           (field_imm 2
                             (field_imm 70 (global Ppxlib__Import!)))
                           (apply (field_imm 20 (global Ppxlib__Common!))
                             td/6373 1)
                           -491008483))
                       0
                       (let
                         (arity/6374 =[int]
                            (apply
                              (field_imm 0
                                (field_imm 91 (global Ppxlib__Import!)))
                              (field_imm 1 td/6373)))
                         (if
                           (apply (field_imm 78 (global Ppxlib__Import!))
                             arity/6374 4)
                           0
                           (let
                             (mty/6375 =
                                (if
                                  (apply
                                    (field_imm 73 (global Ppxlib__Import!))
                                    arity/6374 0)
                                  sg_name/6371
                                  (apply
                                    (field_imm 3 (global Stdlib__printf!))
                                    [0: [2: 0 [4: 0 0 0 0]] "%s%d"]
                                    sg_name/6371 arity/6374))
                              td/6376 =
                                (apply (field_imm 3 (global Ppxlib__Common!))
                                  td/6373)
                              for_subst/6377 =
                                (apply
                                  (field_imm 0
                                    (field_imm 8
                                      (global Ppxlib_ast__Ast_helper_lite!)))
                                  (makeblock 0 loc/6370) 0
                                  (makeblock 0 (field_imm 1 td/6376)) 0 0 0
                                  (makeblock 0
                                    (apply
                                      (field_imm 37
                                        (field_imm 0
                                          (global Ppxlib__Ast_builder!)))
                                      loc/6370
                                      (apply
                                        (field_imm 3
                                          (field_imm 0
                                            (field_imm 0
                                              (global Ppxlib__Ast_builder!))))
                                        (field_imm 0 td/6376))
                                      (apply
                                        (field_imm 48
                                          (field_imm 91
                                            (global Ppxlib__Import!)))
                                        (field_imm 1 td/6376)
                                        (function prim/16778 stub
                                          (field_mut 0 prim/16778)))))
                                  (field_imm 0 td/6376)))
                             (makeblock 0
                               (apply
                                 (field_imm 87
                                   (field_imm 0
                                     (global Ppxlib__Ast_builder!)))
                                 loc/6370
                                 (apply
                                   (field_imm 104
                                     (field_imm 0
                                       (global Ppxlib__Ast_builder!)))
                                   loc/6370
                                   (apply
                                     (field_imm 101
                                       (field_imm 0
                                         (global Ppxlib__Ast_builder!)))
                                     loc/6370
                                     (apply
                                       (field_imm 4
                                         (field_imm 0
                                           (field_imm 0
                                             (global Ppxlib__Ast_builder!))))
                                       loc/6370 mty/6375))
                                   (makeblock 0
                                     (makeblock 4
                                       (apply
                                         (field_imm 4
                                           (field_imm 0
                                             (field_imm 0
                                               (global Ppxlib__Ast_builder!))))
                                         loc/6370 "t")
                                       for_subst/6377)
                                     0))))))))
                     (exit 18))))
               (exit 18))
            with (18) 0)))
      (setfield_ptr(root-init) 21 (global Ppxlib__Common!) mk_named_sig/6368))
    (let (return/6954 = (function e/6956 (makeblock 0 e/6956 0)))
      (setfield_ptr(root-init) 27 (global Ppxlib__Common!) return/6954))
    (let
      (>>=/6957 =
         (function param/6964 f/6961
           (let (*match*/16783 = (apply f/6961 (field_imm 0 param/6964)))
             (makeblock 0 (field_imm 0 *match*/16783)
               (apply (field_imm 97 (global Ppxlib__Import!))
                 (field_imm 1 param/6964) (field_imm 1 *match*/16783))))))
      (setfield_ptr(root-init) 28 (global Ppxlib__Common!) >>=/6957))
    (let
      (>>|/6965 =
         (function param/6970 f/6969
           (makeblock 0 (apply f/6969 (field_imm 0 param/6970))
             (field_imm 1 param/6970))))
      (setfield_ptr(root-init) 29 (global Ppxlib__Common!) >>|/6965))
    (let
      (of_result/6971 =
         (function result/6973 default/6974
           (switch* result/6973
            case tag 0: (makeblock 0 (field_imm 0 result/6973) 0)
            case tag 1:
             (makeblock 0 default/6974
               (apply (field_imm 2 (field_imm 94 (global Ppxlib__Import!)))
                 (field_imm 0 result/6973))))))
      (setfield_ptr(root-init) 30 (global Ppxlib__Common!) of_result/6971))
    (let
      (combine_errors/6983 =
         (function list/6985
           (makeblock 0
             (apply (field_imm 48 (field_imm 91 (global Ppxlib__Import!)))
               list/6985 (function prim/16784 stub (field_mut 0 prim/16784)))
             (apply (field_imm 63 (field_imm 91 (global Ppxlib__Import!)))
               list/6985 (function prim/16785 stub (field_mut 1 prim/16785))))))
      (setfield_ptr(root-init) 31 (global Ppxlib__Common!)
        combine_errors/6983))
    0
    (let
      (With_errors/6986 =
         (makeblock 0 (field_imm 27 (global Ppxlib__Common!))
           (field_imm 28 (global Ppxlib__Common!))
           (field_imm 29 (global Ppxlib__Common!))
           (field_imm 30 (global Ppxlib__Common!))
           (field_imm 31 (global Ppxlib__Common!))))
      (seq
        (setfield_ptr(root-init) 22 (global Ppxlib__Common!)
          With_errors/6986)
        0))))
