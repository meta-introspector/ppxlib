[
  structure_item (src/location.ml[1,0+0]..[1,0+11])
    Pstr_open Fresh
    module_expr (src/location.ml[1,0+5]..[1,0+11])
      Pmod_ident "Import" (src/location.ml[1,0+5]..[1,0+11])
  structure_item (src/location.ml[2,12+0]..[2,12+26])
    Pstr_module
    "L" (src/location.ml[2,12+7]..[2,12+8])
      module_expr (src/location.ml[2,12+11]..[2,12+26])
        Pmod_ident "Astlib.Location" (src/location.ml[2,12+11]..[2,12+26])
  structure_item (src/location.ml[4,40+0]..[8,142+1])
    Pstr_type Rec
    [
      type_declaration "t" (src/location.ml[4,40+5]..[4,40+6]) (src/location.ml[4,40+0]..[8,142+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (src/location.ml[5,62+2]..[5,62+30])
                Immutable
                "loc_start" (src/location.ml[5,62+2]..[5,62+11])                core_type (src/location.ml[5,62+14]..[5,62+29])
                  Ptyp_constr "Lexing.position" (src/location.ml[5,62+14]..[5,62+29])
                  []
              (src/location.ml[6,93+2]..[6,93+28])
                Immutable
                "loc_end" (src/location.ml[6,93+2]..[6,93+9])                core_type (src/location.ml[6,93+12]..[6,93+27])
                  Ptyp_constr "Lexing.position" (src/location.ml[6,93+12]..[6,93+27])
                  []
              (src/location.ml[7,122+2]..[7,122+19])
                Immutable
                "loc_ghost" (src/location.ml[7,122+2]..[7,122+11])                core_type (src/location.ml[7,122+14]..[7,122+18])
                  Ptyp_constr "bool" (src/location.ml[7,122+14]..[7,122+18])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/location.ml[4,40+9]..[4,40+17])
              Ptyp_constr "location" (src/location.ml[4,40+9]..[4,40+17])
              []
    ]
  structure_item (src/location.ml[10,145+0]..[12,242+54])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/location.ml[10,145+4]..[10,145+11])
          Ppat_var "in_file" (src/location.ml[10,145+4]..[10,145+11])
        expression (src/location.ml[10,145+12]..[12,242+54]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/location.ml[10,145+12]..[10,145+16])
            Ppat_var "name" (src/location.ml[10,145+12]..[10,145+16])
          expression (src/location.ml[11,164+2]..[12,242+54])
            Pexp_let Nonrec
            [
              <def>
                pattern (src/location.ml[11,164+6]..[11,164+9])
                  Ppat_var "loc" (src/location.ml[11,164+6]..[11,164+9])
                expression (src/location.ml[11,164+12]..[11,164+74])
                  Pexp_record
                  [
                    "pos_fname" (src/location.ml[11,164+14]..[11,164+23])
                      expression (src/location.ml[11,164+26]..[11,164+30])
                        Pexp_ident "name" (src/location.ml[11,164+26]..[11,164+30])
                    "pos_lnum" (src/location.ml[11,164+32]..[11,164+40])
                      expression (src/location.ml[11,164+43]..[11,164+44])
                        Pexp_constant PConst_int (1,None)
                    "pos_bol" (src/location.ml[11,164+46]..[11,164+53])
                      expression (src/location.ml[11,164+56]..[11,164+57])
                        Pexp_constant PConst_int (0,None)
                    "pos_cnum" (src/location.ml[11,164+59]..[11,164+67])
                      expression (src/location.ml[11,164+70]..[11,164+72])
                        Pexp_constant PConst_int (-1,None)
                  ]
                  None
            ]
            expression (src/location.ml[12,242+2]..[12,242+54])
              Pexp_record
              [
                "loc_start" (src/location.ml[12,242+4]..[12,242+13])
                  expression (src/location.ml[12,242+16]..[12,242+19])
                    Pexp_ident "loc" (src/location.ml[12,242+16]..[12,242+19])
                "loc_end" (src/location.ml[12,242+21]..[12,242+28])
                  expression (src/location.ml[12,242+31]..[12,242+34])
                    Pexp_ident "loc" (src/location.ml[12,242+31]..[12,242+34])
                "loc_ghost" (src/location.ml[12,242+36]..[12,242+45])
                  expression (src/location.ml[12,242+48]..[12,242+52])
                    Pexp_construct "true" (src/location.ml[12,242+48]..[12,242+52])
                    None
              ]
              None
    ]
  structure_item (src/location.ml[14,298+0]..[17,438+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/location.ml[14,298+4]..[14,298+16])
          Ppat_var "set_filename" (src/location.ml[14,298+4]..[14,298+16])
        expression (src/location.ml[14,298+17]..[17,438+33]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/location.ml[14,298+17]..[14,298+20])
            Ppat_var "loc" (src/location.ml[14,298+17]..[14,298+20])
          expression (src/location.ml[14,298+21]..[17,438+33]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/location.ml[14,298+21]..[14,298+23])
              Ppat_var "fn" (src/location.ml[14,298+21]..[14,298+23])
            expression (src/location.ml[15,324+2]..[17,438+33])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/location.ml[15,324+6]..[15,324+15])
                    Ppat_var "loc_start" (src/location.ml[15,324+6]..[15,324+15])
                  expression (src/location.ml[15,324+18]..[15,324+55])
                    Pexp_record
                    [
                      "pos_fname" (src/location.ml[15,324+39]..[15,324+48])
                        expression (src/location.ml[15,324+51]..[15,324+53])
                          Pexp_ident "fn" (src/location.ml[15,324+51]..[15,324+53])
                    ]
                    Some
                      expression (src/location.ml[15,324+20]..[15,324+33])
                        Pexp_field
                        expression (src/location.ml[15,324+20]..[15,324+23])
                          Pexp_ident "loc" (src/location.ml[15,324+20]..[15,324+23])
                        "loc_start" (src/location.ml[15,324+24]..[15,324+33])
              ]
              expression (src/location.ml[16,383+2]..[17,438+33])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/location.ml[16,383+6]..[16,383+13])
                      Ppat_var "loc_end" (src/location.ml[16,383+6]..[16,383+13])
                    expression (src/location.ml[16,383+16]..[16,383+51])
                      Pexp_record
                      [
                        "pos_fname" (src/location.ml[16,383+35]..[16,383+44])
                          expression (src/location.ml[16,383+47]..[16,383+49])
                            Pexp_ident "fn" (src/location.ml[16,383+47]..[16,383+49])
                      ]
                      Some
                        expression (src/location.ml[16,383+18]..[16,383+29])
                          Pexp_field
                          expression (src/location.ml[16,383+18]..[16,383+21])
                            Pexp_ident "loc" (src/location.ml[16,383+18]..[16,383+21])
                          "loc_end" (src/location.ml[16,383+22]..[16,383+29])
                ]
                expression (src/location.ml[17,438+2]..[17,438+33])
                  Pexp_record
                  [
                    "loc_start" (src/location.ml[17,438+13]..[17,438+22])
                      expression (src/location.ml[17,438+13]..[17,438+22]) ghost
                        Pexp_ident "loc_start" (src/location.ml[17,438+13]..[17,438+22]) ghost
                    "loc_end" (src/location.ml[17,438+24]..[17,438+31])
                      expression (src/location.ml[17,438+24]..[17,438+31]) ghost
                        Pexp_ident "loc_end" (src/location.ml[17,438+24]..[17,438+31]) ghost
                  ]
                  Some
                    expression (src/location.ml[17,438+4]..[17,438+7])
                      Pexp_ident "loc" (src/location.ml[17,438+4]..[17,438+7])
    ]
  structure_item (src/location.ml[19,473+0]..[19,473+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/location.ml[19,473+4]..[19,473+8])
          Ppat_var "none" (src/location.ml[19,473+4]..[19,473+8])
        expression (src/location.ml[19,473+11]..[19,473+27])
          Pexp_apply
          expression (src/location.ml[19,473+11]..[19,473+18])
            Pexp_ident "in_file" (src/location.ml[19,473+11]..[19,473+18])
          [
            <arg>
            Nolabel
              expression (src/location.ml[19,473+19]..[19,473+27])
                Pexp_constant PConst_string("_none_",(src/location.ml[19,473+20]..[19,473+26]),None)
          ]
    ]
  structure_item (src/location.ml[21,502+0]..[24,570+66])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/location.ml[21,502+4]..[21,502+8])
          Ppat_var "init" (src/location.ml[21,502+4]..[21,502+8])
        expression (src/location.ml[21,502+9]..[24,570+66]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/location.ml[21,502+9]..[21,502+15])
            Ppat_var "lexbuf" (src/location.ml[21,502+9]..[21,502+15])
          expression (src/location.ml[21,502+16]..[24,570+66]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/location.ml[21,502+16]..[21,502+21])
              Ppat_var "fname" (src/location.ml[21,502+16]..[21,502+21])
            expression (src/location.ml[22,526+2]..[24,570+66])
              Pexp_open Fresh
              module_expr (src/location.ml[22,526+11]..[22,526+17])
                Pmod_ident "Lexing" (src/location.ml[22,526+11]..[22,526+17])
              expression (src/location.ml[23,547+2]..[24,570+66])
                Pexp_setfield
                expression (src/location.ml[23,547+2]..[23,547+8])
                  Pexp_ident "lexbuf" (src/location.ml[23,547+2]..[23,547+8])
                "lex_curr_p" (src/location.ml[23,547+9]..[23,547+19])
                expression (src/location.ml[24,570+4]..[24,570+66])
                  Pexp_record
                  [
                    "pos_fname" (src/location.ml[24,570+6]..[24,570+15])
                      expression (src/location.ml[24,570+18]..[24,570+23])
                        Pexp_ident "fname" (src/location.ml[24,570+18]..[24,570+23])
                    "pos_lnum" (src/location.ml[24,570+25]..[24,570+33])
                      expression (src/location.ml[24,570+36]..[24,570+37])
                        Pexp_constant PConst_int (1,None)
                    "pos_bol" (src/location.ml[24,570+39]..[24,570+46])
                      expression (src/location.ml[24,570+49]..[24,570+50])
                        Pexp_constant PConst_int (0,None)
                    "pos_cnum" (src/location.ml[24,570+52]..[24,570+60])
                      expression (src/location.ml[24,570+63]..[24,570+64])
                        Pexp_constant PConst_int (0,None)
                  ]
                  None
    ]
  structure_item (src/location.ml[26,638+0]..[26,638+51])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/location.ml[26,638+4]..[26,638+16])
          Ppat_var "raise_errorf" (src/location.ml[26,638+4]..[26,638+16])
        expression (src/location.ml[26,638+17]..[26,638+51]) ghost
          Pexp_fun
          Optional "loc"
          None
          pattern (src/location.ml[26,638+18]..[26,638+21])
            Ppat_var "loc" (src/location.ml[26,638+18]..[26,638+21])
          expression (src/location.ml[26,638+22]..[26,638+51]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/location.ml[26,638+22]..[26,638+25])
              Ppat_var "fmt" (src/location.ml[26,638+22]..[26,638+25])
            expression (src/location.ml[26,638+28]..[26,638+51])
              Pexp_apply
              expression (src/location.ml[26,638+28]..[26,638+42])
                Pexp_ident "L.raise_errorf" (src/location.ml[26,638+28]..[26,638+42])
              [
                <arg>
                Optional "loc"
                  expression (src/location.ml[26,638+44]..[26,638+47])
                    Pexp_ident "loc" (src/location.ml[26,638+44]..[26,638+47])
                <arg>
                Nolabel
                  expression (src/location.ml[26,638+48]..[26,638+51])
                    Pexp_ident "fmt" (src/location.ml[26,638+48]..[26,638+51])
              ]
    ]
  structure_item (src/location.ml[27,690+0]..[27,690+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/location.ml[27,690+4]..[27,690+20])
          Ppat_var "report_exception" (src/location.ml[27,690+4]..[27,690+20])
        expression (src/location.ml[27,690+23]..[27,690+41])
          Pexp_ident "L.report_exception" (src/location.ml[27,690+23]..[27,690+41])
    ]
  structure_item (src/location.ml[29,733+0]..[34,870+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/location.ml[29,733+4]..[29,733+13])
          Ppat_var "of_lexbuf" (src/location.ml[29,733+4]..[29,733+13])
        expression (src/location.ml[29,733+14]..[34,870+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/location.ml[29,733+14]..[29,733+38])
            Ppat_constraint
            pattern (src/location.ml[29,733+15]..[29,733+21])
              Ppat_var "lexbuf" (src/location.ml[29,733+15]..[29,733+21])
            core_type (src/location.ml[29,733+24]..[29,733+37])
              Ptyp_constr "Lexing.lexbuf" (src/location.ml[29,733+24]..[29,733+37])
              []
          expression (src/location.ml[30,774+2]..[34,870+3])
            Pexp_record
            [
              "loc_start" (src/location.ml[31,778+4]..[31,778+13])
                expression (src/location.ml[31,778+16]..[31,778+34])
                  Pexp_field
                  expression (src/location.ml[31,778+16]..[31,778+22])
                    Pexp_ident "lexbuf" (src/location.ml[31,778+16]..[31,778+22])
                  "lex_start_p" (src/location.ml[31,778+23]..[31,778+34])
              "loc_end" (src/location.ml[32,814+4]..[32,814+11])
                expression (src/location.ml[32,814+14]..[32,814+31])
                  Pexp_field
                  expression (src/location.ml[32,814+14]..[32,814+20])
                    Pexp_ident "lexbuf" (src/location.ml[32,814+14]..[32,814+20])
                  "lex_curr_p" (src/location.ml[32,814+21]..[32,814+31])
              "loc_ghost" (src/location.ml[33,847+4]..[33,847+13])
                expression (src/location.ml[33,847+16]..[33,847+21])
                  Pexp_construct "false" (src/location.ml[33,847+16]..[33,847+21])
                  None
            ]
            None
    ]
  structure_item (src/location.ml[36,875+0]..[40,1059+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/location.ml[36,875+4]..[36,875+9])
          Ppat_var "print" (src/location.ml[36,875+4]..[36,875+9])
        expression (src/location.ml[36,875+10]..[40,1059+46]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/location.ml[36,875+10]..[36,875+13])
            Ppat_var "ppf" (src/location.ml[36,875+10]..[36,875+13])
          expression (src/location.ml[36,875+14]..[40,1059+46]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/location.ml[36,875+14]..[36,875+15])
              Ppat_var "t" (src/location.ml[36,875+14]..[36,875+15])
            expression (src/location.ml[37,893+2]..[40,1059+46])
              Pexp_apply
              expression (src/location.ml[37,893+2]..[37,893+23])
                Pexp_ident "Stdlib.Format.fprintf" (src/location.ml[37,893+2]..[37,893+23])
              [
                <arg>
                Nolabel
                  expression (src/location.ml[37,893+24]..[37,893+27])
                    Pexp_ident "ppf" (src/location.ml[37,893+24]..[37,893+27])
                <arg>
                Nolabel
                  expression (src/location.ml[37,893+28]..[37,893+69])
                    Pexp_constant PConst_string("File \"%s\", line %d, characters %d-%d:",(src/location.ml[37,893+29]..[37,893+68]),None)
                <arg>
                Nolabel
                  expression (src/location.ml[38,963+4]..[38,963+25])
                    Pexp_field
                    expression (src/location.ml[38,963+4]..[38,963+15])
                      Pexp_field
                      expression (src/location.ml[38,963+4]..[38,963+5])
                        Pexp_ident "t" (src/location.ml[38,963+4]..[38,963+5])
                      "loc_start" (src/location.ml[38,963+6]..[38,963+15])
                    "pos_fname" (src/location.ml[38,963+16]..[38,963+25])
                <arg>
                Nolabel
                  expression (src/location.ml[38,963+26]..[38,963+46])
                    Pexp_field
                    expression (src/location.ml[38,963+26]..[38,963+37])
                      Pexp_field
                      expression (src/location.ml[38,963+26]..[38,963+27])
                        Pexp_ident "t" (src/location.ml[38,963+26]..[38,963+27])
                      "loc_start" (src/location.ml[38,963+28]..[38,963+37])
                    "pos_lnum" (src/location.ml[38,963+38]..[38,963+46])
                <arg>
                Nolabel
                  expression (src/location.ml[39,1010+4]..[39,1010+48])
                    Pexp_apply
                    expression (src/location.ml[39,1010+26]..[39,1010+27])
                      Pexp_ident "-" (src/location.ml[39,1010+26]..[39,1010+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/location.ml[39,1010+5]..[39,1010+25])
                          Pexp_field
                          expression (src/location.ml[39,1010+5]..[39,1010+16])
                            Pexp_field
                            expression (src/location.ml[39,1010+5]..[39,1010+6])
                              Pexp_ident "t" (src/location.ml[39,1010+5]..[39,1010+6])
                            "loc_start" (src/location.ml[39,1010+7]..[39,1010+16])
                          "pos_cnum" (src/location.ml[39,1010+17]..[39,1010+25])
                      <arg>
                      Nolabel
                        expression (src/location.ml[39,1010+28]..[39,1010+47])
                          Pexp_field
                          expression (src/location.ml[39,1010+28]..[39,1010+39])
                            Pexp_field
                            expression (src/location.ml[39,1010+28]..[39,1010+29])
                              Pexp_ident "t" (src/location.ml[39,1010+28]..[39,1010+29])
                            "loc_start" (src/location.ml[39,1010+30]..[39,1010+39])
                          "pos_bol" (src/location.ml[39,1010+40]..[39,1010+47])
                    ]
                <arg>
                Nolabel
                  expression (src/location.ml[40,1059+4]..[40,1059+46])
                    Pexp_apply
                    expression (src/location.ml[40,1059+24]..[40,1059+25])
                      Pexp_ident "-" (src/location.ml[40,1059+24]..[40,1059+25])
                    [
                      <arg>
                      Nolabel
                        expression (src/location.ml[40,1059+5]..[40,1059+23])
                          Pexp_field
                          expression (src/location.ml[40,1059+5]..[40,1059+14])
                            Pexp_field
                            expression (src/location.ml[40,1059+5]..[40,1059+6])
                              Pexp_ident "t" (src/location.ml[40,1059+5]..[40,1059+6])
                            "loc_end" (src/location.ml[40,1059+7]..[40,1059+14])
                          "pos_cnum" (src/location.ml[40,1059+15]..[40,1059+23])
                      <arg>
                      Nolabel
                        expression (src/location.ml[40,1059+26]..[40,1059+45])
                          Pexp_field
                          expression (src/location.ml[40,1059+26]..[40,1059+37])
                            Pexp_field
                            expression (src/location.ml[40,1059+26]..[40,1059+27])
                              Pexp_ident "t" (src/location.ml[40,1059+26]..[40,1059+27])
                            "loc_start" (src/location.ml[40,1059+28]..[40,1059+37])
                          "pos_bol" (src/location.ml[40,1059+38]..[40,1059+45])
                    ]
              ]
    ]
  structure_item (src/location.ml[42,1107+0]..[42,1107+51])
    Pstr_type Nonrec
    [
      type_declaration "loc" (src/location.ml[42,1107+15]..[42,1107+18]) (src/location.ml[42,1107+0]..[42,1107+51])
        ptype_params =
          [
            core_type (src/location.ml[42,1107+12]..[42,1107+14])
              Ptyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (src/location.ml[42,1107+32]..[42,1107+41])
                Immutable
                "txt" (src/location.ml[42,1107+32]..[42,1107+35])                core_type (src/location.ml[42,1107+38]..[42,1107+40])
                  Ptyp_var a
              (src/location.ml[42,1107+42]..[42,1107+49])
                Immutable
                "loc" (src/location.ml[42,1107+42]..[42,1107+45])                core_type (src/location.ml[42,1107+48]..[42,1107+49])
                  Ptyp_constr "t" (src/location.ml[42,1107+48]..[42,1107+49])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/location.ml[42,1107+21]..[42,1107+27])
              Ptyp_constr "loc" (src/location.ml[42,1107+24]..[42,1107+27])
              [
                core_type (src/location.ml[42,1107+21]..[42,1107+23])
                  Ptyp_var a
              ]
    ]
  structure_item (src/location.ml[44,1160+0]..[55,1549+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/location.ml[44,1160+4]..[44,1160+15])
          Ppat_var "compare_pos" (src/location.ml[44,1160+4]..[44,1160+15])
        expression (src/location.ml[44,1160+16]..[55,1549+10]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/location.ml[44,1160+16]..[44,1160+18])
            Ppat_var "p1" (src/location.ml[44,1160+16]..[44,1160+18])
          expression (src/location.ml[44,1160+19]..[55,1549+10]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/location.ml[44,1160+19]..[44,1160+21])
              Ppat_var "p2" (src/location.ml[44,1160+19]..[44,1160+21])
            expression (src/location.ml[45,1184+2]..[55,1549+10])
              Pexp_open Fresh
              module_expr (src/location.ml[45,1184+11]..[45,1184+17])
                Pmod_ident "Lexing" (src/location.ml[45,1184+11]..[45,1184+17])
              expression (src/location.ml[46,1205+2]..[55,1549+10])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/location.ml[46,1205+6]..[46,1205+12])
                      Ppat_var "column" (src/location.ml[46,1205+6]..[46,1205+12])
                    expression (src/location.ml[46,1205+13]..[51,1423+26]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/location.ml[46,1205+13]..[46,1205+14])
                        Ppat_var "p" (src/location.ml[46,1205+13]..[46,1205+14])
                      expression (src/location.ml[51,1423+4]..[51,1423+26])
                        Pexp_apply
                        expression (src/location.ml[51,1423+15]..[51,1423+16])
                          Pexp_ident "-" (src/location.ml[51,1423+15]..[51,1423+16])
                        [
                          <arg>
                          Nolabel
                            expression (src/location.ml[51,1423+4]..[51,1423+14])
                              Pexp_field
                              expression (src/location.ml[51,1423+4]..[51,1423+5])
                                Pexp_ident "p" (src/location.ml[51,1423+4]..[51,1423+5])
                              "pos_cnum" (src/location.ml[51,1423+6]..[51,1423+14])
                          <arg>
                          Nolabel
                            expression (src/location.ml[51,1423+17]..[51,1423+26])
                              Pexp_field
                              expression (src/location.ml[51,1423+17]..[51,1423+18])
                                Pexp_ident "p" (src/location.ml[51,1423+17]..[51,1423+18])
                              "pos_bol" (src/location.ml[51,1423+19]..[51,1423+26])
                        ]
                ]
                expression (src/location.ml[53,1455+2]..[55,1549+10])
                  Pexp_match
                  expression (src/location.ml[53,1455+8]..[53,1455+43])
                    Pexp_apply
                    expression (src/location.ml[53,1455+8]..[53,1455+19])
                      Pexp_ident "Int.compare" (src/location.ml[53,1455+8]..[53,1455+19])
                    [
                      <arg>
                      Nolabel
                        expression (src/location.ml[53,1455+20]..[53,1455+31])
                          Pexp_field
                          expression (src/location.ml[53,1455+20]..[53,1455+22])
                            Pexp_ident "p1" (src/location.ml[53,1455+20]..[53,1455+22])
                          "pos_lnum" (src/location.ml[53,1455+23]..[53,1455+31])
                      <arg>
                      Nolabel
                        expression (src/location.ml[53,1455+32]..[53,1455+43])
                          Pexp_field
                          expression (src/location.ml[53,1455+32]..[53,1455+34])
                            Pexp_ident "p2" (src/location.ml[53,1455+32]..[53,1455+34])
                          "pos_lnum" (src/location.ml[53,1455+35]..[53,1455+43])
                    ]
                  [
                    <case>
                      pattern (src/location.ml[54,1504+4]..[54,1504+5])
                        Ppat_constant PConst_int (0,None)
                      expression (src/location.ml[54,1504+9]..[54,1504+44])
                        Pexp_apply
                        expression (src/location.ml[54,1504+9]..[54,1504+20])
                          Pexp_ident "Int.compare" (src/location.ml[54,1504+9]..[54,1504+20])
                        [
                          <arg>
                          Nolabel
                            expression (src/location.ml[54,1504+21]..[54,1504+32])
                              Pexp_apply
                              expression (src/location.ml[54,1504+22]..[54,1504+28])
                                Pexp_ident "column" (src/location.ml[54,1504+22]..[54,1504+28])
                              [
                                <arg>
                                Nolabel
                                  expression (src/location.ml[54,1504+29]..[54,1504+31])
                                    Pexp_ident "p1" (src/location.ml[54,1504+29]..[54,1504+31])
                              ]
                          <arg>
                          Nolabel
                            expression (src/location.ml[54,1504+33]..[54,1504+44])
                              Pexp_apply
                              expression (src/location.ml[54,1504+34]..[54,1504+40])
                                Pexp_ident "column" (src/location.ml[54,1504+34]..[54,1504+40])
                              [
                                <arg>
                                Nolabel
                                  expression (src/location.ml[54,1504+41]..[54,1504+43])
                                    Pexp_ident "p2" (src/location.ml[54,1504+41]..[54,1504+43])
                              ]
                        ]
                    <case>
                      pattern (src/location.ml[55,1549+4]..[55,1549+5])
                        Ppat_var "n" (src/location.ml[55,1549+4]..[55,1549+5])
                      expression (src/location.ml[55,1549+9]..[55,1549+10])
                        Pexp_ident "n" (src/location.ml[55,1549+9]..[55,1549+10])
                  ]
    ]
  structure_item (src/location.ml[57,1561+0]..[57,1561+61])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/location.ml[57,1561+4]..[57,1561+11])
          Ppat_var "min_pos" (src/location.ml[57,1561+4]..[57,1561+11])
        expression (src/location.ml[57,1561+12]..[57,1561+61]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/location.ml[57,1561+12]..[57,1561+14])
            Ppat_var "p1" (src/location.ml[57,1561+12]..[57,1561+14])
          expression (src/location.ml[57,1561+15]..[57,1561+61]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/location.ml[57,1561+15]..[57,1561+17])
              Ppat_var "p2" (src/location.ml[57,1561+15]..[57,1561+17])
            expression (src/location.ml[57,1561+20]..[57,1561+61])
              Pexp_ifthenelse
              expression (src/location.ml[57,1561+23]..[57,1561+45])
                Pexp_apply
                expression (src/location.ml[57,1561+41]..[57,1561+43])
                  Pexp_ident "<=" (src/location.ml[57,1561+41]..[57,1561+43])
                [
                  <arg>
                  Nolabel
                    expression (src/location.ml[57,1561+23]..[57,1561+40])
                      Pexp_apply
                      expression (src/location.ml[57,1561+23]..[57,1561+34])
                        Pexp_ident "compare_pos" (src/location.ml[57,1561+23]..[57,1561+34])
                      [
                        <arg>
                        Nolabel
                          expression (src/location.ml[57,1561+35]..[57,1561+37])
                            Pexp_ident "p1" (src/location.ml[57,1561+35]..[57,1561+37])
                        <arg>
                        Nolabel
                          expression (src/location.ml[57,1561+38]..[57,1561+40])
                            Pexp_ident "p2" (src/location.ml[57,1561+38]..[57,1561+40])
                      ]
                  <arg>
                  Nolabel
                    expression (src/location.ml[57,1561+44]..[57,1561+45])
                      Pexp_constant PConst_int (0,None)
                ]
              expression (src/location.ml[57,1561+51]..[57,1561+53])
                Pexp_ident "p1" (src/location.ml[57,1561+51]..[57,1561+53])
              Some
                expression (src/location.ml[57,1561+59]..[57,1561+61])
                  Pexp_ident "p2" (src/location.ml[57,1561+59]..[57,1561+61])
    ]
  structure_item (src/location.ml[58,1623+0]..[58,1623+61])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/location.ml[58,1623+4]..[58,1623+11])
          Ppat_var "max_pos" (src/location.ml[58,1623+4]..[58,1623+11])
        expression (src/location.ml[58,1623+12]..[58,1623+61]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/location.ml[58,1623+12]..[58,1623+14])
            Ppat_var "p1" (src/location.ml[58,1623+12]..[58,1623+14])
          expression (src/location.ml[58,1623+15]..[58,1623+61]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/location.ml[58,1623+15]..[58,1623+17])
              Ppat_var "p2" (src/location.ml[58,1623+15]..[58,1623+17])
            expression (src/location.ml[58,1623+20]..[58,1623+61])
              Pexp_ifthenelse
              expression (src/location.ml[58,1623+23]..[58,1623+45])
                Pexp_apply
                expression (src/location.ml[58,1623+41]..[58,1623+43])
                  Pexp_ident ">=" (src/location.ml[58,1623+41]..[58,1623+43])
                [
                  <arg>
                  Nolabel
                    expression (src/location.ml[58,1623+23]..[58,1623+40])
                      Pexp_apply
                      expression (src/location.ml[58,1623+23]..[58,1623+34])
                        Pexp_ident "compare_pos" (src/location.ml[58,1623+23]..[58,1623+34])
                      [
                        <arg>
                        Nolabel
                          expression (src/location.ml[58,1623+35]..[58,1623+37])
                            Pexp_ident "p1" (src/location.ml[58,1623+35]..[58,1623+37])
                        <arg>
                        Nolabel
                          expression (src/location.ml[58,1623+38]..[58,1623+40])
                            Pexp_ident "p2" (src/location.ml[58,1623+38]..[58,1623+40])
                      ]
                  <arg>
                  Nolabel
                    expression (src/location.ml[58,1623+44]..[58,1623+45])
                      Pexp_constant PConst_int (0,None)
                ]
              expression (src/location.ml[58,1623+51]..[58,1623+53])
                Pexp_ident "p1" (src/location.ml[58,1623+51]..[58,1623+53])
              Some
                expression (src/location.ml[58,1623+59]..[58,1623+61])
                  Pexp_ident "p2" (src/location.ml[58,1623+59]..[58,1623+61])
    ]
  structure_item (src/location.ml[60,1686+0]..[63,1812+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/location.ml[60,1686+4]..[60,1686+11])
          Ppat_var "compare" (src/location.ml[60,1686+4]..[60,1686+11])
        expression (src/location.ml[60,1686+12]..[63,1812+10]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/location.ml[60,1686+12]..[60,1686+16])
            Ppat_var "loc1" (src/location.ml[60,1686+12]..[60,1686+16])
          expression (src/location.ml[60,1686+17]..[63,1812+10]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/location.ml[60,1686+17]..[60,1686+21])
              Ppat_var "loc2" (src/location.ml[60,1686+17]..[60,1686+21])
            expression (src/location.ml[61,1710+2]..[63,1812+10])
              Pexp_match
              expression (src/location.ml[61,1710+8]..[61,1710+49])
                Pexp_apply
                expression (src/location.ml[61,1710+8]..[61,1710+19])
                  Pexp_ident "compare_pos" (src/location.ml[61,1710+8]..[61,1710+19])
                [
                  <arg>
                  Nolabel
                    expression (src/location.ml[61,1710+20]..[61,1710+34])
                      Pexp_field
                      expression (src/location.ml[61,1710+20]..[61,1710+24])
                        Pexp_ident "loc1" (src/location.ml[61,1710+20]..[61,1710+24])
                      "loc_start" (src/location.ml[61,1710+25]..[61,1710+34])
                  <arg>
                  Nolabel
                    expression (src/location.ml[61,1710+35]..[61,1710+49])
                      Pexp_field
                      expression (src/location.ml[61,1710+35]..[61,1710+39])
                        Pexp_ident "loc2" (src/location.ml[61,1710+35]..[61,1710+39])
                      "loc_start" (src/location.ml[61,1710+40]..[61,1710+49])
                ]
              [
                <case>
                  pattern (src/location.ml[62,1765+4]..[62,1765+5])
                    Ppat_constant PConst_int (0,None)
                  expression (src/location.ml[62,1765+9]..[62,1765+46])
                    Pexp_apply
                    expression (src/location.ml[62,1765+9]..[62,1765+20])
                      Pexp_ident "compare_pos" (src/location.ml[62,1765+9]..[62,1765+20])
                    [
                      <arg>
                      Nolabel
                        expression (src/location.ml[62,1765+21]..[62,1765+33])
                          Pexp_field
                          expression (src/location.ml[62,1765+21]..[62,1765+25])
                            Pexp_ident "loc1" (src/location.ml[62,1765+21]..[62,1765+25])
                          "loc_end" (src/location.ml[62,1765+26]..[62,1765+33])
                      <arg>
                      Nolabel
                        expression (src/location.ml[62,1765+34]..[62,1765+46])
                          Pexp_field
                          expression (src/location.ml[62,1765+34]..[62,1765+38])
                            Pexp_ident "loc2" (src/location.ml[62,1765+34]..[62,1765+38])
                          "loc_end" (src/location.ml[62,1765+39]..[62,1765+46])
                    ]
                <case>
                  pattern (src/location.ml[63,1812+4]..[63,1812+5])
                    Ppat_var "n" (src/location.ml[63,1812+4]..[63,1812+5])
                  expression (src/location.ml[63,1812+9]..[63,1812+10])
                    Pexp_ident "n" (src/location.ml[63,1812+9]..[63,1812+10])
              ]
    ]
  structure_item (src/location.ml[65,1824+0]..[69,1964+3])
    Pstr_module
    "Error" (src/location.ml[65,1824+7]..[65,1824+12])
      module_expr (src/location.ml[65,1824+15]..[69,1964+3])
        Pmod_structure
        [
          structure_item (src/location.ml[66,1846+2]..[66,1846+35])
            Pstr_include            module_expr (src/location.ml[66,1846+10]..[66,1846+35])
              Pmod_ident "Ppxlib_ast.Location_error" (src/location.ml[66,1846+10]..[66,1846+35])
          structure_item (src/location.ml[68,1883+2]..[68,1883+80])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/location.ml[68,1883+6]..[68,1883+13])
                  Ppat_var "createf" (src/location.ml[68,1883+6]..[68,1883+13])
                expression (src/location.ml[68,1883+14]..[68,1883+80]) ghost
                  Pexp_fun
                  Labelled "loc"
                  None
                  pattern (src/location.ml[68,1883+15]..[68,1883+18])
                    Ppat_var "loc" (src/location.ml[68,1883+15]..[68,1883+18])
                  expression (src/location.ml[68,1883+19]..[68,1883+80]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/location.ml[68,1883+19]..[68,1883+22])
                      Ppat_var "fmt" (src/location.ml[68,1883+19]..[68,1883+22])
                    expression (src/location.ml[68,1883+25]..[68,1883+80])
                      Pexp_apply
                      expression (src/location.ml[68,1883+25]..[68,1883+41])
                        Pexp_ident "Format.kasprintf" (src/location.ml[68,1883+25]..[68,1883+41])
                      [
                        <arg>
                        Nolabel
                          expression (src/location.ml[68,1883+42]..[68,1883+76])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/location.ml[68,1883+47]..[68,1883+50])
                              Ppat_var "str" (src/location.ml[68,1883+47]..[68,1883+50])
                            expression (src/location.ml[68,1883+54]..[68,1883+75])
                              Pexp_apply
                              expression (src/location.ml[68,1883+54]..[68,1883+58])
                                Pexp_ident "make" (src/location.ml[68,1883+54]..[68,1883+58])
                              [
                                <arg>
                                Labelled "loc"
                                  expression (src/location.ml[68,1883+60]..[68,1883+63])
                                    Pexp_ident "loc" (src/location.ml[68,1883+60]..[68,1883+63])
                                <arg>
                                Labelled "sub"
                                  expression (src/location.ml[68,1883+69]..[68,1883+71])
                                    Pexp_construct "[]" (src/location.ml[68,1883+69]..[68,1883+71])
                                    None
                                <arg>
                                Nolabel
                                  expression (src/location.ml[68,1883+72]..[68,1883+75])
                                    Pexp_ident "str" (src/location.ml[68,1883+72]..[68,1883+75])
                              ]
                        <arg>
                        Nolabel
                          expression (src/location.ml[68,1883+77]..[68,1883+80])
                            Pexp_ident "fmt" (src/location.ml[68,1883+77]..[68,1883+80])
                      ]
            ]
        ]
  structure_item (src/location.ml[71,1969+0]..[74,2087+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/location.ml[71,1969+4]..[71,1969+20])
          Ppat_var "error_extensionf" (src/location.ml[71,1969+4]..[71,1969+20])
        expression (src/location.ml[71,1969+21]..[74,2087+7]) ghost
          Pexp_fun
          Labelled "loc"
          None
          pattern (src/location.ml[71,1969+22]..[71,1969+25])
            Ppat_var "loc" (src/location.ml[71,1969+22]..[71,1969+25])
          expression (src/location.ml[71,1969+26]..[74,2087+7]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/location.ml[71,1969+26]..[71,1969+29])
              Ppat_var "fmt" (src/location.ml[71,1969+26]..[71,1969+29])
            expression (src/location.ml[72,2001+2]..[74,2087+7])
              Pexp_apply
              expression (src/location.ml[72,2001+2]..[72,2001+18])
                Pexp_ident "Format.kasprintf" (src/location.ml[72,2001+2]..[72,2001+18])
              [
                <arg>
                Nolabel
                  expression (src/location.ml[73,2020+4]..[73,2020+66])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/location.ml[73,2020+9]..[73,2020+12])
                      Ppat_var "str" (src/location.ml[73,2020+9]..[73,2020+12])
                    expression (src/location.ml[73,2020+16]..[73,2020+65])
                      Pexp_apply
                      expression (src/location.ml[73,2020+35]..[73,2020+37])
                        Pexp_ident "@@" (src/location.ml[73,2020+35]..[73,2020+37])
                      [
                        <arg>
                        Nolabel
                          expression (src/location.ml[73,2020+16]..[73,2020+34])
                            Pexp_ident "Error.to_extension" (src/location.ml[73,2020+16]..[73,2020+34])
                        <arg>
                        Nolabel
                          expression (src/location.ml[73,2020+38]..[73,2020+65])
                            Pexp_apply
                            expression (src/location.ml[73,2020+38]..[73,2020+48])
                              Pexp_ident "Error.make" (src/location.ml[73,2020+38]..[73,2020+48])
                            [
                              <arg>
                              Labelled "loc"
                                expression (src/location.ml[73,2020+50]..[73,2020+53])
                                  Pexp_ident "loc" (src/location.ml[73,2020+50]..[73,2020+53])
                              <arg>
                              Labelled "sub"
                                expression (src/location.ml[73,2020+59]..[73,2020+61])
                                  Pexp_construct "[]" (src/location.ml[73,2020+59]..[73,2020+61])
                                  None
                              <arg>
                              Nolabel
                                expression (src/location.ml[73,2020+62]..[73,2020+65])
                                  Pexp_ident "str" (src/location.ml[73,2020+62]..[73,2020+65])
                            ]
                      ]
                <arg>
                Nolabel
                  expression (src/location.ml[74,2087+4]..[74,2087+7])
                    Pexp_ident "fmt" (src/location.ml[74,2087+4]..[74,2087+7])
              ]
    ]
  structure_item (src/location.ml[76,2096+0]..[76,2096+25])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (src/location.ml[76,2096+0]..[76,2096+25])
          pext_name = "Error"
          pext_kind =
            Pext_rebind
              "L.Error" (src/location.ml[76,2096+18]..[76,2096+25])
  structure_item (src/location.ml[78,2123+0]..[81,2217+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/location.ml[78,2123+4]..[78,2123+6])
          Ppat_construct "()" (src/location.ml[78,2123+4]..[78,2123+6])
          None
        expression (src/location.ml[79,2132+2]..[81,2217+16])
          Pexp_apply
          expression (src/location.ml[79,2132+2]..[79,2132+34])
            Pexp_ident "Stdlib.Printexc.register_printer" (src/location.ml[79,2132+2]..[79,2132+34])
          [
            <arg>
            Nolabel
              expression (src/location.ml[79,2132+35]..[81,2217+16])
                Pexp_function
                [
                  <case>
                    pattern (src/location.ml[80,2177+6]..[80,2177+13])
                      Ppat_construct "Error" (src/location.ml[80,2177+6]..[80,2177+11])
                      Some
                        pattern (src/location.ml[80,2177+12]..[80,2177+13])
                          Ppat_var "e" (src/location.ml[80,2177+12]..[80,2177+13])
                    expression (src/location.ml[80,2177+17]..[80,2177+39])
                      Pexp_construct "Some" (src/location.ml[80,2177+17]..[80,2177+21])
                      Some
                        expression (src/location.ml[80,2177+22]..[80,2177+39])
                          Pexp_apply
                          expression (src/location.ml[80,2177+23]..[80,2177+36])
                            Pexp_ident "Error.message" (src/location.ml[80,2177+23]..[80,2177+36])
                          [
                            <arg>
                            Nolabel
                              expression (src/location.ml[80,2177+37]..[80,2177+38])
                                Pexp_ident "e" (src/location.ml[80,2177+37]..[80,2177+38])
                          ]
                  <case>
                    pattern (src/location.ml[81,2217+6]..[81,2217+7])
                      Ppat_any
                    expression (src/location.ml[81,2217+11]..[81,2217+15])
                      Pexp_construct "None" (src/location.ml[81,2217+11]..[81,2217+15])
                      None
                ]
          ]
    ]
]

open Import
module L = Astlib.Location
type t = location =
  {
  loc_start: Lexing.position ;
  loc_end: Lexing.position ;
  loc_ghost: bool }
let in_file name =
  let loc = { pos_fname = name; pos_lnum = 1; pos_bol = 0; pos_cnum = (-1) } in
  { loc_start = loc; loc_end = loc; loc_ghost = true }
let set_filename loc fn =
  let loc_start = { (loc.loc_start) with pos_fname = fn } in
  let loc_end = { (loc.loc_end) with pos_fname = fn } in
  { loc with loc_start; loc_end }
let none = in_file "_none_"
let init lexbuf fname =
  let open Lexing in
    lexbuf.lex_curr_p <-
      { pos_fname = fname; pos_lnum = 1; pos_bol = 0; pos_cnum = 0 }
let raise_errorf ?loc  fmt = L.raise_errorf ?loc fmt
let report_exception = L.report_exception
let of_lexbuf (lexbuf : Lexing.lexbuf) =
  {
    loc_start = (lexbuf.lex_start_p);
    loc_end = (lexbuf.lex_curr_p);
    loc_ghost = false
  }
let print ppf t =
  Stdlib.Format.fprintf ppf "File \"%s\", line %d, characters %d-%d:"
    (t.loc_start).pos_fname (t.loc_start).pos_lnum
    ((t.loc_start).pos_cnum - (t.loc_start).pos_bol)
    ((t.loc_end).pos_cnum - (t.loc_start).pos_bol)
type nonrec 'a loc = 'a loc = {
  txt: 'a ;
  loc: t }
let compare_pos p1 p2 =
  let open Lexing in
    let column p = p.pos_cnum - p.pos_bol in
    match Int.compare p1.pos_lnum p2.pos_lnum with
    | 0 -> Int.compare (column p1) (column p2)
    | n -> n
let min_pos p1 p2 = if (compare_pos p1 p2) <= 0 then p1 else p2
let max_pos p1 p2 = if (compare_pos p1 p2) >= 0 then p1 else p2
let compare loc1 loc2 =
  match compare_pos loc1.loc_start loc2.loc_start with
  | 0 -> compare_pos loc1.loc_end loc2.loc_end
  | n -> n
module Error =
  struct
    include Ppxlib_ast.Location_error
    let createf ~loc  fmt =
      Format.kasprintf (fun str -> make ~loc ~sub:[] str) fmt
  end
let error_extensionf ~loc  fmt =
  Format.kasprintf
    (fun str -> Error.to_extension @@ (Error.make ~loc ~sub:[] str)) fmt
exception Error = L.Error
let () =
  Stdlib.Printexc.register_printer
    (function | Error e -> Some (Error.message e) | _ -> None)
[
  structure_item (src/location.ml[1,0+0]..src/location.ml[1,0+11])
    Tstr_open Fresh
    module_expr (src/location.ml[1,0+5]..src/location.ml[1,0+11])
      Tmod_ident "Ppxlib__!.Import"
  structure_item (src/location.ml[2,12+0]..src/location.ml[2,12+26])
    Tstr_module
    L/600
      module_expr (src/location.ml[2,12+11]..src/location.ml[2,12+26])
        Tmod_ident "Astlib!.Location"
  structure_item (src/location.ml[4,40+0]..src/location.ml[8,142+1])
    Tstr_type Rec
    [
      type_declaration t/601 (src/location.ml[4,40+0]..src/location.ml[8,142+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (src/location.ml[5,62+2]..src/location.ml[5,62+30])
                Immutable
                loc_start/629                core_type (src/location.ml[5,62+14]..src/location.ml[5,62+29])
                  Ttyp_poly
                  core_type (src/location.ml[5,62+14]..src/location.ml[5,62+29])
                    Ttyp_constr "Stdlib!.Lexing.position"
                    []
              (src/location.ml[6,93+2]..src/location.ml[6,93+28])
                Immutable
                loc_end/630                core_type (src/location.ml[6,93+12]..src/location.ml[6,93+27])
                  Ttyp_poly
                  core_type (src/location.ml[6,93+12]..src/location.ml[6,93+27])
                    Ttyp_constr "Stdlib!.Lexing.position"
                    []
              (src/location.ml[7,122+2]..src/location.ml[7,122+19])
                Immutable
                loc_ghost/631                core_type (src/location.ml[7,122+14]..src/location.ml[7,122+18])
                  Ttyp_poly
                  core_type (src/location.ml[7,122+14]..src/location.ml[7,122+18])
                    Ttyp_constr "bool/5!"
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/location.ml[4,40+9]..src/location.ml[4,40+17])
              Ttyp_constr "Ppxlib__!.Import.location"
              []
    ]
  structure_item (src/location.ml[10,145+0]..src/location.ml[12,242+54])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/location.ml[10,145+4]..src/location.ml[10,145+11])
          Tpat_var "in_file/866"
        expression (src/location.ml[10,145+12]..src/location.ml[12,242+54]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/location.ml[10,145+12]..src/location.ml[10,145+16])
                Tpat_var "name/868"
              expression (src/location.ml[11,164+2]..src/location.ml[12,242+54])
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/location.ml[11,164+6]..src/location.ml[11,164+9])
                      Tpat_var "loc/869"
                    expression (src/location.ml[11,164+12]..src/location.ml[11,164+74])
                      Texp_record
                        fields =
                          [
                            "pos_fname"
                              expression (src/location.ml[11,164+26]..src/location.ml[11,164+30])
                                Texp_ident "name/868"
                            "pos_lnum"
                              expression (src/location.ml[11,164+43]..src/location.ml[11,164+44])
                                Texp_constant Const_int 1
                            "pos_bol"
                              expression (src/location.ml[11,164+56]..src/location.ml[11,164+57])
                                Texp_constant Const_int 0
                            "pos_cnum"
                              expression (src/location.ml[11,164+70]..src/location.ml[11,164+72])
                                Texp_constant Const_int -1
                          ]
                        representation =
                          Record_regular
                        extended_expression =
                          None
                ]
                expression (src/location.ml[12,242+2]..src/location.ml[12,242+54])
                  Texp_record
                    fields =
                      [
                        "loc_start"
                          expression (src/location.ml[12,242+16]..src/location.ml[12,242+19])
                            Texp_ident "loc/869"
                        "loc_end"
                          expression (src/location.ml[12,242+31]..src/location.ml[12,242+34])
                            Texp_ident "loc/869"
                        "loc_ghost"
                          expression (src/location.ml[12,242+48]..src/location.ml[12,242+52])
                            Texp_construct "true"
                            []
                      ]
                    representation =
                      Record_regular
                    extended_expression =
                      None
          ]
    ]
  structure_item (src/location.ml[14,298+0]..src/location.ml[17,438+33])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/location.ml[14,298+4]..src/location.ml[14,298+16])
          Tpat_var "set_filename/870"
        expression (src/location.ml[14,298+17]..src/location.ml[17,438+33]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/location.ml[14,298+17]..src/location.ml[14,298+20])
                Tpat_var "loc/872"
              expression (src/location.ml[14,298+21]..src/location.ml[17,438+33]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/location.ml[14,298+21]..src/location.ml[14,298+23])
                      Tpat_var "fn/873"
                    expression (src/location.ml[15,324+2]..src/location.ml[17,438+33])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/location.ml[15,324+6]..src/location.ml[15,324+15])
                            Tpat_var "loc_start/874"
                          expression (src/location.ml[15,324+18]..src/location.ml[15,324+55])
                            Texp_record
                              fields =
                                [
                                  "pos_fname"
                                    expression (src/location.ml[15,324+51]..src/location.ml[15,324+53])
                                      Texp_ident "fn/873"
                                  <kept>                                  <kept>                                  <kept>                                ]
                              representation =
                                Record_regular
                              extended_expression =
                                Some
                                  expression (src/location.ml[15,324+20]..src/location.ml[15,324+33])
                                    Texp_field
                                    expression (src/location.ml[15,324+20]..src/location.ml[15,324+23])
                                      Texp_ident "loc/872"
                                    "loc_start"
                      ]
                      expression (src/location.ml[16,383+2]..src/location.ml[17,438+33])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/location.ml[16,383+6]..src/location.ml[16,383+13])
                              Tpat_var "loc_end/875"
                            expression (src/location.ml[16,383+16]..src/location.ml[16,383+51])
                              Texp_record
                                fields =
                                  [
                                    "pos_fname"
                                      expression (src/location.ml[16,383+47]..src/location.ml[16,383+49])
                                        Texp_ident "fn/873"
                                    <kept>                                    <kept>                                    <kept>                                  ]
                                representation =
                                  Record_regular
                                extended_expression =
                                  Some
                                    expression (src/location.ml[16,383+18]..src/location.ml[16,383+29])
                                      Texp_field
                                      expression (src/location.ml[16,383+18]..src/location.ml[16,383+21])
                                        Texp_ident "loc/872"
                                      "loc_end"
                        ]
                        expression (src/location.ml[17,438+2]..src/location.ml[17,438+33])
                          Texp_record
                            fields =
                              [
                                "loc_start"
                                  expression (src/location.ml[17,438+13]..src/location.ml[17,438+22]) ghost
                                    Texp_ident "loc_start/874"
                                "loc_end"
                                  expression (src/location.ml[17,438+24]..src/location.ml[17,438+31]) ghost
                                    Texp_ident "loc_end/875"
                                <kept>                              ]
                            representation =
                              Record_regular
                            extended_expression =
                              Some
                                expression (src/location.ml[17,438+4]..src/location.ml[17,438+7])
                                  Texp_ident "loc/872"
                ]
          ]
    ]
  structure_item (src/location.ml[19,473+0]..src/location.ml[19,473+27])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/location.ml[19,473+4]..src/location.ml[19,473+8])
          Tpat_var "none/876"
        expression (src/location.ml[19,473+11]..src/location.ml[19,473+27])
          Texp_apply
          expression (src/location.ml[19,473+11]..src/location.ml[19,473+18])
            Texp_ident "in_file/866"
          [
            <arg>
              Nolabel
              expression (src/location.ml[19,473+19]..src/location.ml[19,473+27])
                Texp_constant Const_string("_none_",(src/location.ml[19,473+20]..src/location.ml[19,473+26]),None)
          ]
    ]
  structure_item (src/location.ml[21,502+0]..src/location.ml[24,570+66])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/location.ml[21,502+4]..src/location.ml[21,502+8])
          Tpat_var "init/877"
        expression (src/location.ml[21,502+9]..src/location.ml[24,570+66]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/location.ml[21,502+9]..src/location.ml[21,502+15])
                Tpat_var "lexbuf/879"
              expression (src/location.ml[21,502+16]..src/location.ml[24,570+66]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/location.ml[21,502+16]..src/location.ml[21,502+21])
                      Tpat_var "fname/880"
                    expression (src/location.ml[22,526+2]..src/location.ml[24,570+66])
                      Texp_open Fresh
                      module_expr (src/location.ml[22,526+11]..src/location.ml[22,526+17])
                        Tmod_ident "Stdlib!.Lexing"
                      expression (src/location.ml[23,547+2]..src/location.ml[24,570+66])
                        Texp_setfield
                        expression (src/location.ml[23,547+2]..src/location.ml[23,547+8])
                          Texp_ident "lexbuf/879"
                        "lex_curr_p"
                        expression (src/location.ml[24,570+4]..src/location.ml[24,570+66])
                          Texp_record
                            fields =
                              [
                                "pos_fname"
                                  expression (src/location.ml[24,570+18]..src/location.ml[24,570+23])
                                    Texp_ident "fname/880"
                                "pos_lnum"
                                  expression (src/location.ml[24,570+36]..src/location.ml[24,570+37])
                                    Texp_constant Const_int 1
                                "pos_bol"
                                  expression (src/location.ml[24,570+49]..src/location.ml[24,570+50])
                                    Texp_constant Const_int 0
                                "pos_cnum"
                                  expression (src/location.ml[24,570+63]..src/location.ml[24,570+64])
                                    Texp_constant Const_int 0
                              ]
                            representation =
                              Record_regular
                            extended_expression =
                              None
                ]
          ]
    ]
  structure_item (src/location.ml[26,638+0]..src/location.ml[26,638+51])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/location.ml[26,638+4]..src/location.ml[26,638+16])
          Tpat_var "raise_errorf/881"
        expression (src/location.ml[26,638+17]..src/location.ml[26,638+51]) ghost
          Texp_function
          Optional "loc"
          [
            <case>
              pattern (src/location.ml[26,638+18]..src/location.ml[26,638+21])
                Tpat_var "loc/883"
              expression (src/location.ml[26,638+22]..src/location.ml[26,638+51]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/location.ml[26,638+22]..src/location.ml[26,638+25])
                      Tpat_var "fmt/884"
                    expression (src/location.ml[26,638+28]..src/location.ml[26,638+51])
                      Texp_apply
                      expression (src/location.ml[26,638+28]..src/location.ml[26,638+42])
                        Texp_ident "L/600.raise_errorf"
                      [
                        <arg>
                          Optional "loc"
                          expression (src/location.ml[26,638+44]..src/location.ml[26,638+47])
                            Texp_ident "loc/883"
                        <arg>
                          Nolabel
                          expression (src/location.ml[26,638+48]..src/location.ml[26,638+51])
                            Texp_ident "fmt/884"
                      ]
                ]
          ]
    ]
  structure_item (src/location.ml[27,690+0]..src/location.ml[27,690+41])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/location.ml[27,690+4]..src/location.ml[27,690+20])
          Tpat_var "report_exception/905"
        expression (src/location.ml[27,690+23]..src/location.ml[27,690+41])
          Texp_ident "L/600.report_exception"
    ]
  structure_item (src/location.ml[29,733+0]..src/location.ml[34,870+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/location.ml[29,733+4]..src/location.ml[29,733+13])
          Tpat_var "of_lexbuf/906"
        expression (src/location.ml[29,733+14]..src/location.ml[34,870+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/location.ml[29,733+15]..src/location.ml[29,733+21])
                Tpat_extra_constraint
                core_type (src/location.ml[29,733+24]..src/location.ml[29,733+37])
                  Ttyp_constr "Stdlib!.Lexing.lexbuf"
                  []
                pattern (src/location.ml[29,733+15]..src/location.ml[29,733+21])
                  Tpat_alias "lexbuf/908"
                  pattern (src/location.ml[29,733+15]..src/location.ml[29,733+21])
                    Tpat_any
              expression (src/location.ml[30,774+2]..src/location.ml[34,870+3])
                Texp_record
                  fields =
                    [
                      "loc_start"
                        expression (src/location.ml[31,778+16]..src/location.ml[31,778+34])
                          Texp_field
                          expression (src/location.ml[31,778+16]..src/location.ml[31,778+22])
                            Texp_ident "lexbuf/908"
                          "lex_start_p"
                      "loc_end"
                        expression (src/location.ml[32,814+14]..src/location.ml[32,814+31])
                          Texp_field
                          expression (src/location.ml[32,814+14]..src/location.ml[32,814+20])
                            Texp_ident "lexbuf/908"
                          "lex_curr_p"
                      "loc_ghost"
                        expression (src/location.ml[33,847+16]..src/location.ml[33,847+21])
                          Texp_construct "false"
                          []
                    ]
                  representation =
                    Record_regular
                  extended_expression =
                    None
          ]
    ]
  structure_item (src/location.ml[36,875+0]..src/location.ml[40,1059+46])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/location.ml[36,875+4]..src/location.ml[36,875+9])
          Tpat_var "print/909"
        expression (src/location.ml[36,875+10]..src/location.ml[40,1059+46]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/location.ml[36,875+10]..src/location.ml[36,875+13])
                Tpat_var "ppf/911"
              expression (src/location.ml[36,875+14]..src/location.ml[40,1059+46]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/location.ml[36,875+14]..src/location.ml[36,875+15])
                      Tpat_var "t/912"
                    expression (src/location.ml[37,893+2]..src/location.ml[40,1059+46])
                      Texp_apply
                      expression (src/location.ml[37,893+2]..src/location.ml[37,893+23])
                        Texp_ident "Stdlib!.Format.fprintf"
                      [
                        <arg>
                          Nolabel
                          expression (src/location.ml[37,893+24]..src/location.ml[37,893+27])
                            Texp_ident "ppf/911"
                        <arg>
                          Nolabel
                          expression (src/location.ml[37,893+28]..src/location.ml[37,893+69])
                            Texp_construct "CamlinternalFormatBasics.Format"
                            [
                              expression (src/location.ml[37,893+28]..src/location.ml[37,893+69]) ghost
                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                [
                                  expression (src/location.ml[37,893+28]..src/location.ml[37,893+69]) ghost
                                    Texp_constant Const_string("File \"",(src/location.ml[37,893+28]..src/location.ml[37,893+69]) ghost,None)
                                  expression (src/location.ml[37,893+28]..src/location.ml[37,893+69]) ghost
                                    Texp_construct "CamlinternalFormatBasics.String"
                                    [
                                      expression (src/location.ml[37,893+28]..src/location.ml[37,893+69]) ghost
                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                        []
                                      expression (src/location.ml[37,893+28]..src/location.ml[37,893+69]) ghost
                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                        [
                                          expression (src/location.ml[37,893+28]..src/location.ml[37,893+69]) ghost
                                            Texp_constant Const_string("\", line ",(src/location.ml[37,893+28]..src/location.ml[37,893+69]) ghost,None)
                                          expression (src/location.ml[37,893+28]..src/location.ml[37,893+69]) ghost
                                            Texp_construct "CamlinternalFormatBasics.Int"
                                            [
                                              expression (src/location.ml[37,893+28]..src/location.ml[37,893+69]) ghost
                                                Texp_construct "CamlinternalFormatBasics.Int_d"
                                                []
                                              expression (src/location.ml[37,893+28]..src/location.ml[37,893+69]) ghost
                                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                                []
                                              expression (src/location.ml[37,893+28]..src/location.ml[37,893+69]) ghost
                                                Texp_construct "CamlinternalFormatBasics.No_precision"
                                                []
                                              expression (src/location.ml[37,893+28]..src/location.ml[37,893+69]) ghost
                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                [
                                                  expression (src/location.ml[37,893+28]..src/location.ml[37,893+69]) ghost
                                                    Texp_constant Const_string(", characters ",(src/location.ml[37,893+28]..src/location.ml[37,893+69]) ghost,None)
                                                  expression (src/location.ml[37,893+28]..src/location.ml[37,893+69]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.Int"
                                                    [
                                                      expression (src/location.ml[37,893+28]..src/location.ml[37,893+69]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.Int_d"
                                                        []
                                                      expression (src/location.ml[37,893+28]..src/location.ml[37,893+69]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                                        []
                                                      expression (src/location.ml[37,893+28]..src/location.ml[37,893+69]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.No_precision"
                                                        []
                                                      expression (src/location.ml[37,893+28]..src/location.ml[37,893+69]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                        [
                                                          expression (src/location.ml[37,893+28]..src/location.ml[37,893+69]) ghost
                                                            Texp_constant Const_char 2d
                                                          expression (src/location.ml[37,893+28]..src/location.ml[37,893+69]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.Int"
                                                            [
                                                              expression (src/location.ml[37,893+28]..src/location.ml[37,893+69]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.Int_d"
                                                                []
                                                              expression (src/location.ml[37,893+28]..src/location.ml[37,893+69]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                []
                                                              expression (src/location.ml[37,893+28]..src/location.ml[37,893+69]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.No_precision"
                                                                []
                                                              expression (src/location.ml[37,893+28]..src/location.ml[37,893+69]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                [
                                                                  expression (src/location.ml[37,893+28]..src/location.ml[37,893+69]) ghost
                                                                    Texp_constant Const_char 3a
                                                                  expression (src/location.ml[37,893+28]..src/location.ml[37,893+69]) ghost
                                                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                    []
                                                                ]
                                                            ]
                                                        ]
                                                    ]
                                                ]
                                            ]
                                        ]
                                    ]
                                ]
                              expression (src/location.ml[37,893+28]..src/location.ml[37,893+69]) ghost
                                Texp_constant Const_string("File \"%s\", line %d, characters %d-%d:",(src/location.ml[37,893+28]..src/location.ml[37,893+69]) ghost,None)
                            ]
                        <arg>
                          Nolabel
                          expression (src/location.ml[38,963+4]..src/location.ml[38,963+25])
                            Texp_field
                            expression (src/location.ml[38,963+4]..src/location.ml[38,963+15])
                              Texp_field
                              expression (src/location.ml[38,963+4]..src/location.ml[38,963+5])
                                Texp_ident "t/912"
                              "loc_start"
                            "pos_fname"
                        <arg>
                          Nolabel
                          expression (src/location.ml[38,963+26]..src/location.ml[38,963+46])
                            Texp_field
                            expression (src/location.ml[38,963+26]..src/location.ml[38,963+37])
                              Texp_field
                              expression (src/location.ml[38,963+26]..src/location.ml[38,963+27])
                                Texp_ident "t/912"
                              "loc_start"
                            "pos_lnum"
                        <arg>
                          Nolabel
                          expression (src/location.ml[39,1010+4]..src/location.ml[39,1010+48])
                            Texp_apply
                            expression (src/location.ml[39,1010+26]..src/location.ml[39,1010+27])
                              Texp_ident "Stdlib!.-"
                            [
                              <arg>
                                Nolabel
                                expression (src/location.ml[39,1010+5]..src/location.ml[39,1010+25])
                                  Texp_field
                                  expression (src/location.ml[39,1010+5]..src/location.ml[39,1010+16])
                                    Texp_field
                                    expression (src/location.ml[39,1010+5]..src/location.ml[39,1010+6])
                                      Texp_ident "t/912"
                                    "loc_start"
                                  "pos_cnum"
                              <arg>
                                Nolabel
                                expression (src/location.ml[39,1010+28]..src/location.ml[39,1010+47])
                                  Texp_field
                                  expression (src/location.ml[39,1010+28]..src/location.ml[39,1010+39])
                                    Texp_field
                                    expression (src/location.ml[39,1010+28]..src/location.ml[39,1010+29])
                                      Texp_ident "t/912"
                                    "loc_start"
                                  "pos_bol"
                            ]
                        <arg>
                          Nolabel
                          expression (src/location.ml[40,1059+4]..src/location.ml[40,1059+46])
                            Texp_apply
                            expression (src/location.ml[40,1059+24]..src/location.ml[40,1059+25])
                              Texp_ident "Stdlib!.-"
                            [
                              <arg>
                                Nolabel
                                expression (src/location.ml[40,1059+5]..src/location.ml[40,1059+23])
                                  Texp_field
                                  expression (src/location.ml[40,1059+5]..src/location.ml[40,1059+14])
                                    Texp_field
                                    expression (src/location.ml[40,1059+5]..src/location.ml[40,1059+6])
                                      Texp_ident "t/912"
                                    "loc_end"
                                  "pos_cnum"
                              <arg>
                                Nolabel
                                expression (src/location.ml[40,1059+26]..src/location.ml[40,1059+45])
                                  Texp_field
                                  expression (src/location.ml[40,1059+26]..src/location.ml[40,1059+37])
                                    Texp_field
                                    expression (src/location.ml[40,1059+26]..src/location.ml[40,1059+27])
                                      Texp_ident "t/912"
                                    "loc_start"
                                  "pos_bol"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/location.ml[42,1107+0]..src/location.ml[42,1107+51])
    Tstr_type Nonrec
    [
      type_declaration loc/1099 (src/location.ml[42,1107+0]..src/location.ml[42,1107+51])
        ptype_params =
          [
            core_type (src/location.ml[42,1107+12]..src/location.ml[42,1107+14])
              Ttyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (src/location.ml[42,1107+32]..src/location.ml[42,1107+41])
                Immutable
                txt/1100                core_type (src/location.ml[42,1107+38]..src/location.ml[42,1107+40])
                  Ttyp_poly
                  core_type (src/location.ml[42,1107+38]..src/location.ml[42,1107+40])
                    Ttyp_var a
              (src/location.ml[42,1107+42]..src/location.ml[42,1107+49])
                Immutable
                loc/1101                core_type (src/location.ml[42,1107+48]..src/location.ml[42,1107+49])
                  Ttyp_poly
                  core_type (src/location.ml[42,1107+48]..src/location.ml[42,1107+49])
                    Ttyp_constr "t/601"
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/location.ml[42,1107+21]..src/location.ml[42,1107+27])
              Ttyp_constr "Ppxlib__!.Import.loc"
              [
                core_type (src/location.ml[42,1107+21]..src/location.ml[42,1107+23])
                  Ttyp_var a
              ]
    ]
  structure_item (src/location.ml[44,1160+0]..src/location.ml[55,1549+10])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/location.ml[44,1160+4]..src/location.ml[44,1160+15])
          Tpat_var "compare_pos/1102"
        expression (src/location.ml[44,1160+16]..src/location.ml[55,1549+10]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/location.ml[44,1160+16]..src/location.ml[44,1160+18])
                Tpat_var "p1/1104"
              expression (src/location.ml[44,1160+19]..src/location.ml[55,1549+10]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/location.ml[44,1160+19]..src/location.ml[44,1160+21])
                      Tpat_var "p2/1105"
                    expression (src/location.ml[45,1184+2]..src/location.ml[55,1549+10])
                      Texp_open Fresh
                      module_expr (src/location.ml[45,1184+11]..src/location.ml[45,1184+17])
                        Tmod_ident "Stdlib!.Lexing"
                      expression (src/location.ml[46,1205+2]..src/location.ml[55,1549+10])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/location.ml[46,1205+6]..src/location.ml[46,1205+12])
                              Tpat_var "column/1106"
                            expression (src/location.ml[46,1205+13]..src/location.ml[51,1423+26]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/location.ml[46,1205+13]..src/location.ml[46,1205+14])
                                    Tpat_var "p/1108"
                                  expression (src/location.ml[51,1423+4]..src/location.ml[51,1423+26])
                                    Texp_apply
                                    expression (src/location.ml[51,1423+15]..src/location.ml[51,1423+16])
                                      Texp_ident "Stdlib!.-"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/location.ml[51,1423+4]..src/location.ml[51,1423+14])
                                          Texp_field
                                          expression (src/location.ml[51,1423+4]..src/location.ml[51,1423+5])
                                            Texp_ident "p/1108"
                                          "pos_cnum"
                                      <arg>
                                        Nolabel
                                        expression (src/location.ml[51,1423+17]..src/location.ml[51,1423+26])
                                          Texp_field
                                          expression (src/location.ml[51,1423+17]..src/location.ml[51,1423+18])
                                            Texp_ident "p/1108"
                                          "pos_bol"
                                    ]
                              ]
                        ]
                        expression (src/location.ml[53,1455+2]..src/location.ml[55,1549+10])
                          Texp_match
                          expression (src/location.ml[53,1455+8]..src/location.ml[53,1455+43])
                            Texp_apply
                            expression (src/location.ml[53,1455+8]..src/location.ml[53,1455+19])
                              Texp_ident "Ppxlib__!.Import.Int.compare"
                            [
                              <arg>
                                Nolabel
                                expression (src/location.ml[53,1455+20]..src/location.ml[53,1455+31])
                                  Texp_field
                                  expression (src/location.ml[53,1455+20]..src/location.ml[53,1455+22])
                                    Texp_ident "p1/1104"
                                  "pos_lnum"
                              <arg>
                                Nolabel
                                expression (src/location.ml[53,1455+32]..src/location.ml[53,1455+43])
                                  Texp_field
                                  expression (src/location.ml[53,1455+32]..src/location.ml[53,1455+34])
                                    Texp_ident "p2/1105"
                                  "pos_lnum"
                            ]
                          [
                            <case>
                              pattern (src/location.ml[54,1504+4]..src/location.ml[54,1504+5])
                                Tpat_value
                                pattern (src/location.ml[54,1504+4]..src/location.ml[54,1504+5])
                                  Tpat_constant Const_int 0
                              expression (src/location.ml[54,1504+9]..src/location.ml[54,1504+44])
                                Texp_apply
                                expression (src/location.ml[54,1504+9]..src/location.ml[54,1504+20])
                                  Texp_ident "Ppxlib__!.Import.Int.compare"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/location.ml[54,1504+21]..src/location.ml[54,1504+32])
                                      Texp_apply
                                      expression (src/location.ml[54,1504+22]..src/location.ml[54,1504+28])
                                        Texp_ident "column/1106"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/location.ml[54,1504+29]..src/location.ml[54,1504+31])
                                            Texp_ident "p1/1104"
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (src/location.ml[54,1504+33]..src/location.ml[54,1504+44])
                                      Texp_apply
                                      expression (src/location.ml[54,1504+34]..src/location.ml[54,1504+40])
                                        Texp_ident "column/1106"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/location.ml[54,1504+41]..src/location.ml[54,1504+43])
                                            Texp_ident "p2/1105"
                                      ]
                                ]
                            <case>
                              pattern (src/location.ml[55,1549+4]..src/location.ml[55,1549+5])
                                Tpat_value
                                pattern (src/location.ml[55,1549+4]..src/location.ml[55,1549+5])
                                  Tpat_var "n/1167"
                              expression (src/location.ml[55,1549+9]..src/location.ml[55,1549+10])
                                Texp_ident "n/1167"
                          ]
                          []
                ]
          ]
    ]
  structure_item (src/location.ml[57,1561+0]..src/location.ml[57,1561+61])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/location.ml[57,1561+4]..src/location.ml[57,1561+11])
          Tpat_var "min_pos/1168"
        expression (src/location.ml[57,1561+12]..src/location.ml[57,1561+61]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/location.ml[57,1561+12]..src/location.ml[57,1561+14])
                Tpat_var "p1/1170"
              expression (src/location.ml[57,1561+15]..src/location.ml[57,1561+61]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/location.ml[57,1561+15]..src/location.ml[57,1561+17])
                      Tpat_var "p2/1171"
                    expression (src/location.ml[57,1561+20]..src/location.ml[57,1561+61])
                      Texp_ifthenelse
                      expression (src/location.ml[57,1561+23]..src/location.ml[57,1561+45])
                        Texp_apply
                        expression (src/location.ml[57,1561+41]..src/location.ml[57,1561+43])
                          Texp_ident "Ppxlib__!.Import.<="
                        [
                          <arg>
                            Nolabel
                            expression (src/location.ml[57,1561+23]..src/location.ml[57,1561+40])
                              Texp_apply
                              expression (src/location.ml[57,1561+23]..src/location.ml[57,1561+34])
                                Texp_ident "compare_pos/1102"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/location.ml[57,1561+35]..src/location.ml[57,1561+37])
                                    Texp_ident "p1/1170"
                                <arg>
                                  Nolabel
                                  expression (src/location.ml[57,1561+38]..src/location.ml[57,1561+40])
                                    Texp_ident "p2/1171"
                              ]
                          <arg>
                            Nolabel
                            expression (src/location.ml[57,1561+44]..src/location.ml[57,1561+45])
                              Texp_constant Const_int 0
                        ]
                      expression (src/location.ml[57,1561+51]..src/location.ml[57,1561+53])
                        Texp_ident "p1/1170"
                      Some
                        expression (src/location.ml[57,1561+59]..src/location.ml[57,1561+61])
                          Texp_ident "p2/1171"
                ]
          ]
    ]
  structure_item (src/location.ml[58,1623+0]..src/location.ml[58,1623+61])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/location.ml[58,1623+4]..src/location.ml[58,1623+11])
          Tpat_var "max_pos/1172"
        expression (src/location.ml[58,1623+12]..src/location.ml[58,1623+61]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/location.ml[58,1623+12]..src/location.ml[58,1623+14])
                Tpat_var "p1/1174"
              expression (src/location.ml[58,1623+15]..src/location.ml[58,1623+61]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/location.ml[58,1623+15]..src/location.ml[58,1623+17])
                      Tpat_var "p2/1175"
                    expression (src/location.ml[58,1623+20]..src/location.ml[58,1623+61])
                      Texp_ifthenelse
                      expression (src/location.ml[58,1623+23]..src/location.ml[58,1623+45])
                        Texp_apply
                        expression (src/location.ml[58,1623+41]..src/location.ml[58,1623+43])
                          Texp_ident "Ppxlib__!.Import.>="
                        [
                          <arg>
                            Nolabel
                            expression (src/location.ml[58,1623+23]..src/location.ml[58,1623+40])
                              Texp_apply
                              expression (src/location.ml[58,1623+23]..src/location.ml[58,1623+34])
                                Texp_ident "compare_pos/1102"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/location.ml[58,1623+35]..src/location.ml[58,1623+37])
                                    Texp_ident "p1/1174"
                                <arg>
                                  Nolabel
                                  expression (src/location.ml[58,1623+38]..src/location.ml[58,1623+40])
                                    Texp_ident "p2/1175"
                              ]
                          <arg>
                            Nolabel
                            expression (src/location.ml[58,1623+44]..src/location.ml[58,1623+45])
                              Texp_constant Const_int 0
                        ]
                      expression (src/location.ml[58,1623+51]..src/location.ml[58,1623+53])
                        Texp_ident "p1/1174"
                      Some
                        expression (src/location.ml[58,1623+59]..src/location.ml[58,1623+61])
                          Texp_ident "p2/1175"
                ]
          ]
    ]
  structure_item (src/location.ml[60,1686+0]..src/location.ml[63,1812+10])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/location.ml[60,1686+4]..src/location.ml[60,1686+11])
          Tpat_var "compare/1176"
        expression (src/location.ml[60,1686+12]..src/location.ml[63,1812+10]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/location.ml[60,1686+12]..src/location.ml[60,1686+16])
                Tpat_var "loc1/1177"
              expression (src/location.ml[60,1686+17]..src/location.ml[63,1812+10]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/location.ml[60,1686+17]..src/location.ml[60,1686+21])
                      Tpat_var "loc2/1178"
                    expression (src/location.ml[61,1710+2]..src/location.ml[63,1812+10])
                      Texp_match
                      expression (src/location.ml[61,1710+8]..src/location.ml[61,1710+49])
                        Texp_apply
                        expression (src/location.ml[61,1710+8]..src/location.ml[61,1710+19])
                          Texp_ident "compare_pos/1102"
                        [
                          <arg>
                            Nolabel
                            expression (src/location.ml[61,1710+20]..src/location.ml[61,1710+34])
                              Texp_field
                              expression (src/location.ml[61,1710+20]..src/location.ml[61,1710+24])
                                Texp_ident "loc1/1177"
                              "loc_start"
                          <arg>
                            Nolabel
                            expression (src/location.ml[61,1710+35]..src/location.ml[61,1710+49])
                              Texp_field
                              expression (src/location.ml[61,1710+35]..src/location.ml[61,1710+39])
                                Texp_ident "loc2/1178"
                              "loc_start"
                        ]
                      [
                        <case>
                          pattern (src/location.ml[62,1765+4]..src/location.ml[62,1765+5])
                            Tpat_value
                            pattern (src/location.ml[62,1765+4]..src/location.ml[62,1765+5])
                              Tpat_constant Const_int 0
                          expression (src/location.ml[62,1765+9]..src/location.ml[62,1765+46])
                            Texp_apply
                            expression (src/location.ml[62,1765+9]..src/location.ml[62,1765+20])
                              Texp_ident "compare_pos/1102"
                            [
                              <arg>
                                Nolabel
                                expression (src/location.ml[62,1765+21]..src/location.ml[62,1765+33])
                                  Texp_field
                                  expression (src/location.ml[62,1765+21]..src/location.ml[62,1765+25])
                                    Texp_ident "loc1/1177"
                                  "loc_end"
                              <arg>
                                Nolabel
                                expression (src/location.ml[62,1765+34]..src/location.ml[62,1765+46])
                                  Texp_field
                                  expression (src/location.ml[62,1765+34]..src/location.ml[62,1765+38])
                                    Texp_ident "loc2/1178"
                                  "loc_end"
                            ]
                        <case>
                          pattern (src/location.ml[63,1812+4]..src/location.ml[63,1812+5])
                            Tpat_value
                            pattern (src/location.ml[63,1812+4]..src/location.ml[63,1812+5])
                              Tpat_var "n/1179"
                          expression (src/location.ml[63,1812+9]..src/location.ml[63,1812+10])
                            Texp_ident "n/1179"
                      ]
                      []
                ]
          ]
    ]
  structure_item (src/location.ml[65,1824+0]..src/location.ml[69,1964+3])
    Tstr_module
    Error/1246
      module_expr (src/location.ml[65,1824+15]..src/location.ml[69,1964+3])
        Tmod_structure
        [
          structure_item (src/location.ml[66,1846+2]..src/location.ml[66,1846+35])
            Tstr_include            module_expr (src/location.ml[66,1846+10]..src/location.ml[66,1846+35])
              module_expr (src/location.ml[66,1846+10]..src/location.ml[66,1846+35])
                Tmod_ident "Ppxlib_ast!.Location_error"
          structure_item (src/location.ml[68,1883+2]..src/location.ml[68,1883+80])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/location.ml[68,1883+6]..src/location.ml[68,1883+13])
                  Tpat_var "createf/1223"
                expression (src/location.ml[68,1883+14]..src/location.ml[68,1883+80]) ghost
                  Texp_function
                  Labelled "loc"
                  [
                    <case>
                      pattern (src/location.ml[68,1883+15]..src/location.ml[68,1883+18])
                        Tpat_var "loc/1225"
                      expression (src/location.ml[68,1883+19]..src/location.ml[68,1883+80]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/location.ml[68,1883+19]..src/location.ml[68,1883+22])
                              Tpat_var "fmt/1226"
                            expression (src/location.ml[68,1883+25]..src/location.ml[68,1883+80])
                              Texp_apply
                              expression (src/location.ml[68,1883+25]..src/location.ml[68,1883+41])
                                Texp_ident "Stdlib!.Format.kasprintf"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/location.ml[68,1883+42]..src/location.ml[68,1883+76])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/location.ml[68,1883+47]..src/location.ml[68,1883+50])
                                          Tpat_var "str/1227"
                                        expression (src/location.ml[68,1883+54]..src/location.ml[68,1883+75])
                                          Texp_apply
                                          expression (src/location.ml[68,1883+54]..src/location.ml[68,1883+58])
                                            Texp_ident "make/1218"
                                          [
                                            <arg>
                                              Labelled "loc"
                                              expression (src/location.ml[68,1883+60]..src/location.ml[68,1883+63])
                                                Texp_ident "loc/1225"
                                            <arg>
                                              Nolabel
                                              expression (src/location.ml[68,1883+72]..src/location.ml[68,1883+75])
                                                Texp_ident "str/1227"
                                            <arg>
                                              Labelled "sub"
                                              expression (src/location.ml[68,1883+69]..src/location.ml[68,1883+71])
                                                Texp_construct "[]"
                                                []
                                          ]
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/location.ml[68,1883+77]..src/location.ml[68,1883+80])
                                    Texp_ident "fmt/1226"
                              ]
                        ]
                  ]
            ]
        ]
  structure_item (src/location.ml[71,1969+0]..src/location.ml[74,2087+7])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/location.ml[71,1969+4]..src/location.ml[71,1969+20])
          Tpat_var "error_extensionf/1247"
        expression (src/location.ml[71,1969+21]..src/location.ml[74,2087+7]) ghost
          Texp_function
          Labelled "loc"
          [
            <case>
              pattern (src/location.ml[71,1969+22]..src/location.ml[71,1969+25])
                Tpat_var "loc/1249"
              expression (src/location.ml[71,1969+26]..src/location.ml[74,2087+7]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/location.ml[71,1969+26]..src/location.ml[71,1969+29])
                      Tpat_var "fmt/1250"
                    expression (src/location.ml[72,2001+2]..src/location.ml[74,2087+7])
                      Texp_apply
                      expression (src/location.ml[72,2001+2]..src/location.ml[72,2001+18])
                        Texp_ident "Stdlib!.Format.kasprintf"
                      [
                        <arg>
                          Nolabel
                          expression (src/location.ml[73,2020+4]..src/location.ml[73,2020+66])
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/location.ml[73,2020+9]..src/location.ml[73,2020+12])
                                  Tpat_var "str/1251"
                                expression (src/location.ml[73,2020+16]..src/location.ml[73,2020+65])
                                  Texp_apply
                                  expression (src/location.ml[73,2020+35]..src/location.ml[73,2020+37])
                                    Texp_ident "Stdlib!.@@"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/location.ml[73,2020+16]..src/location.ml[73,2020+34])
                                        Texp_ident "Error/1246.to_extension"
                                    <arg>
                                      Nolabel
                                      expression (src/location.ml[73,2020+38]..src/location.ml[73,2020+65])
                                        Texp_apply
                                        expression (src/location.ml[73,2020+38]..src/location.ml[73,2020+48])
                                          Texp_ident "Error/1246.make"
                                        [
                                          <arg>
                                            Labelled "loc"
                                            expression (src/location.ml[73,2020+50]..src/location.ml[73,2020+53])
                                              Texp_ident "loc/1249"
                                          <arg>
                                            Nolabel
                                            expression (src/location.ml[73,2020+62]..src/location.ml[73,2020+65])
                                              Texp_ident "str/1251"
                                          <arg>
                                            Labelled "sub"
                                            expression (src/location.ml[73,2020+59]..src/location.ml[73,2020+61])
                                              Texp_construct "[]"
                                              []
                                        ]
                                  ]
                            ]
                        <arg>
                          Nolabel
                          expression (src/location.ml[74,2087+4]..src/location.ml[74,2087+7])
                            Texp_ident "fmt/1250"
                      ]
                ]
          ]
    ]
  structure_item (src/location.ml[76,2096+0]..src/location.ml[76,2096+25])
    Tstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (src/location.ml[76,2096+0]..src/location.ml[76,2096+25])
          pext_name = "Error/1644"
          pext_kind =
            Text_rebind
              "L/600.Error"
  structure_item (src/location.ml[78,2123+0]..src/location.ml[81,2217+16])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/location.ml[78,2123+4]..src/location.ml[78,2123+6])
          Tpat_construct "()"
          []
        expression (src/location.ml[79,2132+2]..src/location.ml[81,2217+16])
          Texp_apply
          expression (src/location.ml[79,2132+2]..src/location.ml[79,2132+34])
            Texp_ident "Stdlib!.Printexc.register_printer"
          [
            <arg>
              Nolabel
              expression (src/location.ml[79,2132+35]..src/location.ml[81,2217+16])
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/location.ml[80,2177+6]..src/location.ml[80,2177+13])
                      Tpat_construct "Error"
                      [
                        pattern (src/location.ml[80,2177+12]..src/location.ml[80,2177+13])
                          Tpat_var "e/1692"
                      ]
                    expression (src/location.ml[80,2177+17]..src/location.ml[80,2177+39])
                      Texp_construct "Some"
                      [
                        expression (src/location.ml[80,2177+22]..src/location.ml[80,2177+39])
                          Texp_apply
                          expression (src/location.ml[80,2177+23]..src/location.ml[80,2177+36])
                            Texp_ident "Error/1246.message"
                          [
                            <arg>
                              Nolabel
                              expression (src/location.ml[80,2177+37]..src/location.ml[80,2177+38])
                                Texp_ident "e/1692"
                          ]
                      ]
                  <case>
                    pattern (src/location.ml[81,2217+6]..src/location.ml[81,2217+7])
                      Tpat_any
                    expression (src/location.ml[81,2217+11]..src/location.ml[81,2217+15])
                      Texp_construct "None"
                      []
                ]
          ]
    ]
]

(seq
  (let
    (in_file/866 =
       (function name/868
         (let (loc/869 = (makeblock 0 (*,int,int,int) name/868 1 0 -1))
           (makeblock 0 loc/869 loc/869 1))))
    (setfield_ptr(root-init) 0 (global Ppxlib__Location!) in_file/866))
  (let
    (set_filename/870 =
       (function loc/872 fn/873
         (let
           (loc_start/874 =
              (let (init/8234 = (field_imm 0 loc/872))
                (makeblock 0 (*,int,int,int) fn/873 (field_int 1 init/8234)
                  (field_int 2 init/8234) (field_int 3 init/8234)))
            loc_end/875 =
              (let (init/8233 = (field_imm 1 loc/872))
                (makeblock 0 (*,int,int,int) fn/873 (field_int 1 init/8233)
                  (field_int 2 init/8233) (field_int 3 init/8233)))
            init/8232 = loc/872)
           (makeblock 0 loc_start/874 loc_end/875 (field_int 2 init/8232)))))
    (setfield_ptr(root-init) 1 (global Ppxlib__Location!) set_filename/870))
  (let (none/876 = (apply (field_imm 0 (global Ppxlib__Location!)) "_none_"))
    (setfield_ptr(root-init) 2 (global Ppxlib__Location!) none/876))
  (let
    (init/877 =
       (function lexbuf/879 fname/880
         (setfield_ptr 11 lexbuf/879
           (makeblock 0 (*,int,int,int) fname/880 1 0 0))))
    (setfield_ptr(root-init) 3 (global Ppxlib__Location!) init/877))
  (let
    (raise_errorf/881 =
       (function loc/883 fmt/884
         (apply (field_imm 5 (global Astlib__Location!)) loc/883 fmt/884)))
    (setfield_ptr(root-init) 4 (global Ppxlib__Location!) raise_errorf/881))
  (let (report_exception/905 = (field_imm 6 (global Astlib__Location!)))
    (setfield_ptr(root-init) 6 (global Ppxlib__Location!)
      report_exception/905))
  (let
    (of_lexbuf/906 =
       (function lexbuf/908
         (makeblock 0 (field_mut 10 lexbuf/908) (field_mut 11 lexbuf/908) 0)))
    (setfield_ptr(root-init) 5 (global Ppxlib__Location!) of_lexbuf/906))
  (let
    (print/909 =
       (function ppf/911 t/912
         (apply (field_imm 131 (global Stdlib__format!)) ppf/911
           [0:
            [11:
             "File \""
             [2:
              0
              [11:
               "\", line "
               [4:
                0 0 0
                [11:
                 ", characters " [4: 0 0 0 [12: '-' [4: 0 0 0 [12: ':' 0]]]]]]]]]
            "File \"%s\", line %d, characters %d-%d:"]
           (field_imm 0 (field_imm 0 t/912))
           (field_int 1 (field_imm 0 t/912))
           (- (field_int 3 (field_imm 0 t/912))
             (field_int 2 (field_imm 0 t/912)))
           (- (field_int 3 (field_imm 1 t/912))
             (field_int 2 (field_imm 0 t/912))))))
    (setfield_ptr(root-init) 7 (global Ppxlib__Location!) print/909))
  (let
    (compare_pos/1102 =
       (function p1/1104 p2/1105 : int
         (let
           (column/1106 =
              (function p/1108 : int
                (- (field_int 3 p/1108) (field_int 2 p/1108)))
            n/1167 =
              (apply (field_imm 2 (field_imm 89 (global Ppxlib__Import!)))
                (field_int 1 p1/1104) (field_int 1 p2/1105)))
           (catch
             (if (!= n/1167 0) (exit 1)
               (apply (field_imm 2 (field_imm 89 (global Ppxlib__Import!)))
                 (apply column/1106 p1/1104) (apply column/1106 p2/1105)))
            with (1) n/1167))))
    (setfield_ptr(root-init) 8 (global Ppxlib__Location!) compare_pos/1102))
  (let
    (min_pos/1168 =
       (function p1/1170 p2/1171
         (if
           (apply (field_imm 77 (global Ppxlib__Import!))
             (apply (field_imm 8 (global Ppxlib__Location!)) p1/1170 p2/1171)
             0)
           p1/1170 p2/1171)))
    (setfield_ptr(root-init) 9 (global Ppxlib__Location!) min_pos/1168))
  (let
    (max_pos/1172 =
       (function p1/1174 p2/1175
         (if
           (apply (field_imm 78 (global Ppxlib__Import!))
             (apply (field_imm 8 (global Ppxlib__Location!)) p1/1174 p2/1175)
             0)
           p1/1174 p2/1175)))
    (setfield_ptr(root-init) 10 (global Ppxlib__Location!) max_pos/1172))
  (let
    (compare/1176 =
       (function loc1/1177 loc2/1178 : int
         (let
           (n/1179 =
              (apply (field_imm 8 (global Ppxlib__Location!))
                (field_imm 0 loc1/1177) (field_imm 0 loc2/1178)))
           (catch
             (if (!= n/1179 0) (exit 2)
               (apply (field_imm 8 (global Ppxlib__Location!))
                 (field_imm 1 loc1/1177) (field_imm 1 loc2/1178)))
            with (2) n/1179))))
    (setfield_ptr(root-init) 11 (global Ppxlib__Location!) compare/1176))
  (let
    (include/8237 =
       (let (let/8238 = (global Ppxlib_ast__Location_error!))
         (global Ppxlib_ast__Location_error!))
     of_exn/1214 =a (field_mut 0 include/8237))
    (seq (setfield_ptr(root-init) 15 (global Ppxlib__Location!) of_exn/1214)
      (let (register_error_of_exn/1215 =a (field_mut 1 include/8237))
        (seq
          (setfield_ptr(root-init) 16 (global Ppxlib__Location!)
            register_error_of_exn/1215)
          (let (message/1216 =a (field_mut 2 include/8237))
            (seq
              (setfield_ptr(root-init) 17 (global Ppxlib__Location!)
                message/1216)
              (let (set_message/1217 =a (field_mut 3 include/8237))
                (seq
                  (setfield_ptr(root-init) 18 (global Ppxlib__Location!)
                    set_message/1217)
                  (let (make/1218 =a (field_mut 4 include/8237))
                    (seq
                      (setfield_ptr(root-init) 19 (global Ppxlib__Location!)
                        make/1218)
                      (let (to_extension/1219 =a (field_mut 5 include/8237))
                        (seq
                          (setfield_ptr(root-init) 20
                            (global Ppxlib__Location!) to_extension/1219)
                          (let (raise/1220 =a (field_mut 6 include/8237))
                            (seq
                              (setfield_ptr(root-init) 21
                                (global Ppxlib__Location!) raise/1220)
                              (let
                                (update_loc/1221 =a
                                   (field_mut 7 include/8237))
                                (seq
                                  (setfield_ptr(root-init) 22
                                    (global Ppxlib__Location!)
                                    update_loc/1221)
                                  (let
                                    (get_location/1222 =a
                                       (field_mut 8 include/8237))
                                    (seq
                                      (setfield_ptr(root-init) 23
                                        (global Ppxlib__Location!)
                                        get_location/1222)
                                      (let
                                        (createf/1223 =
                                           (function loc/1225 fmt/1226
                                             (apply
                                               (field_imm 142
                                                 (global Stdlib__format!))
                                               (function str/1227
                                                 (apply
                                                   (field_imm 19
                                                     (global Ppxlib__Location!))
                                                   loc/1225 str/1227 0))
                                               fmt/1226)))
                                        (setfield_ptr(root-init) 24
                                          (global Ppxlib__Location!)
                                          createf/1223))
                                      0))))))))))))))))))
  (let
    (Error/1246 =
       (makeblock 0 (field_imm 15 (global Ppxlib__Location!))
         (field_imm 16 (global Ppxlib__Location!))
         (field_imm 17 (global Ppxlib__Location!))
         (field_imm 18 (global Ppxlib__Location!))
         (field_imm 19 (global Ppxlib__Location!))
         (field_imm 20 (global Ppxlib__Location!))
         (field_imm 21 (global Ppxlib__Location!))
         (field_imm 22 (global Ppxlib__Location!))
         (field_imm 23 (global Ppxlib__Location!))
         (field_imm 24 (global Ppxlib__Location!))))
    (seq
      (setfield_ptr(root-init) 12 (global Ppxlib__Location!)
        (makeblock 0 (field_mut 4 Error/1246) (field_mut 9 Error/1246)
          (field_mut 2 Error/1246) (field_mut 3 Error/1246)
          (field_mut 1 Error/1246) (field_mut 0 Error/1246)
          (field_mut 5 Error/1246) (field_mut 6 Error/1246)
          (field_mut 7 Error/1246) (field_mut 8 Error/1246)))
      (let
        (error_extensionf/1247 =
           (function loc/1249 fmt/1250
             (apply (field_imm 142 (global Stdlib__format!))
               (function str/1251
                 (dirapply (field_imm 5 Error/1246)
                   (apply (field_imm 4 Error/1246) loc/1249 str/1251 0)))
               fmt/1250)))
        (setfield_ptr(root-init) 13 (global Ppxlib__Location!)
          error_extensionf/1247))
      (let (Error/1644 = (field_imm 4 (global Astlib__Location!)))
        (setfield_ptr(root-init) 14 (global Ppxlib__Location!) Error/1644))
      (let
        (*match*/8241 =
           (apply (field_imm 8 (global Stdlib__printexc!))
             (function param/1693
               (catch
                 (let (tag/8239 =a (field_imm 0 param/1693))
                   (if
                     (== tag/8239 (field_imm 14 (global Ppxlib__Location!)))
                     (let (e/1692 =a (field_imm 1 param/1693))
                       (makeblock 0 (apply (field_imm 2 Error/1246) e/1692)))
                     (exit 3)))
                with (3) 0))))
        0)
      0)))
(seq
  (let
    (in_file/866 =
       (function name/868
         (let (loc/869 = (makeblock 0 (*,int,int,int) name/868 1 0 -1))
           (makeblock 0 loc/869 loc/869 1))))
    (setfield_ptr(root-init) 0 (global Ppxlib__Location!) in_file/866))
  (let
    (set_filename/870 =
       (function loc/872 fn/873
         (let
           (loc_start/874 =
              (let (init/8234 = (field_imm 0 loc/872))
                (makeblock 0 (*,int,int,int) fn/873 (field_int 1 init/8234)
                  (field_int 2 init/8234) (field_int 3 init/8234)))
            loc_end/875 =
              (let (init/8233 = (field_imm 1 loc/872))
                (makeblock 0 (*,int,int,int) fn/873 (field_int 1 init/8233)
                  (field_int 2 init/8233) (field_int 3 init/8233))))
           (makeblock 0 loc_start/874 loc_end/875 (field_int 2 loc/872)))))
    (setfield_ptr(root-init) 1 (global Ppxlib__Location!) set_filename/870))
  (let (none/876 = (apply (field_imm 0 (global Ppxlib__Location!)) "_none_"))
    (setfield_ptr(root-init) 2 (global Ppxlib__Location!) none/876))
  (let
    (init/877 =
       (function lexbuf/879 fname/880
         (setfield_ptr 11 lexbuf/879
           (makeblock 0 (*,int,int,int) fname/880 1 0 0))))
    (setfield_ptr(root-init) 3 (global Ppxlib__Location!) init/877))
  (let
    (raise_errorf/881 =
       (function loc/883 fmt/884
         (apply (field_imm 5 (global Astlib__Location!)) loc/883 fmt/884)))
    (setfield_ptr(root-init) 4 (global Ppxlib__Location!) raise_errorf/881))
  (let (report_exception/905 = (field_imm 6 (global Astlib__Location!)))
    (setfield_ptr(root-init) 6 (global Ppxlib__Location!)
      report_exception/905))
  (let
    (of_lexbuf/906 =
       (function lexbuf/908
         (makeblock 0 (field_mut 10 lexbuf/908) (field_mut 11 lexbuf/908) 0)))
    (setfield_ptr(root-init) 5 (global Ppxlib__Location!) of_lexbuf/906))
  (let
    (print/909 =
       (function ppf/911 t/912
         (apply (field_imm 131 (global Stdlib__format!)) ppf/911
           [0:
            [11:
             "File \""
             [2:
              0
              [11:
               "\", line "
               [4:
                0 0 0
                [11:
                 ", characters " [4: 0 0 0 [12: '-' [4: 0 0 0 [12: ':' 0]]]]]]]]]
            "File \"%s\", line %d, characters %d-%d:"]
           (field_imm 0 (field_imm 0 t/912))
           (field_int 1 (field_imm 0 t/912))
           (- (field_int 3 (field_imm 0 t/912))
             (field_int 2 (field_imm 0 t/912)))
           (- (field_int 3 (field_imm 1 t/912))
             (field_int 2 (field_imm 0 t/912))))))
    (setfield_ptr(root-init) 7 (global Ppxlib__Location!) print/909))
  (let
    (compare_pos/1102 =
       (function p1/1104 p2/1105 : int
         (let
           (column/1106 =
              (function p/1108 : int
                (- (field_int 3 p/1108) (field_int 2 p/1108)))
            n/1167 =
              (apply (field_imm 2 (field_imm 89 (global Ppxlib__Import!)))
                (field_int 1 p1/1104) (field_int 1 p2/1105)))
           (if (!= n/1167 0) n/1167
             (apply (field_imm 2 (field_imm 89 (global Ppxlib__Import!)))
               (apply column/1106 p1/1104) (apply column/1106 p2/1105))))))
    (setfield_ptr(root-init) 8 (global Ppxlib__Location!) compare_pos/1102))
  (let
    (min_pos/1168 =
       (function p1/1170 p2/1171
         (if
           (apply (field_imm 77 (global Ppxlib__Import!))
             (apply (field_imm 8 (global Ppxlib__Location!)) p1/1170 p2/1171)
             0)
           p1/1170 p2/1171)))
    (setfield_ptr(root-init) 9 (global Ppxlib__Location!) min_pos/1168))
  (let
    (max_pos/1172 =
       (function p1/1174 p2/1175
         (if
           (apply (field_imm 78 (global Ppxlib__Import!))
             (apply (field_imm 8 (global Ppxlib__Location!)) p1/1174 p2/1175)
             0)
           p1/1174 p2/1175)))
    (setfield_ptr(root-init) 10 (global Ppxlib__Location!) max_pos/1172))
  (let
    (compare/1176 =
       (function loc1/1177 loc2/1178 : int
         (let
           (n/1179 =
              (apply (field_imm 8 (global Ppxlib__Location!))
                (field_imm 0 loc1/1177) (field_imm 0 loc2/1178)))
           (if (!= n/1179 0) n/1179
             (apply (field_imm 8 (global Ppxlib__Location!))
               (field_imm 1 loc1/1177) (field_imm 1 loc2/1178))))))
    (setfield_ptr(root-init) 11 (global Ppxlib__Location!) compare/1176))
  (let
    (include/8237 =
       (let (let/8238 = (global Ppxlib_ast__Location_error!))
         (global Ppxlib_ast__Location_error!)))
    (seq
      (setfield_ptr(root-init) 15 (global Ppxlib__Location!)
        (field_mut 0 include/8237))
      (setfield_ptr(root-init) 16 (global Ppxlib__Location!)
        (field_mut 1 include/8237))
      (setfield_ptr(root-init) 17 (global Ppxlib__Location!)
        (field_mut 2 include/8237))
      (setfield_ptr(root-init) 18 (global Ppxlib__Location!)
        (field_mut 3 include/8237))
      (setfield_ptr(root-init) 19 (global Ppxlib__Location!)
        (field_mut 4 include/8237))
      (setfield_ptr(root-init) 20 (global Ppxlib__Location!)
        (field_mut 5 include/8237))
      (setfield_ptr(root-init) 21 (global Ppxlib__Location!)
        (field_mut 6 include/8237))
      (setfield_ptr(root-init) 22 (global Ppxlib__Location!)
        (field_mut 7 include/8237))
      (setfield_ptr(root-init) 23 (global Ppxlib__Location!)
        (field_mut 8 include/8237))
      (let
        (createf/1223 =
           (function loc/1225 fmt/1226
             (apply (field_imm 142 (global Stdlib__format!))
               (function str/1227
                 (apply (field_imm 19 (global Ppxlib__Location!)) loc/1225
                   str/1227 0))
               fmt/1226)))
        (setfield_ptr(root-init) 24 (global Ppxlib__Location!) createf/1223))
      0))
  (let
    (Error/1246 =
       (makeblock 0 (field_imm 15 (global Ppxlib__Location!))
         (field_imm 16 (global Ppxlib__Location!))
         (field_imm 17 (global Ppxlib__Location!))
         (field_imm 18 (global Ppxlib__Location!))
         (field_imm 19 (global Ppxlib__Location!))
         (field_imm 20 (global Ppxlib__Location!))
         (field_imm 21 (global Ppxlib__Location!))
         (field_imm 22 (global Ppxlib__Location!))
         (field_imm 23 (global Ppxlib__Location!))
         (field_imm 24 (global Ppxlib__Location!))))
    (seq
      (setfield_ptr(root-init) 12 (global Ppxlib__Location!)
        (makeblock 0 (field_mut 4 Error/1246) (field_mut 9 Error/1246)
          (field_mut 2 Error/1246) (field_mut 3 Error/1246)
          (field_mut 1 Error/1246) (field_mut 0 Error/1246)
          (field_mut 5 Error/1246) (field_mut 6 Error/1246)
          (field_mut 7 Error/1246) (field_mut 8 Error/1246)))
      (let
        (error_extensionf/1247 =
           (function loc/1249 fmt/1250
             (apply (field_imm 142 (global Stdlib__format!))
               (function str/1251
                 (apply (field_imm 5 Error/1246)
                   (apply (field_imm 4 Error/1246) loc/1249 str/1251 0)))
               fmt/1250)))
        (setfield_ptr(root-init) 13 (global Ppxlib__Location!)
          error_extensionf/1247))
      (let (Error/1644 = (field_imm 4 (global Astlib__Location!)))
        (setfield_ptr(root-init) 14 (global Ppxlib__Location!) Error/1644))
      (let
        (*match*/8241 =
           (apply (field_imm 8 (global Stdlib__printexc!))
             (function param/1693
               (if
                 (== (field_imm 0 param/1693)
                   (field_imm 14 (global Ppxlib__Location!)))
                 (makeblock 0
                   (apply (field_imm 2 Error/1246) (field_imm 1 param/1693)))
                 0))))
        0)
      0)))
