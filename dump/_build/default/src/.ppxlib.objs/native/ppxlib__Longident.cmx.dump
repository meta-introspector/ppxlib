[
  structure_item (src/longident.ml[1,0+0]..[1,0+12])
    Pstr_open Override
    module_expr (src/longident.ml[1,0+6]..[1,0+12])
      Pmod_ident "Import" (src/longident.ml[1,0+6]..[1,0+12])
  structure_item (src/longident.ml[3,14+0]..[25,758+3])
    Pstr_module
    "T" (src/longident.ml[3,14+7]..[3,14+8])
      module_expr (src/longident.ml[3,14+11]..[25,758+3])
        Pmod_structure
        [
          structure_item (src/longident.ml[4,32+2]..[4,32+78])
            Pstr_type Rec
            [
              type_declaration "t" (src/longident.ml[4,32+7]..[4,32+8]) (src/longident.ml[4,32+2]..[4,32+78])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (src/longident.ml[4,32+23]..[4,32+39])
                        "Lident" (src/longident.ml[4,32+23]..[4,32+29])
                        [
                          core_type (src/longident.ml[4,32+33]..[4,32+39])
                            Ptyp_constr "string" (src/longident.ml[4,32+33]..[4,32+39])
                            []
                        ]
                        None
                      (src/longident.ml[4,32+40]..[4,32+60])
                        "Ldot" (src/longident.ml[4,32+42]..[4,32+46])
                        [
                          core_type (src/longident.ml[4,32+50]..[4,32+51])
                            Ptyp_constr "t" (src/longident.ml[4,32+50]..[4,32+51])
                            []
                          core_type (src/longident.ml[4,32+54]..[4,32+60])
                            Ptyp_constr "string" (src/longident.ml[4,32+54]..[4,32+60])
                            []
                        ]
                        None
                      (src/longident.ml[4,32+61]..[4,32+78])
                        "Lapply" (src/longident.ml[4,32+63]..[4,32+69])
                        [
                          core_type (src/longident.ml[4,32+73]..[4,32+74])
                            Ptyp_constr "t" (src/longident.ml[4,32+73]..[4,32+74])
                            []
                          core_type (src/longident.ml[4,32+77]..[4,32+78])
                            Ptyp_constr "t" (src/longident.ml[4,32+77]..[4,32+78])
                            []
                        ]
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/longident.ml[4,32+11]..[4,32+20])
                      Ptyp_constr "longident" (src/longident.ml[4,32+11]..[4,32+20])
                      []
            ]
          structure_item (src/longident.ml[6,112+2]..[6,112+44])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/longident.ml[6,112+6]..[6,112+29]) ghost
                  Ppat_constraint
                  pattern (src/longident.ml[6,112+6]..[6,112+13])
                    Ppat_var "compare" (src/longident.ml[6,112+6]..[6,112+13])
                  core_type (src/longident.ml[6,112+16]..[6,112+29]) ghost
                    Ptyp_poly
                    core_type (src/longident.ml[6,112+16]..[6,112+29])
                      Ptyp_arrow
                      Nolabel
                      core_type (src/longident.ml[6,112+16]..[6,112+17])
                        Ptyp_constr "t" (src/longident.ml[6,112+16]..[6,112+17])
                        []
                      core_type (src/longident.ml[6,112+21]..[6,112+29])
                        Ptyp_arrow
                        Nolabel
                        core_type (src/longident.ml[6,112+21]..[6,112+22])
                          Ptyp_constr "t" (src/longident.ml[6,112+21]..[6,112+22])
                          []
                        core_type (src/longident.ml[6,112+26]..[6,112+29])
                          Ptyp_constr "int" (src/longident.ml[6,112+26]..[6,112+29])
                          []
                expression (src/longident.ml[6,112+6]..[6,112+44]) ghost
                  Pexp_constraint
                  expression (src/longident.ml[6,112+32]..[6,112+44])
                    Pexp_ident "Poly.compare" (src/longident.ml[6,112+32]..[6,112+44])
                  core_type (src/longident.ml[6,112+16]..[6,112+29])
                    Ptyp_arrow
                    Nolabel
                    core_type (src/longident.ml[6,112+16]..[6,112+17])
                      Ptyp_constr "t" (src/longident.ml[6,112+16]..[6,112+17])
                      []
                    core_type (src/longident.ml[6,112+21]..[6,112+29])
                      Ptyp_arrow
                      Nolabel
                      core_type (src/longident.ml[6,112+21]..[6,112+22])
                        Ptyp_constr "t" (src/longident.ml[6,112+21]..[6,112+22])
                        []
                      core_type (src/longident.ml[6,112+26]..[6,112+29])
                        Ptyp_constr "int" (src/longident.ml[6,112+26]..[6,112+29])
                        []
            ]
          structure_item (src/longident.ml[8,158+2]..[10,260+16])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/longident.ml[8,158+6]..[8,158+26])
                  Ppat_var "is_normal_ident_char" (src/longident.ml[8,158+6]..[8,158+26])
                expression (src/longident.ml[8,158+29]..[10,260+16])
                  Pexp_function
                  [
                    <case>
                      pattern (src/longident.ml[9,196+6]..[9,196+55])
                        Ppat_or
                        pattern (src/longident.ml[9,196+6]..[9,196+48])
                          Ppat_or
                          pattern (src/longident.ml[9,196+6]..[9,196+42])
                            Ppat_or
                            pattern (src/longident.ml[9,196+6]..[9,196+29])
                              Ppat_or
                              pattern (src/longident.ml[9,196+6]..[9,196+16])
                                Ppat_interval PConst_char 41..PConst_char 5a
                              pattern (src/longident.ml[9,196+19]..[9,196+29])
                                Ppat_interval PConst_char 61..PConst_char 7a
                            pattern (src/longident.ml[9,196+32]..[9,196+42])
                              Ppat_interval PConst_char 30..PConst_char 39
                          pattern (src/longident.ml[9,196+45]..[9,196+48])
                            Ppat_constant PConst_char 5f
                        pattern (src/longident.ml[9,196+51]..[9,196+55])
                          Ppat_constant PConst_char 27
                      expression (src/longident.ml[9,196+59]..[9,196+63])
                        Pexp_construct "true" (src/longident.ml[9,196+59]..[9,196+63])
                        None
                    <case>
                      pattern (src/longident.ml[10,260+6]..[10,260+7])
                        Ppat_any
                      expression (src/longident.ml[10,260+11]..[10,260+16])
                        Pexp_construct "false" (src/longident.ml[10,260+11]..[10,260+16])
                        None
                  ]
            ]
          structure_item (src/longident.ml[12,278+2]..[14,389+61])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/longident.ml[12,278+6]..[12,278+21])
                  Ppat_var "is_normal_ident" (src/longident.ml[12,278+6]..[12,278+21])
                expression (src/longident.ml[12,278+24]..[14,389+61])
                  Pexp_function
                  [
                    <case>
                      pattern (src/longident.ml[13,311+6]..[13,311+68])
                        Ppat_or
                        pattern (src/longident.ml[13,311+6]..[13,311+61])
                          Ppat_or
                          pattern (src/longident.ml[13,311+6]..[13,311+53])
                            Ppat_or
                            pattern (src/longident.ml[13,311+6]..[13,311+44])
                              Ppat_or
                              pattern (src/longident.ml[13,311+6]..[13,311+36])
                                Ppat_or
                                pattern (src/longident.ml[13,311+6]..[13,311+28])
                                  Ppat_or
                                  pattern (src/longident.ml[13,311+6]..[13,311+20])
                                    Ppat_or
                                    pattern (src/longident.ml[13,311+6]..[13,311+11])
                                      Ppat_constant PConst_string("asr",(src/longident.ml[13,311+7]..[13,311+10]),None)
                                    pattern (src/longident.ml[13,311+14]..[13,311+20])
                                      Ppat_constant PConst_string("land",(src/longident.ml[13,311+15]..[13,311+19]),None)
                                  pattern (src/longident.ml[13,311+23]..[13,311+28])
                                    Ppat_constant PConst_string("lor",(src/longident.ml[13,311+24]..[13,311+27]),None)
                                pattern (src/longident.ml[13,311+31]..[13,311+36])
                                  Ppat_constant PConst_string("lsl",(src/longident.ml[13,311+32]..[13,311+35]),None)
                              pattern (src/longident.ml[13,311+39]..[13,311+44])
                                Ppat_constant PConst_string("lsr",(src/longident.ml[13,311+40]..[13,311+43]),None)
                            pattern (src/longident.ml[13,311+47]..[13,311+53])
                              Ppat_constant PConst_string("lxor",(src/longident.ml[13,311+48]..[13,311+52]),None)
                          pattern (src/longident.ml[13,311+56]..[13,311+61])
                            Ppat_constant PConst_string("mod",(src/longident.ml[13,311+57]..[13,311+60]),None)
                        pattern (src/longident.ml[13,311+64]..[13,311+68])
                          Ppat_constant PConst_string("or",(src/longident.ml[13,311+65]..[13,311+67]),None)
                      expression (src/longident.ml[13,311+72]..[13,311+77])
                        Pexp_construct "false" (src/longident.ml[13,311+72]..[13,311+77])
                        None
                    <case>
                      pattern (src/longident.ml[14,389+6]..[14,389+12])
                        Ppat_var "string" (src/longident.ml[14,389+6]..[14,389+12])
                      expression (src/longident.ml[14,389+16]..[14,389+61])
                        Pexp_apply
                        expression (src/longident.ml[14,389+16]..[14,389+30])
                          Pexp_ident "String.for_all" (src/longident.ml[14,389+16]..[14,389+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/longident.ml[14,389+31]..[14,389+37])
                              Pexp_ident "string" (src/longident.ml[14,389+31]..[14,389+37])
                          <arg>
                          Labelled "f"
                            expression (src/longident.ml[14,389+41]..[14,389+61])
                              Pexp_ident "is_normal_ident_char" (src/longident.ml[14,389+41]..[14,389+61])
                        ]
                  ]
            ]
          structure_item (src/longident.ml[16,452+2]..[17,478+67])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/longident.ml[16,452+6]..[16,452+16])
                  Ppat_var "short_name" (src/longident.ml[16,452+6]..[16,452+16])
                expression (src/longident.ml[16,452+17]..[17,478+67]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/longident.ml[16,452+17]..[16,452+23])
                    Ppat_var "string" (src/longident.ml[16,452+17]..[16,452+23])
                  expression (src/longident.ml[17,478+4]..[17,478+67])
                    Pexp_ifthenelse
                    expression (src/longident.ml[17,478+7]..[17,478+29])
                      Pexp_apply
                      expression (src/longident.ml[17,478+7]..[17,478+22])
                        Pexp_ident "is_normal_ident" (src/longident.ml[17,478+7]..[17,478+22])
                      [
                        <arg>
                        Nolabel
                          expression (src/longident.ml[17,478+23]..[17,478+29])
                            Pexp_ident "string" (src/longident.ml[17,478+23]..[17,478+29])
                      ]
                    expression (src/longident.ml[17,478+35]..[17,478+41])
                      Pexp_ident "string" (src/longident.ml[17,478+35]..[17,478+41])
                    Some
                      expression (src/longident.ml[17,478+47]..[17,478+67])
                        Pexp_apply
                        expression (src/longident.ml[17,478+52]..[17,478+53])
                          Pexp_ident "^" (src/longident.ml[17,478+52]..[17,478+53])
                        [
                          <arg>
                          Nolabel
                            expression (src/longident.ml[17,478+47]..[17,478+51])
                              Pexp_constant PConst_string("( ",(src/longident.ml[17,478+48]..[17,478+50]),None)
                          <arg>
                          Nolabel
                            expression (src/longident.ml[17,478+54]..[17,478+67])
                              Pexp_apply
                              expression (src/longident.ml[17,478+61]..[17,478+62])
                                Pexp_ident "^" (src/longident.ml[17,478+61]..[17,478+62])
                              [
                                <arg>
                                Nolabel
                                  expression (src/longident.ml[17,478+54]..[17,478+60])
                                    Pexp_ident "string" (src/longident.ml[17,478+54]..[17,478+60])
                                <arg>
                                Nolabel
                                  expression (src/longident.ml[17,478+63]..[17,478+67])
                                    Pexp_constant PConst_string(" )",(src/longident.ml[17,478+64]..[17,478+66]),None)
                              ]
                        ]
            ]
          structure_item (src/longident.ml[19,547+2]..[22,653+64])
            Pstr_value Rec
            [
              <def>
                pattern (src/longident.ml[19,547+10]..[19,547+14])
                  Ppat_var "name" (src/longident.ml[19,547+10]..[19,547+14])
                expression (src/longident.ml[19,547+17]..[22,653+64])
                  Pexp_function
                  [
                    <case>
                      pattern (src/longident.ml[20,573+6]..[20,573+14])
                        Ppat_construct "Lident" (src/longident.ml[20,573+6]..[20,573+12])
                        Some
                          pattern (src/longident.ml[20,573+13]..[20,573+14])
                            Ppat_var "s" (src/longident.ml[20,573+13]..[20,573+14])
                      expression (src/longident.ml[20,573+18]..[20,573+30])
                        Pexp_apply
                        expression (src/longident.ml[20,573+18]..[20,573+28])
                          Pexp_ident "short_name" (src/longident.ml[20,573+18]..[20,573+28])
                        [
                          <arg>
                          Nolabel
                            expression (src/longident.ml[20,573+29]..[20,573+30])
                              Pexp_ident "s" (src/longident.ml[20,573+29]..[20,573+30])
                        ]
                    <case>
                      pattern (src/longident.ml[21,604+6]..[21,604+17])
                        Ppat_construct "Ldot" (src/longident.ml[21,604+6]..[21,604+10])
                        Some
                          pattern (src/longident.ml[21,604+11]..[21,604+17])
                            Ppat_tuple
                            [
                              pattern (src/longident.ml[21,604+12]..[21,604+13])
                                Ppat_var "a" (src/longident.ml[21,604+12]..[21,604+13])
                              pattern (src/longident.ml[21,604+15]..[21,604+16])
                                Ppat_var "b" (src/longident.ml[21,604+15]..[21,604+16])
                            ]
                      expression (src/longident.ml[21,604+21]..[21,604+48])
                        Pexp_apply
                        expression (src/longident.ml[21,604+28]..[21,604+29])
                          Pexp_ident "^" (src/longident.ml[21,604+28]..[21,604+29])
                        [
                          <arg>
                          Nolabel
                            expression (src/longident.ml[21,604+21]..[21,604+27])
                              Pexp_apply
                              expression (src/longident.ml[21,604+21]..[21,604+25])
                                Pexp_ident "name" (src/longident.ml[21,604+21]..[21,604+25])
                              [
                                <arg>
                                Nolabel
                                  expression (src/longident.ml[21,604+26]..[21,604+27])
                                    Pexp_ident "a" (src/longident.ml[21,604+26]..[21,604+27])
                              ]
                          <arg>
                          Nolabel
                            expression (src/longident.ml[21,604+30]..[21,604+48])
                              Pexp_apply
                              expression (src/longident.ml[21,604+34]..[21,604+35])
                                Pexp_ident "^" (src/longident.ml[21,604+34]..[21,604+35])
                              [
                                <arg>
                                Nolabel
                                  expression (src/longident.ml[21,604+30]..[21,604+33])
                                    Pexp_constant PConst_string(".",(src/longident.ml[21,604+31]..[21,604+32]),None)
                                <arg>
                                Nolabel
                                  expression (src/longident.ml[21,604+36]..[21,604+48])
                                    Pexp_apply
                                    expression (src/longident.ml[21,604+36]..[21,604+46])
                                      Pexp_ident "short_name" (src/longident.ml[21,604+36]..[21,604+46])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/longident.ml[21,604+47]..[21,604+48])
                                          Pexp_ident "b" (src/longident.ml[21,604+47]..[21,604+48])
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/longident.ml[22,653+6]..[22,653+19])
                        Ppat_construct "Lapply" (src/longident.ml[22,653+6]..[22,653+12])
                        Some
                          pattern (src/longident.ml[22,653+13]..[22,653+19])
                            Ppat_tuple
                            [
                              pattern (src/longident.ml[22,653+14]..[22,653+15])
                                Ppat_var "a" (src/longident.ml[22,653+14]..[22,653+15])
                              pattern (src/longident.ml[22,653+17]..[22,653+18])
                                Ppat_var "b" (src/longident.ml[22,653+17]..[22,653+18])
                            ]
                      expression (src/longident.ml[22,653+23]..[22,653+64])
                        Pexp_apply
                        expression (src/longident.ml[22,653+23]..[22,653+37])
                          Pexp_ident "Printf.sprintf" (src/longident.ml[22,653+23]..[22,653+37])
                        [
                          <arg>
                          Nolabel
                            expression (src/longident.ml[22,653+38]..[22,653+46])
                              Pexp_constant PConst_string("%s(%s)",(src/longident.ml[22,653+39]..[22,653+45]),None)
                          <arg>
                          Nolabel
                            expression (src/longident.ml[22,653+47]..[22,653+55])
                              Pexp_apply
                              expression (src/longident.ml[22,653+48]..[22,653+52])
                                Pexp_ident "name" (src/longident.ml[22,653+48]..[22,653+52])
                              [
                                <arg>
                                Nolabel
                                  expression (src/longident.ml[22,653+53]..[22,653+54])
                                    Pexp_ident "a" (src/longident.ml[22,653+53]..[22,653+54])
                              ]
                          <arg>
                          Nolabel
                            expression (src/longident.ml[22,653+56]..[22,653+64])
                              Pexp_apply
                              expression (src/longident.ml[22,653+57]..[22,653+61])
                                Pexp_ident "name" (src/longident.ml[22,653+57]..[22,653+61])
                              [
                                <arg>
                                Nolabel
                                  expression (src/longident.ml[22,653+62]..[22,653+63])
                                    Pexp_ident "b" (src/longident.ml[22,653+62]..[22,653+63])
                              ]
                        ]
                  ]
            ]
          structure_item (src/longident.ml[24,719+2]..[24,719+38])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/longident.ml[24,719+6]..[24,719+15])
                  Ppat_var "sexp_of_t" (src/longident.ml[24,719+6]..[24,719+15])
                expression (src/longident.ml[24,719+16]..[24,719+38]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/longident.ml[24,719+16]..[24,719+17])
                    Ppat_var "t" (src/longident.ml[24,719+16]..[24,719+17])
                  expression (src/longident.ml[24,719+20]..[24,719+38])
                    Pexp_construct "Sexp.Atom" (src/longident.ml[24,719+20]..[24,719+29])
                    Some
                      expression (src/longident.ml[24,719+30]..[24,719+38])
                        Pexp_apply
                        expression (src/longident.ml[24,719+31]..[24,719+35])
                          Pexp_ident "name" (src/longident.ml[24,719+31]..[24,719+35])
                        [
                          <arg>
                          Nolabel
                            expression (src/longident.ml[24,719+36]..[24,719+37])
                              Pexp_ident "t" (src/longident.ml[24,719+36]..[24,719+37])
                        ]
            ]
        ]
  structure_item (src/longident.ml[27,763+0]..[27,763+9])
    Pstr_include    module_expr (src/longident.ml[27,763+8]..[27,763+9])
      Pmod_ident "T" (src/longident.ml[27,763+8]..[27,763+9])
  structure_item (src/longident.ml[29,774+0]..[32,871+59])
    Pstr_value Rec
    [
      <def>
        pattern (src/longident.ml[29,774+8]..[29,774+12])
          Ppat_var "flat" (src/longident.ml[29,774+8]..[29,774+12])
        expression (src/longident.ml[29,774+13]..[32,871+59]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/longident.ml[29,774+13]..[29,774+17])
            Ppat_var "accu" (src/longident.ml[29,774+13]..[29,774+17])
          expression (src/longident.ml[29,774+20]..[32,871+59])
            Pexp_function
            [
              <case>
                pattern (src/longident.ml[30,803+4]..[30,803+12])
                  Ppat_construct "Lident" (src/longident.ml[30,803+4]..[30,803+10])
                  Some
                    pattern (src/longident.ml[30,803+11]..[30,803+12])
                      Ppat_var "s" (src/longident.ml[30,803+11]..[30,803+12])
                expression (src/longident.ml[30,803+16]..[30,803+25])
                  Pexp_construct "::" (src/longident.ml[30,803+18]..[30,803+20])
                  Some
                    expression (src/longident.ml[30,803+16]..[30,803+25]) ghost
                      Pexp_tuple
                      [
                        expression (src/longident.ml[30,803+16]..[30,803+17])
                          Pexp_ident "s" (src/longident.ml[30,803+16]..[30,803+17])
                        expression (src/longident.ml[30,803+21]..[30,803+25])
                          Pexp_ident "accu" (src/longident.ml[30,803+21]..[30,803+25])
                      ]
              <case>
                pattern (src/longident.ml[31,829+4]..[31,829+17])
                  Ppat_construct "Ldot" (src/longident.ml[31,829+4]..[31,829+8])
                  Some
                    pattern (src/longident.ml[31,829+9]..[31,829+17])
                      Ppat_tuple
                      [
                        pattern (src/longident.ml[31,829+10]..[31,829+13])
                          Ppat_var "lid" (src/longident.ml[31,829+10]..[31,829+13])
                        pattern (src/longident.ml[31,829+15]..[31,829+16])
                          Ppat_var "s" (src/longident.ml[31,829+15]..[31,829+16])
                      ]
                expression (src/longident.ml[31,829+21]..[31,829+41])
                  Pexp_apply
                  expression (src/longident.ml[31,829+21]..[31,829+25])
                    Pexp_ident "flat" (src/longident.ml[31,829+21]..[31,829+25])
                  [
                    <arg>
                    Nolabel
                      expression (src/longident.ml[31,829+26]..[31,829+37])
                        Pexp_construct "::" (src/longident.ml[31,829+29]..[31,829+31])
                        Some
                          expression (src/longident.ml[31,829+27]..[31,829+36]) ghost
                            Pexp_tuple
                            [
                              expression (src/longident.ml[31,829+27]..[31,829+28])
                                Pexp_ident "s" (src/longident.ml[31,829+27]..[31,829+28])
                              expression (src/longident.ml[31,829+32]..[31,829+36])
                                Pexp_ident "accu" (src/longident.ml[31,829+32]..[31,829+36])
                            ]
                    <arg>
                    Nolabel
                      expression (src/longident.ml[31,829+38]..[31,829+41])
                        Pexp_ident "lid" (src/longident.ml[31,829+38]..[31,829+41])
                  ]
              <case>
                pattern (src/longident.ml[32,871+4]..[32,871+17])
                  Ppat_construct "Lapply" (src/longident.ml[32,871+4]..[32,871+10])
                  Some
                    pattern (src/longident.ml[32,871+11]..[32,871+17])
                      Ppat_tuple
                      [
                        pattern (src/longident.ml[32,871+12]..[32,871+13])
                          Ppat_any
                        pattern (src/longident.ml[32,871+15]..[32,871+16])
                          Ppat_any
                      ]
                expression (src/longident.ml[32,871+21]..[32,871+59])
                  Pexp_apply
                  expression (src/longident.ml[32,871+21]..[32,871+32])
                    Pexp_ident "invalid_arg" (src/longident.ml[32,871+21]..[32,871+32])
                  [
                    <arg>
                    Nolabel
                      expression (src/longident.ml[32,871+33]..[32,871+59])
                        Pexp_constant PConst_string("Ppxlib.Longident.flatten",(src/longident.ml[32,871+34]..[32,871+58]),None)
                  ]
            ]
    ]
  structure_item (src/longident.ml[34,932+0]..[34,932+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/longident.ml[34,932+4]..[34,932+15])
          Ppat_var "flatten_exn" (src/longident.ml[34,932+4]..[34,932+15])
        expression (src/longident.ml[34,932+16]..[34,932+33]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/longident.ml[34,932+16]..[34,932+19])
            Ppat_var "lid" (src/longident.ml[34,932+16]..[34,932+19])
          expression (src/longident.ml[34,932+22]..[34,932+33])
            Pexp_apply
            expression (src/longident.ml[34,932+22]..[34,932+26])
              Pexp_ident "flat" (src/longident.ml[34,932+22]..[34,932+26])
            [
              <arg>
              Nolabel
                expression (src/longident.ml[34,932+27]..[34,932+29])
                  Pexp_construct "[]" (src/longident.ml[34,932+27]..[34,932+29])
                  None
              <arg>
              Nolabel
                expression (src/longident.ml[34,932+30]..[34,932+33])
                  Pexp_ident "lid" (src/longident.ml[34,932+30]..[34,932+33])
            ]
    ]
  structure_item (src/longident.ml[36,967+0]..[39,1030+59])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/longident.ml[36,967+4]..[36,967+12])
          Ppat_var "last_exn" (src/longident.ml[36,967+4]..[36,967+12])
        expression (src/longident.ml[36,967+15]..[39,1030+59])
          Pexp_function
          [
            <case>
              pattern (src/longident.ml[37,991+4]..[37,991+12])
                Ppat_construct "Lident" (src/longident.ml[37,991+4]..[37,991+10])
                Some
                  pattern (src/longident.ml[37,991+11]..[37,991+12])
                    Ppat_var "s" (src/longident.ml[37,991+11]..[37,991+12])
              expression (src/longident.ml[37,991+16]..[37,991+17])
                Pexp_ident "s" (src/longident.ml[37,991+16]..[37,991+17])
            <case>
              pattern (src/longident.ml[38,1009+4]..[38,1009+15])
                Ppat_construct "Ldot" (src/longident.ml[38,1009+4]..[38,1009+8])
                Some
                  pattern (src/longident.ml[38,1009+9]..[38,1009+15])
                    Ppat_tuple
                    [
                      pattern (src/longident.ml[38,1009+10]..[38,1009+11])
                        Ppat_any
                      pattern (src/longident.ml[38,1009+13]..[38,1009+14])
                        Ppat_var "s" (src/longident.ml[38,1009+13]..[38,1009+14])
                    ]
              expression (src/longident.ml[38,1009+19]..[38,1009+20])
                Pexp_ident "s" (src/longident.ml[38,1009+19]..[38,1009+20])
            <case>
              pattern (src/longident.ml[39,1030+4]..[39,1030+17])
                Ppat_construct "Lapply" (src/longident.ml[39,1030+4]..[39,1030+10])
                Some
                  pattern (src/longident.ml[39,1030+11]..[39,1030+17])
                    Ppat_tuple
                    [
                      pattern (src/longident.ml[39,1030+12]..[39,1030+13])
                        Ppat_any
                      pattern (src/longident.ml[39,1030+15]..[39,1030+16])
                        Ppat_any
                    ]
              expression (src/longident.ml[39,1030+21]..[39,1030+59])
                Pexp_apply
                expression (src/longident.ml[39,1030+21]..[39,1030+32])
                  Pexp_ident "invalid_arg" (src/longident.ml[39,1030+21]..[39,1030+32])
                [
                  <arg>
                  Nolabel
                    expression (src/longident.ml[39,1030+33]..[39,1030+59])
                      Pexp_constant PConst_string("Ppxlib.Longident.flatten",(src/longident.ml[39,1030+34]..[39,1030+58]),None)
                ]
          ]
    ]
  structure_item (src/longident.ml[41,1091+0]..[41,1091+78])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/longident.ml[41,1091+4]..[41,1091+13])
          Ppat_var "unflatten" (src/longident.ml[41,1091+4]..[41,1091+13])
        expression (src/longident.ml[41,1091+14]..[41,1091+78]) ghost
          Pexp_fun
          Labelled "init"
          None
          pattern (src/longident.ml[41,1091+15]..[41,1091+19])
            Ppat_var "init" (src/longident.ml[41,1091+15]..[41,1091+19])
          expression (src/longident.ml[41,1091+20]..[41,1091+78]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/longident.ml[41,1091+20]..[41,1091+21])
              Ppat_var "l" (src/longident.ml[41,1091+20]..[41,1091+21])
            expression (src/longident.ml[41,1091+24]..[41,1091+78])
              Pexp_apply
              expression (src/longident.ml[41,1091+24]..[41,1091+38])
                Pexp_ident "List.fold_left" (src/longident.ml[41,1091+24]..[41,1091+38])
              [
                <arg>
                Nolabel
                  expression (src/longident.ml[41,1091+39]..[41,1091+40])
                    Pexp_ident "l" (src/longident.ml[41,1091+39]..[41,1091+40])
                <arg>
                Labelled "init"
                  expression (src/longident.ml[41,1091+42]..[41,1091+46])
                    Pexp_ident "init" (src/longident.ml[41,1091+42]..[41,1091+46])
                <arg>
                Labelled "f"
                  expression (src/longident.ml[41,1091+50]..[41,1091+78])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/longident.ml[41,1091+55]..[41,1091+58])
                      Ppat_var "acc" (src/longident.ml[41,1091+55]..[41,1091+58])
                    expression (src/longident.ml[41,1091+59]..[41,1091+77]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/longident.ml[41,1091+59]..[41,1091+60])
                        Ppat_var "s" (src/longident.ml[41,1091+59]..[41,1091+60])
                      expression (src/longident.ml[41,1091+64]..[41,1091+77])
                        Pexp_construct "Ldot" (src/longident.ml[41,1091+64]..[41,1091+68])
                        Some
                          expression (src/longident.ml[41,1091+69]..[41,1091+77])
                            Pexp_tuple
                            [
                              expression (src/longident.ml[41,1091+70]..[41,1091+73])
                                Pexp_ident "acc" (src/longident.ml[41,1091+70]..[41,1091+73])
                              expression (src/longident.ml[41,1091+75]..[41,1091+76])
                                Pexp_ident "s" (src/longident.ml[41,1091+75]..[41,1091+76])
                            ]
              ]
    ]
  structure_item (src/longident.ml[44,1235+0]..[47,1324+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/longident.ml[44,1235+4]..[44,1235+16])
          Ppat_var "parse_simple" (src/longident.ml[44,1235+4]..[44,1235+16])
        expression (src/longident.ml[44,1235+17]..[47,1324+42]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/longident.ml[44,1235+17]..[44,1235+18])
            Ppat_var "s" (src/longident.ml[44,1235+17]..[44,1235+18])
          expression (src/longident.ml[45,1256+2]..[47,1324+42])
            Pexp_match
            expression (src/longident.ml[45,1256+8]..[45,1256+39])
              Pexp_apply
              expression (src/longident.ml[45,1256+8]..[45,1256+28])
                Pexp_ident "String.split_on_char" (src/longident.ml[45,1256+8]..[45,1256+28])
              [
                <arg>
                Nolabel
                  expression (src/longident.ml[45,1256+29]..[45,1256+30])
                    Pexp_ident "s" (src/longident.ml[45,1256+29]..[45,1256+30])
                <arg>
                Labelled "sep"
                  expression (src/longident.ml[45,1256+36]..[45,1256+39])
                    Pexp_constant PConst_char 2e
              ]
            [
              <case>
                pattern (src/longident.ml[46,1301+4]..[46,1301+6])
                  Ppat_construct "[]" (src/longident.ml[46,1301+4]..[46,1301+6])
                  None
                expression (src/longident.ml[46,1301+10]..[46,1301+22])
                  Pexp_assert
                  expression (src/longident.ml[46,1301+17]..[46,1301+22])
                    Pexp_construct "false" (src/longident.ml[46,1301+17]..[46,1301+22])
                    None
              <case>
                pattern (src/longident.ml[47,1324+4]..[47,1324+10])
                  Ppat_construct "::" (src/longident.ml[47,1324+6]..[47,1324+8])
                  Some
                    pattern (src/longident.ml[47,1324+4]..[47,1324+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/longident.ml[47,1324+4]..[47,1324+5])
                          Ppat_var "s" (src/longident.ml[47,1324+4]..[47,1324+5])
                        pattern (src/longident.ml[47,1324+9]..[47,1324+10])
                          Ppat_var "l" (src/longident.ml[47,1324+9]..[47,1324+10])
                      ]
                expression (src/longident.ml[47,1324+14]..[47,1324+42])
                  Pexp_apply
                  expression (src/longident.ml[47,1324+14]..[47,1324+23])
                    Pexp_ident "unflatten" (src/longident.ml[47,1324+14]..[47,1324+23])
                  [
                    <arg>
                    Labelled "init"
                      expression (src/longident.ml[47,1324+30]..[47,1324+40])
                        Pexp_construct "Lident" (src/longident.ml[47,1324+31]..[47,1324+37])
                        Some
                          expression (src/longident.ml[47,1324+38]..[47,1324+39])
                            Pexp_ident "s" (src/longident.ml[47,1324+38]..[47,1324+39])
                    <arg>
                    Nolabel
                      expression (src/longident.ml[47,1324+41]..[47,1324+42])
                        Pexp_ident "l" (src/longident.ml[47,1324+41]..[47,1324+42])
                  ]
            ]
    ]
  structure_item (src/longident.ml[50,1416+0]..[69,2111+63])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/longident.ml[50,1416+4]..[50,1416+9])
          Ppat_var "parse" (src/longident.ml[50,1416+4]..[50,1416+9])
        expression (src/longident.ml[50,1416+10]..[69,2111+63]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/longident.ml[50,1416+10]..[50,1416+11])
            Ppat_var "s" (src/longident.ml[50,1416+10]..[50,1416+11])
          expression (src/longident.ml[51,1430+2]..[69,2111+63])
            Pexp_let Nonrec
            [
              <def>
                pattern (src/longident.ml[51,1430+6]..[51,1430+13])
                  Ppat_var "invalid" (src/longident.ml[51,1430+6]..[51,1430+13])
                expression (src/longident.ml[51,1430+14]..[52,1449+63]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/longident.ml[51,1430+14]..[51,1430+16])
                    Ppat_construct "()" (src/longident.ml[51,1430+14]..[51,1430+16])
                    None
                  expression (src/longident.ml[52,1449+4]..[52,1449+63])
                    Pexp_apply
                    expression (src/longident.ml[52,1449+4]..[52,1449+15])
                      Pexp_ident "invalid_arg" (src/longident.ml[52,1449+4]..[52,1449+15])
                    [
                      <arg>
                      Nolabel
                        expression (src/longident.ml[52,1449+16]..[52,1449+63])
                          Pexp_apply
                          expression (src/longident.ml[52,1449+17]..[52,1449+31])
                            Pexp_ident "Printf.sprintf" (src/longident.ml[52,1449+17]..[52,1449+31])
                          [
                            <arg>
                            Nolabel
                              expression (src/longident.ml[52,1449+32]..[52,1449+60])
                                Pexp_constant PConst_string("Ppxlib.Longident.parse: %S",(src/longident.ml[52,1449+33]..[52,1449+59]),None)
                            <arg>
                            Nolabel
                              expression (src/longident.ml[52,1449+61]..[52,1449+62])
                                Pexp_ident "s" (src/longident.ml[52,1449+61]..[52,1449+62])
                          ]
                    ]
            ]
            expression (src/longident.ml[54,1518+2]..[69,2111+63])
              Pexp_match
              expression (src/longident.ml[54,1518+8]..[54,1518+57])
                Pexp_tuple
                [
                  expression (src/longident.ml[54,1518+9]..[54,1518+31])
                    Pexp_apply
                    expression (src/longident.ml[54,1518+9]..[54,1518+25])
                      Pexp_ident "String.index_opt" (src/longident.ml[54,1518+9]..[54,1518+25])
                    [
                      <arg>
                      Nolabel
                        expression (src/longident.ml[54,1518+26]..[54,1518+27])
                          Pexp_ident "s" (src/longident.ml[54,1518+26]..[54,1518+27])
                      <arg>
                      Nolabel
                        expression (src/longident.ml[54,1518+28]..[54,1518+31])
                          Pexp_constant PConst_char 28
                    ]
                  expression (src/longident.ml[54,1518+33]..[54,1518+56])
                    Pexp_apply
                    expression (src/longident.ml[54,1518+33]..[54,1518+50])
                      Pexp_ident "String.rindex_opt" (src/longident.ml[54,1518+33]..[54,1518+50])
                    [
                      <arg>
                      Nolabel
                        expression (src/longident.ml[54,1518+51]..[54,1518+52])
                          Pexp_ident "s" (src/longident.ml[54,1518+51]..[54,1518+52])
                      <arg>
                      Nolabel
                        expression (src/longident.ml[54,1518+53]..[54,1518+56])
                          Pexp_constant PConst_char 29
                    ]
                ]
              [
                <case>
                  pattern (src/longident.ml[55,1581+4]..[55,1581+14])
                    Ppat_tuple
                    [
                      pattern (src/longident.ml[55,1581+4]..[55,1581+8])
                        Ppat_construct "None" (src/longident.ml[55,1581+4]..[55,1581+8])
                        None
                      pattern (src/longident.ml[55,1581+10]..[55,1581+14])
                        Ppat_construct "None" (src/longident.ml[55,1581+10]..[55,1581+14])
                        None
                    ]
                  expression (src/longident.ml[55,1581+18]..[55,1581+32])
                    Pexp_apply
                    expression (src/longident.ml[55,1581+18]..[55,1581+30])
                      Pexp_ident "parse_simple" (src/longident.ml[55,1581+18]..[55,1581+30])
                    [
                      <arg>
                      Nolabel
                        expression (src/longident.ml[55,1581+31]..[55,1581+32])
                          Pexp_ident "s" (src/longident.ml[55,1581+31]..[55,1581+32])
                    ]
                <case>
                  pattern (src/longident.ml[56,1614+4]..[56,1614+21])
                    Ppat_or
                    pattern (src/longident.ml[56,1614+4]..[56,1614+11])
                      Ppat_tuple
                      [
                        pattern (src/longident.ml[56,1614+4]..[56,1614+8])
                          Ppat_construct "None" (src/longident.ml[56,1614+4]..[56,1614+8])
                          None
                        pattern (src/longident.ml[56,1614+10]..[56,1614+11])
                          Ppat_any
                      ]
                    pattern (src/longident.ml[56,1614+14]..[56,1614+21])
                      Ppat_tuple
                      [
                        pattern (src/longident.ml[56,1614+14]..[56,1614+15])
                          Ppat_any
                        pattern (src/longident.ml[56,1614+17]..[56,1614+21])
                          Ppat_construct "None" (src/longident.ml[56,1614+17]..[56,1614+21])
                          None
                      ]
                  expression (src/longident.ml[56,1614+25]..[56,1614+35])
                    Pexp_apply
                    expression (src/longident.ml[56,1614+25]..[56,1614+32])
                      Pexp_ident "invalid" (src/longident.ml[56,1614+25]..[56,1614+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/longident.ml[56,1614+33]..[56,1614+35])
                          Pexp_construct "()" (src/longident.ml[56,1614+33]..[56,1614+35])
                          None
                    ]
                <case>
                  pattern (src/longident.ml[57,1650+4]..[57,1650+18])
                    Ppat_tuple
                    [
                      pattern (src/longident.ml[57,1650+4]..[57,1650+10])
                        Ppat_construct "Some" (src/longident.ml[57,1650+4]..[57,1650+8])
                        Some
                          pattern (src/longident.ml[57,1650+9]..[57,1650+10])
                            Ppat_var "l" (src/longident.ml[57,1650+9]..[57,1650+10])
                      pattern (src/longident.ml[57,1650+12]..[57,1650+18])
                        Ppat_construct "Some" (src/longident.ml[57,1650+12]..[57,1650+16])
                        Some
                          pattern (src/longident.ml[57,1650+17]..[57,1650+18])
                            Ppat_var "r" (src/longident.ml[57,1650+17]..[57,1650+18])
                    ]
                  expression (src/longident.ml[57,1650+22]..[69,2111+63])
                    Pexp_sequence
                    expression (src/longident.ml[58,1674+6]..[58,1674+55])
                      Pexp_ifthenelse
                      expression (src/longident.ml[58,1674+9]..[58,1674+39])
                        Pexp_open Fresh
                        module_expr (src/longident.ml[58,1674+9]..[58,1674+12])
                          Pmod_ident "Int" (src/longident.ml[58,1674+9]..[58,1674+12])
                        expression (src/longident.ml[58,1674+14]..[58,1674+38])
                          Pexp_apply
                          expression (src/longident.ml[58,1674+16]..[58,1674+18])
                            Pexp_ident "<>" (src/longident.ml[58,1674+16]..[58,1674+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/longident.ml[58,1674+14]..[58,1674+15])
                                Pexp_ident "r" (src/longident.ml[58,1674+14]..[58,1674+15])
                            <arg>
                            Nolabel
                              expression (src/longident.ml[58,1674+19]..[58,1674+38])
                                Pexp_apply
                                expression (src/longident.ml[58,1674+35]..[58,1674+36])
                                  Pexp_ident "-" (src/longident.ml[58,1674+35]..[58,1674+36])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/longident.ml[58,1674+19]..[58,1674+34])
                                      Pexp_apply
                                      expression (src/longident.ml[58,1674+19]..[58,1674+32])
                                        Pexp_ident "String.length" (src/longident.ml[58,1674+19]..[58,1674+32])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/longident.ml[58,1674+33]..[58,1674+34])
                                            Pexp_ident "s" (src/longident.ml[58,1674+33]..[58,1674+34])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (src/longident.ml[58,1674+37]..[58,1674+38])
                                      Pexp_constant PConst_int (1,None)
                                ]
                          ]
                      expression (src/longident.ml[58,1674+45]..[58,1674+55])
                        Pexp_apply
                        expression (src/longident.ml[58,1674+45]..[58,1674+52])
                          Pexp_ident "invalid" (src/longident.ml[58,1674+45]..[58,1674+52])
                        [
                          <arg>
                          Nolabel
                            expression (src/longident.ml[58,1674+53]..[58,1674+55])
                              Pexp_construct "()" (src/longident.ml[58,1674+53]..[58,1674+55])
                              None
                        ]
                      None
                    expression (src/longident.ml[59,1731+6]..[69,2111+62])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/longident.ml[59,1731+10]..[59,1731+15])
                            Ppat_var "group" (src/longident.ml[59,1731+10]..[59,1731+15])
                          expression (src/longident.ml[60,1749+8]..[61,1786+69])
                            Pexp_ifthenelse
                            expression (src/longident.ml[60,1749+11]..[60,1749+26])
                              Pexp_open Fresh
                              module_expr (src/longident.ml[60,1749+11]..[60,1749+14])
                                Pmod_ident "Int" (src/longident.ml[60,1749+11]..[60,1749+14])
                              expression (src/longident.ml[60,1749+16]..[60,1749+25])
                                Pexp_apply
                                expression (src/longident.ml[60,1749+18]..[60,1749+19])
                                  Pexp_ident "=" (src/longident.ml[60,1749+18]..[60,1749+19])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/longident.ml[60,1749+16]..[60,1749+17])
                                      Pexp_ident "r" (src/longident.ml[60,1749+16]..[60,1749+17])
                                  <arg>
                                  Nolabel
                                    expression (src/longident.ml[60,1749+20]..[60,1749+25])
                                      Pexp_apply
                                      expression (src/longident.ml[60,1749+22]..[60,1749+23])
                                        Pexp_ident "+" (src/longident.ml[60,1749+22]..[60,1749+23])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/longident.ml[60,1749+20]..[60,1749+21])
                                            Pexp_ident "l" (src/longident.ml[60,1749+20]..[60,1749+21])
                                        <arg>
                                        Nolabel
                                          expression (src/longident.ml[60,1749+24]..[60,1749+25])
                                            Pexp_constant PConst_int (1,None)
                                      ]
                                ]
                            expression (src/longident.ml[60,1749+32]..[60,1749+36])
                              Pexp_constant PConst_string("()",(src/longident.ml[60,1749+33]..[60,1749+35]),None)
                            Some
                              expression (src/longident.ml[61,1786+13]..[61,1786+69])
                                Pexp_apply
                                expression (src/longident.ml[61,1786+13]..[61,1786+24])
                                  Pexp_ident "String.trim" (src/longident.ml[61,1786+13]..[61,1786+24])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/longident.ml[61,1786+25]..[61,1786+69])
                                      Pexp_apply
                                      expression (src/longident.ml[61,1786+26]..[61,1786+36])
                                        Pexp_ident "String.sub" (src/longident.ml[61,1786+26]..[61,1786+36])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/longident.ml[61,1786+37]..[61,1786+38])
                                            Pexp_ident "s" (src/longident.ml[61,1786+37]..[61,1786+38])
                                        <arg>
                                        Labelled "pos"
                                          expression (src/longident.ml[61,1786+44]..[61,1786+51])
                                            Pexp_apply
                                            expression (src/longident.ml[61,1786+47]..[61,1786+48])
                                              Pexp_ident "+" (src/longident.ml[61,1786+47]..[61,1786+48])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/longident.ml[61,1786+45]..[61,1786+46])
                                                  Pexp_ident "l" (src/longident.ml[61,1786+45]..[61,1786+46])
                                              <arg>
                                              Nolabel
                                                expression (src/longident.ml[61,1786+49]..[61,1786+50])
                                                  Pexp_constant PConst_int (1,None)
                                            ]
                                        <arg>
                                        Labelled "len"
                                          expression (src/longident.ml[61,1786+57]..[61,1786+68])
                                            Pexp_apply
                                            expression (src/longident.ml[61,1786+64]..[61,1786+65])
                                              Pexp_ident "-" (src/longident.ml[61,1786+64]..[61,1786+65])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/longident.ml[61,1786+58]..[61,1786+63])
                                                  Pexp_apply
                                                  expression (src/longident.ml[61,1786+60]..[61,1786+61])
                                                    Pexp_ident "-" (src/longident.ml[61,1786+60]..[61,1786+61])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/longident.ml[61,1786+58]..[61,1786+59])
                                                        Pexp_ident "r" (src/longident.ml[61,1786+58]..[61,1786+59])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/longident.ml[61,1786+62]..[61,1786+63])
                                                        Pexp_ident "l" (src/longident.ml[61,1786+62]..[61,1786+63])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (src/longident.ml[61,1786+66]..[61,1786+67])
                                                  Pexp_constant PConst_int (1,None)
                                            ]
                                      ]
                                ]
                      ]
                      expression (src/longident.ml[63,1865+6]..[69,2111+62])
                        Pexp_ifthenelse
                        expression (src/longident.ml[63,1865+9]..[63,1865+20])
                          Pexp_open Fresh
                          module_expr (src/longident.ml[63,1865+9]..[63,1865+12])
                            Pmod_ident "Int" (src/longident.ml[63,1865+9]..[63,1865+12])
                          expression (src/longident.ml[63,1865+14]..[63,1865+19])
                            Pexp_apply
                            expression (src/longident.ml[63,1865+16]..[63,1865+17])
                              Pexp_ident "=" (src/longident.ml[63,1865+16]..[63,1865+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/longident.ml[63,1865+14]..[63,1865+15])
                                  Pexp_ident "l" (src/longident.ml[63,1865+14]..[63,1865+15])
                              <arg>
                              Nolabel
                                expression (src/longident.ml[63,1865+18]..[63,1865+19])
                                  Pexp_constant PConst_int (0,None)
                            ]
                        expression (src/longident.ml[63,1865+26]..[63,1865+38])
                          Pexp_construct "Lident" (src/longident.ml[63,1865+26]..[63,1865+32])
                          Some
                            expression (src/longident.ml[63,1865+33]..[63,1865+38])
                              Pexp_ident "group" (src/longident.ml[63,1865+33]..[63,1865+38])
                        Some
                          expression (src/longident.ml[64,1904+11]..[69,2111+62])
                            Pexp_ifthenelse
                            expression (src/longident.ml[64,1904+14]..[64,1904+37])
                              Pexp_open Fresh
                              module_expr (src/longident.ml[64,1904+14]..[64,1904+18])
                                Pmod_ident "Char" (src/longident.ml[64,1904+14]..[64,1904+18])
                              expression (src/longident.ml[64,1904+20]..[64,1904+36])
                                Pexp_apply
                                expression (src/longident.ml[64,1904+30]..[64,1904+32])
                                  Pexp_ident "<>" (src/longident.ml[64,1904+30]..[64,1904+32])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/longident.ml[64,1904+20]..[64,1904+29])
                                      Pexp_apply
                                      expression (src/longident.ml[64,1904+20]..[64,1904+29]) ghost
                                        Pexp_ident "String.get" (src/longident.ml[64,1904+20]..[64,1904+29]) ghost
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/longident.ml[64,1904+20]..[64,1904+21])
                                            Pexp_ident "s" (src/longident.ml[64,1904+20]..[64,1904+21])
                                        <arg>
                                        Nolabel
                                          expression (src/longident.ml[64,1904+23]..[64,1904+28])
                                            Pexp_apply
                                            expression (src/longident.ml[64,1904+25]..[64,1904+26])
                                              Pexp_ident "-" (src/longident.ml[64,1904+25]..[64,1904+26])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/longident.ml[64,1904+23]..[64,1904+24])
                                                  Pexp_ident "l" (src/longident.ml[64,1904+23]..[64,1904+24])
                                              <arg>
                                              Nolabel
                                                expression (src/longident.ml[64,1904+27]..[64,1904+28])
                                                  Pexp_constant PConst_int (1,None)
                                            ]
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (src/longident.ml[64,1904+33]..[64,1904+36])
                                      Pexp_constant PConst_char 2e
                                ]
                            expression (src/longident.ml[64,1904+43]..[64,1904+53])
                              Pexp_apply
                              expression (src/longident.ml[64,1904+43]..[64,1904+50])
                                Pexp_ident "invalid" (src/longident.ml[64,1904+43]..[64,1904+50])
                              [
                                <arg>
                                Nolabel
                                  expression (src/longident.ml[64,1904+51]..[64,1904+53])
                                    Pexp_construct "()" (src/longident.ml[64,1904+51]..[64,1904+53])
                                    None
                              ]
                            Some
                              expression (src/longident.ml[66,1969+8]..[69,2111+62])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (src/longident.ml[66,1969+12]..[66,1969+18])
                                      Ppat_var "before" (src/longident.ml[66,1969+12]..[66,1969+18])
                                    expression (src/longident.ml[66,1969+21]..[66,1969+53])
                                      Pexp_apply
                                      expression (src/longident.ml[66,1969+21]..[66,1969+31])
                                        Pexp_ident "String.sub" (src/longident.ml[66,1969+21]..[66,1969+31])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/longident.ml[66,1969+32]..[66,1969+33])
                                            Pexp_ident "s" (src/longident.ml[66,1969+32]..[66,1969+33])
                                        <arg>
                                        Labelled "pos"
                                          expression (src/longident.ml[66,1969+39]..[66,1969+40])
                                            Pexp_constant PConst_int (0,None)
                                        <arg>
                                        Labelled "len"
                                          expression (src/longident.ml[66,1969+46]..[66,1969+53])
                                            Pexp_apply
                                            expression (src/longident.ml[66,1969+49]..[66,1969+50])
                                              Pexp_ident "-" (src/longident.ml[66,1969+49]..[66,1969+50])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/longident.ml[66,1969+47]..[66,1969+48])
                                                  Pexp_ident "l" (src/longident.ml[66,1969+47]..[66,1969+48])
                                              <arg>
                                              Nolabel
                                                expression (src/longident.ml[66,1969+51]..[66,1969+52])
                                                  Pexp_constant PConst_int (1,None)
                                            ]
                                      ]
                                ]
                                expression (src/longident.ml[67,2026+8]..[69,2111+62])
                                  Pexp_match
                                  expression (src/longident.ml[67,2026+14]..[67,2026+50])
                                    Pexp_apply
                                    expression (src/longident.ml[67,2026+14]..[67,2026+34])
                                      Pexp_ident "String.split_on_char" (src/longident.ml[67,2026+14]..[67,2026+34])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/longident.ml[67,2026+35]..[67,2026+41])
                                          Pexp_ident "before" (src/longident.ml[67,2026+35]..[67,2026+41])
                                      <arg>
                                      Labelled "sep"
                                        expression (src/longident.ml[67,2026+47]..[67,2026+50])
                                          Pexp_constant PConst_char 2e
                                    ]
                                  [
                                    <case>
                                      pattern (src/longident.ml[68,2082+10]..[68,2082+12])
                                        Ppat_construct "[]" (src/longident.ml[68,2082+10]..[68,2082+12])
                                        None
                                      expression (src/longident.ml[68,2082+16]..[68,2082+28])
                                        Pexp_assert
                                        expression (src/longident.ml[68,2082+23]..[68,2082+28])
                                          Pexp_construct "false" (src/longident.ml[68,2082+23]..[68,2082+28])
                                          None
                                    <case>
                                      pattern (src/longident.ml[69,2111+10]..[69,2111+16])
                                        Ppat_construct "::" (src/longident.ml[69,2111+12]..[69,2111+14])
                                        Some
                                          pattern (src/longident.ml[69,2111+10]..[69,2111+16]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (src/longident.ml[69,2111+10]..[69,2111+11])
                                                Ppat_var "s" (src/longident.ml[69,2111+10]..[69,2111+11])
                                              pattern (src/longident.ml[69,2111+15]..[69,2111+16])
                                                Ppat_var "l" (src/longident.ml[69,2111+15]..[69,2111+16])
                                            ]
                                      expression (src/longident.ml[69,2111+20]..[69,2111+62])
                                        Pexp_construct "Ldot" (src/longident.ml[69,2111+20]..[69,2111+24])
                                        Some
                                          expression (src/longident.ml[69,2111+25]..[69,2111+62])
                                            Pexp_tuple
                                            [
                                              expression (src/longident.ml[69,2111+26]..[69,2111+54])
                                                Pexp_apply
                                                expression (src/longident.ml[69,2111+26]..[69,2111+35])
                                                  Pexp_ident "unflatten" (src/longident.ml[69,2111+26]..[69,2111+35])
                                                [
                                                  <arg>
                                                  Labelled "init"
                                                    expression (src/longident.ml[69,2111+42]..[69,2111+52])
                                                      Pexp_construct "Lident" (src/longident.ml[69,2111+43]..[69,2111+49])
                                                      Some
                                                        expression (src/longident.ml[69,2111+50]..[69,2111+51])
                                                          Pexp_ident "s" (src/longident.ml[69,2111+50]..[69,2111+51])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/longident.ml[69,2111+53]..[69,2111+54])
                                                      Pexp_ident "l" (src/longident.ml[69,2111+53]..[69,2111+54])
                                                ]
                                              expression (src/longident.ml[69,2111+56]..[69,2111+61])
                                                Pexp_ident "group" (src/longident.ml[69,2111+56]..[69,2111+61])
                                            ]
                                  ]
              ]
    ]
  structure_item (src/longident.ml[71,2176+0]..[71,2176+25])
    Pstr_module
    "Map" (src/longident.ml[71,2176+7]..[71,2176+10])
      module_expr (src/longident.ml[71,2176+13]..[71,2176+25])
        Pmod_apply
        module_expr (src/longident.ml[71,2176+13]..[71,2176+21])
          Pmod_ident "Map.Make" (src/longident.ml[71,2176+13]..[71,2176+21])
        module_expr (src/longident.ml[71,2176+23]..[71,2176+24])
          Pmod_ident "T" (src/longident.ml[71,2176+23]..[71,2176+24])
  structure_item (src/longident.ml[72,2202+0]..[72,2202+25])
    Pstr_module
    "Set" (src/longident.ml[72,2202+7]..[72,2202+10])
      module_expr (src/longident.ml[72,2202+13]..[72,2202+25])
        Pmod_apply
        module_expr (src/longident.ml[72,2202+13]..[72,2202+21])
          Pmod_ident "Set.Make" (src/longident.ml[72,2202+13]..[72,2202+21])
        module_expr (src/longident.ml[72,2202+23]..[72,2202+24])
          Pmod_ident "T" (src/longident.ml[72,2202+23]..[72,2202+24])
]

open! Import
module T =
  struct
    type t = longident =
      | Lident of string 
      | Ldot of t * string 
      | Lapply of t * t 
    let compare : t -> t -> int = Poly.compare
    let is_normal_ident_char =
      function
      | 'A'..'Z' | 'a'..'z' | '0'..'9' | '_' | '\'' -> true
      | _ -> false
    let is_normal_ident =
      function
      | "asr" | "land" | "lor" | "lsl" | "lsr" | "lxor" | "mod" | "or" ->
          false
      | string -> String.for_all string ~f:is_normal_ident_char
    let short_name string =
      if is_normal_ident string then string else "( " ^ (string ^ " )")
    let rec name =
      function
      | Lident s -> short_name s
      | Ldot (a, b) -> (name a) ^ ("." ^ (short_name b))
      | Lapply (a, b) -> Printf.sprintf "%s(%s)" (name a) (name b)
    let sexp_of_t t = Sexp.Atom (name t)
  end
include T
let rec flat accu =
  function
  | Lident s -> s :: accu
  | Ldot (lid, s) -> flat (s :: accu) lid
  | Lapply (_, _) -> invalid_arg "Ppxlib.Longident.flatten"
let flatten_exn lid = flat [] lid
let last_exn =
  function
  | Lident s -> s
  | Ldot (_, s) -> s
  | Lapply (_, _) -> invalid_arg "Ppxlib.Longident.flatten"
let unflatten ~init  l =
  List.fold_left l ~init ~f:(fun acc -> fun s -> Ldot (acc, s))
let parse_simple s =
  match String.split_on_char s ~sep:'.' with
  | [] -> assert false
  | s::l -> unflatten ~init:(Lident s) l
let parse s =
  let invalid () =
    invalid_arg (Printf.sprintf "Ppxlib.Longident.parse: %S" s) in
  match ((String.index_opt s '('), (String.rindex_opt s ')')) with
  | (None, None) -> parse_simple s
  | (None, _) | (_, None) -> invalid ()
  | (Some l, Some r) ->
      (if (let open Int in r <> ((String.length s) - 1)) then invalid ();
       (let group =
          if let open Int in r = (l + 1)
          then "()"
          else String.trim (String.sub s ~pos:(l + 1) ~len:((r - l) - 1)) in
        if let open Int in l = 0
        then Lident group
        else
          if (let open Char in (s.[l - 1]) <> '.')
          then invalid ()
          else
            (let before = String.sub s ~pos:0 ~len:(l - 1) in
             match String.split_on_char before ~sep:'.' with
             | [] -> assert false
             | s::l -> Ldot ((unflatten ~init:(Lident s) l), group))))
module Map = (Map.Make)(T)
module Set = (Set.Make)(T)
[
  structure_item (src/longident.ml[1,0+0]..src/longident.ml[1,0+12])
    Tstr_open Override
    module_expr (src/longident.ml[1,0+6]..src/longident.ml[1,0+12])
      Tmod_ident "Ppxlib__!.Import"
  structure_item (src/longident.ml[3,14+0]..src/longident.ml[25,758+3])
    Tstr_module
    T/1126
      module_expr (src/longident.ml[3,14+11]..src/longident.ml[25,758+3])
        Tmod_structure
        [
          structure_item (src/longident.ml[4,32+2]..src/longident.ml[4,32+78])
            Tstr_type Rec
            [
              type_declaration t/550 (src/longident.ml[4,32+2]..src/longident.ml[4,32+78])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_variant
                    [
                      (src/longident.ml[4,32+23]..src/longident.ml[4,32+39])
                        Lident/551
                        [
                          core_type (src/longident.ml[4,32+33]..src/longident.ml[4,32+39])
                            Ttyp_constr "string/17!"
                            []
                        ]
                        None
                      (src/longident.ml[4,32+40]..src/longident.ml[4,32+60])
                        Ldot/552
                        [
                          core_type (src/longident.ml[4,32+50]..src/longident.ml[4,32+51])
                            Ttyp_constr "t/550"
                            []
                          core_type (src/longident.ml[4,32+54]..src/longident.ml[4,32+60])
                            Ttyp_constr "string/17!"
                            []
                        ]
                        None
                      (src/longident.ml[4,32+61]..src/longident.ml[4,32+78])
                        Lapply/553
                        [
                          core_type (src/longident.ml[4,32+73]..src/longident.ml[4,32+74])
                            Ttyp_constr "t/550"
                            []
                          core_type (src/longident.ml[4,32+77]..src/longident.ml[4,32+78])
                            Ttyp_constr "t/550"
                            []
                        ]
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/longident.ml[4,32+11]..src/longident.ml[4,32+20])
                      Ttyp_constr "Ppxlib__!.Import.longident"
                      []
            ]
          structure_item (src/longident.ml[6,112+2]..src/longident.ml[6,112+44])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/longident.ml[6,112+6]..src/longident.ml[6,112+13])
                  Tpat_extra_constraint
                  core_type (src/longident.ml[6,112+16]..src/longident.ml[6,112+29]) ghost
                    Ttyp_poly
                    core_type (src/longident.ml[6,112+16]..src/longident.ml[6,112+29])
                      Ttyp_arrow
                      Nolabel
                      core_type (src/longident.ml[6,112+16]..src/longident.ml[6,112+17])
                        Ttyp_constr "t/550"
                        []
                      core_type (src/longident.ml[6,112+21]..src/longident.ml[6,112+29])
                        Ttyp_arrow
                        Nolabel
                        core_type (src/longident.ml[6,112+21]..src/longident.ml[6,112+22])
                          Ttyp_constr "t/550"
                          []
                        core_type (src/longident.ml[6,112+26]..src/longident.ml[6,112+29])
                          Ttyp_constr "int/1!"
                          []
                  pattern (src/longident.ml[6,112+6]..src/longident.ml[6,112+13])
                    Tpat_var "compare/818"
                expression (src/longident.ml[6,112+32]..src/longident.ml[6,112+44])
                  Texp_constraint
                  core_type (src/longident.ml[6,112+16]..src/longident.ml[6,112+29])
                    Ttyp_arrow
                    Nolabel
                    core_type (src/longident.ml[6,112+16]..src/longident.ml[6,112+17])
                      Ttyp_constr "t/550"
                      []
                    core_type (src/longident.ml[6,112+21]..src/longident.ml[6,112+29])
                      Ttyp_arrow
                      Nolabel
                      core_type (src/longident.ml[6,112+21]..src/longident.ml[6,112+22])
                        Ttyp_constr "t/550"
                        []
                      core_type (src/longident.ml[6,112+26]..src/longident.ml[6,112+29])
                        Ttyp_constr "int/1!"
                        []
                    Texp_ident "Ppxlib__!.Import.Poly.compare"
            ]
          structure_item (src/longident.ml[8,158+2]..src/longident.ml[10,260+16])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/longident.ml[8,158+6]..src/longident.ml[8,158+26])
                  Tpat_var "is_normal_ident_char/875"
                expression (src/longident.ml[8,158+29]..src/longident.ml[10,260+16])
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+55])
                        Tpat_or
                        pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+48])
                          Tpat_or
                          pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+42])
                            Tpat_or
                            pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+29])
                              Tpat_or
                              pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16])
                                Tpat_or
                                pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                  Tpat_constant Const_char 41
                                pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                  Tpat_or
                                  pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                    Tpat_constant Const_char 42
                                  pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                    Tpat_or
                                    pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                      Tpat_constant Const_char 43
                                    pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                      Tpat_or
                                      pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                        Tpat_constant Const_char 44
                                      pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                        Tpat_or
                                        pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                          Tpat_constant Const_char 45
                                        pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                          Tpat_or
                                          pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                            Tpat_constant Const_char 46
                                          pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                            Tpat_or
                                            pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                              Tpat_constant Const_char 47
                                            pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                              Tpat_or
                                              pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                Tpat_constant Const_char 48
                                              pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                Tpat_or
                                                pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                  Tpat_constant Const_char 49
                                                pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                  Tpat_or
                                                  pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                    Tpat_constant Const_char 4a
                                                  pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                    Tpat_or
                                                    pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                      Tpat_constant Const_char 4b
                                                    pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                      Tpat_or
                                                      pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                        Tpat_constant Const_char 4c
                                                      pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                        Tpat_or
                                                        pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                          Tpat_constant Const_char 4d
                                                        pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                          Tpat_or
                                                          pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                            Tpat_constant Const_char 4e
                                                          pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                            Tpat_or
                                                            pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                              Tpat_constant Const_char 4f
                                                            pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                              Tpat_or
                                                              pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                                Tpat_constant Const_char 50
                                                              pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                                Tpat_or
                                                                pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                                  Tpat_constant Const_char 51
                                                                pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                                  Tpat_or
                                                                  pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                                    Tpat_constant Const_char 52
                                                                  pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                                    Tpat_or
                                                                    pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                                      Tpat_constant Const_char 53
                                                                    pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                                      Tpat_or
                                                                      pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                                        Tpat_constant Const_char 54
                                                                      pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                                        Tpat_or
                                                                        pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                                          Tpat_constant Const_char 55
                                                                        pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                                          Tpat_or
                                                                          pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                                            Tpat_constant Const_char 56
                                                                          pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                                            Tpat_or
                                                                            pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                                              Tpat_constant Const_char 57
                                                                            pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                                              Tpat_or
                                                                              pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                                                Tpat_constant Const_char 58
                                                                              pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                                                Tpat_or
                                                                                pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                                                  Tpat_constant Const_char 59
                                                                                pattern (src/longident.ml[9,196+6]..src/longident.ml[9,196+16]) ghost
                                                                                  Tpat_constant Const_char 5a
                              pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29])
                                Tpat_or
                                pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                  Tpat_constant Const_char 61
                                pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                  Tpat_or
                                  pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                    Tpat_constant Const_char 62
                                  pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                    Tpat_or
                                    pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                      Tpat_constant Const_char 63
                                    pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                      Tpat_or
                                      pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                        Tpat_constant Const_char 64
                                      pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                        Tpat_or
                                        pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                          Tpat_constant Const_char 65
                                        pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                          Tpat_or
                                          pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                            Tpat_constant Const_char 66
                                          pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                            Tpat_or
                                            pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                              Tpat_constant Const_char 67
                                            pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                              Tpat_or
                                              pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                Tpat_constant Const_char 68
                                              pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                Tpat_or
                                                pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                  Tpat_constant Const_char 69
                                                pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                  Tpat_or
                                                  pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                    Tpat_constant Const_char 6a
                                                  pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                    Tpat_or
                                                    pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                      Tpat_constant Const_char 6b
                                                    pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                      Tpat_or
                                                      pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                        Tpat_constant Const_char 6c
                                                      pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                        Tpat_or
                                                        pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                          Tpat_constant Const_char 6d
                                                        pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                          Tpat_or
                                                          pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                            Tpat_constant Const_char 6e
                                                          pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                            Tpat_or
                                                            pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                              Tpat_constant Const_char 6f
                                                            pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                              Tpat_or
                                                              pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                                Tpat_constant Const_char 70
                                                              pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                                Tpat_or
                                                                pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                                  Tpat_constant Const_char 71
                                                                pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                                  Tpat_or
                                                                  pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                                    Tpat_constant Const_char 72
                                                                  pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                                    Tpat_or
                                                                    pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                                      Tpat_constant Const_char 73
                                                                    pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                                      Tpat_or
                                                                      pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                                        Tpat_constant Const_char 74
                                                                      pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                                        Tpat_or
                                                                        pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                                          Tpat_constant Const_char 75
                                                                        pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                                          Tpat_or
                                                                          pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                                            Tpat_constant Const_char 76
                                                                          pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                                            Tpat_or
                                                                            pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                                              Tpat_constant Const_char 77
                                                                            pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                                              Tpat_or
                                                                              pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                                                Tpat_constant Const_char 78
                                                                              pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                                                Tpat_or
                                                                                pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                                                  Tpat_constant Const_char 79
                                                                                pattern (src/longident.ml[9,196+19]..src/longident.ml[9,196+29]) ghost
                                                                                  Tpat_constant Const_char 7a
                            pattern (src/longident.ml[9,196+32]..src/longident.ml[9,196+42])
                              Tpat_or
                              pattern (src/longident.ml[9,196+32]..src/longident.ml[9,196+42]) ghost
                                Tpat_constant Const_char 30
                              pattern (src/longident.ml[9,196+32]..src/longident.ml[9,196+42]) ghost
                                Tpat_or
                                pattern (src/longident.ml[9,196+32]..src/longident.ml[9,196+42]) ghost
                                  Tpat_constant Const_char 31
                                pattern (src/longident.ml[9,196+32]..src/longident.ml[9,196+42]) ghost
                                  Tpat_or
                                  pattern (src/longident.ml[9,196+32]..src/longident.ml[9,196+42]) ghost
                                    Tpat_constant Const_char 32
                                  pattern (src/longident.ml[9,196+32]..src/longident.ml[9,196+42]) ghost
                                    Tpat_or
                                    pattern (src/longident.ml[9,196+32]..src/longident.ml[9,196+42]) ghost
                                      Tpat_constant Const_char 33
                                    pattern (src/longident.ml[9,196+32]..src/longident.ml[9,196+42]) ghost
                                      Tpat_or
                                      pattern (src/longident.ml[9,196+32]..src/longident.ml[9,196+42]) ghost
                                        Tpat_constant Const_char 34
                                      pattern (src/longident.ml[9,196+32]..src/longident.ml[9,196+42]) ghost
                                        Tpat_or
                                        pattern (src/longident.ml[9,196+32]..src/longident.ml[9,196+42]) ghost
                                          Tpat_constant Const_char 35
                                        pattern (src/longident.ml[9,196+32]..src/longident.ml[9,196+42]) ghost
                                          Tpat_or
                                          pattern (src/longident.ml[9,196+32]..src/longident.ml[9,196+42]) ghost
                                            Tpat_constant Const_char 36
                                          pattern (src/longident.ml[9,196+32]..src/longident.ml[9,196+42]) ghost
                                            Tpat_or
                                            pattern (src/longident.ml[9,196+32]..src/longident.ml[9,196+42]) ghost
                                              Tpat_constant Const_char 37
                                            pattern (src/longident.ml[9,196+32]..src/longident.ml[9,196+42]) ghost
                                              Tpat_or
                                              pattern (src/longident.ml[9,196+32]..src/longident.ml[9,196+42]) ghost
                                                Tpat_constant Const_char 38
                                              pattern (src/longident.ml[9,196+32]..src/longident.ml[9,196+42]) ghost
                                                Tpat_constant Const_char 39
                          pattern (src/longident.ml[9,196+45]..src/longident.ml[9,196+48])
                            Tpat_constant Const_char 5f
                        pattern (src/longident.ml[9,196+51]..src/longident.ml[9,196+55])
                          Tpat_constant Const_char 27
                      expression (src/longident.ml[9,196+59]..src/longident.ml[9,196+63])
                        Texp_construct "true"
                        []
                    <case>
                      pattern (src/longident.ml[10,260+6]..src/longident.ml[10,260+7])
                        Tpat_any
                      expression (src/longident.ml[10,260+11]..src/longident.ml[10,260+16])
                        Texp_construct "false"
                        []
                  ]
            ]
          structure_item (src/longident.ml[12,278+2]..src/longident.ml[14,389+61])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/longident.ml[12,278+6]..src/longident.ml[12,278+21])
                  Tpat_var "is_normal_ident/878"
                expression (src/longident.ml[12,278+24]..src/longident.ml[14,389+61])
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/longident.ml[13,311+6]..src/longident.ml[13,311+68])
                        Tpat_or
                        pattern (src/longident.ml[13,311+6]..src/longident.ml[13,311+61])
                          Tpat_or
                          pattern (src/longident.ml[13,311+6]..src/longident.ml[13,311+53])
                            Tpat_or
                            pattern (src/longident.ml[13,311+6]..src/longident.ml[13,311+44])
                              Tpat_or
                              pattern (src/longident.ml[13,311+6]..src/longident.ml[13,311+36])
                                Tpat_or
                                pattern (src/longident.ml[13,311+6]..src/longident.ml[13,311+28])
                                  Tpat_or
                                  pattern (src/longident.ml[13,311+6]..src/longident.ml[13,311+20])
                                    Tpat_or
                                    pattern (src/longident.ml[13,311+6]..src/longident.ml[13,311+11])
                                      Tpat_constant Const_string("asr",(src/longident.ml[13,311+7]..src/longident.ml[13,311+10]),None)
                                    pattern (src/longident.ml[13,311+14]..src/longident.ml[13,311+20])
                                      Tpat_constant Const_string("land",(src/longident.ml[13,311+15]..src/longident.ml[13,311+19]),None)
                                  pattern (src/longident.ml[13,311+23]..src/longident.ml[13,311+28])
                                    Tpat_constant Const_string("lor",(src/longident.ml[13,311+24]..src/longident.ml[13,311+27]),None)
                                pattern (src/longident.ml[13,311+31]..src/longident.ml[13,311+36])
                                  Tpat_constant Const_string("lsl",(src/longident.ml[13,311+32]..src/longident.ml[13,311+35]),None)
                              pattern (src/longident.ml[13,311+39]..src/longident.ml[13,311+44])
                                Tpat_constant Const_string("lsr",(src/longident.ml[13,311+40]..src/longident.ml[13,311+43]),None)
                            pattern (src/longident.ml[13,311+47]..src/longident.ml[13,311+53])
                              Tpat_constant Const_string("lxor",(src/longident.ml[13,311+48]..src/longident.ml[13,311+52]),None)
                          pattern (src/longident.ml[13,311+56]..src/longident.ml[13,311+61])
                            Tpat_constant Const_string("mod",(src/longident.ml[13,311+57]..src/longident.ml[13,311+60]),None)
                        pattern (src/longident.ml[13,311+64]..src/longident.ml[13,311+68])
                          Tpat_constant Const_string("or",(src/longident.ml[13,311+65]..src/longident.ml[13,311+67]),None)
                      expression (src/longident.ml[13,311+72]..src/longident.ml[13,311+77])
                        Texp_construct "false"
                        []
                    <case>
                      pattern (src/longident.ml[14,389+6]..src/longident.ml[14,389+12])
                        Tpat_var "string/880"
                      expression (src/longident.ml[14,389+16]..src/longident.ml[14,389+61])
                        Texp_apply
                        expression (src/longident.ml[14,389+16]..src/longident.ml[14,389+30])
                          Texp_ident "Ppxlib__!.Import.String.for_all"
                        [
                          <arg>
                            Nolabel
                            expression (src/longident.ml[14,389+31]..src/longident.ml[14,389+37])
                              Texp_ident "string/880"
                          <arg>
                            Labelled "f"
                            expression (src/longident.ml[14,389+41]..src/longident.ml[14,389+61])
                              Texp_ident "is_normal_ident_char/875"
                        ]
                  ]
            ]
          structure_item (src/longident.ml[16,452+2]..src/longident.ml[17,478+67])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/longident.ml[16,452+6]..src/longident.ml[16,452+16])
                  Tpat_var "short_name/1037"
                expression (src/longident.ml[16,452+17]..src/longident.ml[17,478+67]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/longident.ml[16,452+17]..src/longident.ml[16,452+23])
                        Tpat_var "string/1039"
                      expression (src/longident.ml[17,478+4]..src/longident.ml[17,478+67])
                        Texp_ifthenelse
                        expression (src/longident.ml[17,478+7]..src/longident.ml[17,478+29])
                          Texp_apply
                          expression (src/longident.ml[17,478+7]..src/longident.ml[17,478+22])
                            Texp_ident "is_normal_ident/878"
                          [
                            <arg>
                              Nolabel
                              expression (src/longident.ml[17,478+23]..src/longident.ml[17,478+29])
                                Texp_ident "string/1039"
                          ]
                        expression (src/longident.ml[17,478+35]..src/longident.ml[17,478+41])
                          Texp_ident "string/1039"
                        Some
                          expression (src/longident.ml[17,478+47]..src/longident.ml[17,478+67])
                            Texp_apply
                            expression (src/longident.ml[17,478+52]..src/longident.ml[17,478+53])
                              Texp_ident "Stdlib!.^"
                            [
                              <arg>
                                Nolabel
                                expression (src/longident.ml[17,478+47]..src/longident.ml[17,478+51])
                                  Texp_constant Const_string("( ",(src/longident.ml[17,478+48]..src/longident.ml[17,478+50]),None)
                              <arg>
                                Nolabel
                                expression (src/longident.ml[17,478+54]..src/longident.ml[17,478+67])
                                  Texp_apply
                                  expression (src/longident.ml[17,478+61]..src/longident.ml[17,478+62])
                                    Texp_ident "Stdlib!.^"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/longident.ml[17,478+54]..src/longident.ml[17,478+60])
                                        Texp_ident "string/1039"
                                    <arg>
                                      Nolabel
                                      expression (src/longident.ml[17,478+63]..src/longident.ml[17,478+67])
                                        Texp_constant Const_string(" )",(src/longident.ml[17,478+64]..src/longident.ml[17,478+66]),None)
                                  ]
                            ]
                  ]
            ]
          structure_item (src/longident.ml[19,547+2]..src/longident.ml[22,653+64])
            Tstr_value Rec
            [
              <def>
                pattern (src/longident.ml[19,547+10]..src/longident.ml[19,547+14])
                  Tpat_var "name/1040"
                expression (src/longident.ml[19,547+17]..src/longident.ml[22,653+64])
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/longident.ml[20,573+6]..src/longident.ml[20,573+14])
                        Tpat_construct "Lident"
                        [
                          pattern (src/longident.ml[20,573+13]..src/longident.ml[20,573+14])
                            Tpat_var "s/1041"
                        ]
                      expression (src/longident.ml[20,573+18]..src/longident.ml[20,573+30])
                        Texp_apply
                        expression (src/longident.ml[20,573+18]..src/longident.ml[20,573+28])
                          Texp_ident "short_name/1037"
                        [
                          <arg>
                            Nolabel
                            expression (src/longident.ml[20,573+29]..src/longident.ml[20,573+30])
                              Texp_ident "s/1041"
                        ]
                    <case>
                      pattern (src/longident.ml[21,604+6]..src/longident.ml[21,604+17])
                        Tpat_construct "Ldot"
                        [
                          pattern (src/longident.ml[21,604+12]..src/longident.ml[21,604+13])
                            Tpat_var "a/1042"
                          pattern (src/longident.ml[21,604+15]..src/longident.ml[21,604+16])
                            Tpat_var "b/1043"
                        ]
                      expression (src/longident.ml[21,604+21]..src/longident.ml[21,604+48])
                        Texp_apply
                        expression (src/longident.ml[21,604+28]..src/longident.ml[21,604+29])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (src/longident.ml[21,604+21]..src/longident.ml[21,604+27])
                              Texp_apply
                              expression (src/longident.ml[21,604+21]..src/longident.ml[21,604+25])
                                Texp_ident "name/1040"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/longident.ml[21,604+26]..src/longident.ml[21,604+27])
                                    Texp_ident "a/1042"
                              ]
                          <arg>
                            Nolabel
                            expression (src/longident.ml[21,604+30]..src/longident.ml[21,604+48])
                              Texp_apply
                              expression (src/longident.ml[21,604+34]..src/longident.ml[21,604+35])
                                Texp_ident "Stdlib!.^"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/longident.ml[21,604+30]..src/longident.ml[21,604+33])
                                    Texp_constant Const_string(".",(src/longident.ml[21,604+31]..src/longident.ml[21,604+32]),None)
                                <arg>
                                  Nolabel
                                  expression (src/longident.ml[21,604+36]..src/longident.ml[21,604+48])
                                    Texp_apply
                                    expression (src/longident.ml[21,604+36]..src/longident.ml[21,604+46])
                                      Texp_ident "short_name/1037"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/longident.ml[21,604+47]..src/longident.ml[21,604+48])
                                          Texp_ident "b/1043"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/longident.ml[22,653+6]..src/longident.ml[22,653+19])
                        Tpat_construct "Lapply"
                        [
                          pattern (src/longident.ml[22,653+14]..src/longident.ml[22,653+15])
                            Tpat_var "a/1044"
                          pattern (src/longident.ml[22,653+17]..src/longident.ml[22,653+18])
                            Tpat_var "b/1045"
                        ]
                      expression (src/longident.ml[22,653+23]..src/longident.ml[22,653+64])
                        Texp_apply
                        expression (src/longident.ml[22,653+23]..src/longident.ml[22,653+37])
                          Texp_ident "Stdlib!.Printf.sprintf"
                        [
                          <arg>
                            Nolabel
                            expression (src/longident.ml[22,653+38]..src/longident.ml[22,653+46])
                              Texp_construct "CamlinternalFormatBasics.Format"
                              [
                                expression (src/longident.ml[22,653+38]..src/longident.ml[22,653+46]) ghost
                                  Texp_construct "CamlinternalFormatBasics.String"
                                  [
                                    expression (src/longident.ml[22,653+38]..src/longident.ml[22,653+46]) ghost
                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                      []
                                    expression (src/longident.ml[22,653+38]..src/longident.ml[22,653+46]) ghost
                                      Texp_construct "CamlinternalFormatBasics.Char_literal"
                                      [
                                        expression (src/longident.ml[22,653+38]..src/longident.ml[22,653+46]) ghost
                                          Texp_constant Const_char 28
                                        expression (src/longident.ml[22,653+38]..src/longident.ml[22,653+46]) ghost
                                          Texp_construct "CamlinternalFormatBasics.String"
                                          [
                                            expression (src/longident.ml[22,653+38]..src/longident.ml[22,653+46]) ghost
                                              Texp_construct "CamlinternalFormatBasics.No_padding"
                                              []
                                            expression (src/longident.ml[22,653+38]..src/longident.ml[22,653+46]) ghost
                                              Texp_construct "CamlinternalFormatBasics.Char_literal"
                                              [
                                                expression (src/longident.ml[22,653+38]..src/longident.ml[22,653+46]) ghost
                                                  Texp_constant Const_char 29
                                                expression (src/longident.ml[22,653+38]..src/longident.ml[22,653+46]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                  []
                                              ]
                                          ]
                                      ]
                                  ]
                                expression (src/longident.ml[22,653+38]..src/longident.ml[22,653+46]) ghost
                                  Texp_constant Const_string("%s(%s)",(src/longident.ml[22,653+38]..src/longident.ml[22,653+46]) ghost,None)
                              ]
                          <arg>
                            Nolabel
                            expression (src/longident.ml[22,653+47]..src/longident.ml[22,653+55])
                              Texp_apply
                              expression (src/longident.ml[22,653+48]..src/longident.ml[22,653+52])
                                Texp_ident "name/1040"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/longident.ml[22,653+53]..src/longident.ml[22,653+54])
                                    Texp_ident "a/1044"
                              ]
                          <arg>
                            Nolabel
                            expression (src/longident.ml[22,653+56]..src/longident.ml[22,653+64])
                              Texp_apply
                              expression (src/longident.ml[22,653+57]..src/longident.ml[22,653+61])
                                Texp_ident "name/1040"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/longident.ml[22,653+62]..src/longident.ml[22,653+63])
                                    Texp_ident "b/1045"
                              ]
                        ]
                  ]
            ]
          structure_item (src/longident.ml[24,719+2]..src/longident.ml[24,719+38])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/longident.ml[24,719+6]..src/longident.ml[24,719+15])
                  Tpat_var "sexp_of_t/1080"
                expression (src/longident.ml[24,719+16]..src/longident.ml[24,719+38]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/longident.ml[24,719+16]..src/longident.ml[24,719+17])
                        Tpat_var "t/1082"
                      expression (src/longident.ml[24,719+20]..src/longident.ml[24,719+38])
                        Texp_construct "Sexp.Atom"
                        [
                          expression (src/longident.ml[24,719+30]..src/longident.ml[24,719+38])
                            Texp_apply
                            expression (src/longident.ml[24,719+31]..src/longident.ml[24,719+35])
                              Texp_ident "name/1040"
                            [
                              <arg>
                                Nolabel
                                expression (src/longident.ml[24,719+36]..src/longident.ml[24,719+37])
                                  Texp_ident "t/1082"
                            ]
                        ]
                  ]
            ]
        ]
  structure_item (src/longident.ml[27,763+0]..src/longident.ml[27,763+9])
    Tstr_include    module_expr (src/longident.ml[27,763+8]..src/longident.ml[27,763+9])
      Tmod_ident "T/1126"
  structure_item (src/longident.ml[29,774+0]..src/longident.ml[32,871+59])
    Tstr_value Rec
    [
      <def>
        pattern (src/longident.ml[29,774+8]..src/longident.ml[29,774+12])
          Tpat_var "flat/1134"
        expression (src/longident.ml[29,774+13]..src/longident.ml[32,871+59]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/longident.ml[29,774+13]..src/longident.ml[29,774+17])
                Tpat_var "accu/1135"
              expression (src/longident.ml[29,774+20]..src/longident.ml[32,871+59])
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/longident.ml[30,803+4]..src/longident.ml[30,803+12])
                      Tpat_construct "Lident"
                      [
                        pattern (src/longident.ml[30,803+11]..src/longident.ml[30,803+12])
                          Tpat_var "s/1136"
                      ]
                    expression (src/longident.ml[30,803+16]..src/longident.ml[30,803+25])
                      Texp_construct "::"
                      [
                        expression (src/longident.ml[30,803+16]..src/longident.ml[30,803+17])
                          Texp_ident "s/1136"
                        expression (src/longident.ml[30,803+21]..src/longident.ml[30,803+25])
                          Texp_ident "accu/1135"
                      ]
                  <case>
                    pattern (src/longident.ml[31,829+4]..src/longident.ml[31,829+17])
                      Tpat_construct "Ldot"
                      [
                        pattern (src/longident.ml[31,829+10]..src/longident.ml[31,829+13])
                          Tpat_var "lid/1137"
                        pattern (src/longident.ml[31,829+15]..src/longident.ml[31,829+16])
                          Tpat_var "s/1138"
                      ]
                    expression (src/longident.ml[31,829+21]..src/longident.ml[31,829+41])
                      Texp_apply
                      expression (src/longident.ml[31,829+21]..src/longident.ml[31,829+25])
                        Texp_ident "flat/1134"
                      [
                        <arg>
                          Nolabel
                          expression (src/longident.ml[31,829+26]..src/longident.ml[31,829+37])
                            Texp_construct "::"
                            [
                              expression (src/longident.ml[31,829+27]..src/longident.ml[31,829+28])
                                Texp_ident "s/1138"
                              expression (src/longident.ml[31,829+32]..src/longident.ml[31,829+36])
                                Texp_ident "accu/1135"
                            ]
                        <arg>
                          Nolabel
                          expression (src/longident.ml[31,829+38]..src/longident.ml[31,829+41])
                            Texp_ident "lid/1137"
                      ]
                  <case>
                    pattern (src/longident.ml[32,871+4]..src/longident.ml[32,871+17])
                      Tpat_construct "Lapply"
                      [
                        pattern (src/longident.ml[32,871+12]..src/longident.ml[32,871+13])
                          Tpat_any
                        pattern (src/longident.ml[32,871+15]..src/longident.ml[32,871+16])
                          Tpat_any
                      ]
                    expression (src/longident.ml[32,871+21]..src/longident.ml[32,871+59])
                      Texp_apply
                      expression (src/longident.ml[32,871+21]..src/longident.ml[32,871+32])
                        Texp_ident "Stdlib!.invalid_arg"
                      [
                        <arg>
                          Nolabel
                          expression (src/longident.ml[32,871+33]..src/longident.ml[32,871+59])
                            Texp_constant Const_string("Ppxlib.Longident.flatten",(src/longident.ml[32,871+34]..src/longident.ml[32,871+58]),None)
                      ]
                ]
          ]
    ]
  structure_item (src/longident.ml[34,932+0]..src/longident.ml[34,932+33])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/longident.ml[34,932+4]..src/longident.ml[34,932+15])
          Tpat_var "flatten_exn/1140"
        expression (src/longident.ml[34,932+16]..src/longident.ml[34,932+33]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/longident.ml[34,932+16]..src/longident.ml[34,932+19])
                Tpat_var "lid/1142"
              expression (src/longident.ml[34,932+22]..src/longident.ml[34,932+33])
                Texp_apply
                expression (src/longident.ml[34,932+22]..src/longident.ml[34,932+26])
                  Texp_ident "flat/1134"
                [
                  <arg>
                    Nolabel
                    expression (src/longident.ml[34,932+27]..src/longident.ml[34,932+29])
                      Texp_construct "[]"
                      []
                  <arg>
                    Nolabel
                    expression (src/longident.ml[34,932+30]..src/longident.ml[34,932+33])
                      Texp_ident "lid/1142"
                ]
          ]
    ]
  structure_item (src/longident.ml[36,967+0]..src/longident.ml[39,1030+59])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/longident.ml[36,967+4]..src/longident.ml[36,967+12])
          Tpat_var "last_exn/1143"
        expression (src/longident.ml[36,967+15]..src/longident.ml[39,1030+59])
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/longident.ml[37,991+4]..src/longident.ml[37,991+12])
                Tpat_construct "Lident"
                [
                  pattern (src/longident.ml[37,991+11]..src/longident.ml[37,991+12])
                    Tpat_var "s/1145"
                ]
              expression (src/longident.ml[37,991+16]..src/longident.ml[37,991+17])
                Texp_ident "s/1145"
            <case>
              pattern (src/longident.ml[38,1009+4]..src/longident.ml[38,1009+15])
                Tpat_construct "Ldot"
                [
                  pattern (src/longident.ml[38,1009+10]..src/longident.ml[38,1009+11])
                    Tpat_any
                  pattern (src/longident.ml[38,1009+13]..src/longident.ml[38,1009+14])
                    Tpat_var "s/1146"
                ]
              expression (src/longident.ml[38,1009+19]..src/longident.ml[38,1009+20])
                Texp_ident "s/1146"
            <case>
              pattern (src/longident.ml[39,1030+4]..src/longident.ml[39,1030+17])
                Tpat_construct "Lapply"
                [
                  pattern (src/longident.ml[39,1030+12]..src/longident.ml[39,1030+13])
                    Tpat_any
                  pattern (src/longident.ml[39,1030+15]..src/longident.ml[39,1030+16])
                    Tpat_any
                ]
              expression (src/longident.ml[39,1030+21]..src/longident.ml[39,1030+59])
                Texp_apply
                expression (src/longident.ml[39,1030+21]..src/longident.ml[39,1030+32])
                  Texp_ident "Stdlib!.invalid_arg"
                [
                  <arg>
                    Nolabel
                    expression (src/longident.ml[39,1030+33]..src/longident.ml[39,1030+59])
                      Texp_constant Const_string("Ppxlib.Longident.flatten",(src/longident.ml[39,1030+34]..src/longident.ml[39,1030+58]),None)
                ]
          ]
    ]
  structure_item (src/longident.ml[41,1091+0]..src/longident.ml[41,1091+78])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/longident.ml[41,1091+4]..src/longident.ml[41,1091+13])
          Tpat_var "unflatten/1148"
        expression (src/longident.ml[41,1091+14]..src/longident.ml[41,1091+78]) ghost
          Texp_function
          Labelled "init"
          [
            <case>
              pattern (src/longident.ml[41,1091+15]..src/longident.ml[41,1091+19])
                Tpat_var "init/1150"
              expression (src/longident.ml[41,1091+20]..src/longident.ml[41,1091+78]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/longident.ml[41,1091+20]..src/longident.ml[41,1091+21])
                      Tpat_var "l/1151"
                    expression (src/longident.ml[41,1091+24]..src/longident.ml[41,1091+78])
                      Texp_apply
                      expression (src/longident.ml[41,1091+24]..src/longident.ml[41,1091+38])
                        Texp_ident "Ppxlib__!.Import.List.fold_left"
                      [
                        <arg>
                          Labelled "f"
                          expression (src/longident.ml[41,1091+50]..src/longident.ml[41,1091+78])
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/longident.ml[41,1091+55]..src/longident.ml[41,1091+58])
                                  Tpat_var "acc/1225"
                                expression (src/longident.ml[41,1091+59]..src/longident.ml[41,1091+77]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/longident.ml[41,1091+59]..src/longident.ml[41,1091+60])
                                        Tpat_var "s/1226"
                                      expression (src/longident.ml[41,1091+64]..src/longident.ml[41,1091+77])
                                        Texp_construct "Ldot"
                                        [
                                          expression (src/longident.ml[41,1091+70]..src/longident.ml[41,1091+73])
                                            Texp_ident "acc/1225"
                                          expression (src/longident.ml[41,1091+75]..src/longident.ml[41,1091+76])
                                            Texp_ident "s/1226"
                                        ]
                                  ]
                            ]
                        <arg>
                          Labelled "init"
                          expression (src/longident.ml[41,1091+42]..src/longident.ml[41,1091+46])
                            Texp_ident "init/1150"
                        <arg>
                          Nolabel
                          expression (src/longident.ml[41,1091+39]..src/longident.ml[41,1091+40])
                            Texp_ident "l/1151"
                      ]
                ]
          ]
    ]
  structure_item (src/longident.ml[44,1235+0]..src/longident.ml[47,1324+42])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/longident.ml[44,1235+4]..src/longident.ml[44,1235+16])
          Tpat_var "parse_simple/1227"
        expression (src/longident.ml[44,1235+17]..src/longident.ml[47,1324+42]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/longident.ml[44,1235+17]..src/longident.ml[44,1235+18])
                Tpat_var "s/1229"
              expression (src/longident.ml[45,1256+2]..src/longident.ml[47,1324+42])
                Texp_match
                expression (src/longident.ml[45,1256+8]..src/longident.ml[45,1256+39])
                  Texp_apply
                  expression (src/longident.ml[45,1256+8]..src/longident.ml[45,1256+28])
                    Texp_ident "Ppxlib__!.Import.String.split_on_char"
                  [
                    <arg>
                      Nolabel
                      expression (src/longident.ml[45,1256+29]..src/longident.ml[45,1256+30])
                        Texp_ident "s/1229"
                    <arg>
                      Labelled "sep"
                      expression (src/longident.ml[45,1256+36]..src/longident.ml[45,1256+39])
                        Texp_constant Const_char 2e
                  ]
                [
                  <case>
                    pattern (src/longident.ml[46,1301+4]..src/longident.ml[46,1301+6])
                      Tpat_value
                      pattern (src/longident.ml[46,1301+4]..src/longident.ml[46,1301+6])
                        Tpat_construct "[]"
                        []
                    expression (src/longident.ml[46,1301+10]..src/longident.ml[46,1301+22])
                      Texp_assert                      expression (src/longident.ml[46,1301+17]..src/longident.ml[46,1301+22])
                        Texp_construct "false"
                        []
                  <case>
                    pattern (src/longident.ml[47,1324+4]..src/longident.ml[47,1324+10])
                      Tpat_value
                      pattern (src/longident.ml[47,1324+4]..src/longident.ml[47,1324+10])
                        Tpat_construct "::"
                        [
                          pattern (src/longident.ml[47,1324+4]..src/longident.ml[47,1324+5])
                            Tpat_var "s/1230"
                          pattern (src/longident.ml[47,1324+9]..src/longident.ml[47,1324+10])
                            Tpat_var "l/1231"
                        ]
                    expression (src/longident.ml[47,1324+14]..src/longident.ml[47,1324+42])
                      Texp_apply
                      expression (src/longident.ml[47,1324+14]..src/longident.ml[47,1324+23])
                        Texp_ident "unflatten/1148"
                      [
                        <arg>
                          Labelled "init"
                          expression (src/longident.ml[47,1324+30]..src/longident.ml[47,1324+40])
                            Texp_construct "Lident"
                            [
                              expression (src/longident.ml[47,1324+38]..src/longident.ml[47,1324+39])
                                Texp_ident "s/1230"
                            ]
                        <arg>
                          Nolabel
                          expression (src/longident.ml[47,1324+41]..src/longident.ml[47,1324+42])
                            Texp_ident "l/1231"
                      ]
                ]
                []
          ]
    ]
  structure_item (src/longident.ml[50,1416+0]..src/longident.ml[69,2111+63])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/longident.ml[50,1416+4]..src/longident.ml[50,1416+9])
          Tpat_var "parse/1232"
        expression (src/longident.ml[50,1416+10]..src/longident.ml[69,2111+63]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/longident.ml[50,1416+10]..src/longident.ml[50,1416+11])
                Tpat_var "s/1234"
              expression (src/longident.ml[51,1430+2]..src/longident.ml[69,2111+63])
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/longident.ml[51,1430+6]..src/longident.ml[51,1430+13])
                      Tpat_var "invalid/1235"
                    expression (src/longident.ml[51,1430+14]..src/longident.ml[52,1449+63]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/longident.ml[51,1430+14]..src/longident.ml[51,1430+16])
                            Tpat_construct "()"
                            []
                          expression (src/longident.ml[52,1449+4]..src/longident.ml[52,1449+63])
                            Texp_apply
                            expression (src/longident.ml[52,1449+4]..src/longident.ml[52,1449+15])
                              Texp_ident "Stdlib!.invalid_arg"
                            [
                              <arg>
                                Nolabel
                                expression (src/longident.ml[52,1449+16]..src/longident.ml[52,1449+63])
                                  Texp_apply
                                  expression (src/longident.ml[52,1449+17]..src/longident.ml[52,1449+31])
                                    Texp_ident "Stdlib!.Printf.sprintf"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/longident.ml[52,1449+32]..src/longident.ml[52,1449+60])
                                        Texp_construct "CamlinternalFormatBasics.Format"
                                        [
                                          expression (src/longident.ml[52,1449+32]..src/longident.ml[52,1449+60]) ghost
                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                            [
                                              expression (src/longident.ml[52,1449+32]..src/longident.ml[52,1449+60]) ghost
                                                Texp_constant Const_string("Ppxlib.Longident.parse: ",(src/longident.ml[52,1449+32]..src/longident.ml[52,1449+60]) ghost,None)
                                              expression (src/longident.ml[52,1449+32]..src/longident.ml[52,1449+60]) ghost
                                                Texp_construct "CamlinternalFormatBasics.Caml_string"
                                                [
                                                  expression (src/longident.ml[52,1449+32]..src/longident.ml[52,1449+60]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                                    []
                                                  expression (src/longident.ml[52,1449+32]..src/longident.ml[52,1449+60]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                    []
                                                ]
                                            ]
                                          expression (src/longident.ml[52,1449+32]..src/longident.ml[52,1449+60]) ghost
                                            Texp_constant Const_string("Ppxlib.Longident.parse: %S",(src/longident.ml[52,1449+32]..src/longident.ml[52,1449+60]) ghost,None)
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/longident.ml[52,1449+61]..src/longident.ml[52,1449+62])
                                        Texp_ident "s/1234"
                                  ]
                            ]
                      ]
                ]
                expression (src/longident.ml[54,1518+2]..src/longident.ml[69,2111+63])
                  Texp_match
                  expression (src/longident.ml[54,1518+8]..src/longident.ml[54,1518+57])
                    Texp_tuple
                    [
                      expression (src/longident.ml[54,1518+9]..src/longident.ml[54,1518+31])
                        Texp_apply
                        expression (src/longident.ml[54,1518+9]..src/longident.ml[54,1518+25])
                          Texp_ident "Ppxlib__!.Import.String.index_opt"
                        [
                          <arg>
                            Nolabel
                            expression (src/longident.ml[54,1518+26]..src/longident.ml[54,1518+27])
                              Texp_ident "s/1234"
                          <arg>
                            Nolabel
                            expression (src/longident.ml[54,1518+28]..src/longident.ml[54,1518+31])
                              Texp_constant Const_char 28
                        ]
                      expression (src/longident.ml[54,1518+33]..src/longident.ml[54,1518+56])
                        Texp_apply
                        expression (src/longident.ml[54,1518+33]..src/longident.ml[54,1518+50])
                          Texp_ident "Ppxlib__!.Import.String.rindex_opt"
                        [
                          <arg>
                            Nolabel
                            expression (src/longident.ml[54,1518+51]..src/longident.ml[54,1518+52])
                              Texp_ident "s/1234"
                          <arg>
                            Nolabel
                            expression (src/longident.ml[54,1518+53]..src/longident.ml[54,1518+56])
                              Texp_constant Const_char 29
                        ]
                    ]
                  [
                    <case>
                      pattern (src/longident.ml[55,1581+4]..src/longident.ml[55,1581+14])
                        Tpat_value
                        pattern (src/longident.ml[55,1581+4]..src/longident.ml[55,1581+14])
                          Tpat_tuple
                          [
                            pattern (src/longident.ml[55,1581+4]..src/longident.ml[55,1581+8])
                              Tpat_construct "None"
                              []
                            pattern (src/longident.ml[55,1581+10]..src/longident.ml[55,1581+14])
                              Tpat_construct "None"
                              []
                          ]
                      expression (src/longident.ml[55,1581+18]..src/longident.ml[55,1581+32])
                        Texp_apply
                        expression (src/longident.ml[55,1581+18]..src/longident.ml[55,1581+30])
                          Texp_ident "parse_simple/1227"
                        [
                          <arg>
                            Nolabel
                            expression (src/longident.ml[55,1581+31]..src/longident.ml[55,1581+32])
                              Texp_ident "s/1234"
                        ]
                    <case>
                      pattern (src/longident.ml[56,1614+4]..src/longident.ml[56,1614+21])
                        Tpat_or
                        pattern (src/longident.ml[56,1614+4]..src/longident.ml[56,1614+11])
                          Tpat_value
                          pattern (src/longident.ml[56,1614+4]..src/longident.ml[56,1614+11])
                            Tpat_tuple
                            [
                              pattern (src/longident.ml[56,1614+4]..src/longident.ml[56,1614+8])
                                Tpat_construct "None"
                                []
                              pattern (src/longident.ml[56,1614+10]..src/longident.ml[56,1614+11])
                                Tpat_any
                            ]
                        pattern (src/longident.ml[56,1614+14]..src/longident.ml[56,1614+21])
                          Tpat_value
                          pattern (src/longident.ml[56,1614+14]..src/longident.ml[56,1614+21])
                            Tpat_tuple
                            [
                              pattern (src/longident.ml[56,1614+14]..src/longident.ml[56,1614+15])
                                Tpat_any
                              pattern (src/longident.ml[56,1614+17]..src/longident.ml[56,1614+21])
                                Tpat_construct "None"
                                []
                            ]
                      expression (src/longident.ml[56,1614+25]..src/longident.ml[56,1614+35])
                        Texp_apply
                        expression (src/longident.ml[56,1614+25]..src/longident.ml[56,1614+32])
                          Texp_ident "invalid/1235"
                        [
                          <arg>
                            Nolabel
                            expression (src/longident.ml[56,1614+33]..src/longident.ml[56,1614+35])
                              Texp_construct "()"
                              []
                        ]
                    <case>
                      pattern (src/longident.ml[57,1650+4]..src/longident.ml[57,1650+18])
                        Tpat_value
                        pattern (src/longident.ml[57,1650+4]..src/longident.ml[57,1650+18])
                          Tpat_tuple
                          [
                            pattern (src/longident.ml[57,1650+4]..src/longident.ml[57,1650+10])
                              Tpat_construct "Some"
                              [
                                pattern (src/longident.ml[57,1650+9]..src/longident.ml[57,1650+10])
                                  Tpat_var "l/1238"
                              ]
                            pattern (src/longident.ml[57,1650+12]..src/longident.ml[57,1650+18])
                              Tpat_construct "Some"
                              [
                                pattern (src/longident.ml[57,1650+17]..src/longident.ml[57,1650+18])
                                  Tpat_var "r/1239"
                              ]
                          ]
                      expression (src/longident.ml[57,1650+22]..src/longident.ml[69,2111+63])
                        Texp_sequence
                        expression (src/longident.ml[58,1674+6]..src/longident.ml[58,1674+55])
                          Texp_ifthenelse
                          expression (src/longident.ml[58,1674+9]..src/longident.ml[58,1674+39])
                            Texp_open Fresh
                            module_expr (src/longident.ml[58,1674+9]..src/longident.ml[58,1674+12])
                              Tmod_ident "Ppxlib__!.Import.Int"
                            expression (src/longident.ml[58,1674+14]..src/longident.ml[58,1674+38])
                              Texp_apply
                              expression (src/longident.ml[58,1674+16]..src/longident.ml[58,1674+18])
                                Texp_ident "Ppxlib__!.Import.Int.<>"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/longident.ml[58,1674+14]..src/longident.ml[58,1674+15])
                                    Texp_ident "r/1239"
                                <arg>
                                  Nolabel
                                  expression (src/longident.ml[58,1674+19]..src/longident.ml[58,1674+38])
                                    Texp_apply
                                    expression (src/longident.ml[58,1674+35]..src/longident.ml[58,1674+36])
                                      Texp_ident "Stdlib!.-"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/longident.ml[58,1674+19]..src/longident.ml[58,1674+34])
                                          Texp_apply
                                          expression (src/longident.ml[58,1674+19]..src/longident.ml[58,1674+32])
                                            Texp_ident "Ppxlib__!.Import.String.length"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/longident.ml[58,1674+33]..src/longident.ml[58,1674+34])
                                                Texp_ident "s/1234"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/longident.ml[58,1674+37]..src/longident.ml[58,1674+38])
                                          Texp_constant Const_int 1
                                    ]
                              ]
                          expression (src/longident.ml[58,1674+45]..src/longident.ml[58,1674+55])
                            Texp_apply
                            expression (src/longident.ml[58,1674+45]..src/longident.ml[58,1674+52])
                              Texp_ident "invalid/1235"
                            [
                              <arg>
                                Nolabel
                                expression (src/longident.ml[58,1674+53]..src/longident.ml[58,1674+55])
                                  Texp_construct "()"
                                  []
                            ]
                          None
                        expression (src/longident.ml[59,1731+6]..src/longident.ml[69,2111+62])
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (src/longident.ml[59,1731+10]..src/longident.ml[59,1731+15])
                                Tpat_var "group/1252"
                              expression (src/longident.ml[60,1749+8]..src/longident.ml[61,1786+69])
                                Texp_ifthenelse
                                expression (src/longident.ml[60,1749+11]..src/longident.ml[60,1749+26])
                                  Texp_open Fresh
                                  module_expr (src/longident.ml[60,1749+11]..src/longident.ml[60,1749+14])
                                    Tmod_ident "Ppxlib__!.Import.Int"
                                  expression (src/longident.ml[60,1749+16]..src/longident.ml[60,1749+25])
                                    Texp_apply
                                    expression (src/longident.ml[60,1749+18]..src/longident.ml[60,1749+19])
                                      Texp_ident "Ppxlib__!.Import.Int.="
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/longident.ml[60,1749+16]..src/longident.ml[60,1749+17])
                                          Texp_ident "r/1239"
                                      <arg>
                                        Nolabel
                                        expression (src/longident.ml[60,1749+20]..src/longident.ml[60,1749+25])
                                          Texp_apply
                                          expression (src/longident.ml[60,1749+22]..src/longident.ml[60,1749+23])
                                            Texp_ident "Stdlib!.+"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/longident.ml[60,1749+20]..src/longident.ml[60,1749+21])
                                                Texp_ident "l/1238"
                                            <arg>
                                              Nolabel
                                              expression (src/longident.ml[60,1749+24]..src/longident.ml[60,1749+25])
                                                Texp_constant Const_int 1
                                          ]
                                    ]
                                expression (src/longident.ml[60,1749+32]..src/longident.ml[60,1749+36])
                                  Texp_constant Const_string("()",(src/longident.ml[60,1749+33]..src/longident.ml[60,1749+35]),None)
                                Some
                                  expression (src/longident.ml[61,1786+13]..src/longident.ml[61,1786+69])
                                    Texp_apply
                                    expression (src/longident.ml[61,1786+13]..src/longident.ml[61,1786+24])
                                      Texp_ident "Ppxlib__!.Import.String.trim"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/longident.ml[61,1786+25]..src/longident.ml[61,1786+69])
                                          Texp_apply
                                          expression (src/longident.ml[61,1786+26]..src/longident.ml[61,1786+36])
                                            Texp_ident "Ppxlib__!.Import.String.sub"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/longident.ml[61,1786+37]..src/longident.ml[61,1786+38])
                                                Texp_ident "s/1234"
                                            <arg>
                                              Labelled "pos"
                                              expression (src/longident.ml[61,1786+44]..src/longident.ml[61,1786+51])
                                                Texp_apply
                                                expression (src/longident.ml[61,1786+47]..src/longident.ml[61,1786+48])
                                                  Texp_ident "Stdlib!.+"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/longident.ml[61,1786+45]..src/longident.ml[61,1786+46])
                                                      Texp_ident "l/1238"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/longident.ml[61,1786+49]..src/longident.ml[61,1786+50])
                                                      Texp_constant Const_int 1
                                                ]
                                            <arg>
                                              Labelled "len"
                                              expression (src/longident.ml[61,1786+57]..src/longident.ml[61,1786+68])
                                                Texp_apply
                                                expression (src/longident.ml[61,1786+64]..src/longident.ml[61,1786+65])
                                                  Texp_ident "Stdlib!.-"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/longident.ml[61,1786+58]..src/longident.ml[61,1786+63])
                                                      Texp_apply
                                                      expression (src/longident.ml[61,1786+60]..src/longident.ml[61,1786+61])
                                                        Texp_ident "Stdlib!.-"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/longident.ml[61,1786+58]..src/longident.ml[61,1786+59])
                                                            Texp_ident "r/1239"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/longident.ml[61,1786+62]..src/longident.ml[61,1786+63])
                                                            Texp_ident "l/1238"
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (src/longident.ml[61,1786+66]..src/longident.ml[61,1786+67])
                                                      Texp_constant Const_int 1
                                                ]
                                          ]
                                    ]
                          ]
                          expression (src/longident.ml[63,1865+6]..src/longident.ml[69,2111+62])
                            Texp_ifthenelse
                            expression (src/longident.ml[63,1865+9]..src/longident.ml[63,1865+20])
                              Texp_open Fresh
                              module_expr (src/longident.ml[63,1865+9]..src/longident.ml[63,1865+12])
                                Tmod_ident "Ppxlib__!.Import.Int"
                              expression (src/longident.ml[63,1865+14]..src/longident.ml[63,1865+19])
                                Texp_apply
                                expression (src/longident.ml[63,1865+16]..src/longident.ml[63,1865+17])
                                  Texp_ident "Ppxlib__!.Import.Int.="
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/longident.ml[63,1865+14]..src/longident.ml[63,1865+15])
                                      Texp_ident "l/1238"
                                  <arg>
                                    Nolabel
                                    expression (src/longident.ml[63,1865+18]..src/longident.ml[63,1865+19])
                                      Texp_constant Const_int 0
                                ]
                            expression (src/longident.ml[63,1865+26]..src/longident.ml[63,1865+38])
                              Texp_construct "Lident"
                              [
                                expression (src/longident.ml[63,1865+33]..src/longident.ml[63,1865+38])
                                  Texp_ident "group/1252"
                              ]
                            Some
                              expression (src/longident.ml[64,1904+11]..src/longident.ml[69,2111+62])
                                Texp_ifthenelse
                                expression (src/longident.ml[64,1904+14]..src/longident.ml[64,1904+37])
                                  Texp_open Fresh
                                  module_expr (src/longident.ml[64,1904+14]..src/longident.ml[64,1904+18])
                                    Tmod_ident "Ppxlib__!.Import.Char"
                                  expression (src/longident.ml[64,1904+20]..src/longident.ml[64,1904+36])
                                    Texp_apply
                                    expression (src/longident.ml[64,1904+30]..src/longident.ml[64,1904+32])
                                      Texp_ident "Ppxlib__!.Import.Char.<>"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/longident.ml[64,1904+20]..src/longident.ml[64,1904+29])
                                          Texp_apply
                                          expression (src/longident.ml[64,1904+20]..src/longident.ml[64,1904+29]) ghost
                                            Texp_ident "Ppxlib__!.Import.String.get"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/longident.ml[64,1904+20]..src/longident.ml[64,1904+21])
                                                Texp_ident "s/1234"
                                            <arg>
                                              Nolabel
                                              expression (src/longident.ml[64,1904+23]..src/longident.ml[64,1904+28])
                                                Texp_apply
                                                expression (src/longident.ml[64,1904+25]..src/longident.ml[64,1904+26])
                                                  Texp_ident "Stdlib!.-"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/longident.ml[64,1904+23]..src/longident.ml[64,1904+24])
                                                      Texp_ident "l/1238"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/longident.ml[64,1904+27]..src/longident.ml[64,1904+28])
                                                      Texp_constant Const_int 1
                                                ]
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/longident.ml[64,1904+33]..src/longident.ml[64,1904+36])
                                          Texp_constant Const_char 2e
                                    ]
                                expression (src/longident.ml[64,1904+43]..src/longident.ml[64,1904+53])
                                  Texp_apply
                                  expression (src/longident.ml[64,1904+43]..src/longident.ml[64,1904+50])
                                    Texp_ident "invalid/1235"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/longident.ml[64,1904+51]..src/longident.ml[64,1904+53])
                                        Texp_construct "()"
                                        []
                                  ]
                                Some
                                  expression (src/longident.ml[66,1969+8]..src/longident.ml[69,2111+62])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/longident.ml[66,1969+12]..src/longident.ml[66,1969+18])
                                          Tpat_var "before/1273"
                                        expression (src/longident.ml[66,1969+21]..src/longident.ml[66,1969+53])
                                          Texp_apply
                                          expression (src/longident.ml[66,1969+21]..src/longident.ml[66,1969+31])
                                            Texp_ident "Ppxlib__!.Import.String.sub"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/longident.ml[66,1969+32]..src/longident.ml[66,1969+33])
                                                Texp_ident "s/1234"
                                            <arg>
                                              Labelled "pos"
                                              expression (src/longident.ml[66,1969+39]..src/longident.ml[66,1969+40])
                                                Texp_constant Const_int 0
                                            <arg>
                                              Labelled "len"
                                              expression (src/longident.ml[66,1969+46]..src/longident.ml[66,1969+53])
                                                Texp_apply
                                                expression (src/longident.ml[66,1969+49]..src/longident.ml[66,1969+50])
                                                  Texp_ident "Stdlib!.-"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/longident.ml[66,1969+47]..src/longident.ml[66,1969+48])
                                                      Texp_ident "l/1238"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/longident.ml[66,1969+51]..src/longident.ml[66,1969+52])
                                                      Texp_constant Const_int 1
                                                ]
                                          ]
                                    ]
                                    expression (src/longident.ml[67,2026+8]..src/longident.ml[69,2111+62])
                                      Texp_match
                                      expression (src/longident.ml[67,2026+14]..src/longident.ml[67,2026+50])
                                        Texp_apply
                                        expression (src/longident.ml[67,2026+14]..src/longident.ml[67,2026+34])
                                          Texp_ident "Ppxlib__!.Import.String.split_on_char"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/longident.ml[67,2026+35]..src/longident.ml[67,2026+41])
                                              Texp_ident "before/1273"
                                          <arg>
                                            Labelled "sep"
                                            expression (src/longident.ml[67,2026+47]..src/longident.ml[67,2026+50])
                                              Texp_constant Const_char 2e
                                        ]
                                      [
                                        <case>
                                          pattern (src/longident.ml[68,2082+10]..src/longident.ml[68,2082+12])
                                            Tpat_value
                                            pattern (src/longident.ml[68,2082+10]..src/longident.ml[68,2082+12])
                                              Tpat_construct "[]"
                                              []
                                          expression (src/longident.ml[68,2082+16]..src/longident.ml[68,2082+28])
                                            Texp_assert                                            expression (src/longident.ml[68,2082+23]..src/longident.ml[68,2082+28])
                                              Texp_construct "false"
                                              []
                                        <case>
                                          pattern (src/longident.ml[69,2111+10]..src/longident.ml[69,2111+16])
                                            Tpat_value
                                            pattern (src/longident.ml[69,2111+10]..src/longident.ml[69,2111+16])
                                              Tpat_construct "::"
                                              [
                                                pattern (src/longident.ml[69,2111+10]..src/longident.ml[69,2111+11])
                                                  Tpat_var "s/1274"
                                                pattern (src/longident.ml[69,2111+15]..src/longident.ml[69,2111+16])
                                                  Tpat_var "l/1275"
                                              ]
                                          expression (src/longident.ml[69,2111+20]..src/longident.ml[69,2111+62])
                                            Texp_construct "Ldot"
                                            [
                                              expression (src/longident.ml[69,2111+26]..src/longident.ml[69,2111+54])
                                                Texp_apply
                                                expression (src/longident.ml[69,2111+26]..src/longident.ml[69,2111+35])
                                                  Texp_ident "unflatten/1148"
                                                [
                                                  <arg>
                                                    Labelled "init"
                                                    expression (src/longident.ml[69,2111+42]..src/longident.ml[69,2111+52])
                                                      Texp_construct "Lident"
                                                      [
                                                        expression (src/longident.ml[69,2111+50]..src/longident.ml[69,2111+51])
                                                          Texp_ident "s/1274"
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (src/longident.ml[69,2111+53]..src/longident.ml[69,2111+54])
                                                      Texp_ident "l/1275"
                                                ]
                                              expression (src/longident.ml[69,2111+56]..src/longident.ml[69,2111+61])
                                                Texp_ident "group/1252"
                                            ]
                                      ]
                                      []
                  ]
                  []
          ]
    ]
  structure_item (src/longident.ml[71,2176+0]..src/longident.ml[71,2176+25])
    Tstr_module
    Map/1633
      module_expr (src/longident.ml[71,2176+13]..src/longident.ml[71,2176+25])
        Tmod_apply
        module_expr (src/longident.ml[71,2176+13]..src/longident.ml[71,2176+21])
          module_expr (src/longident.ml[71,2176+13]..src/longident.ml[71,2176+21])
            Tmod_ident "Stdlib!.Map.Make"
        module_expr (src/longident.ml[71,2176+23]..src/longident.ml[71,2176+24])
          Tmod_ident "T/1126"
  structure_item (src/longident.ml[72,2202+0]..src/longident.ml[72,2202+25])
    Tstr_module
    Set/2007
      module_expr (src/longident.ml[72,2202+13]..src/longident.ml[72,2202+25])
        Tmod_apply
        module_expr (src/longident.ml[72,2202+13]..src/longident.ml[72,2202+21])
          module_expr (src/longident.ml[72,2202+13]..src/longident.ml[72,2202+21])
            Tmod_ident "Stdlib!.Set.Make"
        module_expr (src/longident.ml[72,2202+23]..src/longident.ml[72,2202+24])
          Tmod_ident "T/1126"
]

(seq
  (seq
    (let
      (compare/818 = (field_imm 0 (field_imm 70 (global Ppxlib__Import!))))
      (setfield_ptr(root-init) 15 (global Ppxlib__Longident!) compare/818))
    (let
      (is_normal_ident_char/875 =
         (function param/877[int]
           (catch
             (catch
               (if (>= param/877 65)
                 (let (switcher/9052 =a (-91+ param/877))
                   (if (isout 5 switcher/9052)
                     (if (>= switcher/9052 32) (exit 2) (exit 1))
                     (if (!= switcher/9052 4) (exit 2) (exit 1))))
                 (if (>= param/877 48)
                   (if (>= param/877 58) (exit 2) (exit 1))
                   (if (!= param/877 39) (exit 2) (exit 1))))
              with (2) 0)
            with (1) 1)))
      (setfield_ptr(root-init) 16 (global Ppxlib__Longident!)
        is_normal_ident_char/875))
    (let
      (is_normal_ident/878 =
         (function string/880
           (catch
             (catch
               (stringswitch string/880
                case "asr": (exit 3)
                case "land": (exit 3)
                case "lor": (exit 3)
                case "lsl": (exit 3)
                case "lsr": (exit 3)
                case "lxor": (exit 3)
                case "mod": (exit 3)
                case "or": (exit 3)
                default: (exit 4))
              with (4)
               (apply (field_imm 36 (field_imm 96 (global Ppxlib__Import!)))
                 string/880 (field_imm 16 (global Ppxlib__Longident!))))
            with (3) 0)))
      (setfield_ptr(root-init) 17 (global Ppxlib__Longident!)
        is_normal_ident/878))
    (let
      (short_name/1037 =
         (function string/1039
           (if (apply (field_imm 17 (global Ppxlib__Longident!)) string/1039)
             string/1039
             (apply (field_imm 30 (global Stdlib!)) "( "
               (apply (field_imm 30 (global Stdlib!)) string/1039 " )")))))
      (setfield_ptr(root-init) 18 (global Ppxlib__Longident!)
        short_name/1037))
    (letrec
      (name/1040
         (function param/1079
           (switch* param/1079
            case tag 0:
             (let (s/1041 =a (field_imm 0 param/1079))
               (apply (field_imm 18 (global Ppxlib__Longident!)) s/1041))
            case tag 1:
             (let
               (b/1043 =a (field_imm 1 param/1079)
                a/1042 =a (field_imm 0 param/1079))
               (apply (field_imm 30 (global Stdlib!))
                 (apply name/1040 a/1042)
                 (apply (field_imm 30 (global Stdlib!)) "."
                   (apply (field_imm 18 (global Ppxlib__Longident!)) b/1043))))
            case tag 2:
             (let
               (b/1045 =a (field_imm 1 param/1079)
                a/1044 =a (field_imm 0 param/1079))
               (apply (field_imm 3 (global Stdlib__printf!))
                 [0: [2: 0 [12: '(' [2: 0 [12: ')' 0]]]] "%s(%s)"]
                 (apply name/1040 a/1044) (apply name/1040 b/1045))))))
      (setfield_ptr(root-init) 19 (global Ppxlib__Longident!) name/1040))
    (let
      (sexp_of_t/1080 =
         (function t/1082
           (makeblock 0
             (apply (field_imm 19 (global Ppxlib__Longident!)) t/1082))))
      (setfield_ptr(root-init) 20 (global Ppxlib__Longident!) sexp_of_t/1080))
    0)
  (let
    (T/1126 =
       (makeblock 0 (field_imm 15 (global Ppxlib__Longident!))
         (field_imm 16 (global Ppxlib__Longident!))
         (field_imm 17 (global Ppxlib__Longident!))
         (field_imm 18 (global Ppxlib__Longident!))
         (field_imm 19 (global Ppxlib__Longident!))
         (field_imm 20 (global Ppxlib__Longident!))))
    (seq (setfield_ptr(root-init) 8 (global Ppxlib__Longident!) T/1126)
      (let
        (include/9053 = (field_imm 8 (global Ppxlib__Longident!))
         compare/1128 =a (field_mut 0 include/9053))
        (seq
          (setfield_ptr(root-init) 0 (global Ppxlib__Longident!)
            compare/1128)
          (let (is_normal_ident_char/1129 =a (field_mut 1 include/9053))
            (seq
              (setfield_ptr(root-init) 9 (global Ppxlib__Longident!)
                is_normal_ident_char/1129)
              (let (is_normal_ident/1130 =a (field_mut 2 include/9053))
                (seq
                  (setfield_ptr(root-init) 10 (global Ppxlib__Longident!)
                    is_normal_ident/1130)
                  (let (short_name/1131 =a (field_mut 3 include/9053))
                    (seq
                      (setfield_ptr(root-init) 11 (global Ppxlib__Longident!)
                        short_name/1131)
                      (let (name/1132 =a (field_mut 4 include/9053))
                        (seq
                          (setfield_ptr(root-init) 5
                            (global Ppxlib__Longident!) name/1132)
                          (let (sexp_of_t/1133 =a (field_mut 5 include/9053))
                            (seq
                              (setfield_ptr(root-init) 1
                                (global Ppxlib__Longident!) sexp_of_t/1133)
                              (letrec
                                (flat/1134
                                   (function accu/1135 param/1139
                                     (switch* param/1139
                                      case tag 0:
                                       (let
                                         (s/1136 =a (field_imm 0 param/1139))
                                         (makeblock 0 s/1136 accu/1135))
                                      case tag 1:
                                       (let
                                         (s/1138 =a (field_imm 1 param/1139)
                                          lid/1137 =a
                                            (field_imm 0 param/1139))
                                         (apply flat/1134
                                           (makeblock 0 s/1138 accu/1135)
                                           lid/1137))
                                      case tag 2:
                                       (let
                                         (*match*/9055 =a
                                            (field_imm 1 param/1139)
                                          *match*/9054 =a
                                            (field_imm 0 param/1139))
                                         (apply
                                           (field_imm 0 (global Stdlib!))
                                           "Ppxlib.Longident.flatten")))))
                                (setfield_ptr(root-init) 12
                                  (global Ppxlib__Longident!) flat/1134))
                              (let
                                (flatten_exn/1140 =
                                   (function lid/1142
                                     (apply
                                       (field_imm 12
                                         (global Ppxlib__Longident!))
                                       0 lid/1142)))
                                (setfield_ptr(root-init) 2
                                  (global Ppxlib__Longident!)
                                  flatten_exn/1140))
                              (let
                                (last_exn/1143 =
                                   (function param/1147
                                     (switch* param/1147
                                      case tag 0:
                                       (let
                                         (s/1145 =a (field_imm 0 param/1147))
                                         s/1145)
                                      case tag 1:
                                       (let
                                         (s/1146 =a (field_imm 1 param/1147)
                                          *match*/9056 =a
                                            (field_imm 0 param/1147))
                                         s/1146)
                                      case tag 2:
                                       (let
                                         (*match*/9058 =a
                                            (field_imm 1 param/1147)
                                          *match*/9057 =a
                                            (field_imm 0 param/1147))
                                         (apply
                                           (field_imm 0 (global Stdlib!))
                                           "Ppxlib.Longident.flatten")))))
                                (setfield_ptr(root-init) 3
                                  (global Ppxlib__Longident!) last_exn/1143))
                              (let
                                (unflatten/1148 =
                                   (function init/1150 l/1151
                                     (apply
                                       (field_imm 16
                                         (field_imm 91
                                           (global Ppxlib__Import!)))
                                       (function acc/1225 s/1226
                                         (makeblock 1 acc/1225 s/1226))
                                       init/1150 l/1151)))
                                (setfield_ptr(root-init) 13
                                  (global Ppxlib__Longident!) unflatten/1148))
                              (let
                                (parse_simple/1227 =
                                   (function s/1229
                                     (let
                                       (*match*/9059 =
                                          (apply
                                            (field_imm 45
                                              (field_imm 96
                                                (global Ppxlib__Import!)))
                                            s/1229 '.'))
                                       (if *match*/9059
                                         (let
                                           (l/1231 =a
                                              (field_imm 1 *match*/9059)
                                            s/1230 =a
                                              (field_imm 0 *match*/9059))
                                           (apply
                                             (field_imm 13
                                               (global Ppxlib__Longident!))
                                             (makeblock 0 s/1230) l/1231))
                                         (raise
                                           (makeblock 0
                                             (global Assert_failure/30!)
                                             [0: "src/longident.ml" 46 10]))))))
                                (setfield_ptr(root-init) 14
                                  (global Ppxlib__Longident!)
                                  parse_simple/1227))
                              (let
                                (parse/1232 =
                                   (function s/1234
                                     (let
                                       (invalid/1235 =
                                          (function param/1237
                                            (apply
                                              (field_imm 0 (global Stdlib!))
                                              (apply
                                                (field_imm 3
                                                  (global Stdlib__printf!))
                                                [0:
                                                 [11:
                                                  "Ppxlib.Longident.parse: "
                                                  [3: 0 0]]
                                                 "Ppxlib.Longident.parse: %S"]
                                                s/1234)))
                                        *match*/9061 =
                                          (apply
                                            (field_imm 37
                                              (field_imm 96
                                                (global Ppxlib__Import!)))
                                            s/1234 '(')
                                        *match*/9062 =
                                          (apply
                                            (field_imm 38
                                              (field_imm 96
                                                (global Ppxlib__Import!)))
                                            s/1234 ')')
                                        *match*/9063 = *match*/9061
                                        *match*/9064 = *match*/9062)
                                       (catch
                                         (catch
                                           (if *match*/9063
                                             (if *match*/9064
                                               (let
                                                 (r/1239 =a
                                                    (field_imm 0
                                                      *match*/9064)
                                                  l/1238 =a
                                                    (field_imm 0
                                                      *match*/9063))
                                                 (seq
                                                   (if
                                                     (apply
                                                       (field_imm 7
                                                         (field_imm 89
                                                           (global Ppxlib__Import!)))
                                                       r/1239
                                                       (-
                                                         (string.length
                                                           s/1234)
                                                         1))
                                                     (apply invalid/1235 0)
                                                     0)
                                                   (let
                                                     (group/1252 =
                                                        (if
                                                          (apply
                                                            (field_imm 4
                                                              (field_imm 89
                                                                (global Ppxlib__Import!)))
                                                            r/1239
                                                            (+ l/1238 1))
                                                          "()"
                                                          (apply
                                                            (field_imm 9
                                                              (field_imm 96
                                                                (global Ppxlib__Import!)))
                                                            (apply
                                                              (field_imm 6
                                                                (field_imm 96
                                                                  (global Ppxlib__Import!)))
                                                              s/1234
                                                              (+ l/1238 1)
                                                              (-
                                                                (- r/1239
                                                                  l/1238)
                                                                1)))))
                                                     (if
                                                       (apply
                                                         (field_imm 4
                                                           (field_imm 89
                                                             (global Ppxlib__Import!)))
                                                         l/1238 0)
                                                       (makeblock 0
                                                         group/1252)
                                                       (if
                                                         (apply
                                                           (field_imm 11
                                                             (field_imm 83
                                                               (global Ppxlib__Import!)))
                                                           (string.get s/1234
                                                             (- l/1238 1))
                                                           '.')
                                                         (apply invalid/1235
                                                           0)
                                                         (let
                                                           (before/1273 =
                                                              (apply
                                                                (field_imm 6
                                                                  (field_imm 96
                                                                    (global Ppxlib__Import!)))
                                                                s/1234 0
                                                                (- l/1238 1))
                                                            *match*/9060 =
                                                              (apply
                                                                (field_imm 45
                                                                  (field_imm 96
                                                                    (global Ppxlib__Import!)))
                                                                before/1273
                                                                '.'))
                                                           (if *match*/9060
                                                             (let
                                                               (l/1275 =a
                                                                  (field_imm 1
                                                                    *match*/9060)
                                                                s/1274 =a
                                                                  (field_imm 0
                                                                    *match*/9060))
                                                               (makeblock 1
                                                                 (apply
                                                                   (field_imm 13
                                                                    (global Ppxlib__Longident!))
                                                                   (makeblock 0
                                                                    s/1274)
                                                                   l/1275)
                                                                 group/1252))
                                                             (raise
                                                               (makeblock 0
                                                                 (global Assert_failure/30!)
                                                                 [0:
                                                                  "src/longident.ml"
                                                                  68 16])))))))))
                                               (exit 6))
                                             (catch
                                               (if *match*/9064 (exit 7)
                                                 (apply
                                                   (field_imm 14
                                                     (global Ppxlib__Longident!))
                                                   s/1234))
                                              with (7) (exit 5)))
                                          with (6) (exit 5))
                                        with (5) (apply invalid/1235 0)))))
                                (setfield_ptr(root-init) 4
                                  (global Ppxlib__Longident!) parse/1232))
                              (let
                                (Map/1633 =
                                   (apply
                                     (let
                                       (let/9065 =
                                          (field_imm 0 (global Stdlib__map!)))
                                       (field_imm 0 (global Stdlib__map!)))
                                     (makeblock 0
                                       (field_mut 0
                                         (field_imm 8
                                           (global Ppxlib__Longident!))))))
                                (seq
                                  (setfield_ptr(root-init) 6
                                    (global Ppxlib__Longident!) Map/1633)
                                  (let
                                    (Set/2007 =
                                       (apply
                                         (let
                                           (let/9066 =
                                              (field_imm 0
                                                (global Stdlib__set!)))
                                           (field_imm 0
                                             (global Stdlib__set!)))
                                         (makeblock 0
                                           (field_mut 0
                                             (field_imm 8
                                               (global Ppxlib__Longident!))))))
                                    (seq
                                      (setfield_ptr(root-init) 7
                                        (global Ppxlib__Longident!) Set/2007)
                                      0)))))))))))))))))))
(seq
  (seq
    (let
      (compare/818 = (field_imm 0 (field_imm 70 (global Ppxlib__Import!))))
      (setfield_ptr(root-init) 15 (global Ppxlib__Longident!) compare/818))
    (let
      (is_normal_ident_char/875 =
         (function param/877[int]
           (catch
             (catch
               (if (>= param/877 65)
                 (let (switcher/9052 =a (-91+ param/877))
                   (if (isout 5 switcher/9052)
                     (if (>= switcher/9052 32) (exit 2) (exit 1))
                     (if (!= switcher/9052 4) (exit 2) (exit 1))))
                 (if (>= param/877 48)
                   (if (>= param/877 58) (exit 2) (exit 1))
                   (if (!= param/877 39) (exit 2) (exit 1))))
              with (2) 0)
            with (1) 1)))
      (setfield_ptr(root-init) 16 (global Ppxlib__Longident!)
        is_normal_ident_char/875))
    (let
      (is_normal_ident/878 =
         (function string/880
           (catch
             (catch
               (stringswitch string/880
                case "asr": (exit 3)
                case "land": (exit 3)
                case "lor": (exit 3)
                case "lsl": (exit 3)
                case "lsr": (exit 3)
                case "lxor": (exit 3)
                case "mod": (exit 3)
                case "or": (exit 3)
                default: (exit 4))
              with (4)
               (apply (field_imm 36 (field_imm 96 (global Ppxlib__Import!)))
                 string/880 (field_imm 16 (global Ppxlib__Longident!))))
            with (3) 0)))
      (setfield_ptr(root-init) 17 (global Ppxlib__Longident!)
        is_normal_ident/878))
    (let
      (short_name/1037 =
         (function string/1039
           (if (apply (field_imm 17 (global Ppxlib__Longident!)) string/1039)
             string/1039
             (apply (field_imm 30 (global Stdlib!)) "( "
               (apply (field_imm 30 (global Stdlib!)) string/1039 " )")))))
      (setfield_ptr(root-init) 18 (global Ppxlib__Longident!)
        short_name/1037))
    (letrec
      (name/1040
         (function param/1079
           (switch* param/1079
            case tag 0:
             (apply (field_imm 18 (global Ppxlib__Longident!))
               (field_imm 0 param/1079))
            case tag 1:
             (apply (field_imm 30 (global Stdlib!))
               (apply name/1040 (field_imm 0 param/1079))
               (apply (field_imm 30 (global Stdlib!)) "."
                 (apply (field_imm 18 (global Ppxlib__Longident!))
                   (field_imm 1 param/1079))))
            case tag 2:
             (apply (field_imm 3 (global Stdlib__printf!))
               [0: [2: 0 [12: '(' [2: 0 [12: ')' 0]]]] "%s(%s)"]
               (apply name/1040 (field_imm 0 param/1079))
               (apply name/1040 (field_imm 1 param/1079))))))
      (setfield_ptr(root-init) 19 (global Ppxlib__Longident!) name/1040))
    (let
      (sexp_of_t/1080 =
         (function t/1082
           (makeblock 0
             (apply (field_imm 19 (global Ppxlib__Longident!)) t/1082))))
      (setfield_ptr(root-init) 20 (global Ppxlib__Longident!) sexp_of_t/1080))
    0)
  (let
    (T/1126 =
       (makeblock 0 (field_imm 15 (global Ppxlib__Longident!))
         (field_imm 16 (global Ppxlib__Longident!))
         (field_imm 17 (global Ppxlib__Longident!))
         (field_imm 18 (global Ppxlib__Longident!))
         (field_imm 19 (global Ppxlib__Longident!))
         (field_imm 20 (global Ppxlib__Longident!))))
    (seq (setfield_ptr(root-init) 8 (global Ppxlib__Longident!) T/1126)
      (let (include/9053 = (field_imm 8 (global Ppxlib__Longident!)))
        (seq
          (setfield_ptr(root-init) 0 (global Ppxlib__Longident!)
            (field_mut 0 include/9053))
          (setfield_ptr(root-init) 9 (global Ppxlib__Longident!)
            (field_mut 1 include/9053))
          (setfield_ptr(root-init) 10 (global Ppxlib__Longident!)
            (field_mut 2 include/9053))
          (setfield_ptr(root-init) 11 (global Ppxlib__Longident!)
            (field_mut 3 include/9053))
          (setfield_ptr(root-init) 5 (global Ppxlib__Longident!)
            (field_mut 4 include/9053))
          (setfield_ptr(root-init) 1 (global Ppxlib__Longident!)
            (field_mut 5 include/9053))
          (letrec
            (flat/1134
               (function accu/1135 param/1139
                 (switch* param/1139
                  case tag 0:
                   (makeblock 0 (field_imm 0 param/1139) accu/1135)
                  case tag 1:
                   (apply flat/1134
                     (makeblock 0 (field_imm 1 param/1139) accu/1135)
                     (field_imm 0 param/1139))
                  case tag 2:
                   (apply (field_imm 0 (global Stdlib!))
                     "Ppxlib.Longident.flatten"))))
            (setfield_ptr(root-init) 12 (global Ppxlib__Longident!)
              flat/1134))
          (let
            (flatten_exn/1140 =
               (function lid/1142
                 (apply (field_imm 12 (global Ppxlib__Longident!)) 0
                   lid/1142)))
            (setfield_ptr(root-init) 2 (global Ppxlib__Longident!)
              flatten_exn/1140))
          (let
            (last_exn/1143 =
               (function param/1147
                 (switch* param/1147
                  case tag 0: (field_imm 0 param/1147)
                  case tag 1: (field_imm 1 param/1147)
                  case tag 2:
                   (apply (field_imm 0 (global Stdlib!))
                     "Ppxlib.Longident.flatten"))))
            (setfield_ptr(root-init) 3 (global Ppxlib__Longident!)
              last_exn/1143))
          (let
            (unflatten/1148 =
               (function init/1150 l/1151
                 (apply
                   (field_imm 16 (field_imm 91 (global Ppxlib__Import!)))
                   (function acc/1225 s/1226 (makeblock 1 acc/1225 s/1226))
                   init/1150 l/1151)))
            (setfield_ptr(root-init) 13 (global Ppxlib__Longident!)
              unflatten/1148))
          (let
            (parse_simple/1227 =
               (function s/1229
                 (let
                   (*match*/9059 =
                      (apply
                        (field_imm 45
                          (field_imm 96 (global Ppxlib__Import!)))
                        s/1229 '.'))
                   (if *match*/9059
                     (apply (field_imm 13 (global Ppxlib__Longident!))
                       (makeblock 0 (field_imm 0 *match*/9059))
                       (field_imm 1 *match*/9059))
                     (raise
                       (makeblock 0 (global Assert_failure/30!)
                         [0: "src/longident.ml" 46 10]))))))
            (setfield_ptr(root-init) 14 (global Ppxlib__Longident!)
              parse_simple/1227))
          (let
            (parse/1232 =
               (function s/1234
                 (let
                   (invalid/1235 =
                      (function param/1237
                        (apply (field_imm 0 (global Stdlib!))
                          (apply (field_imm 3 (global Stdlib__printf!))
                            [0:
                             [11: "Ppxlib.Longident.parse: " [3: 0 0]]
                             "Ppxlib.Longident.parse: %S"]
                            s/1234)))
                    *match*/9061 =
                      (apply
                        (field_imm 37
                          (field_imm 96 (global Ppxlib__Import!)))
                        s/1234 '(')
                    *match*/9062 =
                      (apply
                        (field_imm 38
                          (field_imm 96 (global Ppxlib__Import!)))
                        s/1234 ')'))
                   (catch
                     (if *match*/9061
                       (if *match*/9062
                         (let
                           (r/1239 =a (field_imm 0 *match*/9062)
                            l/1238 =a (field_imm 0 *match*/9061))
                           (seq
                             (if
                               (apply
                                 (field_imm 7
                                   (field_imm 89 (global Ppxlib__Import!)))
                                 r/1239 (- (string.length s/1234) 1))
                               (apply invalid/1235 0) 0)
                             (let
                               (group/1252 =
                                  (if
                                    (apply
                                      (field_imm 4
                                        (field_imm 89
                                          (global Ppxlib__Import!)))
                                      r/1239 (+ l/1238 1))
                                    "()"
                                    (apply
                                      (field_imm 9
                                        (field_imm 96
                                          (global Ppxlib__Import!)))
                                      (apply
                                        (field_imm 6
                                          (field_imm 96
                                            (global Ppxlib__Import!)))
                                        s/1234 (+ l/1238 1)
                                        (- (- r/1239 l/1238) 1)))))
                               (if
                                 (apply
                                   (field_imm 4
                                     (field_imm 89 (global Ppxlib__Import!)))
                                   l/1238 0)
                                 (makeblock 0 group/1252)
                                 (if
                                   (apply
                                     (field_imm 11
                                       (field_imm 83
                                         (global Ppxlib__Import!)))
                                     (string.get s/1234 (- l/1238 1)) '.')
                                   (apply invalid/1235 0)
                                   (let
                                     (before/1273 =
                                        (apply
                                          (field_imm 6
                                            (field_imm 96
                                              (global Ppxlib__Import!)))
                                          s/1234 0 (- l/1238 1))
                                      *match*/9060 =
                                        (apply
                                          (field_imm 45
                                            (field_imm 96
                                              (global Ppxlib__Import!)))
                                          before/1273 '.'))
                                     (if *match*/9060
                                       (makeblock 1
                                         (apply
                                           (field_imm 13
                                             (global Ppxlib__Longident!))
                                           (makeblock 0
                                             (field_imm 0 *match*/9060))
                                           (field_imm 1 *match*/9060))
                                         group/1252)
                                       (raise
                                         (makeblock 0
                                           (global Assert_failure/30!)
                                           [0: "src/longident.ml" 68 16])))))))))
                         (exit 5))
                       (if *match*/9062 (exit 5)
                         (apply (field_imm 14 (global Ppxlib__Longident!))
                           s/1234)))
                    with (5) (apply invalid/1235 0)))))
            (setfield_ptr(root-init) 4 (global Ppxlib__Longident!)
              parse/1232))
          (let
            (Map/1633 =
               (apply
                 (let (let/9065 = (field_imm 0 (global Stdlib__map!)))
                   (field_imm 0 (global Stdlib__map!)))
                 (makeblock 0
                   (field_mut 0 (field_imm 8 (global Ppxlib__Longident!))))))
            (seq
              (setfield_ptr(root-init) 6 (global Ppxlib__Longident!)
                Map/1633)
              (let
                (Set/2007 =
                   (apply
                     (let (let/9066 = (field_imm 0 (global Stdlib__set!)))
                       (field_imm 0 (global Stdlib__set!)))
                     (makeblock 0
                       (field_mut 0
                         (field_imm 8 (global Ppxlib__Longident!))))))
                (seq
                  (setfield_ptr(root-init) 7 (global Ppxlib__Longident!)
                    Set/2007)
                  0)))))))))
