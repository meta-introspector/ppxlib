[
  structure_item (src/code_matcher.ml[2,35+0]..[2,35+12])
    Pstr_open Override
    module_expr (src/code_matcher.ml[2,35+6]..[2,35+12])
      Pmod_ident "Import" (src/code_matcher.ml[2,35+6]..[2,35+12])
  structure_item (src/code_matcher.ml[3,48+0]..[3,48+29])
    Pstr_module
    "Format" (src/code_matcher.ml[3,48+7]..[3,48+13])
      module_expr (src/code_matcher.ml[3,48+16]..[3,48+29])
        Pmod_ident "Stdlib.Format" (src/code_matcher.ml[3,48+16]..[3,48+29])
  structure_item (src/code_matcher.ml[4,78+0]..[4,78+33])
    Pstr_module
    "Filename" (src/code_matcher.ml[4,78+7]..[4,78+15])
      module_expr (src/code_matcher.ml[4,78+18]..[4,78+33])
        Pmod_ident "Stdlib.Filename" (src/code_matcher.ml[4,78+18]..[4,78+33])
  structure_item (src/code_matcher.ml[7,185+0]..[10,292+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/code_matcher.ml[7,185+4]..[7,185+18])
          Ppat_var "end_marker_sig" (src/code_matcher.ml[7,185+4]..[7,185+18])
        expression (src/code_matcher.ml[8,206+2]..[10,292+6])
          Pexp_apply
          expression (src/code_matcher.ml[8,206+2]..[8,206+28])
            Pexp_ident "Attribute.Floating.declare" (src/code_matcher.ml[8,206+2]..[8,206+28])
          [
            <arg>
            Nolabel
              expression (src/code_matcher.ml[8,206+29]..[8,206+43])
                Pexp_constant PConst_string("deriving.end",(src/code_matcher.ml[8,206+30]..[8,206+42]),None)
            <arg>
            Nolabel
              expression (src/code_matcher.ml[8,206+44]..[8,206+58])
                Pexp_construct "Signature_item" (src/code_matcher.ml[8,206+44]..[8,206+58])
                None
            <arg>
            Nolabel
              expression (src/code_matcher.ml[9,265+4]..[9,265+26])
                Pexp_open Fresh
                module_expr (src/code_matcher.ml[9,265+4]..[9,265+15])
                  Pmod_ident "Ast_pattern" (src/code_matcher.ml[9,265+4]..[9,265+15])
                expression (src/code_matcher.ml[9,265+17]..[9,265+25])
                  Pexp_apply
                  expression (src/code_matcher.ml[9,265+17]..[9,265+21])
                    Pexp_ident "pstr" (src/code_matcher.ml[9,265+17]..[9,265+21])
                  [
                    <arg>
                    Nolabel
                      expression (src/code_matcher.ml[9,265+22]..[9,265+25])
                        Pexp_ident "nil" (src/code_matcher.ml[9,265+22]..[9,265+25])
                  ]
            <arg>
            Nolabel
              expression (src/code_matcher.ml[10,292+4]..[10,292+6])
                Pexp_construct "()" (src/code_matcher.ml[10,292+4]..[10,292+6])
                None
          ]
    ]
  structure_item (src/code_matcher.ml[12,300+0]..[15,407+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/code_matcher.ml[12,300+4]..[12,300+18])
          Ppat_var "end_marker_str" (src/code_matcher.ml[12,300+4]..[12,300+18])
        expression (src/code_matcher.ml[13,321+2]..[15,407+6])
          Pexp_apply
          expression (src/code_matcher.ml[13,321+2]..[13,321+28])
            Pexp_ident "Attribute.Floating.declare" (src/code_matcher.ml[13,321+2]..[13,321+28])
          [
            <arg>
            Nolabel
              expression (src/code_matcher.ml[13,321+29]..[13,321+43])
                Pexp_constant PConst_string("deriving.end",(src/code_matcher.ml[13,321+30]..[13,321+42]),None)
            <arg>
            Nolabel
              expression (src/code_matcher.ml[13,321+44]..[13,321+58])
                Pexp_construct "Structure_item" (src/code_matcher.ml[13,321+44]..[13,321+58])
                None
            <arg>
            Nolabel
              expression (src/code_matcher.ml[14,380+4]..[14,380+26])
                Pexp_open Fresh
                module_expr (src/code_matcher.ml[14,380+4]..[14,380+15])
                  Pmod_ident "Ast_pattern" (src/code_matcher.ml[14,380+4]..[14,380+15])
                expression (src/code_matcher.ml[14,380+17]..[14,380+25])
                  Pexp_apply
                  expression (src/code_matcher.ml[14,380+17]..[14,380+21])
                    Pexp_ident "pstr" (src/code_matcher.ml[14,380+17]..[14,380+21])
                  [
                    <arg>
                    Nolabel
                      expression (src/code_matcher.ml[14,380+22]..[14,380+25])
                        Pexp_ident "nil" (src/code_matcher.ml[14,380+22]..[14,380+25])
                  ]
            <arg>
            Nolabel
              expression (src/code_matcher.ml[15,407+4]..[15,407+6])
                Pexp_construct "()" (src/code_matcher.ml[15,407+4]..[15,407+6])
                None
          ]
    ]
  structure_item (src/code_matcher.ml[17,415+0]..[19,448+3])
    Pstr_modtype "T1" (src/code_matcher.ml[17,415+12]..[17,415+14])
      module_type (src/code_matcher.ml[17,415+17]..[19,448+3])
        Pmty_signature
        [
          signature_item (src/code_matcher.ml[18,436+2]..[18,436+11])
            Psig_type Rec
            [
              type_declaration "t" (src/code_matcher.ml[18,436+10]..[18,436+11]) (src/code_matcher.ml[18,436+2]..[18,436+11])
                ptype_params =
                  [
                    core_type (src/code_matcher.ml[18,436+7]..[18,436+9])
                      Ptyp_var a
                  ]
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  None
            ]
        ]
  structure_item (src/code_matcher.ml[21,453+0]..[149,4783+3])
    Pstr_module
    "Make" (src/code_matcher.ml[21,453+7]..[21,453+11])
      module_expr (src/code_matcher.ml[21,453+12]..[149,4783+3])
        Pmod_functor "M" (src/code_matcher.ml[21,453+13]..[21,453+14])
        module_type (src/code_matcher.ml[21,453+17]..[38,847+3])
          Pmty_signature
          [
            signature_item (src/code_matcher.ml[22,474+2]..[22,474+8])
              Psig_type Rec
              [
                type_declaration "t" (src/code_matcher.ml[22,474+7]..[22,474+8]) (src/code_matcher.ml[22,474+2]..[22,474+8])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            signature_item (src/code_matcher.ml[24,484+2]..[24,484+31])
              Psig_value
              value_description "get_loc" (src/code_matcher.ml[24,484+6]..[24,484+13]) (src/code_matcher.ml[24,484+2]..[24,484+31])
                core_type (src/code_matcher.ml[24,484+16]..[24,484+31])
                  Ptyp_arrow
                  Nolabel
                  core_type (src/code_matcher.ml[24,484+16]..[24,484+17])
                    Ptyp_constr "t" (src/code_matcher.ml[24,484+16]..[24,484+17])
                    []
                  core_type (src/code_matcher.ml[24,484+21]..[24,484+31])
                    Ptyp_constr "Location.t" (src/code_matcher.ml[24,484+21]..[24,484+31])
                    []
                []
            signature_item (src/code_matcher.ml[25,516+2]..[25,516+49])
              Psig_value
              value_description "end_marker" (src/code_matcher.ml[25,516+6]..[25,516+16]) (src/code_matcher.ml[25,516+2]..[25,516+49])
                core_type (src/code_matcher.ml[25,516+19]..[25,516+49])
                  Ptyp_constr "Attribute.Floating.t" (src/code_matcher.ml[25,516+29]..[25,516+49])
                  [
                    core_type (src/code_matcher.ml[25,516+20]..[25,516+21])
                      Ptyp_constr "t" (src/code_matcher.ml[25,516+20]..[25,516+21])
                      []
                    core_type (src/code_matcher.ml[25,516+23]..[25,516+27])
                      Ptyp_constr "unit" (src/code_matcher.ml[25,516+23]..[25,516+27])
                      []
                  ]
                []
            signature_item (src/code_matcher.ml[27,567+2]..[33,733+5])
              Psig_module "Transform" (src/code_matcher.ml[27,567+9]..[27,567+18])
              module_type (src/code_matcher.ml[27,567+19]..[33,733+5])
                Pmty_functor "T" (src/code_matcher.ml[27,567+20]..[27,567+21])
                module_type (src/code_matcher.ml[27,567+24]..[27,567+26])
                  Pmty_ident "T1" (src/code_matcher.ml[27,567+24]..[27,567+26])
                module_type (src/code_matcher.ml[27,567+30]..[33,733+5])
                  Pmty_signature
                  [
                    signature_item (src/code_matcher.ml[28,601+4]..[32,721+11])
                      Psig_value
                      value_description "apply" (src/code_matcher.ml[28,601+8]..[28,601+13]) (src/code_matcher.ml[28,601+4]..[32,721+11])
                        core_type (src/code_matcher.ml[29,617+6]..[32,721+11])
                          Ptyp_arrow
                          Nolabel
                          core_type (src/code_matcher.ml[29,617+6]..[31,705+12])
                            Ptyp_object Open
                              method structure_item
                                core_type (src/code_matcher.ml[29,617+25]..[29,617+43])
                                  Ptyp_constr "T.t" (src/code_matcher.ml[29,617+40]..[29,617+43])
                                  [
                                    core_type (src/code_matcher.ml[29,617+25]..[29,617+39])
                                      Ptyp_constr "structure_item" (src/code_matcher.ml[29,617+25]..[29,617+39])
                                      []
                                  ]
                              method signature_item
                                core_type (src/code_matcher.ml[30,661+25]..[30,661+43])
                                  Ptyp_constr "T.t" (src/code_matcher.ml[30,661+40]..[30,661+43])
                                  [
                                    core_type (src/code_matcher.ml[30,661+25]..[30,661+39])
                                      Ptyp_constr "signature_item" (src/code_matcher.ml[30,661+25]..[30,661+39])
                                      []
                                  ]
                          core_type (src/code_matcher.ml[32,721+6]..[32,721+11])
                            Ptyp_constr "T.t" (src/code_matcher.ml[32,721+8]..[32,721+11])
                            [
                              core_type (src/code_matcher.ml[32,721+6]..[32,721+7])
                                Ptyp_constr "t" (src/code_matcher.ml[32,721+6]..[32,721+7])
                                []
                            ]
                        []
                  ]
            signature_item (src/code_matcher.ml[35,740+2]..[35,740+37])
              Psig_value
              value_description "parse" (src/code_matcher.ml[35,740+6]..[35,740+11]) (src/code_matcher.ml[35,740+2]..[35,740+37])
                core_type (src/code_matcher.ml[35,740+14]..[35,740+37])
                  Ptyp_arrow
                  Nolabel
                  core_type (src/code_matcher.ml[35,740+14]..[35,740+27])
                    Ptyp_constr "Lexing.lexbuf" (src/code_matcher.ml[35,740+14]..[35,740+27])
                    []
                  core_type (src/code_matcher.ml[35,740+31]..[35,740+37])
                    Ptyp_constr "list" (src/code_matcher.ml[35,740+33]..[35,740+37])
                    [
                      core_type (src/code_matcher.ml[35,740+31]..[35,740+32])
                        Ptyp_constr "t" (src/code_matcher.ml[35,740+31]..[35,740+32])
                        []
                    ]
                []
            signature_item (src/code_matcher.ml[36,778+2]..[36,778+40])
              Psig_value
              value_description "pp" (src/code_matcher.ml[36,778+6]..[36,778+8]) (src/code_matcher.ml[36,778+2]..[36,778+40])
                core_type (src/code_matcher.ml[36,778+11]..[36,778+40])
                  Ptyp_arrow
                  Nolabel
                  core_type (src/code_matcher.ml[36,778+11]..[36,778+27])
                    Ptyp_constr "Format.formatter" (src/code_matcher.ml[36,778+11]..[36,778+27])
                    []
                  core_type (src/code_matcher.ml[36,778+31]..[36,778+40])
                    Ptyp_arrow
                    Nolabel
                    core_type (src/code_matcher.ml[36,778+31]..[36,778+32])
                      Ptyp_constr "t" (src/code_matcher.ml[36,778+31]..[36,778+32])
                      []
                    core_type (src/code_matcher.ml[36,778+36]..[36,778+40])
                      Ptyp_constr "unit" (src/code_matcher.ml[36,778+36]..[36,778+40])
                      []
                []
            signature_item (src/code_matcher.ml[37,819+2]..[37,819+27])
              Psig_value
              value_description "to_sexp" (src/code_matcher.ml[37,819+6]..[37,819+13]) (src/code_matcher.ml[37,819+2]..[37,819+27])
                core_type (src/code_matcher.ml[37,819+16]..[37,819+27])
                  Ptyp_arrow
                  Nolabel
                  core_type (src/code_matcher.ml[37,819+16]..[37,819+17])
                    Ptyp_constr "t" (src/code_matcher.ml[37,819+16]..[37,819+17])
                    []
                  core_type (src/code_matcher.ml[37,819+21]..[37,819+27])
                    Ptyp_constr "Sexp.t" (src/code_matcher.ml[37,819+21]..[37,819+27])
                    []
                []
          ]
        module_expr (src/code_matcher.ml[39,854+0]..[149,4783+3])
          Pmod_structure
          [
            structure_item (src/code_matcher.ml[40,861+2]..[57,1512+13])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/code_matcher.ml[40,861+6]..[40,861+20])
                    Ppat_var "extract_prefix" (src/code_matcher.ml[40,861+6]..[40,861+20])
                  expression (src/code_matcher.ml[40,861+21]..[57,1512+13]) ghost
                    Pexp_fun
                    Labelled "pos"
                    None
                    pattern (src/code_matcher.ml[40,861+22]..[40,861+25])
                      Ppat_var "pos" (src/code_matcher.ml[40,861+22]..[40,861+25])
                    expression (src/code_matcher.ml[40,861+26]..[57,1512+13]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/code_matcher.ml[40,861+26]..[40,861+27])
                        Ppat_var "l" (src/code_matcher.ml[40,861+26]..[40,861+27])
                      expression (src/code_matcher.ml[41,891+4]..[57,1512+13])
                        Pexp_let Rec
                        [
                          <def>
                            pattern (src/code_matcher.ml[41,891+12]..[41,891+16])
                              Ppat_var "loop" (src/code_matcher.ml[41,891+12]..[41,891+16])
                            expression (src/code_matcher.ml[41,891+17]..[55,1451+53]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/code_matcher.ml[41,891+17]..[41,891+20])
                                Ppat_var "acc" (src/code_matcher.ml[41,891+17]..[41,891+20])
                              expression (src/code_matcher.ml[41,891+23]..[55,1451+53])
                                Pexp_function
                                [
                                  <case>
                                    pattern (src/code_matcher.ml[42,923+8]..[42,923+10])
                                      Ppat_construct "[]" (src/code_matcher.ml[42,923+8]..[42,923+10])
                                      None
                                    expression (src/code_matcher.ml[43,937+10]..[49,1198+18])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/code_matcher.ml[43,937+14]..[43,937+17])
                                            Ppat_var "loc" (src/code_matcher.ml[43,937+14]..[43,937+17])
                                          expression (src/code_matcher.ml[44,957+12]..[44,957+74])
                                            Pexp_record
                                            [
                                              "Location.loc_start" (src/code_matcher.ml[44,957+14]..[44,957+32])
                                                expression (src/code_matcher.ml[44,957+35]..[44,957+38])
                                                  Pexp_ident "pos" (src/code_matcher.ml[44,957+35]..[44,957+38])
                                              "loc_end" (src/code_matcher.ml[44,957+40]..[44,957+47])
                                                expression (src/code_matcher.ml[44,957+50]..[44,957+53])
                                                  Pexp_ident "pos" (src/code_matcher.ml[44,957+50]..[44,957+53])
                                              "loc_ghost" (src/code_matcher.ml[44,957+55]..[44,957+64])
                                                expression (src/code_matcher.ml[44,957+67]..[44,957+72])
                                                  Pexp_construct "false" (src/code_matcher.ml[44,957+67]..[44,957+72])
                                                  None
                                            ]
                                            None
                                      ]
                                      expression (src/code_matcher.ml[46,1045+10]..[49,1198+18])
                                        Pexp_construct "Error" (src/code_matcher.ml[46,1045+10]..[46,1045+15])
                                        Some
                                          expression (src/code_matcher.ml[47,1061+12]..[49,1198+18])
                                            Pexp_tuple
                                            [
                                              expression (src/code_matcher.ml[47,1061+14]..[48,1142+54])
                                                Pexp_apply
                                                expression (src/code_matcher.ml[47,1061+14]..[47,1061+36])
                                                  Pexp_ident "Location.Error.createf" (src/code_matcher.ml[47,1061+14]..[47,1061+36])
                                                [
                                                  <arg>
                                                  Labelled "loc"
                                                    expression (src/code_matcher.ml[47,1061+38]..[47,1061+41])
                                                      Pexp_ident "loc" (src/code_matcher.ml[47,1061+38]..[47,1061+41])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/code_matcher.ml[47,1061+42]..[47,1061+80])
                                                      Pexp_constant PConst_string("ppxlib: [@@@@@@%s] attribute missing",(src/code_matcher.ml[47,1061+43]..[47,1061+79]),None)
                                                  <arg>
                                                  Nolabel
                                                    expression (src/code_matcher.ml[48,1142+16]..[48,1142+54])
                                                      Pexp_apply
                                                      expression (src/code_matcher.ml[48,1142+17]..[48,1142+40])
                                                        Pexp_ident "Attribute.Floating.name" (src/code_matcher.ml[48,1142+17]..[48,1142+40])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/code_matcher.ml[48,1142+41]..[48,1142+53])
                                                            Pexp_ident "M.end_marker" (src/code_matcher.ml[48,1142+41]..[48,1142+53])
                                                      ]
                                                ]
                                              expression (src/code_matcher.ml[49,1198+14]..[49,1198+16])
                                                Pexp_construct "[]" (src/code_matcher.ml[49,1198+14]..[49,1198+16])
                                                None
                                            ]
                                  <case>
                                    pattern (src/code_matcher.ml[50,1217+8]..[50,1217+14])
                                      Ppat_construct "::" (src/code_matcher.ml[50,1217+10]..[50,1217+12])
                                      Some
                                        pattern (src/code_matcher.ml[50,1217+8]..[50,1217+14]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (src/code_matcher.ml[50,1217+8]..[50,1217+9])
                                              Ppat_var "x" (src/code_matcher.ml[50,1217+8]..[50,1217+9])
                                            pattern (src/code_matcher.ml[50,1217+13]..[50,1217+14])
                                              Ppat_var "l" (src/code_matcher.ml[50,1217+13]..[50,1217+14])
                                          ]
                                    expression (src/code_matcher.ml[50,1217+18]..[55,1451+53])
                                      Pexp_match
                                      expression (src/code_matcher.ml[51,1237+16]..[51,1237+65])
                                        Pexp_apply
                                        expression (src/code_matcher.ml[51,1237+16]..[51,1237+46])
                                          Pexp_ident "Attribute.Floating.convert_res" (src/code_matcher.ml[51,1237+16]..[51,1237+46])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/code_matcher.ml[51,1237+47]..[51,1237+63])
                                              Pexp_construct "::" (src/code_matcher.ml[51,1237+49]..[51,1237+63]) ghost
                                              Some
                                                expression (src/code_matcher.ml[51,1237+49]..[51,1237+63]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (src/code_matcher.ml[51,1237+49]..[51,1237+61])
                                                      Pexp_ident "M.end_marker" (src/code_matcher.ml[51,1237+49]..[51,1237+61])
                                                    expression (src/code_matcher.ml[51,1237+62]..[51,1237+63]) ghost
                                                      Pexp_construct "[]" (src/code_matcher.ml[51,1237+62]..[51,1237+63]) ghost
                                                      None
                                                  ]
                                          <arg>
                                          Nolabel
                                            expression (src/code_matcher.ml[51,1237+64]..[51,1237+65])
                                              Pexp_ident "x" (src/code_matcher.ml[51,1237+64]..[51,1237+65])
                                        ]
                                      [
                                        <case>
                                          pattern (src/code_matcher.ml[52,1308+12]..[52,1308+19])
                                            Ppat_construct "Ok" (src/code_matcher.ml[52,1308+12]..[52,1308+14])
                                            Some
                                              pattern (src/code_matcher.ml[52,1308+15]..[52,1308+19])
                                                Ppat_construct "None" (src/code_matcher.ml[52,1308+15]..[52,1308+19])
                                                None
                                          expression (src/code_matcher.ml[52,1308+23]..[52,1308+40])
                                            Pexp_apply
                                            expression (src/code_matcher.ml[52,1308+23]..[52,1308+27])
                                              Pexp_ident "loop" (src/code_matcher.ml[52,1308+23]..[52,1308+27])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/code_matcher.ml[52,1308+28]..[52,1308+38])
                                                  Pexp_construct "::" (src/code_matcher.ml[52,1308+31]..[52,1308+33])
                                                  Some
                                                    expression (src/code_matcher.ml[52,1308+29]..[52,1308+37]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (src/code_matcher.ml[52,1308+29]..[52,1308+30])
                                                          Pexp_ident "x" (src/code_matcher.ml[52,1308+29]..[52,1308+30])
                                                        expression (src/code_matcher.ml[52,1308+34]..[52,1308+37])
                                                          Pexp_ident "acc" (src/code_matcher.ml[52,1308+34]..[52,1308+37])
                                                      ]
                                              <arg>
                                              Nolabel
                                                expression (src/code_matcher.ml[52,1308+39]..[52,1308+40])
                                                  Pexp_ident "l" (src/code_matcher.ml[52,1308+39]..[52,1308+40])
                                            ]
                                        <case>
                                          pattern (src/code_matcher.ml[53,1349+12]..[53,1349+24])
                                            Ppat_construct "Ok" (src/code_matcher.ml[53,1349+12]..[53,1349+14])
                                            Some
                                              pattern (src/code_matcher.ml[53,1349+15]..[53,1349+24])
                                                Ppat_construct "Some" (src/code_matcher.ml[53,1349+16]..[53,1349+20])
                                                Some
                                                  pattern (src/code_matcher.ml[53,1349+21]..[53,1349+23])
                                                    Ppat_construct "()" (src/code_matcher.ml[53,1349+21]..[53,1349+23])
                                                    None
                                          expression (src/code_matcher.ml[53,1349+28]..[53,1349+70])
                                            Pexp_construct "Ok" (src/code_matcher.ml[53,1349+28]..[53,1349+30])
                                            Some
                                              expression (src/code_matcher.ml[53,1349+31]..[53,1349+70])
                                                Pexp_tuple
                                                [
                                                  expression (src/code_matcher.ml[53,1349+32]..[53,1349+44])
                                                    Pexp_apply
                                                    expression (src/code_matcher.ml[53,1349+32]..[53,1349+40])
                                                      Pexp_ident "List.rev" (src/code_matcher.ml[53,1349+32]..[53,1349+40])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/code_matcher.ml[53,1349+41]..[53,1349+44])
                                                          Pexp_ident "acc" (src/code_matcher.ml[53,1349+41]..[53,1349+44])
                                                    ]
                                                  expression (src/code_matcher.ml[53,1349+46]..[53,1349+69])
                                                    Pexp_field
                                                    expression (src/code_matcher.ml[53,1349+46]..[53,1349+59])
                                                      Pexp_apply
                                                      expression (src/code_matcher.ml[53,1349+47]..[53,1349+56])
                                                        Pexp_ident "M.get_loc" (src/code_matcher.ml[53,1349+47]..[53,1349+56])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/code_matcher.ml[53,1349+57]..[53,1349+58])
                                                            Pexp_ident "x" (src/code_matcher.ml[53,1349+57]..[53,1349+58])
                                                      ]
                                                    "loc_start" (src/code_matcher.ml[53,1349+60]..[53,1349+69])
                                                ]
                                        <case>
                                          pattern (src/code_matcher.ml[54,1420+12]..[54,1420+19])
                                            Ppat_construct "Error" (src/code_matcher.ml[54,1420+12]..[54,1420+17])
                                            Some
                                              pattern (src/code_matcher.ml[54,1420+18]..[54,1420+19])
                                                Ppat_var "e" (src/code_matcher.ml[54,1420+18]..[54,1420+19])
                                          expression (src/code_matcher.ml[54,1420+23]..[54,1420+30])
                                            Pexp_construct "Error" (src/code_matcher.ml[54,1420+23]..[54,1420+28])
                                            Some
                                              expression (src/code_matcher.ml[54,1420+29]..[54,1420+30])
                                                Pexp_ident "e" (src/code_matcher.ml[54,1420+29]..[54,1420+30])
                                        <case>
                                          pattern (src/code_matcher.ml[55,1451+12]..[55,1451+31])
                                            Ppat_exception
                                            pattern (src/code_matcher.ml[55,1451+22]..[55,1451+31])
                                              Ppat_construct "Failure" (src/code_matcher.ml[55,1451+22]..[55,1451+29])
                                              Some
                                                pattern (src/code_matcher.ml[55,1451+30]..[55,1451+31])
                                                  Ppat_any
                                          expression (src/code_matcher.ml[55,1451+35]..[55,1451+52])
                                            Pexp_apply
                                            expression (src/code_matcher.ml[55,1451+35]..[55,1451+39])
                                              Pexp_ident "loop" (src/code_matcher.ml[55,1451+35]..[55,1451+39])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/code_matcher.ml[55,1451+40]..[55,1451+50])
                                                  Pexp_construct "::" (src/code_matcher.ml[55,1451+43]..[55,1451+45])
                                                  Some
                                                    expression (src/code_matcher.ml[55,1451+41]..[55,1451+49]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (src/code_matcher.ml[55,1451+41]..[55,1451+42])
                                                          Pexp_ident "x" (src/code_matcher.ml[55,1451+41]..[55,1451+42])
                                                        expression (src/code_matcher.ml[55,1451+46]..[55,1451+49])
                                                          Pexp_ident "acc" (src/code_matcher.ml[55,1451+46]..[55,1451+49])
                                                      ]
                                              <arg>
                                              Nolabel
                                                expression (src/code_matcher.ml[55,1451+51]..[55,1451+52])
                                                  Pexp_ident "l" (src/code_matcher.ml[55,1451+51]..[55,1451+52])
                                            ]
                                      ]
                                ]
                        ]
                        expression (src/code_matcher.ml[57,1512+4]..[57,1512+13])
                          Pexp_apply
                          expression (src/code_matcher.ml[57,1512+4]..[57,1512+8])
                            Pexp_ident "loop" (src/code_matcher.ml[57,1512+4]..[57,1512+8])
                          [
                            <arg>
                            Nolabel
                              expression (src/code_matcher.ml[57,1512+9]..[57,1512+11])
                                Pexp_construct "[]" (src/code_matcher.ml[57,1512+9]..[57,1512+11])
                                None
                            <arg>
                            Nolabel
                              expression (src/code_matcher.ml[57,1512+12]..[57,1512+13])
                                Pexp_ident "l" (src/code_matcher.ml[57,1512+12]..[57,1512+13])
                          ]
              ]
            structure_item (src/code_matcher.ml[59,1527+2]..[64,1665+7])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/code_matcher.ml[59,1527+6]..[59,1527+16])
                    Ppat_var "remove_loc" (src/code_matcher.ml[59,1527+6]..[59,1527+16])
                  expression (src/code_matcher.ml[60,1546+4]..[64,1665+7])
                    Pexp_object
                    class_structure
                      pattern (src/code_matcher.ml[60,1546+10]..[60,1546+10]) ghost
                        Ppat_any
                      [
                        class_field (src/code_matcher.ml[61,1557+6]..[61,1557+30])
                          Pcf_inherit Fresh
                            class_expr (src/code_matcher.ml[61,1557+14]..[61,1557+30])
                              Pcl_constr "Ast_traverse.map" (src/code_matcher.ml[61,1557+14]..[61,1557+30])
                              []
                            None
                        class_field (src/code_matcher.ml[62,1588+6]..[62,1588+40])
                          Pcf_method Public
                            "location" (src/code_matcher.ml[62,1588+14]..[62,1588+22])
                            Concrete Override
                            expression (src/code_matcher.ml[62,1588+23]..[62,1588+40]) ghost
                              Pexp_poly
                              expression (src/code_matcher.ml[62,1588+23]..[62,1588+40]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/code_matcher.ml[62,1588+23]..[62,1588+24])
                                  Ppat_any
                                expression (src/code_matcher.ml[62,1588+27]..[62,1588+40])
                                  Pexp_ident "Location.none" (src/code_matcher.ml[62,1588+27]..[62,1588+40])
                              None
                        class_field (src/code_matcher.ml[63,1629+6]..[63,1629+35])
                          Pcf_method Public
                            "location_stack" (src/code_matcher.ml[63,1629+14]..[63,1629+28])
                            Concrete Override
                            expression (src/code_matcher.ml[63,1629+29]..[63,1629+35]) ghost
                              Pexp_poly
                              expression (src/code_matcher.ml[63,1629+29]..[63,1629+35]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/code_matcher.ml[63,1629+29]..[63,1629+30])
                                  Ppat_any
                                expression (src/code_matcher.ml[63,1629+33]..[63,1629+35])
                                  Pexp_construct "[]" (src/code_matcher.ml[63,1629+33]..[63,1629+35])
                                  None
                              None
                      ]
              ]
            structure_item (src/code_matcher.ml[66,1674+2]..[68,1736+6])
              Pstr_module
              "M_map" (src/code_matcher.ml[66,1674+9]..[66,1674+14])
                module_expr (src/code_matcher.ml[66,1674+17]..[68,1736+6])
                  Pmod_apply
                  module_expr (src/code_matcher.ml[66,1674+17]..[66,1674+28])
                    Pmod_ident "M.Transform" (src/code_matcher.ml[66,1674+17]..[66,1674+28])
                  module_expr (src/code_matcher.ml[66,1674+30]..[68,1736+5])
                    Pmod_structure
                    [
                      structure_item (src/code_matcher.ml[67,1711+4]..[67,1711+24])
                        Pstr_type Rec
                        [
                          type_declaration "t" (src/code_matcher.ml[67,1711+12]..[67,1711+13]) (src/code_matcher.ml[67,1711+4]..[67,1711+24])
                            ptype_params =
                              [
                                core_type (src/code_matcher.ml[67,1711+9]..[67,1711+11])
                                  Ptyp_var a
                              ]
                            ptype_cstrs =
                              []
                            ptype_kind =
                              Ptype_abstract
                            ptype_private = Public
                            ptype_manifest =
                              Some
                                core_type (src/code_matcher.ml[67,1711+16]..[67,1711+24])
                                  Ptyp_arrow
                                  Nolabel
                                  core_type (src/code_matcher.ml[67,1711+16]..[67,1711+18])
                                    Ptyp_var a
                                  core_type (src/code_matcher.ml[67,1711+22]..[67,1711+24])
                                    Ptyp_var a
                        ]
                    ]
            structure_item (src/code_matcher.ml[70,1744+2]..[70,1744+45])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/code_matcher.ml[70,1744+6]..[70,1744+16])
                    Ppat_var "remove_loc" (src/code_matcher.ml[70,1744+6]..[70,1744+16])
                  expression (src/code_matcher.ml[70,1744+17]..[70,1744+45]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/code_matcher.ml[70,1744+17]..[70,1744+18])
                      Ppat_var "x" (src/code_matcher.ml[70,1744+17]..[70,1744+18])
                    expression (src/code_matcher.ml[70,1744+21]..[70,1744+45])
                      Pexp_apply
                      expression (src/code_matcher.ml[70,1744+21]..[70,1744+32])
                        Pexp_ident "M_map.apply" (src/code_matcher.ml[70,1744+21]..[70,1744+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/code_matcher.ml[70,1744+33]..[70,1744+43])
                            Pexp_ident "remove_loc" (src/code_matcher.ml[70,1744+33]..[70,1744+43])
                        <arg>
                        Nolabel
                          expression (src/code_matcher.ml[70,1744+44]..[70,1744+45])
                            Pexp_ident "x" (src/code_matcher.ml[70,1744+44]..[70,1744+45])
                      ]
              ]
            structure_item (src/code_matcher.ml[71,1790+2]..[71,1790+62])
              Pstr_value Rec
              [
                <def>
                  pattern (src/code_matcher.ml[71,1790+10]..[71,1790+14])
                    Ppat_var "last" (src/code_matcher.ml[71,1790+10]..[71,1790+14])
                  expression (src/code_matcher.ml[71,1790+15]..[71,1790+62]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/code_matcher.ml[71,1790+15]..[71,1790+19])
                      Ppat_var "prev" (src/code_matcher.ml[71,1790+15]..[71,1790+19])
                    expression (src/code_matcher.ml[71,1790+22]..[71,1790+62])
                      Pexp_function
                      [
                        <case>
                          pattern (src/code_matcher.ml[71,1790+31]..[71,1790+33])
                            Ppat_construct "[]" (src/code_matcher.ml[71,1790+31]..[71,1790+33])
                            None
                          expression (src/code_matcher.ml[71,1790+37]..[71,1790+41])
                            Pexp_ident "prev" (src/code_matcher.ml[71,1790+37]..[71,1790+41])
                        <case>
                          pattern (src/code_matcher.ml[71,1790+44]..[71,1790+50])
                            Ppat_construct "::" (src/code_matcher.ml[71,1790+46]..[71,1790+48])
                            Some
                              pattern (src/code_matcher.ml[71,1790+44]..[71,1790+50]) ghost
                                Ppat_tuple
                                [
                                  pattern (src/code_matcher.ml[71,1790+44]..[71,1790+45])
                                    Ppat_var "x" (src/code_matcher.ml[71,1790+44]..[71,1790+45])
                                  pattern (src/code_matcher.ml[71,1790+49]..[71,1790+50])
                                    Ppat_var "l" (src/code_matcher.ml[71,1790+49]..[71,1790+50])
                                ]
                          expression (src/code_matcher.ml[71,1790+54]..[71,1790+62])
                            Pexp_apply
                            expression (src/code_matcher.ml[71,1790+54]..[71,1790+58])
                              Pexp_ident "last" (src/code_matcher.ml[71,1790+54]..[71,1790+58])
                            [
                              <arg>
                              Nolabel
                                expression (src/code_matcher.ml[71,1790+59]..[71,1790+60])
                                  Pexp_ident "x" (src/code_matcher.ml[71,1790+59]..[71,1790+60])
                              <arg>
                              Nolabel
                                expression (src/code_matcher.ml[71,1790+61]..[71,1790+62])
                                  Pexp_ident "l" (src/code_matcher.ml[71,1790+61]..[71,1790+62])
                            ]
                      ]
              ]
            structure_item (src/code_matcher.ml[73,1854+2]..[110,3320+59])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/code_matcher.ml[73,1854+6]..[73,1854+15])
                    Ppat_var "diff_asts" (src/code_matcher.ml[73,1854+6]..[73,1854+15])
                  expression (src/code_matcher.ml[73,1854+16]..[110,3320+59]) ghost
                    Pexp_fun
                    Labelled "generated"
                    None
                    pattern (src/code_matcher.ml[73,1854+17]..[73,1854+26])
                      Ppat_var "generated" (src/code_matcher.ml[73,1854+17]..[73,1854+26])
                    expression (src/code_matcher.ml[73,1854+27]..[110,3320+59]) ghost
                      Pexp_fun
                      Labelled "round_trip"
                      None
                      pattern (src/code_matcher.ml[73,1854+28]..[73,1854+38])
                        Ppat_var "round_trip" (src/code_matcher.ml[73,1854+28]..[73,1854+38])
                      expression (src/code_matcher.ml[74,1895+4]..[110,3320+59])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/code_matcher.ml[74,1895+8]..[74,1895+22])
                              Ppat_var "with_temp_file" (src/code_matcher.ml[74,1895+8]..[74,1895+22])
                            expression (src/code_matcher.ml[74,1895+23]..[77,1982+37]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/code_matcher.ml[74,1895+23]..[74,1895+24])
                                Ppat_var "f" (src/code_matcher.ml[74,1895+23]..[74,1895+24])
                              expression (src/code_matcher.ml[75,1922+6]..[77,1982+37])
                                Pexp_apply
                                expression (src/code_matcher.ml[75,1922+6]..[75,1922+18])
                                  Pexp_ident "Exn.protectx" (src/code_matcher.ml[75,1922+6]..[75,1922+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/code_matcher.ml[76,1941+8]..[76,1941+40])
                                      Pexp_apply
                                      expression (src/code_matcher.ml[76,1941+9]..[76,1941+27])
                                        Pexp_ident "Filename.temp_file" (src/code_matcher.ml[76,1941+9]..[76,1941+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/code_matcher.ml[76,1941+28]..[76,1941+36])
                                            Pexp_constant PConst_string("ppxlib",(src/code_matcher.ml[76,1941+29]..[76,1941+35]),None)
                                        <arg>
                                        Nolabel
                                          expression (src/code_matcher.ml[76,1941+37]..[76,1941+39])
                                            Pexp_constant PConst_string("",(src/code_matcher.ml[76,1941+38]..[76,1941+38]),None)
                                      ]
                                  <arg>
                                  Labelled "finally"
                                    expression (src/code_matcher.ml[77,1982+17]..[77,1982+34])
                                      Pexp_ident "Stdlib.Sys.remove" (src/code_matcher.ml[77,1982+17]..[77,1982+34])
                                  <arg>
                                  Labelled "f"
                                    expression (src/code_matcher.ml[77,1982+36]..[77,1982+37])
                                      Pexp_ident "f" (src/code_matcher.ml[77,1982+36]..[77,1982+37])
                                ]
                        ]
                        expression (src/code_matcher.ml[79,2027+4]..[110,3320+59])
                          Pexp_apply
                          expression (src/code_matcher.ml[79,2027+4]..[79,2027+18])
                            Pexp_ident "with_temp_file" (src/code_matcher.ml[79,2027+4]..[79,2027+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/code_matcher.ml[79,2027+19]..[110,3320+59])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/code_matcher.ml[79,2027+24]..[79,2027+27])
                                  Ppat_var "fn1" (src/code_matcher.ml[79,2027+24]..[79,2027+27])
                                expression (src/code_matcher.ml[80,2058+8]..[110,3320+58])
                                  Pexp_apply
                                  expression (src/code_matcher.ml[80,2058+8]..[80,2058+22])
                                    Pexp_ident "with_temp_file" (src/code_matcher.ml[80,2058+8]..[80,2058+22])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/code_matcher.ml[80,2058+23]..[110,3320+58])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (src/code_matcher.ml[80,2058+28]..[80,2058+31])
                                          Ppat_var "fn2" (src/code_matcher.ml[80,2058+28]..[80,2058+31])
                                        expression (src/code_matcher.ml[81,2093+12]..[110,3320+57])
                                          Pexp_apply
                                          expression (src/code_matcher.ml[81,2093+12]..[81,2093+26])
                                            Pexp_ident "with_temp_file" (src/code_matcher.ml[81,2093+12]..[81,2093+26])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/code_matcher.ml[81,2093+27]..[110,3320+57])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (src/code_matcher.ml[81,2093+32]..[81,2093+35])
                                                  Ppat_var "out" (src/code_matcher.ml[81,2093+32]..[81,2093+35])
                                                expression (src/code_matcher.ml[82,2132+16]..[110,3320+56])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (src/code_matcher.ml[82,2132+20]..[82,2132+24])
                                                        Ppat_var "dump" (src/code_matcher.ml[82,2132+20]..[82,2132+24])
                                                      expression (src/code_matcher.ml[82,2132+25]..[86,2348+51]) ghost
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (src/code_matcher.ml[82,2132+25]..[82,2132+27])
                                                          Ppat_var "fn" (src/code_matcher.ml[82,2132+25]..[82,2132+27])
                                                        expression (src/code_matcher.ml[82,2132+28]..[86,2348+51]) ghost
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (src/code_matcher.ml[82,2132+28]..[82,2132+31])
                                                            Ppat_var "ast" (src/code_matcher.ml[82,2132+28]..[82,2132+31])
                                                          expression (src/code_matcher.ml[83,2166+18]..[86,2348+51])
                                                            Pexp_apply
                                                            expression (src/code_matcher.ml[83,2166+18]..[83,2166+39])
                                                              Pexp_ident "Out_channel.with_file" (src/code_matcher.ml[83,2166+18]..[83,2166+39])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/code_matcher.ml[83,2166+40]..[83,2166+42])
                                                                  Pexp_ident "fn" (src/code_matcher.ml[83,2166+40]..[83,2166+42])
                                                              <arg>
                                                              Labelled "f"
                                                                expression (src/code_matcher.ml[83,2166+46]..[86,2348+51])
                                                                  Pexp_fun
                                                                  Nolabel
                                                                  None
                                                                  pattern (src/code_matcher.ml[83,2166+51]..[83,2166+53])
                                                                    Ppat_var "oc" (src/code_matcher.ml[83,2166+51]..[83,2166+53])
                                                                  expression (src/code_matcher.ml[84,2223+22]..[86,2348+50])
                                                                    Pexp_let Nonrec
                                                                    [
                                                                      <def>
pattern (src/code_matcher.ml[84,2223+26]..[84,2223+29])
  Ppat_var "ppf" (src/code_matcher.ml[84,2223+26]..[84,2223+29])
expression (src/code_matcher.ml[84,2223+32]..[84,2223+66])
  Pexp_apply
  expression (src/code_matcher.ml[84,2223+32]..[84,2223+63])
    Pexp_ident "Format.formatter_of_out_channel" (src/code_matcher.ml[84,2223+32]..[84,2223+63])
  [
    <arg>
    Nolabel
      expression (src/code_matcher.ml[84,2223+64]..[84,2223+66])
        Pexp_ident "oc" (src/code_matcher.ml[84,2223+64]..[84,2223+66])
  ]
                                                                    ]
                                                                    expression (src/code_matcher.ml[85,2293+22]..[86,2348+50])
                                                                      Pexp_sequence
                                                                      expression (src/code_matcher.ml[85,2293+22]..[85,2293+53])
Pexp_apply
expression (src/code_matcher.ml[85,2293+22]..[85,2293+33])
  Pexp_ident "Sexp.pp_hum" (src/code_matcher.ml[85,2293+22]..[85,2293+33])
[
  <arg>
  Nolabel
    expression (src/code_matcher.ml[85,2293+34]..[85,2293+37])
      Pexp_ident "ppf" (src/code_matcher.ml[85,2293+34]..[85,2293+37])
  <arg>
  Nolabel
    expression (src/code_matcher.ml[85,2293+38]..[85,2293+53])
      Pexp_apply
      expression (src/code_matcher.ml[85,2293+39]..[85,2293+48])
        Pexp_ident "M.to_sexp" (src/code_matcher.ml[85,2293+39]..[85,2293+48])
      [
        <arg>
        Nolabel
          expression (src/code_matcher.ml[85,2293+49]..[85,2293+52])
            Pexp_ident "ast" (src/code_matcher.ml[85,2293+49]..[85,2293+52])
      ]
]
                                                                      expression (src/code_matcher.ml[86,2348+22]..[86,2348+50])
Pexp_apply
expression (src/code_matcher.ml[86,2348+22]..[86,2348+43])
  Pexp_ident "Format.pp_print_flush" (src/code_matcher.ml[86,2348+22]..[86,2348+43])
[
  <arg>
  Nolabel
    expression (src/code_matcher.ml[86,2348+44]..[86,2348+47])
      Pexp_ident "ppf" (src/code_matcher.ml[86,2348+44]..[86,2348+47])
  <arg>
  Nolabel
    expression (src/code_matcher.ml[86,2348+48]..[86,2348+50])
      Pexp_construct "()" (src/code_matcher.ml[86,2348+48]..[86,2348+50])
      None
]
                                                            ]
                                                  ]
                                                  expression (src/code_matcher.ml[88,2419+16]..[110,3320+56])
                                                    Pexp_sequence
                                                    expression (src/code_matcher.ml[88,2419+16]..[88,2419+34])
                                                      Pexp_apply
                                                      expression (src/code_matcher.ml[88,2419+16]..[88,2419+20])
                                                        Pexp_ident "dump" (src/code_matcher.ml[88,2419+16]..[88,2419+20])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/code_matcher.ml[88,2419+21]..[88,2419+24])
                                                            Pexp_ident "fn1" (src/code_matcher.ml[88,2419+21]..[88,2419+24])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/code_matcher.ml[88,2419+25]..[88,2419+34])
                                                            Pexp_ident "generated" (src/code_matcher.ml[88,2419+25]..[88,2419+34])
                                                      ]
                                                    expression (src/code_matcher.ml[89,2455+16]..[110,3320+56])
                                                      Pexp_sequence
                                                      expression (src/code_matcher.ml[89,2455+16]..[89,2455+35])
                                                        Pexp_apply
                                                        expression (src/code_matcher.ml[89,2455+16]..[89,2455+20])
                                                          Pexp_ident "dump" (src/code_matcher.ml[89,2455+16]..[89,2455+20])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/code_matcher.ml[89,2455+21]..[89,2455+24])
                                                              Pexp_ident "fn2" (src/code_matcher.ml[89,2455+21]..[89,2455+24])
                                                          <arg>
                                                          Nolabel
                                                            expression (src/code_matcher.ml[89,2455+25]..[89,2455+35])
                                                              Pexp_ident "round_trip" (src/code_matcher.ml[89,2455+25]..[89,2455+35])
                                                        ]
                                                      expression (src/code_matcher.ml[90,2492+16]..[110,3320+56])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (src/code_matcher.ml[90,2492+20]..[90,2492+23])
                                                              Ppat_var "cmd" (src/code_matcher.ml[90,2492+20]..[90,2492+23])
                                                            expression (src/code_matcher.ml[91,2518+18]..[95,2742+40])
                                                              Pexp_apply
                                                              expression (src/code_matcher.ml[91,2518+18]..[91,2518+32])
                                                                Pexp_ident "Printf.sprintf" (src/code_matcher.ml[91,2518+18]..[91,2518+32])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/code_matcher.ml[92,2551+20]..[93,2617+62])
                                                                    Pexp_constant PConst_string("patdiff -ascii -alt-old generated -alt-new 'generated->printed->parsed' %s %s &> %s",(src/code_matcher.ml[92,2551+21]..[93,2617+61]),None)
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/code_matcher.ml[94,2680+20]..[94,2680+40])
                                                                    Pexp_apply
                                                                    expression (src/code_matcher.ml[94,2680+21]..[94,2680+35])
                                                                      Pexp_ident "Filename.quote" (src/code_matcher.ml[94,2680+21]..[94,2680+35])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/code_matcher.ml[94,2680+36]..[94,2680+39])
  Pexp_ident "fn1" (src/code_matcher.ml[94,2680+36]..[94,2680+39])
                                                                    ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/code_matcher.ml[94,2680+41]..[94,2680+61])
                                                                    Pexp_apply
                                                                    expression (src/code_matcher.ml[94,2680+42]..[94,2680+56])
                                                                      Pexp_ident "Filename.quote" (src/code_matcher.ml[94,2680+42]..[94,2680+56])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/code_matcher.ml[94,2680+57]..[94,2680+60])
  Pexp_ident "fn2" (src/code_matcher.ml[94,2680+57]..[94,2680+60])
                                                                    ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/code_matcher.ml[95,2742+20]..[95,2742+40])
                                                                    Pexp_apply
                                                                    expression (src/code_matcher.ml[95,2742+21]..[95,2742+35])
                                                                      Pexp_ident "Filename.quote" (src/code_matcher.ml[95,2742+21]..[95,2742+35])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/code_matcher.ml[95,2742+36]..[95,2742+39])
  Pexp_ident "out" (src/code_matcher.ml[95,2742+36]..[95,2742+39])
                                                                    ]
                                                              ]
                                                        ]
                                                        expression (src/code_matcher.ml[97,2802+16]..[110,3320+56])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (src/code_matcher.ml[97,2802+20]..[97,2802+22])
                                                                Ppat_var "ok" (src/code_matcher.ml[97,2802+20]..[97,2802+22])
                                                              expression (src/code_matcher.ml[98,2827+18]..[107,3205+44])
                                                                Pexp_apply
                                                                expression (src/code_matcher.ml[99,2872+18]..[99,2872+20])
                                                                  Pexp_ident "||" (src/code_matcher.ml[99,2872+18]..[99,2872+20])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/code_matcher.ml[98,2827+18]..[98,2827+44])
                                                                      Pexp_apply
                                                                      expression (src/code_matcher.ml[98,2827+41]..[98,2827+42])
Pexp_ident "=" (src/code_matcher.ml[98,2827+41]..[98,2827+42])
                                                                      [
<arg>
Nolabel
  expression (src/code_matcher.ml[98,2827+18]..[98,2827+40])
    Pexp_apply
    expression (src/code_matcher.ml[98,2827+18]..[98,2827+36])
      Pexp_ident "Stdlib.Sys.command" (src/code_matcher.ml[98,2827+18]..[98,2827+36])
    [
      <arg>
      Nolabel
        expression (src/code_matcher.ml[98,2827+37]..[98,2827+40])
          Pexp_ident "cmd" (src/code_matcher.ml[98,2827+37]..[98,2827+40])
    ]
<arg>
Nolabel
  expression (src/code_matcher.ml[98,2827+43]..[98,2827+44])
    Pexp_constant PConst_int (1,None)
                                                                      ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/code_matcher.ml[100,2893+18]..[107,3205+44])
                                                                      Pexp_let Nonrec
                                                                      [
<def>
  pattern (src/code_matcher.ml[100,2893+22]..[100,2893+25])
    Ppat_var "cmd" (src/code_matcher.ml[100,2893+22]..[100,2893+25])
  expression (src/code_matcher.ml[101,2921+20]..[105,3141+42])
    Pexp_apply
    expression (src/code_matcher.ml[101,2921+20]..[101,2921+34])
      Pexp_ident "Printf.sprintf" (src/code_matcher.ml[101,2921+20]..[101,2921+34])
    [
      <arg>
      Nolabel
        expression (src/code_matcher.ml[102,2956+22]..[103,3012+64])
          Pexp_constant PConst_string("diff --label generated --label 'generated->printed->parsed' %s %s &> %s",(src/code_matcher.ml[102,2956+23]..[103,3012+63]),None)
      <arg>
      Nolabel
        expression (src/code_matcher.ml[104,3077+22]..[104,3077+42])
          Pexp_apply
          expression (src/code_matcher.ml[104,3077+23]..[104,3077+37])
            Pexp_ident "Filename.quote" (src/code_matcher.ml[104,3077+23]..[104,3077+37])
          [
            <arg>
            Nolabel
              expression (src/code_matcher.ml[104,3077+38]..[104,3077+41])
                Pexp_ident "fn1" (src/code_matcher.ml[104,3077+38]..[104,3077+41])
          ]
      <arg>
      Nolabel
        expression (src/code_matcher.ml[104,3077+43]..[104,3077+63])
          Pexp_apply
          expression (src/code_matcher.ml[104,3077+44]..[104,3077+58])
            Pexp_ident "Filename.quote" (src/code_matcher.ml[104,3077+44]..[104,3077+58])
          [
            <arg>
            Nolabel
              expression (src/code_matcher.ml[104,3077+59]..[104,3077+62])
                Pexp_ident "fn2" (src/code_matcher.ml[104,3077+59]..[104,3077+62])
          ]
      <arg>
      Nolabel
        expression (src/code_matcher.ml[105,3141+22]..[105,3141+42])
          Pexp_apply
          expression (src/code_matcher.ml[105,3141+23]..[105,3141+37])
            Pexp_ident "Filename.quote" (src/code_matcher.ml[105,3141+23]..[105,3141+37])
          [
            <arg>
            Nolabel
              expression (src/code_matcher.ml[105,3141+38]..[105,3141+41])
                Pexp_ident "out" (src/code_matcher.ml[105,3141+38]..[105,3141+41])
          ]
    ]
                                                                      ]
                                                                      expression (src/code_matcher.ml[107,3205+18]..[107,3205+44])
Pexp_apply
expression (src/code_matcher.ml[107,3205+41]..[107,3205+42])
  Pexp_ident "=" (src/code_matcher.ml[107,3205+41]..[107,3205+42])
[
  <arg>
  Nolabel
    expression (src/code_matcher.ml[107,3205+18]..[107,3205+40])
      Pexp_apply
      expression (src/code_matcher.ml[107,3205+18]..[107,3205+36])
        Pexp_ident "Stdlib.Sys.command" (src/code_matcher.ml[107,3205+18]..[107,3205+36])
      [
        <arg>
        Nolabel
          expression (src/code_matcher.ml[107,3205+37]..[107,3205+40])
            Pexp_ident "cmd" (src/code_matcher.ml[107,3205+37]..[107,3205+40])
      ]
  <arg>
  Nolabel
    expression (src/code_matcher.ml[107,3205+43]..[107,3205+44])
      Pexp_constant PConst_int (1,None)
]
                                                                ]
                                                          ]
                                                          expression (src/code_matcher.ml[109,3269+16]..[110,3320+56])
                                                            Pexp_ifthenelse
                                                            expression (src/code_matcher.ml[109,3269+19]..[109,3269+21])
                                                              Pexp_ident "ok" (src/code_matcher.ml[109,3269+19]..[109,3269+21])
                                                            expression (src/code_matcher.ml[109,3269+27]..[109,3269+50])
                                                              Pexp_apply
                                                              expression (src/code_matcher.ml[109,3269+27]..[109,3269+46])
                                                                Pexp_ident "In_channel.read_all" (src/code_matcher.ml[109,3269+27]..[109,3269+46])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/code_matcher.ml[109,3269+47]..[109,3269+50])
                                                                    Pexp_ident "out" (src/code_matcher.ml[109,3269+47]..[109,3269+50])
                                                              ]
                                                            Some
                                                              expression (src/code_matcher.ml[110,3320+21]..[110,3320+56])
                                                                Pexp_constant PConst_string("<no differences produced by diff>",(src/code_matcher.ml[110,3320+22]..[110,3320+55]),None)
                                          ]
                                  ]
                          ]
              ]
            structure_item (src/code_matcher.ml[112,3381+2]..[113,3404+76])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/code_matcher.ml[112,3381+6]..[112,3381+18])
                    Ppat_var "parse_string" (src/code_matcher.ml[112,3381+6]..[112,3381+18])
                  expression (src/code_matcher.ml[112,3381+19]..[113,3404+76]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/code_matcher.ml[112,3381+19]..[112,3381+20])
                      Ppat_var "s" (src/code_matcher.ml[112,3381+19]..[112,3381+20])
                    expression (src/code_matcher.ml[113,3404+4]..[113,3404+76])
                      Pexp_match
                      expression (src/code_matcher.ml[113,3404+10]..[113,3404+40])
                        Pexp_apply
                        expression (src/code_matcher.ml[113,3404+10]..[113,3404+17])
                          Pexp_ident "M.parse" (src/code_matcher.ml[113,3404+10]..[113,3404+17])
                        [
                          <arg>
                          Nolabel
                            expression (src/code_matcher.ml[113,3404+18]..[113,3404+40])
                              Pexp_apply
                              expression (src/code_matcher.ml[113,3404+19]..[113,3404+37])
                                Pexp_ident "Lexing.from_string" (src/code_matcher.ml[113,3404+19]..[113,3404+37])
                              [
                                <arg>
                                Nolabel
                                  expression (src/code_matcher.ml[113,3404+38]..[113,3404+39])
                                    Pexp_ident "s" (src/code_matcher.ml[113,3404+38]..[113,3404+39])
                              ]
                        ]
                      [
                        <case>
                          pattern (src/code_matcher.ml[113,3404+46]..[113,3404+51])
                            Ppat_construct "::" (src/code_matcher.ml[113,3404+48]..[113,3404+51]) ghost
                            Some
                              pattern (src/code_matcher.ml[113,3404+48]..[113,3404+51]) ghost
                                Ppat_tuple
                                [
                                  pattern (src/code_matcher.ml[113,3404+48]..[113,3404+49])
                                    Ppat_var "x" (src/code_matcher.ml[113,3404+48]..[113,3404+49])
                                  pattern (src/code_matcher.ml[113,3404+50]..[113,3404+51]) ghost
                                    Ppat_construct "[]" (src/code_matcher.ml[113,3404+50]..[113,3404+51]) ghost
                                    None
                                ]
                          expression (src/code_matcher.ml[113,3404+55]..[113,3404+56])
                            Pexp_ident "x" (src/code_matcher.ml[113,3404+55]..[113,3404+56])
                        <case>
                          pattern (src/code_matcher.ml[113,3404+59]..[113,3404+60])
                            Ppat_any
                          expression (src/code_matcher.ml[113,3404+64]..[113,3404+76])
                            Pexp_assert
                            expression (src/code_matcher.ml[113,3404+71]..[113,3404+76])
                              Pexp_construct "false" (src/code_matcher.ml[113,3404+71]..[113,3404+76])
                              None
                      ]
              ]
            structure_item (src/code_matcher.ml[115,3482+2]..[143,4518+63])
              Pstr_value Rec
              [
                <def>
                  pattern (src/code_matcher.ml[115,3482+10]..[115,3482+20])
                    Ppat_var "match_loop" (src/code_matcher.ml[115,3482+10]..[115,3482+20])
                  expression (src/code_matcher.ml[115,3482+21]..[143,4518+63]) ghost
                    Pexp_fun
                    Labelled "end_pos"
                    None
                    pattern (src/code_matcher.ml[115,3482+22]..[115,3482+29])
                      Ppat_var "end_pos" (src/code_matcher.ml[115,3482+22]..[115,3482+29])
                    expression (src/code_matcher.ml[115,3482+30]..[143,4518+63]) ghost
                      Pexp_fun
                      Labelled "mismatch_handler"
                      None
                      pattern (src/code_matcher.ml[115,3482+31]..[115,3482+47])
                        Ppat_var "mismatch_handler" (src/code_matcher.ml[115,3482+31]..[115,3482+47])
                      expression (src/code_matcher.ml[115,3482+48]..[143,4518+63]) ghost
                        Pexp_fun
                        Labelled "expected"
                        None
                        pattern (src/code_matcher.ml[115,3482+49]..[115,3482+57])
                          Ppat_var "expected" (src/code_matcher.ml[115,3482+49]..[115,3482+57])
                        expression (src/code_matcher.ml[115,3482+58]..[143,4518+63]) ghost
                          Pexp_fun
                          Labelled "source"
                          None
                          pattern (src/code_matcher.ml[115,3482+59]..[115,3482+65])
                            Ppat_var "source" (src/code_matcher.ml[115,3482+59]..[115,3482+65])
                          expression (src/code_matcher.ml[116,3550+4]..[143,4518+63])
                            Pexp_match
                            expression (src/code_matcher.ml[116,3550+10]..[116,3550+28])
                              Pexp_tuple
                              [
                                expression (src/code_matcher.ml[116,3550+11]..[116,3550+19])
                                  Pexp_ident "expected" (src/code_matcher.ml[116,3550+11]..[116,3550+19])
                                expression (src/code_matcher.ml[116,3550+21]..[116,3550+27])
                                  Pexp_ident "source" (src/code_matcher.ml[116,3550+21]..[116,3550+27])
                              ]
                            [
                              <case>
                                pattern (src/code_matcher.ml[117,3584+6]..[117,3584+12])
                                  Ppat_tuple
                                  [
                                    pattern (src/code_matcher.ml[117,3584+6]..[117,3584+8])
                                      Ppat_construct "[]" (src/code_matcher.ml[117,3584+6]..[117,3584+8])
                                      None
                                    pattern (src/code_matcher.ml[117,3584+10]..[117,3584+12])
                                      Ppat_construct "[]" (src/code_matcher.ml[117,3584+10]..[117,3584+12])
                                      None
                                  ]
                                expression (src/code_matcher.ml[117,3584+16]..[117,3584+18])
                                  Pexp_construct "()" (src/code_matcher.ml[117,3584+16]..[117,3584+18])
                                  None
                              <case>
                                pattern (src/code_matcher.ml[118,3603+6]..[118,3603+16])
                                  Ppat_tuple
                                  [
                                    pattern (src/code_matcher.ml[118,3603+6]..[118,3603+8])
                                      Ppat_construct "[]" (src/code_matcher.ml[118,3603+6]..[118,3603+8])
                                      None
                                    pattern (src/code_matcher.ml[118,3603+10]..[118,3603+16])
                                      Ppat_construct "::" (src/code_matcher.ml[118,3603+12]..[118,3603+14])
                                      Some
                                        pattern (src/code_matcher.ml[118,3603+10]..[118,3603+16]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (src/code_matcher.ml[118,3603+10]..[118,3603+11])
                                              Ppat_var "x" (src/code_matcher.ml[118,3603+10]..[118,3603+11])
                                            pattern (src/code_matcher.ml[118,3603+15]..[118,3603+16])
                                              Ppat_var "l" (src/code_matcher.ml[118,3603+15]..[118,3603+16])
                                          ]
                                  ]
                                expression (src/code_matcher.ml[119,3623+8]..[122,3726+31])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/code_matcher.ml[119,3623+12]..[119,3623+15])
                                        Ppat_var "loc" (src/code_matcher.ml[119,3623+12]..[119,3623+15])
                                      expression (src/code_matcher.ml[120,3641+10]..[120,3641+73])
                                        Pexp_record
                                        [
                                          "loc_end" (src/code_matcher.ml[120,3641+31]..[120,3641+38])
                                            expression (src/code_matcher.ml[120,3641+41]..[120,3641+71])
                                              Pexp_field
                                              expression (src/code_matcher.ml[120,3641+41]..[120,3641+63])
                                                Pexp_apply
                                                expression (src/code_matcher.ml[120,3641+42]..[120,3641+51])
                                                  Pexp_ident "M.get_loc" (src/code_matcher.ml[120,3641+42]..[120,3641+51])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/code_matcher.ml[120,3641+52]..[120,3641+62])
                                                      Pexp_apply
                                                      expression (src/code_matcher.ml[120,3641+53]..[120,3641+57])
                                                        Pexp_ident "last" (src/code_matcher.ml[120,3641+53]..[120,3641+57])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/code_matcher.ml[120,3641+58]..[120,3641+59])
                                                            Pexp_ident "x" (src/code_matcher.ml[120,3641+58]..[120,3641+59])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/code_matcher.ml[120,3641+60]..[120,3641+61])
                                                            Pexp_ident "l" (src/code_matcher.ml[120,3641+60]..[120,3641+61])
                                                      ]
                                                ]
                                              "loc_end" (src/code_matcher.ml[120,3641+64]..[120,3641+71])
                                        ]
                                        Some
                                          expression (src/code_matcher.ml[120,3641+12]..[120,3641+25])
                                            Pexp_apply
                                            expression (src/code_matcher.ml[120,3641+13]..[120,3641+22])
                                              Pexp_ident "M.get_loc" (src/code_matcher.ml[120,3641+13]..[120,3641+22])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/code_matcher.ml[120,3641+23]..[120,3641+24])
                                                  Pexp_ident "x" (src/code_matcher.ml[120,3641+23]..[120,3641+24])
                                            ]
                                  ]
                                  expression (src/code_matcher.ml[122,3726+8]..[122,3726+31])
                                    Pexp_apply
                                    expression (src/code_matcher.ml[122,3726+8]..[122,3726+24])
                                      Pexp_ident "mismatch_handler" (src/code_matcher.ml[122,3726+8]..[122,3726+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/code_matcher.ml[122,3726+25]..[122,3726+28])
                                          Pexp_ident "loc" (src/code_matcher.ml[122,3726+25]..[122,3726+28])
                                      <arg>
                                      Nolabel
                                        expression (src/code_matcher.ml[122,3726+29]..[122,3726+31])
                                          Pexp_construct "[]" (src/code_matcher.ml[122,3726+29]..[122,3726+31])
                                          None
                                    ]
                              <case>
                                pattern (src/code_matcher.ml[123,3758+6]..[123,3758+11])
                                  Ppat_tuple
                                  [
                                    pattern (src/code_matcher.ml[123,3758+6]..[123,3758+7])
                                      Ppat_any
                                    pattern (src/code_matcher.ml[123,3758+9]..[123,3758+11])
                                      Ppat_construct "[]" (src/code_matcher.ml[123,3758+9]..[123,3758+11])
                                      None
                                  ]
                                expression (src/code_matcher.ml[124,3773+8]..[127,3883+37])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/code_matcher.ml[124,3773+12]..[124,3773+15])
                                        Ppat_var "loc" (src/code_matcher.ml[124,3773+12]..[124,3773+15])
                                      expression (src/code_matcher.ml[125,3791+10]..[125,3791+80])
                                        Pexp_record
                                        [
                                          "Location.loc_ghost" (src/code_matcher.ml[125,3791+12]..[125,3791+30])
                                            expression (src/code_matcher.ml[125,3791+33]..[125,3791+38])
                                              Pexp_construct "false" (src/code_matcher.ml[125,3791+33]..[125,3791+38])
                                              None
                                          "loc_start" (src/code_matcher.ml[125,3791+40]..[125,3791+49])
                                            expression (src/code_matcher.ml[125,3791+52]..[125,3791+59])
                                              Pexp_ident "end_pos" (src/code_matcher.ml[125,3791+52]..[125,3791+59])
                                          "loc_end" (src/code_matcher.ml[125,3791+61]..[125,3791+68])
                                            expression (src/code_matcher.ml[125,3791+71]..[125,3791+78])
                                              Pexp_ident "end_pos" (src/code_matcher.ml[125,3791+71]..[125,3791+78])
                                        ]
                                        None
                                  ]
                                  expression (src/code_matcher.ml[127,3883+8]..[127,3883+37])
                                    Pexp_apply
                                    expression (src/code_matcher.ml[127,3883+8]..[127,3883+24])
                                      Pexp_ident "mismatch_handler" (src/code_matcher.ml[127,3883+8]..[127,3883+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/code_matcher.ml[127,3883+25]..[127,3883+28])
                                          Pexp_ident "loc" (src/code_matcher.ml[127,3883+25]..[127,3883+28])
                                      <arg>
                                      Nolabel
                                        expression (src/code_matcher.ml[127,3883+29]..[127,3883+37])
                                          Pexp_ident "expected" (src/code_matcher.ml[127,3883+29]..[127,3883+37])
                                    ]
                              <case>
                                pattern (src/code_matcher.ml[128,3921+6]..[128,3921+32])
                                  Ppat_tuple
                                  [
                                    pattern (src/code_matcher.ml[128,3921+6]..[128,3921+19])
                                      Ppat_construct "::" (src/code_matcher.ml[128,3921+8]..[128,3921+10])
                                      Some
                                        pattern (src/code_matcher.ml[128,3921+6]..[128,3921+19]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (src/code_matcher.ml[128,3921+6]..[128,3921+7])
                                              Ppat_var "x" (src/code_matcher.ml[128,3921+6]..[128,3921+7])
                                            pattern (src/code_matcher.ml[128,3921+11]..[128,3921+19])
                                              Ppat_var "expected" (src/code_matcher.ml[128,3921+11]..[128,3921+19])
                                          ]
                                    pattern (src/code_matcher.ml[128,3921+21]..[128,3921+32])
                                      Ppat_construct "::" (src/code_matcher.ml[128,3921+23]..[128,3921+25])
                                      Some
                                        pattern (src/code_matcher.ml[128,3921+21]..[128,3921+32]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (src/code_matcher.ml[128,3921+21]..[128,3921+22])
                                              Ppat_var "y" (src/code_matcher.ml[128,3921+21]..[128,3921+22])
                                            pattern (src/code_matcher.ml[128,3921+26]..[128,3921+32])
                                              Ppat_var "source" (src/code_matcher.ml[128,3921+26]..[128,3921+32])
                                          ]
                                  ]
                                expression (src/code_matcher.ml[129,3957+8]..[143,4518+63])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/code_matcher.ml[129,3957+12]..[129,3957+15])
                                        Ppat_var "loc" (src/code_matcher.ml[129,3957+12]..[129,3957+15])
                                      expression (src/code_matcher.ml[129,3957+18]..[129,3957+29])
                                        Pexp_apply
                                        expression (src/code_matcher.ml[129,3957+18]..[129,3957+27])
                                          Pexp_ident "M.get_loc" (src/code_matcher.ml[129,3957+18]..[129,3957+27])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/code_matcher.ml[129,3957+28]..[129,3957+29])
                                              Pexp_ident "y" (src/code_matcher.ml[129,3957+28]..[129,3957+29])
                                        ]
                                  ]
                                  expression (src/code_matcher.ml[130,3990+8]..[143,4518+63])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/code_matcher.ml[130,3990+12]..[130,3990+13])
                                          Ppat_var "x" (src/code_matcher.ml[130,3990+12]..[130,3990+13])
                                        expression (src/code_matcher.ml[130,3990+16]..[130,3990+28])
                                          Pexp_apply
                                          expression (src/code_matcher.ml[130,3990+16]..[130,3990+26])
                                            Pexp_ident "remove_loc" (src/code_matcher.ml[130,3990+16]..[130,3990+26])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/code_matcher.ml[130,3990+27]..[130,3990+28])
                                                Pexp_ident "x" (src/code_matcher.ml[130,3990+27]..[130,3990+28])
                                          ]
                                    ]
                                    expression (src/code_matcher.ml[131,4022+8]..[143,4518+63])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/code_matcher.ml[131,4022+12]..[131,4022+13])
                                            Ppat_var "y" (src/code_matcher.ml[131,4022+12]..[131,4022+13])
                                          expression (src/code_matcher.ml[131,4022+16]..[131,4022+28])
                                            Pexp_apply
                                            expression (src/code_matcher.ml[131,4022+16]..[131,4022+26])
                                              Pexp_ident "remove_loc" (src/code_matcher.ml[131,4022+16]..[131,4022+26])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/code_matcher.ml[131,4022+27]..[131,4022+28])
                                                  Pexp_ident "y" (src/code_matcher.ml[131,4022+27]..[131,4022+28])
                                            ]
                                      ]
                                      expression (src/code_matcher.ml[132,4054+8]..[143,4518+63])
                                        Pexp_sequence
                                        expression (src/code_matcher.ml[132,4054+8]..[142,4479+37])
                                          Pexp_ifthenelse
                                          expression (src/code_matcher.ml[132,4054+11]..[132,4054+26])
                                            Pexp_apply
                                            expression (src/code_matcher.ml[132,4054+11]..[132,4054+22])
                                              Pexp_ident "Poly.<>" (src/code_matcher.ml[132,4054+11]..[132,4054+22])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/code_matcher.ml[132,4054+23]..[132,4054+24])
                                                  Pexp_ident "x" (src/code_matcher.ml[132,4054+23]..[132,4054+24])
                                              <arg>
                                              Nolabel
                                                expression (src/code_matcher.ml[132,4054+25]..[132,4054+26])
                                                  Pexp_ident "y" (src/code_matcher.ml[132,4054+25]..[132,4054+26])
                                            ]
                                          expression (src/code_matcher.ml[132,4054+32]..[142,4479+37])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/code_matcher.ml[133,4088+14]..[133,4088+24])
                                                  Ppat_var "round_trip" (src/code_matcher.ml[133,4088+14]..[133,4088+24])
                                                expression (src/code_matcher.ml[134,4115+12]..[134,4115+69])
                                                  Pexp_apply
                                                  expression (src/code_matcher.ml[134,4115+12]..[134,4115+22])
                                                    Pexp_ident "remove_loc" (src/code_matcher.ml[134,4115+12]..[134,4115+22])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/code_matcher.ml[134,4115+23]..[134,4115+69])
                                                        Pexp_apply
                                                        expression (src/code_matcher.ml[134,4115+24]..[134,4115+36])
                                                          Pexp_ident "parse_string" (src/code_matcher.ml[134,4115+24]..[134,4115+36])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/code_matcher.ml[134,4115+37]..[134,4115+68])
                                                              Pexp_apply
                                                              expression (src/code_matcher.ml[134,4115+38]..[134,4115+53])
                                                                Pexp_ident "Format.asprintf" (src/code_matcher.ml[134,4115+38]..[134,4115+53])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/code_matcher.ml[134,4115+54]..[134,4115+60])
                                                                    Pexp_constant PConst_string("%a@.",(src/code_matcher.ml[134,4115+55]..[134,4115+59]),None)
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/code_matcher.ml[134,4115+61]..[134,4115+65])
                                                                    Pexp_ident "M.pp" (src/code_matcher.ml[134,4115+61]..[134,4115+65])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/code_matcher.ml[134,4115+66]..[134,4115+67])
                                                                    Pexp_ident "x" (src/code_matcher.ml[134,4115+66]..[134,4115+67])
                                                              ]
                                                        ]
                                                  ]
                                            ]
                                            expression (src/code_matcher.ml[136,4198+10]..[142,4479+36])
                                              Pexp_sequence
                                              expression (src/code_matcher.ml[136,4198+10]..[141,4427+50])
                                                Pexp_ifthenelse
                                                expression (src/code_matcher.ml[136,4198+13]..[136,4198+37])
                                                  Pexp_apply
                                                  expression (src/code_matcher.ml[136,4198+13]..[136,4198+24])
                                                    Pexp_ident "Poly.<>" (src/code_matcher.ml[136,4198+13]..[136,4198+24])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/code_matcher.ml[136,4198+25]..[136,4198+26])
                                                        Pexp_ident "x" (src/code_matcher.ml[136,4198+25]..[136,4198+26])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/code_matcher.ml[136,4198+27]..[136,4198+37])
                                                        Pexp_ident "round_trip" (src/code_matcher.ml[136,4198+27]..[136,4198+37])
                                                  ]
                                                expression (src/code_matcher.ml[137,4241+12]..[141,4427+50])
                                                  Pexp_apply
                                                  expression (src/code_matcher.ml[137,4241+12]..[137,4241+33])
                                                    Pexp_ident "Location.raise_errorf" (src/code_matcher.ml[137,4241+12]..[137,4241+33])
                                                  [
                                                    <arg>
                                                    Labelled "loc"
                                                      expression (src/code_matcher.ml[137,4241+35]..[137,4241+38])
                                                        Pexp_ident "loc" (src/code_matcher.ml[137,4241+35]..[137,4241+38])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/code_matcher.ml[138,4280+14]..[140,4408+18])
                                                        Pexp_constant PConst_string("ppxlib: the corrected code doesn't round-trip.\nThis is probably a bug in the OCaml printer:\n%s",(src/code_matcher.ml[138,4280+15]..[140,4408+17]),None)
                                                    <arg>
                                                    Nolabel
                                                      expression (src/code_matcher.ml[141,4427+14]..[141,4427+50])
                                                        Pexp_apply
                                                        expression (src/code_matcher.ml[141,4427+15]..[141,4427+24])
                                                          Pexp_ident "diff_asts" (src/code_matcher.ml[141,4427+15]..[141,4427+24])
                                                        [
                                                          <arg>
                                                          Labelled "generated"
                                                            expression (src/code_matcher.ml[141,4427+36]..[141,4427+37])
                                                              Pexp_ident "x" (src/code_matcher.ml[141,4427+36]..[141,4427+37])
                                                          <arg>
                                                          Labelled "round_trip"
                                                            expression (src/code_matcher.ml[141,4427+39]..[141,4427+49])
                                                              Pexp_ident "round_trip" (src/code_matcher.ml[141,4427+39]..[141,4427+49])
                                                        ]
                                                  ]
                                                None
                                              expression (src/code_matcher.ml[142,4479+10]..[142,4479+36])
                                                Pexp_apply
                                                expression (src/code_matcher.ml[142,4479+10]..[142,4479+26])
                                                  Pexp_ident "mismatch_handler" (src/code_matcher.ml[142,4479+10]..[142,4479+26])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/code_matcher.ml[142,4479+27]..[142,4479+30])
                                                      Pexp_ident "loc" (src/code_matcher.ml[142,4479+27]..[142,4479+30])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/code_matcher.ml[142,4479+31]..[142,4479+36])
                                                      Pexp_construct "::" (src/code_matcher.ml[142,4479+33]..[142,4479+36]) ghost
                                                      Some
                                                        expression (src/code_matcher.ml[142,4479+33]..[142,4479+36]) ghost
                                                          Pexp_tuple
                                                          [
                                                            expression (src/code_matcher.ml[142,4479+33]..[142,4479+34])
                                                              Pexp_ident "x" (src/code_matcher.ml[142,4479+33]..[142,4479+34])
                                                            expression (src/code_matcher.ml[142,4479+35]..[142,4479+36]) ghost
                                                              Pexp_construct "[]" (src/code_matcher.ml[142,4479+35]..[142,4479+36]) ghost
                                                              None
                                                          ]
                                                ]
                                          None
                                        expression (src/code_matcher.ml[143,4518+8]..[143,4518+63])
                                          Pexp_apply
                                          expression (src/code_matcher.ml[143,4518+8]..[143,4518+18])
                                            Pexp_ident "match_loop" (src/code_matcher.ml[143,4518+8]..[143,4518+18])
                                          [
                                            <arg>
                                            Labelled "end_pos"
                                              expression (src/code_matcher.ml[143,4518+20]..[143,4518+27])
                                                Pexp_ident "end_pos" (src/code_matcher.ml[143,4518+20]..[143,4518+27])
                                            <arg>
                                            Labelled "mismatch_handler"
                                              expression (src/code_matcher.ml[143,4518+29]..[143,4518+45])
                                                Pexp_ident "mismatch_handler" (src/code_matcher.ml[143,4518+29]..[143,4518+45])
                                            <arg>
                                            Labelled "expected"
                                              expression (src/code_matcher.ml[143,4518+47]..[143,4518+55])
                                                Pexp_ident "expected" (src/code_matcher.ml[143,4518+47]..[143,4518+55])
                                            <arg>
                                            Labelled "source"
                                              expression (src/code_matcher.ml[143,4518+57]..[143,4518+63])
                                                Pexp_ident "source" (src/code_matcher.ml[143,4518+57]..[143,4518+63])
                                          ]
                            ]
              ]
            structure_item (src/code_matcher.ml[145,4583+2]..[148,4723+59])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/code_matcher.ml[145,4583+6]..[145,4583+14])
                    Ppat_var "do_match" (src/code_matcher.ml[145,4583+6]..[145,4583+14])
                  expression (src/code_matcher.ml[145,4583+15]..[148,4723+59]) ghost
                    Pexp_fun
                    Labelled "pos"
                    None
                    pattern (src/code_matcher.ml[145,4583+16]..[145,4583+19])
                      Ppat_var "pos" (src/code_matcher.ml[145,4583+16]..[145,4583+19])
                    expression (src/code_matcher.ml[145,4583+20]..[148,4723+59]) ghost
                      Pexp_fun
                      Labelled "expected"
                      None
                      pattern (src/code_matcher.ml[145,4583+21]..[145,4583+29])
                        Ppat_var "expected" (src/code_matcher.ml[145,4583+21]..[145,4583+29])
                      expression (src/code_matcher.ml[145,4583+30]..[148,4723+59]) ghost
                        Pexp_fun
                        Labelled "mismatch_handler"
                        None
                        pattern (src/code_matcher.ml[145,4583+31]..[145,4583+47])
                          Ppat_var "mismatch_handler" (src/code_matcher.ml[145,4583+31]..[145,4583+47])
                        expression (src/code_matcher.ml[145,4583+48]..[148,4723+59]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/code_matcher.ml[145,4583+48]..[145,4583+54])
                            Ppat_var "source" (src/code_matcher.ml[145,4583+48]..[145,4583+54])
                          expression (src/code_matcher.ml[146,4640+4]..[148,4723+59])
                            Pexp_open Fresh
                            module_expr (src/code_matcher.ml[146,4640+13]..[146,4640+19])
                              Pmod_ident "Result" (src/code_matcher.ml[146,4640+13]..[146,4640+19])
                            expression (src/code_matcher.ml[147,4663+4]..[148,4723+59])
                              Pexp_apply
                              expression (src/code_matcher.ml[147,4663+31]..[147,4663+34])
                                Pexp_ident ">>|" (src/code_matcher.ml[147,4663+31]..[147,4663+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/code_matcher.ml[147,4663+4]..[147,4663+30])
                                    Pexp_apply
                                    expression (src/code_matcher.ml[147,4663+4]..[147,4663+18])
                                      Pexp_ident "extract_prefix" (src/code_matcher.ml[147,4663+4]..[147,4663+18])
                                    [
                                      <arg>
                                      Labelled "pos"
                                        expression (src/code_matcher.ml[147,4663+20]..[147,4663+23])
                                          Pexp_ident "pos" (src/code_matcher.ml[147,4663+20]..[147,4663+23])
                                      <arg>
                                      Nolabel
                                        expression (src/code_matcher.ml[147,4663+24]..[147,4663+30])
                                          Pexp_ident "source" (src/code_matcher.ml[147,4663+24]..[147,4663+30])
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/code_matcher.ml[147,4663+35]..[148,4723+59])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (src/code_matcher.ml[147,4663+39]..[147,4663+56])
                                      Ppat_tuple
                                      [
                                        pattern (src/code_matcher.ml[147,4663+40]..[147,4663+46])
                                          Ppat_var "source" (src/code_matcher.ml[147,4663+40]..[147,4663+46])
                                        pattern (src/code_matcher.ml[147,4663+48]..[147,4663+55])
                                          Ppat_var "end_pos" (src/code_matcher.ml[147,4663+48]..[147,4663+55])
                                      ]
                                    expression (src/code_matcher.ml[148,4723+4]..[148,4723+59])
                                      Pexp_apply
                                      expression (src/code_matcher.ml[148,4723+4]..[148,4723+14])
                                        Pexp_ident "match_loop" (src/code_matcher.ml[148,4723+4]..[148,4723+14])
                                      [
                                        <arg>
                                        Labelled "end_pos"
                                          expression (src/code_matcher.ml[148,4723+16]..[148,4723+23])
                                            Pexp_ident "end_pos" (src/code_matcher.ml[148,4723+16]..[148,4723+23])
                                        <arg>
                                        Labelled "mismatch_handler"
                                          expression (src/code_matcher.ml[148,4723+25]..[148,4723+41])
                                            Pexp_ident "mismatch_handler" (src/code_matcher.ml[148,4723+25]..[148,4723+41])
                                        <arg>
                                        Labelled "expected"
                                          expression (src/code_matcher.ml[148,4723+43]..[148,4723+51])
                                            Pexp_ident "expected" (src/code_matcher.ml[148,4723+43]..[148,4723+51])
                                        <arg>
                                        Labelled "source"
                                          expression (src/code_matcher.ml[148,4723+53]..[148,4723+59])
                                            Pexp_ident "source" (src/code_matcher.ml[148,4723+53]..[148,4723+59])
                                      ]
                              ]
              ]
          ]
  structure_item (src/code_matcher.ml[152,4794+0]..[165,5113+4])
    Pstr_module
    "Str" (src/code_matcher.ml[152,4794+7]..[152,4794+10])
      module_expr (src/code_matcher.ml[152,4794+13]..[165,5113+4])
        Pmod_apply
        module_expr (src/code_matcher.ml[152,4794+13]..[152,4794+17])
          Pmod_ident "Make" (src/code_matcher.ml[152,4794+13]..[152,4794+17])
        module_expr (src/code_matcher.ml[152,4794+19]..[165,5113+3])
          Pmod_structure
          [
            structure_item (src/code_matcher.ml[153,4820+2]..[153,4820+25])
              Pstr_type Rec
              [
                type_declaration "t" (src/code_matcher.ml[153,4820+7]..[153,4820+8]) (src/code_matcher.ml[153,4820+2]..[153,4820+25])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (src/code_matcher.ml[153,4820+11]..[153,4820+25])
                        Ptyp_constr "structure_item" (src/code_matcher.ml[153,4820+11]..[153,4820+25])
                        []
              ]
            structure_item (src/code_matcher.ml[155,4847+2]..[155,4847+28])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/code_matcher.ml[155,4847+6]..[155,4847+13])
                    Ppat_var "get_loc" (src/code_matcher.ml[155,4847+6]..[155,4847+13])
                  expression (src/code_matcher.ml[155,4847+14]..[155,4847+28]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/code_matcher.ml[155,4847+14]..[155,4847+15])
                      Ppat_var "x" (src/code_matcher.ml[155,4847+14]..[155,4847+15])
                    expression (src/code_matcher.ml[155,4847+18]..[155,4847+28])
                      Pexp_field
                      expression (src/code_matcher.ml[155,4847+18]..[155,4847+19])
                        Pexp_ident "x" (src/code_matcher.ml[155,4847+18]..[155,4847+19])
                      "pstr_loc" (src/code_matcher.ml[155,4847+20]..[155,4847+28])
              ]
            structure_item (src/code_matcher.ml[156,4876+2]..[156,4876+33])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/code_matcher.ml[156,4876+6]..[156,4876+16])
                    Ppat_var "end_marker" (src/code_matcher.ml[156,4876+6]..[156,4876+16])
                  expression (src/code_matcher.ml[156,4876+19]..[156,4876+33])
                    Pexp_ident "end_marker_str" (src/code_matcher.ml[156,4876+19]..[156,4876+33])
              ]
            structure_item (src/code_matcher.ml[158,4911+2]..[160,4983+5])
              Pstr_module
              "Transform" (src/code_matcher.ml[158,4911+9]..[158,4911+18])
                module_expr (src/code_matcher.ml[158,4911+19]..[160,4983+5])
                  Pmod_functor "T" (src/code_matcher.ml[158,4911+20]..[158,4911+21])
                  module_type (src/code_matcher.ml[158,4911+24]..[158,4911+26])
                    Pmty_ident "T1" (src/code_matcher.ml[158,4911+24]..[158,4911+26])
                  module_expr (src/code_matcher.ml[158,4911+30]..[160,4983+5])
                    Pmod_structure
                    [
                      structure_item (src/code_matcher.ml[159,4948+4]..[159,4948+34])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (src/code_matcher.ml[159,4948+8]..[159,4948+13])
                              Ppat_var "apply" (src/code_matcher.ml[159,4948+8]..[159,4948+13])
                            expression (src/code_matcher.ml[159,4948+14]..[159,4948+34]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/code_matcher.ml[159,4948+14]..[159,4948+15])
                                Ppat_var "o" (src/code_matcher.ml[159,4948+14]..[159,4948+15])
                              expression (src/code_matcher.ml[159,4948+18]..[159,4948+34])
                                Pexp_send "structure_item"
                                expression (src/code_matcher.ml[159,4948+18]..[159,4948+19])
                                  Pexp_ident "o" (src/code_matcher.ml[159,4948+18]..[159,4948+19])
                        ]
                    ]
            structure_item (src/code_matcher.ml[162,4990+2]..[162,4990+34])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/code_matcher.ml[162,4990+6]..[162,4990+11])
                    Ppat_var "parse" (src/code_matcher.ml[162,4990+6]..[162,4990+11])
                  expression (src/code_matcher.ml[162,4990+14]..[162,4990+34])
                    Pexp_ident "Parse.implementation" (src/code_matcher.ml[162,4990+14]..[162,4990+34])
              ]
            structure_item (src/code_matcher.ml[163,5025+2]..[163,5025+35])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/code_matcher.ml[163,5025+6]..[163,5025+8])
                    Ppat_var "pp" (src/code_matcher.ml[163,5025+6]..[163,5025+8])
                  expression (src/code_matcher.ml[163,5025+11]..[163,5025+35])
                    Pexp_ident "Pprintast.structure_item" (src/code_matcher.ml[163,5025+11]..[163,5025+35])
              ]
            structure_item (src/code_matcher.ml[164,5061+2]..[164,5061+51])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/code_matcher.ml[164,5061+6]..[164,5061+13])
                    Ppat_var "to_sexp" (src/code_matcher.ml[164,5061+6]..[164,5061+13])
                  expression (src/code_matcher.ml[164,5061+16]..[164,5061+51])
                    Pexp_send "structure_item"
                    expression (src/code_matcher.ml[164,5061+16]..[164,5061+36])
                      Pexp_ident "Ast_traverse.sexp_of" (src/code_matcher.ml[164,5061+16]..[164,5061+36])
              ]
          ]
  structure_item (src/code_matcher.ml[168,5154+0]..[181,5468+4])
    Pstr_module
    "Sig" (src/code_matcher.ml[168,5154+7]..[168,5154+10])
      module_expr (src/code_matcher.ml[168,5154+13]..[181,5468+4])
        Pmod_apply
        module_expr (src/code_matcher.ml[168,5154+13]..[168,5154+17])
          Pmod_ident "Make" (src/code_matcher.ml[168,5154+13]..[168,5154+17])
        module_expr (src/code_matcher.ml[168,5154+19]..[181,5468+3])
          Pmod_structure
          [
            structure_item (src/code_matcher.ml[169,5180+2]..[169,5180+25])
              Pstr_type Rec
              [
                type_declaration "t" (src/code_matcher.ml[169,5180+7]..[169,5180+8]) (src/code_matcher.ml[169,5180+2]..[169,5180+25])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (src/code_matcher.ml[169,5180+11]..[169,5180+25])
                        Ptyp_constr "signature_item" (src/code_matcher.ml[169,5180+11]..[169,5180+25])
                        []
              ]
            structure_item (src/code_matcher.ml[171,5207+2]..[171,5207+28])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/code_matcher.ml[171,5207+6]..[171,5207+13])
                    Ppat_var "get_loc" (src/code_matcher.ml[171,5207+6]..[171,5207+13])
                  expression (src/code_matcher.ml[171,5207+14]..[171,5207+28]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/code_matcher.ml[171,5207+14]..[171,5207+15])
                      Ppat_var "x" (src/code_matcher.ml[171,5207+14]..[171,5207+15])
                    expression (src/code_matcher.ml[171,5207+18]..[171,5207+28])
                      Pexp_field
                      expression (src/code_matcher.ml[171,5207+18]..[171,5207+19])
                        Pexp_ident "x" (src/code_matcher.ml[171,5207+18]..[171,5207+19])
                      "psig_loc" (src/code_matcher.ml[171,5207+20]..[171,5207+28])
              ]
            structure_item (src/code_matcher.ml[172,5236+2]..[172,5236+33])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/code_matcher.ml[172,5236+6]..[172,5236+16])
                    Ppat_var "end_marker" (src/code_matcher.ml[172,5236+6]..[172,5236+16])
                  expression (src/code_matcher.ml[172,5236+19]..[172,5236+33])
                    Pexp_ident "end_marker_sig" (src/code_matcher.ml[172,5236+19]..[172,5236+33])
              ]
            structure_item (src/code_matcher.ml[174,5271+2]..[176,5343+5])
              Pstr_module
              "Transform" (src/code_matcher.ml[174,5271+9]..[174,5271+18])
                module_expr (src/code_matcher.ml[174,5271+19]..[176,5343+5])
                  Pmod_functor "T" (src/code_matcher.ml[174,5271+20]..[174,5271+21])
                  module_type (src/code_matcher.ml[174,5271+24]..[174,5271+26])
                    Pmty_ident "T1" (src/code_matcher.ml[174,5271+24]..[174,5271+26])
                  module_expr (src/code_matcher.ml[174,5271+30]..[176,5343+5])
                    Pmod_structure
                    [
                      structure_item (src/code_matcher.ml[175,5308+4]..[175,5308+34])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (src/code_matcher.ml[175,5308+8]..[175,5308+13])
                              Ppat_var "apply" (src/code_matcher.ml[175,5308+8]..[175,5308+13])
                            expression (src/code_matcher.ml[175,5308+14]..[175,5308+34]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/code_matcher.ml[175,5308+14]..[175,5308+15])
                                Ppat_var "o" (src/code_matcher.ml[175,5308+14]..[175,5308+15])
                              expression (src/code_matcher.ml[175,5308+18]..[175,5308+34])
                                Pexp_send "signature_item"
                                expression (src/code_matcher.ml[175,5308+18]..[175,5308+19])
                                  Pexp_ident "o" (src/code_matcher.ml[175,5308+18]..[175,5308+19])
                        ]
                    ]
            structure_item (src/code_matcher.ml[178,5350+2]..[178,5350+29])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/code_matcher.ml[178,5350+6]..[178,5350+11])
                    Ppat_var "parse" (src/code_matcher.ml[178,5350+6]..[178,5350+11])
                  expression (src/code_matcher.ml[178,5350+14]..[178,5350+29])
                    Pexp_ident "Parse.interface" (src/code_matcher.ml[178,5350+14]..[178,5350+29])
              ]
            structure_item (src/code_matcher.ml[179,5380+2]..[179,5380+35])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/code_matcher.ml[179,5380+6]..[179,5380+8])
                    Ppat_var "pp" (src/code_matcher.ml[179,5380+6]..[179,5380+8])
                  expression (src/code_matcher.ml[179,5380+11]..[179,5380+35])
                    Pexp_ident "Pprintast.signature_item" (src/code_matcher.ml[179,5380+11]..[179,5380+35])
              ]
            structure_item (src/code_matcher.ml[180,5416+2]..[180,5416+51])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/code_matcher.ml[180,5416+6]..[180,5416+13])
                    Ppat_var "to_sexp" (src/code_matcher.ml[180,5416+6]..[180,5416+13])
                  expression (src/code_matcher.ml[180,5416+16]..[180,5416+51])
                    Pexp_send "signature_item"
                    expression (src/code_matcher.ml[180,5416+16]..[180,5416+36])
                      Pexp_ident "Ast_traverse.sexp_of" (src/code_matcher.ml[180,5416+16]..[180,5416+36])
              ]
          ]
  structure_item (src/code_matcher.ml[185,5481+0]..[185,5481+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/code_matcher.ml[185,5481+4]..[185,5481+23])
          Ppat_var "match_structure_res" (src/code_matcher.ml[185,5481+4]..[185,5481+23])
        expression (src/code_matcher.ml[185,5481+26]..[185,5481+38])
          Pexp_ident "Str.do_match" (src/code_matcher.ml[185,5481+26]..[185,5481+38])
    ]
  structure_item (src/code_matcher.ml[187,5521+0]..[189,5635+70])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/code_matcher.ml[187,5521+4]..[187,5521+19])
          Ppat_var "match_structure" (src/code_matcher.ml[187,5521+4]..[187,5521+19])
        expression (src/code_matcher.ml[187,5521+20]..[189,5635+70]) ghost
          Pexp_fun
          Labelled "pos"
          None
          pattern (src/code_matcher.ml[187,5521+21]..[187,5521+24])
            Ppat_var "pos" (src/code_matcher.ml[187,5521+21]..[187,5521+24])
          expression (src/code_matcher.ml[187,5521+25]..[189,5635+70]) ghost
            Pexp_fun
            Labelled "expected"
            None
            pattern (src/code_matcher.ml[187,5521+26]..[187,5521+34])
              Ppat_var "expected" (src/code_matcher.ml[187,5521+26]..[187,5521+34])
            expression (src/code_matcher.ml[187,5521+35]..[189,5635+70]) ghost
              Pexp_fun
              Labelled "mismatch_handler"
              None
              pattern (src/code_matcher.ml[187,5521+36]..[187,5521+52])
                Ppat_var "mismatch_handler" (src/code_matcher.ml[187,5521+36]..[187,5521+52])
              expression (src/code_matcher.ml[187,5521+53]..[189,5635+70]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (src/code_matcher.ml[187,5521+53]..[187,5521+54])
                  Ppat_var "l" (src/code_matcher.ml[187,5521+53]..[187,5521+54])
                expression (src/code_matcher.ml[188,5578+2]..[189,5635+70])
                  Pexp_apply
                  expression (src/code_matcher.ml[189,5635+2]..[189,5635+4])
                    Pexp_ident "|>" (src/code_matcher.ml[189,5635+2]..[189,5635+4])
                  [
                    <arg>
                    Nolabel
                      expression (src/code_matcher.ml[188,5578+2]..[188,5578+56])
                        Pexp_apply
                        expression (src/code_matcher.ml[188,5578+2]..[188,5578+21])
                          Pexp_ident "match_structure_res" (src/code_matcher.ml[188,5578+2]..[188,5578+21])
                        [
                          <arg>
                          Labelled "pos"
                            expression (src/code_matcher.ml[188,5578+23]..[188,5578+26])
                              Pexp_ident "pos" (src/code_matcher.ml[188,5578+23]..[188,5578+26])
                          <arg>
                          Labelled "expected"
                            expression (src/code_matcher.ml[188,5578+28]..[188,5578+36])
                              Pexp_ident "expected" (src/code_matcher.ml[188,5578+28]..[188,5578+36])
                          <arg>
                          Labelled "mismatch_handler"
                            expression (src/code_matcher.ml[188,5578+38]..[188,5578+54])
                              Pexp_ident "mismatch_handler" (src/code_matcher.ml[188,5578+38]..[188,5578+54])
                          <arg>
                          Nolabel
                            expression (src/code_matcher.ml[188,5578+55]..[188,5578+56])
                              Pexp_ident "l" (src/code_matcher.ml[188,5578+55]..[188,5578+56])
                        ]
                    <arg>
                    Nolabel
                      expression (src/code_matcher.ml[189,5635+5]..[189,5635+70])
                        Pexp_apply
                        expression (src/code_matcher.ml[189,5635+5]..[189,5635+24])
                          Pexp_ident "Result.handle_error" (src/code_matcher.ml[189,5635+5]..[189,5635+24])
                        [
                          <arg>
                          Labelled "f"
                            expression (src/code_matcher.ml[189,5635+28]..[189,5635+70])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/code_matcher.ml[189,5635+33]..[189,5635+41])
                                Ppat_tuple
                                [
                                  pattern (src/code_matcher.ml[189,5635+34]..[189,5635+37])
                                    Ppat_var "err" (src/code_matcher.ml[189,5635+34]..[189,5635+37])
                                  pattern (src/code_matcher.ml[189,5635+39]..[189,5635+40])
                                    Ppat_any
                                ]
                              expression (src/code_matcher.ml[189,5635+45]..[189,5635+69])
                                Pexp_apply
                                expression (src/code_matcher.ml[189,5635+45]..[189,5635+65])
                                  Pexp_ident "Location.Error.raise" (src/code_matcher.ml[189,5635+45]..[189,5635+65])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/code_matcher.ml[189,5635+66]..[189,5635+69])
                                      Pexp_ident "err" (src/code_matcher.ml[189,5635+66]..[189,5635+69])
                                ]
                        ]
                  ]
    ]
  structure_item (src/code_matcher.ml[191,5707+0]..[191,5707+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/code_matcher.ml[191,5707+4]..[191,5707+23])
          Ppat_var "match_signature_res" (src/code_matcher.ml[191,5707+4]..[191,5707+23])
        expression (src/code_matcher.ml[191,5707+26]..[191,5707+38])
          Pexp_ident "Sig.do_match" (src/code_matcher.ml[191,5707+26]..[191,5707+38])
    ]
  structure_item (src/code_matcher.ml[193,5747+0]..[195,5861+70])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/code_matcher.ml[193,5747+4]..[193,5747+19])
          Ppat_var "match_signature" (src/code_matcher.ml[193,5747+4]..[193,5747+19])
        expression (src/code_matcher.ml[193,5747+20]..[195,5861+70]) ghost
          Pexp_fun
          Labelled "pos"
          None
          pattern (src/code_matcher.ml[193,5747+21]..[193,5747+24])
            Ppat_var "pos" (src/code_matcher.ml[193,5747+21]..[193,5747+24])
          expression (src/code_matcher.ml[193,5747+25]..[195,5861+70]) ghost
            Pexp_fun
            Labelled "expected"
            None
            pattern (src/code_matcher.ml[193,5747+26]..[193,5747+34])
              Ppat_var "expected" (src/code_matcher.ml[193,5747+26]..[193,5747+34])
            expression (src/code_matcher.ml[193,5747+35]..[195,5861+70]) ghost
              Pexp_fun
              Labelled "mismatch_handler"
              None
              pattern (src/code_matcher.ml[193,5747+36]..[193,5747+52])
                Ppat_var "mismatch_handler" (src/code_matcher.ml[193,5747+36]..[193,5747+52])
              expression (src/code_matcher.ml[193,5747+53]..[195,5861+70]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (src/code_matcher.ml[193,5747+53]..[193,5747+54])
                  Ppat_var "l" (src/code_matcher.ml[193,5747+53]..[193,5747+54])
                expression (src/code_matcher.ml[194,5804+2]..[195,5861+70])
                  Pexp_apply
                  expression (src/code_matcher.ml[195,5861+2]..[195,5861+4])
                    Pexp_ident "|>" (src/code_matcher.ml[195,5861+2]..[195,5861+4])
                  [
                    <arg>
                    Nolabel
                      expression (src/code_matcher.ml[194,5804+2]..[194,5804+56])
                        Pexp_apply
                        expression (src/code_matcher.ml[194,5804+2]..[194,5804+21])
                          Pexp_ident "match_signature_res" (src/code_matcher.ml[194,5804+2]..[194,5804+21])
                        [
                          <arg>
                          Labelled "pos"
                            expression (src/code_matcher.ml[194,5804+23]..[194,5804+26])
                              Pexp_ident "pos" (src/code_matcher.ml[194,5804+23]..[194,5804+26])
                          <arg>
                          Labelled "expected"
                            expression (src/code_matcher.ml[194,5804+28]..[194,5804+36])
                              Pexp_ident "expected" (src/code_matcher.ml[194,5804+28]..[194,5804+36])
                          <arg>
                          Labelled "mismatch_handler"
                            expression (src/code_matcher.ml[194,5804+38]..[194,5804+54])
                              Pexp_ident "mismatch_handler" (src/code_matcher.ml[194,5804+38]..[194,5804+54])
                          <arg>
                          Nolabel
                            expression (src/code_matcher.ml[194,5804+55]..[194,5804+56])
                              Pexp_ident "l" (src/code_matcher.ml[194,5804+55]..[194,5804+56])
                        ]
                    <arg>
                    Nolabel
                      expression (src/code_matcher.ml[195,5861+5]..[195,5861+70])
                        Pexp_apply
                        expression (src/code_matcher.ml[195,5861+5]..[195,5861+24])
                          Pexp_ident "Result.handle_error" (src/code_matcher.ml[195,5861+5]..[195,5861+24])
                        [
                          <arg>
                          Labelled "f"
                            expression (src/code_matcher.ml[195,5861+28]..[195,5861+70])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/code_matcher.ml[195,5861+33]..[195,5861+41])
                                Ppat_tuple
                                [
                                  pattern (src/code_matcher.ml[195,5861+34]..[195,5861+37])
                                    Ppat_var "err" (src/code_matcher.ml[195,5861+34]..[195,5861+37])
                                  pattern (src/code_matcher.ml[195,5861+39]..[195,5861+40])
                                    Ppat_any
                                ]
                              expression (src/code_matcher.ml[195,5861+45]..[195,5861+69])
                                Pexp_apply
                                expression (src/code_matcher.ml[195,5861+45]..[195,5861+65])
                                  Pexp_ident "Location.Error.raise" (src/code_matcher.ml[195,5861+45]..[195,5861+65])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/code_matcher.ml[195,5861+66]..[195,5861+69])
                                      Pexp_ident "err" (src/code_matcher.ml[195,5861+66]..[195,5861+69])
                                ]
                        ]
                  ]
    ]
]

open! Import
module Format = Stdlib.Format
module Filename = Stdlib.Filename
let end_marker_sig =
  Attribute.Floating.declare "deriving.end" Signature_item
    (let open Ast_pattern in pstr nil) ()
let end_marker_str =
  Attribute.Floating.declare "deriving.end" Structure_item
    (let open Ast_pattern in pstr nil) ()
module type T1  = sig type 'a t end
module Make(M:sig
                type t
                val get_loc : t -> Location.t
                val end_marker : (t, unit) Attribute.Floating.t
                module Transform :
                functor (T : T1) ->
                  sig
                    val apply :
                      <
                        structure_item: structure_item T.t  ;signature_item: 
                                                               signature_item
                                                                 T.t   ;.. > 
                        -> t T.t
                  end
                val parse : Lexing.lexbuf -> t list
                val pp : Format.formatter -> t -> unit
                val to_sexp : t -> Sexp.t
              end) =
  struct
    let extract_prefix ~pos  l =
      let rec loop acc =
        function
        | [] ->
            let loc =
              { Location.loc_start = pos; loc_end = pos; loc_ghost = false } in
            Error
              ((Location.Error.createf ~loc
                  "ppxlib: [@@@@@@%s] attribute missing"
                  (Attribute.Floating.name M.end_marker)), [])
        | x::l ->
            (match Attribute.Floating.convert_res [M.end_marker] x with
             | Ok (None) -> loop (x :: acc) l
             | Ok (Some ()) -> Ok ((List.rev acc), ((M.get_loc x).loc_start))
             | Error e -> Error e
             | exception Failure _ -> loop (x :: acc) l) in
      loop [] l
    let remove_loc =
      object
        inherit  Ast_traverse.map
        method! location _ = Location.none
        method! location_stack _ = []
      end
    module M_map = (M.Transform)(struct type 'a t = 'a -> 'a end)
    let remove_loc x = M_map.apply remove_loc x
    let rec last prev = function | [] -> prev | x::l -> last x l
    let diff_asts ~generated  ~round_trip  =
      let with_temp_file f =
        Exn.protectx (Filename.temp_file "ppxlib" "")
          ~finally:Stdlib.Sys.remove ~f in
      with_temp_file
        (fun fn1 ->
           with_temp_file
             (fun fn2 ->
                with_temp_file
                  (fun out ->
                     let dump fn ast =
                       Out_channel.with_file fn
                         ~f:(fun oc ->
                               let ppf = Format.formatter_of_out_channel oc in
                               Sexp.pp_hum ppf (M.to_sexp ast);
                               Format.pp_print_flush ppf ()) in
                     dump fn1 generated;
                     dump fn2 round_trip;
                     (let cmd =
                        Printf.sprintf
                          "patdiff -ascii -alt-old generated -alt-new 'generated->printed->parsed' %s %s &> %s"
                          (Filename.quote fn1) (Filename.quote fn2)
                          (Filename.quote out) in
                      let ok =
                        ((Stdlib.Sys.command cmd) = 1) ||
                          (let cmd =
                             Printf.sprintf
                               "diff --label generated --label 'generated->printed->parsed' %s %s &> %s"
                               (Filename.quote fn1) (Filename.quote fn2)
                               (Filename.quote out) in
                           (Stdlib.Sys.command cmd) = 1) in
                      if ok
                      then In_channel.read_all out
                      else "<no differences produced by diff>"))))
    let parse_string s =
      match M.parse (Lexing.from_string s) with
      | x::[] -> x
      | _ -> assert false
    let rec match_loop ~end_pos  ~mismatch_handler  ~expected  ~source  =
      match (expected, source) with
      | ([], []) -> ()
      | ([], x::l) ->
          let loc =
            { (M.get_loc x) with loc_end = ((M.get_loc (last x l)).loc_end) } in
          mismatch_handler loc []
      | (_, []) ->
          let loc =
            {
              Location.loc_ghost = false;
              loc_start = end_pos;
              loc_end = end_pos
            } in
          mismatch_handler loc expected
      | (x::expected, y::source) ->
          let loc = M.get_loc y in
          let x = remove_loc x in
          let y = remove_loc y in
          (if Poly.(<>) x y
           then
             (let round_trip =
                remove_loc (parse_string (Format.asprintf "%a@." M.pp x)) in
              if Poly.(<>) x round_trip
              then
                Location.raise_errorf ~loc
                  "ppxlib: the corrected code doesn't round-trip.\nThis is probably a bug in the OCaml printer:\n%s"
                  (diff_asts ~generated:x ~round_trip);
              mismatch_handler loc [x]);
           match_loop ~end_pos ~mismatch_handler ~expected ~source)
    let do_match ~pos  ~expected  ~mismatch_handler  source =
      let open Result in
        (extract_prefix ~pos source) >>|
          (fun (source, end_pos) ->
             match_loop ~end_pos ~mismatch_handler ~expected ~source)
  end
module Str =
  (Make)(struct
           type t = structure_item
           let get_loc x = x.pstr_loc
           let end_marker = end_marker_str
           module Transform(T:T1) = struct let apply o = o#structure_item end
           let parse = Parse.implementation
           let pp = Pprintast.structure_item
           let to_sexp = Ast_traverse.sexp_of#structure_item
         end)
module Sig =
  (Make)(struct
           type t = signature_item
           let get_loc x = x.psig_loc
           let end_marker = end_marker_sig
           module Transform(T:T1) = struct let apply o = o#signature_item end
           let parse = Parse.interface
           let pp = Pprintast.signature_item
           let to_sexp = Ast_traverse.sexp_of#signature_item
         end)
let match_structure_res = Str.do_match
let match_structure ~pos  ~expected  ~mismatch_handler  l =
  (match_structure_res ~pos ~expected ~mismatch_handler l) |>
    (Result.handle_error ~f:(fun (err, _) -> Location.Error.raise err))
let match_signature_res = Sig.do_match
let match_signature ~pos  ~expected  ~mismatch_handler  l =
  (match_signature_res ~pos ~expected ~mismatch_handler l) |>
    (Result.handle_error ~f:(fun (err, _) -> Location.Error.raise err))
[
  structure_item (src/code_matcher.ml[2,35+0]..src/code_matcher.ml[2,35+12])
    Tstr_open Override
    module_expr (src/code_matcher.ml[2,35+6]..src/code_matcher.ml[2,35+12])
      Tmod_ident "Ppxlib__!.Import"
  structure_item (src/code_matcher.ml[3,48+0]..src/code_matcher.ml[3,48+29])
    Tstr_module
    Format/550
      module_expr (src/code_matcher.ml[3,48+16]..src/code_matcher.ml[3,48+29])
        Tmod_ident "Stdlib!.Format"
  structure_item (src/code_matcher.ml[4,78+0]..src/code_matcher.ml[4,78+33])
    Tstr_module
    Filename/551
      module_expr (src/code_matcher.ml[4,78+18]..src/code_matcher.ml[4,78+33])
        Tmod_ident "Stdlib!.Filename"
  structure_item (src/code_matcher.ml[7,185+0]..src/code_matcher.ml[10,292+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/code_matcher.ml[7,185+4]..src/code_matcher.ml[7,185+18])
          Tpat_var "end_marker_sig/552"
        expression (src/code_matcher.ml[8,206+2]..src/code_matcher.ml[10,292+6])
          Texp_apply
          expression (src/code_matcher.ml[8,206+2]..src/code_matcher.ml[8,206+28])
            Texp_ident "Ppxlib__!.Attribute.Floating.declare"
          [
            <arg>
              Nolabel
              expression (src/code_matcher.ml[8,206+29]..src/code_matcher.ml[8,206+43])
                Texp_constant Const_string("deriving.end",(src/code_matcher.ml[8,206+30]..src/code_matcher.ml[8,206+42]),None)
            <arg>
              Nolabel
              expression (src/code_matcher.ml[8,206+44]..src/code_matcher.ml[8,206+58])
                Texp_construct "Signature_item"
                []
            <arg>
              Nolabel
              expression (src/code_matcher.ml[9,265+4]..src/code_matcher.ml[9,265+26])
                Texp_open Fresh
                module_expr (src/code_matcher.ml[9,265+4]..src/code_matcher.ml[9,265+15])
                  Tmod_ident "Ppxlib__!.Ast_pattern"
                expression (src/code_matcher.ml[9,265+17]..src/code_matcher.ml[9,265+25])
                  Texp_apply
                  expression (src/code_matcher.ml[9,265+17]..src/code_matcher.ml[9,265+21])
                    Texp_ident "Ppxlib__!.Ast_pattern.pstr"
                  [
                    <arg>
                      Nolabel
                      expression (src/code_matcher.ml[9,265+22]..src/code_matcher.ml[9,265+25])
                        Texp_ident "Ppxlib__!.Ast_pattern.nil"
                  ]
            <arg>
              Nolabel
              expression (src/code_matcher.ml[10,292+4]..src/code_matcher.ml[10,292+6])
                Texp_construct "()"
                []
          ]
    ]
  structure_item (src/code_matcher.ml[12,300+0]..src/code_matcher.ml[15,407+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/code_matcher.ml[12,300+4]..src/code_matcher.ml[12,300+18])
          Tpat_var "end_marker_str/1040"
        expression (src/code_matcher.ml[13,321+2]..src/code_matcher.ml[15,407+6])
          Texp_apply
          expression (src/code_matcher.ml[13,321+2]..src/code_matcher.ml[13,321+28])
            Texp_ident "Ppxlib__!.Attribute.Floating.declare"
          [
            <arg>
              Nolabel
              expression (src/code_matcher.ml[13,321+29]..src/code_matcher.ml[13,321+43])
                Texp_constant Const_string("deriving.end",(src/code_matcher.ml[13,321+30]..src/code_matcher.ml[13,321+42]),None)
            <arg>
              Nolabel
              expression (src/code_matcher.ml[13,321+44]..src/code_matcher.ml[13,321+58])
                Texp_construct "Structure_item"
                []
            <arg>
              Nolabel
              expression (src/code_matcher.ml[14,380+4]..src/code_matcher.ml[14,380+26])
                Texp_open Fresh
                module_expr (src/code_matcher.ml[14,380+4]..src/code_matcher.ml[14,380+15])
                  Tmod_ident "Ppxlib__!.Ast_pattern"
                expression (src/code_matcher.ml[14,380+17]..src/code_matcher.ml[14,380+25])
                  Texp_apply
                  expression (src/code_matcher.ml[14,380+17]..src/code_matcher.ml[14,380+21])
                    Texp_ident "Ppxlib__!.Ast_pattern.pstr"
                  [
                    <arg>
                      Nolabel
                      expression (src/code_matcher.ml[14,380+22]..src/code_matcher.ml[14,380+25])
                        Texp_ident "Ppxlib__!.Ast_pattern.nil"
                  ]
            <arg>
              Nolabel
              expression (src/code_matcher.ml[15,407+4]..src/code_matcher.ml[15,407+6])
                Texp_construct "()"
                []
          ]
    ]
  structure_item (src/code_matcher.ml[17,415+0]..src/code_matcher.ml[19,448+3])
    Tstr_modtype "T1/1042"
      module_type (src/code_matcher.ml[17,415+17]..src/code_matcher.ml[19,448+3])
        Tmty_signature
        [
          signature_item (src/code_matcher.ml[18,436+2]..src/code_matcher.ml[18,436+11])
            Tsig_type Rec
            [
              type_declaration t/1041 (src/code_matcher.ml[18,436+2]..src/code_matcher.ml[18,436+11])
                ptype_params =
                  [
                    core_type (src/code_matcher.ml[18,436+7]..src/code_matcher.ml[18,436+9])
                      Ttyp_var a
                  ]
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_abstract
                ptype_private = Public
                ptype_manifest =
                  None
            ]
        ]
  structure_item (src/code_matcher.ml[21,453+0]..src/code_matcher.ml[149,4783+3])
    Tstr_module
    Make/3113
      module_expr (src/code_matcher.ml[21,453+12]..src/code_matcher.ml[149,4783+3])
        Tmod_functor "M/1320"
        module_type (src/code_matcher.ml[21,453+17]..src/code_matcher.ml[38,847+3])
          Tmty_signature
          [
            signature_item (src/code_matcher.ml[22,474+2]..src/code_matcher.ml[22,474+8])
              Tsig_type Rec
              [
                type_declaration t/1043 (src/code_matcher.ml[22,474+2]..src/code_matcher.ml[22,474+8])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ttype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            signature_item (src/code_matcher.ml[24,484+2]..src/code_matcher.ml[24,484+31])
              Tsig_value
              value_description get_loc/1076 (src/code_matcher.ml[24,484+2]..src/code_matcher.ml[24,484+31])
                core_type (src/code_matcher.ml[24,484+16]..src/code_matcher.ml[24,484+31])
                  Ttyp_arrow
                  Nolabel
                  core_type (src/code_matcher.ml[24,484+16]..src/code_matcher.ml[24,484+17])
                    Ttyp_constr "t/1043"
                    []
                  core_type (src/code_matcher.ml[24,484+21]..src/code_matcher.ml[24,484+31])
                    Ttyp_constr "Ppxlib__!.Location.t"
                    []
                []
            signature_item (src/code_matcher.ml[25,516+2]..src/code_matcher.ml[25,516+49])
              Tsig_value
              value_description end_marker/1077 (src/code_matcher.ml[25,516+2]..src/code_matcher.ml[25,516+49])
                core_type (src/code_matcher.ml[25,516+19]..src/code_matcher.ml[25,516+49])
                  Ttyp_constr "Ppxlib__!.Attribute.Floating.t"
                  [
                    core_type (src/code_matcher.ml[25,516+20]..src/code_matcher.ml[25,516+21])
                      Ttyp_constr "t/1043"
                      []
                    core_type (src/code_matcher.ml[25,516+23]..src/code_matcher.ml[25,516+27])
                      Ttyp_constr "unit/6!"
                      []
                  ]
                []
            signature_item (src/code_matcher.ml[27,567+2]..src/code_matcher.ml[33,733+5])
              Tsig_module "Transform/1080"
              module_type (src/code_matcher.ml[27,567+19]..src/code_matcher.ml[33,733+5])
                Tmty_functor "T/1078"
                module_type (src/code_matcher.ml[27,567+24]..src/code_matcher.ml[27,567+26])
                  Tmty_ident "T1/1042"
                module_type (src/code_matcher.ml[27,567+30]..src/code_matcher.ml[33,733+5])
                  Tmty_signature
                  [
                    signature_item (src/code_matcher.ml[28,601+4]..src/code_matcher.ml[32,721+11])
                      Tsig_value
                      value_description apply/1079 (src/code_matcher.ml[28,601+4]..src/code_matcher.ml[32,721+11])
                        core_type (src/code_matcher.ml[29,617+6]..src/code_matcher.ml[32,721+11])
                          Ttyp_arrow
                          Nolabel
                          core_type (src/code_matcher.ml[29,617+6]..src/code_matcher.ml[31,705+12])
                            Ttyp_object Open
                              method structure_item
                                core_type (src/code_matcher.ml[29,617+25]..src/code_matcher.ml[29,617+43])
                                  Ttyp_poly
                                  core_type (src/code_matcher.ml[29,617+25]..src/code_matcher.ml[29,617+43])
                                    Ttyp_constr "T/1078.t"
                                    [
                                      core_type (src/code_matcher.ml[29,617+25]..src/code_matcher.ml[29,617+39])
                                        Ttyp_constr "Ppxlib__!.Import.structure_item"
                                        []
                                    ]
                              method signature_item
                                core_type (src/code_matcher.ml[30,661+25]..src/code_matcher.ml[30,661+43])
                                  Ttyp_poly
                                  core_type (src/code_matcher.ml[30,661+25]..src/code_matcher.ml[30,661+43])
                                    Ttyp_constr "T/1078.t"
                                    [
                                      core_type (src/code_matcher.ml[30,661+25]..src/code_matcher.ml[30,661+39])
                                        Ttyp_constr "Ppxlib__!.Import.signature_item"
                                        []
                                    ]
                          core_type (src/code_matcher.ml[32,721+6]..src/code_matcher.ml[32,721+11])
                            Ttyp_constr "T/1078.t"
                            [
                              core_type (src/code_matcher.ml[32,721+6]..src/code_matcher.ml[32,721+7])
                                Ttyp_constr "t/1043"
                                []
                            ]
                        []
                  ]
            signature_item (src/code_matcher.ml[35,740+2]..src/code_matcher.ml[35,740+37])
              Tsig_value
              value_description parse/1108 (src/code_matcher.ml[35,740+2]..src/code_matcher.ml[35,740+37])
                core_type (src/code_matcher.ml[35,740+14]..src/code_matcher.ml[35,740+37])
                  Ttyp_arrow
                  Nolabel
                  core_type (src/code_matcher.ml[35,740+14]..src/code_matcher.ml[35,740+27])
                    Ttyp_constr "Stdlib!.Lexing.lexbuf"
                    []
                  core_type (src/code_matcher.ml[35,740+31]..src/code_matcher.ml[35,740+37])
                    Ttyp_constr "list/11!"
                    [
                      core_type (src/code_matcher.ml[35,740+31]..src/code_matcher.ml[35,740+32])
                        Ttyp_constr "t/1043"
                        []
                    ]
                []
            signature_item (src/code_matcher.ml[36,778+2]..src/code_matcher.ml[36,778+40])
              Tsig_value
              value_description pp/1275 (src/code_matcher.ml[36,778+2]..src/code_matcher.ml[36,778+40])
                core_type (src/code_matcher.ml[36,778+11]..src/code_matcher.ml[36,778+40])
                  Ttyp_arrow
                  Nolabel
                  core_type (src/code_matcher.ml[36,778+11]..src/code_matcher.ml[36,778+27])
                    Ttyp_constr "Format/550.formatter"
                    []
                  core_type (src/code_matcher.ml[36,778+31]..src/code_matcher.ml[36,778+40])
                    Ttyp_arrow
                    Nolabel
                    core_type (src/code_matcher.ml[36,778+31]..src/code_matcher.ml[36,778+32])
                      Ttyp_constr "t/1043"
                      []
                    core_type (src/code_matcher.ml[36,778+36]..src/code_matcher.ml[36,778+40])
                      Ttyp_constr "unit/6!"
                      []
                []
            signature_item (src/code_matcher.ml[37,819+2]..src/code_matcher.ml[37,819+27])
              Tsig_value
              value_description to_sexp/1319 (src/code_matcher.ml[37,819+2]..src/code_matcher.ml[37,819+27])
                core_type (src/code_matcher.ml[37,819+16]..src/code_matcher.ml[37,819+27])
                  Ttyp_arrow
                  Nolabel
                  core_type (src/code_matcher.ml[37,819+16]..src/code_matcher.ml[37,819+17])
                    Ttyp_constr "t/1043"
                    []
                  core_type (src/code_matcher.ml[37,819+21]..src/code_matcher.ml[37,819+27])
                    Ttyp_constr "Ppxlib__!.Import.Sexp.t"
                    []
                []
          ]
        module_expr (src/code_matcher.ml[39,854+0]..src/code_matcher.ml[149,4783+3])
          module_expr (src/code_matcher.ml[39,854+0]..src/code_matcher.ml[149,4783+3])
            Tmod_structure
            [
              structure_item (src/code_matcher.ml[40,861+2]..src/code_matcher.ml[57,1512+13])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/code_matcher.ml[40,861+6]..src/code_matcher.ml[40,861+20])
                      Tpat_var "extract_prefix/1321"
                    expression (src/code_matcher.ml[40,861+21]..src/code_matcher.ml[57,1512+13]) ghost
                      Texp_function
                      Labelled "pos"
                      [
                        <case>
                          pattern (src/code_matcher.ml[40,861+22]..src/code_matcher.ml[40,861+25])
                            Tpat_var "pos/1323"
                          expression (src/code_matcher.ml[40,861+26]..src/code_matcher.ml[57,1512+13]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/code_matcher.ml[40,861+26]..src/code_matcher.ml[40,861+27])
                                  Tpat_var "l/1324"
                                expression (src/code_matcher.ml[41,891+4]..src/code_matcher.ml[57,1512+13])
                                  Texp_let Rec
                                  [
                                    <def>
                                      pattern (src/code_matcher.ml[41,891+12]..src/code_matcher.ml[41,891+16])
                                        Tpat_var "loop/1325"
                                      expression (src/code_matcher.ml[41,891+17]..src/code_matcher.ml[55,1451+53]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/code_matcher.ml[41,891+17]..src/code_matcher.ml[41,891+20])
                                              Tpat_var "acc/1326"
                                            expression (src/code_matcher.ml[41,891+23]..src/code_matcher.ml[55,1451+53])
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/code_matcher.ml[42,923+8]..src/code_matcher.ml[42,923+10])
                                                    Tpat_construct "[]"
                                                    []
                                                  expression (src/code_matcher.ml[43,937+10]..src/code_matcher.ml[49,1198+18])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (src/code_matcher.ml[43,937+14]..src/code_matcher.ml[43,937+17])
                                                          Tpat_var "loc/1329"
                                                        expression (src/code_matcher.ml[44,957+12]..src/code_matcher.ml[44,957+74])
                                                          Texp_record
                                                            fields =
                                                              [
                                                                "Location.loc_start"
                                                                  expression (src/code_matcher.ml[44,957+35]..src/code_matcher.ml[44,957+38])
                                                                    Texp_ident "pos/1323"
                                                                "Location.loc_end"
                                                                  expression (src/code_matcher.ml[44,957+50]..src/code_matcher.ml[44,957+53])
                                                                    Texp_ident "pos/1323"
                                                                "Location.loc_ghost"
                                                                  expression (src/code_matcher.ml[44,957+67]..src/code_matcher.ml[44,957+72])
                                                                    Texp_construct "false"
                                                                    []
                                                              ]
                                                            representation =
                                                              Record_regular
                                                            extended_expression =
                                                              None
                                                    ]
                                                    expression (src/code_matcher.ml[46,1045+10]..src/code_matcher.ml[49,1198+18])
                                                      Texp_construct "Error"
                                                      [
                                                        expression (src/code_matcher.ml[47,1061+12]..src/code_matcher.ml[49,1198+18])
                                                          Texp_tuple
                                                          [
                                                            expression (src/code_matcher.ml[47,1061+14]..src/code_matcher.ml[48,1142+54])
                                                              Texp_apply
                                                              expression (src/code_matcher.ml[47,1061+14]..src/code_matcher.ml[47,1061+36])
                                                                Texp_ident "Ppxlib__!.Location.Error.createf"
                                                              [
                                                                <arg>
                                                                  Labelled "loc"
                                                                  expression (src/code_matcher.ml[47,1061+38]..src/code_matcher.ml[47,1061+41])
                                                                    Texp_ident "loc/1329"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/code_matcher.ml[47,1061+42]..src/code_matcher.ml[47,1061+80])
                                                                    Texp_construct "CamlinternalFormatBasics.Format"
                                                                    [
                                                                      expression (src/code_matcher.ml[47,1061+42]..src/code_matcher.ml[47,1061+80]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                        [
                                                                          expression (src/code_matcher.ml[47,1061+42]..src/code_matcher.ml[47,1061+80]) ghost
                                                                            Texp_constant Const_string("ppxlib: [",(src/code_matcher.ml[47,1061+42]..src/code_matcher.ml[47,1061+80]) ghost,None)
                                                                          expression (src/code_matcher.ml[47,1061+42]..src/code_matcher.ml[47,1061+80]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                            [
                                                                              expression (src/code_matcher.ml[47,1061+42]..src/code_matcher.ml[47,1061+80]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.Escaped_at"
                                                                                []
                                                                              expression (src/code_matcher.ml[47,1061+42]..src/code_matcher.ml[47,1061+80]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                [
                                                                                  expression (src/code_matcher.ml[47,1061+42]..src/code_matcher.ml[47,1061+80]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.Escaped_at"
                                                                                    []
                                                                                  expression (src/code_matcher.ml[47,1061+42]..src/code_matcher.ml[47,1061+80]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                    [
                                                                                      expression (src/code_matcher.ml[47,1061+42]..src/code_matcher.ml[47,1061+80]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.Escaped_at"
                                                                                        []
                                                                                      expression (src/code_matcher.ml[47,1061+42]..src/code_matcher.ml[47,1061+80]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.String"
                                                                                        [
                                                                                          expression (src/code_matcher.ml[47,1061+42]..src/code_matcher.ml[47,1061+80]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                            []
                                                                                          expression (src/code_matcher.ml[47,1061+42]..src/code_matcher.ml[47,1061+80]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                            [
                                                                                              expression (src/code_matcher.ml[47,1061+42]..src/code_matcher.ml[47,1061+80]) ghost
                                                                                                Texp_constant Const_string("] attribute missing",(src/code_matcher.ml[47,1061+42]..src/code_matcher.ml[47,1061+80]) ghost,None)
                                                                                              expression (src/code_matcher.ml[47,1061+42]..src/code_matcher.ml[47,1061+80]) ghost
                                                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                []
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                        ]
                                                                      expression (src/code_matcher.ml[47,1061+42]..src/code_matcher.ml[47,1061+80]) ghost
                                                                        Texp_constant Const_string("ppxlib: [@@@@@@%s] attribute missing",(src/code_matcher.ml[47,1061+42]..src/code_matcher.ml[47,1061+80]) ghost,None)
                                                                    ]
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/code_matcher.ml[48,1142+16]..src/code_matcher.ml[48,1142+54])
                                                                    Texp_apply
                                                                    expression (src/code_matcher.ml[48,1142+17]..src/code_matcher.ml[48,1142+40])
                                                                      Texp_ident "Ppxlib__!.Attribute.Floating.name"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/code_matcher.ml[48,1142+41]..src/code_matcher.ml[48,1142+53])
                                                                          Texp_ident "M/1320.end_marker"
                                                                    ]
                                                              ]
                                                            expression (src/code_matcher.ml[49,1198+14]..src/code_matcher.ml[49,1198+16])
                                                              Texp_construct "[]"
                                                              []
                                                          ]
                                                      ]
                                                <case>
                                                  pattern (src/code_matcher.ml[50,1217+8]..src/code_matcher.ml[50,1217+14])
                                                    Tpat_construct "::"
                                                    [
                                                      pattern (src/code_matcher.ml[50,1217+8]..src/code_matcher.ml[50,1217+9])
                                                        Tpat_var "x/1327"
                                                      pattern (src/code_matcher.ml[50,1217+13]..src/code_matcher.ml[50,1217+14])
                                                        Tpat_var "l/1328"
                                                    ]
                                                  expression (src/code_matcher.ml[50,1217+18]..src/code_matcher.ml[55,1451+53])
                                                    Texp_match
                                                    expression (src/code_matcher.ml[51,1237+16]..src/code_matcher.ml[51,1237+65])
                                                      Texp_apply
                                                      expression (src/code_matcher.ml[51,1237+16]..src/code_matcher.ml[51,1237+46])
                                                        Texp_ident "Ppxlib__!.Attribute.Floating.convert_res"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/code_matcher.ml[51,1237+47]..src/code_matcher.ml[51,1237+63])
                                                            Texp_construct "::"
                                                            [
                                                              expression (src/code_matcher.ml[51,1237+49]..src/code_matcher.ml[51,1237+61])
                                                                Texp_ident "M/1320.end_marker"
                                                              expression (src/code_matcher.ml[51,1237+62]..src/code_matcher.ml[51,1237+63]) ghost
                                                                Texp_construct "[]"
                                                                []
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (src/code_matcher.ml[51,1237+64]..src/code_matcher.ml[51,1237+65])
                                                            Texp_ident "x/1327"
                                                      ]
                                                    [
                                                      <case>
                                                        pattern (src/code_matcher.ml[52,1308+12]..src/code_matcher.ml[52,1308+19])
                                                          Tpat_value
                                                          pattern (src/code_matcher.ml[52,1308+12]..src/code_matcher.ml[52,1308+19])
                                                            Tpat_construct "Ok"
                                                            [
                                                              pattern (src/code_matcher.ml[52,1308+15]..src/code_matcher.ml[52,1308+19])
                                                                Tpat_construct "None"
                                                                []
                                                            ]
                                                        expression (src/code_matcher.ml[52,1308+23]..src/code_matcher.ml[52,1308+40])
                                                          Texp_apply
                                                          expression (src/code_matcher.ml[52,1308+23]..src/code_matcher.ml[52,1308+27])
                                                            Texp_ident "loop/1325"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/code_matcher.ml[52,1308+28]..src/code_matcher.ml[52,1308+38])
                                                                Texp_construct "::"
                                                                [
                                                                  expression (src/code_matcher.ml[52,1308+29]..src/code_matcher.ml[52,1308+30])
                                                                    Texp_ident "x/1327"
                                                                  expression (src/code_matcher.ml[52,1308+34]..src/code_matcher.ml[52,1308+37])
                                                                    Texp_ident "acc/1326"
                                                                ]
                                                            <arg>
                                                              Nolabel
                                                              expression (src/code_matcher.ml[52,1308+39]..src/code_matcher.ml[52,1308+40])
                                                                Texp_ident "l/1328"
                                                          ]
                                                      <case>
                                                        pattern (src/code_matcher.ml[53,1349+12]..src/code_matcher.ml[53,1349+24])
                                                          Tpat_value
                                                          pattern (src/code_matcher.ml[53,1349+12]..src/code_matcher.ml[53,1349+24])
                                                            Tpat_construct "Ok"
                                                            [
                                                              pattern (src/code_matcher.ml[53,1349+15]..src/code_matcher.ml[53,1349+24])
                                                                Tpat_construct "Some"
                                                                [
                                                                  pattern (src/code_matcher.ml[53,1349+21]..src/code_matcher.ml[53,1349+23])
                                                                    Tpat_construct "()"
                                                                    []
                                                                ]
                                                            ]
                                                        expression (src/code_matcher.ml[53,1349+28]..src/code_matcher.ml[53,1349+70])
                                                          Texp_construct "Ok"
                                                          [
                                                            expression (src/code_matcher.ml[53,1349+31]..src/code_matcher.ml[53,1349+70])
                                                              Texp_tuple
                                                              [
                                                                expression (src/code_matcher.ml[53,1349+32]..src/code_matcher.ml[53,1349+44])
                                                                  Texp_apply
                                                                  expression (src/code_matcher.ml[53,1349+32]..src/code_matcher.ml[53,1349+40])
                                                                    Texp_ident "Ppxlib__!.Import.List.rev"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/code_matcher.ml[53,1349+41]..src/code_matcher.ml[53,1349+44])
                                                                        Texp_ident "acc/1326"
                                                                  ]
                                                                expression (src/code_matcher.ml[53,1349+46]..src/code_matcher.ml[53,1349+69])
                                                                  Texp_field
                                                                  expression (src/code_matcher.ml[53,1349+46]..src/code_matcher.ml[53,1349+59])
                                                                    Texp_apply
                                                                    expression (src/code_matcher.ml[53,1349+47]..src/code_matcher.ml[53,1349+56])
                                                                      Texp_ident "M/1320.get_loc"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/code_matcher.ml[53,1349+57]..src/code_matcher.ml[53,1349+58])
                                                                          Texp_ident "x/1327"
                                                                    ]
                                                                  "loc_start"
                                                              ]
                                                          ]
                                                      <case>
                                                        pattern (src/code_matcher.ml[54,1420+12]..src/code_matcher.ml[54,1420+19])
                                                          Tpat_value
                                                          pattern (src/code_matcher.ml[54,1420+12]..src/code_matcher.ml[54,1420+19])
                                                            Tpat_construct "Error"
                                                            [
                                                              pattern (src/code_matcher.ml[54,1420+18]..src/code_matcher.ml[54,1420+19])
                                                                Tpat_var "e/1702"
                                                            ]
                                                        expression (src/code_matcher.ml[54,1420+23]..src/code_matcher.ml[54,1420+30])
                                                          Texp_construct "Error"
                                                          [
                                                            expression (src/code_matcher.ml[54,1420+29]..src/code_matcher.ml[54,1420+30])
                                                              Texp_ident "e/1702"
                                                          ]
                                                      <case>
                                                        pattern (src/code_matcher.ml[55,1451+12]..src/code_matcher.ml[55,1451+31])
                                                          Tpat_exception
                                                          pattern (src/code_matcher.ml[55,1451+22]..src/code_matcher.ml[55,1451+31])
                                                            Tpat_construct "Failure"
                                                            [
                                                              pattern (src/code_matcher.ml[55,1451+30]..src/code_matcher.ml[55,1451+31])
                                                                Tpat_any
                                                            ]
                                                        expression (src/code_matcher.ml[55,1451+35]..src/code_matcher.ml[55,1451+52])
                                                          Texp_apply
                                                          expression (src/code_matcher.ml[55,1451+35]..src/code_matcher.ml[55,1451+39])
                                                            Texp_ident "loop/1325"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/code_matcher.ml[55,1451+40]..src/code_matcher.ml[55,1451+50])
                                                                Texp_construct "::"
                                                                [
                                                                  expression (src/code_matcher.ml[55,1451+41]..src/code_matcher.ml[55,1451+42])
                                                                    Texp_ident "x/1327"
                                                                  expression (src/code_matcher.ml[55,1451+46]..src/code_matcher.ml[55,1451+49])
                                                                    Texp_ident "acc/1326"
                                                                ]
                                                            <arg>
                                                              Nolabel
                                                              expression (src/code_matcher.ml[55,1451+51]..src/code_matcher.ml[55,1451+52])
                                                                Texp_ident "l/1328"
                                                          ]
                                                    ]
                                                    []
                                              ]
                                        ]
                                  ]
                                  expression (src/code_matcher.ml[57,1512+4]..src/code_matcher.ml[57,1512+13])
                                    Texp_apply
                                    expression (src/code_matcher.ml[57,1512+4]..src/code_matcher.ml[57,1512+8])
                                      Texp_ident "loop/1325"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/code_matcher.ml[57,1512+9]..src/code_matcher.ml[57,1512+11])
                                          Texp_construct "[]"
                                          []
                                      <arg>
                                        Nolabel
                                        expression (src/code_matcher.ml[57,1512+12]..src/code_matcher.ml[57,1512+13])
                                          Texp_ident "l/1324"
                                    ]
                            ]
                      ]
                ]
              structure_item (src/code_matcher.ml[59,1527+2]..src/code_matcher.ml[64,1665+7])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/code_matcher.ml[59,1527+6]..src/code_matcher.ml[59,1527+16])
                      Tpat_var "remove_loc/1778"
                    expression (src/code_matcher.ml[60,1546+4]..src/code_matcher.ml[64,1665+7])
                      Texp_object                      class_structure
                        pattern (_none_[0,0+-1].._none_[0,0+-1]) ghost
                          Tpat_alias "selfpat-1/1780"
                          pattern (_none_[0,0+-1].._none_[0,0+-1]) ghost
                            Tpat_alias "selfpat-*/1779"
                            pattern (src/code_matcher.ml[60,1546+10]..src/code_matcher.ml[60,1546+10]) ghost
                              Tpat_any
                        [
                          class_field (src/code_matcher.ml[61,1557+6]..src/code_matcher.ml[61,1557+30])
                            Tcf_inherit Fresh
                              class_expr (src/code_matcher.ml[61,1557+14]..src/code_matcher.ml[61,1557+30])
                                class_expr (src/code_matcher.ml[61,1557+14]..src/code_matcher.ml[61,1557+30])
                                  Tcl_ident "Ppxlib__!.Ast_traverse.map"
                                  []
                              None
                          class_field (src/code_matcher.ml[62,1588+6]..src/code_matcher.ml[62,1588+40])
                            Tcf_method "location" Public
                              Concrete Override
                              expression (src/code_matcher.ml[62,1588+23]..src/code_matcher.ml[62,1588+40]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/code_matcher.ml[60,1546+10]..src/code_matcher.ml[60,1546+10]) ghost
                                      Tpat_alias "self-1/2343"
                                      pattern (src/code_matcher.ml[60,1546+10]..src/code_matcher.ml[60,1546+10]) ghost
                                        Tpat_var "self-*/2342"
                                    expression (src/code_matcher.ml[62,1588+23]..src/code_matcher.ml[62,1588+40]) ghost
                                      Texp_poly
                                      None
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/code_matcher.ml[62,1588+23]..src/code_matcher.ml[62,1588+24])
                                              Tpat_any
                                            expression (src/code_matcher.ml[62,1588+27]..src/code_matcher.ml[62,1588+40])
                                              Texp_ident "Ppxlib__!.Location.none"
                                        ]
                                ]
                          class_field (src/code_matcher.ml[63,1629+6]..src/code_matcher.ml[63,1629+35])
                            Tcf_method "location_stack" Public
                              Concrete Override
                              expression (src/code_matcher.ml[63,1629+29]..src/code_matcher.ml[63,1629+35]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/code_matcher.ml[60,1546+10]..src/code_matcher.ml[60,1546+10]) ghost
                                      Tpat_alias "self-1/2346"
                                      pattern (src/code_matcher.ml[60,1546+10]..src/code_matcher.ml[60,1546+10]) ghost
                                        Tpat_var "self-*/2345"
                                    expression (src/code_matcher.ml[63,1629+29]..src/code_matcher.ml[63,1629+35]) ghost
                                      Texp_poly
                                      None
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/code_matcher.ml[63,1629+29]..src/code_matcher.ml[63,1629+30])
                                              Tpat_any
                                            expression (src/code_matcher.ml[63,1629+33]..src/code_matcher.ml[63,1629+35])
                                              Texp_construct "[]"
                                              []
                                        ]
                                ]
                        ]
                ]
              structure_item (src/code_matcher.ml[66,1674+2]..src/code_matcher.ml[68,1736+6])
                Tstr_module
                M_map/2891
                  module_expr (src/code_matcher.ml[66,1674+17]..src/code_matcher.ml[68,1736+6])
                    Tmod_apply
                    module_expr (src/code_matcher.ml[66,1674+17]..src/code_matcher.ml[66,1674+28])
                      Tmod_ident "M/1320.Transform"
                    module_expr (src/code_matcher.ml[66,1674+30]..src/code_matcher.ml[68,1736+5])
                      Tmod_structure
                      [
                        structure_item (src/code_matcher.ml[67,1711+4]..src/code_matcher.ml[67,1711+24])
                          Tstr_type Rec
                          [
                            type_declaration t/2887 (src/code_matcher.ml[67,1711+4]..src/code_matcher.ml[67,1711+24])
                              ptype_params =
                                [
                                  core_type (src/code_matcher.ml[67,1711+9]..src/code_matcher.ml[67,1711+11])
                                    Ttyp_var a
                                ]
                              ptype_cstrs =
                                []
                              ptype_kind =
                                Ttype_abstract
                              ptype_private = Public
                              ptype_manifest =
                                Some
                                  core_type (src/code_matcher.ml[67,1711+16]..src/code_matcher.ml[67,1711+24])
                                    Ttyp_arrow
                                    Nolabel
                                    core_type (src/code_matcher.ml[67,1711+16]..src/code_matcher.ml[67,1711+18])
                                      Ttyp_var a
                                    core_type (src/code_matcher.ml[67,1711+22]..src/code_matcher.ml[67,1711+24])
                                      Ttyp_var a
                          ]
                      ]
              structure_item (src/code_matcher.ml[70,1744+2]..src/code_matcher.ml[70,1744+45])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/code_matcher.ml[70,1744+6]..src/code_matcher.ml[70,1744+16])
                      Tpat_var "remove_loc/2892"
                    expression (src/code_matcher.ml[70,1744+17]..src/code_matcher.ml[70,1744+45]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/code_matcher.ml[70,1744+17]..src/code_matcher.ml[70,1744+18])
                            Tpat_var "x/2893"
                          expression (src/code_matcher.ml[70,1744+21]..src/code_matcher.ml[70,1744+45])
                            Texp_apply
                            expression (src/code_matcher.ml[70,1744+21]..src/code_matcher.ml[70,1744+32])
                              Texp_ident "M_map/2891.apply"
                            [
                              <arg>
                                Nolabel
                                expression (src/code_matcher.ml[70,1744+33]..src/code_matcher.ml[70,1744+43])
                                  Texp_ident "remove_loc/1778"
                              <arg>
                                Nolabel
                                expression (src/code_matcher.ml[70,1744+44]..src/code_matcher.ml[70,1744+45])
                                  Texp_ident "x/2893"
                            ]
                      ]
                ]
              structure_item (src/code_matcher.ml[71,1790+2]..src/code_matcher.ml[71,1790+62])
                Tstr_value Rec
                [
                  <def>
                    pattern (src/code_matcher.ml[71,1790+10]..src/code_matcher.ml[71,1790+14])
                      Tpat_var "last/2894"
                    expression (src/code_matcher.ml[71,1790+15]..src/code_matcher.ml[71,1790+62]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/code_matcher.ml[71,1790+15]..src/code_matcher.ml[71,1790+19])
                            Tpat_var "prev/2895"
                          expression (src/code_matcher.ml[71,1790+22]..src/code_matcher.ml[71,1790+62])
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/code_matcher.ml[71,1790+31]..src/code_matcher.ml[71,1790+33])
                                  Tpat_construct "[]"
                                  []
                                expression (src/code_matcher.ml[71,1790+37]..src/code_matcher.ml[71,1790+41])
                                  Texp_ident "prev/2895"
                              <case>
                                pattern (src/code_matcher.ml[71,1790+44]..src/code_matcher.ml[71,1790+50])
                                  Tpat_construct "::"
                                  [
                                    pattern (src/code_matcher.ml[71,1790+44]..src/code_matcher.ml[71,1790+45])
                                      Tpat_var "x/2896"
                                    pattern (src/code_matcher.ml[71,1790+49]..src/code_matcher.ml[71,1790+50])
                                      Tpat_var "l/2897"
                                  ]
                                expression (src/code_matcher.ml[71,1790+54]..src/code_matcher.ml[71,1790+62])
                                  Texp_apply
                                  expression (src/code_matcher.ml[71,1790+54]..src/code_matcher.ml[71,1790+58])
                                    Texp_ident "last/2894"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/code_matcher.ml[71,1790+59]..src/code_matcher.ml[71,1790+60])
                                        Texp_ident "x/2896"
                                    <arg>
                                      Nolabel
                                      expression (src/code_matcher.ml[71,1790+61]..src/code_matcher.ml[71,1790+62])
                                        Texp_ident "l/2897"
                                  ]
                            ]
                      ]
                ]
              structure_item (src/code_matcher.ml[73,1854+2]..src/code_matcher.ml[110,3320+59])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/code_matcher.ml[73,1854+6]..src/code_matcher.ml[73,1854+15])
                      Tpat_var "diff_asts/2899"
                    expression (src/code_matcher.ml[73,1854+16]..src/code_matcher.ml[110,3320+59]) ghost
                      Texp_function
                      Labelled "generated"
                      [
                        <case>
                          pattern (src/code_matcher.ml[73,1854+17]..src/code_matcher.ml[73,1854+26])
                            Tpat_var "generated/2901"
                          expression (src/code_matcher.ml[73,1854+27]..src/code_matcher.ml[110,3320+59]) ghost
                            Texp_function
                            Labelled "round_trip"
                            [
                              <case>
                                pattern (src/code_matcher.ml[73,1854+28]..src/code_matcher.ml[73,1854+38])
                                  Tpat_var "round_trip/2902"
                                expression (src/code_matcher.ml[74,1895+4]..src/code_matcher.ml[110,3320+59])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/code_matcher.ml[74,1895+8]..src/code_matcher.ml[74,1895+22])
                                        Tpat_var "with_temp_file/2903"
                                      expression (src/code_matcher.ml[74,1895+23]..src/code_matcher.ml[77,1982+37]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/code_matcher.ml[74,1895+23]..src/code_matcher.ml[74,1895+24])
                                              Tpat_var "f/2905"
                                            expression (src/code_matcher.ml[75,1922+6]..src/code_matcher.ml[77,1982+37])
                                              Texp_apply
                                              expression (src/code_matcher.ml[75,1922+6]..src/code_matcher.ml[75,1922+18])
                                                Texp_ident "Ppxlib__!.Import.Exn.protectx"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/code_matcher.ml[76,1941+8]..src/code_matcher.ml[76,1941+40])
                                                    Texp_apply
                                                    expression (src/code_matcher.ml[76,1941+9]..src/code_matcher.ml[76,1941+27])
                                                      Texp_ident "Filename/551.temp_file"
                                                    [
                                                      <arg>
                                                        Optional "temp_dir"
                                                        expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                                          Texp_construct "None"
                                                          []
                                                      <arg>
                                                        Nolabel
                                                        expression (src/code_matcher.ml[76,1941+28]..src/code_matcher.ml[76,1941+36])
                                                          Texp_constant Const_string("ppxlib",(src/code_matcher.ml[76,1941+29]..src/code_matcher.ml[76,1941+35]),None)
                                                      <arg>
                                                        Nolabel
                                                        expression (src/code_matcher.ml[76,1941+37]..src/code_matcher.ml[76,1941+39])
                                                          Texp_constant Const_string("",(src/code_matcher.ml[76,1941+38]..src/code_matcher.ml[76,1941+38]),None)
                                                    ]
                                                <arg>
                                                  Labelled "f"
                                                  expression (src/code_matcher.ml[77,1982+36]..src/code_matcher.ml[77,1982+37])
                                                    Texp_ident "f/2905"
                                                <arg>
                                                  Labelled "finally"
                                                  expression (src/code_matcher.ml[77,1982+17]..src/code_matcher.ml[77,1982+34])
                                                    Texp_ident "Stdlib!.Sys.remove"
                                              ]
                                        ]
                                  ]
                                  expression (src/code_matcher.ml[79,2027+4]..src/code_matcher.ml[110,3320+59])
                                    Texp_apply
                                    expression (src/code_matcher.ml[79,2027+4]..src/code_matcher.ml[79,2027+18])
                                      Texp_ident "with_temp_file/2903"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/code_matcher.ml[79,2027+19]..src/code_matcher.ml[110,3320+59])
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/code_matcher.ml[79,2027+24]..src/code_matcher.ml[79,2027+27])
                                                Tpat_var "fn1/3011"
                                              expression (src/code_matcher.ml[80,2058+8]..src/code_matcher.ml[110,3320+58])
                                                Texp_apply
                                                expression (src/code_matcher.ml[80,2058+8]..src/code_matcher.ml[80,2058+22])
                                                  Texp_ident "with_temp_file/2903"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/code_matcher.ml[80,2058+23]..src/code_matcher.ml[110,3320+58])
                                                      Texp_function
                                                      Nolabel
                                                      [
                                                        <case>
                                                          pattern (src/code_matcher.ml[80,2058+28]..src/code_matcher.ml[80,2058+31])
                                                            Tpat_var "fn2/3012"
                                                          expression (src/code_matcher.ml[81,2093+12]..src/code_matcher.ml[110,3320+57])
                                                            Texp_apply
                                                            expression (src/code_matcher.ml[81,2093+12]..src/code_matcher.ml[81,2093+26])
                                                              Texp_ident "with_temp_file/2903"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/code_matcher.ml[81,2093+27]..src/code_matcher.ml[110,3320+57])
                                                                  Texp_function
                                                                  Nolabel
                                                                  [
                                                                    <case>
                                                                      pattern (src/code_matcher.ml[81,2093+32]..src/code_matcher.ml[81,2093+35])
                                                                        Tpat_var "out/3013"
                                                                      expression (src/code_matcher.ml[82,2132+16]..src/code_matcher.ml[110,3320+56])
                                                                        Texp_let Nonrec
                                                                        [
                                                                          <def>
                                                                            pattern (src/code_matcher.ml[82,2132+20]..src/code_matcher.ml[82,2132+24])
                                                                              Tpat_var "dump/3014"
                                                                            expression (src/code_matcher.ml[82,2132+25]..src/code_matcher.ml[86,2348+51]) ghost
                                                                              Texp_function
                                                                              Nolabel
                                                                              [
                                                                                <case>
                                                                                  pattern (src/code_matcher.ml[82,2132+25]..src/code_matcher.ml[82,2132+27])
                                                                                    Tpat_var "fn/3016"
                                                                                  expression (src/code_matcher.ml[82,2132+28]..src/code_matcher.ml[86,2348+51]) ghost
                                                                                    Texp_function
                                                                                    Nolabel
                                                                                    [
                                                                                      <case>
                                                                                        pattern (src/code_matcher.ml[82,2132+28]..src/code_matcher.ml[82,2132+31])
                                                                                          Tpat_var "ast/3017"
                                                                                        expression (src/code_matcher.ml[83,2166+18]..src/code_matcher.ml[86,2348+51])
                                                                                          Texp_apply
                                                                                          expression (src/code_matcher.ml[83,2166+18]..src/code_matcher.ml[83,2166+39])
                                                                                            Texp_ident "Ppxlib__!.Import.Out_channel.with_file"
                                                                                          [
                                                                                            <arg>
                                                                                              Optional "binary"
                                                                                              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                                                                                Texp_construct "None"
                                                                                                []
                                                                                            <arg>
                                                                                              Optional "append"
                                                                                              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                                                                                Texp_construct "None"
                                                                                                []
                                                                                            <arg>
                                                                                              Optional "fail_if_exists"
                                                                                              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                                                                                Texp_construct "None"
                                                                                                []
                                                                                            <arg>
                                                                                              Optional "perm"
                                                                                              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                                                                                Texp_construct "None"
                                                                                                []
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/code_matcher.ml[83,2166+40]..src/code_matcher.ml[83,2166+42])
                                                                                                Texp_ident "fn/3016"
                                                                                            <arg>
                                                                                              Labelled "f"
                                                                                              expression (src/code_matcher.ml[83,2166+46]..src/code_matcher.ml[86,2348+51])
                                                                                                Texp_function
                                                                                                Nolabel
                                                                                                [
                                                                                                  <case>
                                                                                                    pattern (src/code_matcher.ml[83,2166+51]..src/code_matcher.ml[83,2166+53])
                                                                                                      Tpat_var "oc/3021"
                                                                                                    expression (src/code_matcher.ml[84,2223+22]..src/code_matcher.ml[86,2348+50])
                                                                                                      Texp_let Nonrec
                                                                                                      [
                                                                                                        <def>
                                                                                                          pattern (src/code_matcher.ml[84,2223+26]..src/code_matcher.ml[84,2223+29])
                                                                                                            Tpat_var "ppf/3022"
                                                                                                          expression (src/code_matcher.ml[84,2223+32]..src/code_matcher.ml[84,2223+66])
                                                                                                            Texp_apply
                                                                                                            expression (src/code_matcher.ml[84,2223+32]..src/code_matcher.ml[84,2223+63])
                                                                                                              Texp_ident "Format/550.formatter_of_out_channel"
                                                                                                            [
                                                                                                              <arg>
                                                                                                                Nolabel
                                                                                                                expression (src/code_matcher.ml[84,2223+64]..src/code_matcher.ml[84,2223+66])
                                                                                                                  Texp_ident "oc/3021"
                                                                                                            ]
                                                                                                      ]
                                                                                                      expression (src/code_matcher.ml[85,2293+22]..src/code_matcher.ml[86,2348+50])
                                                                                                        Texp_sequence
                                                                                                        expression (src/code_matcher.ml[85,2293+22]..src/code_matcher.ml[85,2293+53])
                                                                                                          Texp_apply
                                                                                                          expression (src/code_matcher.ml[85,2293+22]..src/code_matcher.ml[85,2293+33])
                                                                                                            Texp_ident "Ppxlib__!.Import.Sexp.pp_hum"
                                                                                                          [
                                                                                                            <arg>
                                                                                                              Nolabel
                                                                                                              expression (src/code_matcher.ml[85,2293+34]..src/code_matcher.ml[85,2293+37])
                                                                                                                Texp_ident "ppf/3022"
                                                                                                            <arg>
                                                                                                              Nolabel
                                                                                                              expression (src/code_matcher.ml[85,2293+38]..src/code_matcher.ml[85,2293+53])
                                                                                                                Texp_apply
                                                                                                                expression (src/code_matcher.ml[85,2293+39]..src/code_matcher.ml[85,2293+48])
                                                                                                                  Texp_ident "M/1320.to_sexp"
                                                                                                                [
                                                                                                                  <arg>
                                                                                                                    Nolabel
                                                                                                                    expression (src/code_matcher.ml[85,2293+49]..src/code_matcher.ml[85,2293+52])
                                                                                                                      Texp_ident "ast/3017"
                                                                                                                ]
                                                                                                          ]
                                                                                                        expression (src/code_matcher.ml[86,2348+22]..src/code_matcher.ml[86,2348+50])
                                                                                                          Texp_apply
                                                                                                          expression (src/code_matcher.ml[86,2348+22]..src/code_matcher.ml[86,2348+43])
                                                                                                            Texp_ident "Format/550.pp_print_flush"
                                                                                                          [
                                                                                                            <arg>
                                                                                                              Nolabel
                                                                                                              expression (src/code_matcher.ml[86,2348+44]..src/code_matcher.ml[86,2348+47])
                                                                                                                Texp_ident "ppf/3022"
                                                                                                            <arg>
                                                                                                              Nolabel
                                                                                                              expression (src/code_matcher.ml[86,2348+48]..src/code_matcher.ml[86,2348+50])
                                                                                                                Texp_construct "()"
                                                                                                                []
                                                                                                          ]
                                                                                                ]
                                                                                          ]
                                                                                    ]
                                                                              ]
                                                                        ]
                                                                        expression (src/code_matcher.ml[88,2419+16]..src/code_matcher.ml[110,3320+56])
                                                                          Texp_sequence
                                                                          expression (src/code_matcher.ml[88,2419+16]..src/code_matcher.ml[88,2419+34])
                                                                            Texp_apply
                                                                            expression (src/code_matcher.ml[88,2419+16]..src/code_matcher.ml[88,2419+20])
                                                                              Texp_ident "dump/3014"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/code_matcher.ml[88,2419+21]..src/code_matcher.ml[88,2419+24])
                                                                                  Texp_ident "fn1/3011"
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/code_matcher.ml[88,2419+25]..src/code_matcher.ml[88,2419+34])
                                                                                  Texp_ident "generated/2901"
                                                                            ]
                                                                          expression (src/code_matcher.ml[89,2455+16]..src/code_matcher.ml[110,3320+56])
                                                                            Texp_sequence
                                                                            expression (src/code_matcher.ml[89,2455+16]..src/code_matcher.ml[89,2455+35])
                                                                              Texp_apply
                                                                              expression (src/code_matcher.ml[89,2455+16]..src/code_matcher.ml[89,2455+20])
                                                                                Texp_ident "dump/3014"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/code_matcher.ml[89,2455+21]..src/code_matcher.ml[89,2455+24])
                                                                                    Texp_ident "fn2/3012"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/code_matcher.ml[89,2455+25]..src/code_matcher.ml[89,2455+35])
                                                                                    Texp_ident "round_trip/2902"
                                                                              ]
                                                                            expression (src/code_matcher.ml[90,2492+16]..src/code_matcher.ml[110,3320+56])
                                                                              Texp_let Nonrec
                                                                              [
                                                                                <def>
                                                                                  pattern (src/code_matcher.ml[90,2492+20]..src/code_matcher.ml[90,2492+23])
                                                                                    Tpat_var "cmd/3047"
                                                                                  expression (src/code_matcher.ml[91,2518+18]..src/code_matcher.ml[95,2742+40])
                                                                                    Texp_apply
                                                                                    expression (src/code_matcher.ml[91,2518+18]..src/code_matcher.ml[91,2518+32])
                                                                                      Texp_ident "Stdlib!.Printf.sprintf"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/code_matcher.ml[92,2551+20]..src/code_matcher.ml[93,2617+62])
                                                                                          Texp_construct "CamlinternalFormatBasics.Format"
                                                                                          [
                                                                                            expression (src/code_matcher.ml[92,2551+20]..src/code_matcher.ml[93,2617+62]) ghost
                                                                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                              [
                                                                                                expression (src/code_matcher.ml[92,2551+20]..src/code_matcher.ml[93,2617+62]) ghost
                                                                                                  Texp_constant Const_string("patdiff -ascii -alt-old generated -alt-new 'generated->printed->parsed' ",(src/code_matcher.ml[92,2551+20]..src/code_matcher.ml[93,2617+62]) ghost,None)
                                                                                                expression (src/code_matcher.ml[92,2551+20]..src/code_matcher.ml[93,2617+62]) ghost
                                                                                                  Texp_construct "CamlinternalFormatBasics.String"
                                                                                                  [
                                                                                                    expression (src/code_matcher.ml[92,2551+20]..src/code_matcher.ml[93,2617+62]) ghost
                                                                                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                      []
                                                                                                    expression (src/code_matcher.ml[92,2551+20]..src/code_matcher.ml[93,2617+62]) ghost
                                                                                                      Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                                                      [
                                                                                                        expression (src/code_matcher.ml[92,2551+20]..src/code_matcher.ml[93,2617+62]) ghost
                                                                                                          Texp_constant Const_char 20
                                                                                                        expression (src/code_matcher.ml[92,2551+20]..src/code_matcher.ml[93,2617+62]) ghost
                                                                                                          Texp_construct "CamlinternalFormatBasics.String"
                                                                                                          [
                                                                                                            expression (src/code_matcher.ml[92,2551+20]..src/code_matcher.ml[93,2617+62]) ghost
                                                                                                              Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                              []
                                                                                                            expression (src/code_matcher.ml[92,2551+20]..src/code_matcher.ml[93,2617+62]) ghost
                                                                                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                              [
                                                                                                                expression (src/code_matcher.ml[92,2551+20]..src/code_matcher.ml[93,2617+62]) ghost
                                                                                                                  Texp_constant Const_string(" &> ",(src/code_matcher.ml[92,2551+20]..src/code_matcher.ml[93,2617+62]) ghost,None)
                                                                                                                expression (src/code_matcher.ml[92,2551+20]..src/code_matcher.ml[93,2617+62]) ghost
                                                                                                                  Texp_construct "CamlinternalFormatBasics.String"
                                                                                                                  [
                                                                                                                    expression (src/code_matcher.ml[92,2551+20]..src/code_matcher.ml[93,2617+62]) ghost
                                                                                                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                                      []
                                                                                                                    expression (src/code_matcher.ml[92,2551+20]..src/code_matcher.ml[93,2617+62]) ghost
                                                                                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                                      []
                                                                                                                  ]
                                                                                                              ]
                                                                                                          ]
                                                                                                      ]
                                                                                                  ]
                                                                                              ]
                                                                                            expression (src/code_matcher.ml[92,2551+20]..src/code_matcher.ml[93,2617+62]) ghost
                                                                                              Texp_constant Const_string("patdiff -ascii -alt-old generated -alt-new 'generated->printed->parsed' %s %s &> %s",(src/code_matcher.ml[92,2551+20]..src/code_matcher.ml[93,2617+62]) ghost,None)
                                                                                          ]
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/code_matcher.ml[94,2680+20]..src/code_matcher.ml[94,2680+40])
                                                                                          Texp_apply
                                                                                          expression (src/code_matcher.ml[94,2680+21]..src/code_matcher.ml[94,2680+35])
                                                                                            Texp_ident "Filename/551.quote"
                                                                                          [
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/code_matcher.ml[94,2680+36]..src/code_matcher.ml[94,2680+39])
                                                                                                Texp_ident "fn1/3011"
                                                                                          ]
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/code_matcher.ml[94,2680+41]..src/code_matcher.ml[94,2680+61])
                                                                                          Texp_apply
                                                                                          expression (src/code_matcher.ml[94,2680+42]..src/code_matcher.ml[94,2680+56])
                                                                                            Texp_ident "Filename/551.quote"
                                                                                          [
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/code_matcher.ml[94,2680+57]..src/code_matcher.ml[94,2680+60])
                                                                                                Texp_ident "fn2/3012"
                                                                                          ]
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/code_matcher.ml[95,2742+20]..src/code_matcher.ml[95,2742+40])
                                                                                          Texp_apply
                                                                                          expression (src/code_matcher.ml[95,2742+21]..src/code_matcher.ml[95,2742+35])
                                                                                            Texp_ident "Filename/551.quote"
                                                                                          [
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/code_matcher.ml[95,2742+36]..src/code_matcher.ml[95,2742+39])
                                                                                                Texp_ident "out/3013"
                                                                                          ]
                                                                                    ]
                                                                              ]
                                                                              expression (src/code_matcher.ml[97,2802+16]..src/code_matcher.ml[110,3320+56])
                                                                                Texp_let Nonrec
                                                                                [
                                                                                  <def>
                                                                                    pattern (src/code_matcher.ml[97,2802+20]..src/code_matcher.ml[97,2802+22])
                                                                                      Tpat_var "ok/3061"
                                                                                    expression (src/code_matcher.ml[98,2827+18]..src/code_matcher.ml[107,3205+44])
                                                                                      Texp_apply
                                                                                      expression (src/code_matcher.ml[99,2872+18]..src/code_matcher.ml[99,2872+20])
                                                                                        Texp_ident "Stdlib!.||"
                                                                                      [
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/code_matcher.ml[98,2827+18]..src/code_matcher.ml[98,2827+44])
                                                                                            Texp_apply
                                                                                            expression (src/code_matcher.ml[98,2827+41]..src/code_matcher.ml[98,2827+42])
                                                                                              Texp_ident "Ppxlib__!.Import.="
                                                                                            [
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/code_matcher.ml[98,2827+18]..src/code_matcher.ml[98,2827+40])
                                                                                                  Texp_apply
                                                                                                  expression (src/code_matcher.ml[98,2827+18]..src/code_matcher.ml[98,2827+36])
                                                                                                    Texp_ident "Stdlib!.Sys.command"
                                                                                                  [
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/code_matcher.ml[98,2827+37]..src/code_matcher.ml[98,2827+40])
                                                                                                        Texp_ident "cmd/3047"
                                                                                                  ]
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/code_matcher.ml[98,2827+43]..src/code_matcher.ml[98,2827+44])
                                                                                                  Texp_constant Const_int 1
                                                                                            ]
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/code_matcher.ml[100,2893+18]..src/code_matcher.ml[107,3205+44])
                                                                                            Texp_let Nonrec
                                                                                            [
                                                                                              <def>
                                                                                                pattern (src/code_matcher.ml[100,2893+22]..src/code_matcher.ml[100,2893+25])
                                                                                                  Tpat_var "cmd/3062"
                                                                                                expression (src/code_matcher.ml[101,2921+20]..src/code_matcher.ml[105,3141+42])
                                                                                                  Texp_apply
                                                                                                  expression (src/code_matcher.ml[101,2921+20]..src/code_matcher.ml[101,2921+34])
                                                                                                    Texp_ident "Stdlib!.Printf.sprintf"
                                                                                                  [
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/code_matcher.ml[102,2956+22]..src/code_matcher.ml[103,3012+64])
                                                                                                        Texp_construct "CamlinternalFormatBasics.Format"
                                                                                                        [
                                                                                                          expression (src/code_matcher.ml[102,2956+22]..src/code_matcher.ml[103,3012+64]) ghost
                                                                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                            [
                                                                                                              expression (src/code_matcher.ml[102,2956+22]..src/code_matcher.ml[103,3012+64]) ghost
                                                                                                                Texp_constant Const_string("diff --label generated --label 'generated->printed->parsed' ",(src/code_matcher.ml[102,2956+22]..src/code_matcher.ml[103,3012+64]) ghost,None)
                                                                                                              expression (src/code_matcher.ml[102,2956+22]..src/code_matcher.ml[103,3012+64]) ghost
                                                                                                                Texp_construct "CamlinternalFormatBasics.String"
                                                                                                                [
                                                                                                                  expression (src/code_matcher.ml[102,2956+22]..src/code_matcher.ml[103,3012+64]) ghost
                                                                                                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                                    []
                                                                                                                  expression (src/code_matcher.ml[102,2956+22]..src/code_matcher.ml[103,3012+64]) ghost
                                                                                                                    Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                                                                    [
                                                                                                                      expression (src/code_matcher.ml[102,2956+22]..src/code_matcher.ml[103,3012+64]) ghost
                                                                                                                        Texp_constant Const_char 20
                                                                                                                      expression (src/code_matcher.ml[102,2956+22]..src/code_matcher.ml[103,3012+64]) ghost
                                                                                                                        Texp_construct "CamlinternalFormatBasics.String"
                                                                                                                        [
                                                                                                                          expression (src/code_matcher.ml[102,2956+22]..src/code_matcher.ml[103,3012+64]) ghost
                                                                                                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                                            []
                                                                                                                          expression (src/code_matcher.ml[102,2956+22]..src/code_matcher.ml[103,3012+64]) ghost
                                                                                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                                            [
                                                                                                                              expression (src/code_matcher.ml[102,2956+22]..src/code_matcher.ml[103,3012+64]) ghost
                                                                                                                                Texp_constant Const_string(" &> ",(src/code_matcher.ml[102,2956+22]..src/code_matcher.ml[103,3012+64]) ghost,None)
                                                                                                                              expression (src/code_matcher.ml[102,2956+22]..src/code_matcher.ml[103,3012+64]) ghost
                                                                                                                                Texp_construct "CamlinternalFormatBasics.String"
                                                                                                                                [
                                                                                                                                  expression (src/code_matcher.ml[102,2956+22]..src/code_matcher.ml[103,3012+64]) ghost
                                                                                                                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                                                    []
                                                                                                                                  expression (src/code_matcher.ml[102,2956+22]..src/code_matcher.ml[103,3012+64]) ghost
                                                                                                                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                                                    []
                                                                                                                                ]
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                ]
                                                                                                            ]
                                                                                                          expression (src/code_matcher.ml[102,2956+22]..src/code_matcher.ml[103,3012+64]) ghost
                                                                                                            Texp_constant Const_string("diff --label generated --label 'generated->printed->parsed' %s %s &> %s",(src/code_matcher.ml[102,2956+22]..src/code_matcher.ml[103,3012+64]) ghost,None)
                                                                                                        ]
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/code_matcher.ml[104,3077+22]..src/code_matcher.ml[104,3077+42])
                                                                                                        Texp_apply
                                                                                                        expression (src/code_matcher.ml[104,3077+23]..src/code_matcher.ml[104,3077+37])
                                                                                                          Texp_ident "Filename/551.quote"
                                                                                                        [
                                                                                                          <arg>
                                                                                                            Nolabel
                                                                                                            expression (src/code_matcher.ml[104,3077+38]..src/code_matcher.ml[104,3077+41])
                                                                                                              Texp_ident "fn1/3011"
                                                                                                        ]
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/code_matcher.ml[104,3077+43]..src/code_matcher.ml[104,3077+63])
                                                                                                        Texp_apply
                                                                                                        expression (src/code_matcher.ml[104,3077+44]..src/code_matcher.ml[104,3077+58])
                                                                                                          Texp_ident "Filename/551.quote"
                                                                                                        [
                                                                                                          <arg>
                                                                                                            Nolabel
                                                                                                            expression (src/code_matcher.ml[104,3077+59]..src/code_matcher.ml[104,3077+62])
                                                                                                              Texp_ident "fn2/3012"
                                                                                                        ]
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/code_matcher.ml[105,3141+22]..src/code_matcher.ml[105,3141+42])
                                                                                                        Texp_apply
                                                                                                        expression (src/code_matcher.ml[105,3141+23]..src/code_matcher.ml[105,3141+37])
                                                                                                          Texp_ident "Filename/551.quote"
                                                                                                        [
                                                                                                          <arg>
                                                                                                            Nolabel
                                                                                                            expression (src/code_matcher.ml[105,3141+38]..src/code_matcher.ml[105,3141+41])
                                                                                                              Texp_ident "out/3013"
                                                                                                        ]
                                                                                                  ]
                                                                                            ]
                                                                                            expression (src/code_matcher.ml[107,3205+18]..src/code_matcher.ml[107,3205+44])
                                                                                              Texp_apply
                                                                                              expression (src/code_matcher.ml[107,3205+41]..src/code_matcher.ml[107,3205+42])
                                                                                                Texp_ident "Ppxlib__!.Import.="
                                                                                              [
                                                                                                <arg>
                                                                                                  Nolabel
                                                                                                  expression (src/code_matcher.ml[107,3205+18]..src/code_matcher.ml[107,3205+40])
                                                                                                    Texp_apply
                                                                                                    expression (src/code_matcher.ml[107,3205+18]..src/code_matcher.ml[107,3205+36])
                                                                                                      Texp_ident "Stdlib!.Sys.command"
                                                                                                    [
                                                                                                      <arg>
                                                                                                        Nolabel
                                                                                                        expression (src/code_matcher.ml[107,3205+37]..src/code_matcher.ml[107,3205+40])
                                                                                                          Texp_ident "cmd/3062"
                                                                                                    ]
                                                                                                <arg>
                                                                                                  Nolabel
                                                                                                  expression (src/code_matcher.ml[107,3205+43]..src/code_matcher.ml[107,3205+44])
                                                                                                    Texp_constant Const_int 1
                                                                                              ]
                                                                                      ]
                                                                                ]
                                                                                expression (src/code_matcher.ml[109,3269+16]..src/code_matcher.ml[110,3320+56])
                                                                                  Texp_ifthenelse
                                                                                  expression (src/code_matcher.ml[109,3269+19]..src/code_matcher.ml[109,3269+21])
                                                                                    Texp_ident "ok/3061"
                                                                                  expression (src/code_matcher.ml[109,3269+27]..src/code_matcher.ml[109,3269+50])
                                                                                    Texp_apply
                                                                                    expression (src/code_matcher.ml[109,3269+27]..src/code_matcher.ml[109,3269+46])
                                                                                      Texp_ident "Ppxlib__!.Import.In_channel.read_all"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/code_matcher.ml[109,3269+47]..src/code_matcher.ml[109,3269+50])
                                                                                          Texp_ident "out/3013"
                                                                                    ]
                                                                                  Some
                                                                                    expression (src/code_matcher.ml[110,3320+21]..src/code_matcher.ml[110,3320+56])
                                                                                      Texp_constant Const_string("<no differences produced by diff>",(src/code_matcher.ml[110,3320+22]..src/code_matcher.ml[110,3320+55]),None)
                                                                  ]
                                                            ]
                                                      ]
                                                ]
                                          ]
                                    ]
                            ]
                      ]
                ]
              structure_item (src/code_matcher.ml[112,3381+2]..src/code_matcher.ml[113,3404+76])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/code_matcher.ml[112,3381+6]..src/code_matcher.ml[112,3381+18])
                      Tpat_var "parse_string/3067"
                    expression (src/code_matcher.ml[112,3381+19]..src/code_matcher.ml[113,3404+76]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/code_matcher.ml[112,3381+19]..src/code_matcher.ml[112,3381+20])
                            Tpat_var "s/3069"
                          expression (src/code_matcher.ml[113,3404+4]..src/code_matcher.ml[113,3404+76])
                            Texp_match
                            expression (src/code_matcher.ml[113,3404+10]..src/code_matcher.ml[113,3404+40])
                              Texp_apply
                              expression (src/code_matcher.ml[113,3404+10]..src/code_matcher.ml[113,3404+17])
                                Texp_ident "M/1320.parse"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/code_matcher.ml[113,3404+18]..src/code_matcher.ml[113,3404+40])
                                    Texp_apply
                                    expression (src/code_matcher.ml[113,3404+19]..src/code_matcher.ml[113,3404+37])
                                      Texp_ident "Stdlib!.Lexing.from_string"
                                    [
                                      <arg>
                                        Optional "with_positions"
                                        expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                          Texp_construct "None"
                                          []
                                      <arg>
                                        Nolabel
                                        expression (src/code_matcher.ml[113,3404+38]..src/code_matcher.ml[113,3404+39])
                                          Texp_ident "s/3069"
                                    ]
                              ]
                            [
                              <case>
                                pattern (src/code_matcher.ml[113,3404+46]..src/code_matcher.ml[113,3404+51])
                                  Tpat_value
                                  pattern (src/code_matcher.ml[113,3404+46]..src/code_matcher.ml[113,3404+51])
                                    Tpat_construct "::"
                                    [
                                      pattern (src/code_matcher.ml[113,3404+48]..src/code_matcher.ml[113,3404+49])
                                        Tpat_var "x/3070"
                                      pattern (src/code_matcher.ml[113,3404+50]..src/code_matcher.ml[113,3404+51]) ghost
                                        Tpat_construct "[]"
                                        []
                                    ]
                                expression (src/code_matcher.ml[113,3404+55]..src/code_matcher.ml[113,3404+56])
                                  Texp_ident "x/3070"
                              <case>
                                pattern (src/code_matcher.ml[113,3404+59]..src/code_matcher.ml[113,3404+60])
                                  Tpat_value
                                  pattern (src/code_matcher.ml[113,3404+59]..src/code_matcher.ml[113,3404+60])
                                    Tpat_any
                                expression (src/code_matcher.ml[113,3404+64]..src/code_matcher.ml[113,3404+76])
                                  Texp_assert                                  expression (src/code_matcher.ml[113,3404+71]..src/code_matcher.ml[113,3404+76])
                                    Texp_construct "false"
                                    []
                            ]
                            []
                      ]
                ]
              structure_item (src/code_matcher.ml[115,3482+2]..src/code_matcher.ml[143,4518+63])
                Tstr_value Rec
                [
                  <def>
                    pattern (src/code_matcher.ml[115,3482+10]..src/code_matcher.ml[115,3482+20])
                      Tpat_var "match_loop/3071"
                    expression (src/code_matcher.ml[115,3482+21]..src/code_matcher.ml[143,4518+63]) ghost
                      Texp_function
                      Labelled "end_pos"
                      [
                        <case>
                          pattern (src/code_matcher.ml[115,3482+22]..src/code_matcher.ml[115,3482+29])
                            Tpat_var "end_pos/3072"
                          expression (src/code_matcher.ml[115,3482+30]..src/code_matcher.ml[143,4518+63]) ghost
                            Texp_function
                            Labelled "mismatch_handler"
                            [
                              <case>
                                pattern (src/code_matcher.ml[115,3482+31]..src/code_matcher.ml[115,3482+47])
                                  Tpat_var "mismatch_handler/3073"
                                expression (src/code_matcher.ml[115,3482+48]..src/code_matcher.ml[143,4518+63]) ghost
                                  Texp_function
                                  Labelled "expected"
                                  [
                                    <case>
                                      pattern (src/code_matcher.ml[115,3482+49]..src/code_matcher.ml[115,3482+57])
                                        Tpat_var "expected/3074"
                                      expression (src/code_matcher.ml[115,3482+58]..src/code_matcher.ml[143,4518+63]) ghost
                                        Texp_function
                                        Labelled "source"
                                        [
                                          <case>
                                            pattern (src/code_matcher.ml[115,3482+59]..src/code_matcher.ml[115,3482+65])
                                              Tpat_var "source/3075"
                                            expression (src/code_matcher.ml[116,3550+4]..src/code_matcher.ml[143,4518+63])
                                              Texp_match
                                              expression (src/code_matcher.ml[116,3550+10]..src/code_matcher.ml[116,3550+28])
                                                Texp_tuple
                                                [
                                                  expression (src/code_matcher.ml[116,3550+11]..src/code_matcher.ml[116,3550+19])
                                                    Texp_ident "expected/3074"
                                                  expression (src/code_matcher.ml[116,3550+21]..src/code_matcher.ml[116,3550+27])
                                                    Texp_ident "source/3075"
                                                ]
                                              [
                                                <case>
                                                  pattern (src/code_matcher.ml[117,3584+6]..src/code_matcher.ml[117,3584+12])
                                                    Tpat_value
                                                    pattern (src/code_matcher.ml[117,3584+6]..src/code_matcher.ml[117,3584+12])
                                                      Tpat_tuple
                                                      [
                                                        pattern (src/code_matcher.ml[117,3584+6]..src/code_matcher.ml[117,3584+8])
                                                          Tpat_construct "[]"
                                                          []
                                                        pattern (src/code_matcher.ml[117,3584+10]..src/code_matcher.ml[117,3584+12])
                                                          Tpat_construct "[]"
                                                          []
                                                      ]
                                                  expression (src/code_matcher.ml[117,3584+16]..src/code_matcher.ml[117,3584+18])
                                                    Texp_construct "()"
                                                    []
                                                <case>
                                                  pattern (src/code_matcher.ml[118,3603+6]..src/code_matcher.ml[118,3603+16])
                                                    Tpat_value
                                                    pattern (src/code_matcher.ml[118,3603+6]..src/code_matcher.ml[118,3603+16])
                                                      Tpat_tuple
                                                      [
                                                        pattern (src/code_matcher.ml[118,3603+6]..src/code_matcher.ml[118,3603+8])
                                                          Tpat_construct "[]"
                                                          []
                                                        pattern (src/code_matcher.ml[118,3603+10]..src/code_matcher.ml[118,3603+16])
                                                          Tpat_construct "::"
                                                          [
                                                            pattern (src/code_matcher.ml[118,3603+10]..src/code_matcher.ml[118,3603+11])
                                                              Tpat_var "x/3076"
                                                            pattern (src/code_matcher.ml[118,3603+15]..src/code_matcher.ml[118,3603+16])
                                                              Tpat_var "l/3077"
                                                          ]
                                                      ]
                                                  expression (src/code_matcher.ml[119,3623+8]..src/code_matcher.ml[122,3726+31])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (src/code_matcher.ml[119,3623+12]..src/code_matcher.ml[119,3623+15])
                                                          Tpat_var "loc/3082"
                                                        expression (src/code_matcher.ml[120,3641+10]..src/code_matcher.ml[120,3641+73])
                                                          Texp_record
                                                            fields =
                                                              [
                                                                <kept>                                                                "loc_end"
                                                                  expression (src/code_matcher.ml[120,3641+41]..src/code_matcher.ml[120,3641+71])
                                                                    Texp_field
                                                                    expression (src/code_matcher.ml[120,3641+41]..src/code_matcher.ml[120,3641+63])
                                                                      Texp_apply
                                                                      expression (src/code_matcher.ml[120,3641+42]..src/code_matcher.ml[120,3641+51])
                                                                        Texp_ident "M/1320.get_loc"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/code_matcher.ml[120,3641+52]..src/code_matcher.ml[120,3641+62])
                                                                            Texp_apply
                                                                            expression (src/code_matcher.ml[120,3641+53]..src/code_matcher.ml[120,3641+57])
                                                                              Texp_ident "last/2894"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/code_matcher.ml[120,3641+58]..src/code_matcher.ml[120,3641+59])
                                                                                  Texp_ident "x/3076"
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/code_matcher.ml[120,3641+60]..src/code_matcher.ml[120,3641+61])
                                                                                  Texp_ident "l/3077"
                                                                            ]
                                                                      ]
                                                                    "loc_end"
                                                                <kept>                                                              ]
                                                            representation =
                                                              Record_regular
                                                            extended_expression =
                                                              Some
                                                                expression (src/code_matcher.ml[120,3641+12]..src/code_matcher.ml[120,3641+25])
                                                                  Texp_apply
                                                                  expression (src/code_matcher.ml[120,3641+13]..src/code_matcher.ml[120,3641+22])
                                                                    Texp_ident "M/1320.get_loc"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/code_matcher.ml[120,3641+23]..src/code_matcher.ml[120,3641+24])
                                                                        Texp_ident "x/3076"
                                                                  ]
                                                    ]
                                                    expression (src/code_matcher.ml[122,3726+8]..src/code_matcher.ml[122,3726+31])
                                                      Texp_apply
                                                      expression (src/code_matcher.ml[122,3726+8]..src/code_matcher.ml[122,3726+24])
                                                        Texp_ident "mismatch_handler/3073"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/code_matcher.ml[122,3726+25]..src/code_matcher.ml[122,3726+28])
                                                            Texp_ident "loc/3082"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/code_matcher.ml[122,3726+29]..src/code_matcher.ml[122,3726+31])
                                                            Texp_construct "[]"
                                                            []
                                                      ]
                                                <case>
                                                  pattern (src/code_matcher.ml[123,3758+6]..src/code_matcher.ml[123,3758+11])
                                                    Tpat_value
                                                    pattern (src/code_matcher.ml[123,3758+6]..src/code_matcher.ml[123,3758+11])
                                                      Tpat_tuple
                                                      [
                                                        pattern (src/code_matcher.ml[123,3758+6]..src/code_matcher.ml[123,3758+7])
                                                          Tpat_any
                                                        pattern (src/code_matcher.ml[123,3758+9]..src/code_matcher.ml[123,3758+11])
                                                          Tpat_construct "[]"
                                                          []
                                                      ]
                                                  expression (src/code_matcher.ml[124,3773+8]..src/code_matcher.ml[127,3883+37])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (src/code_matcher.ml[124,3773+12]..src/code_matcher.ml[124,3773+15])
                                                          Tpat_var "loc/3083"
                                                        expression (src/code_matcher.ml[125,3791+10]..src/code_matcher.ml[125,3791+80])
                                                          Texp_record
                                                            fields =
                                                              [
                                                                "Location.loc_start"
                                                                  expression (src/code_matcher.ml[125,3791+52]..src/code_matcher.ml[125,3791+59])
                                                                    Texp_ident "end_pos/3072"
                                                                "Location.loc_end"
                                                                  expression (src/code_matcher.ml[125,3791+71]..src/code_matcher.ml[125,3791+78])
                                                                    Texp_ident "end_pos/3072"
                                                                "Location.loc_ghost"
                                                                  expression (src/code_matcher.ml[125,3791+33]..src/code_matcher.ml[125,3791+38])
                                                                    Texp_construct "false"
                                                                    []
                                                              ]
                                                            representation =
                                                              Record_regular
                                                            extended_expression =
                                                              None
                                                    ]
                                                    expression (src/code_matcher.ml[127,3883+8]..src/code_matcher.ml[127,3883+37])
                                                      Texp_apply
                                                      expression (src/code_matcher.ml[127,3883+8]..src/code_matcher.ml[127,3883+24])
                                                        Texp_ident "mismatch_handler/3073"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/code_matcher.ml[127,3883+25]..src/code_matcher.ml[127,3883+28])
                                                            Texp_ident "loc/3083"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/code_matcher.ml[127,3883+29]..src/code_matcher.ml[127,3883+37])
                                                            Texp_ident "expected/3074"
                                                      ]
                                                <case>
                                                  pattern (src/code_matcher.ml[128,3921+6]..src/code_matcher.ml[128,3921+32])
                                                    Tpat_value
                                                    pattern (src/code_matcher.ml[128,3921+6]..src/code_matcher.ml[128,3921+32])
                                                      Tpat_tuple
                                                      [
                                                        pattern (src/code_matcher.ml[128,3921+6]..src/code_matcher.ml[128,3921+19])
                                                          Tpat_construct "::"
                                                          [
                                                            pattern (src/code_matcher.ml[128,3921+6]..src/code_matcher.ml[128,3921+7])
                                                              Tpat_var "x/3078"
                                                            pattern (src/code_matcher.ml[128,3921+11]..src/code_matcher.ml[128,3921+19])
                                                              Tpat_var "expected/3079"
                                                          ]
                                                        pattern (src/code_matcher.ml[128,3921+21]..src/code_matcher.ml[128,3921+32])
                                                          Tpat_construct "::"
                                                          [
                                                            pattern (src/code_matcher.ml[128,3921+21]..src/code_matcher.ml[128,3921+22])
                                                              Tpat_var "y/3080"
                                                            pattern (src/code_matcher.ml[128,3921+26]..src/code_matcher.ml[128,3921+32])
                                                              Tpat_var "source/3081"
                                                          ]
                                                      ]
                                                  expression (src/code_matcher.ml[129,3957+8]..src/code_matcher.ml[143,4518+63])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (src/code_matcher.ml[129,3957+12]..src/code_matcher.ml[129,3957+15])
                                                          Tpat_var "loc/3084"
                                                        expression (src/code_matcher.ml[129,3957+18]..src/code_matcher.ml[129,3957+29])
                                                          Texp_apply
                                                          expression (src/code_matcher.ml[129,3957+18]..src/code_matcher.ml[129,3957+27])
                                                            Texp_ident "M/1320.get_loc"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/code_matcher.ml[129,3957+28]..src/code_matcher.ml[129,3957+29])
                                                                Texp_ident "y/3080"
                                                          ]
                                                    ]
                                                    expression (src/code_matcher.ml[130,3990+8]..src/code_matcher.ml[143,4518+63])
                                                      Texp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (src/code_matcher.ml[130,3990+12]..src/code_matcher.ml[130,3990+13])
                                                            Tpat_var "x/3085"
                                                          expression (src/code_matcher.ml[130,3990+16]..src/code_matcher.ml[130,3990+28])
                                                            Texp_apply
                                                            expression (src/code_matcher.ml[130,3990+16]..src/code_matcher.ml[130,3990+26])
                                                              Texp_ident "remove_loc/2892"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/code_matcher.ml[130,3990+27]..src/code_matcher.ml[130,3990+28])
                                                                  Texp_ident "x/3078"
                                                            ]
                                                      ]
                                                      expression (src/code_matcher.ml[131,4022+8]..src/code_matcher.ml[143,4518+63])
                                                        Texp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (src/code_matcher.ml[131,4022+12]..src/code_matcher.ml[131,4022+13])
                                                              Tpat_var "y/3086"
                                                            expression (src/code_matcher.ml[131,4022+16]..src/code_matcher.ml[131,4022+28])
                                                              Texp_apply
                                                              expression (src/code_matcher.ml[131,4022+16]..src/code_matcher.ml[131,4022+26])
                                                                Texp_ident "remove_loc/2892"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/code_matcher.ml[131,4022+27]..src/code_matcher.ml[131,4022+28])
                                                                    Texp_ident "y/3080"
                                                              ]
                                                        ]
                                                        expression (src/code_matcher.ml[132,4054+8]..src/code_matcher.ml[143,4518+63])
                                                          Texp_sequence
                                                          expression (src/code_matcher.ml[132,4054+8]..src/code_matcher.ml[142,4479+37])
                                                            Texp_ifthenelse
                                                            expression (src/code_matcher.ml[132,4054+11]..src/code_matcher.ml[132,4054+26])
                                                              Texp_apply
                                                              expression (src/code_matcher.ml[132,4054+11]..src/code_matcher.ml[132,4054+22])
                                                                Texp_ident "Ppxlib__!.Import.Poly.<>"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/code_matcher.ml[132,4054+23]..src/code_matcher.ml[132,4054+24])
                                                                    Texp_ident "x/3085"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/code_matcher.ml[132,4054+25]..src/code_matcher.ml[132,4054+26])
                                                                    Texp_ident "y/3086"
                                                              ]
                                                            expression (src/code_matcher.ml[132,4054+32]..src/code_matcher.ml[142,4479+37])
                                                              Texp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (src/code_matcher.ml[133,4088+14]..src/code_matcher.ml[133,4088+24])
                                                                    Tpat_var "round_trip/3097"
                                                                  expression (src/code_matcher.ml[134,4115+12]..src/code_matcher.ml[134,4115+69])
                                                                    Texp_apply
                                                                    expression (src/code_matcher.ml[134,4115+12]..src/code_matcher.ml[134,4115+22])
                                                                      Texp_ident "remove_loc/2892"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/code_matcher.ml[134,4115+23]..src/code_matcher.ml[134,4115+69])
                                                                          Texp_apply
                                                                          expression (src/code_matcher.ml[134,4115+24]..src/code_matcher.ml[134,4115+36])
                                                                            Texp_ident "parse_string/3067"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/code_matcher.ml[134,4115+37]..src/code_matcher.ml[134,4115+68])
                                                                                Texp_apply
                                                                                expression (src/code_matcher.ml[134,4115+38]..src/code_matcher.ml[134,4115+53])
                                                                                  Texp_ident "Format/550.asprintf"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/code_matcher.ml[134,4115+54]..src/code_matcher.ml[134,4115+60])
                                                                                      Texp_construct "CamlinternalFormatBasics.Format"
                                                                                      [
                                                                                        expression (src/code_matcher.ml[134,4115+54]..src/code_matcher.ml[134,4115+60]) ghost
                                                                                          Texp_construct "CamlinternalFormatBasics.Alpha"
                                                                                          [
                                                                                            expression (src/code_matcher.ml[134,4115+54]..src/code_matcher.ml[134,4115+60]) ghost
                                                                                              Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                              [
                                                                                                expression (src/code_matcher.ml[134,4115+54]..src/code_matcher.ml[134,4115+60]) ghost
                                                                                                  Texp_construct "CamlinternalFormatBasics.Flush_newline"
                                                                                                  []
                                                                                                expression (src/code_matcher.ml[134,4115+54]..src/code_matcher.ml[134,4115+60]) ghost
                                                                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                  []
                                                                                              ]
                                                                                          ]
                                                                                        expression (src/code_matcher.ml[134,4115+54]..src/code_matcher.ml[134,4115+60]) ghost
                                                                                          Texp_constant Const_string("%a@.",(src/code_matcher.ml[134,4115+54]..src/code_matcher.ml[134,4115+60]) ghost,None)
                                                                                      ]
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/code_matcher.ml[134,4115+61]..src/code_matcher.ml[134,4115+65])
                                                                                      Texp_ident "M/1320.pp"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/code_matcher.ml[134,4115+66]..src/code_matcher.ml[134,4115+67])
                                                                                      Texp_ident "x/3085"
                                                                                ]
                                                                          ]
                                                                    ]
                                                              ]
                                                              expression (src/code_matcher.ml[136,4198+10]..src/code_matcher.ml[142,4479+36])
                                                                Texp_sequence
                                                                expression (src/code_matcher.ml[136,4198+10]..src/code_matcher.ml[141,4427+50])
                                                                  Texp_ifthenelse
                                                                  expression (src/code_matcher.ml[136,4198+13]..src/code_matcher.ml[136,4198+37])
                                                                    Texp_apply
                                                                    expression (src/code_matcher.ml[136,4198+13]..src/code_matcher.ml[136,4198+24])
                                                                      Texp_ident "Ppxlib__!.Import.Poly.<>"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/code_matcher.ml[136,4198+25]..src/code_matcher.ml[136,4198+26])
                                                                          Texp_ident "x/3085"
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/code_matcher.ml[136,4198+27]..src/code_matcher.ml[136,4198+37])
                                                                          Texp_ident "round_trip/3097"
                                                                    ]
                                                                  expression (src/code_matcher.ml[137,4241+12]..src/code_matcher.ml[141,4427+50])
                                                                    Texp_apply
                                                                    expression (src/code_matcher.ml[137,4241+12]..src/code_matcher.ml[137,4241+33])
                                                                      Texp_ident "Ppxlib__!.Location.raise_errorf"
                                                                    [
                                                                      <arg>
                                                                        Optional "loc"
                                                                        expression (src/code_matcher.ml[137,4241+35]..src/code_matcher.ml[137,4241+38])
                                                                          Texp_construct "Some"
                                                                          [
                                                                            expression (src/code_matcher.ml[137,4241+35]..src/code_matcher.ml[137,4241+38])
                                                                              Texp_ident "loc/3084"
                                                                          ]
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/code_matcher.ml[138,4280+14]..src/code_matcher.ml[140,4408+18])
                                                                          Texp_construct "CamlinternalFormatBasics.Format"
                                                                          [
                                                                            expression (src/code_matcher.ml[138,4280+14]..src/code_matcher.ml[140,4408+18]) ghost
                                                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                              [
                                                                                expression (src/code_matcher.ml[138,4280+14]..src/code_matcher.ml[140,4408+18]) ghost
                                                                                  Texp_constant Const_string("ppxlib: the corrected code doesn't round-trip.\nThis is probably a bug in the OCaml printer:\n",(src/code_matcher.ml[138,4280+14]..src/code_matcher.ml[140,4408+18]) ghost,None)
                                                                                expression (src/code_matcher.ml[138,4280+14]..src/code_matcher.ml[140,4408+18]) ghost
                                                                                  Texp_construct "CamlinternalFormatBasics.String"
                                                                                  [
                                                                                    expression (src/code_matcher.ml[138,4280+14]..src/code_matcher.ml[140,4408+18]) ghost
                                                                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                      []
                                                                                    expression (src/code_matcher.ml[138,4280+14]..src/code_matcher.ml[140,4408+18]) ghost
                                                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                      []
                                                                                  ]
                                                                              ]
                                                                            expression (src/code_matcher.ml[138,4280+14]..src/code_matcher.ml[140,4408+18]) ghost
                                                                              Texp_constant Const_string("ppxlib: the corrected code doesn't round-trip.\nThis is probably a bug in the OCaml printer:\n%s",(src/code_matcher.ml[138,4280+14]..src/code_matcher.ml[140,4408+18]) ghost,None)
                                                                          ]
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/code_matcher.ml[141,4427+14]..src/code_matcher.ml[141,4427+50])
                                                                          Texp_apply
                                                                          expression (src/code_matcher.ml[141,4427+15]..src/code_matcher.ml[141,4427+24])
                                                                            Texp_ident "diff_asts/2899"
                                                                          [
                                                                            <arg>
                                                                              Labelled "generated"
                                                                              expression (src/code_matcher.ml[141,4427+36]..src/code_matcher.ml[141,4427+37])
                                                                                Texp_ident "x/3085"
                                                                            <arg>
                                                                              Labelled "round_trip"
                                                                              expression (src/code_matcher.ml[141,4427+39]..src/code_matcher.ml[141,4427+49])
                                                                                Texp_ident "round_trip/3097"
                                                                          ]
                                                                    ]
                                                                  None
                                                                expression (src/code_matcher.ml[142,4479+10]..src/code_matcher.ml[142,4479+36])
                                                                  Texp_apply
                                                                  expression (src/code_matcher.ml[142,4479+10]..src/code_matcher.ml[142,4479+26])
                                                                    Texp_ident "mismatch_handler/3073"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/code_matcher.ml[142,4479+27]..src/code_matcher.ml[142,4479+30])
                                                                        Texp_ident "loc/3084"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/code_matcher.ml[142,4479+31]..src/code_matcher.ml[142,4479+36])
                                                                        Texp_construct "::"
                                                                        [
                                                                          expression (src/code_matcher.ml[142,4479+33]..src/code_matcher.ml[142,4479+34])
                                                                            Texp_ident "x/3085"
                                                                          expression (src/code_matcher.ml[142,4479+35]..src/code_matcher.ml[142,4479+36]) ghost
                                                                            Texp_construct "[]"
                                                                            []
                                                                        ]
                                                                  ]
                                                            None
                                                          expression (src/code_matcher.ml[143,4518+8]..src/code_matcher.ml[143,4518+63])
                                                            Texp_apply
                                                            expression (src/code_matcher.ml[143,4518+8]..src/code_matcher.ml[143,4518+18])
                                                              Texp_ident "match_loop/3071"
                                                            [
                                                              <arg>
                                                                Labelled "end_pos"
                                                                expression (src/code_matcher.ml[143,4518+20]..src/code_matcher.ml[143,4518+27])
                                                                  Texp_ident "end_pos/3072"
                                                              <arg>
                                                                Labelled "mismatch_handler"
                                                                expression (src/code_matcher.ml[143,4518+29]..src/code_matcher.ml[143,4518+45])
                                                                  Texp_ident "mismatch_handler/3073"
                                                              <arg>
                                                                Labelled "expected"
                                                                expression (src/code_matcher.ml[143,4518+47]..src/code_matcher.ml[143,4518+55])
                                                                  Texp_ident "expected/3079"
                                                              <arg>
                                                                Labelled "source"
                                                                expression (src/code_matcher.ml[143,4518+57]..src/code_matcher.ml[143,4518+63])
                                                                  Texp_ident "source/3081"
                                                            ]
                                              ]
                                              []
                                        ]
                                  ]
                            ]
                      ]
                ]
              structure_item (src/code_matcher.ml[145,4583+2]..src/code_matcher.ml[148,4723+59])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/code_matcher.ml[145,4583+6]..src/code_matcher.ml[145,4583+14])
                      Tpat_var "do_match/3098"
                    expression (src/code_matcher.ml[145,4583+15]..src/code_matcher.ml[148,4723+59]) ghost
                      Texp_function
                      Labelled "pos"
                      [
                        <case>
                          pattern (src/code_matcher.ml[145,4583+16]..src/code_matcher.ml[145,4583+19])
                            Tpat_var "pos/3100"
                          expression (src/code_matcher.ml[145,4583+20]..src/code_matcher.ml[148,4723+59]) ghost
                            Texp_function
                            Labelled "expected"
                            [
                              <case>
                                pattern (src/code_matcher.ml[145,4583+21]..src/code_matcher.ml[145,4583+29])
                                  Tpat_var "expected/3101"
                                expression (src/code_matcher.ml[145,4583+30]..src/code_matcher.ml[148,4723+59]) ghost
                                  Texp_function
                                  Labelled "mismatch_handler"
                                  [
                                    <case>
                                      pattern (src/code_matcher.ml[145,4583+31]..src/code_matcher.ml[145,4583+47])
                                        Tpat_var "mismatch_handler/3102"
                                      expression (src/code_matcher.ml[145,4583+48]..src/code_matcher.ml[148,4723+59]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/code_matcher.ml[145,4583+48]..src/code_matcher.ml[145,4583+54])
                                              Tpat_var "source/3103"
                                            expression (src/code_matcher.ml[146,4640+4]..src/code_matcher.ml[148,4723+59])
                                              Texp_open Fresh
                                              module_expr (src/code_matcher.ml[146,4640+13]..src/code_matcher.ml[146,4640+19])
                                                Tmod_ident "Ppxlib__!.Import.Result"
                                              expression (src/code_matcher.ml[147,4663+4]..src/code_matcher.ml[148,4723+59])
                                                Texp_apply
                                                expression (src/code_matcher.ml[147,4663+31]..src/code_matcher.ml[147,4663+34])
                                                  Texp_ident "Ppxlib__!.Import.Result.>>|"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/code_matcher.ml[147,4663+4]..src/code_matcher.ml[147,4663+30])
                                                      Texp_apply
                                                      expression (src/code_matcher.ml[147,4663+4]..src/code_matcher.ml[147,4663+18])
                                                        Texp_ident "extract_prefix/1321"
                                                      [
                                                        <arg>
                                                          Labelled "pos"
                                                          expression (src/code_matcher.ml[147,4663+20]..src/code_matcher.ml[147,4663+23])
                                                            Texp_ident "pos/3100"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/code_matcher.ml[147,4663+24]..src/code_matcher.ml[147,4663+30])
                                                            Texp_ident "source/3103"
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (src/code_matcher.ml[147,4663+35]..src/code_matcher.ml[148,4723+59])
                                                      Texp_function
                                                      Nolabel
                                                      [
                                                        <case>
                                                          pattern (src/code_matcher.ml[147,4663+39]..src/code_matcher.ml[147,4663+56])
                                                            Tpat_tuple
                                                            [
                                                              pattern (src/code_matcher.ml[147,4663+40]..src/code_matcher.ml[147,4663+46])
                                                                Tpat_var "source/3110"
                                                              pattern (src/code_matcher.ml[147,4663+48]..src/code_matcher.ml[147,4663+55])
                                                                Tpat_var "end_pos/3111"
                                                            ]
                                                          expression (src/code_matcher.ml[148,4723+4]..src/code_matcher.ml[148,4723+59])
                                                            Texp_apply
                                                            expression (src/code_matcher.ml[148,4723+4]..src/code_matcher.ml[148,4723+14])
                                                              Texp_ident "match_loop/3071"
                                                            [
                                                              <arg>
                                                                Labelled "end_pos"
                                                                expression (src/code_matcher.ml[148,4723+16]..src/code_matcher.ml[148,4723+23])
                                                                  Texp_ident "end_pos/3111"
                                                              <arg>
                                                                Labelled "mismatch_handler"
                                                                expression (src/code_matcher.ml[148,4723+25]..src/code_matcher.ml[148,4723+41])
                                                                  Texp_ident "mismatch_handler/3102"
                                                              <arg>
                                                                Labelled "expected"
                                                                expression (src/code_matcher.ml[148,4723+43]..src/code_matcher.ml[148,4723+51])
                                                                  Texp_ident "expected/3101"
                                                              <arg>
                                                                Labelled "source"
                                                                expression (src/code_matcher.ml[148,4723+53]..src/code_matcher.ml[148,4723+59])
                                                                  Texp_ident "source/3110"
                                                            ]
                                                      ]
                                                ]
                                        ]
                                  ]
                            ]
                      ]
                ]
            ]
  structure_item (src/code_matcher.ml[152,4794+0]..src/code_matcher.ml[165,5113+4])
    Tstr_module
    Str/5038
      module_expr (src/code_matcher.ml[152,4794+13]..src/code_matcher.ml[165,5113+4])
        Tmod_apply
        module_expr (src/code_matcher.ml[152,4794+13]..src/code_matcher.ml[152,4794+17])
          Tmod_ident "Make/3113"
        module_expr (src/code_matcher.ml[152,4794+19]..src/code_matcher.ml[165,5113+3])
          Tmod_structure
          [
            structure_item (src/code_matcher.ml[153,4820+2]..src/code_matcher.ml[153,4820+25])
              Tstr_type Rec
              [
                type_declaration t/3114 (src/code_matcher.ml[153,4820+2]..src/code_matcher.ml[153,4820+25])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ttype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (src/code_matcher.ml[153,4820+11]..src/code_matcher.ml[153,4820+25])
                        Ttyp_constr "Ppxlib__!.Import.structure_item"
                        []
              ]
            structure_item (src/code_matcher.ml[155,4847+2]..src/code_matcher.ml[155,4847+28])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/code_matcher.ml[155,4847+6]..src/code_matcher.ml[155,4847+13])
                    Tpat_var "get_loc/3115"
                  expression (src/code_matcher.ml[155,4847+14]..src/code_matcher.ml[155,4847+28]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/code_matcher.ml[155,4847+14]..src/code_matcher.ml[155,4847+15])
                          Tpat_var "x/3117"
                        expression (src/code_matcher.ml[155,4847+18]..src/code_matcher.ml[155,4847+28])
                          Texp_field
                          expression (src/code_matcher.ml[155,4847+18]..src/code_matcher.ml[155,4847+19])
                            Texp_ident "x/3117"
                          "pstr_loc"
                    ]
              ]
            structure_item (src/code_matcher.ml[156,4876+2]..src/code_matcher.ml[156,4876+33])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/code_matcher.ml[156,4876+6]..src/code_matcher.ml[156,4876+16])
                    Tpat_var "end_marker/3118"
                  expression (src/code_matcher.ml[156,4876+19]..src/code_matcher.ml[156,4876+33])
                    Texp_ident "end_marker_str/1040"
              ]
            structure_item (src/code_matcher.ml[158,4911+2]..src/code_matcher.ml[160,4983+5])
              Tstr_module
              Transform/3123
                module_expr (src/code_matcher.ml[158,4911+19]..src/code_matcher.ml[160,4983+5])
                  Tmod_functor "T/3119"
                  module_type (src/code_matcher.ml[158,4911+24]..src/code_matcher.ml[158,4911+26])
                    Tmty_ident "T1/1042"
                  module_expr (src/code_matcher.ml[158,4911+30]..src/code_matcher.ml[160,4983+5])
                    Tmod_structure
                    [
                      structure_item (src/code_matcher.ml[159,4948+4]..src/code_matcher.ml[159,4948+34])
                        Tstr_value Nonrec
                        [
                          <def>
                            pattern (src/code_matcher.ml[159,4948+8]..src/code_matcher.ml[159,4948+13])
                              Tpat_var "apply/3120"
                            expression (src/code_matcher.ml[159,4948+14]..src/code_matcher.ml[159,4948+34]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/code_matcher.ml[159,4948+14]..src/code_matcher.ml[159,4948+15])
                                    Tpat_var "o/3122"
                                  expression (src/code_matcher.ml[159,4948+18]..src/code_matcher.ml[159,4948+34])
                                    Texp_send "structure_item"
                                    expression (src/code_matcher.ml[159,4948+18]..src/code_matcher.ml[159,4948+19])
                                      Texp_ident "o/3122"
                                    None
                              ]
                        ]
                    ]
            structure_item (src/code_matcher.ml[162,4990+2]..src/code_matcher.ml[162,4990+34])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/code_matcher.ml[162,4990+6]..src/code_matcher.ml[162,4990+11])
                    Tpat_var "parse/3124"
                  expression (src/code_matcher.ml[162,4990+14]..src/code_matcher.ml[162,4990+34])
                    Texp_ident "Ppxlib__!.Import.Parse.implementation"
              ]
            structure_item (src/code_matcher.ml[163,5025+2]..src/code_matcher.ml[163,5025+35])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/code_matcher.ml[163,5025+6]..src/code_matcher.ml[163,5025+8])
                    Tpat_var "pp/3153"
                  expression (src/code_matcher.ml[163,5025+11]..src/code_matcher.ml[163,5025+35])
                    Texp_ident "Ppxlib__!.Import.Pprintast.structure_item"
              ]
            structure_item (src/code_matcher.ml[164,5061+2]..src/code_matcher.ml[164,5061+51])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/code_matcher.ml[164,5061+6]..src/code_matcher.ml[164,5061+13])
                    Tpat_var "to_sexp/3175"
                  expression (src/code_matcher.ml[164,5061+16]..src/code_matcher.ml[164,5061+51])
                    Texp_send "structure_item"
                    expression (src/code_matcher.ml[164,5061+16]..src/code_matcher.ml[164,5061+36])
                      Texp_ident "Ppxlib__!.Ast_traverse.sexp_of"
                    None
              ]
          ]
  structure_item (src/code_matcher.ml[168,5154+0]..src/code_matcher.ml[181,5468+4])
    Tstr_module
    Sig/5062
      module_expr (src/code_matcher.ml[168,5154+13]..src/code_matcher.ml[181,5468+4])
        Tmod_apply
        module_expr (src/code_matcher.ml[168,5154+13]..src/code_matcher.ml[168,5154+17])
          Tmod_ident "Make/3113"
        module_expr (src/code_matcher.ml[168,5154+19]..src/code_matcher.ml[181,5468+3])
          Tmod_structure
          [
            structure_item (src/code_matcher.ml[169,5180+2]..src/code_matcher.ml[169,5180+25])
              Tstr_type Rec
              [
                type_declaration t/5039 (src/code_matcher.ml[169,5180+2]..src/code_matcher.ml[169,5180+25])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ttype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (src/code_matcher.ml[169,5180+11]..src/code_matcher.ml[169,5180+25])
                        Ttyp_constr "Ppxlib__!.Import.signature_item"
                        []
              ]
            structure_item (src/code_matcher.ml[171,5207+2]..src/code_matcher.ml[171,5207+28])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/code_matcher.ml[171,5207+6]..src/code_matcher.ml[171,5207+13])
                    Tpat_var "get_loc/5040"
                  expression (src/code_matcher.ml[171,5207+14]..src/code_matcher.ml[171,5207+28]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/code_matcher.ml[171,5207+14]..src/code_matcher.ml[171,5207+15])
                          Tpat_var "x/5042"
                        expression (src/code_matcher.ml[171,5207+18]..src/code_matcher.ml[171,5207+28])
                          Texp_field
                          expression (src/code_matcher.ml[171,5207+18]..src/code_matcher.ml[171,5207+19])
                            Texp_ident "x/5042"
                          "psig_loc"
                    ]
              ]
            structure_item (src/code_matcher.ml[172,5236+2]..src/code_matcher.ml[172,5236+33])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/code_matcher.ml[172,5236+6]..src/code_matcher.ml[172,5236+16])
                    Tpat_var "end_marker/5043"
                  expression (src/code_matcher.ml[172,5236+19]..src/code_matcher.ml[172,5236+33])
                    Texp_ident "end_marker_sig/552"
              ]
            structure_item (src/code_matcher.ml[174,5271+2]..src/code_matcher.ml[176,5343+5])
              Tstr_module
              Transform/5048
                module_expr (src/code_matcher.ml[174,5271+19]..src/code_matcher.ml[176,5343+5])
                  Tmod_functor "T/5044"
                  module_type (src/code_matcher.ml[174,5271+24]..src/code_matcher.ml[174,5271+26])
                    Tmty_ident "T1/1042"
                  module_expr (src/code_matcher.ml[174,5271+30]..src/code_matcher.ml[176,5343+5])
                    Tmod_structure
                    [
                      structure_item (src/code_matcher.ml[175,5308+4]..src/code_matcher.ml[175,5308+34])
                        Tstr_value Nonrec
                        [
                          <def>
                            pattern (src/code_matcher.ml[175,5308+8]..src/code_matcher.ml[175,5308+13])
                              Tpat_var "apply/5045"
                            expression (src/code_matcher.ml[175,5308+14]..src/code_matcher.ml[175,5308+34]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/code_matcher.ml[175,5308+14]..src/code_matcher.ml[175,5308+15])
                                    Tpat_var "o/5047"
                                  expression (src/code_matcher.ml[175,5308+18]..src/code_matcher.ml[175,5308+34])
                                    Texp_send "signature_item"
                                    expression (src/code_matcher.ml[175,5308+18]..src/code_matcher.ml[175,5308+19])
                                      Texp_ident "o/5047"
                                    None
                              ]
                        ]
                    ]
            structure_item (src/code_matcher.ml[178,5350+2]..src/code_matcher.ml[178,5350+29])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/code_matcher.ml[178,5350+6]..src/code_matcher.ml[178,5350+11])
                    Tpat_var "parse/5049"
                  expression (src/code_matcher.ml[178,5350+14]..src/code_matcher.ml[178,5350+29])
                    Texp_ident "Ppxlib__!.Import.Parse.interface"
              ]
            structure_item (src/code_matcher.ml[179,5380+2]..src/code_matcher.ml[179,5380+35])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/code_matcher.ml[179,5380+6]..src/code_matcher.ml[179,5380+8])
                    Tpat_var "pp/5050"
                  expression (src/code_matcher.ml[179,5380+11]..src/code_matcher.ml[179,5380+35])
                    Texp_ident "Ppxlib__!.Import.Pprintast.signature_item"
              ]
            structure_item (src/code_matcher.ml[180,5416+2]..src/code_matcher.ml[180,5416+51])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/code_matcher.ml[180,5416+6]..src/code_matcher.ml[180,5416+13])
                    Tpat_var "to_sexp/5051"
                  expression (src/code_matcher.ml[180,5416+16]..src/code_matcher.ml[180,5416+51])
                    Texp_send "signature_item"
                    expression (src/code_matcher.ml[180,5416+16]..src/code_matcher.ml[180,5416+36])
                      Texp_ident "Ppxlib__!.Ast_traverse.sexp_of"
                    None
              ]
          ]
  structure_item (src/code_matcher.ml[185,5481+0]..src/code_matcher.ml[185,5481+38])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/code_matcher.ml[185,5481+4]..src/code_matcher.ml[185,5481+23])
          Tpat_var "match_structure_res/5063"
        expression (src/code_matcher.ml[185,5481+26]..src/code_matcher.ml[185,5481+38])
          Texp_ident "Str/5038.do_match"
    ]
  structure_item (src/code_matcher.ml[187,5521+0]..src/code_matcher.ml[189,5635+70])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/code_matcher.ml[187,5521+4]..src/code_matcher.ml[187,5521+19])
          Tpat_var "match_structure/5064"
        expression (src/code_matcher.ml[187,5521+20]..src/code_matcher.ml[189,5635+70]) ghost
          Texp_function
          Labelled "pos"
          [
            <case>
              pattern (src/code_matcher.ml[187,5521+21]..src/code_matcher.ml[187,5521+24])
                Tpat_var "pos/5066"
              expression (src/code_matcher.ml[187,5521+25]..src/code_matcher.ml[189,5635+70]) ghost
                Texp_function
                Labelled "expected"
                [
                  <case>
                    pattern (src/code_matcher.ml[187,5521+26]..src/code_matcher.ml[187,5521+34])
                      Tpat_var "expected/5067"
                    expression (src/code_matcher.ml[187,5521+35]..src/code_matcher.ml[189,5635+70]) ghost
                      Texp_function
                      Labelled "mismatch_handler"
                      [
                        <case>
                          pattern (src/code_matcher.ml[187,5521+36]..src/code_matcher.ml[187,5521+52])
                            Tpat_var "mismatch_handler/5068"
                          expression (src/code_matcher.ml[187,5521+53]..src/code_matcher.ml[189,5635+70]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/code_matcher.ml[187,5521+53]..src/code_matcher.ml[187,5521+54])
                                  Tpat_var "l/5069"
                                expression (src/code_matcher.ml[188,5578+2]..src/code_matcher.ml[189,5635+70])
                                  Texp_apply
                                  expression (src/code_matcher.ml[189,5635+2]..src/code_matcher.ml[189,5635+4])
                                    Texp_ident "Stdlib!.|>"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/code_matcher.ml[188,5578+2]..src/code_matcher.ml[188,5578+56])
                                        Texp_apply
                                        expression (src/code_matcher.ml[188,5578+2]..src/code_matcher.ml[188,5578+21])
                                          Texp_ident "match_structure_res/5063"
                                        [
                                          <arg>
                                            Labelled "pos"
                                            expression (src/code_matcher.ml[188,5578+23]..src/code_matcher.ml[188,5578+26])
                                              Texp_ident "pos/5066"
                                          <arg>
                                            Labelled "expected"
                                            expression (src/code_matcher.ml[188,5578+28]..src/code_matcher.ml[188,5578+36])
                                              Texp_ident "expected/5067"
                                          <arg>
                                            Labelled "mismatch_handler"
                                            expression (src/code_matcher.ml[188,5578+38]..src/code_matcher.ml[188,5578+54])
                                              Texp_ident "mismatch_handler/5068"
                                          <arg>
                                            Nolabel
                                            expression (src/code_matcher.ml[188,5578+55]..src/code_matcher.ml[188,5578+56])
                                              Texp_ident "l/5069"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/code_matcher.ml[189,5635+5]..src/code_matcher.ml[189,5635+70])
                                        Texp_apply
                                        expression (src/code_matcher.ml[189,5635+5]..src/code_matcher.ml[189,5635+24])
                                          Texp_ident "Ppxlib__!.Import.Result.handle_error"
                                        [
                                          <arg>
                                            Nolabel
                                          <arg>
                                            Labelled "f"
                                            expression (src/code_matcher.ml[189,5635+28]..src/code_matcher.ml[189,5635+70])
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/code_matcher.ml[189,5635+33]..src/code_matcher.ml[189,5635+41])
                                                    Tpat_tuple
                                                    [
                                                      pattern (src/code_matcher.ml[189,5635+34]..src/code_matcher.ml[189,5635+37])
                                                        Tpat_var "err/5070"
                                                      pattern (src/code_matcher.ml[189,5635+39]..src/code_matcher.ml[189,5635+40])
                                                        Tpat_any
                                                    ]
                                                  expression (src/code_matcher.ml[189,5635+45]..src/code_matcher.ml[189,5635+69])
                                                    Texp_apply
                                                    expression (src/code_matcher.ml[189,5635+45]..src/code_matcher.ml[189,5635+65])
                                                      Texp_ident "Ppxlib__!.Location.Error.raise"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/code_matcher.ml[189,5635+66]..src/code_matcher.ml[189,5635+69])
                                                          Texp_ident "err/5070"
                                                    ]
                                              ]
                                        ]
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/code_matcher.ml[191,5707+0]..src/code_matcher.ml[191,5707+38])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/code_matcher.ml[191,5707+4]..src/code_matcher.ml[191,5707+23])
          Tpat_var "match_signature_res/5072"
        expression (src/code_matcher.ml[191,5707+26]..src/code_matcher.ml[191,5707+38])
          Texp_ident "Sig/5062.do_match"
    ]
  structure_item (src/code_matcher.ml[193,5747+0]..src/code_matcher.ml[195,5861+70])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/code_matcher.ml[193,5747+4]..src/code_matcher.ml[193,5747+19])
          Tpat_var "match_signature/5073"
        expression (src/code_matcher.ml[193,5747+20]..src/code_matcher.ml[195,5861+70]) ghost
          Texp_function
          Labelled "pos"
          [
            <case>
              pattern (src/code_matcher.ml[193,5747+21]..src/code_matcher.ml[193,5747+24])
                Tpat_var "pos/5075"
              expression (src/code_matcher.ml[193,5747+25]..src/code_matcher.ml[195,5861+70]) ghost
                Texp_function
                Labelled "expected"
                [
                  <case>
                    pattern (src/code_matcher.ml[193,5747+26]..src/code_matcher.ml[193,5747+34])
                      Tpat_var "expected/5076"
                    expression (src/code_matcher.ml[193,5747+35]..src/code_matcher.ml[195,5861+70]) ghost
                      Texp_function
                      Labelled "mismatch_handler"
                      [
                        <case>
                          pattern (src/code_matcher.ml[193,5747+36]..src/code_matcher.ml[193,5747+52])
                            Tpat_var "mismatch_handler/5077"
                          expression (src/code_matcher.ml[193,5747+53]..src/code_matcher.ml[195,5861+70]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/code_matcher.ml[193,5747+53]..src/code_matcher.ml[193,5747+54])
                                  Tpat_var "l/5078"
                                expression (src/code_matcher.ml[194,5804+2]..src/code_matcher.ml[195,5861+70])
                                  Texp_apply
                                  expression (src/code_matcher.ml[195,5861+2]..src/code_matcher.ml[195,5861+4])
                                    Texp_ident "Stdlib!.|>"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/code_matcher.ml[194,5804+2]..src/code_matcher.ml[194,5804+56])
                                        Texp_apply
                                        expression (src/code_matcher.ml[194,5804+2]..src/code_matcher.ml[194,5804+21])
                                          Texp_ident "match_signature_res/5072"
                                        [
                                          <arg>
                                            Labelled "pos"
                                            expression (src/code_matcher.ml[194,5804+23]..src/code_matcher.ml[194,5804+26])
                                              Texp_ident "pos/5075"
                                          <arg>
                                            Labelled "expected"
                                            expression (src/code_matcher.ml[194,5804+28]..src/code_matcher.ml[194,5804+36])
                                              Texp_ident "expected/5076"
                                          <arg>
                                            Labelled "mismatch_handler"
                                            expression (src/code_matcher.ml[194,5804+38]..src/code_matcher.ml[194,5804+54])
                                              Texp_ident "mismatch_handler/5077"
                                          <arg>
                                            Nolabel
                                            expression (src/code_matcher.ml[194,5804+55]..src/code_matcher.ml[194,5804+56])
                                              Texp_ident "l/5078"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/code_matcher.ml[195,5861+5]..src/code_matcher.ml[195,5861+70])
                                        Texp_apply
                                        expression (src/code_matcher.ml[195,5861+5]..src/code_matcher.ml[195,5861+24])
                                          Texp_ident "Ppxlib__!.Import.Result.handle_error"
                                        [
                                          <arg>
                                            Nolabel
                                          <arg>
                                            Labelled "f"
                                            expression (src/code_matcher.ml[195,5861+28]..src/code_matcher.ml[195,5861+70])
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/code_matcher.ml[195,5861+33]..src/code_matcher.ml[195,5861+41])
                                                    Tpat_tuple
                                                    [
                                                      pattern (src/code_matcher.ml[195,5861+34]..src/code_matcher.ml[195,5861+37])
                                                        Tpat_var "err/5079"
                                                      pattern (src/code_matcher.ml[195,5861+39]..src/code_matcher.ml[195,5861+40])
                                                        Tpat_any
                                                    ]
                                                  expression (src/code_matcher.ml[195,5861+45]..src/code_matcher.ml[195,5861+69])
                                                    Texp_apply
                                                    expression (src/code_matcher.ml[195,5861+45]..src/code_matcher.ml[195,5861+65])
                                                      Texp_ident "Ppxlib__!.Location.Error.raise"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/code_matcher.ml[195,5861+66]..src/code_matcher.ml[195,5861+69])
                                                          Texp_ident "err/5079"
                                                    ]
                                              ]
                                        ]
                                  ]
                            ]
                      ]
                ]
          ]
    ]
]

(let
  (shared/13658 =a
     [0:
      #"arg_label" #"array" #"attribute" #"attributes" #"binding_op" #"bool"
      #"case" #"cases" #"char" #"class_declaration" #"class_description"
      #"class_expr" #"class_expr_desc" #"class_field" #"class_field_desc"
      #"class_field_kind" #"class_infos" #"class_signature"
      #"class_structure" #"class_type" #"class_type_declaration"
      #"class_type_desc" #"class_type_field" #"class_type_field_desc"
      #"closed_flag" #"constant" #"constructor_arguments"
      #"constructor_declaration" #"core_type" #"core_type_desc"
      #"direction_flag" #"directive_argument" #"directive_argument_desc"
      #"expression" #"expression_desc" #"extension" #"extension_constructor"
      #"extension_constructor_kind" #"functor_parameter"
      #"include_declaration" #"include_description" #"include_infos"
      #"injectivity" #"int" #"label" #"label_declaration" #"letop" #"list"
      #"loc" #"location" #"location_stack" #"longident" #"longident_loc"
      #"module_binding" #"module_declaration" #"module_expr"
      #"module_expr_desc" #"module_substitution" #"module_type"
      #"module_type_declaration" #"module_type_desc" #"mutable_flag"
      #"object_field" #"object_field_desc" #"open_declaration"
      #"open_description" #"open_infos" #"option" #"override_flag"
      #"package_type" #"pattern" #"pattern_desc" #"payload" #"position"
      #"private_flag" #"rec_flag" #"row_field" #"row_field_desc" #"signature"
      #"signature_item" #"signature_item_desc" #"string" #"structure"
      #"structure_item" #"structure_item_desc" #"toplevel_directive"
      #"toplevel_phrase" #"type_declaration" #"type_exception"
      #"type_extension" #"type_kind" #"value_binding" #"value_description"
      #"variance" #"virtual_flag" #"with_constraint"]
   shared/13668 =a
     [0:
      #"bool" #"cases" #"case" #"char" #"value_binding"
      #"extension_constructor_kind" #"core_type" #"structure" #"list"
      #"label_declaration" #"module_binding" #"position"
      #"toplevel_directive" #"directive_argument" #"object_field_desc"
      #"class_type_field_desc" #"open_infos" #"pattern_desc"
      #"signature_item" #"extension_constructor" #"toplevel_phrase"
      #"extension" #"location" #"variance" #"package_type" #"virtual_flag"
      #"module_type_desc" #"rec_flag" #"payload" #"type_exception" #"label"
      #"letop" #"location_stack" #"value_description" #"module_declaration"
      #"class_type_declaration" #"longident_loc" #"closed_flag"
      #"directive_argument_desc" #"attribute" #"class_infos"
      #"signature_item_desc" #"int" #"loc" #"row_field_desc" #"override_flag"
      #"structure_item_desc" #"class_field_desc" #"binding_op"
      #"module_expr_desc" #"class_signature" #"type_extension"
      #"class_field_kind" #"module_type_declaration" #"arg_label"
      #"row_field" #"longident" #"string" #"pattern" #"include_description"
      #"signature" #"class_type_field" #"attributes" #"open_description"
      #"with_constraint" #"include_declaration" #"class_type_desc"
      #"private_flag" #"injectivity" #"open_declaration" #"object_field"
      #"array" #"constant" #"class_expr" #"functor_parameter"
      #"direction_flag" #"core_type_desc" #"type_declaration"
      #"constructor_declaration" #"option" #"type_kind" #"module_expr"
      #"module_substitution" #"class_description" #"expression" #"class_type"
      #"structure_item" #"include_infos" #"class_declaration" #"module_type"
      #"class_expr_desc" #"class_structure" #"mutable_flag"
      #"expression_desc" #"constructor_arguments" #"class_field"]
   shared/13661 =a
     [0:
      #"with_constraint" #"virtual_flag" #"variance" #"value_description"
      #"value_binding" #"type_kind" #"type_extension" #"type_exception"
      #"type_declaration" #"toplevel_phrase" #"toplevel_directive"
      #"structure_item_desc" #"structure_item" #"structure" #"string"
      #"signature_item_desc" #"signature_item" #"signature" #"row_field_desc"
      #"row_field" #"rec_flag" #"private_flag" #"position" #"payload"
      #"pattern_desc" #"pattern" #"package_type" #"override_flag" #"option"
      #"open_infos" #"open_description" #"open_declaration"
      #"object_field_desc" #"object_field" #"mutable_flag"
      #"module_type_desc" #"module_type_declaration" #"module_type"
      #"module_substitution" #"module_expr_desc" #"module_expr"
      #"module_declaration" #"module_binding" #"longident_loc" #"longident"
      #"location_stack" #"location" #"loc" #"list" #"letop"
      #"label_declaration" #"label" #"int" #"injectivity" #"include_infos"
      #"include_description" #"include_declaration" #"functor_parameter"
      #"extension_constructor_kind" #"extension_constructor" #"extension"
      #"expression_desc" #"expression" #"directive_argument_desc"
      #"directive_argument" #"direction_flag" #"core_type_desc" #"core_type"
      #"constructor_declaration" #"constructor_arguments" #"constant"
      #"closed_flag" #"class_type_field_desc" #"class_type_field"
      #"class_type_desc" #"class_type_declaration" #"class_type"
      #"class_structure" #"class_signature" #"class_infos"
      #"class_field_kind" #"class_field_desc" #"class_field"
      #"class_expr_desc" #"class_expr" #"class_description"
      #"class_declaration" #"char" #"cases" #"case" #"bool" #"binding_op"
      #"attributes" #"attribute" #"array" #"arg_label"])
  (seq
    (setfield_ptr(root-init) 9 (global Ppxlib__Code_matcher!)
      (caml_make_vect 4 0))
    (let
      (end_marker_sig/552 =
         (apply (field_imm 1 (field_imm 15 (global Ppxlib__Attribute!)))
           "deriving.end" 1
           (apply (field_imm 233 (global Ppxlib__Ast_pattern!))
             (field_imm 22 (global Ppxlib__Ast_pattern!)))
           0))
      (setfield_ptr(root-init) 4 (global Ppxlib__Code_matcher!)
        end_marker_sig/552))
    (let
      (end_marker_str/1040 =
         (apply (field_imm 1 (field_imm 15 (global Ppxlib__Attribute!)))
           "deriving.end" 0
           (apply (field_imm 233 (global Ppxlib__Ast_pattern!))
             (field_imm 22 (global Ppxlib__Ast_pattern!)))
           0))
      (setfield_ptr(root-init) 5 (global Ppxlib__Code_matcher!)
        end_marker_str/1040))
    (let
      (Make/3113 =
         (let (object_tables/13633 =o (makemutable 0 0 0 0))
           (function M/13678 is_a_functor
             (let
               (M/1320 =a M/13678
                extract_prefix/1321 =
                  (function pos/1323 l/1324
                    (letrec
                      (loop/1325
                         (function acc/1326 param/1777
                           (if param/1777
                             (let
                               (l/1328 =a (field_imm 1 param/1777)
                                x/1327 =a (field_imm 0 param/1777))
                               (catch
                                 (try
                                   (exit 1
                                     (apply
                                       (field_imm 3
                                         (field_imm 15
                                           (global Ppxlib__Attribute!)))
                                       (makeblock 0 (field_imm 1 M/1320) 0)
                                       x/1327))
                                  with exn/13627
                                   (catch
                                     (let
                                       (tag/13629 =a (field_imm 0 exn/13627))
                                       (if
                                         (== tag/13629
                                           (field_imm 9 (global Stdlib!)))
                                         (let
                                           (*match*/13628 =a
                                              (field_imm 1 exn/13627))
                                           (apply loop/1325
                                             (makeblock 0 x/1327 acc/1326)
                                             l/1328))
                                         (exit 2)))
                                    with (2) (reraise exn/13627)))
                                with (1 val/13624)
                                 (switch* val/13624
                                  case tag 0:
                                   (let
                                     (*match*/13625 =a
                                        (field_imm 0 val/13624))
                                     (if *match*/13625
                                       (let
                                         (*match*/13626 =a
                                            (field_imm 0 *match*/13625))
                                         (makeblock 0
                                           (makeblock 0
                                             (apply
                                               (field_imm 8
                                                 (field_imm 91
                                                   (global Ppxlib__Import!)))
                                               acc/1326)
                                             (field_imm 0
                                               (apply (field_imm 0 M/1320)
                                                 x/1327)))))
                                       (apply loop/1325
                                         (makeblock 0 x/1327 acc/1326)
                                         l/1328)))
                                  case tag 1:
                                   (let (e/1702 =a (field_imm 0 val/13624))
                                     (makeblock 1 e/1702)))))
                             (let
                               (loc/1329 = (makeblock 0 pos/1323 pos/1323 0))
                               (makeblock 1
                                 (makeblock 0
                                   (apply
                                     (field_imm 1
                                       (field_imm 12
                                         (global Ppxlib__Location!)))
                                     loc/1329
                                     [0:
                                      [11:
                                       "ppxlib: ["
                                       [17:
                                        5
                                        [17:
                                         5
                                         [17:
                                          5
                                          [2:
                                           0 [11: "] attribute missing" 0]]]]]]
                                      "ppxlib: [@@@@@@%s] attribute missing"]
                                     (apply
                                       (field_imm 2
                                         (field_imm 15
                                           (global Ppxlib__Attribute!)))
                                       (field_imm 1 M/1320)))
                                   0))))))
                      (apply loop/1325 0 l/1324)))
                remove_loc/1778 =
                  (let (cached/13667 =a object_tables/13633)
                    (seq
                      (if (field_mut 0 cached/13667) 0
                        (let
                          (class/13637 =
                             (apply (field_imm 15 (global CamlinternalOO!))
                               shared/13668)
                           env_init/13664 =
                             (let
                               (env/13634 =o
                                  (apply
                                    (field_imm 2 (global CamlinternalOO!))
                                    class/13637 #"")
                                ids/13660 =
                                  (apply
                                    (field_imm 7 (global CamlinternalOO!))
                                    class/13637 shared/13661)
                                with_constraint/2341 =o
                                  (field_mut 0 ids/13660)
                                virtual_flag/2340 =o (field_mut 1 ids/13660)
                                variance/2339 =o (field_mut 2 ids/13660)
                                value_description/2338 =o
                                  (field_mut 3 ids/13660)
                                value_binding/2337 =o (field_mut 4 ids/13660)
                                type_kind/2336 =o (field_mut 5 ids/13660)
                                type_extension/2335 =o
                                  (field_mut 6 ids/13660)
                                type_exception/2334 =o
                                  (field_mut 7 ids/13660)
                                type_declaration/2333 =o
                                  (field_mut 8 ids/13660)
                                toplevel_phrase/2332 =o
                                  (field_mut 9 ids/13660)
                                toplevel_directive/2331 =o
                                  (field_mut 10 ids/13660)
                                structure_item_desc/2330 =o
                                  (field_mut 11 ids/13660)
                                structure_item/2329 =o
                                  (field_mut 12 ids/13660)
                                structure/2328 =o (field_mut 13 ids/13660)
                                string/2327 =o (field_mut 14 ids/13660)
                                signature_item_desc/2326 =o
                                  (field_mut 15 ids/13660)
                                signature_item/2325 =o
                                  (field_mut 16 ids/13660)
                                signature/2324 =o (field_mut 17 ids/13660)
                                row_field_desc/2323 =o
                                  (field_mut 18 ids/13660)
                                row_field/2322 =o (field_mut 19 ids/13660)
                                rec_flag/2321 =o (field_mut 20 ids/13660)
                                private_flag/2320 =o (field_mut 21 ids/13660)
                                position/2319 =o (field_mut 22 ids/13660)
                                payload/2318 =o (field_mut 23 ids/13660)
                                pattern_desc/2317 =o (field_mut 24 ids/13660)
                                pattern/2316 =o (field_mut 25 ids/13660)
                                package_type/2315 =o (field_mut 26 ids/13660)
                                override_flag/2314 =o
                                  (field_mut 27 ids/13660)
                                option/2313 =o (field_mut 28 ids/13660)
                                open_infos/2312 =o (field_mut 29 ids/13660)
                                open_description/2311 =o
                                  (field_mut 30 ids/13660)
                                open_declaration/2310 =o
                                  (field_mut 31 ids/13660)
                                object_field_desc/2309 =o
                                  (field_mut 32 ids/13660)
                                object_field/2308 =o (field_mut 33 ids/13660)
                                mutable_flag/2307 =o (field_mut 34 ids/13660)
                                module_type_desc/2306 =o
                                  (field_mut 35 ids/13660)
                                module_type_declaration/2305 =o
                                  (field_mut 36 ids/13660)
                                module_type/2304 =o (field_mut 37 ids/13660)
                                module_substitution/2303 =o
                                  (field_mut 38 ids/13660)
                                module_expr_desc/2302 =o
                                  (field_mut 39 ids/13660)
                                module_expr/2301 =o (field_mut 40 ids/13660)
                                module_declaration/2300 =o
                                  (field_mut 41 ids/13660)
                                module_binding/2299 =o
                                  (field_mut 42 ids/13660)
                                longident_loc/2298 =o
                                  (field_mut 43 ids/13660)
                                longident/2297 =o (field_mut 44 ids/13660)
                                location_stack/2247 =o
                                  (field_mut 45 ids/13660)
                                location/2246 =o (field_mut 46 ids/13660)
                                loc/2296 =o (field_mut 47 ids/13660)
                                list/2295 =o (field_mut 48 ids/13660)
                                letop/2294 =o (field_mut 49 ids/13660)
                                label_declaration/2293 =o
                                  (field_mut 50 ids/13660)
                                label/2292 =o (field_mut 51 ids/13660)
                                int/2291 =o (field_mut 52 ids/13660)
                                injectivity/2290 =o (field_mut 53 ids/13660)
                                include_infos/2289 =o
                                  (field_mut 54 ids/13660)
                                include_description/2288 =o
                                  (field_mut 55 ids/13660)
                                include_declaration/2287 =o
                                  (field_mut 56 ids/13660)
                                functor_parameter/2286 =o
                                  (field_mut 57 ids/13660)
                                extension_constructor_kind/2285 =o
                                  (field_mut 58 ids/13660)
                                extension_constructor/2284 =o
                                  (field_mut 59 ids/13660)
                                extension/2283 =o (field_mut 60 ids/13660)
                                expression_desc/2282 =o
                                  (field_mut 61 ids/13660)
                                expression/2281 =o (field_mut 62 ids/13660)
                                directive_argument_desc/2280 =o
                                  (field_mut 63 ids/13660)
                                directive_argument/2279 =o
                                  (field_mut 64 ids/13660)
                                direction_flag/2278 =o
                                  (field_mut 65 ids/13660)
                                core_type_desc/2277 =o
                                  (field_mut 66 ids/13660)
                                core_type/2276 =o (field_mut 67 ids/13660)
                                constructor_declaration/2275 =o
                                  (field_mut 68 ids/13660)
                                constructor_arguments/2274 =o
                                  (field_mut 69 ids/13660)
                                constant/2273 =o (field_mut 70 ids/13660)
                                closed_flag/2272 =o (field_mut 71 ids/13660)
                                class_type_field_desc/2271 =o
                                  (field_mut 72 ids/13660)
                                class_type_field/2270 =o
                                  (field_mut 73 ids/13660)
                                class_type_desc/2269 =o
                                  (field_mut 74 ids/13660)
                                class_type_declaration/2268 =o
                                  (field_mut 75 ids/13660)
                                class_type/2267 =o (field_mut 76 ids/13660)
                                class_structure/2266 =o
                                  (field_mut 77 ids/13660)
                                class_signature/2265 =o
                                  (field_mut 78 ids/13660)
                                class_infos/2264 =o (field_mut 79 ids/13660)
                                class_field_kind/2263 =o
                                  (field_mut 80 ids/13660)
                                class_field_desc/2262 =o
                                  (field_mut 81 ids/13660)
                                class_field/2261 =o (field_mut 82 ids/13660)
                                class_expr_desc/2260 =o
                                  (field_mut 83 ids/13660)
                                class_expr/2259 =o (field_mut 84 ids/13660)
                                class_description/2258 =o
                                  (field_mut 85 ids/13660)
                                class_declaration/2257 =o
                                  (field_mut 86 ids/13660)
                                char/2256 =o (field_mut 87 ids/13660)
                                cases/2255 =o (field_mut 88 ids/13660)
                                case/2254 =o (field_mut 89 ids/13660)
                                bool/2253 =o (field_mut 90 ids/13660)
                                binding_op/2252 =o (field_mut 91 ids/13660)
                                attributes/2251 =o (field_mut 92 ids/13660)
                                attribute/2250 =o (field_mut 93 ids/13660)
                                array/2249 =o (field_mut 94 ids/13660)
                                arg_label/2248 =o (field_mut 95 ids/13660)
                                inh/13659 =
                                  (apply
                                    (field_imm 17 (global CamlinternalOO!))
                                    class/13637 0 0 shared/13658
                                    (field_imm 0
                                      (global Ppxlib__Ast_traverse!))
                                    0)
                                obj_init/13641 =o (field_mut 0 inh/13659)
                                arg_label/2150 =o (field_mut 1 inh/13659)
                                array/2151 =o (field_mut 2 inh/13659)
                                attribute/2152 =o (field_mut 3 inh/13659)
                                attributes/2153 =o (field_mut 4 inh/13659)
                                binding_op/2154 =o (field_mut 5 inh/13659)
                                bool/2155 =o (field_mut 6 inh/13659)
                                case/2156 =o (field_mut 7 inh/13659)
                                cases/2157 =o (field_mut 8 inh/13659)
                                char/2158 =o (field_mut 9 inh/13659)
                                class_declaration/2159 =o
                                  (field_mut 10 inh/13659)
                                class_description/2160 =o
                                  (field_mut 11 inh/13659)
                                class_expr/2161 =o (field_mut 12 inh/13659)
                                class_expr_desc/2162 =o
                                  (field_mut 13 inh/13659)
                                class_field/2163 =o (field_mut 14 inh/13659)
                                class_field_desc/2164 =o
                                  (field_mut 15 inh/13659)
                                class_field_kind/2165 =o
                                  (field_mut 16 inh/13659)
                                class_infos/2166 =o (field_mut 17 inh/13659)
                                class_signature/2167 =o
                                  (field_mut 18 inh/13659)
                                class_structure/2168 =o
                                  (field_mut 19 inh/13659)
                                class_type/2169 =o (field_mut 20 inh/13659)
                                class_type_declaration/2170 =o
                                  (field_mut 21 inh/13659)
                                class_type_desc/2171 =o
                                  (field_mut 22 inh/13659)
                                class_type_field/2172 =o
                                  (field_mut 23 inh/13659)
                                class_type_field_desc/2173 =o
                                  (field_mut 24 inh/13659)
                                closed_flag/2174 =o (field_mut 25 inh/13659)
                                constant/2175 =o (field_mut 26 inh/13659)
                                constructor_arguments/2176 =o
                                  (field_mut 27 inh/13659)
                                constructor_declaration/2177 =o
                                  (field_mut 28 inh/13659)
                                core_type/2178 =o (field_mut 29 inh/13659)
                                core_type_desc/2179 =o
                                  (field_mut 30 inh/13659)
                                direction_flag/2180 =o
                                  (field_mut 31 inh/13659)
                                directive_argument/2181 =o
                                  (field_mut 32 inh/13659)
                                directive_argument_desc/2182 =o
                                  (field_mut 33 inh/13659)
                                expression/2183 =o (field_mut 34 inh/13659)
                                expression_desc/2184 =o
                                  (field_mut 35 inh/13659)
                                extension/2185 =o (field_mut 36 inh/13659)
                                extension_constructor/2186 =o
                                  (field_mut 37 inh/13659)
                                extension_constructor_kind/2187 =o
                                  (field_mut 38 inh/13659)
                                functor_parameter/2188 =o
                                  (field_mut 39 inh/13659)
                                include_declaration/2189 =o
                                  (field_mut 40 inh/13659)
                                include_description/2190 =o
                                  (field_mut 41 inh/13659)
                                include_infos/2191 =o
                                  (field_mut 42 inh/13659)
                                injectivity/2192 =o (field_mut 43 inh/13659)
                                int/2193 =o (field_mut 44 inh/13659)
                                label/2194 =o (field_mut 45 inh/13659)
                                label_declaration/2195 =o
                                  (field_mut 46 inh/13659)
                                letop/2196 =o (field_mut 47 inh/13659)
                                list/2197 =o (field_mut 48 inh/13659)
                                loc/2198 =o (field_mut 49 inh/13659)
                                location/2199 =o (field_mut 50 inh/13659)
                                location_stack/2200 =o
                                  (field_mut 51 inh/13659)
                                longident/2201 =o (field_mut 52 inh/13659)
                                longident_loc/2202 =o
                                  (field_mut 53 inh/13659)
                                module_binding/2203 =o
                                  (field_mut 54 inh/13659)
                                module_declaration/2204 =o
                                  (field_mut 55 inh/13659)
                                module_expr/2205 =o (field_mut 56 inh/13659)
                                module_expr_desc/2206 =o
                                  (field_mut 57 inh/13659)
                                module_substitution/2207 =o
                                  (field_mut 58 inh/13659)
                                module_type/2208 =o (field_mut 59 inh/13659)
                                module_type_declaration/2209 =o
                                  (field_mut 60 inh/13659)
                                module_type_desc/2210 =o
                                  (field_mut 61 inh/13659)
                                mutable_flag/2211 =o (field_mut 62 inh/13659)
                                object_field/2212 =o (field_mut 63 inh/13659)
                                object_field_desc/2213 =o
                                  (field_mut 64 inh/13659)
                                open_declaration/2214 =o
                                  (field_mut 65 inh/13659)
                                open_description/2215 =o
                                  (field_mut 66 inh/13659)
                                open_infos/2216 =o (field_mut 67 inh/13659)
                                option/2217 =o (field_mut 68 inh/13659)
                                override_flag/2218 =o
                                  (field_mut 69 inh/13659)
                                package_type/2219 =o (field_mut 70 inh/13659)
                                pattern/2220 =o (field_mut 71 inh/13659)
                                pattern_desc/2221 =o (field_mut 72 inh/13659)
                                payload/2222 =o (field_mut 73 inh/13659)
                                position/2223 =o (field_mut 74 inh/13659)
                                private_flag/2224 =o (field_mut 75 inh/13659)
                                rec_flag/2225 =o (field_mut 76 inh/13659)
                                row_field/2226 =o (field_mut 77 inh/13659)
                                row_field_desc/2227 =o
                                  (field_mut 78 inh/13659)
                                signature/2228 =o (field_mut 79 inh/13659)
                                signature_item/2229 =o
                                  (field_mut 80 inh/13659)
                                signature_item_desc/2230 =o
                                  (field_mut 81 inh/13659)
                                string/2231 =o (field_mut 82 inh/13659)
                                structure/2232 =o (field_mut 83 inh/13659)
                                structure_item/2233 =o
                                  (field_mut 84 inh/13659)
                                structure_item_desc/2234 =o
                                  (field_mut 85 inh/13659)
                                toplevel_directive/2235 =o
                                  (field_mut 86 inh/13659)
                                toplevel_phrase/2236 =o
                                  (field_mut 87 inh/13659)
                                type_declaration/2237 =o
                                  (field_mut 88 inh/13659)
                                type_exception/2238 =o
                                  (field_mut 89 inh/13659)
                                type_extension/2239 =o
                                  (field_mut 90 inh/13659)
                                type_kind/2240 =o (field_mut 91 inh/13659)
                                value_binding/2241 =o
                                  (field_mut 92 inh/13659)
                                value_description/2242 =o
                                  (field_mut 93 inh/13659)
                                variance/2243 =o (field_mut 94 inh/13659)
                                virtual_flag/2244 =o (field_mut 95 inh/13659)
                                with_constraint/2245 =o
                                  (field_mut 96 inh/13659))
                               (seq
                                 (apply
                                   (field_imm 10 (global CamlinternalOO!))
                                   class/13637
                                   (makeblock 0 location/2246
                                     (let
                                       (method_location/13657 =
                                          (function self-1/2343 param/2344
                                            (let (self-*/2342 =a self-1/2343)
                                              (field_imm 2
                                                (global Ppxlib__Location!)))))
                                       method_location/13657)
                                     location_stack/2247
                                     (let
                                       (method_location_stack/13655 =
                                          (function self-1/2346 param/2347
                                            (let (self-*/2345 =a self-1/2346)
                                              0)))
                                       method_location_stack/13655)))
                                 (function env/13639
                                   (let
                                     (env/13635 =a (field_mut 0 env/13639)
                                      env'/13636 =a env/13635
                                      self/13640 =
                                        (apply
                                          (field_imm 23
                                            (global CamlinternalOO!))
                                          0 class/13637))
                                     (seq
                                       (seq
                                         (apply obj_init/13641
                                           (field_mut 1 env/13639)
                                           self/13640)
                                         (ifused env/13634
                                           (setfield_ptr_computed self/13640
                                             env/13634 env'/13636)))
                                       (apply
                                         (field_imm 25
                                           (global CamlinternalOO!))
                                         0 self/13640 class/13637)))))))
                          (seq
                            (apply (field_imm 16 (global CamlinternalOO!))
                              class/13637)
                            (setfield_ptr 0 cached/13667 env_init/13664))))
                      (let
                        (envs/13666 =o
                           (makeblock 0 0
                             (field_mut 3
                               (field_imm 0 (global Ppxlib__Ast_traverse!)))))
                        (apply (field_mut 0 cached/13667) envs/13666))))
                M_map/2891 =
                  (module-defn(M_map/2891) Ppxlib__Code_matcher.Make src/code_matcher.ml(66):1676-1742
                    (apply (field_imm 2 M/1320) (makeblock 0)))
                remove_loc/2892 =
                  (function x/2893
                    (apply (field_imm 0 M_map/2891) remove_loc/1778 x/2893)))
               (letrec
                 (last/2894
                    (function prev/2895 param/2898
                      (if param/2898
                        (let
                          (l/2897 =a (field_imm 1 param/2898)
                           x/2896 =a (field_imm 0 param/2898))
                          (apply last/2894 x/2896 l/2897))
                        prev/2895)))
                 (let
                   (diff_asts/2899 =
                      (function generated/2901 round_trip/2902
                        (let
                          (with_temp_file/2903 =
                             (function f/2905
                               (apply
                                 (field_imm 0
                                   (field_imm 84 (global Ppxlib__Import!)))
                                 (apply
                                   (field_imm 15 (global Stdlib__filename!))
                                   0 "ppxlib" "")
                                 f/2905
                                 (function prim/13669 stub
                                   (caml_sys_remove prim/13669)))))
                          (apply with_temp_file/2903
                            (function fn1/3011
                              (apply with_temp_file/2903
                                (function fn2/3012
                                  (apply with_temp_file/2903
                                    (function out/3013
                                      (let
                                        (dump/3014 =
                                           (function fn/3016 ast/3017
                                             (apply
                                               (field_imm 1
                                                 (field_imm 95
                                                   (global Ppxlib__Import!)))
                                               0 0 0 0 fn/3016
                                               (function oc/3021
                                                 (let
                                                   (ppf/3022 =
                                                      (apply
                                                        (field_imm 105
                                                          (global Stdlib__format!))
                                                        oc/3021))
                                                   (seq
                                                     (apply
                                                       (field_imm 8
                                                         (global Sexplib0__Sexp!))
                                                       ppf/3022
                                                       (apply
                                                         (field_imm 5 M/1320)
                                                         ast/3017))
                                                     (apply
                                                       (field_imm 35
                                                         (global Stdlib__format!))
                                                       ppf/3022 0)))))))
                                        (seq
                                          (apply dump/3014 fn1/3011
                                            generated/2901)
                                          (apply dump/3014 fn2/3012
                                            round_trip/2902)
                                          (let
                                            (cmd/3047 =
                                               (apply
                                                 (field_imm 3
                                                   (global Stdlib__printf!))
                                                 [0:
                                                  [11:
                                                   "patdiff -ascii -alt-old generated -alt-new 'generated->printed->parsed' "
                                                   [2:
                                                    0
                                                    [12:
                                                     ' '
                                                     [2:
                                                      0 [11: " &> " [2: 0 0]]]]]]
                                                  "patdiff -ascii -alt-old generated -alt-new 'generated->printed->parsed' %s %s &> %s"]
                                                 (apply
                                                   (field_imm 20
                                                     (global Stdlib__filename!))
                                                   fn1/3011)
                                                 (apply
                                                   (field_imm 20
                                                     (global Stdlib__filename!))
                                                   fn2/3012)
                                                 (apply
                                                   (field_imm 20
                                                     (global Stdlib__filename!))
                                                   out/3013))
                                             ok/3061 =
                                               (||
                                                 (apply
                                                   (field_imm 73
                                                     (global Ppxlib__Import!))
                                                   (caml_sys_system_command
                                                     cmd/3047)
                                                   1)
                                                 (let
                                                   (cmd/3062 =
                                                      (apply
                                                        (field_imm 3
                                                          (global Stdlib__printf!))
                                                        [0:
                                                         [11:
                                                          "diff --label generated --label 'generated->printed->parsed' "
                                                          [2:
                                                           0
                                                           [12:
                                                            ' '
                                                            [2:
                                                             0
                                                             [11:
                                                              " &> " [2: 0 0]]]]]]
                                                         "diff --label generated --label 'generated->printed->parsed' %s %s &> %s"]
                                                        (apply
                                                          (field_imm 20
                                                            (global Stdlib__filename!))
                                                          fn1/3011)
                                                        (apply
                                                          (field_imm 20
                                                            (global Stdlib__filename!))
                                                          fn2/3012)
                                                        (apply
                                                          (field_imm 20
                                                            (global Stdlib__filename!))
                                                          out/3013)))
                                                   (apply
                                                     (field_imm 73
                                                       (global Ppxlib__Import!))
                                                     (caml_sys_system_command
                                                       cmd/3062)
                                                     1))))
                                            (if ok/3061
                                              (apply
                                                (field_imm 3
                                                  (field_imm 88
                                                    (global Ppxlib__Import!)))
                                                out/3013)
                                              "<no differences produced by diff>"))))))))))))
                    parse_string/3067 =
                      (function s/3069
                        (let
                          (*match*/13670 =
                             (apply (field_imm 3 M/1320)
                               (apply (field_imm 2 (global Stdlib__lexing!))
                                 0 s/3069)))
                          (catch
                            (if *match*/13670
                              (let
                                (*match*/13671 =a (field_imm 1 *match*/13670))
                                (if *match*/13671 (exit 3)
                                  (let
                                    (x/3070 =a (field_imm 0 *match*/13670))
                                    x/3070)))
                              (exit 3))
                           with (3)
                            (raise
                              (makeblock 0 (global Assert_failure/30!)
                                [0: "src/code_matcher.ml" 113 64]))))))
                   (letrec
                     (match_loop/3071
                        (function end_pos/3072 mismatch_handler/3073
                          expected/3074 source/3075
                          (let
                            (*match*/13674 = expected/3074
                             *match*/13675 = source/3075)
                            (catch
                              (if *match*/13674
                                (if *match*/13675
                                  (let
                                    (source/3081 =a
                                       (field_imm 1 *match*/13675)
                                     y/3080 =a (field_imm 0 *match*/13675)
                                     expected/3079 =a
                                       (field_imm 1 *match*/13674)
                                     x/3078 =a (field_imm 0 *match*/13674)
                                     loc/3084 =
                                       (apply (field_imm 0 M/1320) y/3080)
                                     x/3085 = (apply remove_loc/2892 x/3078)
                                     y/3086 = (apply remove_loc/2892 y/3080))
                                    (seq
                                      (if
                                        (apply
                                          (field_imm 5
                                            (field_imm 70
                                              (global Ppxlib__Import!)))
                                          x/3085 y/3086)
                                        (let
                                          (round_trip/3097 =
                                             (apply remove_loc/2892
                                               (apply parse_string/3067
                                                 (apply
                                                   (field_imm 135
                                                     (global Stdlib__format!))
                                                   [0:
                                                    [15: [17: 4 0]] "%a@."]
                                                   (field_imm 4 M/1320)
                                                   x/3085))))
                                          (seq
                                            (if
                                              (apply
                                                (field_imm 5
                                                  (field_imm 70
                                                    (global Ppxlib__Import!)))
                                                x/3085 round_trip/3097)
                                              (apply
                                                (field_imm 4
                                                  (global Ppxlib__Location!))
                                                (makeblock 0 loc/3084)
                                                [0:
                                                 [11:
                                                  "ppxlib: the corrected code doesn't round-trip.\nThis is probably a bug in the OCaml printer:\n"
                                                  [2: 0 0]]
                                                 "ppxlib: the corrected code doesn't round-trip.\nThis is probably a bug in the OCaml printer:\n%s"]
                                                (apply diff_asts/2899 x/3085
                                                  round_trip/3097))
                                              0)
                                            (apply mismatch_handler/3073
                                              loc/3084
                                              (makeblock 0 x/3085 0))))
                                        0)
                                      (apply match_loop/3071 end_pos/3072
                                        mismatch_handler/3073 expected/3079
                                        source/3081)))
                                  (exit 4))
                                (if *match*/13675
                                  (let
                                    (l/3077 =a (field_imm 1 *match*/13675)
                                     x/3076 =a (field_imm 0 *match*/13675)
                                     loc/3082 =
                                       (let
                                         (init/13672 =
                                            (apply (field_imm 0 M/1320)
                                              x/3076))
                                         (makeblock 0
                                           (field_imm 0 init/13672)
                                           (field_imm 1
                                             (apply (field_imm 0 M/1320)
                                               (apply last/2894 x/3076
                                                 l/3077)))
                                           (field_int 2 init/13672))))
                                    (apply mismatch_handler/3073 loc/3082 0))
                                  0))
                             with (4)
                              (let
                                (loc/3083 =
                                   (makeblock 0 end_pos/3072 end_pos/3072 0))
                                (apply mismatch_handler/3073 loc/3083
                                  expected/3074))))))
                     (let
                       (do_match/3098 =
                          (function pos/3100 expected/3101
                            mismatch_handler/3102 source/3103
                            (apply
                              (field_imm 4
                                (field_imm 93 (global Ppxlib__Import!)))
                              (apply extract_prefix/1321 pos/3100
                                source/3103)
                              (function (param/13676, param/13677)
                                (let
                                  (end_pos/3111 =a param/13677
                                   source/3110 =a param/13676)
                                  (apply match_loop/3071 end_pos/3111
                                    mismatch_handler/3102 expected/3101
                                    source/3110))))))
                       (makeblock 0 extract_prefix/1321 M_map/2891
                         remove_loc/2892 last/2894 diff_asts/2899
                         parse_string/3067 match_loop/3071 do_match/3098)))))))))
      (seq
        (setfield_ptr(root-init) 6 (global Ppxlib__Code_matcher!) Make/3113)
        (let
          (Str/5038 =
             (apply (field_imm 6 (global Ppxlib__Code_matcher!))
               (let
                 (get_loc/3115 = (function x/3117 (field_imm 1 x/3117))
                  end_marker/3118 =
                    (field_imm 5 (global Ppxlib__Code_matcher!))
                  Transform/3123 =
                    (module-defn(Transform/3123) Ppxlib__Code_matcher.Str src/code_matcher.ml(158):4913-4988
                      (function T/13679 is_a_functor
                        (let
                          (T/3119 =a T/13679
                           apply/3120 =
                             (function o/3122
                               (sendcache o/3122 832861151
                                 (field_mut 9 (global Ppxlib__Code_matcher!))
                                 0)))
                          (makeblock 0 apply/3120))))
                  parse/3124 =
                    (field_imm 1 (field_imm 2 (global Ppxlib_ast__Import!)))
                  pp/3153 = (field_imm 17 (global Astlib__Pprintast!))
                  to_sexp/3175 =
                    (sendcache (field_imm 18 (global Ppxlib__Ast_traverse!))
                      832861151 (field_mut 9 (global Ppxlib__Code_matcher!))
                      1))
                 (makeblock 0 get_loc/3115 end_marker/3118 Transform/3123
                   parse/3124 pp/3153 to_sexp/3175))))
          (seq
            (setfield_ptr(root-init) 7 (global Ppxlib__Code_matcher!)
              Str/5038)
            (let
              (Sig/5062 =
                 (apply (field_imm 6 (global Ppxlib__Code_matcher!))
                   (let
                     (get_loc/5040 = (function x/5042 (field_imm 1 x/5042))
                      end_marker/5043 =
                        (field_imm 4 (global Ppxlib__Code_matcher!))
                      Transform/5048 =
                        (module-defn(Transform/5048) Ppxlib__Code_matcher.Sig src/code_matcher.ml(174):5273-5348
                          (function T/13680 is_a_functor
                            (let
                              (T/5044 =a T/13680
                               apply/5045 =
                                 (function o/5047
                                   (sendcache o/5047 -662996230
                                     (field_mut 9
                                       (global Ppxlib__Code_matcher!))
                                     2)))
                              (makeblock 0 apply/5045))))
                      parse/5049 =
                        (field_imm 2
                          (field_imm 2 (global Ppxlib_ast__Import!)))
                      pp/5050 = (field_imm 16 (global Astlib__Pprintast!))
                      to_sexp/5051 =
                        (sendcache
                          (field_imm 18 (global Ppxlib__Ast_traverse!))
                          -662996230
                          (field_mut 9 (global Ppxlib__Code_matcher!)) 3))
                     (makeblock 0 get_loc/5040 end_marker/5043 Transform/5048
                       parse/5049 pp/5050 to_sexp/5051))))
              (seq
                (setfield_ptr(root-init) 8 (global Ppxlib__Code_matcher!)
                  Sig/5062)
                (let
                  (match_structure_res/5063 =
                     (field_imm 7
                       (field_imm 7 (global Ppxlib__Code_matcher!))))
                  (setfield_ptr(root-init) 0 (global Ppxlib__Code_matcher!)
                    match_structure_res/5063))
                (let
                  (match_structure/5064 =
                     (function pos/5066 expected/5067 mismatch_handler/5068
                       l/5069
                       (revapply
                         (apply (field_imm 0 (global Ppxlib__Code_matcher!))
                           pos/5066 expected/5067 mismatch_handler/5068
                           l/5069)
                         (let
                           (func/13683 =
                              (field_imm 5
                                (field_imm 93 (global Ppxlib__Import!)))
                            arg/13684 =
                              (function (param/13681, param/13682)
                                (let (err/5070 =a param/13681)
                                  (apply
                                    (field_imm 7
                                      (field_imm 12
                                        (global Ppxlib__Location!)))
                                    err/5070))))
                           (function param/13685 stub
                             (apply func/13683 param/13685 arg/13684))))))
                  (setfield_ptr(root-init) 1 (global Ppxlib__Code_matcher!)
                    match_structure/5064))
                (let
                  (match_signature_res/5072 =
                     (field_imm 7
                       (field_imm 8 (global Ppxlib__Code_matcher!))))
                  (setfield_ptr(root-init) 2 (global Ppxlib__Code_matcher!)
                    match_signature_res/5072))
                (let
                  (match_signature/5073 =
                     (function pos/5075 expected/5076 mismatch_handler/5077
                       l/5078
                       (revapply
                         (apply (field_imm 2 (global Ppxlib__Code_matcher!))
                           pos/5075 expected/5076 mismatch_handler/5077
                           l/5078)
                         (let
                           (func/13688 =
                              (field_imm 5
                                (field_imm 93 (global Ppxlib__Import!)))
                            arg/13689 =
                              (function (param/13686, param/13687)
                                (let (err/5079 =a param/13686)
                                  (apply
                                    (field_imm 7
                                      (field_imm 12
                                        (global Ppxlib__Location!)))
                                    err/5079))))
                           (function param/13690 stub
                             (apply func/13688 param/13690 arg/13689))))))
                  (setfield_ptr(root-init) 3 (global Ppxlib__Code_matcher!)
                    match_signature/5073))
                0))))))))
(let
  (shared/13658 =a
     [0:
      #"arg_label" #"array" #"attribute" #"attributes" #"binding_op" #"bool"
      #"case" #"cases" #"char" #"class_declaration" #"class_description"
      #"class_expr" #"class_expr_desc" #"class_field" #"class_field_desc"
      #"class_field_kind" #"class_infos" #"class_signature"
      #"class_structure" #"class_type" #"class_type_declaration"
      #"class_type_desc" #"class_type_field" #"class_type_field_desc"
      #"closed_flag" #"constant" #"constructor_arguments"
      #"constructor_declaration" #"core_type" #"core_type_desc"
      #"direction_flag" #"directive_argument" #"directive_argument_desc"
      #"expression" #"expression_desc" #"extension" #"extension_constructor"
      #"extension_constructor_kind" #"functor_parameter"
      #"include_declaration" #"include_description" #"include_infos"
      #"injectivity" #"int" #"label" #"label_declaration" #"letop" #"list"
      #"loc" #"location" #"location_stack" #"longident" #"longident_loc"
      #"module_binding" #"module_declaration" #"module_expr"
      #"module_expr_desc" #"module_substitution" #"module_type"
      #"module_type_declaration" #"module_type_desc" #"mutable_flag"
      #"object_field" #"object_field_desc" #"open_declaration"
      #"open_description" #"open_infos" #"option" #"override_flag"
      #"package_type" #"pattern" #"pattern_desc" #"payload" #"position"
      #"private_flag" #"rec_flag" #"row_field" #"row_field_desc" #"signature"
      #"signature_item" #"signature_item_desc" #"string" #"structure"
      #"structure_item" #"structure_item_desc" #"toplevel_directive"
      #"toplevel_phrase" #"type_declaration" #"type_exception"
      #"type_extension" #"type_kind" #"value_binding" #"value_description"
      #"variance" #"virtual_flag" #"with_constraint"]
   shared/13668 =a
     [0:
      #"bool" #"cases" #"case" #"char" #"value_binding"
      #"extension_constructor_kind" #"core_type" #"structure" #"list"
      #"label_declaration" #"module_binding" #"position"
      #"toplevel_directive" #"directive_argument" #"object_field_desc"
      #"class_type_field_desc" #"open_infos" #"pattern_desc"
      #"signature_item" #"extension_constructor" #"toplevel_phrase"
      #"extension" #"location" #"variance" #"package_type" #"virtual_flag"
      #"module_type_desc" #"rec_flag" #"payload" #"type_exception" #"label"
      #"letop" #"location_stack" #"value_description" #"module_declaration"
      #"class_type_declaration" #"longident_loc" #"closed_flag"
      #"directive_argument_desc" #"attribute" #"class_infos"
      #"signature_item_desc" #"int" #"loc" #"row_field_desc" #"override_flag"
      #"structure_item_desc" #"class_field_desc" #"binding_op"
      #"module_expr_desc" #"class_signature" #"type_extension"
      #"class_field_kind" #"module_type_declaration" #"arg_label"
      #"row_field" #"longident" #"string" #"pattern" #"include_description"
      #"signature" #"class_type_field" #"attributes" #"open_description"
      #"with_constraint" #"include_declaration" #"class_type_desc"
      #"private_flag" #"injectivity" #"open_declaration" #"object_field"
      #"array" #"constant" #"class_expr" #"functor_parameter"
      #"direction_flag" #"core_type_desc" #"type_declaration"
      #"constructor_declaration" #"option" #"type_kind" #"module_expr"
      #"module_substitution" #"class_description" #"expression" #"class_type"
      #"structure_item" #"include_infos" #"class_declaration" #"module_type"
      #"class_expr_desc" #"class_structure" #"mutable_flag"
      #"expression_desc" #"constructor_arguments" #"class_field"]
   shared/13661 =a
     [0:
      #"with_constraint" #"virtual_flag" #"variance" #"value_description"
      #"value_binding" #"type_kind" #"type_extension" #"type_exception"
      #"type_declaration" #"toplevel_phrase" #"toplevel_directive"
      #"structure_item_desc" #"structure_item" #"structure" #"string"
      #"signature_item_desc" #"signature_item" #"signature" #"row_field_desc"
      #"row_field" #"rec_flag" #"private_flag" #"position" #"payload"
      #"pattern_desc" #"pattern" #"package_type" #"override_flag" #"option"
      #"open_infos" #"open_description" #"open_declaration"
      #"object_field_desc" #"object_field" #"mutable_flag"
      #"module_type_desc" #"module_type_declaration" #"module_type"
      #"module_substitution" #"module_expr_desc" #"module_expr"
      #"module_declaration" #"module_binding" #"longident_loc" #"longident"
      #"location_stack" #"location" #"loc" #"list" #"letop"
      #"label_declaration" #"label" #"int" #"injectivity" #"include_infos"
      #"include_description" #"include_declaration" #"functor_parameter"
      #"extension_constructor_kind" #"extension_constructor" #"extension"
      #"expression_desc" #"expression" #"directive_argument_desc"
      #"directive_argument" #"direction_flag" #"core_type_desc" #"core_type"
      #"constructor_declaration" #"constructor_arguments" #"constant"
      #"closed_flag" #"class_type_field_desc" #"class_type_field"
      #"class_type_desc" #"class_type_declaration" #"class_type"
      #"class_structure" #"class_signature" #"class_infos"
      #"class_field_kind" #"class_field_desc" #"class_field"
      #"class_expr_desc" #"class_expr" #"class_description"
      #"class_declaration" #"char" #"cases" #"case" #"bool" #"binding_op"
      #"attributes" #"attribute" #"array" #"arg_label"])
  (seq
    (setfield_ptr(root-init) 9 (global Ppxlib__Code_matcher!)
      (caml_make_vect 4 0))
    (let
      (end_marker_sig/552 =
         (apply (field_imm 1 (field_imm 15 (global Ppxlib__Attribute!)))
           "deriving.end" 1
           (apply (field_imm 233 (global Ppxlib__Ast_pattern!))
             (field_imm 22 (global Ppxlib__Ast_pattern!)))
           0))
      (setfield_ptr(root-init) 4 (global Ppxlib__Code_matcher!)
        end_marker_sig/552))
    (let
      (end_marker_str/1040 =
         (apply (field_imm 1 (field_imm 15 (global Ppxlib__Attribute!)))
           "deriving.end" 0
           (apply (field_imm 233 (global Ppxlib__Ast_pattern!))
             (field_imm 22 (global Ppxlib__Ast_pattern!)))
           0))
      (setfield_ptr(root-init) 5 (global Ppxlib__Code_matcher!)
        end_marker_str/1040))
    (let
      (Make/3113 =
         (let (object_tables/13633 =o (makemutable 0 0 0 0))
           (function M/13678 is_a_functor
             (let
               (extract_prefix/1321 =
                  (function pos/1323 l/1324
                    (letrec
                      (loop/1325
                         (function acc/1326 param/1777
                           (if param/1777
                             (let
                               (l/1328 =a (field_imm 1 param/1777)
                                x/1327 =a (field_imm 0 param/1777))
                               (catch
                                 (try
                                   (exit 1
                                     (apply
                                       (field_imm 3
                                         (field_imm 15
                                           (global Ppxlib__Attribute!)))
                                       (makeblock 0 (field_imm 1 M/13678) 0)
                                       x/1327))
                                  with exn/13627
                                   (if
                                     (== (field_imm 0 exn/13627)
                                       (field_imm 9 (global Stdlib!)))
                                     (apply loop/1325
                                       (makeblock 0 x/1327 acc/1326) l/1328)
                                     (reraise exn/13627)))
                                with (1 val/13624)
                                 (switch* val/13624
                                  case tag 0:
                                   (if (field_imm 0 val/13624)
                                     (makeblock 0
                                       (makeblock 0
                                         (apply
                                           (field_imm 8
                                             (field_imm 91
                                               (global Ppxlib__Import!)))
                                           acc/1326)
                                         (field_imm 0
                                           (apply (field_imm 0 M/13678)
                                             x/1327))))
                                     (apply loop/1325
                                       (makeblock 0 x/1327 acc/1326) l/1328))
                                  case tag 1:
                                   (makeblock 1 (field_imm 0 val/13624)))))
                             (let
                               (loc/1329 = (makeblock 0 pos/1323 pos/1323 0))
                               (makeblock 1
                                 (makeblock 0
                                   (apply
                                     (field_imm 1
                                       (field_imm 12
                                         (global Ppxlib__Location!)))
                                     loc/1329
                                     [0:
                                      [11:
                                       "ppxlib: ["
                                       [17:
                                        5
                                        [17:
                                         5
                                         [17:
                                          5
                                          [2:
                                           0 [11: "] attribute missing" 0]]]]]]
                                      "ppxlib: [@@@@@@%s] attribute missing"]
                                     (apply
                                       (field_imm 2
                                         (field_imm 15
                                           (global Ppxlib__Attribute!)))
                                       (field_imm 1 M/13678)))
                                   0))))))
                      (apply loop/1325 0 l/1324)))
                remove_loc/1778 =
                  (seq
                    (if (field_mut 0 object_tables/13633) 0
                      (let
                        (class/13637 =
                           (apply (field_imm 15 (global CamlinternalOO!))
                             shared/13668)
                         env_init/13664 =
                           (let
                             (ids/13660 =
                                (apply (field_imm 7 (global CamlinternalOO!))
                                  class/13637 shared/13661)
                              location_stack/2247 =o (field_mut 45 ids/13660)
                              location/2246 =o (field_mut 46 ids/13660)
                              inh/13659 =
                                (apply
                                  (field_imm 17 (global CamlinternalOO!))
                                  class/13637 0 0 shared/13658
                                  (field_imm 0
                                    (global Ppxlib__Ast_traverse!))
                                  0)
                              obj_init/13641 =o (field_mut 0 inh/13659))
                             (seq
                               (apply (field_imm 10 (global CamlinternalOO!))
                                 class/13637
                                 (makeblock 0 location/2246
                                   (function self-1/2343 param/2344
                                     (field_imm 2 (global Ppxlib__Location!)))
                                   location_stack/2247
                                   (function self-1/2346 param/2347 0)))
                               (function env/13639
                                 (let
                                   (self/13640 =
                                      (apply
                                        (field_imm 23
                                          (global CamlinternalOO!))
                                        0 class/13637))
                                   (seq
                                     (seq
                                       (apply obj_init/13641
                                         (field_mut 1 env/13639) self/13640)
                                       0)
                                     (apply
                                       (field_imm 25
                                         (global CamlinternalOO!))
                                       0 self/13640 class/13637)))))))
                        (seq
                          (apply (field_imm 16 (global CamlinternalOO!))
                            class/13637)
                          (setfield_ptr 0 object_tables/13633 env_init/13664))))
                    (let
                      (envs/13666 =o
                         (makeblock 0 0
                           (field_mut 3
                             (field_imm 0 (global Ppxlib__Ast_traverse!)))))
                      (apply (field_mut 0 object_tables/13633) envs/13666)))
                M_map/2891 =
                  (module-defn(M_map/2891) Ppxlib__Code_matcher.Make src/code_matcher.ml(66):1676-1742
                    (apply (field_imm 2 M/13678) (makeblock 0)))
                remove_loc/2892 =
                  (function x/2893
                    (apply (field_imm 0 M_map/2891) remove_loc/1778 x/2893)))
               (letrec
                 (last/2894
                    (function prev/2895 param/2898
                      (if param/2898
                        (apply last/2894 (field_imm 0 param/2898)
                          (field_imm 1 param/2898))
                        prev/2895)))
                 (let
                   (diff_asts/2899 =
                      (function generated/2901 round_trip/2902
                        (let
                          (with_temp_file/2903 =
                             (function f/2905
                               (apply
                                 (field_imm 0
                                   (field_imm 84 (global Ppxlib__Import!)))
                                 (apply
                                   (field_imm 15 (global Stdlib__filename!))
                                   0 "ppxlib" "")
                                 f/2905
                                 (function prim/13669 stub
                                   (caml_sys_remove prim/13669)))))
                          (apply with_temp_file/2903
                            (function fn1/3011
                              (apply with_temp_file/2903
                                (function fn2/3012
                                  (apply with_temp_file/2903
                                    (function out/3013
                                      (let
                                        (dump/3014 =
                                           (function fn/3016 ast/3017
                                             (apply
                                               (field_imm 1
                                                 (field_imm 95
                                                   (global Ppxlib__Import!)))
                                               0 0 0 0 fn/3016
                                               (function oc/3021
                                                 (let
                                                   (ppf/3022 =
                                                      (apply
                                                        (field_imm 105
                                                          (global Stdlib__format!))
                                                        oc/3021))
                                                   (seq
                                                     (apply
                                                       (field_imm 8
                                                         (global Sexplib0__Sexp!))
                                                       ppf/3022
                                                       (apply
                                                         (field_imm 5
                                                           M/13678)
                                                         ast/3017))
                                                     (apply
                                                       (field_imm 35
                                                         (global Stdlib__format!))
                                                       ppf/3022 0)))))))
                                        (seq
                                          (apply dump/3014 fn1/3011
                                            generated/2901)
                                          (apply dump/3014 fn2/3012
                                            round_trip/2902)
                                          (let
                                            (cmd/3047 =
                                               (apply
                                                 (field_imm 3
                                                   (global Stdlib__printf!))
                                                 [0:
                                                  [11:
                                                   "patdiff -ascii -alt-old generated -alt-new 'generated->printed->parsed' "
                                                   [2:
                                                    0
                                                    [12:
                                                     ' '
                                                     [2:
                                                      0 [11: " &> " [2: 0 0]]]]]]
                                                  "patdiff -ascii -alt-old generated -alt-new 'generated->printed->parsed' %s %s &> %s"]
                                                 (apply
                                                   (field_imm 20
                                                     (global Stdlib__filename!))
                                                   fn1/3011)
                                                 (apply
                                                   (field_imm 20
                                                     (global Stdlib__filename!))
                                                   fn2/3012)
                                                 (apply
                                                   (field_imm 20
                                                     (global Stdlib__filename!))
                                                   out/3013))
                                             ok/3061 =
                                               (||
                                                 (apply
                                                   (field_imm 73
                                                     (global Ppxlib__Import!))
                                                   (caml_sys_system_command
                                                     cmd/3047)
                                                   1)
                                                 (let
                                                   (cmd/3062 =
                                                      (apply
                                                        (field_imm 3
                                                          (global Stdlib__printf!))
                                                        [0:
                                                         [11:
                                                          "diff --label generated --label 'generated->printed->parsed' "
                                                          [2:
                                                           0
                                                           [12:
                                                            ' '
                                                            [2:
                                                             0
                                                             [11:
                                                              " &> " [2: 0 0]]]]]]
                                                         "diff --label generated --label 'generated->printed->parsed' %s %s &> %s"]
                                                        (apply
                                                          (field_imm 20
                                                            (global Stdlib__filename!))
                                                          fn1/3011)
                                                        (apply
                                                          (field_imm 20
                                                            (global Stdlib__filename!))
                                                          fn2/3012)
                                                        (apply
                                                          (field_imm 20
                                                            (global Stdlib__filename!))
                                                          out/3013)))
                                                   (apply
                                                     (field_imm 73
                                                       (global Ppxlib__Import!))
                                                     (caml_sys_system_command
                                                       cmd/3062)
                                                     1))))
                                            (if ok/3061
                                              (apply
                                                (field_imm 3
                                                  (field_imm 88
                                                    (global Ppxlib__Import!)))
                                                out/3013)
                                              "<no differences produced by diff>"))))))))))))
                    parse_string/3067 =
                      (function s/3069
                        (let
                          (*match*/13670 =
                             (apply (field_imm 3 M/13678)
                               (apply (field_imm 2 (global Stdlib__lexing!))
                                 0 s/3069)))
                          (catch
                            (if *match*/13670
                              (if (field_imm 1 *match*/13670) (exit 3)
                                (field_imm 0 *match*/13670))
                              (exit 3))
                           with (3)
                            (raise
                              (makeblock 0 (global Assert_failure/30!)
                                [0: "src/code_matcher.ml" 113 64]))))))
                   (letrec
                     (match_loop/3071
                        (function end_pos/3072 mismatch_handler/3073
                          expected/3074 source/3075
                          (if expected/3074
                            (if source/3075
                              (let
                                (y/3080 =a (field_imm 0 source/3075)
                                 loc/3084 =
                                   (apply (field_imm 0 M/13678) y/3080)
                                 x/3085 =
                                   (apply remove_loc/2892
                                     (field_imm 0 expected/3074))
                                 y/3086 = (apply remove_loc/2892 y/3080))
                                (seq
                                  (if
                                    (apply
                                      (field_imm 5
                                        (field_imm 70
                                          (global Ppxlib__Import!)))
                                      x/3085 y/3086)
                                    (let
                                      (round_trip/3097 =
                                         (apply remove_loc/2892
                                           (apply parse_string/3067
                                             (apply
                                               (field_imm 135
                                                 (global Stdlib__format!))
                                               [0: [15: [17: 4 0]] "%a@."]
                                               (field_imm 4 M/13678) x/3085))))
                                      (seq
                                        (if
                                          (apply
                                            (field_imm 5
                                              (field_imm 70
                                                (global Ppxlib__Import!)))
                                            x/3085 round_trip/3097)
                                          (apply
                                            (field_imm 4
                                              (global Ppxlib__Location!))
                                            (makeblock 0 loc/3084)
                                            [0:
                                             [11:
                                              "ppxlib: the corrected code doesn't round-trip.\nThis is probably a bug in the OCaml printer:\n"
                                              [2: 0 0]]
                                             "ppxlib: the corrected code doesn't round-trip.\nThis is probably a bug in the OCaml printer:\n%s"]
                                            (apply diff_asts/2899 x/3085
                                              round_trip/3097))
                                          0)
                                        (apply mismatch_handler/3073 loc/3084
                                          (makeblock 0 x/3085 0))))
                                    0)
                                  (apply match_loop/3071 end_pos/3072
                                    mismatch_handler/3073
                                    (field_imm 1 expected/3074)
                                    (field_imm 1 source/3075))))
                              (let
                                (loc/3083 =
                                   (makeblock 0 end_pos/3072 end_pos/3072 0))
                                (apply mismatch_handler/3073 loc/3083
                                  expected/3074)))
                            (if source/3075
                              (let
                                (x/3076 =a (field_imm 0 source/3075)
                                 loc/3082 =
                                   (let
                                     (init/13672 =
                                        (apply (field_imm 0 M/13678) x/3076))
                                     (makeblock 0 (field_imm 0 init/13672)
                                       (field_imm 1
                                         (apply (field_imm 0 M/13678)
                                           (apply last/2894 x/3076
                                             (field_imm 1 source/3075))))
                                       (field_int 2 init/13672))))
                                (apply mismatch_handler/3073 loc/3082 0))
                              0))))
                     (let
                       (do_match/3098 =
                          (function pos/3100 expected/3101
                            mismatch_handler/3102 source/3103
                            (apply
                              (field_imm 4
                                (field_imm 93 (global Ppxlib__Import!)))
                              (apply extract_prefix/1321 pos/3100
                                source/3103)
                              (function (param/13676, param/13677)
                                (apply match_loop/3071 param/13677
                                  mismatch_handler/3102 expected/3101
                                  param/13676)))))
                       (makeblock 0 extract_prefix/1321 M_map/2891
                         remove_loc/2892 last/2894 diff_asts/2899
                         parse_string/3067 match_loop/3071 do_match/3098)))))))))
      (seq
        (setfield_ptr(root-init) 6 (global Ppxlib__Code_matcher!) Make/3113)
        (let
          (Str/5038 =
             (apply (field_imm 6 (global Ppxlib__Code_matcher!))
               (let
                 (get_loc/3115 = (function x/3117 (field_imm 1 x/3117))
                  end_marker/3118 =
                    (field_imm 5 (global Ppxlib__Code_matcher!))
                  Transform/3123 =
                    (module-defn(Transform/3123) Ppxlib__Code_matcher.Str src/code_matcher.ml(158):4913-4988
                      (function T/13679 is_a_functor
                        (let
                          (apply/3120 =
                             (function o/3122
                               (sendcache o/3122 832861151
                                 (field_mut 9 (global Ppxlib__Code_matcher!))
                                 0)))
                          (makeblock 0 apply/3120))))
                  parse/3124 =
                    (field_imm 1 (field_imm 2 (global Ppxlib_ast__Import!)))
                  pp/3153 = (field_imm 17 (global Astlib__Pprintast!))
                  to_sexp/3175 =
                    (sendcache (field_imm 18 (global Ppxlib__Ast_traverse!))
                      832861151 (field_mut 9 (global Ppxlib__Code_matcher!))
                      1))
                 (makeblock 0 get_loc/3115 end_marker/3118 Transform/3123
                   parse/3124 pp/3153 to_sexp/3175))))
          (seq
            (setfield_ptr(root-init) 7 (global Ppxlib__Code_matcher!)
              Str/5038)
            (let
              (Sig/5062 =
                 (apply (field_imm 6 (global Ppxlib__Code_matcher!))
                   (let
                     (get_loc/5040 = (function x/5042 (field_imm 1 x/5042))
                      end_marker/5043 =
                        (field_imm 4 (global Ppxlib__Code_matcher!))
                      Transform/5048 =
                        (module-defn(Transform/5048) Ppxlib__Code_matcher.Sig src/code_matcher.ml(174):5273-5348
                          (function T/13680 is_a_functor
                            (let
                              (apply/5045 =
                                 (function o/5047
                                   (sendcache o/5047 -662996230
                                     (field_mut 9
                                       (global Ppxlib__Code_matcher!))
                                     2)))
                              (makeblock 0 apply/5045))))
                      parse/5049 =
                        (field_imm 2
                          (field_imm 2 (global Ppxlib_ast__Import!)))
                      pp/5050 = (field_imm 16 (global Astlib__Pprintast!))
                      to_sexp/5051 =
                        (sendcache
                          (field_imm 18 (global Ppxlib__Ast_traverse!))
                          -662996230
                          (field_mut 9 (global Ppxlib__Code_matcher!)) 3))
                     (makeblock 0 get_loc/5040 end_marker/5043 Transform/5048
                       parse/5049 pp/5050 to_sexp/5051))))
              (seq
                (setfield_ptr(root-init) 8 (global Ppxlib__Code_matcher!)
                  Sig/5062)
                (let
                  (match_structure_res/5063 =
                     (field_imm 7
                       (field_imm 7 (global Ppxlib__Code_matcher!))))
                  (setfield_ptr(root-init) 0 (global Ppxlib__Code_matcher!)
                    match_structure_res/5063))
                (let
                  (match_structure/5064 =
                     (function pos/5066 expected/5067 mismatch_handler/5068
                       l/5069
                       (apply
                         (let
                           (func/13683 =
                              (field_imm 5
                                (field_imm 93 (global Ppxlib__Import!)))
                            arg/13684 =
                              (function (param/13681, param/13682)
                                (apply
                                  (field_imm 7
                                    (field_imm 12 (global Ppxlib__Location!)))
                                  param/13681)))
                           (function param/13685 stub
                             (apply func/13683 param/13685 arg/13684)))
                         (apply (field_imm 0 (global Ppxlib__Code_matcher!))
                           pos/5066 expected/5067 mismatch_handler/5068
                           l/5069))))
                  (setfield_ptr(root-init) 1 (global Ppxlib__Code_matcher!)
                    match_structure/5064))
                (let
                  (match_signature_res/5072 =
                     (field_imm 7
                       (field_imm 8 (global Ppxlib__Code_matcher!))))
                  (setfield_ptr(root-init) 2 (global Ppxlib__Code_matcher!)
                    match_signature_res/5072))
                (let
                  (match_signature/5073 =
                     (function pos/5075 expected/5076 mismatch_handler/5077
                       l/5078
                       (apply
                         (let
                           (func/13688 =
                              (field_imm 5
                                (field_imm 93 (global Ppxlib__Import!)))
                            arg/13689 =
                              (function (param/13686, param/13687)
                                (apply
                                  (field_imm 7
                                    (field_imm 12 (global Ppxlib__Location!)))
                                  param/13686)))
                           (function param/13690 stub
                             (apply func/13688 param/13690 arg/13689)))
                         (apply (field_imm 2 (global Ppxlib__Code_matcher!))
                           pos/5075 expected/5076 mismatch_handler/5077
                           l/5078))))
                  (setfield_ptr(root-init) 3 (global Ppxlib__Code_matcher!)
                    match_signature/5073))
                0))))))))
