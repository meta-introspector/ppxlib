[
  structure_item (src/name.ml[1,0+0]..[1,0+12])
    Pstr_open Override
    module_expr (src/name.ml[1,0+6]..[1,0+12])
      Pmod_ident "Import" (src/name.ml[1,0+6]..[1,0+12])
  structure_item (src/name.ml[2,13+0]..[2,13+29])
    Pstr_module
    "Format" (src/name.ml[2,13+7]..[2,13+13])
      module_expr (src/name.ml[2,13+16]..[2,13+29])
        Pmod_ident "Stdlib.Format" (src/name.ml[2,13+16]..[2,13+29])
  structure_item (src/name.ml[4,44+0]..[18,519+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/name.ml[4,44+4]..[4,44+21])
          Ppat_var "fold_dot_suffixes" (src/name.ml[4,44+4]..[4,44+21])
        expression (src/name.ml[4,44+22]..[18,519+69]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/name.ml[4,44+22]..[4,44+26])
            Ppat_var "name" (src/name.ml[4,44+22]..[4,44+26])
          expression (src/name.ml[4,44+27]..[18,519+69]) ghost
            Pexp_fun
            Labelled "init"
            None
            pattern (src/name.ml[4,44+33]..[4,44+36])
              Ppat_var "acc" (src/name.ml[4,44+33]..[4,44+36])
            expression (src/name.ml[4,44+37]..[18,519+69]) ghost
              Pexp_fun
              Labelled "f"
              None
              pattern (src/name.ml[4,44+38]..[4,44+39])
                Ppat_var "f" (src/name.ml[4,44+38]..[4,44+39])
              expression (src/name.ml[5,86+2]..[18,519+69])
                Pexp_let Rec
                [
                  <def>
                    pattern (src/name.ml[5,86+10]..[5,86+27])
                      Ppat_var "collapse_after_at" (src/name.ml[5,86+10]..[5,86+27])
                    expression (src/name.ml[5,86+30]..[10,309+44])
                      Pexp_function
                      [
                        <case>
                          pattern (src/name.ml[6,125+6]..[6,125+8])
                            Ppat_construct "[]" (src/name.ml[6,125+6]..[6,125+8])
                            None
                          expression (src/name.ml[6,125+12]..[6,125+14])
                            Pexp_construct "[]" (src/name.ml[6,125+12]..[6,125+14])
                            None
                        <case>
                          pattern (src/name.ml[7,140+6]..[7,140+19])
                            Ppat_construct "::" (src/name.ml[7,140+11]..[7,140+13])
                            Some
                              pattern (src/name.ml[7,140+6]..[7,140+19]) ghost
                                Ppat_tuple
                                [
                                  pattern (src/name.ml[7,140+6]..[7,140+10])
                                    Ppat_var "part" (src/name.ml[7,140+6]..[7,140+10])
                                  pattern (src/name.ml[7,140+14]..[7,140+19])
                                    Ppat_var "parts" (src/name.ml[7,140+14]..[7,140+19])
                                ]
                          expression (src/name.ml[8,163+8]..[10,309+44])
                            Pexp_ifthenelse
                            expression (src/name.ml[8,163+11]..[8,163+66])
                              Pexp_apply
                              expression (src/name.ml[8,163+40]..[8,163+42])
                                Pexp_ident "&&" (src/name.ml[8,163+40]..[8,163+42])
                              [
                                <arg>
                                Nolabel
                                  expression (src/name.ml[8,163+11]..[8,163+39])
                                    Pexp_apply
                                    expression (src/name.ml[8,163+12]..[8,163+15])
                                      Pexp_ident "not" (src/name.ml[8,163+12]..[8,163+15])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/name.ml[8,163+16]..[8,163+38])
                                          Pexp_apply
                                          expression (src/name.ml[8,163+17]..[8,163+32])
                                            Pexp_ident "String.is_empty" (src/name.ml[8,163+17]..[8,163+32])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/name.ml[8,163+33]..[8,163+37])
                                                Pexp_ident "part" (src/name.ml[8,163+33]..[8,163+37])
                                          ]
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/name.ml[8,163+43]..[8,163+66])
                                    Pexp_apply
                                    expression (src/name.ml[8,163+43]..[8,163+53])
                                      Pexp_ident "Char.equal" (src/name.ml[8,163+43]..[8,163+53])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/name.ml[8,163+54]..[8,163+62])
                                          Pexp_apply
                                          expression (src/name.ml[8,163+54]..[8,163+62]) ghost
                                            Pexp_ident "String.get" (src/name.ml[8,163+54]..[8,163+62]) ghost
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/name.ml[8,163+54]..[8,163+58])
                                                Pexp_ident "part" (src/name.ml[8,163+54]..[8,163+58])
                                            <arg>
                                            Nolabel
                                              expression (src/name.ml[8,163+60]..[8,163+61])
                                                Pexp_constant PConst_int (0,None)
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (src/name.ml[8,163+63]..[8,163+66])
                                          Pexp_constant PConst_char 40
                                    ]
                              ]
                            expression (src/name.ml[9,235+10]..[9,235+73])
                              Pexp_construct "::" (src/name.ml[9,235+12]..[9,235+73]) ghost
                              Some
                                expression (src/name.ml[9,235+12]..[9,235+73]) ghost
                                  Pexp_tuple
                                  [
                                    expression (src/name.ml[9,235+12]..[9,235+71])
                                      Pexp_apply
                                      expression (src/name.ml[9,235+12]..[9,235+25])
                                        Pexp_ident "String.concat" (src/name.ml[9,235+12]..[9,235+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/name.ml[9,235+26]..[9,235+62])
                                            Pexp_construct "::" (src/name.ml[9,235+53]..[9,235+55])
                                            Some
                                              expression (src/name.ml[9,235+27]..[9,235+61]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (src/name.ml[9,235+27]..[9,235+52])
                                                    Pexp_apply
                                                    expression (src/name.ml[9,235+27]..[9,235+45])
                                                      Pexp_ident "String.drop_prefix" (src/name.ml[9,235+27]..[9,235+45])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/name.ml[9,235+46]..[9,235+50])
                                                          Pexp_ident "part" (src/name.ml[9,235+46]..[9,235+50])
                                                      <arg>
                                                      Nolabel
                                                        expression (src/name.ml[9,235+51]..[9,235+52])
                                                          Pexp_constant PConst_int (1,None)
                                                    ]
                                                  expression (src/name.ml[9,235+56]..[9,235+61])
                                                    Pexp_ident "parts" (src/name.ml[9,235+56]..[9,235+61])
                                                ]
                                        <arg>
                                        Labelled "sep"
                                          expression (src/name.ml[9,235+68]..[9,235+71])
                                            Pexp_constant PConst_string(".",(src/name.ml[9,235+69]..[9,235+70]),None)
                                      ]
                                    expression (src/name.ml[9,235+72]..[9,235+73]) ghost
                                      Pexp_construct "[]" (src/name.ml[9,235+72]..[9,235+73]) ghost
                                      None
                                  ]
                            Some
                              expression (src/name.ml[10,309+13]..[10,309+44])
                                Pexp_construct "::" (src/name.ml[10,309+18]..[10,309+20])
                                Some
                                  expression (src/name.ml[10,309+13]..[10,309+44]) ghost
                                    Pexp_tuple
                                    [
                                      expression (src/name.ml[10,309+13]..[10,309+17])
                                        Pexp_ident "part" (src/name.ml[10,309+13]..[10,309+17])
                                      expression (src/name.ml[10,309+21]..[10,309+44])
                                        Pexp_apply
                                        expression (src/name.ml[10,309+21]..[10,309+38])
                                          Pexp_ident "collapse_after_at" (src/name.ml[10,309+21]..[10,309+38])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/name.ml[10,309+39]..[10,309+44])
                                              Pexp_ident "parts" (src/name.ml[10,309+39]..[10,309+44])
                                        ]
                                    ]
                      ]
                ]
                expression (src/name.ml[12,359+2]..[18,519+69])
                  Pexp_let Rec
                  [
                    <def>
                      pattern (src/name.ml[12,359+10]..[12,359+14])
                        Ppat_var "loop" (src/name.ml[12,359+10]..[12,359+14])
                      expression (src/name.ml[12,359+15]..[16,446+67]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/name.ml[12,359+15]..[12,359+18])
                          Ppat_var "acc" (src/name.ml[12,359+15]..[12,359+18])
                        expression (src/name.ml[12,359+19]..[16,446+67]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/name.ml[12,359+19]..[12,359+24])
                            Ppat_var "parts" (src/name.ml[12,359+19]..[12,359+24])
                          expression (src/name.ml[13,386+4]..[16,446+67])
                            Pexp_match
                            expression (src/name.ml[13,386+10]..[13,386+15])
                              Pexp_ident "parts" (src/name.ml[13,386+10]..[13,386+15])
                            [
                              <case>
                                pattern (src/name.ml[14,407+6]..[14,407+8])
                                  Ppat_construct "[]" (src/name.ml[14,407+6]..[14,407+8])
                                  None
                                expression (src/name.ml[14,407+12]..[14,407+15])
                                  Pexp_ident "acc" (src/name.ml[14,407+12]..[14,407+15])
                              <case>
                                pattern (src/name.ml[15,423+6]..[15,423+19])
                                  Ppat_construct "::" (src/name.ml[15,423+11]..[15,423+13])
                                  Some
                                    pattern (src/name.ml[15,423+6]..[15,423+19]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (src/name.ml[15,423+6]..[15,423+10])
                                          Ppat_var "part" (src/name.ml[15,423+6]..[15,423+10])
                                        pattern (src/name.ml[15,423+14]..[15,423+19])
                                          Ppat_var "parts" (src/name.ml[15,423+14]..[15,423+19])
                                      ]
                                expression (src/name.ml[16,446+8]..[16,446+67])
                                  Pexp_apply
                                  expression (src/name.ml[16,446+8]..[16,446+12])
                                    Pexp_ident "loop" (src/name.ml[16,446+8]..[16,446+12])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/name.ml[16,446+13]..[16,446+61])
                                        Pexp_apply
                                        expression (src/name.ml[16,446+14]..[16,446+15])
                                          Pexp_ident "f" (src/name.ml[16,446+14]..[16,446+15])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/name.ml[16,446+16]..[16,446+56])
                                              Pexp_apply
                                              expression (src/name.ml[16,446+17]..[16,446+30])
                                                Pexp_ident "String.concat" (src/name.ml[16,446+17]..[16,446+30])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/name.ml[16,446+31]..[16,446+46])
                                                    Pexp_construct "::" (src/name.ml[16,446+37]..[16,446+39])
                                                    Some
                                                      expression (src/name.ml[16,446+32]..[16,446+45]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (src/name.ml[16,446+32]..[16,446+36])
                                                            Pexp_ident "part" (src/name.ml[16,446+32]..[16,446+36])
                                                          expression (src/name.ml[16,446+40]..[16,446+45])
                                                            Pexp_ident "parts" (src/name.ml[16,446+40]..[16,446+45])
                                                        ]
                                                <arg>
                                                Labelled "sep"
                                                  expression (src/name.ml[16,446+52]..[16,446+55])
                                                    Pexp_constant PConst_string(".",(src/name.ml[16,446+53]..[16,446+54]),None)
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (src/name.ml[16,446+57]..[16,446+60])
                                              Pexp_ident "acc" (src/name.ml[16,446+57]..[16,446+60])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (src/name.ml[16,446+62]..[16,446+67])
                                        Pexp_ident "parts" (src/name.ml[16,446+62]..[16,446+67])
                                  ]
                            ]
                  ]
                  expression (src/name.ml[18,519+2]..[18,519+69])
                    Pexp_apply
                    expression (src/name.ml[18,519+58]..[18,519+60])
                      Pexp_ident "|>" (src/name.ml[18,519+58]..[18,519+60])
                    [
                      <arg>
                      Nolabel
                        expression (src/name.ml[18,519+2]..[18,519+57])
                          Pexp_apply
                          expression (src/name.ml[18,519+37]..[18,519+39])
                            Pexp_ident "|>" (src/name.ml[18,519+37]..[18,519+39])
                          [
                            <arg>
                            Nolabel
                              expression (src/name.ml[18,519+2]..[18,519+36])
                                Pexp_apply
                                expression (src/name.ml[18,519+2]..[18,519+22])
                                  Pexp_ident "String.split_on_char" (src/name.ml[18,519+2]..[18,519+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/name.ml[18,519+23]..[18,519+27])
                                      Pexp_ident "name" (src/name.ml[18,519+23]..[18,519+27])
                                  <arg>
                                  Labelled "sep"
                                    expression (src/name.ml[18,519+33]..[18,519+36])
                                      Pexp_constant PConst_char 2e
                                ]
                            <arg>
                            Nolabel
                              expression (src/name.ml[18,519+40]..[18,519+57])
                                Pexp_ident "collapse_after_at" (src/name.ml[18,519+40]..[18,519+57])
                          ]
                      <arg>
                      Nolabel
                        expression (src/name.ml[18,519+61]..[18,519+69])
                          Pexp_apply
                          expression (src/name.ml[18,519+61]..[18,519+65])
                            Pexp_ident "loop" (src/name.ml[18,519+61]..[18,519+65])
                          [
                            <arg>
                            Nolabel
                              expression (src/name.ml[18,519+66]..[18,519+69])
                                Pexp_ident "acc" (src/name.ml[18,519+66]..[18,519+69])
                          ]
                    ]
    ]
  structure_item (src/name.ml[20,590+0]..[21,614+60])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/name.ml[20,590+4]..[20,590+16])
          Ppat_var "dot_suffixes" (src/name.ml[20,590+4]..[20,590+16])
        expression (src/name.ml[20,590+17]..[21,614+60]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/name.ml[20,590+17]..[20,590+21])
            Ppat_var "name" (src/name.ml[20,590+17]..[20,590+21])
          expression (src/name.ml[21,614+2]..[21,614+60])
            Pexp_apply
            expression (src/name.ml[21,614+2]..[21,614+19])
              Pexp_ident "fold_dot_suffixes" (src/name.ml[21,614+2]..[21,614+19])
            [
              <arg>
              Nolabel
                expression (src/name.ml[21,614+20]..[21,614+24])
                  Pexp_ident "name" (src/name.ml[21,614+20]..[21,614+24])
              <arg>
              Labelled "init"
                expression (src/name.ml[21,614+31]..[21,614+33])
                  Pexp_construct "[]" (src/name.ml[21,614+31]..[21,614+33])
                  None
              <arg>
              Labelled "f"
                expression (src/name.ml[21,614+37]..[21,614+60])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/name.ml[21,614+42]..[21,614+43])
                    Ppat_var "x" (src/name.ml[21,614+42]..[21,614+43])
                  expression (src/name.ml[21,614+44]..[21,614+59]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/name.ml[21,614+44]..[21,614+47])
                      Ppat_var "acc" (src/name.ml[21,614+44]..[21,614+47])
                    expression (src/name.ml[21,614+51]..[21,614+59])
                      Pexp_construct "::" (src/name.ml[21,614+53]..[21,614+55])
                      Some
                        expression (src/name.ml[21,614+51]..[21,614+59]) ghost
                          Pexp_tuple
                          [
                            expression (src/name.ml[21,614+51]..[21,614+52])
                              Pexp_ident "x" (src/name.ml[21,614+51]..[21,614+52])
                            expression (src/name.ml[21,614+56]..[21,614+59])
                              Pexp_ident "acc" (src/name.ml[21,614+56]..[21,614+59])
                          ]
            ]
    ]
  structure_item (src/name.ml[23,676+0]..[35,1074+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/name.ml[23,676+4]..[23,676+14])
          Ppat_var "split_path" (src/name.ml[23,676+4]..[23,676+14])
        expression (src/name.ml[24,693+2]..[35,1074+19])
          Pexp_let Rec
          [
            <def>
              pattern (src/name.ml[24,693+10]..[24,693+14])
                Ppat_var "loop" (src/name.ml[24,693+10]..[24,693+14])
              expression (src/name.ml[24,693+15]..[26,756+74]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (src/name.ml[24,693+15]..[24,693+16])
                  Ppat_var "s" (src/name.ml[24,693+15]..[24,693+16])
                expression (src/name.ml[24,693+17]..[26,756+74]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/name.ml[24,693+17]..[24,693+18])
                    Ppat_var "i" (src/name.ml[24,693+17]..[24,693+18])
                  expression (src/name.ml[25,714+4]..[26,756+74])
                    Pexp_ifthenelse
                    expression (src/name.ml[25,714+7]..[25,714+26])
                      Pexp_apply
                      expression (src/name.ml[25,714+9]..[25,714+10])
                        Pexp_ident "=" (src/name.ml[25,714+9]..[25,714+10])
                      [
                        <arg>
                        Nolabel
                          expression (src/name.ml[25,714+7]..[25,714+8])
                            Pexp_ident "i" (src/name.ml[25,714+7]..[25,714+8])
                        <arg>
                        Nolabel
                          expression (src/name.ml[25,714+11]..[25,714+26])
                            Pexp_apply
                            expression (src/name.ml[25,714+11]..[25,714+24])
                              Pexp_ident "String.length" (src/name.ml[25,714+11]..[25,714+24])
                            [
                              <arg>
                              Nolabel
                                expression (src/name.ml[25,714+25]..[25,714+26])
                                  Pexp_ident "s" (src/name.ml[25,714+25]..[25,714+26])
                            ]
                      ]
                    expression (src/name.ml[25,714+32]..[25,714+41])
                      Pexp_tuple
                      [
                        expression (src/name.ml[25,714+33]..[25,714+34])
                          Pexp_ident "s" (src/name.ml[25,714+33]..[25,714+34])
                        expression (src/name.ml[25,714+36]..[25,714+40])
                          Pexp_construct "None" (src/name.ml[25,714+36]..[25,714+40])
                          None
                      ]
                    Some
                      expression (src/name.ml[26,756+9]..[26,756+74])
                        Pexp_match
                        expression (src/name.ml[26,756+15]..[26,756+20])
                          Pexp_apply
                          expression (src/name.ml[26,756+15]..[26,756+20]) ghost
                            Pexp_ident "String.get" (src/name.ml[26,756+15]..[26,756+20]) ghost
                          [
                            <arg>
                            Nolabel
                              expression (src/name.ml[26,756+15]..[26,756+16])
                                Pexp_ident "s" (src/name.ml[26,756+15]..[26,756+16])
                            <arg>
                            Nolabel
                              expression (src/name.ml[26,756+18]..[26,756+19])
                                Pexp_ident "i" (src/name.ml[26,756+18]..[26,756+19])
                          ]
                        [
                          <case>
                            pattern (src/name.ml[26,756+26]..[26,756+29])
                              Ppat_constant PConst_char 2e
                            expression (src/name.ml[26,756+33]..[26,756+52])
                              Pexp_apply
                              expression (src/name.ml[26,756+33]..[26,756+42])
                                Pexp_ident "after_dot" (src/name.ml[26,756+33]..[26,756+42])
                              [
                                <arg>
                                Nolabel
                                  expression (src/name.ml[26,756+43]..[26,756+44])
                                    Pexp_ident "s" (src/name.ml[26,756+43]..[26,756+44])
                                <arg>
                                Nolabel
                                  expression (src/name.ml[26,756+45]..[26,756+52])
                                    Pexp_apply
                                    expression (src/name.ml[26,756+48]..[26,756+49])
                                      Pexp_ident "+" (src/name.ml[26,756+48]..[26,756+49])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/name.ml[26,756+46]..[26,756+47])
                                          Pexp_ident "i" (src/name.ml[26,756+46]..[26,756+47])
                                      <arg>
                                      Nolabel
                                        expression (src/name.ml[26,756+50]..[26,756+51])
                                          Pexp_constant PConst_int (1,None)
                                    ]
                              ]
                          <case>
                            pattern (src/name.ml[26,756+55]..[26,756+56])
                              Ppat_any
                            expression (src/name.ml[26,756+60]..[26,756+74])
                              Pexp_apply
                              expression (src/name.ml[26,756+60]..[26,756+64])
                                Pexp_ident "loop" (src/name.ml[26,756+60]..[26,756+64])
                              [
                                <arg>
                                Nolabel
                                  expression (src/name.ml[26,756+65]..[26,756+66])
                                    Pexp_ident "s" (src/name.ml[26,756+65]..[26,756+66])
                                <arg>
                                Nolabel
                                  expression (src/name.ml[26,756+67]..[26,756+74])
                                    Pexp_apply
                                    expression (src/name.ml[26,756+70]..[26,756+71])
                                      Pexp_ident "+" (src/name.ml[26,756+70]..[26,756+71])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/name.ml[26,756+68]..[26,756+69])
                                          Pexp_ident "i" (src/name.ml[26,756+68]..[26,756+69])
                                      <arg>
                                      Nolabel
                                        expression (src/name.ml[26,756+72]..[26,756+73])
                                          Pexp_constant PConst_int (1,None)
                                    ]
                              ]
                        ]
            <def>
              pattern (src/name.ml[27,831+6]..[27,831+15])
                Ppat_var "after_dot" (src/name.ml[27,831+6]..[27,831+15])
              expression (src/name.ml[27,831+16]..[33,1041+27]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (src/name.ml[27,831+16]..[27,831+17])
                  Ppat_var "s" (src/name.ml[27,831+16]..[27,831+17])
                expression (src/name.ml[27,831+18]..[33,1041+27]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/name.ml[27,831+18]..[27,831+19])
                    Ppat_var "i" (src/name.ml[27,831+18]..[27,831+19])
                  expression (src/name.ml[28,853+4]..[33,1041+27])
                    Pexp_ifthenelse
                    expression (src/name.ml[28,853+7]..[28,853+26])
                      Pexp_apply
                      expression (src/name.ml[28,853+9]..[28,853+10])
                        Pexp_ident "=" (src/name.ml[28,853+9]..[28,853+10])
                      [
                        <arg>
                        Nolabel
                          expression (src/name.ml[28,853+7]..[28,853+8])
                            Pexp_ident "i" (src/name.ml[28,853+7]..[28,853+8])
                        <arg>
                        Nolabel
                          expression (src/name.ml[28,853+11]..[28,853+26])
                            Pexp_apply
                            expression (src/name.ml[28,853+11]..[28,853+24])
                              Pexp_ident "String.length" (src/name.ml[28,853+11]..[28,853+24])
                            [
                              <arg>
                              Nolabel
                                expression (src/name.ml[28,853+25]..[28,853+26])
                                  Pexp_ident "s" (src/name.ml[28,853+25]..[28,853+26])
                            ]
                      ]
                    expression (src/name.ml[28,853+32]..[28,853+41])
                      Pexp_tuple
                      [
                        expression (src/name.ml[28,853+33]..[28,853+34])
                          Pexp_ident "s" (src/name.ml[28,853+33]..[28,853+34])
                        expression (src/name.ml[28,853+36]..[28,853+40])
                          Pexp_construct "None" (src/name.ml[28,853+36]..[28,853+40])
                          None
                      ]
                    Some
                      expression (src/name.ml[30,904+6]..[33,1041+27])
                        Pexp_match
                        expression (src/name.ml[30,904+12]..[30,904+17])
                          Pexp_apply
                          expression (src/name.ml[30,904+12]..[30,904+17]) ghost
                            Pexp_ident "String.get" (src/name.ml[30,904+12]..[30,904+17]) ghost
                          [
                            <arg>
                            Nolabel
                              expression (src/name.ml[30,904+12]..[30,904+13])
                                Pexp_ident "s" (src/name.ml[30,904+12]..[30,904+13])
                            <arg>
                            Nolabel
                              expression (src/name.ml[30,904+15]..[30,904+16])
                                Pexp_ident "i" (src/name.ml[30,904+15]..[30,904+16])
                          ]
                        [
                          <case>
                            pattern (src/name.ml[31,927+8]..[31,927+18])
                              Ppat_interval PConst_char 41..PConst_char 5a
                            expression (src/name.ml[31,927+22]..[31,927+78])
                              Pexp_tuple
                              [
                                expression (src/name.ml[31,927+23]..[31,927+46])
                                  Pexp_apply
                                  expression (src/name.ml[31,927+23]..[31,927+36])
                                    Pexp_ident "String.prefix" (src/name.ml[31,927+23]..[31,927+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/name.ml[31,927+37]..[31,927+38])
                                        Pexp_ident "s" (src/name.ml[31,927+37]..[31,927+38])
                                    <arg>
                                    Nolabel
                                      expression (src/name.ml[31,927+39]..[31,927+46])
                                        Pexp_apply
                                        expression (src/name.ml[31,927+42]..[31,927+43])
                                          Pexp_ident "-" (src/name.ml[31,927+42]..[31,927+43])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/name.ml[31,927+40]..[31,927+41])
                                              Pexp_ident "i" (src/name.ml[31,927+40]..[31,927+41])
                                          <arg>
                                          Nolabel
                                            expression (src/name.ml[31,927+44]..[31,927+45])
                                              Pexp_constant PConst_int (1,None)
                                        ]
                                  ]
                                expression (src/name.ml[31,927+48]..[31,927+77])
                                  Pexp_construct "Some" (src/name.ml[31,927+48]..[31,927+52])
                                  Some
                                    expression (src/name.ml[31,927+53]..[31,927+77])
                                      Pexp_apply
                                      expression (src/name.ml[31,927+54]..[31,927+72])
                                        Pexp_ident "String.drop_prefix" (src/name.ml[31,927+54]..[31,927+72])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/name.ml[31,927+73]..[31,927+74])
                                            Pexp_ident "s" (src/name.ml[31,927+73]..[31,927+74])
                                        <arg>
                                        Nolabel
                                          expression (src/name.ml[31,927+75]..[31,927+76])
                                            Pexp_ident "i" (src/name.ml[31,927+75]..[31,927+76])
                                      ]
                              ]
                          <case>
                            pattern (src/name.ml[32,1006+8]..[32,1006+11])
                              Ppat_constant PConst_char 2e
                            expression (src/name.ml[32,1006+15]..[32,1006+34])
                              Pexp_apply
                              expression (src/name.ml[32,1006+15]..[32,1006+24])
                                Pexp_ident "after_dot" (src/name.ml[32,1006+15]..[32,1006+24])
                              [
                                <arg>
                                Nolabel
                                  expression (src/name.ml[32,1006+25]..[32,1006+26])
                                    Pexp_ident "s" (src/name.ml[32,1006+25]..[32,1006+26])
                                <arg>
                                Nolabel
                                  expression (src/name.ml[32,1006+27]..[32,1006+34])
                                    Pexp_apply
                                    expression (src/name.ml[32,1006+30]..[32,1006+31])
                                      Pexp_ident "+" (src/name.ml[32,1006+30]..[32,1006+31])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/name.ml[32,1006+28]..[32,1006+29])
                                          Pexp_ident "i" (src/name.ml[32,1006+28]..[32,1006+29])
                                      <arg>
                                      Nolabel
                                        expression (src/name.ml[32,1006+32]..[32,1006+33])
                                          Pexp_constant PConst_int (1,None)
                                    ]
                              ]
                          <case>
                            pattern (src/name.ml[33,1041+8]..[33,1041+9])
                              Ppat_any
                            expression (src/name.ml[33,1041+13]..[33,1041+27])
                              Pexp_apply
                              expression (src/name.ml[33,1041+13]..[33,1041+17])
                                Pexp_ident "loop" (src/name.ml[33,1041+13]..[33,1041+17])
                              [
                                <arg>
                                Nolabel
                                  expression (src/name.ml[33,1041+18]..[33,1041+19])
                                    Pexp_ident "s" (src/name.ml[33,1041+18]..[33,1041+19])
                                <arg>
                                Nolabel
                                  expression (src/name.ml[33,1041+20]..[33,1041+27])
                                    Pexp_apply
                                    expression (src/name.ml[33,1041+23]..[33,1041+24])
                                      Pexp_ident "+" (src/name.ml[33,1041+23]..[33,1041+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/name.ml[33,1041+21]..[33,1041+22])
                                          Pexp_ident "i" (src/name.ml[33,1041+21]..[33,1041+22])
                                      <arg>
                                      Nolabel
                                        expression (src/name.ml[33,1041+25]..[33,1041+26])
                                          Pexp_constant PConst_int (1,None)
                                    ]
                              ]
                        ]
          ]
          expression (src/name.ml[35,1074+2]..[35,1074+19])
            Pexp_fun
            Nolabel
            None
            pattern (src/name.ml[35,1074+6]..[35,1074+7])
              Ppat_var "s" (src/name.ml[35,1074+6]..[35,1074+7])
            expression (src/name.ml[35,1074+11]..[35,1074+19])
              Pexp_apply
              expression (src/name.ml[35,1074+11]..[35,1074+15])
                Pexp_ident "loop" (src/name.ml[35,1074+11]..[35,1074+15])
              [
                <arg>
                Nolabel
                  expression (src/name.ml[35,1074+16]..[35,1074+17])
                    Pexp_ident "s" (src/name.ml[35,1074+16]..[35,1074+17])
                <arg>
                Nolabel
                  expression (src/name.ml[35,1074+18]..[35,1074+19])
                    Pexp_constant PConst_int (0,None)
              ]
    ]
  structure_item (src/name.ml[37,1095+0]..[45,1351+3])
    Pstr_module
    "Pattern" (src/name.ml[37,1095+7]..[37,1095+14])
      module_expr (src/name.ml[37,1095+17]..[45,1351+3])
        Pmod_structure
        [
          structure_item (src/name.ml[38,1119+2]..[38,1119+57])
            Pstr_type Rec
            [
              type_declaration "t" (src/name.ml[38,1119+7]..[38,1119+8]) (src/name.ml[38,1119+2]..[38,1119+57])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_record
                    [
                      (src/name.ml[38,1119+13]..[38,1119+27])
                        Immutable
                        "name" (src/name.ml[38,1119+13]..[38,1119+17])                        core_type (src/name.ml[38,1119+20]..[38,1119+26])
                          Ptyp_constr "string" (src/name.ml[38,1119+20]..[38,1119+26])
                          []
                      (src/name.ml[38,1119+28]..[38,1119+55])
                        Immutable
                        "dot_suffixes" (src/name.ml[38,1119+28]..[38,1119+40])                        core_type (src/name.ml[38,1119+43]..[38,1119+55])
                          Ptyp_constr "String.Set.t" (src/name.ml[38,1119+43]..[38,1119+55])
                          []
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (src/name.ml[40,1178+2]..[41,1196+67])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[40,1178+6]..[40,1178+10])
                  Ppat_var "make" (src/name.ml[40,1178+6]..[40,1178+10])
                expression (src/name.ml[40,1178+11]..[41,1196+67]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/name.ml[40,1178+11]..[40,1178+15])
                    Ppat_var "name" (src/name.ml[40,1178+11]..[40,1178+15])
                  expression (src/name.ml[41,1196+4]..[41,1196+67])
                    Pexp_record
                    [
                      "name" (src/name.ml[41,1196+6]..[41,1196+10])
                        expression (src/name.ml[41,1196+6]..[41,1196+10]) ghost
                          Pexp_ident "name" (src/name.ml[41,1196+6]..[41,1196+10]) ghost
                      "dot_suffixes" (src/name.ml[41,1196+12]..[41,1196+24])
                        expression (src/name.ml[41,1196+27]..[41,1196+65])
                          Pexp_apply
                          expression (src/name.ml[41,1196+27]..[41,1196+45])
                            Pexp_ident "String.Set.of_list" (src/name.ml[41,1196+27]..[41,1196+45])
                          [
                            <arg>
                            Nolabel
                              expression (src/name.ml[41,1196+46]..[41,1196+65])
                                Pexp_apply
                                expression (src/name.ml[41,1196+47]..[41,1196+59])
                                  Pexp_ident "dot_suffixes" (src/name.ml[41,1196+47]..[41,1196+59])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/name.ml[41,1196+60]..[41,1196+64])
                                      Pexp_ident "name" (src/name.ml[41,1196+60]..[41,1196+64])
                                ]
                          ]
                    ]
                    None
            ]
          structure_item (src/name.ml[43,1265+2]..[43,1265+21])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[43,1265+6]..[43,1265+10])
                  Ppat_var "name" (src/name.ml[43,1265+6]..[43,1265+10])
                expression (src/name.ml[43,1265+11]..[43,1265+21]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/name.ml[43,1265+11]..[43,1265+12])
                    Ppat_var "t" (src/name.ml[43,1265+11]..[43,1265+12])
                  expression (src/name.ml[43,1265+15]..[43,1265+21])
                    Pexp_field
                    expression (src/name.ml[43,1265+15]..[43,1265+16])
                      Pexp_ident "t" (src/name.ml[43,1265+15]..[43,1265+16])
                    "name" (src/name.ml[43,1265+17]..[43,1265+21])
            ]
          structure_item (src/name.ml[44,1287+2]..[44,1287+63])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[44,1287+6]..[44,1287+13])
                  Ppat_var "matches" (src/name.ml[44,1287+6]..[44,1287+13])
                expression (src/name.ml[44,1287+14]..[44,1287+63]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/name.ml[44,1287+14]..[44,1287+15])
                    Ppat_var "t" (src/name.ml[44,1287+14]..[44,1287+15])
                  expression (src/name.ml[44,1287+16]..[44,1287+63]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/name.ml[44,1287+16]..[44,1287+23])
                      Ppat_var "matched" (src/name.ml[44,1287+16]..[44,1287+23])
                    expression (src/name.ml[44,1287+26]..[44,1287+63])
                      Pexp_apply
                      expression (src/name.ml[44,1287+26]..[44,1287+40])
                        Pexp_ident "String.Set.mem" (src/name.ml[44,1287+26]..[44,1287+40])
                      [
                        <arg>
                        Nolabel
                          expression (src/name.ml[44,1287+41]..[44,1287+48])
                            Pexp_ident "matched" (src/name.ml[44,1287+41]..[44,1287+48])
                        <arg>
                        Nolabel
                          expression (src/name.ml[44,1287+49]..[44,1287+63])
                            Pexp_field
                            expression (src/name.ml[44,1287+49]..[44,1287+50])
                              Pexp_ident "t" (src/name.ml[44,1287+49]..[44,1287+50])
                            "dot_suffixes" (src/name.ml[44,1287+51]..[44,1287+63])
                      ]
            ]
        ]
  structure_item (src/name.ml[48,1427+0]..[55,1693+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/name.ml[48,1427+4]..[48,1427+25])
          Ppat_var "split_outer_namespace" (src/name.ml[48,1427+4]..[48,1427+25])
        expression (src/name.ml[48,1427+26]..[55,1693+34]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/name.ml[48,1427+26]..[48,1427+30])
            Ppat_var "name" (src/name.ml[48,1427+26]..[48,1427+30])
          expression (src/name.ml[49,1460+2]..[55,1693+34])
            Pexp_match
            expression (src/name.ml[49,1460+8]..[49,1460+33])
              Pexp_apply
              expression (src/name.ml[49,1460+8]..[49,1460+24])
                Pexp_ident "String.index_opt" (src/name.ml[49,1460+8]..[49,1460+24])
              [
                <arg>
                Nolabel
                  expression (src/name.ml[49,1460+25]..[49,1460+29])
                    Pexp_ident "name" (src/name.ml[49,1460+25]..[49,1460+29])
                <arg>
                Nolabel
                  expression (src/name.ml[49,1460+30]..[49,1460+33])
                    Pexp_constant PConst_char 2e
              ]
            [
              <case>
                pattern (src/name.ml[50,1499+4]..[50,1499+8])
                  Ppat_construct "None" (src/name.ml[50,1499+4]..[50,1499+8])
                  None
                expression (src/name.ml[50,1499+12]..[50,1499+16])
                  Pexp_construct "None" (src/name.ml[50,1499+12]..[50,1499+16])
                  None
              <case>
                pattern (src/name.ml[51,1516+4]..[51,1516+10])
                  Ppat_construct "Some" (src/name.ml[51,1516+4]..[51,1516+8])
                  Some
                    pattern (src/name.ml[51,1516+9]..[51,1516+10])
                      Ppat_var "i" (src/name.ml[51,1516+9]..[51,1516+10])
                expression (src/name.ml[52,1530+6]..[55,1693+34])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/name.ml[52,1530+10]..[52,1530+11])
                        Ppat_var "n" (src/name.ml[52,1530+10]..[52,1530+11])
                      expression (src/name.ml[52,1530+14]..[52,1530+32])
                        Pexp_apply
                        expression (src/name.ml[52,1530+14]..[52,1530+27])
                          Pexp_ident "String.length" (src/name.ml[52,1530+14]..[52,1530+27])
                        [
                          <arg>
                          Nolabel
                            expression (src/name.ml[52,1530+28]..[52,1530+32])
                              Pexp_ident "name" (src/name.ml[52,1530+28]..[52,1530+32])
                        ]
                  ]
                  expression (src/name.ml[53,1566+6]..[55,1693+34])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/name.ml[53,1566+10]..[53,1566+20])
                          Ppat_var "before_dot" (src/name.ml[53,1566+10]..[53,1566+20])
                        expression (src/name.ml[53,1566+23]..[53,1566+52])
                          Pexp_apply
                          expression (src/name.ml[53,1566+23]..[53,1566+33])
                            Pexp_ident "String.sub" (src/name.ml[53,1566+23]..[53,1566+33])
                          [
                            <arg>
                            Nolabel
                              expression (src/name.ml[53,1566+34]..[53,1566+38])
                                Pexp_ident "name" (src/name.ml[53,1566+34]..[53,1566+38])
                            <arg>
                            Labelled "pos"
                              expression (src/name.ml[53,1566+44]..[53,1566+45])
                                Pexp_constant PConst_int (0,None)
                            <arg>
                            Labelled "len"
                              expression (src/name.ml[53,1566+51]..[53,1566+52])
                                Pexp_ident "i" (src/name.ml[53,1566+51]..[53,1566+52])
                          ]
                    ]
                    expression (src/name.ml[54,1622+6]..[55,1693+34])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/name.ml[54,1622+10]..[54,1622+19])
                            Ppat_var "after_dot" (src/name.ml[54,1622+10]..[54,1622+19])
                          expression (src/name.ml[54,1622+22]..[54,1622+67])
                            Pexp_apply
                            expression (src/name.ml[54,1622+22]..[54,1622+32])
                              Pexp_ident "String.sub" (src/name.ml[54,1622+22]..[54,1622+32])
                            [
                              <arg>
                              Nolabel
                                expression (src/name.ml[54,1622+33]..[54,1622+37])
                                  Pexp_ident "name" (src/name.ml[54,1622+33]..[54,1622+37])
                              <arg>
                              Labelled "pos"
                                expression (src/name.ml[54,1622+43]..[54,1622+50])
                                  Pexp_apply
                                  expression (src/name.ml[54,1622+46]..[54,1622+47])
                                    Pexp_ident "+" (src/name.ml[54,1622+46]..[54,1622+47])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/name.ml[54,1622+44]..[54,1622+45])
                                        Pexp_ident "i" (src/name.ml[54,1622+44]..[54,1622+45])
                                    <arg>
                                    Nolabel
                                      expression (src/name.ml[54,1622+48]..[54,1622+49])
                                        Pexp_constant PConst_int (1,None)
                                  ]
                              <arg>
                              Labelled "len"
                                expression (src/name.ml[54,1622+56]..[54,1622+67])
                                  Pexp_apply
                                  expression (src/name.ml[54,1622+63]..[54,1622+64])
                                    Pexp_ident "-" (src/name.ml[54,1622+63]..[54,1622+64])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/name.ml[54,1622+57]..[54,1622+62])
                                        Pexp_apply
                                        expression (src/name.ml[54,1622+59]..[54,1622+60])
                                          Pexp_ident "-" (src/name.ml[54,1622+59]..[54,1622+60])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/name.ml[54,1622+57]..[54,1622+58])
                                              Pexp_ident "n" (src/name.ml[54,1622+57]..[54,1622+58])
                                          <arg>
                                          Nolabel
                                            expression (src/name.ml[54,1622+61]..[54,1622+62])
                                              Pexp_ident "i" (src/name.ml[54,1622+61]..[54,1622+62])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (src/name.ml[54,1622+65]..[54,1622+66])
                                        Pexp_constant PConst_int (1,None)
                                  ]
                            ]
                      ]
                      expression (src/name.ml[55,1693+6]..[55,1693+34])
                        Pexp_construct "Some" (src/name.ml[55,1693+6]..[55,1693+10])
                        Some
                          expression (src/name.ml[55,1693+11]..[55,1693+34])
                            Pexp_tuple
                            [
                              expression (src/name.ml[55,1693+12]..[55,1693+22])
                                Pexp_ident "before_dot" (src/name.ml[55,1693+12]..[55,1693+22])
                              expression (src/name.ml[55,1693+24]..[55,1693+33])
                                Pexp_ident "after_dot" (src/name.ml[55,1693+24]..[55,1693+33])
                            ]
            ]
    ]
  structure_item (src/name.ml[57,1729+0]..[119,3807+3])
    Pstr_module
    "Allowlisted" (src/name.ml[57,1729+7]..[57,1729+18])
      module_expr (src/name.ml[57,1729+21]..[119,3807+3])
        Pmod_structure
        [
          structure_item (src/name.ml[66,2113+2]..[70,2280+50])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[66,2113+6]..[66,2113+16])
                  Ppat_var "create_set" (src/name.ml[66,2113+6]..[66,2113+16])
                expression (src/name.ml[66,2113+17]..[70,2280+50]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/name.ml[66,2113+17]..[66,2113+38])
                    Ppat_var "fully_qualified_names" (src/name.ml[66,2113+17]..[66,2113+38])
                  expression (src/name.ml[67,2154+4]..[70,2280+50])
                    Pexp_apply
                    expression (src/name.ml[67,2154+4]..[67,2154+18])
                      Pexp_ident "List.fold_left" (src/name.ml[67,2154+4]..[67,2154+18])
                    [
                      <arg>
                      Labelled "f"
                        expression (src/name.ml[68,2173+9]..[69,2199+80])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/name.ml[68,2173+14]..[68,2173+17])
                            Ppat_var "acc" (src/name.ml[68,2173+14]..[68,2173+17])
                          expression (src/name.ml[68,2173+18]..[69,2199+79]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/name.ml[68,2173+18]..[68,2173+22])
                              Ppat_var "name" (src/name.ml[68,2173+18]..[68,2173+22])
                            expression (src/name.ml[69,2199+8]..[69,2199+79])
                              Pexp_apply
                              expression (src/name.ml[69,2199+8]..[69,2199+25])
                                Pexp_ident "fold_dot_suffixes" (src/name.ml[69,2199+8]..[69,2199+25])
                              [
                                <arg>
                                Nolabel
                                  expression (src/name.ml[69,2199+26]..[69,2199+30])
                                    Pexp_ident "name" (src/name.ml[69,2199+26]..[69,2199+30])
                                <arg>
                                Labelled "init"
                                  expression (src/name.ml[69,2199+37]..[69,2199+40])
                                    Pexp_ident "acc" (src/name.ml[69,2199+37]..[69,2199+40])
                                <arg>
                                Labelled "f"
                                  expression (src/name.ml[69,2199+44]..[69,2199+79])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (src/name.ml[69,2199+49]..[69,2199+50])
                                      Ppat_var "x" (src/name.ml[69,2199+49]..[69,2199+50])
                                    expression (src/name.ml[69,2199+51]..[69,2199+78]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (src/name.ml[69,2199+51]..[69,2199+54])
                                        Ppat_var "acc" (src/name.ml[69,2199+51]..[69,2199+54])
                                      expression (src/name.ml[69,2199+58]..[69,2199+78])
                                        Pexp_apply
                                        expression (src/name.ml[69,2199+58]..[69,2199+72])
                                          Pexp_ident "String.Set.add" (src/name.ml[69,2199+58]..[69,2199+72])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/name.ml[69,2199+73]..[69,2199+74])
                                              Pexp_ident "x" (src/name.ml[69,2199+73]..[69,2199+74])
                                          <arg>
                                          Nolabel
                                            expression (src/name.ml[69,2199+75]..[69,2199+78])
                                              Pexp_ident "acc" (src/name.ml[69,2199+75]..[69,2199+78])
                                        ]
                              ]
                      <arg>
                      Labelled "init"
                        expression (src/name.ml[70,2280+12]..[70,2280+28])
                          Pexp_ident "String.Set.empty" (src/name.ml[70,2280+12]..[70,2280+28])
                      <arg>
                      Nolabel
                        expression (src/name.ml[70,2280+29]..[70,2280+50])
                          Pexp_ident "fully_qualified_names" (src/name.ml[70,2280+29]..[70,2280+50])
                    ]
            ]
          structure_item (src/name.ml[72,2332+2]..[102,3191+7])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[72,2332+6]..[72,2332+16])
                  Ppat_var "attributes" (src/name.ml[72,2332+6]..[72,2332+16])
                expression (src/name.ml[73,2351+4]..[102,3191+7])
                  Pexp_apply
                  expression (src/name.ml[73,2351+4]..[73,2351+14])
                    Pexp_ident "create_set" (src/name.ml[73,2351+4]..[73,2351+14])
                  [
                    <arg>
                    Nolabel
                      expression (src/name.ml[74,2366+6]..[102,3191+7])
                        Pexp_construct "::" (src/name.ml[75,2374+8]..[102,3191+7]) ghost
                        Some
                          expression (src/name.ml[75,2374+8]..[102,3191+7]) ghost
                            Pexp_tuple
                            [
                              expression (src/name.ml[75,2374+8]..[75,2374+21])
                                Pexp_constant PConst_string("ocaml.alert",(src/name.ml[75,2374+9]..[75,2374+20]),None)
                              expression (src/name.ml[76,2397+8]..[102,3191+7]) ghost
                                Pexp_construct "::" (src/name.ml[76,2397+8]..[102,3191+7]) ghost
                                Some
                                  expression (src/name.ml[76,2397+8]..[102,3191+7]) ghost
                                    Pexp_tuple
                                    [
                                      expression (src/name.ml[76,2397+8]..[76,2397+21])
                                        Pexp_constant PConst_string("ocaml.boxed",(src/name.ml[76,2397+9]..[76,2397+20]),None)
                                      expression (src/name.ml[77,2420+8]..[102,3191+7]) ghost
                                        Pexp_construct "::" (src/name.ml[77,2420+8]..[102,3191+7]) ghost
                                        Some
                                          expression (src/name.ml[77,2420+8]..[102,3191+7]) ghost
                                            Pexp_tuple
                                            [
                                              expression (src/name.ml[77,2420+8]..[77,2420+26])
                                                Pexp_constant PConst_string("ocaml.deprecated",(src/name.ml[77,2420+9]..[77,2420+25]),None)
                                              expression (src/name.ml[78,2448+8]..[102,3191+7]) ghost
                                                Pexp_construct "::" (src/name.ml[78,2448+8]..[102,3191+7]) ghost
                                                Some
                                                  expression (src/name.ml[78,2448+8]..[102,3191+7]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (src/name.ml[78,2448+8]..[78,2448+34])
                                                        Pexp_constant PConst_string("ocaml.deprecated_mutable",(src/name.ml[78,2448+9]..[78,2448+33]),None)
                                                      expression (src/name.ml[79,2484+8]..[102,3191+7]) ghost
                                                        Pexp_construct "::" (src/name.ml[79,2484+8]..[102,3191+7]) ghost
                                                        Some
                                                          expression (src/name.ml[79,2484+8]..[102,3191+7]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (src/name.ml[79,2484+8]..[79,2484+19])
                                                                Pexp_constant PConst_string("ocaml.doc",(src/name.ml[79,2484+9]..[79,2484+18]),None)
                                                              expression (src/name.ml[80,2505+8]..[102,3191+7]) ghost
                                                                Pexp_construct "::" (src/name.ml[80,2505+8]..[102,3191+7]) ghost
                                                                Some
                                                                  expression (src/name.ml[80,2505+8]..[102,3191+7]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (src/name.ml[80,2505+8]..[80,2505+37])
Pexp_constant PConst_string("ocaml.extension_constructor",(src/name.ml[80,2505+9]..[80,2505+36]),None)
                                                                      expression (src/name.ml[81,2544+8]..[102,3191+7]) ghost
Pexp_construct "::" (src/name.ml[81,2544+8]..[102,3191+7]) ghost
Some
  expression (src/name.ml[81,2544+8]..[102,3191+7]) ghost
    Pexp_tuple
    [
      expression (src/name.ml[81,2544+8]..[81,2544+25])
        Pexp_constant PConst_string("ocaml.immediate",(src/name.ml[81,2544+9]..[81,2544+24]),None)
      expression (src/name.ml[82,2571+8]..[102,3191+7]) ghost
        Pexp_construct "::" (src/name.ml[82,2571+8]..[102,3191+7]) ghost
        Some
          expression (src/name.ml[82,2571+8]..[102,3191+7]) ghost
            Pexp_tuple
            [
              expression (src/name.ml[82,2571+8]..[82,2571+27])
                Pexp_constant PConst_string("ocaml.immediate64",(src/name.ml[82,2571+9]..[82,2571+26]),None)
              expression (src/name.ml[83,2600+8]..[102,3191+7]) ghost
                Pexp_construct "::" (src/name.ml[83,2600+8]..[102,3191+7]) ghost
                Some
                  expression (src/name.ml[83,2600+8]..[102,3191+7]) ghost
                    Pexp_tuple
                    [
                      expression (src/name.ml[83,2600+8]..[83,2600+22])
                        Pexp_constant PConst_string("ocaml.inline",(src/name.ml[83,2600+9]..[83,2600+21]),None)
                      expression (src/name.ml[84,2624+8]..[102,3191+7]) ghost
                        Pexp_construct "::" (src/name.ml[84,2624+8]..[102,3191+7]) ghost
                        Some
                          expression (src/name.ml[84,2624+8]..[102,3191+7]) ghost
                            Pexp_tuple
                            [
                              expression (src/name.ml[84,2624+8]..[84,2624+23])
                                Pexp_constant PConst_string("ocaml.inlined",(src/name.ml[84,2624+9]..[84,2624+22]),None)
                              expression (src/name.ml[85,2649+8]..[102,3191+7]) ghost
                                Pexp_construct "::" (src/name.ml[85,2649+8]..[102,3191+7]) ghost
                                Some
                                  expression (src/name.ml[85,2649+8]..[102,3191+7]) ghost
                                    Pexp_tuple
                                    [
                                      expression (src/name.ml[85,2649+8]..[85,2649+21])
                                        Pexp_constant PConst_string("ocaml.local",(src/name.ml[85,2649+9]..[85,2649+20]),None)
                                      expression (src/name.ml[86,2672+8]..[102,3191+7]) ghost
                                        Pexp_construct "::" (src/name.ml[86,2672+8]..[102,3191+7]) ghost
                                        Some
                                          expression (src/name.ml[86,2672+8]..[102,3191+7]) ghost
                                            Pexp_tuple
                                            [
                                              expression (src/name.ml[86,2672+8]..[86,2672+23])
                                                Pexp_constant PConst_string("ocaml.noalloc",(src/name.ml[86,2672+9]..[86,2672+22]),None)
                                              expression (src/name.ml[87,2697+8]..[102,3191+7]) ghost
                                                Pexp_construct "::" (src/name.ml[87,2697+8]..[102,3191+7]) ghost
                                                Some
                                                  expression (src/name.ml[87,2697+8]..[102,3191+7]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (src/name.ml[87,2697+8]..[87,2697+25])
                                                        Pexp_constant PConst_string("ocaml.ppwarning",(src/name.ml[87,2697+9]..[87,2697+24]),None)
                                                      expression (src/name.ml[88,2724+8]..[102,3191+7]) ghost
                                                        Pexp_construct "::" (src/name.ml[88,2724+8]..[102,3191+7]) ghost
                                                        Some
                                                          expression (src/name.ml[88,2724+8]..[102,3191+7]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (src/name.ml[88,2724+8]..[88,2724+30])
                                                                Pexp_constant PConst_string("ocaml.remove_aliases",(src/name.ml[88,2724+9]..[88,2724+29]),None)
                                                              expression (src/name.ml[89,2756+8]..[102,3191+7]) ghost
                                                                Pexp_construct "::" (src/name.ml[89,2756+8]..[102,3191+7]) ghost
                                                                Some
                                                                  expression (src/name.ml[89,2756+8]..[102,3191+7]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (src/name.ml[89,2756+8]..[89,2756+26])
Pexp_constant PConst_string("ocaml.specialise",(src/name.ml[89,2756+9]..[89,2756+25]),None)
                                                                      expression (src/name.ml[90,2784+8]..[102,3191+7]) ghost
Pexp_construct "::" (src/name.ml[90,2784+8]..[102,3191+7]) ghost
Some
  expression (src/name.ml[90,2784+8]..[102,3191+7]) ghost
    Pexp_tuple
    [
      expression (src/name.ml[90,2784+8]..[90,2784+27])
        Pexp_constant PConst_string("ocaml.specialised",(src/name.ml[90,2784+9]..[90,2784+26]),None)
      expression (src/name.ml[91,2813+8]..[102,3191+7]) ghost
        Pexp_construct "::" (src/name.ml[91,2813+8]..[102,3191+7]) ghost
        Some
          expression (src/name.ml[91,2813+8]..[102,3191+7]) ghost
            Pexp_tuple
            [
              expression (src/name.ml[91,2813+8]..[91,2813+24])
                Pexp_constant PConst_string("ocaml.tailcall",(src/name.ml[91,2813+9]..[91,2813+23]),None)
              expression (src/name.ml[92,2839+8]..[102,3191+7]) ghost
                Pexp_construct "::" (src/name.ml[92,2839+8]..[102,3191+7]) ghost
                Some
                  expression (src/name.ml[92,2839+8]..[102,3191+7]) ghost
                    Pexp_tuple
                    [
                      expression (src/name.ml[92,2839+8]..[92,2839+20])
                        Pexp_constant PConst_string("ocaml.text",(src/name.ml[92,2839+9]..[92,2839+19]),None)
                      expression (src/name.ml[93,2861+8]..[102,3191+7]) ghost
                        Pexp_construct "::" (src/name.ml[93,2861+8]..[102,3191+7]) ghost
                        Some
                          expression (src/name.ml[93,2861+8]..[102,3191+7]) ghost
                            Pexp_tuple
                            [
                              expression (src/name.ml[93,2861+8]..[93,2861+23])
                                Pexp_constant PConst_string("ocaml.unboxed",(src/name.ml[93,2861+9]..[93,2861+22]),None)
                              expression (src/name.ml[94,2886+8]..[102,3191+7]) ghost
                                Pexp_construct "::" (src/name.ml[94,2886+8]..[102,3191+7]) ghost
                                Some
                                  expression (src/name.ml[94,2886+8]..[102,3191+7]) ghost
                                    Pexp_tuple
                                    [
                                      expression (src/name.ml[94,2886+8]..[94,2886+22])
                                        Pexp_constant PConst_string("ocaml.unroll",(src/name.ml[94,2886+9]..[94,2886+21]),None)
                                      expression (src/name.ml[95,2910+8]..[102,3191+7]) ghost
                                        Pexp_construct "::" (src/name.ml[95,2910+8]..[102,3191+7]) ghost
                                        Some
                                          expression (src/name.ml[95,2910+8]..[102,3191+7]) ghost
                                            Pexp_tuple
                                            [
                                              expression (src/name.ml[95,2910+8]..[95,2910+24])
                                                Pexp_constant PConst_string("ocaml.unrolled",(src/name.ml[95,2910+9]..[95,2910+23]),None)
                                              expression (src/name.ml[96,2936+8]..[102,3191+7]) ghost
                                                Pexp_construct "::" (src/name.ml[96,2936+8]..[102,3191+7]) ghost
                                                Some
                                                  expression (src/name.ml[96,2936+8]..[102,3191+7]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (src/name.ml[96,2936+8]..[96,2936+24])
                                                        Pexp_constant PConst_string("ocaml.untagged",(src/name.ml[96,2936+9]..[96,2936+23]),None)
                                                      expression (src/name.ml[97,2962+8]..[102,3191+7]) ghost
                                                        Pexp_construct "::" (src/name.ml[97,2962+8]..[102,3191+7]) ghost
                                                        Some
                                                          expression (src/name.ml[97,2962+8]..[102,3191+7]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (src/name.ml[97,2962+8]..[97,2962+39])
                                                                Pexp_constant PConst_string("ocaml.warn_on_literal_pattern",(src/name.ml[97,2962+9]..[97,2962+38]),None)
                                                              expression (src/name.ml[98,3003+8]..[102,3191+7]) ghost
                                                                Pexp_construct "::" (src/name.ml[98,3003+8]..[102,3191+7]) ghost
                                                                Some
                                                                  expression (src/name.ml[98,3003+8]..[102,3191+7]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (src/name.ml[98,3003+8]..[98,3003+25])
Pexp_constant PConst_string("ocaml.warnerror",(src/name.ml[98,3003+9]..[98,3003+24]),None)
                                                                      expression (src/name.ml[99,3030+8]..[102,3191+7]) ghost
Pexp_construct "::" (src/name.ml[99,3030+8]..[102,3191+7]) ghost
Some
  expression (src/name.ml[99,3030+8]..[102,3191+7]) ghost
    Pexp_tuple
    [
      expression (src/name.ml[99,3030+8]..[99,3030+23])
        Pexp_constant PConst_string("ocaml.warning",(src/name.ml[99,3030+9]..[99,3030+22]),None)
      expression (src/name.ml[100,3055+8]..[102,3191+7]) ghost
        Pexp_construct "::" (src/name.ml[100,3055+8]..[102,3191+7]) ghost
        Some
          expression (src/name.ml[100,3055+8]..[102,3191+7]) ghost
            Pexp_tuple
            [
              expression (src/name.ml[100,3055+8]..[100,3055+32])
                Pexp_constant PConst_string("ocaml.toplevel_printer",(src/name.ml[100,3055+9]..[100,3055+31]),None)
              expression (src/name.ml[101,3126+8]..[102,3191+7]) ghost
                Pexp_construct "::" (src/name.ml[101,3126+8]..[102,3191+7]) ghost
                Some
                  expression (src/name.ml[101,3126+8]..[102,3191+7]) ghost
                    Pexp_tuple
                    [
                      expression (src/name.ml[101,3126+8]..[101,3126+26])
                        Pexp_constant PConst_string("toplevel_printer",(src/name.ml[101,3126+9]..[101,3126+25]),None)
                      expression (src/name.ml[102,3191+6]..[102,3191+7]) ghost
                        Pexp_construct "[]" (src/name.ml[102,3191+6]..[102,3191+7]) ghost
                        None
                    ]
            ]
    ]
                                                                    ]
                                                            ]
                                                    ]
                                            ]
                                    ]
                            ]
                    ]
            ]
    ]
                                                                    ]
                                                            ]
                                                    ]
                                            ]
                                    ]
                            ]
                    ]
            ]
    ]
                                                                    ]
                                                            ]
                                                    ]
                                            ]
                                    ]
                            ]
                  ]
            ]
          structure_item (src/name.ml[110,3448+2]..[110,3448+78])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[110,3448+6]..[110,3448+16])
                  Ppat_var "extensions" (src/name.ml[110,3448+6]..[110,3448+16])
                expression (src/name.ml[110,3448+19]..[110,3448+78])
                  Pexp_apply
                  expression (src/name.ml[110,3448+19]..[110,3448+29])
                    Pexp_ident "create_set" (src/name.ml[110,3448+19]..[110,3448+29])
                  [
                    <arg>
                    Nolabel
                      expression (src/name.ml[110,3448+30]..[110,3448+78])
                        Pexp_construct "::" (src/name.ml[110,3448+32]..[110,3448+78]) ghost
                        Some
                          expression (src/name.ml[110,3448+32]..[110,3448+78]) ghost
                            Pexp_tuple
                            [
                              expression (src/name.ml[110,3448+32]..[110,3448+45])
                                Pexp_constant PConst_string("ocaml.error",(src/name.ml[110,3448+33]..[110,3448+44]),None)
                              expression (src/name.ml[110,3448+47]..[110,3448+78]) ghost
                                Pexp_construct "::" (src/name.ml[110,3448+47]..[110,3448+78]) ghost
                                Some
                                  expression (src/name.ml[110,3448+47]..[110,3448+78]) ghost
                                    Pexp_tuple
                                    [
                                      expression (src/name.ml[110,3448+47]..[110,3448+76])
                                        Pexp_constant PConst_string("ocaml.extension_constructor",(src/name.ml[110,3448+48]..[110,3448+75]),None)
                                      expression (src/name.ml[110,3448+77]..[110,3448+78]) ghost
                                        Pexp_construct "[]" (src/name.ml[110,3448+77]..[110,3448+78]) ghost
                                        None
                                    ]
                            ]
                  ]
            ]
          structure_item (src/name.ml[112,3528+2]..[115,3633+50])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[112,3528+6]..[112,3528+20])
                  Ppat_var "is_allowlisted" (src/name.ml[112,3528+6]..[112,3528+20])
                expression (src/name.ml[112,3528+21]..[115,3633+50]) ghost
                  Pexp_fun
                  Labelled "kind"
                  None
                  pattern (src/name.ml[112,3528+22]..[112,3528+26])
                    Ppat_var "kind" (src/name.ml[112,3528+22]..[112,3528+26])
                  expression (src/name.ml[112,3528+27]..[115,3633+50]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/name.ml[112,3528+27]..[112,3528+31])
                      Ppat_var "name" (src/name.ml[112,3528+27]..[112,3528+31])
                    expression (src/name.ml[113,3562+4]..[115,3633+50])
                      Pexp_match
                      expression (src/name.ml[113,3562+10]..[113,3562+14])
                        Pexp_ident "kind" (src/name.ml[113,3562+10]..[113,3562+14])
                      [
                        <case>
                          pattern (src/name.ml[114,3582+6]..[114,3582+16])
                            Ppat_variant "Attribute"
                            None
                          expression (src/name.ml[114,3582+20]..[114,3582+50])
                            Pexp_apply
                            expression (src/name.ml[114,3582+20]..[114,3582+34])
                              Pexp_ident "String.Set.mem" (src/name.ml[114,3582+20]..[114,3582+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/name.ml[114,3582+35]..[114,3582+39])
                                  Pexp_ident "name" (src/name.ml[114,3582+35]..[114,3582+39])
                              <arg>
                              Nolabel
                                expression (src/name.ml[114,3582+40]..[114,3582+50])
                                  Pexp_ident "attributes" (src/name.ml[114,3582+40]..[114,3582+50])
                            ]
                        <case>
                          pattern (src/name.ml[115,3633+6]..[115,3633+16])
                            Ppat_variant "Extension"
                            None
                          expression (src/name.ml[115,3633+20]..[115,3633+50])
                            Pexp_apply
                            expression (src/name.ml[115,3633+20]..[115,3633+34])
                              Pexp_ident "String.Set.mem" (src/name.ml[115,3633+20]..[115,3633+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/name.ml[115,3633+35]..[115,3633+39])
                                  Pexp_ident "name" (src/name.ml[115,3633+35]..[115,3633+39])
                              <arg>
                              Nolabel
                                expression (src/name.ml[115,3633+40]..[115,3633+50])
                                  Pexp_ident "extensions" (src/name.ml[115,3633+40]..[115,3633+50])
                            ]
                      ]
            ]
          structure_item (src/name.ml[117,3685+2]..[117,3685+60])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[117,3685+6]..[117,3685+24])
                  Ppat_var "get_attribute_list" (src/name.ml[117,3685+6]..[117,3685+24])
                expression (src/name.ml[117,3685+25]..[117,3685+60]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/name.ml[117,3685+25]..[117,3685+27])
                    Ppat_construct "()" (src/name.ml[117,3685+25]..[117,3685+27])
                    None
                  expression (src/name.ml[117,3685+30]..[117,3685+60])
                    Pexp_apply
                    expression (src/name.ml[117,3685+30]..[117,3685+49])
                      Pexp_ident "String.Set.elements" (src/name.ml[117,3685+30]..[117,3685+49])
                    [
                      <arg>
                      Nolabel
                        expression (src/name.ml[117,3685+50]..[117,3685+60])
                          Pexp_ident "attributes" (src/name.ml[117,3685+50]..[117,3685+60])
                    ]
            ]
          structure_item (src/name.ml[118,3746+2]..[118,3746+60])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[118,3746+6]..[118,3746+24])
                  Ppat_var "get_extension_list" (src/name.ml[118,3746+6]..[118,3746+24])
                expression (src/name.ml[118,3746+25]..[118,3746+60]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/name.ml[118,3746+25]..[118,3746+27])
                    Ppat_construct "()" (src/name.ml[118,3746+25]..[118,3746+27])
                    None
                  expression (src/name.ml[118,3746+30]..[118,3746+60])
                    Pexp_apply
                    expression (src/name.ml[118,3746+30]..[118,3746+49])
                      Pexp_ident "String.Set.elements" (src/name.ml[118,3746+30]..[118,3746+49])
                    [
                      <arg>
                      Nolabel
                        expression (src/name.ml[118,3746+50]..[118,3746+60])
                          Pexp_ident "extensions" (src/name.ml[118,3746+50]..[118,3746+60])
                    ]
            ]
        ]
  structure_item (src/name.ml[121,3812+0]..[186,6173+3])
    Pstr_module
    "Reserved_namespaces" (src/name.ml[121,3812+7]..[121,3812+26])
      module_expr (src/name.ml[121,3812+29]..[186,6173+3])
        Pmod_structure
        [
          structure_item (src/name.ml[122,3848+2]..[123,3901+55])
            Pstr_type Rec
            [
              type_declaration "reserved" (src/name.ml[122,3848+7]..[122,3848+15]) (src/name.ml[122,3848+2]..[122,3848+52])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/name.ml[122,3848+18]..[122,3848+52])
                      Ptyp_constr "Hashtbl.t" (src/name.ml[122,3848+43]..[122,3848+52])
                      [
                        core_type (src/name.ml[122,3848+19]..[122,3848+25])
                          Ptyp_constr "string" (src/name.ml[122,3848+19]..[122,3848+25])
                          []
                        core_type (src/name.ml[122,3848+27]..[122,3848+41])
                          Ptyp_constr "sub_namespaces" (src/name.ml[122,3848+27]..[122,3848+41])
                          []
                      ]
              type_declaration "sub_namespaces" (src/name.ml[123,3901+6]..[123,3901+20]) (src/name.ml[123,3901+2]..[123,3901+55])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (src/name.ml[123,3901+23]..[123,3901+26])
                        "All" (src/name.ml[123,3901+23]..[123,3901+26])
                        []
                        None
                      (src/name.ml[123,3901+27]..[123,3901+55])
                        "Sub_namespaces" (src/name.ml[123,3901+29]..[123,3901+43])
                        [
                          core_type (src/name.ml[123,3901+47]..[123,3901+55])
                            Ptyp_constr "reserved" (src/name.ml[123,3901+47]..[123,3901+55])
                            []
                        ]
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (src/name.ml[132,4282+2]..[132,4282+55])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[132,4282+6]..[132,4282+21])
                  Ppat_var "create_reserved" (src/name.ml[132,4282+6]..[132,4282+21])
                expression (src/name.ml[132,4282+22]..[132,4282+55]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/name.ml[132,4282+22]..[132,4282+24])
                    Ppat_construct "()" (src/name.ml[132,4282+22]..[132,4282+24])
                    None
                  expression (src/name.ml[132,4282+25]..[132,4282+55]) ghost
                    Pexp_constraint
                    expression (src/name.ml[132,4282+38]..[132,4282+55])
                      Pexp_apply
                      expression (src/name.ml[132,4282+38]..[132,4282+52])
                        Pexp_ident "Hashtbl.create" (src/name.ml[132,4282+38]..[132,4282+52])
                      [
                        <arg>
                        Nolabel
                          expression (src/name.ml[132,4282+53]..[132,4282+55])
                            Pexp_constant PConst_int (16,None)
                      ]
                    core_type (src/name.ml[132,4282+27]..[132,4282+35])
                      Ptyp_constr "reserved" (src/name.ml[132,4282+27]..[132,4282+35])
                      []
            ]
          structure_item (src/name.ml[134,4339+2]..[143,4697+20])
            Pstr_value Rec
            [
              <def>
                pattern (src/name.ml[134,4339+10]..[134,4339+17])
                  Ppat_var "reserve" (src/name.ml[134,4339+10]..[134,4339+17])
                expression (src/name.ml[134,4339+18]..[143,4697+20]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/name.ml[134,4339+18]..[134,4339+20])
                    Ppat_var "ns" (src/name.ml[134,4339+18]..[134,4339+20])
                  expression (src/name.ml[134,4339+21]..[143,4697+20]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/name.ml[134,4339+21]..[134,4339+24])
                      Ppat_var "tbl" (src/name.ml[134,4339+21]..[134,4339+24])
                    expression (src/name.ml[135,4366+4]..[143,4697+20])
                      Pexp_match
                      expression (src/name.ml[135,4366+10]..[135,4366+34])
                        Pexp_apply
                        expression (src/name.ml[135,4366+10]..[135,4366+31])
                          Pexp_ident "split_outer_namespace" (src/name.ml[135,4366+10]..[135,4366+31])
                        [
                          <arg>
                          Nolabel
                            expression (src/name.ml[135,4366+32]..[135,4366+34])
                              Pexp_ident "ns" (src/name.ml[135,4366+32]..[135,4366+34])
                        ]
                      [
                        <case>
                          pattern (src/name.ml[136,4406+6]..[136,4406+10])
                            Ppat_construct "None" (src/name.ml[136,4406+6]..[136,4406+10])
                            None
                          expression (src/name.ml[136,4406+14]..[136,4406+51])
                            Pexp_apply
                            expression (src/name.ml[136,4406+14]..[136,4406+29])
                              Pexp_ident "Hashtbl.add_exn" (src/name.ml[136,4406+14]..[136,4406+29])
                            [
                              <arg>
                              Nolabel
                                expression (src/name.ml[136,4406+30]..[136,4406+33])
                                  Pexp_ident "tbl" (src/name.ml[136,4406+30]..[136,4406+33])
                              <arg>
                              Labelled "key"
                                expression (src/name.ml[136,4406+39]..[136,4406+41])
                                  Pexp_ident "ns" (src/name.ml[136,4406+39]..[136,4406+41])
                              <arg>
                              Labelled "data"
                                expression (src/name.ml[136,4406+48]..[136,4406+51])
                                  Pexp_construct "All" (src/name.ml[136,4406+48]..[136,4406+51])
                                  None
                            ]
                        <case>
                          pattern (src/name.ml[137,4458+6]..[137,4458+30])
                            Ppat_construct "Some" (src/name.ml[137,4458+6]..[137,4458+10])
                            Some
                              pattern (src/name.ml[137,4458+11]..[137,4458+30])
                                Ppat_tuple
                                [
                                  pattern (src/name.ml[137,4458+12]..[137,4458+20])
                                    Ppat_var "outer_ns" (src/name.ml[137,4458+12]..[137,4458+20])
                                  pattern (src/name.ml[137,4458+22]..[137,4458+29])
                                    Ppat_var "rest_ns" (src/name.ml[137,4458+22]..[137,4458+29])
                                ]
                          expression (src/name.ml[137,4458+34]..[143,4697+20])
                            Pexp_match
                            expression (src/name.ml[139,4508+10]..[140,4571+50])
                              Pexp_apply
                              expression (src/name.ml[139,4508+10]..[139,4508+29])
                                Pexp_ident "Hashtbl.find_or_add" (src/name.ml[139,4508+10]..[139,4508+29])
                              [
                                <arg>
                                Nolabel
                                  expression (src/name.ml[139,4508+30]..[139,4508+33])
                                    Pexp_ident "tbl" (src/name.ml[139,4508+30]..[139,4508+33])
                                <arg>
                                Nolabel
                                  expression (src/name.ml[139,4508+34]..[139,4508+42])
                                    Pexp_ident "outer_ns" (src/name.ml[139,4508+34]..[139,4508+42])
                                <arg>
                                Labelled "default"
                                  expression (src/name.ml[139,4508+52]..[140,4571+50])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (src/name.ml[139,4508+57]..[139,4508+59])
                                      Ppat_construct "()" (src/name.ml[139,4508+57]..[139,4508+59])
                                      None
                                    expression (src/name.ml[140,4571+14]..[140,4571+49])
                                      Pexp_construct "Sub_namespaces" (src/name.ml[140,4571+14]..[140,4571+28])
                                      Some
                                        expression (src/name.ml[140,4571+29]..[140,4571+49])
                                          Pexp_apply
                                          expression (src/name.ml[140,4571+30]..[140,4571+45])
                                            Pexp_ident "create_reserved" (src/name.ml[140,4571+30]..[140,4571+45])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/name.ml[140,4571+46]..[140,4571+48])
                                                Pexp_construct "()" (src/name.ml[140,4571+46]..[140,4571+48])
                                                None
                                          ]
                              ]
                            [
                              <case>
                                pattern (src/name.ml[142,4635+10]..[142,4635+33])
                                  Ppat_construct "Sub_namespaces" (src/name.ml[142,4635+10]..[142,4635+24])
                                  Some
                                    pattern (src/name.ml[142,4635+25]..[142,4635+33])
                                      Ppat_var "rest_tbl" (src/name.ml[142,4635+25]..[142,4635+33])
                                expression (src/name.ml[142,4635+37]..[142,4635+61])
                                  Pexp_apply
                                  expression (src/name.ml[142,4635+37]..[142,4635+44])
                                    Pexp_ident "reserve" (src/name.ml[142,4635+37]..[142,4635+44])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/name.ml[142,4635+45]..[142,4635+52])
                                        Pexp_ident "rest_ns" (src/name.ml[142,4635+45]..[142,4635+52])
                                    <arg>
                                    Nolabel
                                      expression (src/name.ml[142,4635+53]..[142,4635+61])
                                        Pexp_ident "rest_tbl" (src/name.ml[142,4635+53]..[142,4635+61])
                                  ]
                              <case>
                                pattern (src/name.ml[143,4697+10]..[143,4697+13])
                                  Ppat_construct "All" (src/name.ml[143,4697+10]..[143,4697+13])
                                  None
                                expression (src/name.ml[143,4697+17]..[143,4697+19])
                                  Pexp_construct "()" (src/name.ml[143,4697+17]..[143,4697+19])
                                  None
                            ]
                      ]
            ]
          structure_item (src/name.ml[145,4719+2]..[156,5114+50])
            Pstr_value Rec
            [
              <def>
                pattern (src/name.ml[145,4719+10]..[145,4719+35])
                  Ppat_var "is_in_reserved_namespaces" (src/name.ml[145,4719+10]..[145,4719+35])
                expression (src/name.ml[145,4719+36]..[156,5114+50]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/name.ml[145,4719+36]..[145,4719+40])
                    Ppat_var "name" (src/name.ml[145,4719+36]..[145,4719+40])
                  expression (src/name.ml[145,4719+41]..[156,5114+50]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/name.ml[145,4719+41]..[145,4719+44])
                      Ppat_var "tbl" (src/name.ml[145,4719+41]..[145,4719+44])
                    expression (src/name.ml[146,4766+4]..[156,5114+50])
                      Pexp_match
                      expression (src/name.ml[146,4766+10]..[146,4766+36])
                        Pexp_apply
                        expression (src/name.ml[146,4766+10]..[146,4766+31])
                          Pexp_ident "split_outer_namespace" (src/name.ml[146,4766+10]..[146,4766+31])
                        [
                          <arg>
                          Nolabel
                            expression (src/name.ml[146,4766+32]..[146,4766+36])
                              Pexp_ident "name" (src/name.ml[146,4766+32]..[146,4766+36])
                        ]
                      [
                        <case>
                          pattern (src/name.ml[147,4808+6]..[147,4808+21])
                            Ppat_construct "Some" (src/name.ml[147,4808+6]..[147,4808+10])
                            Some
                              pattern (src/name.ml[147,4808+11]..[147,4808+21])
                                Ppat_tuple
                                [
                                  pattern (src/name.ml[147,4808+12]..[147,4808+14])
                                    Ppat_var "ns" (src/name.ml[147,4808+12]..[147,4808+14])
                                  pattern (src/name.ml[147,4808+16]..[147,4808+20])
                                    Ppat_var "rest" (src/name.ml[147,4808+16]..[147,4808+20])
                                ]
                          expression (src/name.ml[147,4808+25]..[152,5001+24])
                            Pexp_match
                            expression (src/name.ml[148,4835+14]..[148,4835+37])
                              Pexp_apply
                              expression (src/name.ml[148,4835+14]..[148,4835+30])
                                Pexp_ident "Hashtbl.find_opt" (src/name.ml[148,4835+14]..[148,4835+30])
                              [
                                <arg>
                                Nolabel
                                  expression (src/name.ml[148,4835+31]..[148,4835+34])
                                    Pexp_ident "tbl" (src/name.ml[148,4835+31]..[148,4835+34])
                                <arg>
                                Nolabel
                                  expression (src/name.ml[148,4835+35]..[148,4835+37])
                                    Pexp_ident "ns" (src/name.ml[148,4835+35]..[148,4835+37])
                              ]
                            [
                              <case>
                                pattern (src/name.ml[149,4878+10]..[149,4878+40])
                                  Ppat_construct "Some" (src/name.ml[149,4878+10]..[149,4878+14])
                                  Some
                                    pattern (src/name.ml[149,4878+15]..[149,4878+40])
                                      Ppat_construct "Sub_namespaces" (src/name.ml[149,4878+16]..[149,4878+30])
                                      Some
                                        pattern (src/name.ml[149,4878+31]..[149,4878+39])
                                          Ppat_var "rest_tbl" (src/name.ml[149,4878+31]..[149,4878+39])
                                expression (src/name.ml[150,4922+12]..[150,4922+51])
                                  Pexp_apply
                                  expression (src/name.ml[150,4922+12]..[150,4922+37])
                                    Pexp_ident "is_in_reserved_namespaces" (src/name.ml[150,4922+12]..[150,4922+37])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/name.ml[150,4922+38]..[150,4922+42])
                                        Pexp_ident "rest" (src/name.ml[150,4922+38]..[150,4922+42])
                                    <arg>
                                    Nolabel
                                      expression (src/name.ml[150,4922+43]..[150,4922+51])
                                        Pexp_ident "rest_tbl" (src/name.ml[150,4922+43]..[150,4922+51])
                                  ]
                              <case>
                                pattern (src/name.ml[151,4974+10]..[151,4974+18])
                                  Ppat_construct "Some" (src/name.ml[151,4974+10]..[151,4974+14])
                                  Some
                                    pattern (src/name.ml[151,4974+15]..[151,4974+18])
                                      Ppat_construct "All" (src/name.ml[151,4974+15]..[151,4974+18])
                                      None
                                expression (src/name.ml[151,4974+22]..[151,4974+26])
                                  Pexp_construct "true" (src/name.ml[151,4974+22]..[151,4974+26])
                                  None
                              <case>
                                pattern (src/name.ml[152,5001+10]..[152,5001+14])
                                  Ppat_construct "None" (src/name.ml[152,5001+10]..[152,5001+14])
                                  None
                                expression (src/name.ml[152,5001+18]..[152,5001+23])
                                  Pexp_construct "false" (src/name.ml[152,5001+18]..[152,5001+23])
                                  None
                            ]
                        <case>
                          pattern (src/name.ml[153,5026+6]..[153,5026+10])
                            Ppat_construct "None" (src/name.ml[153,5026+6]..[153,5026+10])
                            None
                          expression (src/name.ml[153,5026+14]..[156,5114+50])
                            Pexp_match
                            expression (src/name.ml[154,5042+14]..[154,5042+39])
                              Pexp_apply
                              expression (src/name.ml[154,5042+14]..[154,5042+30])
                                Pexp_ident "Hashtbl.find_opt" (src/name.ml[154,5042+14]..[154,5042+30])
                              [
                                <arg>
                                Nolabel
                                  expression (src/name.ml[154,5042+31]..[154,5042+34])
                                    Pexp_ident "tbl" (src/name.ml[154,5042+31]..[154,5042+34])
                                <arg>
                                Nolabel
                                  expression (src/name.ml[154,5042+35]..[154,5042+39])
                                    Pexp_ident "name" (src/name.ml[154,5042+35]..[154,5042+39])
                              ]
                            [
                              <case>
                                pattern (src/name.ml[155,5087+10]..[155,5087+18])
                                  Ppat_construct "Some" (src/name.ml[155,5087+10]..[155,5087+14])
                                  Some
                                    pattern (src/name.ml[155,5087+15]..[155,5087+18])
                                      Ppat_construct "All" (src/name.ml[155,5087+15]..[155,5087+18])
                                      None
                                expression (src/name.ml[155,5087+22]..[155,5087+26])
                                  Pexp_construct "true" (src/name.ml[155,5087+22]..[155,5087+26])
                                  None
                              <case>
                                pattern (src/name.ml[156,5114+10]..[156,5114+40])
                                  Ppat_or
                                  pattern (src/name.ml[156,5114+10]..[156,5114+33])
                                    Ppat_construct "Some" (src/name.ml[156,5114+10]..[156,5114+14])
                                    Some
                                      pattern (src/name.ml[156,5114+15]..[156,5114+33])
                                        Ppat_construct "Sub_namespaces" (src/name.ml[156,5114+16]..[156,5114+30])
                                        Some
                                          pattern (src/name.ml[156,5114+31]..[156,5114+32])
                                            Ppat_any
                                  pattern (src/name.ml[156,5114+36]..[156,5114+40])
                                    Ppat_construct "None" (src/name.ml[156,5114+36]..[156,5114+40])
                                    None
                                expression (src/name.ml[156,5114+44]..[156,5114+49])
                                  Pexp_construct "false" (src/name.ml[156,5114+44]..[156,5114+49])
                                  None
                            ]
                      ]
            ]
          structure_item (src/name.ml[158,5166+2]..[158,5166+30])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[158,5166+6]..[158,5166+9])
                  Ppat_var "tbl" (src/name.ml[158,5166+6]..[158,5166+9])
                expression (src/name.ml[158,5166+12]..[158,5166+30])
                  Pexp_apply
                  expression (src/name.ml[158,5166+12]..[158,5166+27])
                    Pexp_ident "create_reserved" (src/name.ml[158,5166+12]..[158,5166+27])
                  [
                    <arg>
                    Nolabel
                      expression (src/name.ml[158,5166+28]..[158,5166+30])
                        Pexp_construct "()" (src/name.ml[158,5166+28]..[158,5166+30])
                        None
                  ]
            ]
          structure_item (src/name.ml[159,5197+2]..[159,5197+33])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[159,5197+6]..[159,5197+13])
                  Ppat_var "reserve" (src/name.ml[159,5197+6]..[159,5197+13])
                expression (src/name.ml[159,5197+14]..[159,5197+33]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/name.ml[159,5197+14]..[159,5197+16])
                    Ppat_var "ns" (src/name.ml[159,5197+14]..[159,5197+16])
                  expression (src/name.ml[159,5197+19]..[159,5197+33])
                    Pexp_apply
                    expression (src/name.ml[159,5197+19]..[159,5197+26])
                      Pexp_ident "reserve" (src/name.ml[159,5197+19]..[159,5197+26])
                    [
                      <arg>
                      Nolabel
                        expression (src/name.ml[159,5197+27]..[159,5197+29])
                          Pexp_ident "ns" (src/name.ml[159,5197+27]..[159,5197+29])
                      <arg>
                      Nolabel
                        expression (src/name.ml[159,5197+30]..[159,5197+33])
                          Pexp_ident "tbl" (src/name.ml[159,5197+30]..[159,5197+33])
                    ]
            ]
          structure_item (src/name.ml[160,5231+2]..[160,5231+73])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[160,5231+6]..[160,5231+31])
                  Ppat_var "is_in_reserved_namespaces" (src/name.ml[160,5231+6]..[160,5231+31])
                expression (src/name.ml[160,5231+32]..[160,5231+73]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/name.ml[160,5231+32]..[160,5231+36])
                    Ppat_var "name" (src/name.ml[160,5231+32]..[160,5231+36])
                  expression (src/name.ml[160,5231+39]..[160,5231+73])
                    Pexp_apply
                    expression (src/name.ml[160,5231+39]..[160,5231+64])
                      Pexp_ident "is_in_reserved_namespaces" (src/name.ml[160,5231+39]..[160,5231+64])
                    [
                      <arg>
                      Nolabel
                        expression (src/name.ml[160,5231+65]..[160,5231+69])
                          Pexp_ident "name" (src/name.ml[160,5231+65]..[160,5231+69])
                      <arg>
                      Nolabel
                        expression (src/name.ml[160,5231+70]..[160,5231+73])
                          Pexp_ident "tbl" (src/name.ml[160,5231+70]..[160,5231+73])
                    ]
            ]
          structure_item (src/name.ml[161,5305+2]..[161,5305+27])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[161,5305+6]..[161,5305+8])
                  Ppat_construct "()" (src/name.ml[161,5305+6]..[161,5305+8])
                  None
                expression (src/name.ml[161,5305+11]..[161,5305+27])
                  Pexp_apply
                  expression (src/name.ml[161,5305+11]..[161,5305+18])
                    Pexp_ident "reserve" (src/name.ml[161,5305+11]..[161,5305+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/name.ml[161,5305+19]..[161,5305+27])
                        Pexp_constant PConst_string("merlin",(src/name.ml[161,5305+20]..[161,5305+26]),None)
                  ]
            ]
          structure_item (src/name.ml[162,5333+2]..[162,5333+27])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[162,5333+6]..[162,5333+8])
                  Ppat_construct "()" (src/name.ml[162,5333+6]..[162,5333+8])
                  None
                expression (src/name.ml[162,5333+11]..[162,5333+27])
                  Pexp_apply
                  expression (src/name.ml[162,5333+11]..[162,5333+18])
                    Pexp_ident "reserve" (src/name.ml[162,5333+11]..[162,5333+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/name.ml[162,5333+19]..[162,5333+27])
                        Pexp_constant PConst_string("reason",(src/name.ml[162,5333+20]..[162,5333+26]),None)
                  ]
            ]
          structure_item (src/name.ml[163,5361+2]..[163,5361+26])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[163,5361+6]..[163,5361+8])
                  Ppat_construct "()" (src/name.ml[163,5361+6]..[163,5361+8])
                  None
                expression (src/name.ml[163,5361+11]..[163,5361+26])
                  Pexp_apply
                  expression (src/name.ml[163,5361+11]..[163,5361+18])
                    Pexp_ident "reserve" (src/name.ml[163,5361+11]..[163,5361+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/name.ml[163,5361+19]..[163,5361+26])
                        Pexp_constant PConst_string("refmt",(src/name.ml[163,5361+20]..[163,5361+25]),None)
                  ]
            ]
          structure_item (src/name.ml[164,5401+2]..[164,5401+23])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[164,5401+6]..[164,5401+8])
                  Ppat_construct "()" (src/name.ml[164,5401+6]..[164,5401+8])
                  None
                expression (src/name.ml[164,5401+11]..[164,5401+23])
                  Pexp_apply
                  expression (src/name.ml[164,5401+11]..[164,5401+18])
                    Pexp_ident "reserve" (src/name.ml[164,5401+11]..[164,5401+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/name.ml[164,5401+19]..[164,5401+23])
                        Pexp_constant PConst_string("ns",(src/name.ml[164,5401+20]..[164,5401+22]),None)
                  ]
            ]
          structure_item (src/name.ml[165,5440+2]..[165,5440+24])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[165,5440+6]..[165,5440+8])
                  Ppat_construct "()" (src/name.ml[165,5440+6]..[165,5440+8])
                  None
                expression (src/name.ml[165,5440+11]..[165,5440+24])
                  Pexp_apply
                  expression (src/name.ml[165,5440+11]..[165,5440+18])
                    Pexp_ident "reserve" (src/name.ml[165,5440+11]..[165,5440+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/name.ml[165,5440+19]..[165,5440+24])
                        Pexp_constant PConst_string("res",(src/name.ml[165,5440+20]..[165,5440+23]),None)
                  ]
            ]
          structure_item (src/name.ml[166,5480+2]..[166,5480+30])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[166,5480+6]..[166,5480+8])
                  Ppat_construct "()" (src/name.ml[166,5480+6]..[166,5480+8])
                  None
                expression (src/name.ml[166,5480+11]..[166,5480+30])
                  Pexp_apply
                  expression (src/name.ml[166,5480+11]..[166,5480+18])
                    Pexp_ident "reserve" (src/name.ml[166,5480+11]..[166,5480+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/name.ml[166,5480+19]..[166,5480+30])
                        Pexp_constant PConst_string("metaocaml",(src/name.ml[166,5480+20]..[166,5480+29]),None)
                  ]
            ]
          structure_item (src/name.ml[167,5511+2]..[167,5511+32])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[167,5511+6]..[167,5511+8])
                  Ppat_construct "()" (src/name.ml[167,5511+6]..[167,5511+8])
                  None
                expression (src/name.ml[167,5511+11]..[167,5511+32])
                  Pexp_apply
                  expression (src/name.ml[167,5511+11]..[167,5511+18])
                    Pexp_ident "reserve" (src/name.ml[167,5511+11]..[167,5511+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/name.ml[167,5511+19]..[167,5511+32])
                        Pexp_constant PConst_string("ocamlformat",(src/name.ml[167,5511+20]..[167,5511+31]),None)
                  ]
            ]
          structure_item (src/name.ml[168,5544+2]..[168,5544+37])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[168,5544+6]..[168,5544+8])
                  Ppat_construct "()" (src/name.ml[168,5544+6]..[168,5544+8])
                  None
                expression (src/name.ml[168,5544+11]..[168,5544+37])
                  Pexp_apply
                  expression (src/name.ml[168,5544+11]..[168,5544+18])
                    Pexp_ident "reserve" (src/name.ml[168,5544+11]..[168,5544+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/name.ml[168,5544+19]..[168,5544+37])
                        Pexp_constant PConst_string("ppxlib.migration",(src/name.ml[168,5544+20]..[168,5544+36]),None)
                  ]
            ]
          structure_item (src/name.ml[170,5583+2]..[185,6155+17])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[170,5583+6]..[170,5583+24])
                  Ppat_var "check_not_reserved" (src/name.ml[170,5583+6]..[170,5583+24])
                expression (src/name.ml[170,5583+25]..[185,6155+17]) ghost
                  Pexp_fun
                  Labelled "kind"
                  None
                  pattern (src/name.ml[170,5583+26]..[170,5583+30])
                    Ppat_var "kind" (src/name.ml[170,5583+26]..[170,5583+30])
                  expression (src/name.ml[170,5583+31]..[185,6155+17]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/name.ml[170,5583+31]..[170,5583+35])
                      Ppat_var "name" (src/name.ml[170,5583+31]..[170,5583+35])
                    expression (src/name.ml[171,5621+4]..[185,6155+17])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/name.ml[171,5621+8]..[171,5621+18])
                            Ppat_tuple
                            [
                              pattern (src/name.ml[171,5621+8]..[171,5621+12])
                                Ppat_var "kind" (src/name.ml[171,5621+8]..[171,5621+12])
                              pattern (src/name.ml[171,5621+14]..[171,5621+18])
                                Ppat_var "list" (src/name.ml[171,5621+14]..[171,5621+18])
                            ]
                          expression (src/name.ml[172,5642+6]..[174,5724+59])
                            Pexp_match
                            expression (src/name.ml[172,5642+12]..[172,5642+16])
                              Pexp_ident "kind" (src/name.ml[172,5642+12]..[172,5642+16])
                            [
                              <case>
                                pattern (src/name.ml[173,5664+8]..[173,5664+18])
                                  Ppat_variant "Attribute"
                                  None
                                expression (src/name.ml[173,5664+22]..[173,5664+59])
                                  Pexp_tuple
                                  [
                                    expression (src/name.ml[173,5664+23]..[173,5664+34])
                                      Pexp_constant PConst_string("attribute",(src/name.ml[173,5664+24]..[173,5664+33]),None)
                                    expression (src/name.ml[173,5664+36]..[173,5664+58])
                                      Pexp_ident "Allowlisted.attributes" (src/name.ml[173,5664+36]..[173,5664+58])
                                  ]
                              <case>
                                pattern (src/name.ml[174,5724+8]..[174,5724+18])
                                  Ppat_variant "Extension"
                                  None
                                expression (src/name.ml[174,5724+22]..[174,5724+59])
                                  Pexp_tuple
                                  [
                                    expression (src/name.ml[174,5724+23]..[174,5724+34])
                                      Pexp_constant PConst_string("extension",(src/name.ml[174,5724+24]..[174,5724+33]),None)
                                    expression (src/name.ml[174,5724+36]..[174,5724+58])
                                      Pexp_ident "Allowlisted.extensions" (src/name.ml[174,5724+36]..[174,5724+58])
                                  ]
                            ]
                      ]
                      expression (src/name.ml[176,5791+4]..[185,6155+17])
                        Pexp_ifthenelse
                        expression (src/name.ml[176,5791+7]..[176,5791+31])
                          Pexp_apply
                          expression (src/name.ml[176,5791+7]..[176,5791+21])
                            Pexp_ident "String.Set.mem" (src/name.ml[176,5791+7]..[176,5791+21])
                          [
                            <arg>
                            Nolabel
                              expression (src/name.ml[176,5791+22]..[176,5791+26])
                                Pexp_ident "name" (src/name.ml[176,5791+22]..[176,5791+26])
                            <arg>
                            Nolabel
                              expression (src/name.ml[176,5791+27]..[176,5791+31])
                                Pexp_ident "list" (src/name.ml[176,5791+27]..[176,5791+31])
                          ]
                        expression (src/name.ml[177,5828+6]..[180,5959+22])
                          Pexp_apply
                          expression (src/name.ml[177,5828+6]..[177,5828+21])
                            Pexp_ident "Printf.ksprintf" (src/name.ml[177,5828+6]..[177,5828+21])
                          [
                            <arg>
                            Nolabel
                              expression (src/name.ml[177,5828+22]..[177,5828+30])
                                Pexp_ident "failwith" (src/name.ml[177,5828+22]..[177,5828+30])
                            <arg>
                            Nolabel
                              expression (src/name.ml[178,5859+8]..[179,5940+18])
                                Pexp_constant PConst_string("Cannot register %s with name '%s' as it matches an %s reserved by the compiler",(src/name.ml[178,5859+9]..[179,5940+17]),None)
                            <arg>
                            Nolabel
                              expression (src/name.ml[180,5959+8]..[180,5959+12])
                                Pexp_ident "kind" (src/name.ml[180,5959+8]..[180,5959+12])
                            <arg>
                            Nolabel
                              expression (src/name.ml[180,5959+13]..[180,5959+17])
                                Pexp_ident "name" (src/name.ml[180,5959+13]..[180,5959+17])
                            <arg>
                            Nolabel
                              expression (src/name.ml[180,5959+18]..[180,5959+22])
                                Pexp_ident "kind" (src/name.ml[180,5959+18]..[180,5959+22])
                          ]
                        Some
                          expression (src/name.ml[181,5982+9]..[185,6155+17])
                            Pexp_ifthenelse
                            expression (src/name.ml[181,5982+12]..[181,5982+42])
                              Pexp_apply
                              expression (src/name.ml[181,5982+12]..[181,5982+37])
                                Pexp_ident "is_in_reserved_namespaces" (src/name.ml[181,5982+12]..[181,5982+37])
                              [
                                <arg>
                                Nolabel
                                  expression (src/name.ml[181,5982+38]..[181,5982+42])
                                    Pexp_ident "name" (src/name.ml[181,5982+38]..[181,5982+42])
                              ]
                            expression (src/name.ml[182,6030+6]..[185,6155+17])
                              Pexp_apply
                              expression (src/name.ml[182,6030+6]..[182,6030+21])
                                Pexp_ident "Printf.ksprintf" (src/name.ml[182,6030+6]..[182,6030+21])
                              [
                                <arg>
                                Nolabel
                                  expression (src/name.ml[182,6030+22]..[182,6030+30])
                                    Pexp_ident "failwith" (src/name.ml[182,6030+22]..[182,6030+30])
                                <arg>
                                Nolabel
                                  expression (src/name.ml[183,6061+8]..[184,6136+18])
                                    Pexp_constant PConst_string("Cannot register %s with name '%s' as its namespace is marked as reserved",(src/name.ml[183,6061+9]..[184,6136+17]),None)
                                <arg>
                                Nolabel
                                  expression (src/name.ml[185,6155+8]..[185,6155+12])
                                    Pexp_ident "kind" (src/name.ml[185,6155+8]..[185,6155+12])
                                <arg>
                                Nolabel
                                  expression (src/name.ml[185,6155+13]..[185,6155+17])
                                    Pexp_ident "name" (src/name.ml[185,6155+13]..[185,6155+17])
                              ]
                            None
            ]
        ]
  structure_item (src/name.ml[188,6178+0]..[190,6256+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/name.ml[188,6178+4]..[188,6178+17])
          Ppat_var "ignore_checks" (src/name.ml[188,6178+4]..[188,6178+17])
        expression (src/name.ml[188,6178+18]..[190,6256+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/name.ml[188,6178+18]..[188,6178+22])
            Ppat_var "name" (src/name.ml[188,6178+18]..[188,6178+22])
          expression (src/name.ml[189,6203+2]..[190,6256+38])
            Pexp_apply
            expression (src/name.ml[190,6256+2]..[190,6256+4])
              Pexp_ident "||" (src/name.ml[190,6256+2]..[190,6256+4])
            [
              <arg>
              Nolabel
                expression (src/name.ml[189,6203+2]..[189,6203+52])
                  Pexp_apply
                  expression (src/name.ml[189,6203+2]..[189,6203+47])
                    Pexp_ident "Reserved_namespaces.is_in_reserved_namespaces" (src/name.ml[189,6203+2]..[189,6203+47])
                  [
                    <arg>
                    Nolabel
                      expression (src/name.ml[189,6203+48]..[189,6203+52])
                        Pexp_ident "name" (src/name.ml[189,6203+48]..[189,6203+52])
                  ]
              <arg>
              Nolabel
                expression (src/name.ml[190,6256+5]..[190,6256+38])
                  Pexp_apply
                  expression (src/name.ml[190,6256+5]..[190,6256+21])
                    Pexp_ident "String.is_prefix" (src/name.ml[190,6256+5]..[190,6256+21])
                  [
                    <arg>
                    Nolabel
                      expression (src/name.ml[190,6256+22]..[190,6256+26])
                        Pexp_ident "name" (src/name.ml[190,6256+22]..[190,6256+26])
                    <arg>
                    Labelled "prefix"
                      expression (src/name.ml[190,6256+35]..[190,6256+38])
                        Pexp_constant PConst_string("_",(src/name.ml[190,6256+36]..[190,6256+37]),None)
                  ]
            ]
    ]
  structure_item (src/name.ml[192,6296+0]..[326,11361+3])
    Pstr_module
    "Registrar" (src/name.ml[192,6296+7]..[192,6296+16])
      module_expr (src/name.ml[192,6296+19]..[326,11361+3])
        Pmod_structure
        [
          structure_item (src/name.ml[193,6322+2]..[193,6322+77])
            Pstr_type Rec
            [
              type_declaration "element" (src/name.ml[193,6322+7]..[193,6322+14]) (src/name.ml[193,6322+2]..[193,6322+77])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_record
                    [
                      (src/name.ml[193,6322+19]..[193,6322+49])
                        Immutable
                        "fully_qualified_name" (src/name.ml[193,6322+19]..[193,6322+39])                        core_type (src/name.ml[193,6322+42]..[193,6322+48])
                          Ptyp_constr "string" (src/name.ml[193,6322+42]..[193,6322+48])
                          []
                      (src/name.ml[193,6322+50]..[193,6322+75])
                        Immutable
                        "declared_at" (src/name.ml[193,6322+50]..[193,6322+61])                        core_type (src/name.ml[193,6322+64]..[193,6322+75])
                          Ptyp_constr "Caller_id.t" (src/name.ml[193,6322+64]..[193,6322+75])
                          []
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (src/name.ml[194,6400+2]..[194,6400+63])
            Pstr_type Rec
            [
              type_declaration "all_for_context" (src/name.ml[194,6400+7]..[194,6400+22]) (src/name.ml[194,6400+2]..[194,6400+63])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_record
                    [
                      (src/name.ml[194,6400+27]..[194,6400+61])
                        Mutable
                        "all" (src/name.ml[194,6400+35]..[194,6400+38])                        core_type (src/name.ml[194,6400+41]..[194,6400+61])
                          Ptyp_constr "String.Map.t" (src/name.ml[194,6400+49]..[194,6400+61])
                          [
                            core_type (src/name.ml[194,6400+41]..[194,6400+48])
                              Ptyp_constr "element" (src/name.ml[194,6400+41]..[194,6400+48])
                              []
                          ]
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (src/name.ml[196,6465+2]..[201,6623+3])
            Pstr_type Rec
            [
              type_declaration "t" (src/name.ml[196,6465+10]..[196,6465+11]) (src/name.ml[196,6465+2]..[201,6623+3])
                ptype_params =
                  [
                    core_type (src/name.ml[196,6465+7]..[196,6465+9])
                      Ptyp_var a
                  ]
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_record
                    [
                      (src/name.ml[197,6481+4]..[197,6481+53])
                        Immutable
                        "all_by_context" (src/name.ml[197,6481+4]..[197,6481+18])                        core_type (src/name.ml[197,6481+21]..[197,6481+52])
                          Ptyp_constr "Hashtbl.t" (src/name.ml[197,6481+43]..[197,6481+52])
                          [
                            core_type (src/name.ml[197,6481+22]..[197,6481+24])
                              Ptyp_var a
                            core_type (src/name.ml[197,6481+26]..[197,6481+41])
                              Ptyp_constr "all_for_context" (src/name.ml[197,6481+26]..[197,6481+41])
                              []
                          ]
                      (src/name.ml[198,6535+4]..[198,6535+23])
                        Immutable
                        "skip" (src/name.ml[198,6535+4]..[198,6535+8])                        core_type (src/name.ml[198,6535+11]..[198,6535+22])
                          Ptyp_constr "list" (src/name.ml[198,6535+18]..[198,6535+22])
                          [
                            core_type (src/name.ml[198,6535+11]..[198,6535+17])
                              Ptyp_constr "string" (src/name.ml[198,6535+11]..[198,6535+17])
                              []
                          ]
                      (src/name.ml[199,6559+4]..[199,6559+18])
                        Immutable
                        "kind" (src/name.ml[199,6559+4]..[199,6559+8])                        core_type (src/name.ml[199,6559+11]..[199,6559+17])
                          Ptyp_constr "string" (src/name.ml[199,6559+11]..[199,6559+17])
                          []
                      (src/name.ml[200,6578+4]..[200,6578+44])
                        Immutable
                        "string_of_context" (src/name.ml[200,6578+4]..[200,6578+21])                        core_type (src/name.ml[200,6578+24]..[200,6578+43])
                          Ptyp_arrow
                          Nolabel
                          core_type (src/name.ml[200,6578+24]..[200,6578+26])
                            Ptyp_var a
                          core_type (src/name.ml[200,6578+30]..[200,6578+43])
                            Ptyp_constr "option" (src/name.ml[200,6578+37]..[200,6578+43])
                            [
                              core_type (src/name.ml[200,6578+30]..[200,6578+36])
                                Ptyp_constr "string" (src/name.ml[200,6578+30]..[200,6578+36])
                                []
                            ]
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (src/name.ml[203,6628+2]..[209,6808+5])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[203,6628+6]..[203,6628+12])
                  Ppat_var "create" (src/name.ml[203,6628+6]..[203,6628+12])
                expression (src/name.ml[203,6628+13]..[209,6808+5]) ghost
                  Pexp_fun
                  Labelled "kind"
                  None
                  pattern (src/name.ml[203,6628+14]..[203,6628+18])
                    Ppat_var "kind" (src/name.ml[203,6628+14]..[203,6628+18])
                  expression (src/name.ml[203,6628+19]..[209,6808+5]) ghost
                    Pexp_fun
                    Labelled "current_file"
                    None
                    pattern (src/name.ml[203,6628+20]..[203,6628+32])
                      Ppat_var "current_file" (src/name.ml[203,6628+20]..[203,6628+32])
                    expression (src/name.ml[203,6628+33]..[209,6808+5]) ghost
                      Pexp_fun
                      Labelled "string_of_context"
                      None
                      pattern (src/name.ml[203,6628+34]..[203,6628+51])
                        Ppat_var "string_of_context" (src/name.ml[203,6628+34]..[203,6628+51])
                      expression (src/name.ml[204,6682+4]..[209,6808+5])
                        Pexp_record
                        [
                          "all_by_context" (src/name.ml[205,6688+6]..[205,6688+20])
                            expression (src/name.ml[205,6688+23]..[205,6688+40])
                              Pexp_apply
                              expression (src/name.ml[205,6688+23]..[205,6688+37])
                                Pexp_ident "Hashtbl.create" (src/name.ml[205,6688+23]..[205,6688+37])
                              [
                                <arg>
                                Nolabel
                                  expression (src/name.ml[205,6688+38]..[205,6688+40])
                                    Pexp_constant PConst_int (16,None)
                              ]
                          "skip" (src/name.ml[206,6730+6]..[206,6730+10])
                            expression (src/name.ml[206,6730+13]..[206,6730+39])
                              Pexp_construct "::" (src/name.ml[206,6730+15]..[206,6730+39]) ghost
                              Some
                                expression (src/name.ml[206,6730+15]..[206,6730+39]) ghost
                                  Pexp_tuple
                                  [
                                    expression (src/name.ml[206,6730+15]..[206,6730+27])
                                      Pexp_ident "current_file" (src/name.ml[206,6730+15]..[206,6730+27])
                                    expression (src/name.ml[206,6730+29]..[206,6730+39]) ghost
                                      Pexp_construct "::" (src/name.ml[206,6730+29]..[206,6730+39]) ghost
                                      Some
                                        expression (src/name.ml[206,6730+29]..[206,6730+39]) ghost
                                          Pexp_tuple
                                          [
                                            expression (src/name.ml[206,6730+29]..[206,6730+37])
                                              Pexp_ident "__FILE__" (src/name.ml[206,6730+29]..[206,6730+37])
                                            expression (src/name.ml[206,6730+38]..[206,6730+39]) ghost
                                              Pexp_construct "[]" (src/name.ml[206,6730+38]..[206,6730+39]) ghost
                                              None
                                          ]
                                  ]
                          "kind" (src/name.ml[207,6771+6]..[207,6771+10])
                            expression (src/name.ml[207,6771+6]..[207,6771+10]) ghost
                              Pexp_ident "kind" (src/name.ml[207,6771+6]..[207,6771+10]) ghost
                          "string_of_context" (src/name.ml[208,6783+6]..[208,6783+23])
                            expression (src/name.ml[208,6783+6]..[208,6783+23]) ghost
                              Pexp_ident "string_of_context" (src/name.ml[208,6783+6]..[208,6783+23]) ghost
                        ]
                        None
            ]
          structure_item (src/name.ml[211,6815+2]..[213,6922+35])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[211,6815+6]..[211,6815+25])
                  Ppat_var "get_all_for_context" (src/name.ml[211,6815+6]..[211,6815+25])
                expression (src/name.ml[211,6815+26]..[213,6922+35]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/name.ml[211,6815+26]..[211,6815+27])
                    Ppat_var "t" (src/name.ml[211,6815+26]..[211,6815+27])
                  expression (src/name.ml[211,6815+28]..[213,6922+35]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/name.ml[211,6815+28]..[211,6815+35])
                      Ppat_var "context" (src/name.ml[211,6815+28]..[211,6815+35])
                    expression (src/name.ml[212,6853+4]..[213,6922+35])
                      Pexp_apply
                      expression (src/name.ml[212,6853+4]..[212,6853+23])
                        Pexp_ident "Hashtbl.find_or_add" (src/name.ml[212,6853+4]..[212,6853+23])
                      [
                        <arg>
                        Nolabel
                          expression (src/name.ml[212,6853+24]..[212,6853+40])
                            Pexp_field
                            expression (src/name.ml[212,6853+24]..[212,6853+25])
                              Pexp_ident "t" (src/name.ml[212,6853+24]..[212,6853+25])
                            "all_by_context" (src/name.ml[212,6853+26]..[212,6853+40])
                        <arg>
                        Nolabel
                          expression (src/name.ml[212,6853+41]..[212,6853+48])
                            Pexp_ident "context" (src/name.ml[212,6853+41]..[212,6853+48])
                        <arg>
                        Labelled "default"
                          expression (src/name.ml[212,6853+58]..[213,6922+35])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/name.ml[212,6853+63]..[212,6853+65])
                              Ppat_construct "()" (src/name.ml[212,6853+63]..[212,6853+65])
                              None
                            expression (src/name.ml[213,6922+8]..[213,6922+34])
                              Pexp_record
                              [
                                "all" (src/name.ml[213,6922+10]..[213,6922+13])
                                  expression (src/name.ml[213,6922+16]..[213,6922+32])
                                    Pexp_ident "String.Map.empty" (src/name.ml[213,6922+16]..[213,6922+32])
                              ]
                              None
                      ]
            ]
          structure_item (src/name.ml[215,6959+2]..[234,7732+37])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[215,6959+6]..[215,6959+28])
                  Ppat_var "check_collisions_local" (src/name.ml[215,6959+6]..[215,6959+28])
                expression (src/name.ml[215,6959+29]..[234,7732+37]) ghost
                  Pexp_fun
                  Labelled "caller"
                  None
                  pattern (src/name.ml[215,6959+30]..[215,6959+36])
                    Ppat_var "caller" (src/name.ml[215,6959+30]..[215,6959+36])
                  expression (src/name.ml[215,6959+37]..[234,7732+37]) ghost
                    Pexp_fun
                    Labelled "all_for_context"
                    None
                    pattern (src/name.ml[215,6959+38]..[215,6959+53])
                      Ppat_var "all_for_context" (src/name.ml[215,6959+38]..[215,6959+53])
                    expression (src/name.ml[215,6959+54]..[234,7732+37]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/name.ml[215,6959+54]..[215,6959+55])
                        Ppat_var "t" (src/name.ml[215,6959+54]..[215,6959+55])
                      expression (src/name.ml[215,6959+56]..[234,7732+37]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/name.ml[215,6959+56]..[215,6959+63])
                          Ppat_var "context" (src/name.ml[215,6959+56]..[215,6959+63])
                        expression (src/name.ml[215,6959+64]..[234,7732+37]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/name.ml[215,6959+64]..[215,6959+68])
                            Ppat_var "name" (src/name.ml[215,6959+64]..[215,6959+68])
                          expression (src/name.ml[216,7030+4]..[234,7732+37])
                            Pexp_match
                            expression (src/name.ml[216,7030+10]..[216,7030+54])
                              Pexp_apply
                              expression (src/name.ml[216,7030+10]..[216,7030+29])
                                Pexp_ident "String.Map.find_opt" (src/name.ml[216,7030+10]..[216,7030+29])
                              [
                                <arg>
                                Nolabel
                                  expression (src/name.ml[216,7030+30]..[216,7030+34])
                                    Pexp_ident "name" (src/name.ml[216,7030+30]..[216,7030+34])
                                <arg>
                                Nolabel
                                  expression (src/name.ml[216,7030+35]..[216,7030+54])
                                    Pexp_field
                                    expression (src/name.ml[216,7030+35]..[216,7030+50])
                                      Pexp_ident "all_for_context" (src/name.ml[216,7030+35]..[216,7030+50])
                                    "all" (src/name.ml[216,7030+51]..[216,7030+54])
                              ]
                            [
                              <case>
                                pattern (src/name.ml[217,7090+6]..[217,7090+10])
                                  Ppat_construct "None" (src/name.ml[217,7090+6]..[217,7090+10])
                                  None
                                expression (src/name.ml[217,7090+14]..[217,7090+16])
                                  Pexp_construct "()" (src/name.ml[217,7090+14]..[217,7090+16])
                                  None
                              <case>
                                pattern (src/name.ml[218,7107+6]..[218,7107+12])
                                  Ppat_construct "Some" (src/name.ml[218,7107+6]..[218,7107+10])
                                  Some
                                    pattern (src/name.ml[218,7107+11]..[218,7107+12])
                                      Ppat_var "e" (src/name.ml[218,7107+11]..[218,7107+12])
                                expression (src/name.ml[219,7123+8]..[234,7732+37])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/name.ml[219,7123+12]..[219,7123+23])
                                        Ppat_var "declared_at" (src/name.ml[219,7123+12]..[219,7123+23])
                                      expression (src/name.ml[219,7123+26]..[222,7234+78])
                                        Pexp_function
                                        [
                                          <case>
                                            pattern (src/name.ml[220,7158+12]..[220,7158+16])
                                              Ppat_construct "None" (src/name.ml[220,7158+12]..[220,7158+16])
                                              None
                                            expression (src/name.ml[220,7158+20]..[220,7158+22])
                                              Pexp_constant PConst_string("",(src/name.ml[220,7158+21]..[220,7158+21]),None)
                                          <case>
                                            pattern (src/name.ml[221,7181+12]..[221,7181+49])
                                              Ppat_construct "Some" (src/name.ml[221,7181+12]..[221,7181+16])
                                              Some
                                                pattern (src/name.ml[221,7181+17]..[221,7181+49])
                                                  Ppat_constraint
                                                  pattern (src/name.ml[221,7181+18]..[221,7181+21])
                                                    Ppat_var "loc" (src/name.ml[221,7181+18]..[221,7181+21])
                                                  core_type (src/name.ml[221,7181+24]..[221,7181+48])
                                                    Ptyp_constr "Stdlib.Printexc.location" (src/name.ml[221,7181+24]..[221,7181+48])
                                                    []
                                            expression (src/name.ml[222,7234+14]..[222,7234+78])
                                              Pexp_apply
                                              expression (src/name.ml[222,7234+14]..[222,7234+28])
                                                Pexp_ident "Printf.sprintf" (src/name.ml[222,7234+14]..[222,7234+28])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/name.ml[222,7234+29]..[222,7234+49])
                                                    Pexp_constant PConst_string(" declared at %s:%d",(src/name.ml[222,7234+30]..[222,7234+48]),None)
                                                <arg>
                                                Nolabel
                                                  expression (src/name.ml[222,7234+50]..[222,7234+62])
                                                    Pexp_field
                                                    expression (src/name.ml[222,7234+50]..[222,7234+53])
                                                      Pexp_ident "loc" (src/name.ml[222,7234+50]..[222,7234+53])
                                                    "filename" (src/name.ml[222,7234+54]..[222,7234+62])
                                                <arg>
                                                Nolabel
                                                  expression (src/name.ml[222,7234+63]..[222,7234+78])
                                                    Pexp_field
                                                    expression (src/name.ml[222,7234+63]..[222,7234+66])
                                                      Pexp_ident "loc" (src/name.ml[222,7234+63]..[222,7234+66])
                                                    "line_number" (src/name.ml[222,7234+67]..[222,7234+78])
                                              ]
                                        ]
                                  ]
                                  expression (src/name.ml[224,7324+8]..[234,7732+37])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/name.ml[224,7324+12]..[224,7324+19])
                                          Ppat_var "context" (src/name.ml[224,7324+12]..[224,7324+19])
                                        expression (src/name.ml[225,7346+10]..[227,7418+38])
                                          Pexp_match
                                          expression (src/name.ml[225,7346+16]..[225,7346+43])
                                            Pexp_apply
                                            expression (src/name.ml[225,7346+16]..[225,7346+35])
                                              Pexp_field
                                              expression (src/name.ml[225,7346+16]..[225,7346+17])
                                                Pexp_ident "t" (src/name.ml[225,7346+16]..[225,7346+17])
                                              "string_of_context" (src/name.ml[225,7346+18]..[225,7346+35])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/name.ml[225,7346+36]..[225,7346+43])
                                                  Pexp_ident "context" (src/name.ml[225,7346+36]..[225,7346+43])
                                            ]
                                          [
                                            <case>
                                              pattern (src/name.ml[226,7395+12]..[226,7395+16])
                                                Ppat_construct "None" (src/name.ml[226,7395+12]..[226,7395+16])
                                                None
                                              expression (src/name.ml[226,7395+20]..[226,7395+22])
                                                Pexp_constant PConst_string("",(src/name.ml[226,7395+21]..[226,7395+21]),None)
                                            <case>
                                              pattern (src/name.ml[227,7418+12]..[227,7418+18])
                                                Ppat_construct "Some" (src/name.ml[227,7418+12]..[227,7418+16])
                                                Some
                                                  pattern (src/name.ml[227,7418+17]..[227,7418+18])
                                                    Ppat_var "s" (src/name.ml[227,7418+17]..[227,7418+18])
                                              expression (src/name.ml[227,7418+22]..[227,7418+38])
                                                Pexp_apply
                                                expression (src/name.ml[227,7418+29]..[227,7418+30])
                                                  Pexp_ident "^" (src/name.ml[227,7418+29]..[227,7418+30])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/name.ml[227,7418+22]..[227,7418+28])
                                                      Pexp_constant PConst_string(" on ",(src/name.ml[227,7418+23]..[227,7418+27]),None)
                                                  <arg>
                                                  Nolabel
                                                    expression (src/name.ml[227,7418+31]..[227,7418+38])
                                                      Pexp_apply
                                                      expression (src/name.ml[227,7418+33]..[227,7418+34])
                                                        Pexp_ident "^" (src/name.ml[227,7418+33]..[227,7418+34])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/name.ml[227,7418+31]..[227,7418+32])
                                                            Pexp_ident "s" (src/name.ml[227,7418+31]..[227,7418+32])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/name.ml[227,7418+35]..[227,7418+38])
                                                            Pexp_constant PConst_string("s",(src/name.ml[227,7418+36]..[227,7418+37]),None)
                                                      ]
                                                ]
                                          ]
                                    ]
                                    expression (src/name.ml[229,7468+8]..[234,7732+37])
                                      Pexp_apply
                                      expression (src/name.ml[229,7468+8]..[229,7468+23])
                                        Pexp_ident "Printf.ksprintf" (src/name.ml[229,7468+8]..[229,7468+23])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/name.ml[229,7468+24]..[229,7468+32])
                                            Pexp_ident "failwith" (src/name.ml[229,7468+24]..[229,7468+32])
                                        <arg>
                                        Nolabel
                                          expression (src/name.ml[230,7501+10]..[231,7576+38])
                                            Pexp_constant PConst_string("Some ppx-es tried to register conflicting transformations: %s '%s'%s%s matches %s '%s'%s",(src/name.ml[230,7501+11]..[231,7576+37]),None)
                                        <arg>
                                        Nolabel
                                          expression (src/name.ml[232,7615+10]..[232,7615+42])
                                            Pexp_apply
                                            expression (src/name.ml[232,7615+11]..[232,7615+34])
                                              Pexp_ident "String.capitalize_ascii" (src/name.ml[232,7615+11]..[232,7615+34])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/name.ml[232,7615+35]..[232,7615+41])
                                                  Pexp_field
                                                  expression (src/name.ml[232,7615+35]..[232,7615+36])
                                                    Pexp_ident "t" (src/name.ml[232,7615+35]..[232,7615+36])
                                                  "kind" (src/name.ml[232,7615+37]..[232,7615+41])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (src/name.ml[233,7658+10]..[233,7658+14])
                                            Pexp_ident "name" (src/name.ml[233,7658+10]..[233,7658+14])
                                        <arg>
                                        Nolabel
                                          expression (src/name.ml[233,7658+15]..[233,7658+22])
                                            Pexp_ident "context" (src/name.ml[233,7658+15]..[233,7658+22])
                                        <arg>
                                        Nolabel
                                          expression (src/name.ml[233,7658+23]..[233,7658+43])
                                            Pexp_apply
                                            expression (src/name.ml[233,7658+24]..[233,7658+35])
                                              Pexp_ident "declared_at" (src/name.ml[233,7658+24]..[233,7658+35])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/name.ml[233,7658+36]..[233,7658+42])
                                                  Pexp_ident "caller" (src/name.ml[233,7658+36]..[233,7658+42])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (src/name.ml[233,7658+44]..[233,7658+50])
                                            Pexp_field
                                            expression (src/name.ml[233,7658+44]..[233,7658+45])
                                              Pexp_ident "t" (src/name.ml[233,7658+44]..[233,7658+45])
                                            "kind" (src/name.ml[233,7658+46]..[233,7658+50])
                                        <arg>
                                        Nolabel
                                          expression (src/name.ml[233,7658+51]..[233,7658+73])
                                            Pexp_field
                                            expression (src/name.ml[233,7658+51]..[233,7658+52])
                                              Pexp_ident "e" (src/name.ml[233,7658+51]..[233,7658+52])
                                            "fully_qualified_name" (src/name.ml[233,7658+53]..[233,7658+73])
                                        <arg>
                                        Nolabel
                                          expression (src/name.ml[234,7732+10]..[234,7732+37])
                                            Pexp_apply
                                            expression (src/name.ml[234,7732+11]..[234,7732+22])
                                              Pexp_ident "declared_at" (src/name.ml[234,7732+11]..[234,7732+22])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/name.ml[234,7732+23]..[234,7732+36])
                                                  Pexp_field
                                                  expression (src/name.ml[234,7732+23]..[234,7732+24])
                                                    Pexp_ident "e" (src/name.ml[234,7732+23]..[234,7732+24])
                                                  "declared_at" (src/name.ml[234,7732+25]..[234,7732+36])
                                            ]
                                      ]
                            ]
            ]
          structure_item (src/name.ml[236,7771+2]..[239,7917+66])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[236,7771+6]..[236,7771+22])
                  Ppat_var "check_collisions" (src/name.ml[236,7771+6]..[236,7771+22])
                expression (src/name.ml[236,7771+23]..[239,7917+66]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/name.ml[236,7771+23]..[236,7771+24])
                    Ppat_var "t" (src/name.ml[236,7771+23]..[236,7771+24])
                  expression (src/name.ml[236,7771+25]..[239,7917+66]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/name.ml[236,7771+25]..[236,7771+32])
                      Ppat_var "context" (src/name.ml[236,7771+25]..[236,7771+32])
                    expression (src/name.ml[236,7771+33]..[239,7917+66]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/name.ml[236,7771+33]..[236,7771+37])
                        Ppat_var "name" (src/name.ml[236,7771+33]..[236,7771+37])
                      expression (src/name.ml[237,7811+4]..[239,7917+66])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/name.ml[237,7811+8]..[237,7811+14])
                              Ppat_var "caller" (src/name.ml[237,7811+8]..[237,7811+14])
                            expression (src/name.ml[237,7811+17]..[237,7811+43])
                              Pexp_apply
                              expression (src/name.ml[237,7811+17]..[237,7811+30])
                                Pexp_ident "Caller_id.get" (src/name.ml[237,7811+17]..[237,7811+30])
                              [
                                <arg>
                                Labelled "skip"
                                  expression (src/name.ml[237,7811+37]..[237,7811+43])
                                    Pexp_field
                                    expression (src/name.ml[237,7811+37]..[237,7811+38])
                                      Pexp_ident "t" (src/name.ml[237,7811+37]..[237,7811+38])
                                    "skip" (src/name.ml[237,7811+39]..[237,7811+43])
                              ]
                        ]
                        expression (src/name.ml[238,7858+4]..[239,7917+66])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/name.ml[238,7858+8]..[238,7858+23])
                                Ppat_var "all_for_context" (src/name.ml[238,7858+8]..[238,7858+23])
                              expression (src/name.ml[238,7858+26]..[238,7858+55])
                                Pexp_apply
                                expression (src/name.ml[238,7858+26]..[238,7858+45])
                                  Pexp_ident "get_all_for_context" (src/name.ml[238,7858+26]..[238,7858+45])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/name.ml[238,7858+46]..[238,7858+47])
                                      Pexp_ident "t" (src/name.ml[238,7858+46]..[238,7858+47])
                                  <arg>
                                  Nolabel
                                    expression (src/name.ml[238,7858+48]..[238,7858+55])
                                      Pexp_ident "context" (src/name.ml[238,7858+48]..[238,7858+55])
                                ]
                          ]
                          expression (src/name.ml[239,7917+4]..[239,7917+66])
                            Pexp_apply
                            expression (src/name.ml[239,7917+4]..[239,7917+26])
                              Pexp_ident "check_collisions_local" (src/name.ml[239,7917+4]..[239,7917+26])
                            [
                              <arg>
                              Labelled "caller"
                                expression (src/name.ml[239,7917+28]..[239,7917+34])
                                  Pexp_ident "caller" (src/name.ml[239,7917+28]..[239,7917+34])
                              <arg>
                              Labelled "all_for_context"
                                expression (src/name.ml[239,7917+36]..[239,7917+51])
                                  Pexp_ident "all_for_context" (src/name.ml[239,7917+36]..[239,7917+51])
                              <arg>
                              Nolabel
                                expression (src/name.ml[239,7917+52]..[239,7917+53])
                                  Pexp_ident "t" (src/name.ml[239,7917+52]..[239,7917+53])
                              <arg>
                              Nolabel
                                expression (src/name.ml[239,7917+54]..[239,7917+61])
                                  Pexp_ident "context" (src/name.ml[239,7917+54]..[239,7917+61])
                              <arg>
                              Nolabel
                                expression (src/name.ml[239,7917+62]..[239,7917+66])
                                  Pexp_ident "name" (src/name.ml[239,7917+62]..[239,7917+66])
                            ]
            ]
          structure_item (src/name.ml[241,7985+2]..[249,8391+36])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[241,7985+6]..[241,7985+14])
                  Ppat_var "register" (src/name.ml[241,7985+6]..[241,7985+14])
                expression (src/name.ml[241,7985+15]..[249,8391+36]) ghost
                  Pexp_fun
                  Labelled "kind"
                  None
                  pattern (src/name.ml[241,7985+16]..[241,7985+20])
                    Ppat_var "kind" (src/name.ml[241,7985+16]..[241,7985+20])
                  expression (src/name.ml[241,7985+21]..[249,8391+36]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/name.ml[241,7985+21]..[241,7985+22])
                      Ppat_var "t" (src/name.ml[241,7985+21]..[241,7985+22])
                    expression (src/name.ml[241,7985+23]..[249,8391+36]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/name.ml[241,7985+23]..[241,7985+30])
                        Ppat_var "context" (src/name.ml[241,7985+23]..[241,7985+30])
                      expression (src/name.ml[241,7985+31]..[249,8391+36]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/name.ml[241,7985+31]..[241,7985+35])
                          Ppat_var "name" (src/name.ml[241,7985+31]..[241,7985+35])
                        expression (src/name.ml[242,8023+4]..[249,8391+36])
                          Pexp_sequence
                          expression (src/name.ml[242,8023+4]..[242,8023+53])
                            Pexp_apply
                            expression (src/name.ml[242,8023+4]..[242,8023+42])
                              Pexp_ident "Reserved_namespaces.check_not_reserved" (src/name.ml[242,8023+4]..[242,8023+42])
                            [
                              <arg>
                              Labelled "kind"
                                expression (src/name.ml[242,8023+44]..[242,8023+48])
                                  Pexp_ident "kind" (src/name.ml[242,8023+44]..[242,8023+48])
                              <arg>
                              Nolabel
                                expression (src/name.ml[242,8023+49]..[242,8023+53])
                                  Pexp_ident "name" (src/name.ml[242,8023+49]..[242,8023+53])
                            ]
                          expression (src/name.ml[243,8078+4]..[249,8391+36])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/name.ml[243,8078+8]..[243,8078+14])
                                  Ppat_var "caller" (src/name.ml[243,8078+8]..[243,8078+14])
                                expression (src/name.ml[243,8078+17]..[243,8078+43])
                                  Pexp_apply
                                  expression (src/name.ml[243,8078+17]..[243,8078+30])
                                    Pexp_ident "Caller_id.get" (src/name.ml[243,8078+17]..[243,8078+30])
                                  [
                                    <arg>
                                    Labelled "skip"
                                      expression (src/name.ml[243,8078+37]..[243,8078+43])
                                        Pexp_field
                                        expression (src/name.ml[243,8078+37]..[243,8078+38])
                                          Pexp_ident "t" (src/name.ml[243,8078+37]..[243,8078+38])
                                        "skip" (src/name.ml[243,8078+39]..[243,8078+43])
                                  ]
                            ]
                            expression (src/name.ml[244,8125+4]..[249,8391+36])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (src/name.ml[244,8125+8]..[244,8125+11])
                                    Ppat_var "all" (src/name.ml[244,8125+8]..[244,8125+11])
                                  expression (src/name.ml[244,8125+14]..[244,8125+43])
                                    Pexp_apply
                                    expression (src/name.ml[244,8125+14]..[244,8125+33])
                                      Pexp_ident "get_all_for_context" (src/name.ml[244,8125+14]..[244,8125+33])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/name.ml[244,8125+34]..[244,8125+35])
                                          Pexp_ident "t" (src/name.ml[244,8125+34]..[244,8125+35])
                                      <arg>
                                      Nolabel
                                        expression (src/name.ml[244,8125+36]..[244,8125+43])
                                          Pexp_ident "context" (src/name.ml[244,8125+36]..[244,8125+43])
                                    ]
                              ]
                              expression (src/name.ml[245,8172+4]..[249,8391+36])
                                Pexp_sequence
                                expression (src/name.ml[245,8172+4]..[245,8172+70])
                                  Pexp_apply
                                  expression (src/name.ml[245,8172+4]..[245,8172+26])
                                    Pexp_ident "check_collisions_local" (src/name.ml[245,8172+4]..[245,8172+26])
                                  [
                                    <arg>
                                    Labelled "caller"
                                      expression (src/name.ml[245,8172+28]..[245,8172+34])
                                        Pexp_ident "caller" (src/name.ml[245,8172+28]..[245,8172+34])
                                    <arg>
                                    Labelled "all_for_context"
                                      expression (src/name.ml[245,8172+52]..[245,8172+55])
                                        Pexp_ident "all" (src/name.ml[245,8172+52]..[245,8172+55])
                                    <arg>
                                    Nolabel
                                      expression (src/name.ml[245,8172+56]..[245,8172+57])
                                        Pexp_ident "t" (src/name.ml[245,8172+56]..[245,8172+57])
                                    <arg>
                                    Nolabel
                                      expression (src/name.ml[245,8172+58]..[245,8172+65])
                                        Pexp_ident "context" (src/name.ml[245,8172+58]..[245,8172+65])
                                    <arg>
                                    Nolabel
                                      expression (src/name.ml[245,8172+66]..[245,8172+70])
                                        Pexp_ident "name" (src/name.ml[245,8172+66]..[245,8172+70])
                                  ]
                                expression (src/name.ml[246,8244+4]..[249,8391+36])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/name.ml[246,8244+8]..[246,8244+9])
                                        Ppat_var "t" (src/name.ml[246,8244+8]..[246,8244+9])
                                      expression (src/name.ml[246,8244+12]..[246,8244+65])
                                        Pexp_record
                                        [
                                          "fully_qualified_name" (src/name.ml[246,8244+14]..[246,8244+34])
                                            expression (src/name.ml[246,8244+37]..[246,8244+41])
                                              Pexp_ident "name" (src/name.ml[246,8244+37]..[246,8244+41])
                                          "declared_at" (src/name.ml[246,8244+43]..[246,8244+54])
                                            expression (src/name.ml[246,8244+57]..[246,8244+63])
                                              Pexp_ident "caller" (src/name.ml[246,8244+57]..[246,8244+63])
                                        ]
                                        None
                                  ]
                                  expression (src/name.ml[247,8313+4]..[249,8391+36])
                                    Pexp_setfield
                                    expression (src/name.ml[247,8313+4]..[247,8313+7])
                                      Pexp_ident "all" (src/name.ml[247,8313+4]..[247,8313+7])
                                    "all" (src/name.ml[247,8313+8]..[247,8313+11])
                                    expression (src/name.ml[248,8328+6]..[249,8391+36])
                                      Pexp_apply
                                      expression (src/name.ml[248,8328+6]..[248,8328+23])
                                        Pexp_ident "fold_dot_suffixes" (src/name.ml[248,8328+6]..[248,8328+23])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/name.ml[248,8328+24]..[248,8328+28])
                                            Pexp_ident "name" (src/name.ml[248,8328+24]..[248,8328+28])
                                        <arg>
                                        Labelled "init"
                                          expression (src/name.ml[248,8328+35]..[248,8328+42])
                                            Pexp_field
                                            expression (src/name.ml[248,8328+35]..[248,8328+38])
                                              Pexp_ident "all" (src/name.ml[248,8328+35]..[248,8328+38])
                                            "all" (src/name.ml[248,8328+39]..[248,8328+42])
                                        <arg>
                                        Labelled "f"
                                          expression (src/name.ml[248,8328+46]..[249,8391+36])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (src/name.ml[248,8328+51]..[248,8328+55])
                                              Ppat_var "name" (src/name.ml[248,8328+51]..[248,8328+55])
                                            expression (src/name.ml[248,8328+56]..[249,8391+35]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (src/name.ml[248,8328+56]..[248,8328+59])
                                                Ppat_var "acc" (src/name.ml[248,8328+56]..[248,8328+59])
                                              expression (src/name.ml[249,8391+10]..[249,8391+35])
                                                Pexp_apply
                                                expression (src/name.ml[249,8391+10]..[249,8391+24])
                                                  Pexp_ident "String.Map.add" (src/name.ml[249,8391+10]..[249,8391+24])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/name.ml[249,8391+25]..[249,8391+29])
                                                      Pexp_ident "name" (src/name.ml[249,8391+25]..[249,8391+29])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/name.ml[249,8391+30]..[249,8391+31])
                                                      Pexp_ident "t" (src/name.ml[249,8391+30]..[249,8391+31])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/name.ml[249,8391+32]..[249,8391+35])
                                                      Pexp_ident "acc" (src/name.ml[249,8391+32]..[249,8391+35])
                                                ]
                                      ]
            ]
          structure_item (src/name.ml[251,8429+2]..[305,10458+54])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[251,8429+6]..[251,8429+16])
                  Ppat_var "spellcheck" (src/name.ml[251,8429+6]..[251,8429+16])
                expression (src/name.ml[251,8429+17]..[305,10458+54]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/name.ml[251,8429+17]..[251,8429+18])
                    Ppat_var "t" (src/name.ml[251,8429+17]..[251,8429+18])
                  expression (src/name.ml[251,8429+19]..[305,10458+54]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/name.ml[251,8429+19]..[251,8429+26])
                      Ppat_var "context" (src/name.ml[251,8429+19]..[251,8429+26])
                    expression (src/name.ml[251,8429+27]..[305,10458+54]) ghost
                      Pexp_fun
                      Optional "allowlist"
                      Some
                        expression (src/name.ml[251,8429+41]..[251,8429+43])
                          Pexp_construct "[]" (src/name.ml[251,8429+41]..[251,8429+43])
                          None
                      pattern (src/name.ml[251,8429+29]..[251,8429+38])
                        Ppat_var "allowlist" (src/name.ml[251,8429+29]..[251,8429+38])
                      expression (src/name.ml[251,8429+45]..[305,10458+54]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/name.ml[251,8429+45]..[251,8429+49])
                          Ppat_var "name" (src/name.ml[251,8429+45]..[251,8429+49])
                        expression (src/name.ml[252,8481+4]..[305,10458+54])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/name.ml[252,8481+8]..[252,8481+23])
                                Ppat_var "all_for_context" (src/name.ml[252,8481+8]..[252,8481+23])
                              expression (src/name.ml[252,8481+26]..[252,8481+55])
                                Pexp_apply
                                expression (src/name.ml[252,8481+26]..[252,8481+45])
                                  Pexp_ident "get_all_for_context" (src/name.ml[252,8481+26]..[252,8481+45])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/name.ml[252,8481+46]..[252,8481+47])
                                      Pexp_ident "t" (src/name.ml[252,8481+46]..[252,8481+47])
                                  <arg>
                                  Nolabel
                                    expression (src/name.ml[252,8481+48]..[252,8481+55])
                                      Pexp_ident "context" (src/name.ml[252,8481+48]..[252,8481+55])
                                ]
                          ]
                          expression (src/name.ml[253,8540+4]..[305,10458+54])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/name.ml[253,8540+8]..[253,8540+11])
                                  Ppat_var "all" (src/name.ml[253,8540+8]..[253,8540+11])
                                expression (src/name.ml[254,8554+6]..[254,8554+74])
                                  Pexp_apply
                                  expression (src/name.ml[254,8554+6]..[254,8554+21])
                                    Pexp_ident "String.Map.fold" (src/name.ml[254,8554+6]..[254,8554+21])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/name.ml[254,8554+22]..[254,8554+51])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (src/name.ml[254,8554+27]..[254,8554+30])
                                          Ppat_var "key" (src/name.ml[254,8554+27]..[254,8554+30])
                                        expression (src/name.ml[254,8554+31]..[254,8554+50]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (src/name.ml[254,8554+31]..[254,8554+32])
                                            Ppat_any
                                          expression (src/name.ml[254,8554+33]..[254,8554+50]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (src/name.ml[254,8554+33]..[254,8554+36])
                                              Ppat_var "acc" (src/name.ml[254,8554+33]..[254,8554+36])
                                            expression (src/name.ml[254,8554+40]..[254,8554+50])
                                              Pexp_construct "::" (src/name.ml[254,8554+44]..[254,8554+46])
                                              Some
                                                expression (src/name.ml[254,8554+40]..[254,8554+50]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (src/name.ml[254,8554+40]..[254,8554+43])
                                                      Pexp_ident "key" (src/name.ml[254,8554+40]..[254,8554+43])
                                                    expression (src/name.ml[254,8554+47]..[254,8554+50])
                                                      Pexp_ident "acc" (src/name.ml[254,8554+47]..[254,8554+50])
                                                  ]
                                    <arg>
                                    Nolabel
                                      expression (src/name.ml[254,8554+52]..[254,8554+71])
                                        Pexp_field
                                        expression (src/name.ml[254,8554+52]..[254,8554+67])
                                          Pexp_ident "all_for_context" (src/name.ml[254,8554+52]..[254,8554+67])
                                        "all" (src/name.ml[254,8554+68]..[254,8554+71])
                                    <arg>
                                    Nolabel
                                      expression (src/name.ml[254,8554+72]..[254,8554+74])
                                        Pexp_construct "[]" (src/name.ml[254,8554+72]..[254,8554+74])
                                        None
                                  ]
                            ]
                            expression (src/name.ml[256,8636+4]..[305,10458+54])
                              Pexp_match
                              expression (src/name.ml[256,8636+10]..[256,8636+54])
                                Pexp_apply
                                expression (src/name.ml[256,8636+10]..[256,8636+31])
                                  Pexp_ident "Spellcheck.spellcheck" (src/name.ml[256,8636+10]..[256,8636+31])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/name.ml[256,8636+32]..[256,8636+49])
                                      Pexp_apply
                                      expression (src/name.ml[256,8636+37]..[256,8636+38])
                                        Pexp_ident "@" (src/name.ml[256,8636+37]..[256,8636+38])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/name.ml[256,8636+33]..[256,8636+36])
                                            Pexp_ident "all" (src/name.ml[256,8636+33]..[256,8636+36])
                                        <arg>
                                        Nolabel
                                          expression (src/name.ml[256,8636+39]..[256,8636+48])
                                            Pexp_ident "allowlist" (src/name.ml[256,8636+39]..[256,8636+48])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (src/name.ml[256,8636+50]..[256,8636+54])
                                      Pexp_ident "name" (src/name.ml[256,8636+50]..[256,8636+54])
                                ]
                              [
                                <case>
                                  pattern (src/name.ml[257,8696+6]..[257,8696+17])
                                    Ppat_alias "x" (src/name.ml[257,8696+16]..[257,8696+17])
                                    pattern (src/name.ml[257,8696+6]..[257,8696+12])
                                      Ppat_construct "Some" (src/name.ml[257,8696+6]..[257,8696+10])
                                      Some
                                        pattern (src/name.ml[257,8696+11]..[257,8696+12])
                                          Ppat_any
                                  expression (src/name.ml[257,8696+21]..[257,8696+22])
                                    Pexp_ident "x" (src/name.ml[257,8696+21]..[257,8696+22])
                                <case>
                                  pattern (src/name.ml[258,8719+6]..[258,8719+10])
                                    Ppat_construct "None" (src/name.ml[258,8719+6]..[258,8719+10])
                                    None
                                  <when>
                                    expression (src/name.ml[258,8719+16]..[258,8719+55])
                                      Pexp_apply
                                      expression (src/name.ml[258,8719+16]..[258,8719+30])
                                        Pexp_ident "String.Map.mem" (src/name.ml[258,8719+16]..[258,8719+30])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/name.ml[258,8719+31]..[258,8719+35])
                                            Pexp_ident "name" (src/name.ml[258,8719+31]..[258,8719+35])
                                        <arg>
                                        Nolabel
                                          expression (src/name.ml[258,8719+36]..[258,8719+55])
                                            Pexp_field
                                            expression (src/name.ml[258,8719+36]..[258,8719+51])
                                              Pexp_ident "all_for_context" (src/name.ml[258,8719+36]..[258,8719+51])
                                            "all" (src/name.ml[258,8719+52]..[258,8719+55])
                                      ]
                                  expression (src/name.ml[258,8719+59]..[258,8719+63])
                                    Pexp_construct "None" (src/name.ml[258,8719+59]..[258,8719+63])
                                    None
                                <case>
                                  pattern (src/name.ml[259,8783+6]..[259,8783+10])
                                    Ppat_construct "None" (src/name.ml[259,8783+6]..[259,8783+10])
                                    None
                                  expression (src/name.ml[259,8783+14]..[305,10458+54])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/name.ml[260,8799+12]..[260,8799+26])
                                          Ppat_var "other_contexts" (src/name.ml[260,8799+12]..[260,8799+26])
                                        expression (src/name.ml[261,8828+10]..[271,9182+31])
                                          Pexp_apply
                                          expression (src/name.ml[261,8828+10]..[261,8828+22])
                                            Pexp_ident "Hashtbl.fold" (src/name.ml[261,8828+10]..[261,8828+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/name.ml[262,8851+12]..[270,9158+23])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (src/name.ml[262,8851+17]..[262,8851+20])
                                                  Ppat_var "ctx" (src/name.ml[262,8851+17]..[262,8851+20])
                                                expression (src/name.ml[262,8851+21]..[270,9158+22]) ghost
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (src/name.ml[262,8851+21]..[262,8851+37])
                                                    Ppat_var "all_from_context" (src/name.ml[262,8851+21]..[262,8851+37])
                                                  expression (src/name.ml[262,8851+38]..[270,9158+22]) ghost
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (src/name.ml[262,8851+38]..[262,8851+41])
                                                      Ppat_var "acc" (src/name.ml[262,8851+38]..[262,8851+41])
                                                    expression (src/name.ml[263,8896+14]..[270,9158+22])
                                                      Pexp_ifthenelse
                                                      expression (src/name.ml[264,8913+16]..[265,8953+59])
                                                        Pexp_apply
                                                        expression (src/name.ml[265,8953+16]..[265,8953+18])
                                                          Pexp_ident "&&" (src/name.ml[265,8953+16]..[265,8953+18])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/name.ml[264,8913+16]..[264,8913+39])
                                                              Pexp_apply
                                                              expression (src/name.ml[264,8913+16]..[264,8913+27])
                                                                Pexp_ident "Poly.<>" (src/name.ml[264,8913+16]..[264,8913+27])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/name.ml[264,8913+28]..[264,8913+35])
                                                                    Pexp_ident "context" (src/name.ml[264,8913+28]..[264,8913+35])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/name.ml[264,8913+36]..[264,8913+39])
                                                                    Pexp_ident "ctx" (src/name.ml[264,8913+36]..[264,8913+39])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (src/name.ml[265,8953+19]..[265,8953+59])
                                                              Pexp_apply
                                                              expression (src/name.ml[265,8953+19]..[265,8953+33])
                                                                Pexp_ident "String.Map.mem" (src/name.ml[265,8953+19]..[265,8953+33])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/name.ml[265,8953+34]..[265,8953+38])
                                                                    Pexp_ident "name" (src/name.ml[265,8953+34]..[265,8953+38])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/name.ml[265,8953+39]..[265,8953+59])
                                                                    Pexp_field
                                                                    expression (src/name.ml[265,8953+39]..[265,8953+55])
                                                                      Pexp_ident "all_from_context" (src/name.ml[265,8953+39]..[265,8953+55])
                                                                    "all" (src/name.ml[265,8953+56]..[265,8953+59])
                                                              ]
                                                        ]
                                                      expression (src/name.ml[267,9032+16]..[269,9113+44])
                                                        Pexp_match
                                                        expression (src/name.ml[267,9032+22]..[267,9032+45])
                                                          Pexp_apply
                                                          expression (src/name.ml[267,9032+22]..[267,9032+41])
                                                            Pexp_field
                                                            expression (src/name.ml[267,9032+22]..[267,9032+23])
                                                              Pexp_ident "t" (src/name.ml[267,9032+22]..[267,9032+23])
                                                            "string_of_context" (src/name.ml[267,9032+24]..[267,9032+41])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/name.ml[267,9032+42]..[267,9032+45])
                                                                Pexp_ident "ctx" (src/name.ml[267,9032+42]..[267,9032+45])
                                                          ]
                                                        [
                                                          <case>
                                                            pattern (src/name.ml[268,9083+18]..[268,9083+22])
                                                              Ppat_construct "None" (src/name.ml[268,9083+18]..[268,9083+22])
                                                              None
                                                            expression (src/name.ml[268,9083+26]..[268,9083+29])
                                                              Pexp_ident "acc" (src/name.ml[268,9083+26]..[268,9083+29])
                                                          <case>
                                                            pattern (src/name.ml[269,9113+18]..[269,9113+24])
                                                              Ppat_construct "Some" (src/name.ml[269,9113+18]..[269,9113+22])
                                                              Some
                                                                pattern (src/name.ml[269,9113+23]..[269,9113+24])
                                                                  Ppat_var "s" (src/name.ml[269,9113+23]..[269,9113+24])
                                                            expression (src/name.ml[269,9113+28]..[269,9113+44])
                                                              Pexp_construct "::" (src/name.ml[269,9113+38]..[269,9113+40])
                                                              Some
                                                                expression (src/name.ml[269,9113+28]..[269,9113+44]) ghost
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (src/name.ml[269,9113+28]..[269,9113+37])
                                                                      Pexp_apply
                                                                      expression (src/name.ml[269,9113+31]..[269,9113+32])
Pexp_ident "^" (src/name.ml[269,9113+31]..[269,9113+32])
                                                                      [
<arg>
Nolabel
  expression (src/name.ml[269,9113+29]..[269,9113+30])
    Pexp_ident "s" (src/name.ml[269,9113+29]..[269,9113+30])
<arg>
Nolabel
  expression (src/name.ml[269,9113+33]..[269,9113+36])
    Pexp_constant PConst_string("s",(src/name.ml[269,9113+34]..[269,9113+35]),None)
                                                                      ]
                                                                    expression (src/name.ml[269,9113+41]..[269,9113+44])
                                                                      Pexp_ident "acc" (src/name.ml[269,9113+41]..[269,9113+44])
                                                                  ]
                                                        ]
                                                      Some
                                                        expression (src/name.ml[270,9158+19]..[270,9158+22])
                                                          Pexp_ident "acc" (src/name.ml[270,9158+19]..[270,9158+22])
                                            <arg>
                                            Nolabel
                                              expression (src/name.ml[271,9182+12]..[271,9182+28])
                                                Pexp_field
                                                expression (src/name.ml[271,9182+12]..[271,9182+13])
                                                  Pexp_ident "t" (src/name.ml[271,9182+12]..[271,9182+13])
                                                "all_by_context" (src/name.ml[271,9182+14]..[271,9182+28])
                                            <arg>
                                            Nolabel
                                              expression (src/name.ml[271,9182+29]..[271,9182+31])
                                                Pexp_construct "[]" (src/name.ml[271,9182+29]..[271,9182+31])
                                                None
                                          ]
                                    ]
                                    expression (src/name.ml[273,9225+8]..[305,10458+53])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/name.ml[273,9225+12]..[273,9225+19])
                                            Ppat_var "pp_text" (src/name.ml[273,9225+12]..[273,9225+19])
                                          expression (src/name.ml[273,9225+22]..[273,9225+42])
                                            Pexp_ident "Format.pp_print_text" (src/name.ml[273,9225+22]..[273,9225+42])
                                      ]
                                      expression (src/name.ml[274,9271+8]..[305,10458+53])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/name.ml[274,9271+12]..[274,9271+27])
                                              Ppat_var "current_context" (src/name.ml[274,9271+12]..[274,9271+27])
                                            expression (src/name.ml[274,9271+28]..[285,9685+25]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (src/name.ml[274,9271+28]..[274,9271+31])
                                                Ppat_var "ppf" (src/name.ml[274,9271+28]..[274,9271+31])
                                              expression (src/name.ml[275,9305+10]..[285,9685+25])
                                                Pexp_match
                                                expression (src/name.ml[275,9305+16]..[275,9305+43])
                                                  Pexp_apply
                                                  expression (src/name.ml[275,9305+16]..[275,9305+35])
                                                    Pexp_field
                                                    expression (src/name.ml[275,9305+16]..[275,9305+17])
                                                      Pexp_ident "t" (src/name.ml[275,9305+16]..[275,9305+17])
                                                    "string_of_context" (src/name.ml[275,9305+18]..[275,9305+35])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/name.ml[275,9305+36]..[275,9305+43])
                                                        Pexp_ident "context" (src/name.ml[275,9305+36]..[275,9305+43])
                                                  ]
                                                [
                                                  <case>
                                                    pattern (src/name.ml[276,9354+12]..[276,9354+26])
                                                      Ppat_or
                                                      pattern (src/name.ml[276,9354+12]..[276,9354+16])
                                                        Ppat_construct "None" (src/name.ml[276,9354+12]..[276,9354+16])
                                                        None
                                                      pattern (src/name.ml[276,9354+19]..[276,9354+26])
                                                        Ppat_construct "Some" (src/name.ml[276,9354+19]..[276,9354+23])
                                                        Some
                                                          pattern (src/name.ml[276,9354+24]..[276,9354+26])
                                                            Ppat_constant PConst_string("",(src/name.ml[276,9354+25]..[276,9354+25]),None)
                                                    expression (src/name.ml[276,9354+30]..[276,9354+32])
                                                      Pexp_construct "()" (src/name.ml[276,9354+30]..[276,9354+32])
                                                      None
                                                  <case>
                                                    pattern (src/name.ml[277,9387+12]..[277,9387+18])
                                                      Ppat_construct "Some" (src/name.ml[277,9387+12]..[277,9387+16])
                                                      Some
                                                        pattern (src/name.ml[277,9387+17]..[277,9387+18])
                                                          Ppat_var "s" (src/name.ml[277,9387+17]..[277,9387+18])
                                                    expression (src/name.ml[278,9409+14]..[285,9685+25])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (src/name.ml[278,9409+18]..[278,9409+25])
                                                            Ppat_var "a_or_an" (src/name.ml[278,9409+18]..[278,9409+25])
                                                          expression (src/name.ml[279,9437+16]..[281,9530+26])
                                                            Pexp_match
                                                            expression (src/name.ml[279,9437+22]..[279,9437+27])
                                                              Pexp_apply
                                                              expression (src/name.ml[279,9437+22]..[279,9437+27]) ghost
                                                                Pexp_ident "String.get" (src/name.ml[279,9437+22]..[279,9437+27]) ghost
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/name.ml[279,9437+22]..[279,9437+23])
                                                                    Pexp_ident "s" (src/name.ml[279,9437+22]..[279,9437+23])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/name.ml[279,9437+25]..[279,9437+26])
                                                                    Pexp_constant PConst_int (0,None)
                                                              ]
                                                            [
                                                              <case>
                                                                pattern (src/name.ml[280,9470+18]..[280,9470+51])
                                                                  Ppat_or
                                                                  pattern (src/name.ml[280,9470+18]..[280,9470+45])
                                                                    Ppat_or
                                                                    pattern (src/name.ml[280,9470+18]..[280,9470+39])
                                                                      Ppat_or
                                                                      pattern (src/name.ml[280,9470+18]..[280,9470+33])
Ppat_or
pattern (src/name.ml[280,9470+18]..[280,9470+27])
  Ppat_or
  pattern (src/name.ml[280,9470+18]..[280,9470+21])
    Ppat_constant PConst_char 61
  pattern (src/name.ml[280,9470+24]..[280,9470+27])
    Ppat_constant PConst_char 65
pattern (src/name.ml[280,9470+30]..[280,9470+33])
  Ppat_constant PConst_char 69
                                                                      pattern (src/name.ml[280,9470+36]..[280,9470+39])
Ppat_constant PConst_char 6f
                                                                    pattern (src/name.ml[280,9470+42]..[280,9470+45])
                                                                      Ppat_constant PConst_char 75
                                                                  pattern (src/name.ml[280,9470+48]..[280,9470+51])
                                                                    Ppat_constant PConst_char 79
                                                                expression (src/name.ml[280,9470+55]..[280,9470+59])
                                                                  Pexp_constant PConst_string("an",(src/name.ml[280,9470+56]..[280,9470+58]),None)
                                                              <case>
                                                                pattern (src/name.ml[281,9530+18]..[281,9530+19])
                                                                  Ppat_any
                                                                expression (src/name.ml[281,9530+23]..[281,9530+26])
                                                                  Pexp_constant PConst_string("a",(src/name.ml[281,9530+24]..[281,9530+25]),None)
                                                            ]
                                                      ]
                                                      expression (src/name.ml[283,9574+14]..[285,9685+25])
                                                        Pexp_apply
                                                        expression (src/name.ml[283,9574+14]..[283,9574+28])
                                                          Pexp_ident "Format.fprintf" (src/name.ml[283,9574+14]..[283,9574+28])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/name.ml[283,9574+29]..[283,9574+32])
                                                              Pexp_ident "ppf" (src/name.ml[283,9574+29]..[283,9574+32])
                                                          <arg>
                                                          Nolabel
                                                            expression (src/name.ml[284,9607+16]..[284,9607+69])
                                                              Pexp_constant PConst_string("@ but@ is@ used@ here@ in@ the@ context@ of@ %s@ %a",(src/name.ml[284,9607+17]..[284,9607+68]),None)
                                                          <arg>
                                                          Nolabel
                                                            expression (src/name.ml[284,9607+70]..[284,9607+77])
                                                              Pexp_ident "a_or_an" (src/name.ml[284,9607+70]..[284,9607+77])
                                                          <arg>
                                                          Nolabel
                                                            expression (src/name.ml[285,9685+16]..[285,9685+23])
                                                              Pexp_ident "pp_text" (src/name.ml[285,9685+16]..[285,9685+23])
                                                          <arg>
                                                          Nolabel
                                                            expression (src/name.ml[285,9685+24]..[285,9685+25])
                                                              Pexp_ident "s" (src/name.ml[285,9685+24]..[285,9685+25])
                                                        ]
                                                ]
                                        ]
                                        expression (src/name.ml[287,9722+8]..[305,10458+53])
                                          Pexp_match
                                          expression (src/name.ml[288,9736+10]..[288,9736+72])
                                            Pexp_apply
                                            expression (src/name.ml[288,9736+10]..[288,9736+19])
                                              Pexp_ident "List.sort" (src/name.ml[288,9736+10]..[288,9736+19])
                                            [
                                              <arg>
                                              Labelled "cmp"
                                                expression (src/name.ml[288,9736+25]..[288,9736+57])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (src/name.ml[288,9736+30]..[288,9736+31])
                                                    Ppat_var "x" (src/name.ml[288,9736+30]..[288,9736+31])
                                                  expression (src/name.ml[288,9736+32]..[288,9736+56]) ghost
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (src/name.ml[288,9736+32]..[288,9736+33])
                                                      Ppat_var "y" (src/name.ml[288,9736+32]..[288,9736+33])
                                                    expression (src/name.ml[288,9736+37]..[288,9736+56])
                                                      Pexp_apply
                                                      expression (src/name.ml[288,9736+37]..[288,9736+38])
                                                        Pexp_ident "~-" (src/name.ml[288,9736+37]..[288,9736+38])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/name.ml[288,9736+38]..[288,9736+56])
                                                            Pexp_apply
                                                            expression (src/name.ml[288,9736+38]..[288,9736+52])
                                                              Pexp_ident "String.compare" (src/name.ml[288,9736+38]..[288,9736+52])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/name.ml[288,9736+53]..[288,9736+54])
                                                                  Pexp_ident "x" (src/name.ml[288,9736+53]..[288,9736+54])
                                                              <arg>
                                                              Nolabel
                                                                expression (src/name.ml[288,9736+55]..[288,9736+56])
                                                                  Pexp_ident "y" (src/name.ml[288,9736+55]..[288,9736+56])
                                                            ]
                                                      ]
                                              <arg>
                                              Nolabel
                                                expression (src/name.ml[288,9736+58]..[288,9736+72])
                                                  Pexp_ident "other_contexts" (src/name.ml[288,9736+58]..[288,9736+72])
                                            ]
                                          [
                                            <case>
                                              pattern (src/name.ml[290,9822+10]..[290,9822+12])
                                                Ppat_construct "[]" (src/name.ml[290,9822+10]..[290,9822+12])
                                                None
                                              expression (src/name.ml[290,9822+16]..[290,9822+20])
                                                Pexp_construct "None" (src/name.ml[290,9822+16]..[290,9822+20])
                                                None
                                            <case>
                                              pattern (src/name.ml[291,9843+10]..[291,9843+15])
                                                Ppat_construct "::" (src/name.ml[291,9843+12]..[291,9843+15]) ghost
                                                Some
                                                  pattern (src/name.ml[291,9843+12]..[291,9843+15]) ghost
                                                    Ppat_tuple
                                                    [
                                                      pattern (src/name.ml[291,9843+12]..[291,9843+13])
                                                        Ppat_var "c" (src/name.ml[291,9843+12]..[291,9843+13])
                                                      pattern (src/name.ml[291,9843+14]..[291,9843+15]) ghost
                                                        Ppat_construct "[]" (src/name.ml[291,9843+14]..[291,9843+15]) ghost
                                                        None
                                                    ]
                                              expression (src/name.ml[292,9862+12]..[296,10044+33])
                                                Pexp_construct "Some" (src/name.ml[292,9862+12]..[292,9862+16])
                                                Some
                                                  expression (src/name.ml[293,9879+14]..[296,10044+33])
                                                    Pexp_apply
                                                    expression (src/name.ml[293,9879+15]..[293,9879+30])
                                                      Pexp_ident "Format.asprintf" (src/name.ml[293,9879+15]..[293,9879+30])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/name.ml[294,9910+17]..[295,9975+53])
                                                          Pexp_constant PConst_string("@[Hint:@ `%s'@ is@ available@ for@ %a%t.@]@\nDid you put it at the wrong level?",(src/name.ml[294,9910+18]..[295,9975+52]),None)
                                                      <arg>
                                                      Nolabel
                                                        expression (src/name.ml[295,9975+54]..[295,9975+58])
                                                          Pexp_ident "name" (src/name.ml[295,9975+54]..[295,9975+58])
                                                      <arg>
                                                      Nolabel
                                                        expression (src/name.ml[295,9975+59]..[295,9975+66])
                                                          Pexp_ident "pp_text" (src/name.ml[295,9975+59]..[295,9975+66])
                                                      <arg>
                                                      Nolabel
                                                        expression (src/name.ml[295,9975+67]..[295,9975+68])
                                                          Pexp_ident "c" (src/name.ml[295,9975+67]..[295,9975+68])
                                                      <arg>
                                                      Nolabel
                                                        expression (src/name.ml[296,10044+17]..[296,10044+32])
                                                          Pexp_ident "current_context" (src/name.ml[296,10044+17]..[296,10044+32])
                                                    ]
                                            <case>
                                              pattern (src/name.ml[297,10078+10]..[297,10078+28])
                                                Ppat_construct "::" (src/name.ml[297,10078+15]..[297,10078+17])
                                                Some
                                                  pattern (src/name.ml[297,10078+10]..[297,10078+28]) ghost
                                                    Ppat_tuple
                                                    [
                                                      pattern (src/name.ml[297,10078+10]..[297,10078+14])
                                                        Ppat_var "last" (src/name.ml[297,10078+10]..[297,10078+14])
                                                      pattern (src/name.ml[297,10078+18]..[297,10078+28])
                                                        Ppat_var "rev_others" (src/name.ml[297,10078+18]..[297,10078+28])
                                                    ]
                                              expression (src/name.ml[298,10110+12]..[305,10458+53])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (src/name.ml[298,10110+16]..[298,10110+22])
                                                      Ppat_var "others" (src/name.ml[298,10110+16]..[298,10110+22])
                                                    expression (src/name.ml[298,10110+25]..[298,10110+44])
                                                      Pexp_apply
                                                      expression (src/name.ml[298,10110+25]..[298,10110+33])
                                                        Pexp_ident "List.rev" (src/name.ml[298,10110+25]..[298,10110+33])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/name.ml[298,10110+34]..[298,10110+44])
                                                            Pexp_ident "rev_others" (src/name.ml[298,10110+34]..[298,10110+44])
                                                      ]
                                                ]
                                                expression (src/name.ml[299,10158+12]..[305,10458+53])
                                                  Pexp_construct "Some" (src/name.ml[299,10158+12]..[299,10158+16])
                                                  Some
                                                    expression (src/name.ml[300,10175+14]..[305,10458+53])
                                                      Pexp_apply
                                                      expression (src/name.ml[300,10175+15]..[300,10175+30])
                                                        Pexp_ident "Format.asprintf" (src/name.ml[300,10175+15]..[300,10175+30])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/name.ml[301,10206+17]..[302,10280+53])
                                                            Pexp_constant PConst_string("@[Hint:@ `%s'@ is@ available@ for@ %a@ and@ %a%t.@]@\nDid you put it at the wrong level?",(src/name.ml[301,10206+18]..[302,10280+52]),None)
                                                        <arg>
                                                        Nolabel
                                                          expression (src/name.ml[302,10280+54]..[302,10280+58])
                                                            Pexp_ident "name" (src/name.ml[302,10280+54]..[302,10280+58])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/name.ml[303,10339+17]..[304,10409+48])
                                                            Pexp_apply
                                                            expression (src/name.ml[303,10339+18]..[303,10339+38])
                                                              Pexp_ident "Format.pp_print_list" (src/name.ml[303,10339+18]..[303,10339+38])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/name.ml[303,10339+39]..[303,10339+46])
                                                                  Pexp_ident "pp_text" (src/name.ml[303,10339+39]..[303,10339+46])
                                                              <arg>
                                                              Labelled "pp_sep"
                                                                expression (src/name.ml[303,10339+55]..[304,10409+47])
                                                                  Pexp_fun
                                                                  Nolabel
                                                                  None
                                                                  pattern (src/name.ml[303,10339+60]..[303,10339+63])
                                                                    Ppat_var "ppf" (src/name.ml[303,10339+60]..[303,10339+63])
                                                                  expression (src/name.ml[303,10339+64]..[304,10409+46]) ghost
                                                                    Pexp_fun
                                                                    Nolabel
                                                                    None
                                                                    pattern (src/name.ml[303,10339+64]..[303,10339+66])
                                                                      Ppat_construct "()" (src/name.ml[303,10339+64]..[303,10339+66])
                                                                      None
                                                                    expression (src/name.ml[304,10409+22]..[304,10409+46])
                                                                      Pexp_apply
                                                                      expression (src/name.ml[304,10409+22]..[304,10409+36])
Pexp_ident "Format.fprintf" (src/name.ml[304,10409+22]..[304,10409+36])
                                                                      [
<arg>
Nolabel
  expression (src/name.ml[304,10409+37]..[304,10409+40])
    Pexp_ident "ppf" (src/name.ml[304,10409+37]..[304,10409+40])
<arg>
Nolabel
  expression (src/name.ml[304,10409+41]..[304,10409+46])
    Pexp_constant PConst_string(",@ ",(src/name.ml[304,10409+42]..[304,10409+45]),None)
                                                                      ]
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (src/name.ml[305,10458+17]..[305,10458+23])
                                                            Pexp_ident "others" (src/name.ml[305,10458+17]..[305,10458+23])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/name.ml[305,10458+24]..[305,10458+31])
                                                            Pexp_ident "pp_text" (src/name.ml[305,10458+24]..[305,10458+31])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/name.ml[305,10458+32]..[305,10458+36])
                                                            Pexp_ident "last" (src/name.ml[305,10458+32]..[305,10458+36])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/name.ml[305,10458+37]..[305,10458+52])
                                                            Pexp_ident "current_context" (src/name.ml[305,10458+37]..[305,10458+52])
                                                      ]
                                          ]
                              ]
            ]
          structure_item (src/name.ml[307,10514+2]..[323,11314+5])
            Pstr_module
            "Error" (src/name.ml[307,10514+9]..[307,10514+14])
              module_expr (src/name.ml[307,10514+17]..[323,11314+5])
                Pmod_structure
                [
                  structure_item (src/name.ml[310,10693+4]..[316,11004+20])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (src/name.ml[310,10693+8]..[310,10693+15])
                          Ppat_var "createf" (src/name.ml[310,10693+8]..[310,10693+15])
                        expression (src/name.ml[310,10693+16]..[316,11004+20]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/name.ml[310,10693+16]..[310,10693+17])
                            Ppat_var "t" (src/name.ml[310,10693+16]..[310,10693+17])
                          expression (src/name.ml[310,10693+18]..[316,11004+20]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/name.ml[310,10693+18]..[310,10693+25])
                              Ppat_var "context" (src/name.ml[310,10693+18]..[310,10693+25])
                            expression (src/name.ml[310,10693+26]..[316,11004+20]) ghost
                              Pexp_fun
                              Optional "allowlist"
                              None
                              pattern (src/name.ml[310,10693+27]..[310,10693+36])
                                Ppat_var "allowlist" (src/name.ml[310,10693+27]..[310,10693+36])
                              expression (src/name.ml[310,10693+37]..[316,11004+20]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/name.ml[310,10693+37]..[310,10693+40])
                                  Ppat_var "fmt" (src/name.ml[310,10693+37]..[310,10693+40])
                                expression (src/name.ml[310,10693+41]..[316,11004+20]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/name.ml[310,10693+41]..[310,10693+62])
                                    Ppat_constraint
                                    pattern (src/name.ml[310,10693+42]..[310,10693+46])
                                      Ppat_var "name" (src/name.ml[310,10693+42]..[310,10693+46])
                                    core_type (src/name.ml[310,10693+49]..[310,10693+61])
                                      Ptyp_constr "Loc.t" (src/name.ml[310,10693+56]..[310,10693+61])
                                      [
                                        core_type (src/name.ml[310,10693+49]..[310,10693+55])
                                          Ptyp_constr "string" (src/name.ml[310,10693+49]..[310,10693+55])
                                          []
                                      ]
                                  expression (src/name.ml[311,10758+6]..[316,11004+20])
                                    Pexp_apply
                                    expression (src/name.ml[311,10758+6]..[311,10758+21])
                                      Pexp_ident "Printf.ksprintf" (src/name.ml[311,10758+6]..[311,10758+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/name.ml[312,10780+8]..[315,10928+75])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (src/name.ml[312,10780+13]..[312,10780+16])
                                            Ppat_var "msg" (src/name.ml[312,10780+13]..[312,10780+16])
                                          expression (src/name.ml[313,10800+10]..[315,10928+74])
                                            Pexp_match
                                            expression (src/name.ml[313,10800+16]..[313,10800+56])
                                              Pexp_apply
                                              expression (src/name.ml[313,10800+16]..[313,10800+26])
                                                Pexp_ident "spellcheck" (src/name.ml[313,10800+16]..[313,10800+26])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/name.ml[313,10800+27]..[313,10800+28])
                                                    Pexp_ident "t" (src/name.ml[313,10800+27]..[313,10800+28])
                                                <arg>
                                                Nolabel
                                                  expression (src/name.ml[313,10800+29]..[313,10800+36])
                                                    Pexp_ident "context" (src/name.ml[313,10800+29]..[313,10800+36])
                                                <arg>
                                                Nolabel
                                                  expression (src/name.ml[313,10800+37]..[313,10800+45])
                                                    Pexp_field
                                                    expression (src/name.ml[313,10800+37]..[313,10800+41])
                                                      Pexp_ident "name" (src/name.ml[313,10800+37]..[313,10800+41])
                                                    "txt" (src/name.ml[313,10800+42]..[313,10800+45])
                                                <arg>
                                                Optional "allowlist"
                                                  expression (src/name.ml[313,10800+47]..[313,10800+56])
                                                    Pexp_ident "allowlist" (src/name.ml[313,10800+47]..[313,10800+56])
                                              ]
                                            [
                                              <case>
                                                pattern (src/name.ml[314,10862+12]..[314,10862+16])
                                                  Ppat_construct "None" (src/name.ml[314,10862+12]..[314,10862+16])
                                                  None
                                                expression (src/name.ml[314,10862+20]..[314,10862+65])
                                                  Pexp_apply
                                                  expression (src/name.ml[314,10862+20]..[314,10862+42])
                                                    Pexp_ident "Location.Error.createf" (src/name.ml[314,10862+20]..[314,10862+42])
                                                  [
                                                    <arg>
                                                    Labelled "loc"
                                                      expression (src/name.ml[314,10862+48]..[314,10862+56])
                                                        Pexp_field
                                                        expression (src/name.ml[314,10862+48]..[314,10862+52])
                                                          Pexp_ident "name" (src/name.ml[314,10862+48]..[314,10862+52])
                                                        "loc" (src/name.ml[314,10862+53]..[314,10862+56])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/name.ml[314,10862+57]..[314,10862+61])
                                                        Pexp_constant PConst_string("%s",(src/name.ml[314,10862+58]..[314,10862+60]),None)
                                                    <arg>
                                                    Nolabel
                                                      expression (src/name.ml[314,10862+62]..[314,10862+65])
                                                        Pexp_ident "msg" (src/name.ml[314,10862+62]..[314,10862+65])
                                                  ]
                                              <case>
                                                pattern (src/name.ml[315,10928+12]..[315,10928+18])
                                                  Ppat_construct "Some" (src/name.ml[315,10928+12]..[315,10928+16])
                                                  Some
                                                    pattern (src/name.ml[315,10928+17]..[315,10928+18])
                                                      Ppat_var "s" (src/name.ml[315,10928+17]..[315,10928+18])
                                                expression (src/name.ml[315,10928+22]..[315,10928+74])
                                                  Pexp_apply
                                                  expression (src/name.ml[315,10928+22]..[315,10928+44])
                                                    Pexp_ident "Location.Error.createf" (src/name.ml[315,10928+22]..[315,10928+44])
                                                  [
                                                    <arg>
                                                    Labelled "loc"
                                                      expression (src/name.ml[315,10928+50]..[315,10928+58])
                                                        Pexp_field
                                                        expression (src/name.ml[315,10928+50]..[315,10928+54])
                                                          Pexp_ident "name" (src/name.ml[315,10928+50]..[315,10928+54])
                                                        "loc" (src/name.ml[315,10928+55]..[315,10928+58])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/name.ml[315,10928+59]..[315,10928+68])
                                                        Pexp_constant PConst_string("%s.\n%s",(src/name.ml[315,10928+60]..[315,10928+67]),None)
                                                    <arg>
                                                    Nolabel
                                                      expression (src/name.ml[315,10928+69]..[315,10928+72])
                                                        Pexp_ident "msg" (src/name.ml[315,10928+69]..[315,10928+72])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/name.ml[315,10928+73]..[315,10928+74])
                                                        Pexp_ident "s" (src/name.ml[315,10928+73]..[315,10928+74])
                                                  ]
                                            ]
                                      <arg>
                                      Nolabel
                                        expression (src/name.ml[316,11004+8]..[316,11004+11])
                                          Pexp_ident "fmt" (src/name.ml[316,11004+8]..[316,11004+11])
                                      <arg>
                                      Nolabel
                                        expression (src/name.ml[316,11004+12]..[316,11004+20])
                                          Pexp_field
                                          expression (src/name.ml[316,11004+12]..[316,11004+16])
                                            Pexp_ident "name" (src/name.ml[316,11004+12]..[316,11004+16])
                                          "txt" (src/name.ml[316,11004+17]..[316,11004+20])
                                    ]
                    ]
                  structure_item (src/name.ml[318,11026+4]..[319,11096+67])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (src/name.ml[318,11026+8]..[318,11026+20])
                          Ppat_var "raise_errorf" (src/name.ml[318,11026+8]..[318,11026+20])
                        expression (src/name.ml[318,11026+21]..[319,11096+67]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/name.ml[318,11026+21]..[318,11026+22])
                            Ppat_var "t" (src/name.ml[318,11026+21]..[318,11026+22])
                          expression (src/name.ml[318,11026+23]..[319,11096+67]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/name.ml[318,11026+23]..[318,11026+30])
                              Ppat_var "context" (src/name.ml[318,11026+23]..[318,11026+30])
                            expression (src/name.ml[318,11026+31]..[319,11096+67]) ghost
                              Pexp_fun
                              Optional "allowlist"
                              None
                              pattern (src/name.ml[318,11026+32]..[318,11026+41])
                                Ppat_var "allowlist" (src/name.ml[318,11026+32]..[318,11026+41])
                              expression (src/name.ml[318,11026+42]..[319,11096+67]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/name.ml[318,11026+42]..[318,11026+45])
                                  Ppat_var "fmt" (src/name.ml[318,11026+42]..[318,11026+45])
                                expression (src/name.ml[318,11026+46]..[319,11096+67]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/name.ml[318,11026+46]..[318,11026+67])
                                    Ppat_constraint
                                    pattern (src/name.ml[318,11026+47]..[318,11026+51])
                                      Ppat_var "name" (src/name.ml[318,11026+47]..[318,11026+51])
                                    core_type (src/name.ml[318,11026+54]..[318,11026+66])
                                      Ptyp_constr "Loc.t" (src/name.ml[318,11026+61]..[318,11026+66])
                                      [
                                        core_type (src/name.ml[318,11026+54]..[318,11026+60])
                                          Ptyp_constr "string" (src/name.ml[318,11026+54]..[318,11026+60])
                                          []
                                      ]
                                  expression (src/name.ml[319,11096+6]..[319,11096+67])
                                    Pexp_apply
                                    expression (src/name.ml[319,11096+27]..[319,11096+29])
                                      Pexp_ident "@@" (src/name.ml[319,11096+27]..[319,11096+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/name.ml[319,11096+6]..[319,11096+26])
                                          Pexp_ident "Location.Error.raise" (src/name.ml[319,11096+6]..[319,11096+26])
                                      <arg>
                                      Nolabel
                                        expression (src/name.ml[319,11096+30]..[319,11096+67])
                                          Pexp_apply
                                          expression (src/name.ml[319,11096+30]..[319,11096+37])
                                            Pexp_ident "createf" (src/name.ml[319,11096+30]..[319,11096+37])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/name.ml[319,11096+38]..[319,11096+39])
                                                Pexp_ident "t" (src/name.ml[319,11096+38]..[319,11096+39])
                                            <arg>
                                            Nolabel
                                              expression (src/name.ml[319,11096+40]..[319,11096+47])
                                                Pexp_ident "context" (src/name.ml[319,11096+40]..[319,11096+47])
                                            <arg>
                                            Optional "allowlist"
                                              expression (src/name.ml[319,11096+49]..[319,11096+58])
                                                Pexp_ident "allowlist" (src/name.ml[319,11096+49]..[319,11096+58])
                                            <arg>
                                            Nolabel
                                              expression (src/name.ml[319,11096+59]..[319,11096+62])
                                                Pexp_ident "fmt" (src/name.ml[319,11096+59]..[319,11096+62])
                                            <arg>
                                            Nolabel
                                              expression (src/name.ml[319,11096+63]..[319,11096+67])
                                                Pexp_ident "name" (src/name.ml[319,11096+63]..[319,11096+67])
                                          ]
                                    ]
                    ]
                  structure_item (src/name.ml[321,11165+4]..[322,11239+74])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (src/name.ml[321,11165+8]..[321,11165+24])
                          Ppat_var "error_extensionf" (src/name.ml[321,11165+8]..[321,11165+24])
                        expression (src/name.ml[321,11165+25]..[322,11239+74]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/name.ml[321,11165+25]..[321,11165+26])
                            Ppat_var "t" (src/name.ml[321,11165+25]..[321,11165+26])
                          expression (src/name.ml[321,11165+27]..[322,11239+74]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/name.ml[321,11165+27]..[321,11165+34])
                              Ppat_var "context" (src/name.ml[321,11165+27]..[321,11165+34])
                            expression (src/name.ml[321,11165+35]..[322,11239+74]) ghost
                              Pexp_fun
                              Optional "allowlist"
                              None
                              pattern (src/name.ml[321,11165+36]..[321,11165+45])
                                Ppat_var "allowlist" (src/name.ml[321,11165+36]..[321,11165+45])
                              expression (src/name.ml[321,11165+46]..[322,11239+74]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/name.ml[321,11165+46]..[321,11165+49])
                                  Ppat_var "fmt" (src/name.ml[321,11165+46]..[321,11165+49])
                                expression (src/name.ml[321,11165+50]..[322,11239+74]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/name.ml[321,11165+50]..[321,11165+71])
                                    Ppat_constraint
                                    pattern (src/name.ml[321,11165+51]..[321,11165+55])
                                      Ppat_var "name" (src/name.ml[321,11165+51]..[321,11165+55])
                                    core_type (src/name.ml[321,11165+58]..[321,11165+70])
                                      Ptyp_constr "Loc.t" (src/name.ml[321,11165+65]..[321,11165+70])
                                      [
                                        core_type (src/name.ml[321,11165+58]..[321,11165+64])
                                          Ptyp_constr "string" (src/name.ml[321,11165+58]..[321,11165+64])
                                          []
                                      ]
                                  expression (src/name.ml[322,11239+6]..[322,11239+74])
                                    Pexp_apply
                                    expression (src/name.ml[322,11239+34]..[322,11239+36])
                                      Pexp_ident "@@" (src/name.ml[322,11239+34]..[322,11239+36])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/name.ml[322,11239+6]..[322,11239+33])
                                          Pexp_ident "Location.Error.to_extension" (src/name.ml[322,11239+6]..[322,11239+33])
                                      <arg>
                                      Nolabel
                                        expression (src/name.ml[322,11239+37]..[322,11239+74])
                                          Pexp_apply
                                          expression (src/name.ml[322,11239+37]..[322,11239+44])
                                            Pexp_ident "createf" (src/name.ml[322,11239+37]..[322,11239+44])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/name.ml[322,11239+45]..[322,11239+46])
                                                Pexp_ident "t" (src/name.ml[322,11239+45]..[322,11239+46])
                                            <arg>
                                            Nolabel
                                              expression (src/name.ml[322,11239+47]..[322,11239+54])
                                                Pexp_ident "context" (src/name.ml[322,11239+47]..[322,11239+54])
                                            <arg>
                                            Optional "allowlist"
                                              expression (src/name.ml[322,11239+56]..[322,11239+65])
                                                Pexp_ident "allowlist" (src/name.ml[322,11239+56]..[322,11239+65])
                                            <arg>
                                            Nolabel
                                              expression (src/name.ml[322,11239+66]..[322,11239+69])
                                                Pexp_ident "fmt" (src/name.ml[322,11239+66]..[322,11239+69])
                                            <arg>
                                            Nolabel
                                              expression (src/name.ml[322,11239+70]..[322,11239+74])
                                                Pexp_ident "name" (src/name.ml[322,11239+70]..[322,11239+74])
                                          ]
                                    ]
                    ]
                ]
          structure_item (src/name.ml[325,11321+2]..[325,11321+39])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[325,11321+6]..[325,11321+18])
                  Ppat_var "raise_errorf" (src/name.ml[325,11321+6]..[325,11321+18])
                expression (src/name.ml[325,11321+21]..[325,11321+39])
                  Pexp_ident "Error.raise_errorf" (src/name.ml[325,11321+21]..[325,11321+39])
            ]
        ]
]

open! Import
module Format = Stdlib.Format
let fold_dot_suffixes name ~init:acc  ~f  =
  let rec collapse_after_at =
    function
    | [] -> []
    | part::parts ->
        if (not (String.is_empty part)) && (Char.equal (part.[0]) '@')
        then [String.concat ((String.drop_prefix part 1) :: parts) ~sep:"."]
        else part :: (collapse_after_at parts) in
  let rec loop acc parts =
    match parts with
    | [] -> acc
    | part::parts ->
        loop (f (String.concat (part :: parts) ~sep:".") acc) parts in
  ((String.split_on_char name ~sep:'.') |> collapse_after_at) |> (loop acc)
let dot_suffixes name =
  fold_dot_suffixes name ~init:[] ~f:(fun x -> fun acc -> x :: acc)
let split_path =
  let rec loop s i =
    if i = (String.length s)
    then (s, None)
    else
      (match s.[i] with | '.' -> after_dot s (i + 1) | _ -> loop s (i + 1))
  and after_dot s i =
    if i = (String.length s)
    then (s, None)
    else
      (match s.[i] with
       | 'A'..'Z' ->
           ((String.prefix s (i - 1)), (Some (String.drop_prefix s i)))
       | '.' -> after_dot s (i + 1)
       | _ -> loop s (i + 1)) in
  fun s -> loop s 0
module Pattern =
  struct
    type t = {
      name: string ;
      dot_suffixes: String.Set.t }
    let make name =
      { name; dot_suffixes = (String.Set.of_list (dot_suffixes name)) }
    let name t = t.name
    let matches t matched = String.Set.mem matched t.dot_suffixes
  end
let split_outer_namespace name =
  match String.index_opt name '.' with
  | None -> None
  | Some i ->
      let n = String.length name in
      let before_dot = String.sub name ~pos:0 ~len:i in
      let after_dot = String.sub name ~pos:(i + 1) ~len:((n - i) - 1) in
      Some (before_dot, after_dot)
module Allowlisted =
  struct
    let create_set fully_qualified_names =
      List.fold_left
        ~f:(fun acc ->
              fun name ->
                fold_dot_suffixes name ~init:acc
                  ~f:(fun x -> fun acc -> String.Set.add x acc))
        ~init:String.Set.empty fully_qualified_names
    let attributes =
      create_set
        ["ocaml.alert";
        "ocaml.boxed";
        "ocaml.deprecated";
        "ocaml.deprecated_mutable";
        "ocaml.doc";
        "ocaml.extension_constructor";
        "ocaml.immediate";
        "ocaml.immediate64";
        "ocaml.inline";
        "ocaml.inlined";
        "ocaml.local";
        "ocaml.noalloc";
        "ocaml.ppwarning";
        "ocaml.remove_aliases";
        "ocaml.specialise";
        "ocaml.specialised";
        "ocaml.tailcall";
        "ocaml.text";
        "ocaml.unboxed";
        "ocaml.unroll";
        "ocaml.unrolled";
        "ocaml.untagged";
        "ocaml.warn_on_literal_pattern";
        "ocaml.warnerror";
        "ocaml.warning";
        "ocaml.toplevel_printer";
        "toplevel_printer"]
    let extensions =
      create_set ["ocaml.error"; "ocaml.extension_constructor"]
    let is_allowlisted ~kind  name =
      match kind with
      | `Attribute -> String.Set.mem name attributes
      | `Extension -> String.Set.mem name extensions
    let get_attribute_list () = String.Set.elements attributes
    let get_extension_list () = String.Set.elements extensions
  end
module Reserved_namespaces =
  struct
    type reserved = (string, sub_namespaces) Hashtbl.t
    and sub_namespaces =
      | All 
      | Sub_namespaces of reserved 
    let create_reserved () = (Hashtbl.create 16 : reserved)
    let rec reserve ns tbl =
      match split_outer_namespace ns with
      | None -> Hashtbl.add_exn tbl ~key:ns ~data:All
      | Some (outer_ns, rest_ns) ->
          (match Hashtbl.find_or_add tbl outer_ns
                   ~default:(fun () -> Sub_namespaces (create_reserved ()))
           with
           | Sub_namespaces rest_tbl -> reserve rest_ns rest_tbl
           | All -> ())
    let rec is_in_reserved_namespaces name tbl =
      match split_outer_namespace name with
      | Some (ns, rest) ->
          (match Hashtbl.find_opt tbl ns with
           | Some (Sub_namespaces rest_tbl) ->
               is_in_reserved_namespaces rest rest_tbl
           | Some (All) -> true
           | None -> false)
      | None ->
          (match Hashtbl.find_opt tbl name with
           | Some (All) -> true
           | Some (Sub_namespaces _) | None -> false)
    let tbl = create_reserved ()
    let reserve ns = reserve ns tbl
    let is_in_reserved_namespaces name = is_in_reserved_namespaces name tbl
    let () = reserve "merlin"
    let () = reserve "reason"
    let () = reserve "refmt"
    let () = reserve "ns"
    let () = reserve "res"
    let () = reserve "metaocaml"
    let () = reserve "ocamlformat"
    let () = reserve "ppxlib.migration"
    let check_not_reserved ~kind  name =
      let (kind, list) =
        match kind with
        | `Attribute -> ("attribute", Allowlisted.attributes)
        | `Extension -> ("extension", Allowlisted.extensions) in
      if String.Set.mem name list
      then
        Printf.ksprintf failwith
          "Cannot register %s with name '%s' as it matches an %s reserved by the compiler"
          kind name kind
      else
        if is_in_reserved_namespaces name
        then
          Printf.ksprintf failwith
            "Cannot register %s with name '%s' as its namespace is marked as reserved"
            kind name
  end
let ignore_checks name =
  (Reserved_namespaces.is_in_reserved_namespaces name) ||
    (String.is_prefix name ~prefix:"_")
module Registrar =
  struct
    type element = {
      fully_qualified_name: string ;
      declared_at: Caller_id.t }
    type all_for_context = {
      mutable all: element String.Map.t }
    type 'a t =
      {
      all_by_context: ('a, all_for_context) Hashtbl.t ;
      skip: string list ;
      kind: string ;
      string_of_context: 'a -> string option }
    let create ~kind  ~current_file  ~string_of_context  =
      {
        all_by_context = (Hashtbl.create 16);
        skip = [current_file; __FILE__];
        kind;
        string_of_context
      }
    let get_all_for_context t context =
      Hashtbl.find_or_add t.all_by_context context
        ~default:(fun () -> { all = String.Map.empty })
    let check_collisions_local ~caller  ~all_for_context  t context name =
      match String.Map.find_opt name all_for_context.all with
      | None -> ()
      | Some e ->
          let declared_at =
            function
            | None -> ""
            | Some (loc : Stdlib.Printexc.location) ->
                Printf.sprintf " declared at %s:%d" loc.filename
                  loc.line_number in
          let context =
            match t.string_of_context context with
            | None -> ""
            | Some s -> " on " ^ (s ^ "s") in
          Printf.ksprintf failwith
            "Some ppx-es tried to register conflicting transformations: %s '%s'%s%s matches %s '%s'%s"
            (String.capitalize_ascii t.kind) name context
            (declared_at caller) t.kind e.fully_qualified_name
            (declared_at e.declared_at)
    let check_collisions t context name =
      let caller = Caller_id.get ~skip:(t.skip) in
      let all_for_context = get_all_for_context t context in
      check_collisions_local ~caller ~all_for_context t context name
    let register ~kind  t context name =
      Reserved_namespaces.check_not_reserved ~kind name;
      (let caller = Caller_id.get ~skip:(t.skip) in
       let all = get_all_for_context t context in
       check_collisions_local ~caller ~all_for_context:all t context name;
       (let t = { fully_qualified_name = name; declared_at = caller } in
        all.all <-
          (fold_dot_suffixes name ~init:(all.all)
             ~f:(fun name -> fun acc -> String.Map.add name t acc))))
    let spellcheck t context ?(allowlist= [])  name =
      let all_for_context = get_all_for_context t context in
      let all =
        String.Map.fold (fun key -> fun _ -> fun acc -> key :: acc)
          all_for_context.all [] in
      match Spellcheck.spellcheck (all @ allowlist) name with
      | Some _ as x -> x
      | None when String.Map.mem name all_for_context.all -> None
      | None ->
          let other_contexts =
            Hashtbl.fold
              (fun ctx ->
                 fun all_from_context ->
                   fun acc ->
                     if
                       (Poly.(<>) context ctx) &&
                         (String.Map.mem name all_from_context.all)
                     then
                       match t.string_of_context ctx with
                       | None -> acc
                       | Some s -> (s ^ "s") :: acc
                     else acc) t.all_by_context [] in
          let pp_text = Format.pp_print_text in
          let current_context ppf =
            match t.string_of_context context with
            | None | Some "" -> ()
            | Some s ->
                let a_or_an =
                  match s.[0] with
                  | 'a' | 'e' | 'i' | 'o' | 'u' | 'y' -> "an"
                  | _ -> "a" in
                Format.fprintf ppf
                  "@ but@ is@ used@ here@ in@ the@ context@ of@ %s@ %a"
                  a_or_an pp_text s in
          (match List.sort ~cmp:(fun x -> fun y -> - (String.compare x y))
                   other_contexts
           with
           | [] -> None
           | c::[] ->
               Some
                 (Format.asprintf
                    "@[Hint:@ `%s'@ is@ available@ for@ %a%t.@]@\nDid you put it at the wrong level?"
                    name pp_text c current_context)
           | last::rev_others ->
               let others = List.rev rev_others in
               Some
                 (Format.asprintf
                    "@[Hint:@ `%s'@ is@ available@ for@ %a@ and@ %a%t.@]@\nDid you put it at the wrong level?"
                    name
                    (Format.pp_print_list pp_text
                       ~pp_sep:(fun ppf -> fun () -> Format.fprintf ppf ",@ "))
                    others pp_text last current_context))
    module Error =
      struct
        let createf t context ?allowlist  fmt (name : string Loc.t) =
          Printf.ksprintf
            (fun msg ->
               match spellcheck t context name.txt ?allowlist with
               | None -> Location.Error.createf ~loc:(name.loc) "%s" msg
               | Some s ->
                   Location.Error.createf ~loc:(name.loc) "%s.\n%s" msg s)
            fmt name.txt
        let raise_errorf t context ?allowlist  fmt (name : string Loc.t) =
          Location.Error.raise @@ (createf t context ?allowlist fmt name)
        let error_extensionf t context ?allowlist  fmt (name : string Loc.t)
          =
          Location.Error.to_extension @@
            (createf t context ?allowlist fmt name)
      end
    let raise_errorf = Error.raise_errorf
  end
[
  structure_item (src/name.ml[1,0+0]..src/name.ml[1,0+12])
    Tstr_open Override
    module_expr (src/name.ml[1,0+6]..src/name.ml[1,0+12])
      Tmod_ident "Ppxlib__!.Import"
  structure_item (src/name.ml[2,13+0]..src/name.ml[2,13+29])
    Tstr_module
    Format/550
      module_expr (src/name.ml[2,13+16]..src/name.ml[2,13+29])
        Tmod_ident "Stdlib!.Format"
  structure_item (src/name.ml[4,44+0]..src/name.ml[18,519+69])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/name.ml[4,44+4]..src/name.ml[4,44+21])
          Tpat_var "fold_dot_suffixes/551"
        expression (src/name.ml[4,44+22]..src/name.ml[18,519+69]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/name.ml[4,44+22]..src/name.ml[4,44+26])
                Tpat_var "name/553"
              expression (src/name.ml[4,44+27]..src/name.ml[18,519+69]) ghost
                Texp_function
                Labelled "init"
                [
                  <case>
                    pattern (src/name.ml[4,44+33]..src/name.ml[4,44+36])
                      Tpat_var "acc/554"
                    expression (src/name.ml[4,44+37]..src/name.ml[18,519+69]) ghost
                      Texp_function
                      Labelled "f"
                      [
                        <case>
                          pattern (src/name.ml[4,44+38]..src/name.ml[4,44+39])
                            Tpat_var "f/555"
                          expression (src/name.ml[5,86+2]..src/name.ml[18,519+69])
                            Texp_let Rec
                            [
                              <def>
                                pattern (src/name.ml[5,86+10]..src/name.ml[5,86+27])
                                  Tpat_var "collapse_after_at/556"
                                expression (src/name.ml[5,86+30]..src/name.ml[10,309+44])
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/name.ml[6,125+6]..src/name.ml[6,125+8])
                                        Tpat_construct "[]"
                                        []
                                      expression (src/name.ml[6,125+12]..src/name.ml[6,125+14])
                                        Texp_construct "[]"
                                        []
                                    <case>
                                      pattern (src/name.ml[7,140+6]..src/name.ml[7,140+19])
                                        Tpat_construct "::"
                                        [
                                          pattern (src/name.ml[7,140+6]..src/name.ml[7,140+10])
                                            Tpat_var "part/557"
                                          pattern (src/name.ml[7,140+14]..src/name.ml[7,140+19])
                                            Tpat_var "parts/558"
                                        ]
                                      expression (src/name.ml[8,163+8]..src/name.ml[10,309+44])
                                        Texp_ifthenelse
                                        expression (src/name.ml[8,163+11]..src/name.ml[8,163+66])
                                          Texp_apply
                                          expression (src/name.ml[8,163+40]..src/name.ml[8,163+42])
                                            Texp_ident "Stdlib!.&&"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/name.ml[8,163+11]..src/name.ml[8,163+39])
                                                Texp_apply
                                                expression (src/name.ml[8,163+12]..src/name.ml[8,163+15])
                                                  Texp_ident "Stdlib!.not"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/name.ml[8,163+16]..src/name.ml[8,163+38])
                                                      Texp_apply
                                                      expression (src/name.ml[8,163+17]..src/name.ml[8,163+32])
                                                        Texp_ident "Ppxlib__!.Import.String.is_empty"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/name.ml[8,163+33]..src/name.ml[8,163+37])
                                                            Texp_ident "part/557"
                                                      ]
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (src/name.ml[8,163+43]..src/name.ml[8,163+66])
                                                Texp_apply
                                                expression (src/name.ml[8,163+43]..src/name.ml[8,163+53])
                                                  Texp_ident "Ppxlib__!.Import.Char.equal"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/name.ml[8,163+54]..src/name.ml[8,163+62])
                                                      Texp_apply
                                                      expression (src/name.ml[8,163+54]..src/name.ml[8,163+62]) ghost
                                                        Texp_ident "Ppxlib__!.Import.String.get"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/name.ml[8,163+54]..src/name.ml[8,163+58])
                                                            Texp_ident "part/557"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/name.ml[8,163+60]..src/name.ml[8,163+61])
                                                            Texp_constant Const_int 0
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (src/name.ml[8,163+63]..src/name.ml[8,163+66])
                                                      Texp_constant Const_char 40
                                                ]
                                          ]
                                        expression (src/name.ml[9,235+10]..src/name.ml[9,235+73])
                                          Texp_construct "::"
                                          [
                                            expression (src/name.ml[9,235+12]..src/name.ml[9,235+71])
                                              Texp_apply
                                              expression (src/name.ml[9,235+12]..src/name.ml[9,235+25])
                                                Texp_ident "Ppxlib__!.Import.String.concat"
                                              [
                                                <arg>
                                                  Labelled "sep"
                                                  expression (src/name.ml[9,235+68]..src/name.ml[9,235+71])
                                                    Texp_constant Const_string(".",(src/name.ml[9,235+69]..src/name.ml[9,235+70]),None)
                                                <arg>
                                                  Nolabel
                                                  expression (src/name.ml[9,235+26]..src/name.ml[9,235+62])
                                                    Texp_construct "::"
                                                    [
                                                      expression (src/name.ml[9,235+27]..src/name.ml[9,235+52])
                                                        Texp_apply
                                                        expression (src/name.ml[9,235+27]..src/name.ml[9,235+45])
                                                          Texp_ident "Ppxlib__!.Import.String.drop_prefix"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/name.ml[9,235+46]..src/name.ml[9,235+50])
                                                              Texp_ident "part/557"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/name.ml[9,235+51]..src/name.ml[9,235+52])
                                                              Texp_constant Const_int 1
                                                        ]
                                                      expression (src/name.ml[9,235+56]..src/name.ml[9,235+61])
                                                        Texp_ident "parts/558"
                                                    ]
                                              ]
                                            expression (src/name.ml[9,235+72]..src/name.ml[9,235+73]) ghost
                                              Texp_construct "[]"
                                              []
                                          ]
                                        Some
                                          expression (src/name.ml[10,309+13]..src/name.ml[10,309+44])
                                            Texp_construct "::"
                                            [
                                              expression (src/name.ml[10,309+13]..src/name.ml[10,309+17])
                                                Texp_ident "part/557"
                                              expression (src/name.ml[10,309+21]..src/name.ml[10,309+44])
                                                Texp_apply
                                                expression (src/name.ml[10,309+21]..src/name.ml[10,309+38])
                                                  Texp_ident "collapse_after_at/556"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/name.ml[10,309+39]..src/name.ml[10,309+44])
                                                      Texp_ident "parts/558"
                                                ]
                                            ]
                                  ]
                            ]
                            expression (src/name.ml[12,359+2]..src/name.ml[18,519+69])
                              Texp_let Rec
                              [
                                <def>
                                  pattern (src/name.ml[12,359+10]..src/name.ml[12,359+14])
                                    Tpat_var "loop/782"
                                  expression (src/name.ml[12,359+15]..src/name.ml[16,446+67]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/name.ml[12,359+15]..src/name.ml[12,359+18])
                                          Tpat_var "acc/783"
                                        expression (src/name.ml[12,359+19]..src/name.ml[16,446+67]) ghost
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/name.ml[12,359+19]..src/name.ml[12,359+24])
                                                Tpat_var "parts/784"
                                              expression (src/name.ml[13,386+4]..src/name.ml[16,446+67])
                                                Texp_match
                                                expression (src/name.ml[13,386+10]..src/name.ml[13,386+15])
                                                  Texp_ident "parts/784"
                                                [
                                                  <case>
                                                    pattern (src/name.ml[14,407+6]..src/name.ml[14,407+8])
                                                      Tpat_value
                                                      pattern (src/name.ml[14,407+6]..src/name.ml[14,407+8])
                                                        Tpat_construct "[]"
                                                        []
                                                    expression (src/name.ml[14,407+12]..src/name.ml[14,407+15])
                                                      Texp_ident "acc/783"
                                                  <case>
                                                    pattern (src/name.ml[15,423+6]..src/name.ml[15,423+19])
                                                      Tpat_value
                                                      pattern (src/name.ml[15,423+6]..src/name.ml[15,423+19])
                                                        Tpat_construct "::"
                                                        [
                                                          pattern (src/name.ml[15,423+6]..src/name.ml[15,423+10])
                                                            Tpat_var "part/785"
                                                          pattern (src/name.ml[15,423+14]..src/name.ml[15,423+19])
                                                            Tpat_var "parts/786"
                                                        ]
                                                    expression (src/name.ml[16,446+8]..src/name.ml[16,446+67])
                                                      Texp_apply
                                                      expression (src/name.ml[16,446+8]..src/name.ml[16,446+12])
                                                        Texp_ident "loop/782"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/name.ml[16,446+13]..src/name.ml[16,446+61])
                                                            Texp_apply
                                                            expression (src/name.ml[16,446+14]..src/name.ml[16,446+15])
                                                              Texp_ident "f/555"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/name.ml[16,446+16]..src/name.ml[16,446+56])
                                                                  Texp_apply
                                                                  expression (src/name.ml[16,446+17]..src/name.ml[16,446+30])
                                                                    Texp_ident "Ppxlib__!.Import.String.concat"
                                                                  [
                                                                    <arg>
                                                                      Labelled "sep"
                                                                      expression (src/name.ml[16,446+52]..src/name.ml[16,446+55])
                                                                        Texp_constant Const_string(".",(src/name.ml[16,446+53]..src/name.ml[16,446+54]),None)
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/name.ml[16,446+31]..src/name.ml[16,446+46])
                                                                        Texp_construct "::"
                                                                        [
                                                                          expression (src/name.ml[16,446+32]..src/name.ml[16,446+36])
                                                                            Texp_ident "part/785"
                                                                          expression (src/name.ml[16,446+40]..src/name.ml[16,446+45])
                                                                            Texp_ident "parts/786"
                                                                        ]
                                                                  ]
                                                              <arg>
                                                                Nolabel
                                                                expression (src/name.ml[16,446+57]..src/name.ml[16,446+60])
                                                                  Texp_ident "acc/783"
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (src/name.ml[16,446+62]..src/name.ml[16,446+67])
                                                            Texp_ident "parts/786"
                                                      ]
                                                ]
                                                []
                                          ]
                                    ]
                              ]
                              expression (src/name.ml[18,519+2]..src/name.ml[18,519+69])
                                Texp_apply
                                expression (src/name.ml[18,519+58]..src/name.ml[18,519+60])
                                  Texp_ident "Stdlib!.|>"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/name.ml[18,519+2]..src/name.ml[18,519+57])
                                      Texp_apply
                                      expression (src/name.ml[18,519+37]..src/name.ml[18,519+39])
                                        Texp_ident "Stdlib!.|>"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/name.ml[18,519+2]..src/name.ml[18,519+36])
                                            Texp_apply
                                            expression (src/name.ml[18,519+2]..src/name.ml[18,519+22])
                                              Texp_ident "Ppxlib__!.Import.String.split_on_char"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/name.ml[18,519+23]..src/name.ml[18,519+27])
                                                  Texp_ident "name/553"
                                              <arg>
                                                Labelled "sep"
                                                expression (src/name.ml[18,519+33]..src/name.ml[18,519+36])
                                                  Texp_constant Const_char 2e
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/name.ml[18,519+40]..src/name.ml[18,519+57])
                                            Texp_ident "collapse_after_at/556"
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (src/name.ml[18,519+61]..src/name.ml[18,519+69])
                                      Texp_apply
                                      expression (src/name.ml[18,519+61]..src/name.ml[18,519+65])
                                        Texp_ident "loop/782"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/name.ml[18,519+66]..src/name.ml[18,519+69])
                                            Texp_ident "acc/554"
                                      ]
                                ]
                      ]
                ]
          ]
    ]
  structure_item (src/name.ml[20,590+0]..src/name.ml[21,614+60])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/name.ml[20,590+4]..src/name.ml[20,590+16])
          Tpat_var "dot_suffixes/787"
        expression (src/name.ml[20,590+17]..src/name.ml[21,614+60]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/name.ml[20,590+17]..src/name.ml[20,590+21])
                Tpat_var "name/789"
              expression (src/name.ml[21,614+2]..src/name.ml[21,614+60])
                Texp_apply
                expression (src/name.ml[21,614+2]..src/name.ml[21,614+19])
                  Texp_ident "fold_dot_suffixes/551"
                [
                  <arg>
                    Nolabel
                    expression (src/name.ml[21,614+20]..src/name.ml[21,614+24])
                      Texp_ident "name/789"
                  <arg>
                    Labelled "init"
                    expression (src/name.ml[21,614+31]..src/name.ml[21,614+33])
                      Texp_construct "[]"
                      []
                  <arg>
                    Labelled "f"
                    expression (src/name.ml[21,614+37]..src/name.ml[21,614+60])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/name.ml[21,614+42]..src/name.ml[21,614+43])
                            Tpat_var "x/790"
                          expression (src/name.ml[21,614+44]..src/name.ml[21,614+59]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/name.ml[21,614+44]..src/name.ml[21,614+47])
                                  Tpat_var "acc/791"
                                expression (src/name.ml[21,614+51]..src/name.ml[21,614+59])
                                  Texp_construct "::"
                                  [
                                    expression (src/name.ml[21,614+51]..src/name.ml[21,614+52])
                                      Texp_ident "x/790"
                                    expression (src/name.ml[21,614+56]..src/name.ml[21,614+59])
                                      Texp_ident "acc/791"
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/name.ml[23,676+0]..src/name.ml[35,1074+19])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/name.ml[23,676+4]..src/name.ml[23,676+14])
          Tpat_var "split_path/792"
        expression (src/name.ml[24,693+2]..src/name.ml[35,1074+19])
          Texp_let Rec
          [
            <def>
              pattern (src/name.ml[24,693+10]..src/name.ml[24,693+14])
                Tpat_var "loop/793"
              expression (src/name.ml[24,693+15]..src/name.ml[26,756+74]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/name.ml[24,693+15]..src/name.ml[24,693+16])
                      Tpat_var "s/795"
                    expression (src/name.ml[24,693+17]..src/name.ml[26,756+74]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/name.ml[24,693+17]..src/name.ml[24,693+18])
                            Tpat_var "i/796"
                          expression (src/name.ml[25,714+4]..src/name.ml[26,756+74])
                            Texp_ifthenelse
                            expression (src/name.ml[25,714+7]..src/name.ml[25,714+26])
                              Texp_apply
                              expression (src/name.ml[25,714+9]..src/name.ml[25,714+10])
                                Texp_ident "Ppxlib__!.Import.="
                              [
                                <arg>
                                  Nolabel
                                  expression (src/name.ml[25,714+7]..src/name.ml[25,714+8])
                                    Texp_ident "i/796"
                                <arg>
                                  Nolabel
                                  expression (src/name.ml[25,714+11]..src/name.ml[25,714+26])
                                    Texp_apply
                                    expression (src/name.ml[25,714+11]..src/name.ml[25,714+24])
                                      Texp_ident "Ppxlib__!.Import.String.length"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/name.ml[25,714+25]..src/name.ml[25,714+26])
                                          Texp_ident "s/795"
                                    ]
                              ]
                            expression (src/name.ml[25,714+32]..src/name.ml[25,714+41])
                              Texp_tuple
                              [
                                expression (src/name.ml[25,714+33]..src/name.ml[25,714+34])
                                  Texp_ident "s/795"
                                expression (src/name.ml[25,714+36]..src/name.ml[25,714+40])
                                  Texp_construct "None"
                                  []
                              ]
                            Some
                              expression (src/name.ml[26,756+9]..src/name.ml[26,756+74])
                                Texp_match
                                expression (src/name.ml[26,756+15]..src/name.ml[26,756+20])
                                  Texp_apply
                                  expression (src/name.ml[26,756+15]..src/name.ml[26,756+20]) ghost
                                    Texp_ident "Ppxlib__!.Import.String.get"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/name.ml[26,756+15]..src/name.ml[26,756+16])
                                        Texp_ident "s/795"
                                    <arg>
                                      Nolabel
                                      expression (src/name.ml[26,756+18]..src/name.ml[26,756+19])
                                        Texp_ident "i/796"
                                  ]
                                [
                                  <case>
                                    pattern (src/name.ml[26,756+26]..src/name.ml[26,756+29])
                                      Tpat_value
                                      pattern (src/name.ml[26,756+26]..src/name.ml[26,756+29])
                                        Tpat_constant Const_char 2e
                                    expression (src/name.ml[26,756+33]..src/name.ml[26,756+52])
                                      Texp_apply
                                      expression (src/name.ml[26,756+33]..src/name.ml[26,756+42])
                                        Texp_ident "after_dot/794"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/name.ml[26,756+43]..src/name.ml[26,756+44])
                                            Texp_ident "s/795"
                                        <arg>
                                          Nolabel
                                          expression (src/name.ml[26,756+45]..src/name.ml[26,756+52])
                                            Texp_apply
                                            expression (src/name.ml[26,756+48]..src/name.ml[26,756+49])
                                              Texp_ident "Stdlib!.+"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/name.ml[26,756+46]..src/name.ml[26,756+47])
                                                  Texp_ident "i/796"
                                              <arg>
                                                Nolabel
                                                expression (src/name.ml[26,756+50]..src/name.ml[26,756+51])
                                                  Texp_constant Const_int 1
                                            ]
                                      ]
                                  <case>
                                    pattern (src/name.ml[26,756+55]..src/name.ml[26,756+56])
                                      Tpat_value
                                      pattern (src/name.ml[26,756+55]..src/name.ml[26,756+56])
                                        Tpat_any
                                    expression (src/name.ml[26,756+60]..src/name.ml[26,756+74])
                                      Texp_apply
                                      expression (src/name.ml[26,756+60]..src/name.ml[26,756+64])
                                        Texp_ident "loop/793"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/name.ml[26,756+65]..src/name.ml[26,756+66])
                                            Texp_ident "s/795"
                                        <arg>
                                          Nolabel
                                          expression (src/name.ml[26,756+67]..src/name.ml[26,756+74])
                                            Texp_apply
                                            expression (src/name.ml[26,756+70]..src/name.ml[26,756+71])
                                              Texp_ident "Stdlib!.+"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/name.ml[26,756+68]..src/name.ml[26,756+69])
                                                  Texp_ident "i/796"
                                              <arg>
                                                Nolabel
                                                expression (src/name.ml[26,756+72]..src/name.ml[26,756+73])
                                                  Texp_constant Const_int 1
                                            ]
                                      ]
                                ]
                                []
                      ]
                ]
            <def>
              pattern (src/name.ml[27,831+6]..src/name.ml[27,831+15])
                Tpat_var "after_dot/794"
              expression (src/name.ml[27,831+16]..src/name.ml[33,1041+27]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/name.ml[27,831+16]..src/name.ml[27,831+17])
                      Tpat_var "s/797"
                    expression (src/name.ml[27,831+18]..src/name.ml[33,1041+27]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/name.ml[27,831+18]..src/name.ml[27,831+19])
                            Tpat_var "i/798"
                          expression (src/name.ml[28,853+4]..src/name.ml[33,1041+27])
                            Texp_ifthenelse
                            expression (src/name.ml[28,853+7]..src/name.ml[28,853+26])
                              Texp_apply
                              expression (src/name.ml[28,853+9]..src/name.ml[28,853+10])
                                Texp_ident "Ppxlib__!.Import.="
                              [
                                <arg>
                                  Nolabel
                                  expression (src/name.ml[28,853+7]..src/name.ml[28,853+8])
                                    Texp_ident "i/798"
                                <arg>
                                  Nolabel
                                  expression (src/name.ml[28,853+11]..src/name.ml[28,853+26])
                                    Texp_apply
                                    expression (src/name.ml[28,853+11]..src/name.ml[28,853+24])
                                      Texp_ident "Ppxlib__!.Import.String.length"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/name.ml[28,853+25]..src/name.ml[28,853+26])
                                          Texp_ident "s/797"
                                    ]
                              ]
                            expression (src/name.ml[28,853+32]..src/name.ml[28,853+41])
                              Texp_tuple
                              [
                                expression (src/name.ml[28,853+33]..src/name.ml[28,853+34])
                                  Texp_ident "s/797"
                                expression (src/name.ml[28,853+36]..src/name.ml[28,853+40])
                                  Texp_construct "None"
                                  []
                              ]
                            Some
                              expression (src/name.ml[30,904+6]..src/name.ml[33,1041+27])
                                Texp_match
                                expression (src/name.ml[30,904+12]..src/name.ml[30,904+17])
                                  Texp_apply
                                  expression (src/name.ml[30,904+12]..src/name.ml[30,904+17]) ghost
                                    Texp_ident "Ppxlib__!.Import.String.get"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/name.ml[30,904+12]..src/name.ml[30,904+13])
                                        Texp_ident "s/797"
                                    <arg>
                                      Nolabel
                                      expression (src/name.ml[30,904+15]..src/name.ml[30,904+16])
                                        Texp_ident "i/798"
                                  ]
                                [
                                  <case>
                                    pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18])
                                      Tpat_or
                                      pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                        Tpat_value
                                        pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                          Tpat_constant Const_char 41
                                      pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                        Tpat_or
                                        pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                          Tpat_value
                                          pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                            Tpat_constant Const_char 42
                                        pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                          Tpat_or
                                          pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                            Tpat_value
                                            pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                              Tpat_constant Const_char 43
                                          pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                            Tpat_or
                                            pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                              Tpat_value
                                              pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                Tpat_constant Const_char 44
                                            pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                              Tpat_or
                                              pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                Tpat_value
                                                pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                  Tpat_constant Const_char 45
                                              pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                Tpat_or
                                                pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                  Tpat_value
                                                  pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                    Tpat_constant Const_char 46
                                                pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                  Tpat_or
                                                  pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                    Tpat_value
                                                    pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                      Tpat_constant Const_char 47
                                                  pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                    Tpat_or
                                                    pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                      Tpat_value
                                                      pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                        Tpat_constant Const_char 48
                                                    pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                      Tpat_or
                                                      pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                        Tpat_value
                                                        pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                          Tpat_constant Const_char 49
                                                      pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                        Tpat_or
                                                        pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                          Tpat_value
                                                          pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                            Tpat_constant Const_char 4a
                                                        pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                          Tpat_or
                                                          pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                            Tpat_value
                                                            pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                              Tpat_constant Const_char 4b
                                                          pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                            Tpat_or
                                                            pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                              Tpat_value
                                                              pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                Tpat_constant Const_char 4c
                                                            pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                              Tpat_or
                                                              pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                Tpat_value
                                                                pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                  Tpat_constant Const_char 4d
                                                              pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                Tpat_or
                                                                pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                  Tpat_value
                                                                  pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                    Tpat_constant Const_char 4e
                                                                pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                  Tpat_or
                                                                  pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                    Tpat_value
                                                                    pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                      Tpat_constant Const_char 4f
                                                                  pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                    Tpat_or
                                                                    pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                      Tpat_value
                                                                      pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                        Tpat_constant Const_char 50
                                                                    pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                      Tpat_or
                                                                      pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                        Tpat_value
                                                                        pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                          Tpat_constant Const_char 51
                                                                      pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                        Tpat_or
                                                                        pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                          Tpat_value
                                                                          pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                            Tpat_constant Const_char 52
                                                                        pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                          Tpat_or
                                                                          pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                            Tpat_value
                                                                            pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                              Tpat_constant Const_char 53
                                                                          pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                            Tpat_or
                                                                            pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                              Tpat_value
                                                                              pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                                Tpat_constant Const_char 54
                                                                            pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                              Tpat_or
                                                                              pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                                Tpat_value
                                                                                pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                                  Tpat_constant Const_char 55
                                                                              pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                                Tpat_or
                                                                                pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                                  Tpat_value
                                                                                  pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                                    Tpat_constant Const_char 56
                                                                                pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                                  Tpat_or
                                                                                  pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                                    Tpat_value
                                                                                    pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                                      Tpat_constant Const_char 57
                                                                                  pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                                    Tpat_or
                                                                                    pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                                      Tpat_value
                                                                                      pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                                        Tpat_constant Const_char 58
                                                                                    pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                                      Tpat_or
                                                                                      pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                                        Tpat_value
                                                                                        pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                                          Tpat_constant Const_char 59
                                                                                      pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                                        Tpat_value
                                                                                        pattern (src/name.ml[31,927+8]..src/name.ml[31,927+18]) ghost
                                                                                          Tpat_constant Const_char 5a
                                    expression (src/name.ml[31,927+22]..src/name.ml[31,927+78])
                                      Texp_tuple
                                      [
                                        expression (src/name.ml[31,927+23]..src/name.ml[31,927+46])
                                          Texp_apply
                                          expression (src/name.ml[31,927+23]..src/name.ml[31,927+36])
                                            Texp_ident "Ppxlib__!.Import.String.prefix"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/name.ml[31,927+37]..src/name.ml[31,927+38])
                                                Texp_ident "s/797"
                                            <arg>
                                              Nolabel
                                              expression (src/name.ml[31,927+39]..src/name.ml[31,927+46])
                                                Texp_apply
                                                expression (src/name.ml[31,927+42]..src/name.ml[31,927+43])
                                                  Texp_ident "Stdlib!.-"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/name.ml[31,927+40]..src/name.ml[31,927+41])
                                                      Texp_ident "i/798"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/name.ml[31,927+44]..src/name.ml[31,927+45])
                                                      Texp_constant Const_int 1
                                                ]
                                          ]
                                        expression (src/name.ml[31,927+48]..src/name.ml[31,927+77])
                                          Texp_construct "Some"
                                          [
                                            expression (src/name.ml[31,927+53]..src/name.ml[31,927+77])
                                              Texp_apply
                                              expression (src/name.ml[31,927+54]..src/name.ml[31,927+72])
                                                Texp_ident "Ppxlib__!.Import.String.drop_prefix"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/name.ml[31,927+73]..src/name.ml[31,927+74])
                                                    Texp_ident "s/797"
                                                <arg>
                                                  Nolabel
                                                  expression (src/name.ml[31,927+75]..src/name.ml[31,927+76])
                                                    Texp_ident "i/798"
                                              ]
                                          ]
                                      ]
                                  <case>
                                    pattern (src/name.ml[32,1006+8]..src/name.ml[32,1006+11])
                                      Tpat_value
                                      pattern (src/name.ml[32,1006+8]..src/name.ml[32,1006+11])
                                        Tpat_constant Const_char 2e
                                    expression (src/name.ml[32,1006+15]..src/name.ml[32,1006+34])
                                      Texp_apply
                                      expression (src/name.ml[32,1006+15]..src/name.ml[32,1006+24])
                                        Texp_ident "after_dot/794"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/name.ml[32,1006+25]..src/name.ml[32,1006+26])
                                            Texp_ident "s/797"
                                        <arg>
                                          Nolabel
                                          expression (src/name.ml[32,1006+27]..src/name.ml[32,1006+34])
                                            Texp_apply
                                            expression (src/name.ml[32,1006+30]..src/name.ml[32,1006+31])
                                              Texp_ident "Stdlib!.+"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/name.ml[32,1006+28]..src/name.ml[32,1006+29])
                                                  Texp_ident "i/798"
                                              <arg>
                                                Nolabel
                                                expression (src/name.ml[32,1006+32]..src/name.ml[32,1006+33])
                                                  Texp_constant Const_int 1
                                            ]
                                      ]
                                  <case>
                                    pattern (src/name.ml[33,1041+8]..src/name.ml[33,1041+9])
                                      Tpat_value
                                      pattern (src/name.ml[33,1041+8]..src/name.ml[33,1041+9])
                                        Tpat_any
                                    expression (src/name.ml[33,1041+13]..src/name.ml[33,1041+27])
                                      Texp_apply
                                      expression (src/name.ml[33,1041+13]..src/name.ml[33,1041+17])
                                        Texp_ident "loop/793"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/name.ml[33,1041+18]..src/name.ml[33,1041+19])
                                            Texp_ident "s/797"
                                        <arg>
                                          Nolabel
                                          expression (src/name.ml[33,1041+20]..src/name.ml[33,1041+27])
                                            Texp_apply
                                            expression (src/name.ml[33,1041+23]..src/name.ml[33,1041+24])
                                              Texp_ident "Stdlib!.+"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/name.ml[33,1041+21]..src/name.ml[33,1041+22])
                                                  Texp_ident "i/798"
                                              <arg>
                                                Nolabel
                                                expression (src/name.ml[33,1041+25]..src/name.ml[33,1041+26])
                                                  Texp_constant Const_int 1
                                            ]
                                      ]
                                ]
                                []
                      ]
                ]
          ]
          expression (src/name.ml[35,1074+2]..src/name.ml[35,1074+19])
            Texp_function
            Nolabel
            [
              <case>
                pattern (src/name.ml[35,1074+6]..src/name.ml[35,1074+7])
                  Tpat_var "s/799"
                expression (src/name.ml[35,1074+11]..src/name.ml[35,1074+19])
                  Texp_apply
                  expression (src/name.ml[35,1074+11]..src/name.ml[35,1074+15])
                    Texp_ident "loop/793"
                  [
                    <arg>
                      Nolabel
                      expression (src/name.ml[35,1074+16]..src/name.ml[35,1074+17])
                        Texp_ident "s/799"
                    <arg>
                      Nolabel
                      expression (src/name.ml[35,1074+18]..src/name.ml[35,1074+19])
                        Texp_constant Const_int 0
                  ]
            ]
    ]
  structure_item (src/name.ml[37,1095+0]..src/name.ml[45,1351+3])
    Tstr_module
    Pattern/1194
      module_expr (src/name.ml[37,1095+17]..src/name.ml[45,1351+3])
        Tmod_structure
        [
          structure_item (src/name.ml[38,1119+2]..src/name.ml[38,1119+57])
            Tstr_type Rec
            [
              type_declaration t/800 (src/name.ml[38,1119+2]..src/name.ml[38,1119+57])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_record
                    [
                      (src/name.ml[38,1119+13]..src/name.ml[38,1119+27])
                        Immutable
                        name/801                        core_type (src/name.ml[38,1119+20]..src/name.ml[38,1119+26])
                          Ttyp_poly
                          core_type (src/name.ml[38,1119+20]..src/name.ml[38,1119+26])
                            Ttyp_constr "string/17!"
                            []
                      (src/name.ml[38,1119+28]..src/name.ml[38,1119+55])
                        Immutable
                        dot_suffixes/851                        core_type (src/name.ml[38,1119+43]..src/name.ml[38,1119+55])
                          Ttyp_poly
                          core_type (src/name.ml[38,1119+43]..src/name.ml[38,1119+55])
                            Ttyp_constr "Ppxlib__!.Import.String.Set.t"
                            []
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (src/name.ml[40,1178+2]..src/name.ml[41,1196+67])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[40,1178+6]..src/name.ml[40,1178+10])
                  Tpat_var "make/852"
                expression (src/name.ml[40,1178+11]..src/name.ml[41,1196+67]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/name.ml[40,1178+11]..src/name.ml[40,1178+15])
                        Tpat_var "name/854"
                      expression (src/name.ml[41,1196+4]..src/name.ml[41,1196+67])
                        Texp_record
                          fields =
                            [
                              "name"
                                expression (src/name.ml[41,1196+6]..src/name.ml[41,1196+10]) ghost
                                  Texp_ident "name/854"
                              "dot_suffixes"
                                expression (src/name.ml[41,1196+27]..src/name.ml[41,1196+65])
                                  Texp_apply
                                  expression (src/name.ml[41,1196+27]..src/name.ml[41,1196+45])
                                    Texp_ident "Ppxlib__!.Import.String.Set.of_list"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/name.ml[41,1196+46]..src/name.ml[41,1196+65])
                                        Texp_apply
                                        expression (src/name.ml[41,1196+47]..src/name.ml[41,1196+59])
                                          Texp_ident "dot_suffixes/787"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/name.ml[41,1196+60]..src/name.ml[41,1196+64])
                                              Texp_ident "name/854"
                                        ]
                                  ]
                            ]
                          representation =
                            Record_regular
                          extended_expression =
                            None
                  ]
            ]
          structure_item (src/name.ml[43,1265+2]..src/name.ml[43,1265+21])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[43,1265+6]..src/name.ml[43,1265+10])
                  Tpat_var "name/1187"
                expression (src/name.ml[43,1265+11]..src/name.ml[43,1265+21]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/name.ml[43,1265+11]..src/name.ml[43,1265+12])
                        Tpat_var "t/1189"
                      expression (src/name.ml[43,1265+15]..src/name.ml[43,1265+21])
                        Texp_field
                        expression (src/name.ml[43,1265+15]..src/name.ml[43,1265+16])
                          Texp_ident "t/1189"
                        "name"
                  ]
            ]
          structure_item (src/name.ml[44,1287+2]..src/name.ml[44,1287+63])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[44,1287+6]..src/name.ml[44,1287+13])
                  Tpat_var "matches/1190"
                expression (src/name.ml[44,1287+14]..src/name.ml[44,1287+63]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/name.ml[44,1287+14]..src/name.ml[44,1287+15])
                        Tpat_var "t/1192"
                      expression (src/name.ml[44,1287+16]..src/name.ml[44,1287+63]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/name.ml[44,1287+16]..src/name.ml[44,1287+23])
                              Tpat_var "matched/1193"
                            expression (src/name.ml[44,1287+26]..src/name.ml[44,1287+63])
                              Texp_apply
                              expression (src/name.ml[44,1287+26]..src/name.ml[44,1287+40])
                                Texp_ident "Ppxlib__!.Import.String.Set.mem"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/name.ml[44,1287+41]..src/name.ml[44,1287+48])
                                    Texp_ident "matched/1193"
                                <arg>
                                  Nolabel
                                  expression (src/name.ml[44,1287+49]..src/name.ml[44,1287+63])
                                    Texp_field
                                    expression (src/name.ml[44,1287+49]..src/name.ml[44,1287+50])
                                      Texp_ident "t/1192"
                                    "dot_suffixes"
                              ]
                        ]
                  ]
            ]
        ]
  structure_item (src/name.ml[48,1427+0]..src/name.ml[55,1693+34])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/name.ml[48,1427+4]..src/name.ml[48,1427+25])
          Tpat_var "split_outer_namespace/1195"
        expression (src/name.ml[48,1427+26]..src/name.ml[55,1693+34]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/name.ml[48,1427+26]..src/name.ml[48,1427+30])
                Tpat_var "name/1197"
              expression (src/name.ml[49,1460+2]..src/name.ml[55,1693+34])
                Texp_match
                expression (src/name.ml[49,1460+8]..src/name.ml[49,1460+33])
                  Texp_apply
                  expression (src/name.ml[49,1460+8]..src/name.ml[49,1460+24])
                    Texp_ident "Ppxlib__!.Import.String.index_opt"
                  [
                    <arg>
                      Nolabel
                      expression (src/name.ml[49,1460+25]..src/name.ml[49,1460+29])
                        Texp_ident "name/1197"
                    <arg>
                      Nolabel
                      expression (src/name.ml[49,1460+30]..src/name.ml[49,1460+33])
                        Texp_constant Const_char 2e
                  ]
                [
                  <case>
                    pattern (src/name.ml[50,1499+4]..src/name.ml[50,1499+8])
                      Tpat_value
                      pattern (src/name.ml[50,1499+4]..src/name.ml[50,1499+8])
                        Tpat_construct "None"
                        []
                    expression (src/name.ml[50,1499+12]..src/name.ml[50,1499+16])
                      Texp_construct "None"
                      []
                  <case>
                    pattern (src/name.ml[51,1516+4]..src/name.ml[51,1516+10])
                      Tpat_value
                      pattern (src/name.ml[51,1516+4]..src/name.ml[51,1516+10])
                        Tpat_construct "Some"
                        [
                          pattern (src/name.ml[51,1516+9]..src/name.ml[51,1516+10])
                            Tpat_var "i/1198"
                        ]
                    expression (src/name.ml[52,1530+6]..src/name.ml[55,1693+34])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/name.ml[52,1530+10]..src/name.ml[52,1530+11])
                            Tpat_var "n/1199"
                          expression (src/name.ml[52,1530+14]..src/name.ml[52,1530+32])
                            Texp_apply
                            expression (src/name.ml[52,1530+14]..src/name.ml[52,1530+27])
                              Texp_ident "Ppxlib__!.Import.String.length"
                            [
                              <arg>
                                Nolabel
                                expression (src/name.ml[52,1530+28]..src/name.ml[52,1530+32])
                                  Texp_ident "name/1197"
                            ]
                      ]
                      expression (src/name.ml[53,1566+6]..src/name.ml[55,1693+34])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/name.ml[53,1566+10]..src/name.ml[53,1566+20])
                              Tpat_var "before_dot/1200"
                            expression (src/name.ml[53,1566+23]..src/name.ml[53,1566+52])
                              Texp_apply
                              expression (src/name.ml[53,1566+23]..src/name.ml[53,1566+33])
                                Texp_ident "Ppxlib__!.Import.String.sub"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/name.ml[53,1566+34]..src/name.ml[53,1566+38])
                                    Texp_ident "name/1197"
                                <arg>
                                  Labelled "pos"
                                  expression (src/name.ml[53,1566+44]..src/name.ml[53,1566+45])
                                    Texp_constant Const_int 0
                                <arg>
                                  Labelled "len"
                                  expression (src/name.ml[53,1566+51]..src/name.ml[53,1566+52])
                                    Texp_ident "i/1198"
                              ]
                        ]
                        expression (src/name.ml[54,1622+6]..src/name.ml[55,1693+34])
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (src/name.ml[54,1622+10]..src/name.ml[54,1622+19])
                                Tpat_var "after_dot/1201"
                              expression (src/name.ml[54,1622+22]..src/name.ml[54,1622+67])
                                Texp_apply
                                expression (src/name.ml[54,1622+22]..src/name.ml[54,1622+32])
                                  Texp_ident "Ppxlib__!.Import.String.sub"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/name.ml[54,1622+33]..src/name.ml[54,1622+37])
                                      Texp_ident "name/1197"
                                  <arg>
                                    Labelled "pos"
                                    expression (src/name.ml[54,1622+43]..src/name.ml[54,1622+50])
                                      Texp_apply
                                      expression (src/name.ml[54,1622+46]..src/name.ml[54,1622+47])
                                        Texp_ident "Stdlib!.+"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/name.ml[54,1622+44]..src/name.ml[54,1622+45])
                                            Texp_ident "i/1198"
                                        <arg>
                                          Nolabel
                                          expression (src/name.ml[54,1622+48]..src/name.ml[54,1622+49])
                                            Texp_constant Const_int 1
                                      ]
                                  <arg>
                                    Labelled "len"
                                    expression (src/name.ml[54,1622+56]..src/name.ml[54,1622+67])
                                      Texp_apply
                                      expression (src/name.ml[54,1622+63]..src/name.ml[54,1622+64])
                                        Texp_ident "Stdlib!.-"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/name.ml[54,1622+57]..src/name.ml[54,1622+62])
                                            Texp_apply
                                            expression (src/name.ml[54,1622+59]..src/name.ml[54,1622+60])
                                              Texp_ident "Stdlib!.-"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/name.ml[54,1622+57]..src/name.ml[54,1622+58])
                                                  Texp_ident "n/1199"
                                              <arg>
                                                Nolabel
                                                expression (src/name.ml[54,1622+61]..src/name.ml[54,1622+62])
                                                  Texp_ident "i/1198"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/name.ml[54,1622+65]..src/name.ml[54,1622+66])
                                            Texp_constant Const_int 1
                                      ]
                                ]
                          ]
                          expression (src/name.ml[55,1693+6]..src/name.ml[55,1693+34])
                            Texp_construct "Some"
                            [
                              expression (src/name.ml[55,1693+11]..src/name.ml[55,1693+34])
                                Texp_tuple
                                [
                                  expression (src/name.ml[55,1693+12]..src/name.ml[55,1693+22])
                                    Texp_ident "before_dot/1200"
                                  expression (src/name.ml[55,1693+24]..src/name.ml[55,1693+33])
                                    Texp_ident "after_dot/1201"
                                ]
                            ]
                ]
                []
          ]
    ]
  structure_item (src/name.ml[57,1729+0]..src/name.ml[119,3807+3])
    Tstr_module
    Allowlisted/1294
      module_expr (src/name.ml[57,1729+21]..src/name.ml[119,3807+3])
        Tmod_structure
        [
          structure_item (src/name.ml[66,2113+2]..src/name.ml[70,2280+50])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[66,2113+6]..src/name.ml[66,2113+16])
                  Tpat_var "create_set/1202"
                expression (src/name.ml[66,2113+17]..src/name.ml[70,2280+50]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/name.ml[66,2113+17]..src/name.ml[66,2113+38])
                        Tpat_var "fully_qualified_names/1204"
                      expression (src/name.ml[67,2154+4]..src/name.ml[70,2280+50])
                        Texp_apply
                        expression (src/name.ml[67,2154+4]..src/name.ml[67,2154+18])
                          Texp_ident "Ppxlib__!.Import.List.fold_left"
                        [
                          <arg>
                            Labelled "f"
                            expression (src/name.ml[68,2173+9]..src/name.ml[69,2199+80])
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/name.ml[68,2173+14]..src/name.ml[68,2173+17])
                                    Tpat_var "acc/1278"
                                  expression (src/name.ml[68,2173+18]..src/name.ml[69,2199+79]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/name.ml[68,2173+18]..src/name.ml[68,2173+22])
                                          Tpat_var "name/1279"
                                        expression (src/name.ml[69,2199+8]..src/name.ml[69,2199+79])
                                          Texp_apply
                                          expression (src/name.ml[69,2199+8]..src/name.ml[69,2199+25])
                                            Texp_ident "fold_dot_suffixes/551"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/name.ml[69,2199+26]..src/name.ml[69,2199+30])
                                                Texp_ident "name/1279"
                                            <arg>
                                              Labelled "init"
                                              expression (src/name.ml[69,2199+37]..src/name.ml[69,2199+40])
                                                Texp_ident "acc/1278"
                                            <arg>
                                              Labelled "f"
                                              expression (src/name.ml[69,2199+44]..src/name.ml[69,2199+79])
                                                Texp_function
                                                Nolabel
                                                [
                                                  <case>
                                                    pattern (src/name.ml[69,2199+49]..src/name.ml[69,2199+50])
                                                      Tpat_var "x/1280"
                                                    expression (src/name.ml[69,2199+51]..src/name.ml[69,2199+78]) ghost
                                                      Texp_function
                                                      Nolabel
                                                      [
                                                        <case>
                                                          pattern (src/name.ml[69,2199+51]..src/name.ml[69,2199+54])
                                                            Tpat_var "acc/1281"
                                                          expression (src/name.ml[69,2199+58]..src/name.ml[69,2199+78])
                                                            Texp_apply
                                                            expression (src/name.ml[69,2199+58]..src/name.ml[69,2199+72])
                                                              Texp_ident "Ppxlib__!.Import.String.Set.add"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/name.ml[69,2199+73]..src/name.ml[69,2199+74])
                                                                  Texp_ident "x/1280"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/name.ml[69,2199+75]..src/name.ml[69,2199+78])
                                                                  Texp_ident "acc/1281"
                                                            ]
                                                      ]
                                                ]
                                          ]
                                    ]
                              ]
                          <arg>
                            Labelled "init"
                            expression (src/name.ml[70,2280+12]..src/name.ml[70,2280+28])
                              Texp_ident "Ppxlib__!.Import.String.Set.empty"
                          <arg>
                            Nolabel
                            expression (src/name.ml[70,2280+29]..src/name.ml[70,2280+50])
                              Texp_ident "fully_qualified_names/1204"
                        ]
                  ]
            ]
          structure_item (src/name.ml[72,2332+2]..src/name.ml[102,3191+7])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[72,2332+6]..src/name.ml[72,2332+16])
                  Tpat_var "attributes/1282"
                expression (src/name.ml[73,2351+4]..src/name.ml[102,3191+7])
                  Texp_apply
                  expression (src/name.ml[73,2351+4]..src/name.ml[73,2351+14])
                    Texp_ident "create_set/1202"
                  [
                    <arg>
                      Nolabel
                      expression (src/name.ml[74,2366+6]..src/name.ml[102,3191+7])
                        Texp_construct "::"
                        [
                          expression (src/name.ml[75,2374+8]..src/name.ml[75,2374+21])
                            Texp_constant Const_string("ocaml.alert",(src/name.ml[75,2374+9]..src/name.ml[75,2374+20]),None)
                          expression (src/name.ml[76,2397+8]..src/name.ml[102,3191+7]) ghost
                            Texp_construct "::"
                            [
                              expression (src/name.ml[76,2397+8]..src/name.ml[76,2397+21])
                                Texp_constant Const_string("ocaml.boxed",(src/name.ml[76,2397+9]..src/name.ml[76,2397+20]),None)
                              expression (src/name.ml[77,2420+8]..src/name.ml[102,3191+7]) ghost
                                Texp_construct "::"
                                [
                                  expression (src/name.ml[77,2420+8]..src/name.ml[77,2420+26])
                                    Texp_constant Const_string("ocaml.deprecated",(src/name.ml[77,2420+9]..src/name.ml[77,2420+25]),None)
                                  expression (src/name.ml[78,2448+8]..src/name.ml[102,3191+7]) ghost
                                    Texp_construct "::"
                                    [
                                      expression (src/name.ml[78,2448+8]..src/name.ml[78,2448+34])
                                        Texp_constant Const_string("ocaml.deprecated_mutable",(src/name.ml[78,2448+9]..src/name.ml[78,2448+33]),None)
                                      expression (src/name.ml[79,2484+8]..src/name.ml[102,3191+7]) ghost
                                        Texp_construct "::"
                                        [
                                          expression (src/name.ml[79,2484+8]..src/name.ml[79,2484+19])
                                            Texp_constant Const_string("ocaml.doc",(src/name.ml[79,2484+9]..src/name.ml[79,2484+18]),None)
                                          expression (src/name.ml[80,2505+8]..src/name.ml[102,3191+7]) ghost
                                            Texp_construct "::"
                                            [
                                              expression (src/name.ml[80,2505+8]..src/name.ml[80,2505+37])
                                                Texp_constant Const_string("ocaml.extension_constructor",(src/name.ml[80,2505+9]..src/name.ml[80,2505+36]),None)
                                              expression (src/name.ml[81,2544+8]..src/name.ml[102,3191+7]) ghost
                                                Texp_construct "::"
                                                [
                                                  expression (src/name.ml[81,2544+8]..src/name.ml[81,2544+25])
                                                    Texp_constant Const_string("ocaml.immediate",(src/name.ml[81,2544+9]..src/name.ml[81,2544+24]),None)
                                                  expression (src/name.ml[82,2571+8]..src/name.ml[102,3191+7]) ghost
                                                    Texp_construct "::"
                                                    [
                                                      expression (src/name.ml[82,2571+8]..src/name.ml[82,2571+27])
                                                        Texp_constant Const_string("ocaml.immediate64",(src/name.ml[82,2571+9]..src/name.ml[82,2571+26]),None)
                                                      expression (src/name.ml[83,2600+8]..src/name.ml[102,3191+7]) ghost
                                                        Texp_construct "::"
                                                        [
                                                          expression (src/name.ml[83,2600+8]..src/name.ml[83,2600+22])
                                                            Texp_constant Const_string("ocaml.inline",(src/name.ml[83,2600+9]..src/name.ml[83,2600+21]),None)
                                                          expression (src/name.ml[84,2624+8]..src/name.ml[102,3191+7]) ghost
                                                            Texp_construct "::"
                                                            [
                                                              expression (src/name.ml[84,2624+8]..src/name.ml[84,2624+23])
                                                                Texp_constant Const_string("ocaml.inlined",(src/name.ml[84,2624+9]..src/name.ml[84,2624+22]),None)
                                                              expression (src/name.ml[85,2649+8]..src/name.ml[102,3191+7]) ghost
                                                                Texp_construct "::"
                                                                [
                                                                  expression (src/name.ml[85,2649+8]..src/name.ml[85,2649+21])
                                                                    Texp_constant Const_string("ocaml.local",(src/name.ml[85,2649+9]..src/name.ml[85,2649+20]),None)
                                                                  expression (src/name.ml[86,2672+8]..src/name.ml[102,3191+7]) ghost
                                                                    Texp_construct "::"
                                                                    [
                                                                      expression (src/name.ml[86,2672+8]..src/name.ml[86,2672+23])
                                                                        Texp_constant Const_string("ocaml.noalloc",(src/name.ml[86,2672+9]..src/name.ml[86,2672+22]),None)
                                                                      expression (src/name.ml[87,2697+8]..src/name.ml[102,3191+7]) ghost
                                                                        Texp_construct "::"
                                                                        [
                                                                          expression (src/name.ml[87,2697+8]..src/name.ml[87,2697+25])
                                                                            Texp_constant Const_string("ocaml.ppwarning",(src/name.ml[87,2697+9]..src/name.ml[87,2697+24]),None)
                                                                          expression (src/name.ml[88,2724+8]..src/name.ml[102,3191+7]) ghost
                                                                            Texp_construct "::"
                                                                            [
                                                                              expression (src/name.ml[88,2724+8]..src/name.ml[88,2724+30])
                                                                                Texp_constant Const_string("ocaml.remove_aliases",(src/name.ml[88,2724+9]..src/name.ml[88,2724+29]),None)
                                                                              expression (src/name.ml[89,2756+8]..src/name.ml[102,3191+7]) ghost
                                                                                Texp_construct "::"
                                                                                [
                                                                                  expression (src/name.ml[89,2756+8]..src/name.ml[89,2756+26])
                                                                                    Texp_constant Const_string("ocaml.specialise",(src/name.ml[89,2756+9]..src/name.ml[89,2756+25]),None)
                                                                                  expression (src/name.ml[90,2784+8]..src/name.ml[102,3191+7]) ghost
                                                                                    Texp_construct "::"
                                                                                    [
                                                                                      expression (src/name.ml[90,2784+8]..src/name.ml[90,2784+27])
                                                                                        Texp_constant Const_string("ocaml.specialised",(src/name.ml[90,2784+9]..src/name.ml[90,2784+26]),None)
                                                                                      expression (src/name.ml[91,2813+8]..src/name.ml[102,3191+7]) ghost
                                                                                        Texp_construct "::"
                                                                                        [
                                                                                          expression (src/name.ml[91,2813+8]..src/name.ml[91,2813+24])
                                                                                            Texp_constant Const_string("ocaml.tailcall",(src/name.ml[91,2813+9]..src/name.ml[91,2813+23]),None)
                                                                                          expression (src/name.ml[92,2839+8]..src/name.ml[102,3191+7]) ghost
                                                                                            Texp_construct "::"
                                                                                            [
                                                                                              expression (src/name.ml[92,2839+8]..src/name.ml[92,2839+20])
                                                                                                Texp_constant Const_string("ocaml.text",(src/name.ml[92,2839+9]..src/name.ml[92,2839+19]),None)
                                                                                              expression (src/name.ml[93,2861+8]..src/name.ml[102,3191+7]) ghost
                                                                                                Texp_construct "::"
                                                                                                [
                                                                                                  expression (src/name.ml[93,2861+8]..src/name.ml[93,2861+23])
                                                                                                    Texp_constant Const_string("ocaml.unboxed",(src/name.ml[93,2861+9]..src/name.ml[93,2861+22]),None)
                                                                                                  expression (src/name.ml[94,2886+8]..src/name.ml[102,3191+7]) ghost
                                                                                                    Texp_construct "::"
                                                                                                    [
                                                                                                      expression (src/name.ml[94,2886+8]..src/name.ml[94,2886+22])
                                                                                                        Texp_constant Const_string("ocaml.unroll",(src/name.ml[94,2886+9]..src/name.ml[94,2886+21]),None)
                                                                                                      expression (src/name.ml[95,2910+8]..src/name.ml[102,3191+7]) ghost
                                                                                                        Texp_construct "::"
                                                                                                        [
                                                                                                          expression (src/name.ml[95,2910+8]..src/name.ml[95,2910+24])
                                                                                                            Texp_constant Const_string("ocaml.unrolled",(src/name.ml[95,2910+9]..src/name.ml[95,2910+23]),None)
                                                                                                          expression (src/name.ml[96,2936+8]..src/name.ml[102,3191+7]) ghost
                                                                                                            Texp_construct "::"
                                                                                                            [
                                                                                                              expression (src/name.ml[96,2936+8]..src/name.ml[96,2936+24])
                                                                                                                Texp_constant Const_string("ocaml.untagged",(src/name.ml[96,2936+9]..src/name.ml[96,2936+23]),None)
                                                                                                              expression (src/name.ml[97,2962+8]..src/name.ml[102,3191+7]) ghost
                                                                                                                Texp_construct "::"
                                                                                                                [
                                                                                                                  expression (src/name.ml[97,2962+8]..src/name.ml[97,2962+39])
                                                                                                                    Texp_constant Const_string("ocaml.warn_on_literal_pattern",(src/name.ml[97,2962+9]..src/name.ml[97,2962+38]),None)
                                                                                                                  expression (src/name.ml[98,3003+8]..src/name.ml[102,3191+7]) ghost
                                                                                                                    Texp_construct "::"
                                                                                                                    [
                                                                                                                      expression (src/name.ml[98,3003+8]..src/name.ml[98,3003+25])
                                                                                                                        Texp_constant Const_string("ocaml.warnerror",(src/name.ml[98,3003+9]..src/name.ml[98,3003+24]),None)
                                                                                                                      expression (src/name.ml[99,3030+8]..src/name.ml[102,3191+7]) ghost
                                                                                                                        Texp_construct "::"
                                                                                                                        [
                                                                                                                          expression (src/name.ml[99,3030+8]..src/name.ml[99,3030+23])
                                                                                                                            Texp_constant Const_string("ocaml.warning",(src/name.ml[99,3030+9]..src/name.ml[99,3030+22]),None)
                                                                                                                          expression (src/name.ml[100,3055+8]..src/name.ml[102,3191+7]) ghost
                                                                                                                            Texp_construct "::"
                                                                                                                            [
                                                                                                                              expression (src/name.ml[100,3055+8]..src/name.ml[100,3055+32])
                                                                                                                                Texp_constant Const_string("ocaml.toplevel_printer",(src/name.ml[100,3055+9]..src/name.ml[100,3055+31]),None)
                                                                                                                              expression (src/name.ml[101,3126+8]..src/name.ml[102,3191+7]) ghost
                                                                                                                                Texp_construct "::"
                                                                                                                                [
                                                                                                                                  expression (src/name.ml[101,3126+8]..src/name.ml[101,3126+26])
                                                                                                                                    Texp_constant Const_string("toplevel_printer",(src/name.ml[101,3126+9]..src/name.ml[101,3126+25]),None)
                                                                                                                                  expression (src/name.ml[102,3191+6]..src/name.ml[102,3191+7]) ghost
                                                                                                                                    Texp_construct "[]"
                                                                                                                                    []
                                                                                                                                ]
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                ]
                                                                                                            ]
                                                                                                        ]
                                                                                                    ]
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                        ]
                                                    ]
                                                ]
                                            ]
                                        ]
                                    ]
                                ]
                            ]
                        ]
                  ]
            ]
          structure_item (src/name.ml[110,3448+2]..src/name.ml[110,3448+78])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[110,3448+6]..src/name.ml[110,3448+16])
                  Tpat_var "extensions/1283"
                expression (src/name.ml[110,3448+19]..src/name.ml[110,3448+78])
                  Texp_apply
                  expression (src/name.ml[110,3448+19]..src/name.ml[110,3448+29])
                    Texp_ident "create_set/1202"
                  [
                    <arg>
                      Nolabel
                      expression (src/name.ml[110,3448+30]..src/name.ml[110,3448+78])
                        Texp_construct "::"
                        [
                          expression (src/name.ml[110,3448+32]..src/name.ml[110,3448+45])
                            Texp_constant Const_string("ocaml.error",(src/name.ml[110,3448+33]..src/name.ml[110,3448+44]),None)
                          expression (src/name.ml[110,3448+47]..src/name.ml[110,3448+78]) ghost
                            Texp_construct "::"
                            [
                              expression (src/name.ml[110,3448+47]..src/name.ml[110,3448+76])
                                Texp_constant Const_string("ocaml.extension_constructor",(src/name.ml[110,3448+48]..src/name.ml[110,3448+75]),None)
                              expression (src/name.ml[110,3448+77]..src/name.ml[110,3448+78]) ghost
                                Texp_construct "[]"
                                []
                            ]
                        ]
                  ]
            ]
          structure_item (src/name.ml[112,3528+2]..src/name.ml[115,3633+50])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[112,3528+6]..src/name.ml[112,3528+20])
                  Tpat_var "is_allowlisted/1284"
                expression (src/name.ml[112,3528+21]..src/name.ml[115,3633+50]) ghost
                  Texp_function
                  Labelled "kind"
                  [
                    <case>
                      pattern (src/name.ml[112,3528+22]..src/name.ml[112,3528+26])
                        Tpat_var "kind/1286"
                      expression (src/name.ml[112,3528+27]..src/name.ml[115,3633+50]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/name.ml[112,3528+27]..src/name.ml[112,3528+31])
                              Tpat_var "name/1287"
                            expression (src/name.ml[113,3562+4]..src/name.ml[115,3633+50])
                              Texp_match
                              expression (src/name.ml[113,3562+10]..src/name.ml[113,3562+14])
                                Texp_ident "kind/1286"
                              [
                                <case>
                                  pattern (src/name.ml[114,3582+6]..src/name.ml[114,3582+16])
                                    Tpat_value
                                    pattern (src/name.ml[114,3582+6]..src/name.ml[114,3582+16])
                                      Tpat_variant "Attribute"
                                      None
                                  expression (src/name.ml[114,3582+20]..src/name.ml[114,3582+50])
                                    Texp_apply
                                    expression (src/name.ml[114,3582+20]..src/name.ml[114,3582+34])
                                      Texp_ident "Ppxlib__!.Import.String.Set.mem"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/name.ml[114,3582+35]..src/name.ml[114,3582+39])
                                          Texp_ident "name/1287"
                                      <arg>
                                        Nolabel
                                        expression (src/name.ml[114,3582+40]..src/name.ml[114,3582+50])
                                          Texp_ident "attributes/1282"
                                    ]
                                <case>
                                  pattern (src/name.ml[115,3633+6]..src/name.ml[115,3633+16])
                                    Tpat_value
                                    pattern (src/name.ml[115,3633+6]..src/name.ml[115,3633+16])
                                      Tpat_variant "Extension"
                                      None
                                  expression (src/name.ml[115,3633+20]..src/name.ml[115,3633+50])
                                    Texp_apply
                                    expression (src/name.ml[115,3633+20]..src/name.ml[115,3633+34])
                                      Texp_ident "Ppxlib__!.Import.String.Set.mem"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/name.ml[115,3633+35]..src/name.ml[115,3633+39])
                                          Texp_ident "name/1287"
                                      <arg>
                                        Nolabel
                                        expression (src/name.ml[115,3633+40]..src/name.ml[115,3633+50])
                                          Texp_ident "extensions/1283"
                                    ]
                              ]
                              []
                        ]
                  ]
            ]
          structure_item (src/name.ml[117,3685+2]..src/name.ml[117,3685+60])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[117,3685+6]..src/name.ml[117,3685+24])
                  Tpat_var "get_attribute_list/1288"
                expression (src/name.ml[117,3685+25]..src/name.ml[117,3685+60]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/name.ml[117,3685+25]..src/name.ml[117,3685+27])
                        Tpat_construct "()"
                        []
                      expression (src/name.ml[117,3685+30]..src/name.ml[117,3685+60])
                        Texp_apply
                        expression (src/name.ml[117,3685+30]..src/name.ml[117,3685+49])
                          Texp_ident "Ppxlib__!.Import.String.Set.elements"
                        [
                          <arg>
                            Nolabel
                            expression (src/name.ml[117,3685+50]..src/name.ml[117,3685+60])
                              Texp_ident "attributes/1282"
                        ]
                  ]
            ]
          structure_item (src/name.ml[118,3746+2]..src/name.ml[118,3746+60])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[118,3746+6]..src/name.ml[118,3746+24])
                  Tpat_var "get_extension_list/1291"
                expression (src/name.ml[118,3746+25]..src/name.ml[118,3746+60]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/name.ml[118,3746+25]..src/name.ml[118,3746+27])
                        Tpat_construct "()"
                        []
                      expression (src/name.ml[118,3746+30]..src/name.ml[118,3746+60])
                        Texp_apply
                        expression (src/name.ml[118,3746+30]..src/name.ml[118,3746+49])
                          Texp_ident "Ppxlib__!.Import.String.Set.elements"
                        [
                          <arg>
                            Nolabel
                            expression (src/name.ml[118,3746+50]..src/name.ml[118,3746+60])
                              Texp_ident "extensions/1283"
                        ]
                  ]
            ]
        ]
  structure_item (src/name.ml[121,3812+0]..src/name.ml[186,6173+3])
    Tstr_module
    Reserved_namespaces/1688
      module_expr (src/name.ml[121,3812+29]..src/name.ml[186,6173+3])
        module_expr (src/name.ml[121,3812+29]..src/name.ml[186,6173+3])
          Tmod_structure
          [
            structure_item (src/name.ml[122,3848+2]..src/name.ml[123,3901+55])
              Tstr_type Rec
              [
                type_declaration reserved/1295 (src/name.ml[122,3848+2]..src/name.ml[122,3848+52])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ttype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (src/name.ml[122,3848+18]..src/name.ml[122,3848+52])
                        Ttyp_constr "Ppxlib__!.Import.Hashtbl.t"
                        [
                          core_type (src/name.ml[122,3848+19]..src/name.ml[122,3848+25])
                            Ttyp_constr "string/17!"
                            []
                          core_type (src/name.ml[122,3848+27]..src/name.ml[122,3848+41])
                            Ttyp_constr "sub_namespaces/1296"
                            []
                        ]
                type_declaration sub_namespaces/1296 (src/name.ml[123,3901+2]..src/name.ml[123,3901+55])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ttype_variant
                      [
                        (src/name.ml[123,3901+23]..src/name.ml[123,3901+26])
                          All/1626
                          []
                          None
                        (src/name.ml[123,3901+27]..src/name.ml[123,3901+55])
                          Sub_namespaces/1627
                          [
                            core_type (src/name.ml[123,3901+47]..src/name.ml[123,3901+55])
                              Ttyp_constr "reserved/1295"
                              []
                          ]
                          None
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (src/name.ml[132,4282+2]..src/name.ml[132,4282+55])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/name.ml[132,4282+6]..src/name.ml[132,4282+21])
                    Tpat_var "create_reserved/1628"
                  expression (src/name.ml[132,4282+22]..src/name.ml[132,4282+55]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/name.ml[132,4282+22]..src/name.ml[132,4282+24])
                          Tpat_construct "()"
                          []
                        expression (src/name.ml[132,4282+38]..src/name.ml[132,4282+55])
                          Texp_constraint
                          core_type (src/name.ml[132,4282+27]..src/name.ml[132,4282+35])
                            Ttyp_constr "reserved/1295"
                            []
                            Texp_apply
                            expression (src/name.ml[132,4282+38]..src/name.ml[132,4282+52])
                              Texp_ident "Ppxlib__!.Import.Hashtbl.create"
                            [
                              <arg>
                                Optional "random"
                                expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                  Texp_construct "None"
                                  []
                              <arg>
                                Nolabel
                                expression (src/name.ml[132,4282+53]..src/name.ml[132,4282+55])
                                  Texp_constant Const_int 16
                            ]
                    ]
              ]
            structure_item (src/name.ml[134,4339+2]..src/name.ml[143,4697+20])
              Tstr_value Rec
              [
                <def>
                  pattern (src/name.ml[134,4339+10]..src/name.ml[134,4339+17])
                    Tpat_var "reserve/1631"
                  expression (src/name.ml[134,4339+18]..src/name.ml[143,4697+20]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/name.ml[134,4339+18]..src/name.ml[134,4339+20])
                          Tpat_var "ns/1632"
                        expression (src/name.ml[134,4339+21]..src/name.ml[143,4697+20]) ghost
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/name.ml[134,4339+21]..src/name.ml[134,4339+24])
                                Tpat_var "tbl/1633"
                              expression (src/name.ml[135,4366+4]..src/name.ml[143,4697+20])
                                Texp_match
                                expression (src/name.ml[135,4366+10]..src/name.ml[135,4366+34])
                                  Texp_apply
                                  expression (src/name.ml[135,4366+10]..src/name.ml[135,4366+31])
                                    Texp_ident "split_outer_namespace/1195"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/name.ml[135,4366+32]..src/name.ml[135,4366+34])
                                        Texp_ident "ns/1632"
                                  ]
                                [
                                  <case>
                                    pattern (src/name.ml[136,4406+6]..src/name.ml[136,4406+10])
                                      Tpat_value
                                      pattern (src/name.ml[136,4406+6]..src/name.ml[136,4406+10])
                                        Tpat_construct "None"
                                        []
                                    expression (src/name.ml[136,4406+14]..src/name.ml[136,4406+51])
                                      Texp_apply
                                      expression (src/name.ml[136,4406+14]..src/name.ml[136,4406+29])
                                        Texp_ident "Ppxlib__!.Import.Hashtbl.add_exn"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/name.ml[136,4406+30]..src/name.ml[136,4406+33])
                                            Texp_ident "tbl/1633"
                                        <arg>
                                          Labelled "key"
                                          expression (src/name.ml[136,4406+39]..src/name.ml[136,4406+41])
                                            Texp_ident "ns/1632"
                                        <arg>
                                          Labelled "data"
                                          expression (src/name.ml[136,4406+48]..src/name.ml[136,4406+51])
                                            Texp_construct "All"
                                            []
                                      ]
                                  <case>
                                    pattern (src/name.ml[137,4458+6]..src/name.ml[137,4458+30])
                                      Tpat_value
                                      pattern (src/name.ml[137,4458+6]..src/name.ml[137,4458+30])
                                        Tpat_construct "Some"
                                        [
                                          pattern (src/name.ml[137,4458+11]..src/name.ml[137,4458+30])
                                            Tpat_tuple
                                            [
                                              pattern (src/name.ml[137,4458+12]..src/name.ml[137,4458+20])
                                                Tpat_var "outer_ns/1634"
                                              pattern (src/name.ml[137,4458+22]..src/name.ml[137,4458+29])
                                                Tpat_var "rest_ns/1635"
                                            ]
                                        ]
                                    expression (src/name.ml[137,4458+34]..src/name.ml[143,4697+20])
                                      Texp_match
                                      expression (src/name.ml[139,4508+10]..src/name.ml[140,4571+50])
                                        Texp_apply
                                        expression (src/name.ml[139,4508+10]..src/name.ml[139,4508+29])
                                          Texp_ident "Ppxlib__!.Import.Hashtbl.find_or_add"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/name.ml[139,4508+30]..src/name.ml[139,4508+33])
                                              Texp_ident "tbl/1633"
                                          <arg>
                                            Nolabel
                                            expression (src/name.ml[139,4508+34]..src/name.ml[139,4508+42])
                                              Texp_ident "outer_ns/1634"
                                          <arg>
                                            Labelled "default"
                                            expression (src/name.ml[139,4508+52]..src/name.ml[140,4571+50])
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/name.ml[139,4508+57]..src/name.ml[139,4508+59])
                                                    Tpat_construct "()"
                                                    []
                                                  expression (src/name.ml[140,4571+14]..src/name.ml[140,4571+49])
                                                    Texp_construct "Sub_namespaces"
                                                    [
                                                      expression (src/name.ml[140,4571+29]..src/name.ml[140,4571+49])
                                                        Texp_apply
                                                        expression (src/name.ml[140,4571+30]..src/name.ml[140,4571+45])
                                                          Texp_ident "create_reserved/1628"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/name.ml[140,4571+46]..src/name.ml[140,4571+48])
                                                              Texp_construct "()"
                                                              []
                                                        ]
                                                    ]
                                              ]
                                        ]
                                      [
                                        <case>
                                          pattern (src/name.ml[142,4635+10]..src/name.ml[142,4635+33])
                                            Tpat_value
                                            pattern (src/name.ml[142,4635+10]..src/name.ml[142,4635+33])
                                              Tpat_construct "Sub_namespaces"
                                              [
                                                pattern (src/name.ml[142,4635+25]..src/name.ml[142,4635+33])
                                                  Tpat_var "rest_tbl/1637"
                                              ]
                                          expression (src/name.ml[142,4635+37]..src/name.ml[142,4635+61])
                                            Texp_apply
                                            expression (src/name.ml[142,4635+37]..src/name.ml[142,4635+44])
                                              Texp_ident "reserve/1631"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/name.ml[142,4635+45]..src/name.ml[142,4635+52])
                                                  Texp_ident "rest_ns/1635"
                                              <arg>
                                                Nolabel
                                                expression (src/name.ml[142,4635+53]..src/name.ml[142,4635+61])
                                                  Texp_ident "rest_tbl/1637"
                                            ]
                                        <case>
                                          pattern (src/name.ml[143,4697+10]..src/name.ml[143,4697+13])
                                            Tpat_value
                                            pattern (src/name.ml[143,4697+10]..src/name.ml[143,4697+13])
                                              Tpat_construct "All"
                                              []
                                          expression (src/name.ml[143,4697+17]..src/name.ml[143,4697+19])
                                            Texp_construct "()"
                                            []
                                      ]
                                      []
                                ]
                                []
                          ]
                    ]
              ]
            structure_item (src/name.ml[145,4719+2]..src/name.ml[156,5114+50])
              Tstr_value Rec
              [
                <def>
                  pattern (src/name.ml[145,4719+10]..src/name.ml[145,4719+35])
                    Tpat_var "is_in_reserved_namespaces/1638"
                  expression (src/name.ml[145,4719+36]..src/name.ml[156,5114+50]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/name.ml[145,4719+36]..src/name.ml[145,4719+40])
                          Tpat_var "name/1639"
                        expression (src/name.ml[145,4719+41]..src/name.ml[156,5114+50]) ghost
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/name.ml[145,4719+41]..src/name.ml[145,4719+44])
                                Tpat_var "tbl/1640"
                              expression (src/name.ml[146,4766+4]..src/name.ml[156,5114+50])
                                Texp_match
                                expression (src/name.ml[146,4766+10]..src/name.ml[146,4766+36])
                                  Texp_apply
                                  expression (src/name.ml[146,4766+10]..src/name.ml[146,4766+31])
                                    Texp_ident "split_outer_namespace/1195"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/name.ml[146,4766+32]..src/name.ml[146,4766+36])
                                        Texp_ident "name/1639"
                                  ]
                                [
                                  <case>
                                    pattern (src/name.ml[147,4808+6]..src/name.ml[147,4808+21])
                                      Tpat_value
                                      pattern (src/name.ml[147,4808+6]..src/name.ml[147,4808+21])
                                        Tpat_construct "Some"
                                        [
                                          pattern (src/name.ml[147,4808+11]..src/name.ml[147,4808+21])
                                            Tpat_tuple
                                            [
                                              pattern (src/name.ml[147,4808+12]..src/name.ml[147,4808+14])
                                                Tpat_var "ns/1641"
                                              pattern (src/name.ml[147,4808+16]..src/name.ml[147,4808+20])
                                                Tpat_var "rest/1642"
                                            ]
                                        ]
                                    expression (src/name.ml[147,4808+25]..src/name.ml[152,5001+24])
                                      Texp_match
                                      expression (src/name.ml[148,4835+14]..src/name.ml[148,4835+37])
                                        Texp_apply
                                        expression (src/name.ml[148,4835+14]..src/name.ml[148,4835+30])
                                          Texp_ident "Ppxlib__!.Import.Hashtbl.find_opt"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/name.ml[148,4835+31]..src/name.ml[148,4835+34])
                                              Texp_ident "tbl/1640"
                                          <arg>
                                            Nolabel
                                            expression (src/name.ml[148,4835+35]..src/name.ml[148,4835+37])
                                              Texp_ident "ns/1641"
                                        ]
                                      [
                                        <case>
                                          pattern (src/name.ml[149,4878+10]..src/name.ml[149,4878+40])
                                            Tpat_value
                                            pattern (src/name.ml[149,4878+10]..src/name.ml[149,4878+40])
                                              Tpat_construct "Some"
                                              [
                                                pattern (src/name.ml[149,4878+15]..src/name.ml[149,4878+40])
                                                  Tpat_construct "Sub_namespaces"
                                                  [
                                                    pattern (src/name.ml[149,4878+31]..src/name.ml[149,4878+39])
                                                      Tpat_var "rest_tbl/1643"
                                                  ]
                                              ]
                                          expression (src/name.ml[150,4922+12]..src/name.ml[150,4922+51])
                                            Texp_apply
                                            expression (src/name.ml[150,4922+12]..src/name.ml[150,4922+37])
                                              Texp_ident "is_in_reserved_namespaces/1638"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/name.ml[150,4922+38]..src/name.ml[150,4922+42])
                                                  Texp_ident "rest/1642"
                                              <arg>
                                                Nolabel
                                                expression (src/name.ml[150,4922+43]..src/name.ml[150,4922+51])
                                                  Texp_ident "rest_tbl/1643"
                                            ]
                                        <case>
                                          pattern (src/name.ml[151,4974+10]..src/name.ml[151,4974+18])
                                            Tpat_value
                                            pattern (src/name.ml[151,4974+10]..src/name.ml[151,4974+18])
                                              Tpat_construct "Some"
                                              [
                                                pattern (src/name.ml[151,4974+15]..src/name.ml[151,4974+18])
                                                  Tpat_construct "All"
                                                  []
                                              ]
                                          expression (src/name.ml[151,4974+22]..src/name.ml[151,4974+26])
                                            Texp_construct "true"
                                            []
                                        <case>
                                          pattern (src/name.ml[152,5001+10]..src/name.ml[152,5001+14])
                                            Tpat_value
                                            pattern (src/name.ml[152,5001+10]..src/name.ml[152,5001+14])
                                              Tpat_construct "None"
                                              []
                                          expression (src/name.ml[152,5001+18]..src/name.ml[152,5001+23])
                                            Texp_construct "false"
                                            []
                                      ]
                                      []
                                  <case>
                                    pattern (src/name.ml[153,5026+6]..src/name.ml[153,5026+10])
                                      Tpat_value
                                      pattern (src/name.ml[153,5026+6]..src/name.ml[153,5026+10])
                                        Tpat_construct "None"
                                        []
                                    expression (src/name.ml[153,5026+14]..src/name.ml[156,5114+50])
                                      Texp_match
                                      expression (src/name.ml[154,5042+14]..src/name.ml[154,5042+39])
                                        Texp_apply
                                        expression (src/name.ml[154,5042+14]..src/name.ml[154,5042+30])
                                          Texp_ident "Ppxlib__!.Import.Hashtbl.find_opt"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/name.ml[154,5042+31]..src/name.ml[154,5042+34])
                                              Texp_ident "tbl/1640"
                                          <arg>
                                            Nolabel
                                            expression (src/name.ml[154,5042+35]..src/name.ml[154,5042+39])
                                              Texp_ident "name/1639"
                                        ]
                                      [
                                        <case>
                                          pattern (src/name.ml[155,5087+10]..src/name.ml[155,5087+18])
                                            Tpat_value
                                            pattern (src/name.ml[155,5087+10]..src/name.ml[155,5087+18])
                                              Tpat_construct "Some"
                                              [
                                                pattern (src/name.ml[155,5087+15]..src/name.ml[155,5087+18])
                                                  Tpat_construct "All"
                                                  []
                                              ]
                                          expression (src/name.ml[155,5087+22]..src/name.ml[155,5087+26])
                                            Texp_construct "true"
                                            []
                                        <case>
                                          pattern (src/name.ml[156,5114+10]..src/name.ml[156,5114+40])
                                            Tpat_or
                                            pattern (src/name.ml[156,5114+10]..src/name.ml[156,5114+33])
                                              Tpat_value
                                              pattern (src/name.ml[156,5114+10]..src/name.ml[156,5114+33])
                                                Tpat_construct "Some"
                                                [
                                                  pattern (src/name.ml[156,5114+15]..src/name.ml[156,5114+33])
                                                    Tpat_construct "Sub_namespaces"
                                                    [
                                                      pattern (src/name.ml[156,5114+31]..src/name.ml[156,5114+32])
                                                        Tpat_any
                                                    ]
                                                ]
                                            pattern (src/name.ml[156,5114+36]..src/name.ml[156,5114+40])
                                              Tpat_value
                                              pattern (src/name.ml[156,5114+36]..src/name.ml[156,5114+40])
                                                Tpat_construct "None"
                                                []
                                          expression (src/name.ml[156,5114+44]..src/name.ml[156,5114+49])
                                            Texp_construct "false"
                                            []
                                      ]
                                      []
                                ]
                                []
                          ]
                    ]
              ]
            structure_item (src/name.ml[158,5166+2]..src/name.ml[158,5166+30])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/name.ml[158,5166+6]..src/name.ml[158,5166+9])
                    Tpat_var "tbl/1644"
                  expression (src/name.ml[158,5166+12]..src/name.ml[158,5166+30])
                    Texp_apply
                    expression (src/name.ml[158,5166+12]..src/name.ml[158,5166+27])
                      Texp_ident "create_reserved/1628"
                    [
                      <arg>
                        Nolabel
                        expression (src/name.ml[158,5166+28]..src/name.ml[158,5166+30])
                          Texp_construct "()"
                          []
                    ]
              ]
            structure_item (src/name.ml[159,5197+2]..src/name.ml[159,5197+33])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/name.ml[159,5197+6]..src/name.ml[159,5197+13])
                    Tpat_var "reserve/1645"
                  expression (src/name.ml[159,5197+14]..src/name.ml[159,5197+33]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/name.ml[159,5197+14]..src/name.ml[159,5197+16])
                          Tpat_var "ns/1646"
                        expression (src/name.ml[159,5197+19]..src/name.ml[159,5197+33])
                          Texp_apply
                          expression (src/name.ml[159,5197+19]..src/name.ml[159,5197+26])
                            Texp_ident "reserve/1631"
                          [
                            <arg>
                              Nolabel
                              expression (src/name.ml[159,5197+27]..src/name.ml[159,5197+29])
                                Texp_ident "ns/1646"
                            <arg>
                              Nolabel
                              expression (src/name.ml[159,5197+30]..src/name.ml[159,5197+33])
                                Texp_ident "tbl/1644"
                          ]
                    ]
              ]
            structure_item (src/name.ml[160,5231+2]..src/name.ml[160,5231+73])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/name.ml[160,5231+6]..src/name.ml[160,5231+31])
                    Tpat_var "is_in_reserved_namespaces/1647"
                  expression (src/name.ml[160,5231+32]..src/name.ml[160,5231+73]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/name.ml[160,5231+32]..src/name.ml[160,5231+36])
                          Tpat_var "name/1648"
                        expression (src/name.ml[160,5231+39]..src/name.ml[160,5231+73])
                          Texp_apply
                          expression (src/name.ml[160,5231+39]..src/name.ml[160,5231+64])
                            Texp_ident "is_in_reserved_namespaces/1638"
                          [
                            <arg>
                              Nolabel
                              expression (src/name.ml[160,5231+65]..src/name.ml[160,5231+69])
                                Texp_ident "name/1648"
                            <arg>
                              Nolabel
                              expression (src/name.ml[160,5231+70]..src/name.ml[160,5231+73])
                                Texp_ident "tbl/1644"
                          ]
                    ]
              ]
            structure_item (src/name.ml[161,5305+2]..src/name.ml[161,5305+27])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/name.ml[161,5305+6]..src/name.ml[161,5305+8])
                    Tpat_construct "()"
                    []
                  expression (src/name.ml[161,5305+11]..src/name.ml[161,5305+27])
                    Texp_apply
                    expression (src/name.ml[161,5305+11]..src/name.ml[161,5305+18])
                      Texp_ident "reserve/1645"
                    [
                      <arg>
                        Nolabel
                        expression (src/name.ml[161,5305+19]..src/name.ml[161,5305+27])
                          Texp_constant Const_string("merlin",(src/name.ml[161,5305+20]..src/name.ml[161,5305+26]),None)
                    ]
              ]
            structure_item (src/name.ml[162,5333+2]..src/name.ml[162,5333+27])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/name.ml[162,5333+6]..src/name.ml[162,5333+8])
                    Tpat_construct "()"
                    []
                  expression (src/name.ml[162,5333+11]..src/name.ml[162,5333+27])
                    Texp_apply
                    expression (src/name.ml[162,5333+11]..src/name.ml[162,5333+18])
                      Texp_ident "reserve/1645"
                    [
                      <arg>
                        Nolabel
                        expression (src/name.ml[162,5333+19]..src/name.ml[162,5333+27])
                          Texp_constant Const_string("reason",(src/name.ml[162,5333+20]..src/name.ml[162,5333+26]),None)
                    ]
              ]
            structure_item (src/name.ml[163,5361+2]..src/name.ml[163,5361+26])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/name.ml[163,5361+6]..src/name.ml[163,5361+8])
                    Tpat_construct "()"
                    []
                  expression (src/name.ml[163,5361+11]..src/name.ml[163,5361+26])
                    Texp_apply
                    expression (src/name.ml[163,5361+11]..src/name.ml[163,5361+18])
                      Texp_ident "reserve/1645"
                    [
                      <arg>
                        Nolabel
                        expression (src/name.ml[163,5361+19]..src/name.ml[163,5361+26])
                          Texp_constant Const_string("refmt",(src/name.ml[163,5361+20]..src/name.ml[163,5361+25]),None)
                    ]
              ]
            structure_item (src/name.ml[164,5401+2]..src/name.ml[164,5401+23])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/name.ml[164,5401+6]..src/name.ml[164,5401+8])
                    Tpat_construct "()"
                    []
                  expression (src/name.ml[164,5401+11]..src/name.ml[164,5401+23])
                    Texp_apply
                    expression (src/name.ml[164,5401+11]..src/name.ml[164,5401+18])
                      Texp_ident "reserve/1645"
                    [
                      <arg>
                        Nolabel
                        expression (src/name.ml[164,5401+19]..src/name.ml[164,5401+23])
                          Texp_constant Const_string("ns",(src/name.ml[164,5401+20]..src/name.ml[164,5401+22]),None)
                    ]
              ]
            structure_item (src/name.ml[165,5440+2]..src/name.ml[165,5440+24])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/name.ml[165,5440+6]..src/name.ml[165,5440+8])
                    Tpat_construct "()"
                    []
                  expression (src/name.ml[165,5440+11]..src/name.ml[165,5440+24])
                    Texp_apply
                    expression (src/name.ml[165,5440+11]..src/name.ml[165,5440+18])
                      Texp_ident "reserve/1645"
                    [
                      <arg>
                        Nolabel
                        expression (src/name.ml[165,5440+19]..src/name.ml[165,5440+24])
                          Texp_constant Const_string("res",(src/name.ml[165,5440+20]..src/name.ml[165,5440+23]),None)
                    ]
              ]
            structure_item (src/name.ml[166,5480+2]..src/name.ml[166,5480+30])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/name.ml[166,5480+6]..src/name.ml[166,5480+8])
                    Tpat_construct "()"
                    []
                  expression (src/name.ml[166,5480+11]..src/name.ml[166,5480+30])
                    Texp_apply
                    expression (src/name.ml[166,5480+11]..src/name.ml[166,5480+18])
                      Texp_ident "reserve/1645"
                    [
                      <arg>
                        Nolabel
                        expression (src/name.ml[166,5480+19]..src/name.ml[166,5480+30])
                          Texp_constant Const_string("metaocaml",(src/name.ml[166,5480+20]..src/name.ml[166,5480+29]),None)
                    ]
              ]
            structure_item (src/name.ml[167,5511+2]..src/name.ml[167,5511+32])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/name.ml[167,5511+6]..src/name.ml[167,5511+8])
                    Tpat_construct "()"
                    []
                  expression (src/name.ml[167,5511+11]..src/name.ml[167,5511+32])
                    Texp_apply
                    expression (src/name.ml[167,5511+11]..src/name.ml[167,5511+18])
                      Texp_ident "reserve/1645"
                    [
                      <arg>
                        Nolabel
                        expression (src/name.ml[167,5511+19]..src/name.ml[167,5511+32])
                          Texp_constant Const_string("ocamlformat",(src/name.ml[167,5511+20]..src/name.ml[167,5511+31]),None)
                    ]
              ]
            structure_item (src/name.ml[168,5544+2]..src/name.ml[168,5544+37])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/name.ml[168,5544+6]..src/name.ml[168,5544+8])
                    Tpat_construct "()"
                    []
                  expression (src/name.ml[168,5544+11]..src/name.ml[168,5544+37])
                    Texp_apply
                    expression (src/name.ml[168,5544+11]..src/name.ml[168,5544+18])
                      Texp_ident "reserve/1645"
                    [
                      <arg>
                        Nolabel
                        expression (src/name.ml[168,5544+19]..src/name.ml[168,5544+37])
                          Texp_constant Const_string("ppxlib.migration",(src/name.ml[168,5544+20]..src/name.ml[168,5544+36]),None)
                    ]
              ]
            structure_item (src/name.ml[170,5583+2]..src/name.ml[185,6155+17])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/name.ml[170,5583+6]..src/name.ml[170,5583+24])
                    Tpat_var "check_not_reserved/1649"
                  expression (src/name.ml[170,5583+25]..src/name.ml[185,6155+17]) ghost
                    Texp_function
                    Labelled "kind"
                    [
                      <case>
                        pattern (src/name.ml[170,5583+26]..src/name.ml[170,5583+30])
                          Tpat_var "kind/1651"
                        expression (src/name.ml[170,5583+31]..src/name.ml[185,6155+17]) ghost
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/name.ml[170,5583+31]..src/name.ml[170,5583+35])
                                Tpat_var "name/1652"
                              expression (src/name.ml[171,5621+4]..src/name.ml[185,6155+17])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (src/name.ml[171,5621+8]..src/name.ml[171,5621+18])
                                      Tpat_tuple
                                      [
                                        pattern (src/name.ml[171,5621+8]..src/name.ml[171,5621+12])
                                          Tpat_var "kind/1653"
                                        pattern (src/name.ml[171,5621+14]..src/name.ml[171,5621+18])
                                          Tpat_var "list/1654"
                                      ]
                                    expression (src/name.ml[172,5642+6]..src/name.ml[174,5724+59])
                                      Texp_match
                                      expression (src/name.ml[172,5642+12]..src/name.ml[172,5642+16])
                                        Texp_ident "kind/1651"
                                      [
                                        <case>
                                          pattern (src/name.ml[173,5664+8]..src/name.ml[173,5664+18])
                                            Tpat_value
                                            pattern (src/name.ml[173,5664+8]..src/name.ml[173,5664+18])
                                              Tpat_variant "Attribute"
                                              None
                                          expression (src/name.ml[173,5664+22]..src/name.ml[173,5664+59])
                                            Texp_tuple
                                            [
                                              expression (src/name.ml[173,5664+23]..src/name.ml[173,5664+34])
                                                Texp_constant Const_string("attribute",(src/name.ml[173,5664+24]..src/name.ml[173,5664+33]),None)
                                              expression (src/name.ml[173,5664+36]..src/name.ml[173,5664+58])
                                                Texp_ident "Allowlisted/1294.attributes"
                                            ]
                                        <case>
                                          pattern (src/name.ml[174,5724+8]..src/name.ml[174,5724+18])
                                            Tpat_value
                                            pattern (src/name.ml[174,5724+8]..src/name.ml[174,5724+18])
                                              Tpat_variant "Extension"
                                              None
                                          expression (src/name.ml[174,5724+22]..src/name.ml[174,5724+59])
                                            Texp_tuple
                                            [
                                              expression (src/name.ml[174,5724+23]..src/name.ml[174,5724+34])
                                                Texp_constant Const_string("extension",(src/name.ml[174,5724+24]..src/name.ml[174,5724+33]),None)
                                              expression (src/name.ml[174,5724+36]..src/name.ml[174,5724+58])
                                                Texp_ident "Allowlisted/1294.extensions"
                                            ]
                                      ]
                                      []
                                ]
                                expression (src/name.ml[176,5791+4]..src/name.ml[185,6155+17])
                                  Texp_ifthenelse
                                  expression (src/name.ml[176,5791+7]..src/name.ml[176,5791+31])
                                    Texp_apply
                                    expression (src/name.ml[176,5791+7]..src/name.ml[176,5791+21])
                                      Texp_ident "Ppxlib__!.Import.String.Set.mem"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/name.ml[176,5791+22]..src/name.ml[176,5791+26])
                                          Texp_ident "name/1652"
                                      <arg>
                                        Nolabel
                                        expression (src/name.ml[176,5791+27]..src/name.ml[176,5791+31])
                                          Texp_ident "list/1654"
                                    ]
                                  expression (src/name.ml[177,5828+6]..src/name.ml[180,5959+22])
                                    Texp_apply
                                    expression (src/name.ml[177,5828+6]..src/name.ml[177,5828+21])
                                      Texp_ident "Stdlib!.Printf.ksprintf"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/name.ml[177,5828+22]..src/name.ml[177,5828+30])
                                          Texp_ident "Stdlib!.failwith"
                                      <arg>
                                        Nolabel
                                        expression (src/name.ml[178,5859+8]..src/name.ml[179,5940+18])
                                          Texp_construct "CamlinternalFormatBasics.Format"
                                          [
                                            expression (src/name.ml[178,5859+8]..src/name.ml[179,5940+18]) ghost
                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                              [
                                                expression (src/name.ml[178,5859+8]..src/name.ml[179,5940+18]) ghost
                                                  Texp_constant Const_string("Cannot register ",(src/name.ml[178,5859+8]..src/name.ml[179,5940+18]) ghost,None)
                                                expression (src/name.ml[178,5859+8]..src/name.ml[179,5940+18]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.String"
                                                  [
                                                    expression (src/name.ml[178,5859+8]..src/name.ml[179,5940+18]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                                      []
                                                    expression (src/name.ml[178,5859+8]..src/name.ml[179,5940+18]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                                      [
                                                        expression (src/name.ml[178,5859+8]..src/name.ml[179,5940+18]) ghost
                                                          Texp_constant Const_string(" with name '",(src/name.ml[178,5859+8]..src/name.ml[179,5940+18]) ghost,None)
                                                        expression (src/name.ml[178,5859+8]..src/name.ml[179,5940+18]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.String"
                                                          [
                                                            expression (src/name.ml[178,5859+8]..src/name.ml[179,5940+18]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.No_padding"
                                                              []
                                                            expression (src/name.ml[178,5859+8]..src/name.ml[179,5940+18]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                                              [
                                                                expression (src/name.ml[178,5859+8]..src/name.ml[179,5940+18]) ghost
                                                                  Texp_constant Const_string("' as it matches an ",(src/name.ml[178,5859+8]..src/name.ml[179,5940+18]) ghost,None)
                                                                expression (src/name.ml[178,5859+8]..src/name.ml[179,5940+18]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.String"
                                                                  [
                                                                    expression (src/name.ml[178,5859+8]..src/name.ml[179,5940+18]) ghost
                                                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                      []
                                                                    expression (src/name.ml[178,5859+8]..src/name.ml[179,5940+18]) ghost
                                                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                      [
                                                                        expression (src/name.ml[178,5859+8]..src/name.ml[179,5940+18]) ghost
                                                                          Texp_constant Const_string(" reserved by the compiler",(src/name.ml[178,5859+8]..src/name.ml[179,5940+18]) ghost,None)
                                                                        expression (src/name.ml[178,5859+8]..src/name.ml[179,5940+18]) ghost
                                                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                          []
                                                                      ]
                                                                  ]
                                                              ]
                                                          ]
                                                      ]
                                                  ]
                                              ]
                                            expression (src/name.ml[178,5859+8]..src/name.ml[179,5940+18]) ghost
                                              Texp_constant Const_string("Cannot register %s with name '%s' as it matches an %s reserved by the compiler",(src/name.ml[178,5859+8]..src/name.ml[179,5940+18]) ghost,None)
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/name.ml[180,5959+8]..src/name.ml[180,5959+12])
                                          Texp_ident "kind/1653"
                                      <arg>
                                        Nolabel
                                        expression (src/name.ml[180,5959+13]..src/name.ml[180,5959+17])
                                          Texp_ident "name/1652"
                                      <arg>
                                        Nolabel
                                        expression (src/name.ml[180,5959+18]..src/name.ml[180,5959+22])
                                          Texp_ident "kind/1653"
                                    ]
                                  Some
                                    expression (src/name.ml[181,5982+9]..src/name.ml[185,6155+17])
                                      Texp_ifthenelse
                                      expression (src/name.ml[181,5982+12]..src/name.ml[181,5982+42])
                                        Texp_apply
                                        expression (src/name.ml[181,5982+12]..src/name.ml[181,5982+37])
                                          Texp_ident "is_in_reserved_namespaces/1647"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/name.ml[181,5982+38]..src/name.ml[181,5982+42])
                                              Texp_ident "name/1652"
                                        ]
                                      expression (src/name.ml[182,6030+6]..src/name.ml[185,6155+17])
                                        Texp_apply
                                        expression (src/name.ml[182,6030+6]..src/name.ml[182,6030+21])
                                          Texp_ident "Stdlib!.Printf.ksprintf"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/name.ml[182,6030+22]..src/name.ml[182,6030+30])
                                              Texp_ident "Stdlib!.failwith"
                                          <arg>
                                            Nolabel
                                            expression (src/name.ml[183,6061+8]..src/name.ml[184,6136+18])
                                              Texp_construct "CamlinternalFormatBasics.Format"
                                              [
                                                expression (src/name.ml[183,6061+8]..src/name.ml[184,6136+18]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                                  [
                                                    expression (src/name.ml[183,6061+8]..src/name.ml[184,6136+18]) ghost
                                                      Texp_constant Const_string("Cannot register ",(src/name.ml[183,6061+8]..src/name.ml[184,6136+18]) ghost,None)
                                                    expression (src/name.ml[183,6061+8]..src/name.ml[184,6136+18]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.String"
                                                      [
                                                        expression (src/name.ml[183,6061+8]..src/name.ml[184,6136+18]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                                          []
                                                        expression (src/name.ml[183,6061+8]..src/name.ml[184,6136+18]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                                          [
                                                            expression (src/name.ml[183,6061+8]..src/name.ml[184,6136+18]) ghost
                                                              Texp_constant Const_string(" with name '",(src/name.ml[183,6061+8]..src/name.ml[184,6136+18]) ghost,None)
                                                            expression (src/name.ml[183,6061+8]..src/name.ml[184,6136+18]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.String"
                                                              [
                                                                expression (src/name.ml[183,6061+8]..src/name.ml[184,6136+18]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                  []
                                                                expression (src/name.ml[183,6061+8]..src/name.ml[184,6136+18]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                  [
                                                                    expression (src/name.ml[183,6061+8]..src/name.ml[184,6136+18]) ghost
                                                                      Texp_constant Const_string("' as its namespace is marked as reserved",(src/name.ml[183,6061+8]..src/name.ml[184,6136+18]) ghost,None)
                                                                    expression (src/name.ml[183,6061+8]..src/name.ml[184,6136+18]) ghost
                                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                      []
                                                                  ]
                                                              ]
                                                          ]
                                                      ]
                                                  ]
                                                expression (src/name.ml[183,6061+8]..src/name.ml[184,6136+18]) ghost
                                                  Texp_constant Const_string("Cannot register %s with name '%s' as its namespace is marked as reserved",(src/name.ml[183,6061+8]..src/name.ml[184,6136+18]) ghost,None)
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/name.ml[185,6155+8]..src/name.ml[185,6155+12])
                                              Texp_ident "kind/1653"
                                          <arg>
                                            Nolabel
                                            expression (src/name.ml[185,6155+13]..src/name.ml[185,6155+17])
                                              Texp_ident "name/1652"
                                        ]
                                      None
                          ]
                    ]
              ]
          ]
  structure_item (src/name.ml[188,6178+0]..src/name.ml[190,6256+38])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/name.ml[188,6178+4]..src/name.ml[188,6178+17])
          Tpat_var "ignore_checks/1689"
        expression (src/name.ml[188,6178+18]..src/name.ml[190,6256+38]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/name.ml[188,6178+18]..src/name.ml[188,6178+22])
                Tpat_var "name/1691"
              expression (src/name.ml[189,6203+2]..src/name.ml[190,6256+38])
                Texp_apply
                expression (src/name.ml[190,6256+2]..src/name.ml[190,6256+4])
                  Texp_ident "Stdlib!.||"
                [
                  <arg>
                    Nolabel
                    expression (src/name.ml[189,6203+2]..src/name.ml[189,6203+52])
                      Texp_apply
                      expression (src/name.ml[189,6203+2]..src/name.ml[189,6203+47])
                        Texp_ident "Reserved_namespaces/1688.is_in_reserved_namespaces"
                      [
                        <arg>
                          Nolabel
                          expression (src/name.ml[189,6203+48]..src/name.ml[189,6203+52])
                            Texp_ident "name/1691"
                      ]
                  <arg>
                    Nolabel
                    expression (src/name.ml[190,6256+5]..src/name.ml[190,6256+38])
                      Texp_apply
                      expression (src/name.ml[190,6256+5]..src/name.ml[190,6256+21])
                        Texp_ident "Ppxlib__!.Import.String.is_prefix"
                      [
                        <arg>
                          Nolabel
                          expression (src/name.ml[190,6256+22]..src/name.ml[190,6256+26])
                            Texp_ident "name/1691"
                        <arg>
                          Labelled "prefix"
                          expression (src/name.ml[190,6256+35]..src/name.ml[190,6256+38])
                            Texp_constant Const_string("_",(src/name.ml[190,6256+36]..src/name.ml[190,6256+37]),None)
                      ]
                ]
          ]
    ]
  structure_item (src/name.ml[192,6296+0]..src/name.ml[326,11361+3])
    Tstr_module
    Registrar/2698
      module_expr (src/name.ml[192,6296+19]..src/name.ml[326,11361+3])
        Tmod_structure
        [
          structure_item (src/name.ml[193,6322+2]..src/name.ml[193,6322+77])
            Tstr_type Rec
            [
              type_declaration element/1692 (src/name.ml[193,6322+2]..src/name.ml[193,6322+77])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_record
                    [
                      (src/name.ml[193,6322+19]..src/name.ml[193,6322+49])
                        Immutable
                        fully_qualified_name/1693                        core_type (src/name.ml[193,6322+42]..src/name.ml[193,6322+48])
                          Ttyp_poly
                          core_type (src/name.ml[193,6322+42]..src/name.ml[193,6322+48])
                            Ttyp_constr "string/17!"
                            []
                      (src/name.ml[193,6322+50]..src/name.ml[193,6322+75])
                        Immutable
                        declared_at/1699                        core_type (src/name.ml[193,6322+64]..src/name.ml[193,6322+75])
                          Ttyp_poly
                          core_type (src/name.ml[193,6322+64]..src/name.ml[193,6322+75])
                            Ttyp_constr "Ppxlib__!.Caller_id.t"
                            []
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (src/name.ml[194,6400+2]..src/name.ml[194,6400+63])
            Tstr_type Rec
            [
              type_declaration all_for_context/1700 (src/name.ml[194,6400+2]..src/name.ml[194,6400+63])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_record
                    [
                      (src/name.ml[194,6400+27]..src/name.ml[194,6400+61])
                        Mutable
                        all/1745                        core_type (src/name.ml[194,6400+41]..src/name.ml[194,6400+61])
                          Ttyp_poly
                          core_type (src/name.ml[194,6400+41]..src/name.ml[194,6400+61])
                            Ttyp_constr "Ppxlib__!.Import.String.Map.t"
                            [
                              core_type (src/name.ml[194,6400+41]..src/name.ml[194,6400+48])
                                Ttyp_constr "element/1692"
                                []
                            ]
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (src/name.ml[196,6465+2]..src/name.ml[201,6623+3])
            Tstr_type Rec
            [
              type_declaration t/2006 (src/name.ml[196,6465+2]..src/name.ml[201,6623+3])
                ptype_params =
                  [
                    core_type (src/name.ml[196,6465+7]..src/name.ml[196,6465+9])
                      Ttyp_var a
                  ]
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_record
                    [
                      (src/name.ml[197,6481+4]..src/name.ml[197,6481+53])
                        Immutable
                        all_by_context/2007                        core_type (src/name.ml[197,6481+21]..src/name.ml[197,6481+52])
                          Ttyp_poly
                          core_type (src/name.ml[197,6481+21]..src/name.ml[197,6481+52])
                            Ttyp_constr "Ppxlib__!.Import.Hashtbl.t"
                            [
                              core_type (src/name.ml[197,6481+22]..src/name.ml[197,6481+24])
                                Ttyp_var a
                              core_type (src/name.ml[197,6481+26]..src/name.ml[197,6481+41])
                                Ttyp_constr "all_for_context/1700"
                                []
                            ]
                      (src/name.ml[198,6535+4]..src/name.ml[198,6535+23])
                        Immutable
                        skip/2008                        core_type (src/name.ml[198,6535+11]..src/name.ml[198,6535+22])
                          Ttyp_poly
                          core_type (src/name.ml[198,6535+11]..src/name.ml[198,6535+22])
                            Ttyp_constr "list/11!"
                            [
                              core_type (src/name.ml[198,6535+11]..src/name.ml[198,6535+17])
                                Ttyp_constr "string/17!"
                                []
                            ]
                      (src/name.ml[199,6559+4]..src/name.ml[199,6559+18])
                        Immutable
                        kind/2009                        core_type (src/name.ml[199,6559+11]..src/name.ml[199,6559+17])
                          Ttyp_poly
                          core_type (src/name.ml[199,6559+11]..src/name.ml[199,6559+17])
                            Ttyp_constr "string/17!"
                            []
                      (src/name.ml[200,6578+4]..src/name.ml[200,6578+44])
                        Immutable
                        string_of_context/2010                        core_type (src/name.ml[200,6578+24]..src/name.ml[200,6578+43])
                          Ttyp_poly
                          core_type (src/name.ml[200,6578+24]..src/name.ml[200,6578+43])
                            Ttyp_arrow
                            Nolabel
                            core_type (src/name.ml[200,6578+24]..src/name.ml[200,6578+26])
                              Ttyp_var a
                            core_type (src/name.ml[200,6578+30]..src/name.ml[200,6578+43])
                              Ttyp_constr "option/12!"
                              [
                                core_type (src/name.ml[200,6578+30]..src/name.ml[200,6578+36])
                                  Ttyp_constr "string/17!"
                                  []
                              ]
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (src/name.ml[203,6628+2]..src/name.ml[209,6808+5])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[203,6628+6]..src/name.ml[203,6628+12])
                  Tpat_var "create/2011"
                expression (src/name.ml[203,6628+13]..src/name.ml[209,6808+5]) ghost
                  Texp_function
                  Labelled "kind"
                  [
                    <case>
                      pattern (src/name.ml[203,6628+14]..src/name.ml[203,6628+18])
                        Tpat_var "kind/2013"
                      expression (src/name.ml[203,6628+19]..src/name.ml[209,6808+5]) ghost
                        Texp_function
                        Labelled "current_file"
                        [
                          <case>
                            pattern (src/name.ml[203,6628+20]..src/name.ml[203,6628+32])
                              Tpat_var "current_file/2014"
                            expression (src/name.ml[203,6628+33]..src/name.ml[209,6808+5]) ghost
                              Texp_function
                              Labelled "string_of_context"
                              [
                                <case>
                                  pattern (src/name.ml[203,6628+34]..src/name.ml[203,6628+51])
                                    Tpat_var "string_of_context/2015"
                                  expression (src/name.ml[204,6682+4]..src/name.ml[209,6808+5])
                                    Texp_record
                                      fields =
                                        [
                                          "all_by_context"
                                            expression (src/name.ml[205,6688+23]..src/name.ml[205,6688+40])
                                              Texp_apply
                                              expression (src/name.ml[205,6688+23]..src/name.ml[205,6688+37])
                                                Texp_ident "Ppxlib__!.Import.Hashtbl.create"
                                              [
                                                <arg>
                                                  Optional "random"
                                                  expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                                    Texp_construct "None"
                                                    []
                                                <arg>
                                                  Nolabel
                                                  expression (src/name.ml[205,6688+38]..src/name.ml[205,6688+40])
                                                    Texp_constant Const_int 16
                                              ]
                                          "skip"
                                            expression (src/name.ml[206,6730+13]..src/name.ml[206,6730+39])
                                              Texp_construct "::"
                                              [
                                                expression (src/name.ml[206,6730+15]..src/name.ml[206,6730+27])
                                                  Texp_ident "current_file/2014"
                                                expression (src/name.ml[206,6730+29]..src/name.ml[206,6730+39]) ghost
                                                  Texp_construct "::"
                                                  [
                                                    expression (src/name.ml[206,6730+29]..src/name.ml[206,6730+37])
                                                      Texp_ident "Ppxlib__!.Import.__FILE__"
                                                    expression (src/name.ml[206,6730+38]..src/name.ml[206,6730+39]) ghost
                                                      Texp_construct "[]"
                                                      []
                                                  ]
                                              ]
                                          "kind"
                                            expression (src/name.ml[207,6771+6]..src/name.ml[207,6771+10]) ghost
                                              Texp_ident "kind/2013"
                                          "string_of_context"
                                            expression (src/name.ml[208,6783+6]..src/name.ml[208,6783+23]) ghost
                                              Texp_ident "string_of_context/2015"
                                        ]
                                      representation =
                                        Record_regular
                                      extended_expression =
                                        None
                              ]
                        ]
                  ]
            ]
          structure_item (src/name.ml[211,6815+2]..src/name.ml[213,6922+35])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[211,6815+6]..src/name.ml[211,6815+25])
                  Tpat_var "get_all_for_context/2016"
                expression (src/name.ml[211,6815+26]..src/name.ml[213,6922+35]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/name.ml[211,6815+26]..src/name.ml[211,6815+27])
                        Tpat_var "t/2018"
                      expression (src/name.ml[211,6815+28]..src/name.ml[213,6922+35]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/name.ml[211,6815+28]..src/name.ml[211,6815+35])
                              Tpat_var "context/2019"
                            expression (src/name.ml[212,6853+4]..src/name.ml[213,6922+35])
                              Texp_apply
                              expression (src/name.ml[212,6853+4]..src/name.ml[212,6853+23])
                                Texp_ident "Ppxlib__!.Import.Hashtbl.find_or_add"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/name.ml[212,6853+24]..src/name.ml[212,6853+40])
                                    Texp_field
                                    expression (src/name.ml[212,6853+24]..src/name.ml[212,6853+25])
                                      Texp_ident "t/2018"
                                    "all_by_context"
                                <arg>
                                  Nolabel
                                  expression (src/name.ml[212,6853+41]..src/name.ml[212,6853+48])
                                    Texp_ident "context/2019"
                                <arg>
                                  Labelled "default"
                                  expression (src/name.ml[212,6853+58]..src/name.ml[213,6922+35])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/name.ml[212,6853+63]..src/name.ml[212,6853+65])
                                          Tpat_construct "()"
                                          []
                                        expression (src/name.ml[213,6922+8]..src/name.ml[213,6922+34])
                                          Texp_record
                                            fields =
                                              [
                                                "all"
                                                  expression (src/name.ml[213,6922+16]..src/name.ml[213,6922+32])
                                                    Texp_ident "Ppxlib__!.Import.String.Map.empty"
                                              ]
                                            representation =
                                              Record_regular
                                            extended_expression =
                                              None
                                    ]
                              ]
                        ]
                  ]
            ]
          structure_item (src/name.ml[215,6959+2]..src/name.ml[234,7732+37])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[215,6959+6]..src/name.ml[215,6959+28])
                  Tpat_var "check_collisions_local/2021"
                expression (src/name.ml[215,6959+29]..src/name.ml[234,7732+37]) ghost
                  Texp_function
                  Labelled "caller"
                  [
                    <case>
                      pattern (src/name.ml[215,6959+30]..src/name.ml[215,6959+36])
                        Tpat_var "caller/2023"
                      expression (src/name.ml[215,6959+37]..src/name.ml[234,7732+37]) ghost
                        Texp_function
                        Labelled "all_for_context"
                        [
                          <case>
                            pattern (src/name.ml[215,6959+38]..src/name.ml[215,6959+53])
                              Tpat_var "all_for_context/2024"
                            expression (src/name.ml[215,6959+54]..src/name.ml[234,7732+37]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/name.ml[215,6959+54]..src/name.ml[215,6959+55])
                                    Tpat_var "t/2025"
                                  expression (src/name.ml[215,6959+56]..src/name.ml[234,7732+37]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/name.ml[215,6959+56]..src/name.ml[215,6959+63])
                                          Tpat_var "context/2026"
                                        expression (src/name.ml[215,6959+64]..src/name.ml[234,7732+37]) ghost
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/name.ml[215,6959+64]..src/name.ml[215,6959+68])
                                                Tpat_var "name/2027"
                                              expression (src/name.ml[216,7030+4]..src/name.ml[234,7732+37])
                                                Texp_match
                                                expression (src/name.ml[216,7030+10]..src/name.ml[216,7030+54])
                                                  Texp_apply
                                                  expression (src/name.ml[216,7030+10]..src/name.ml[216,7030+29])
                                                    Texp_ident "Ppxlib__!.Import.String.Map.find_opt"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/name.ml[216,7030+30]..src/name.ml[216,7030+34])
                                                        Texp_ident "name/2027"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/name.ml[216,7030+35]..src/name.ml[216,7030+54])
                                                        Texp_field
                                                        expression (src/name.ml[216,7030+35]..src/name.ml[216,7030+50])
                                                          Texp_ident "all_for_context/2024"
                                                        "all"
                                                  ]
                                                [
                                                  <case>
                                                    pattern (src/name.ml[217,7090+6]..src/name.ml[217,7090+10])
                                                      Tpat_value
                                                      pattern (src/name.ml[217,7090+6]..src/name.ml[217,7090+10])
                                                        Tpat_construct "None"
                                                        []
                                                    expression (src/name.ml[217,7090+14]..src/name.ml[217,7090+16])
                                                      Texp_construct "()"
                                                      []
                                                  <case>
                                                    pattern (src/name.ml[218,7107+6]..src/name.ml[218,7107+12])
                                                      Tpat_value
                                                      pattern (src/name.ml[218,7107+6]..src/name.ml[218,7107+12])
                                                        Tpat_construct "Some"
                                                        [
                                                          pattern (src/name.ml[218,7107+11]..src/name.ml[218,7107+12])
                                                            Tpat_var "e/2028"
                                                        ]
                                                    expression (src/name.ml[219,7123+8]..src/name.ml[234,7732+37])
                                                      Texp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (src/name.ml[219,7123+12]..src/name.ml[219,7123+23])
                                                            Tpat_var "declared_at/2029"
                                                          expression (src/name.ml[219,7123+26]..src/name.ml[222,7234+78])
                                                            Texp_function
                                                            Nolabel
                                                            [
                                                              <case>
                                                                pattern (src/name.ml[220,7158+12]..src/name.ml[220,7158+16])
                                                                  Tpat_construct "None"
                                                                  []
                                                                expression (src/name.ml[220,7158+20]..src/name.ml[220,7158+22])
                                                                  Texp_constant Const_string("",(src/name.ml[220,7158+21]..src/name.ml[220,7158+21]),None)
                                                              <case>
                                                                pattern (src/name.ml[221,7181+12]..src/name.ml[221,7181+49])
                                                                  Tpat_construct "Some"
                                                                  [
                                                                    pattern (src/name.ml[221,7181+18]..src/name.ml[221,7181+21])
                                                                      Tpat_extra_constraint
                                                                      core_type (src/name.ml[221,7181+24]..src/name.ml[221,7181+48])
                                                                        Ttyp_constr "Stdlib!.Printexc.location"
                                                                        []
                                                                      pattern (src/name.ml[221,7181+18]..src/name.ml[221,7181+21])
                                                                        Tpat_alias "loc/2078"
                                                                        pattern (src/name.ml[221,7181+18]..src/name.ml[221,7181+21])
                                                                          Tpat_any
                                                                  ]
                                                                expression (src/name.ml[222,7234+14]..src/name.ml[222,7234+78])
                                                                  Texp_apply
                                                                  expression (src/name.ml[222,7234+14]..src/name.ml[222,7234+28])
                                                                    Texp_ident "Stdlib!.Printf.sprintf"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/name.ml[222,7234+29]..src/name.ml[222,7234+49])
                                                                        Texp_construct "CamlinternalFormatBasics.Format"
                                                                        [
                                                                          expression (src/name.ml[222,7234+29]..src/name.ml[222,7234+49]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                            [
                                                                              expression (src/name.ml[222,7234+29]..src/name.ml[222,7234+49]) ghost
                                                                                Texp_constant Const_string(" declared at ",(src/name.ml[222,7234+29]..src/name.ml[222,7234+49]) ghost,None)
                                                                              expression (src/name.ml[222,7234+29]..src/name.ml[222,7234+49]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.String"
                                                                                [
                                                                                  expression (src/name.ml[222,7234+29]..src/name.ml[222,7234+49]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                    []
                                                                                  expression (src/name.ml[222,7234+29]..src/name.ml[222,7234+49]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                                    [
                                                                                      expression (src/name.ml[222,7234+29]..src/name.ml[222,7234+49]) ghost
                                                                                        Texp_constant Const_char 3a
                                                                                      expression (src/name.ml[222,7234+29]..src/name.ml[222,7234+49]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.Int"
                                                                                        [
                                                                                          expression (src/name.ml[222,7234+29]..src/name.ml[222,7234+49]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.Int_d"
                                                                                            []
                                                                                          expression (src/name.ml[222,7234+29]..src/name.ml[222,7234+49]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                            []
                                                                                          expression (src/name.ml[222,7234+29]..src/name.ml[222,7234+49]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.No_precision"
                                                                                            []
                                                                                          expression (src/name.ml[222,7234+29]..src/name.ml[222,7234+49]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                            []
                                                                                        ]
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                          expression (src/name.ml[222,7234+29]..src/name.ml[222,7234+49]) ghost
                                                                            Texp_constant Const_string(" declared at %s:%d",(src/name.ml[222,7234+29]..src/name.ml[222,7234+49]) ghost,None)
                                                                        ]
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/name.ml[222,7234+50]..src/name.ml[222,7234+62])
                                                                        Texp_field
                                                                        expression (src/name.ml[222,7234+50]..src/name.ml[222,7234+53])
                                                                          Texp_ident "loc/2078"
                                                                        "filename"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/name.ml[222,7234+63]..src/name.ml[222,7234+78])
                                                                        Texp_field
                                                                        expression (src/name.ml[222,7234+63]..src/name.ml[222,7234+66])
                                                                          Texp_ident "loc/2078"
                                                                        "line_number"
                                                                  ]
                                                            ]
                                                      ]
                                                      expression (src/name.ml[224,7324+8]..src/name.ml[234,7732+37])
                                                        Texp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (src/name.ml[224,7324+12]..src/name.ml[224,7324+19])
                                                              Tpat_var "context/2087"
                                                            expression (src/name.ml[225,7346+10]..src/name.ml[227,7418+38])
                                                              Texp_match
                                                              expression (src/name.ml[225,7346+16]..src/name.ml[225,7346+43])
                                                                Texp_apply
                                                                expression (src/name.ml[225,7346+16]..src/name.ml[225,7346+35])
                                                                  Texp_field
                                                                  expression (src/name.ml[225,7346+16]..src/name.ml[225,7346+17])
                                                                    Texp_ident "t/2025"
                                                                  "string_of_context"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/name.ml[225,7346+36]..src/name.ml[225,7346+43])
                                                                      Texp_ident "context/2026"
                                                                ]
                                                              [
                                                                <case>
                                                                  pattern (src/name.ml[226,7395+12]..src/name.ml[226,7395+16])
                                                                    Tpat_value
                                                                    pattern (src/name.ml[226,7395+12]..src/name.ml[226,7395+16])
                                                                      Tpat_construct "None"
                                                                      []
                                                                  expression (src/name.ml[226,7395+20]..src/name.ml[226,7395+22])
                                                                    Texp_constant Const_string("",(src/name.ml[226,7395+21]..src/name.ml[226,7395+21]),None)
                                                                <case>
                                                                  pattern (src/name.ml[227,7418+12]..src/name.ml[227,7418+18])
                                                                    Tpat_value
                                                                    pattern (src/name.ml[227,7418+12]..src/name.ml[227,7418+18])
                                                                      Tpat_construct "Some"
                                                                      [
                                                                        pattern (src/name.ml[227,7418+17]..src/name.ml[227,7418+18])
                                                                          Tpat_var "s/2088"
                                                                      ]
                                                                  expression (src/name.ml[227,7418+22]..src/name.ml[227,7418+38])
                                                                    Texp_apply
                                                                    expression (src/name.ml[227,7418+29]..src/name.ml[227,7418+30])
                                                                      Texp_ident "Stdlib!.^"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/name.ml[227,7418+22]..src/name.ml[227,7418+28])
                                                                          Texp_constant Const_string(" on ",(src/name.ml[227,7418+23]..src/name.ml[227,7418+27]),None)
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/name.ml[227,7418+31]..src/name.ml[227,7418+38])
                                                                          Texp_apply
                                                                          expression (src/name.ml[227,7418+33]..src/name.ml[227,7418+34])
                                                                            Texp_ident "Stdlib!.^"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/name.ml[227,7418+31]..src/name.ml[227,7418+32])
                                                                                Texp_ident "s/2088"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/name.ml[227,7418+35]..src/name.ml[227,7418+38])
                                                                                Texp_constant Const_string("s",(src/name.ml[227,7418+36]..src/name.ml[227,7418+37]),None)
                                                                          ]
                                                                    ]
                                                              ]
                                                              []
                                                        ]
                                                        expression (src/name.ml[229,7468+8]..src/name.ml[234,7732+37])
                                                          Texp_apply
                                                          expression (src/name.ml[229,7468+8]..src/name.ml[229,7468+23])
                                                            Texp_ident "Stdlib!.Printf.ksprintf"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/name.ml[229,7468+24]..src/name.ml[229,7468+32])
                                                                Texp_ident "Stdlib!.failwith"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/name.ml[230,7501+10]..src/name.ml[231,7576+38])
                                                                Texp_construct "CamlinternalFormatBasics.Format"
                                                                [
                                                                  expression (src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost
                                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                    [
                                                                      expression (src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost
                                                                        Texp_constant Const_string("Some ppx-es tried to register conflicting transformations: ",(src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost,None)
                                                                      expression (src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.String"
                                                                        [
                                                                          expression (src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                            []
                                                                          expression (src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                            [
                                                                              expression (src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost
                                                                                Texp_constant Const_string(" '",(src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost,None)
                                                                              expression (src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.String"
                                                                                [
                                                                                  expression (src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                    []
                                                                                  expression (src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                                    [
                                                                                      expression (src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost
                                                                                        Texp_constant Const_char 27
                                                                                      expression (src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.String"
                                                                                        [
                                                                                          expression (src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                            []
                                                                                          expression (src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.String"
                                                                                            [
                                                                                              expression (src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost
                                                                                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                []
                                                                                              expression (src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost
                                                                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                [
                                                                                                  expression (src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost
                                                                                                    Texp_constant Const_string(" matches ",(src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost,None)
                                                                                                  expression (src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost
                                                                                                    Texp_construct "CamlinternalFormatBasics.String"
                                                                                                    [
                                                                                                      expression (src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost
                                                                                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                        []
                                                                                                      expression (src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost
                                                                                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                        [
                                                                                                          expression (src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost
                                                                                                            Texp_constant Const_string(" '",(src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost,None)
                                                                                                          expression (src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost
                                                                                                            Texp_construct "CamlinternalFormatBasics.String"
                                                                                                            [
                                                                                                              expression (src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost
                                                                                                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                                []
                                                                                                              expression (src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost
                                                                                                                Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                                                                [
                                                                                                                  expression (src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost
                                                                                                                    Texp_constant Const_char 27
                                                                                                                  expression (src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost
                                                                                                                    Texp_construct "CamlinternalFormatBasics.String"
                                                                                                                    [
                                                                                                                      expression (src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost
                                                                                                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                                        []
                                                                                                                      expression (src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost
                                                                                                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                                        []
                                                                                                                    ]
                                                                                                                ]
                                                                                                            ]
                                                                                                        ]
                                                                                                    ]
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                  expression (src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost
                                                                    Texp_constant Const_string("Some ppx-es tried to register conflicting transformations: %s '%s'%s%s matches %s '%s'%s",(src/name.ml[230,7501+10]..src/name.ml[231,7576+38]) ghost,None)
                                                                ]
                                                            <arg>
                                                              Nolabel
                                                              expression (src/name.ml[232,7615+10]..src/name.ml[232,7615+42])
                                                                Texp_apply
                                                                expression (src/name.ml[232,7615+11]..src/name.ml[232,7615+34])
                                                                  Texp_ident "Ppxlib__!.Import.String.capitalize_ascii"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/name.ml[232,7615+35]..src/name.ml[232,7615+41])
                                                                      Texp_field
                                                                      expression (src/name.ml[232,7615+35]..src/name.ml[232,7615+36])
                                                                        Texp_ident "t/2025"
                                                                      "kind"
                                                                ]
                                                            <arg>
                                                              Nolabel
                                                              expression (src/name.ml[233,7658+10]..src/name.ml[233,7658+14])
                                                                Texp_ident "name/2027"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/name.ml[233,7658+15]..src/name.ml[233,7658+22])
                                                                Texp_ident "context/2087"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/name.ml[233,7658+23]..src/name.ml[233,7658+43])
                                                                Texp_apply
                                                                expression (src/name.ml[233,7658+24]..src/name.ml[233,7658+35])
                                                                  Texp_ident "declared_at/2029"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/name.ml[233,7658+36]..src/name.ml[233,7658+42])
                                                                      Texp_ident "caller/2023"
                                                                ]
                                                            <arg>
                                                              Nolabel
                                                              expression (src/name.ml[233,7658+44]..src/name.ml[233,7658+50])
                                                                Texp_field
                                                                expression (src/name.ml[233,7658+44]..src/name.ml[233,7658+45])
                                                                  Texp_ident "t/2025"
                                                                "kind"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/name.ml[233,7658+51]..src/name.ml[233,7658+73])
                                                                Texp_field
                                                                expression (src/name.ml[233,7658+51]..src/name.ml[233,7658+52])
                                                                  Texp_ident "e/2028"
                                                                "fully_qualified_name"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/name.ml[234,7732+10]..src/name.ml[234,7732+37])
                                                                Texp_apply
                                                                expression (src/name.ml[234,7732+11]..src/name.ml[234,7732+22])
                                                                  Texp_ident "declared_at/2029"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/name.ml[234,7732+23]..src/name.ml[234,7732+36])
                                                                      Texp_field
                                                                      expression (src/name.ml[234,7732+23]..src/name.ml[234,7732+24])
                                                                        Texp_ident "e/2028"
                                                                      "declared_at"
                                                                ]
                                                          ]
                                                ]
                                                []
                                          ]
                                    ]
                              ]
                        ]
                  ]
            ]
          structure_item (src/name.ml[236,7771+2]..src/name.ml[239,7917+66])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[236,7771+6]..src/name.ml[236,7771+22])
                  Tpat_var "check_collisions/2096"
                expression (src/name.ml[236,7771+23]..src/name.ml[239,7917+66]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/name.ml[236,7771+23]..src/name.ml[236,7771+24])
                        Tpat_var "t/2098"
                      expression (src/name.ml[236,7771+25]..src/name.ml[239,7917+66]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/name.ml[236,7771+25]..src/name.ml[236,7771+32])
                              Tpat_var "context/2099"
                            expression (src/name.ml[236,7771+33]..src/name.ml[239,7917+66]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/name.ml[236,7771+33]..src/name.ml[236,7771+37])
                                    Tpat_var "name/2100"
                                  expression (src/name.ml[237,7811+4]..src/name.ml[239,7917+66])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/name.ml[237,7811+8]..src/name.ml[237,7811+14])
                                          Tpat_var "caller/2101"
                                        expression (src/name.ml[237,7811+17]..src/name.ml[237,7811+43])
                                          Texp_apply
                                          expression (src/name.ml[237,7811+17]..src/name.ml[237,7811+30])
                                            Texp_ident "Ppxlib__!.Caller_id.get"
                                          [
                                            <arg>
                                              Labelled "skip"
                                              expression (src/name.ml[237,7811+37]..src/name.ml[237,7811+43])
                                                Texp_field
                                                expression (src/name.ml[237,7811+37]..src/name.ml[237,7811+38])
                                                  Texp_ident "t/2098"
                                                "skip"
                                          ]
                                    ]
                                    expression (src/name.ml[238,7858+4]..src/name.ml[239,7917+66])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/name.ml[238,7858+8]..src/name.ml[238,7858+23])
                                            Tpat_var "all_for_context/2102"
                                          expression (src/name.ml[238,7858+26]..src/name.ml[238,7858+55])
                                            Texp_apply
                                            expression (src/name.ml[238,7858+26]..src/name.ml[238,7858+45])
                                              Texp_ident "get_all_for_context/2016"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/name.ml[238,7858+46]..src/name.ml[238,7858+47])
                                                  Texp_ident "t/2098"
                                              <arg>
                                                Nolabel
                                                expression (src/name.ml[238,7858+48]..src/name.ml[238,7858+55])
                                                  Texp_ident "context/2099"
                                            ]
                                      ]
                                      expression (src/name.ml[239,7917+4]..src/name.ml[239,7917+66])
                                        Texp_apply
                                        expression (src/name.ml[239,7917+4]..src/name.ml[239,7917+26])
                                          Texp_ident "check_collisions_local/2021"
                                        [
                                          <arg>
                                            Labelled "caller"
                                            expression (src/name.ml[239,7917+28]..src/name.ml[239,7917+34])
                                              Texp_ident "caller/2101"
                                          <arg>
                                            Labelled "all_for_context"
                                            expression (src/name.ml[239,7917+36]..src/name.ml[239,7917+51])
                                              Texp_ident "all_for_context/2102"
                                          <arg>
                                            Nolabel
                                            expression (src/name.ml[239,7917+52]..src/name.ml[239,7917+53])
                                              Texp_ident "t/2098"
                                          <arg>
                                            Nolabel
                                            expression (src/name.ml[239,7917+54]..src/name.ml[239,7917+61])
                                              Texp_ident "context/2099"
                                          <arg>
                                            Nolabel
                                            expression (src/name.ml[239,7917+62]..src/name.ml[239,7917+66])
                                              Texp_ident "name/2100"
                                        ]
                              ]
                        ]
                  ]
            ]
          structure_item (src/name.ml[241,7985+2]..src/name.ml[249,8391+36])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[241,7985+6]..src/name.ml[241,7985+14])
                  Tpat_var "register/2103"
                expression (src/name.ml[241,7985+15]..src/name.ml[249,8391+36]) ghost
                  Texp_function
                  Labelled "kind"
                  [
                    <case>
                      pattern (src/name.ml[241,7985+16]..src/name.ml[241,7985+20])
                        Tpat_var "kind/2105"
                      expression (src/name.ml[241,7985+21]..src/name.ml[249,8391+36]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/name.ml[241,7985+21]..src/name.ml[241,7985+22])
                              Tpat_var "t/2106"
                            expression (src/name.ml[241,7985+23]..src/name.ml[249,8391+36]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/name.ml[241,7985+23]..src/name.ml[241,7985+30])
                                    Tpat_var "context/2107"
                                  expression (src/name.ml[241,7985+31]..src/name.ml[249,8391+36]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/name.ml[241,7985+31]..src/name.ml[241,7985+35])
                                          Tpat_var "name/2108"
                                        expression (src/name.ml[242,8023+4]..src/name.ml[249,8391+36])
                                          Texp_sequence
                                          expression (src/name.ml[242,8023+4]..src/name.ml[242,8023+53])
                                            Texp_apply
                                            expression (src/name.ml[242,8023+4]..src/name.ml[242,8023+42])
                                              Texp_ident "Reserved_namespaces/1688.check_not_reserved"
                                            [
                                              <arg>
                                                Labelled "kind"
                                                expression (src/name.ml[242,8023+44]..src/name.ml[242,8023+48])
                                                  Texp_ident "kind/2105"
                                              <arg>
                                                Nolabel
                                                expression (src/name.ml[242,8023+49]..src/name.ml[242,8023+53])
                                                  Texp_ident "name/2108"
                                            ]
                                          expression (src/name.ml[243,8078+4]..src/name.ml[249,8391+36])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/name.ml[243,8078+8]..src/name.ml[243,8078+14])
                                                  Tpat_var "caller/2109"
                                                expression (src/name.ml[243,8078+17]..src/name.ml[243,8078+43])
                                                  Texp_apply
                                                  expression (src/name.ml[243,8078+17]..src/name.ml[243,8078+30])
                                                    Texp_ident "Ppxlib__!.Caller_id.get"
                                                  [
                                                    <arg>
                                                      Labelled "skip"
                                                      expression (src/name.ml[243,8078+37]..src/name.ml[243,8078+43])
                                                        Texp_field
                                                        expression (src/name.ml[243,8078+37]..src/name.ml[243,8078+38])
                                                          Texp_ident "t/2106"
                                                        "skip"
                                                  ]
                                            ]
                                            expression (src/name.ml[244,8125+4]..src/name.ml[249,8391+36])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/name.ml[244,8125+8]..src/name.ml[244,8125+11])
                                                    Tpat_var "all/2110"
                                                  expression (src/name.ml[244,8125+14]..src/name.ml[244,8125+43])
                                                    Texp_apply
                                                    expression (src/name.ml[244,8125+14]..src/name.ml[244,8125+33])
                                                      Texp_ident "get_all_for_context/2016"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/name.ml[244,8125+34]..src/name.ml[244,8125+35])
                                                          Texp_ident "t/2106"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/name.ml[244,8125+36]..src/name.ml[244,8125+43])
                                                          Texp_ident "context/2107"
                                                    ]
                                              ]
                                              expression (src/name.ml[245,8172+4]..src/name.ml[249,8391+36])
                                                Texp_sequence
                                                expression (src/name.ml[245,8172+4]..src/name.ml[245,8172+70])
                                                  Texp_apply
                                                  expression (src/name.ml[245,8172+4]..src/name.ml[245,8172+26])
                                                    Texp_ident "check_collisions_local/2021"
                                                  [
                                                    <arg>
                                                      Labelled "caller"
                                                      expression (src/name.ml[245,8172+28]..src/name.ml[245,8172+34])
                                                        Texp_ident "caller/2109"
                                                    <arg>
                                                      Labelled "all_for_context"
                                                      expression (src/name.ml[245,8172+52]..src/name.ml[245,8172+55])
                                                        Texp_ident "all/2110"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/name.ml[245,8172+56]..src/name.ml[245,8172+57])
                                                        Texp_ident "t/2106"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/name.ml[245,8172+58]..src/name.ml[245,8172+65])
                                                        Texp_ident "context/2107"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/name.ml[245,8172+66]..src/name.ml[245,8172+70])
                                                        Texp_ident "name/2108"
                                                  ]
                                                expression (src/name.ml[246,8244+4]..src/name.ml[249,8391+36])
                                                  Texp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (src/name.ml[246,8244+8]..src/name.ml[246,8244+9])
                                                        Tpat_var "t/2111"
                                                      expression (src/name.ml[246,8244+12]..src/name.ml[246,8244+65])
                                                        Texp_record
                                                          fields =
                                                            [
                                                              "fully_qualified_name"
                                                                expression (src/name.ml[246,8244+37]..src/name.ml[246,8244+41])
                                                                  Texp_ident "name/2108"
                                                              "declared_at"
                                                                expression (src/name.ml[246,8244+57]..src/name.ml[246,8244+63])
                                                                  Texp_ident "caller/2109"
                                                            ]
                                                          representation =
                                                            Record_regular
                                                          extended_expression =
                                                            None
                                                  ]
                                                  expression (src/name.ml[247,8313+4]..src/name.ml[249,8391+36])
                                                    Texp_setfield
                                                    expression (src/name.ml[247,8313+4]..src/name.ml[247,8313+7])
                                                      Texp_ident "all/2110"
                                                    "all"
                                                    expression (src/name.ml[248,8328+6]..src/name.ml[249,8391+36])
                                                      Texp_apply
                                                      expression (src/name.ml[248,8328+6]..src/name.ml[248,8328+23])
                                                        Texp_ident "fold_dot_suffixes/551"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/name.ml[248,8328+24]..src/name.ml[248,8328+28])
                                                            Texp_ident "name/2108"
                                                        <arg>
                                                          Labelled "init"
                                                          expression (src/name.ml[248,8328+35]..src/name.ml[248,8328+42])
                                                            Texp_field
                                                            expression (src/name.ml[248,8328+35]..src/name.ml[248,8328+38])
                                                              Texp_ident "all/2110"
                                                            "all"
                                                        <arg>
                                                          Labelled "f"
                                                          expression (src/name.ml[248,8328+46]..src/name.ml[249,8391+36])
                                                            Texp_function
                                                            Nolabel
                                                            [
                                                              <case>
                                                                pattern (src/name.ml[248,8328+51]..src/name.ml[248,8328+55])
                                                                  Tpat_var "name/2112"
                                                                expression (src/name.ml[248,8328+56]..src/name.ml[249,8391+35]) ghost
                                                                  Texp_function
                                                                  Nolabel
                                                                  [
                                                                    <case>
                                                                      pattern (src/name.ml[248,8328+56]..src/name.ml[248,8328+59])
                                                                        Tpat_var "acc/2113"
                                                                      expression (src/name.ml[249,8391+10]..src/name.ml[249,8391+35])
                                                                        Texp_apply
                                                                        expression (src/name.ml[249,8391+10]..src/name.ml[249,8391+24])
                                                                          Texp_ident "Ppxlib__!.Import.String.Map.add"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/name.ml[249,8391+25]..src/name.ml[249,8391+29])
                                                                              Texp_ident "name/2112"
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/name.ml[249,8391+30]..src/name.ml[249,8391+31])
                                                                              Texp_ident "t/2111"
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/name.ml[249,8391+32]..src/name.ml[249,8391+35])
                                                                              Texp_ident "acc/2113"
                                                                        ]
                                                                  ]
                                                            ]
                                                      ]
                                    ]
                              ]
                        ]
                  ]
            ]
          structure_item (src/name.ml[251,8429+2]..src/name.ml[305,10458+54])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[251,8429+6]..src/name.ml[251,8429+16])
                  Tpat_var "spellcheck/2114"
                expression (src/name.ml[251,8429+17]..src/name.ml[305,10458+54]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/name.ml[251,8429+17]..src/name.ml[251,8429+18])
                        Tpat_var "t/2116"
                      expression (src/name.ml[251,8429+19]..src/name.ml[305,10458+54]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/name.ml[251,8429+19]..src/name.ml[251,8429+26])
                              Tpat_var "context/2117"
                            expression (src/name.ml[251,8429+27]..src/name.ml[305,10458+54]) ghost
                              Texp_function
                              Optional "allowlist"
                              [
                                <case>
                                  pattern (src/name.ml[251,8429+29]..src/name.ml[251,8429+43]) ghost
                                    Tpat_var "*opt*/2118"
                                  expression (src/name.ml[251,8429+27]..src/name.ml[305,10458+54]) ghost
                                    attribute "#default"
                                      []
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/name.ml[251,8429+29]..src/name.ml[251,8429+38])
                                          Tpat_var "allowlist/2119"
                                        expression (src/name.ml[251,8429+29]..src/name.ml[251,8429+43]) ghost
                                          Texp_match
                                          expression (src/name.ml[251,8429+27]..src/name.ml[305,10458+54]) ghost
                                            Texp_ident "*opt*/2118"
                                          [
                                            <case>
                                              pattern (src/name.ml[251,8429+41]..src/name.ml[251,8429+43])
                                                Tpat_value
                                                pattern (src/name.ml[251,8429+41]..src/name.ml[251,8429+43])
                                                  Tpat_construct "*predef*.Some"
                                                  [
                                                    pattern (src/name.ml[251,8429+41]..src/name.ml[251,8429+43])
                                                      Tpat_var "*sth*/2120"
                                                  ]
                                              expression (src/name.ml[251,8429+41]..src/name.ml[251,8429+43])
                                                Texp_ident "*sth*/2120"
                                            <case>
                                              pattern (src/name.ml[251,8429+41]..src/name.ml[251,8429+43])
                                                Tpat_value
                                                pattern (src/name.ml[251,8429+41]..src/name.ml[251,8429+43])
                                                  Tpat_construct "*predef*.None"
                                                  []
                                              expression (src/name.ml[251,8429+41]..src/name.ml[251,8429+43])
                                                Texp_construct "[]"
                                                []
                                          ]
                                          []
                                    ]
                                    expression (src/name.ml[251,8429+45]..src/name.ml[305,10458+54]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (src/name.ml[251,8429+45]..src/name.ml[251,8429+49])
                                            Tpat_var "name/2121"
                                          expression (src/name.ml[252,8481+4]..src/name.ml[305,10458+54])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/name.ml[252,8481+8]..src/name.ml[252,8481+23])
                                                  Tpat_var "all_for_context/2122"
                                                expression (src/name.ml[252,8481+26]..src/name.ml[252,8481+55])
                                                  Texp_apply
                                                  expression (src/name.ml[252,8481+26]..src/name.ml[252,8481+45])
                                                    Texp_ident "get_all_for_context/2016"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/name.ml[252,8481+46]..src/name.ml[252,8481+47])
                                                        Texp_ident "t/2116"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/name.ml[252,8481+48]..src/name.ml[252,8481+55])
                                                        Texp_ident "context/2117"
                                                  ]
                                            ]
                                            expression (src/name.ml[253,8540+4]..src/name.ml[305,10458+54])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/name.ml[253,8540+8]..src/name.ml[253,8540+11])
                                                    Tpat_var "all/2123"
                                                  expression (src/name.ml[254,8554+6]..src/name.ml[254,8554+74])
                                                    Texp_apply
                                                    expression (src/name.ml[254,8554+6]..src/name.ml[254,8554+21])
                                                      Texp_ident "Ppxlib__!.Import.String.Map.fold"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/name.ml[254,8554+22]..src/name.ml[254,8554+51])
                                                          Texp_function
                                                          Nolabel
                                                          [
                                                            <case>
                                                              pattern (src/name.ml[254,8554+27]..src/name.ml[254,8554+30])
                                                                Tpat_var "key/2124"
                                                              expression (src/name.ml[254,8554+31]..src/name.ml[254,8554+50]) ghost
                                                                Texp_function
                                                                Nolabel
                                                                [
                                                                  <case>
                                                                    pattern (src/name.ml[254,8554+31]..src/name.ml[254,8554+32])
                                                                      Tpat_any
                                                                    expression (src/name.ml[254,8554+33]..src/name.ml[254,8554+50]) ghost
                                                                      Texp_function
                                                                      Nolabel
                                                                      [
                                                                        <case>
                                                                          pattern (src/name.ml[254,8554+33]..src/name.ml[254,8554+36])
                                                                            Tpat_var "acc/2125"
                                                                          expression (src/name.ml[254,8554+40]..src/name.ml[254,8554+50])
                                                                            Texp_construct "::"
                                                                            [
                                                                              expression (src/name.ml[254,8554+40]..src/name.ml[254,8554+43])
                                                                                Texp_ident "key/2124"
                                                                              expression (src/name.ml[254,8554+47]..src/name.ml[254,8554+50])
                                                                                Texp_ident "acc/2125"
                                                                            ]
                                                                      ]
                                                                ]
                                                          ]
                                                      <arg>
                                                        Nolabel
                                                        expression (src/name.ml[254,8554+52]..src/name.ml[254,8554+71])
                                                          Texp_field
                                                          expression (src/name.ml[254,8554+52]..src/name.ml[254,8554+67])
                                                            Texp_ident "all_for_context/2122"
                                                          "all"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/name.ml[254,8554+72]..src/name.ml[254,8554+74])
                                                          Texp_construct "[]"
                                                          []
                                                    ]
                                              ]
                                              expression (src/name.ml[256,8636+4]..src/name.ml[305,10458+54])
                                                Texp_match
                                                expression (src/name.ml[256,8636+10]..src/name.ml[256,8636+54])
                                                  Texp_apply
                                                  expression (src/name.ml[256,8636+10]..src/name.ml[256,8636+31])
                                                    Texp_ident "Ppxlib__!.Spellcheck.spellcheck"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/name.ml[256,8636+32]..src/name.ml[256,8636+49])
                                                        Texp_apply
                                                        expression (src/name.ml[256,8636+37]..src/name.ml[256,8636+38])
                                                          Texp_ident "Ppxlib__!.Import.@"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/name.ml[256,8636+33]..src/name.ml[256,8636+36])
                                                              Texp_ident "all/2123"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/name.ml[256,8636+39]..src/name.ml[256,8636+48])
                                                              Texp_ident "allowlist/2119"
                                                        ]
                                                    <arg>
                                                      Nolabel
                                                      expression (src/name.ml[256,8636+50]..src/name.ml[256,8636+54])
                                                        Texp_ident "name/2121"
                                                  ]
                                                [
                                                  <case>
                                                    pattern (src/name.ml[257,8696+6]..src/name.ml[257,8696+17])
                                                      Tpat_value
                                                      pattern (src/name.ml[257,8696+6]..src/name.ml[257,8696+17])
                                                        Tpat_alias "x/2131"
                                                        pattern (src/name.ml[257,8696+6]..src/name.ml[257,8696+12])
                                                          Tpat_construct "Some"
                                                          [
                                                            pattern (src/name.ml[257,8696+11]..src/name.ml[257,8696+12])
                                                              Tpat_any
                                                          ]
                                                    expression (src/name.ml[257,8696+21]..src/name.ml[257,8696+22])
                                                      Texp_ident "x/2131"
                                                  <case>
                                                    pattern (src/name.ml[258,8719+6]..src/name.ml[258,8719+10])
                                                      Tpat_value
                                                      pattern (src/name.ml[258,8719+6]..src/name.ml[258,8719+10])
                                                        Tpat_construct "None"
                                                        []
                                                    <when>
                                                      expression (src/name.ml[258,8719+16]..src/name.ml[258,8719+55])
                                                        Texp_apply
                                                        expression (src/name.ml[258,8719+16]..src/name.ml[258,8719+30])
                                                          Texp_ident "Ppxlib__!.Import.String.Map.mem"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/name.ml[258,8719+31]..src/name.ml[258,8719+35])
                                                              Texp_ident "name/2121"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/name.ml[258,8719+36]..src/name.ml[258,8719+55])
                                                              Texp_field
                                                              expression (src/name.ml[258,8719+36]..src/name.ml[258,8719+51])
                                                                Texp_ident "all_for_context/2122"
                                                              "all"
                                                        ]
                                                    expression (src/name.ml[258,8719+59]..src/name.ml[258,8719+63])
                                                      Texp_construct "None"
                                                      []
                                                  <case>
                                                    pattern (src/name.ml[259,8783+6]..src/name.ml[259,8783+10])
                                                      Tpat_value
                                                      pattern (src/name.ml[259,8783+6]..src/name.ml[259,8783+10])
                                                        Tpat_construct "None"
                                                        []
                                                    expression (src/name.ml[259,8783+14]..src/name.ml[305,10458+54])
                                                      Texp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (src/name.ml[260,8799+12]..src/name.ml[260,8799+26])
                                                            Tpat_var "other_contexts/2132"
                                                          expression (src/name.ml[261,8828+10]..src/name.ml[271,9182+31])
                                                            Texp_apply
                                                            expression (src/name.ml[261,8828+10]..src/name.ml[261,8828+22])
                                                              Texp_ident "Ppxlib__!.Import.Hashtbl.fold"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/name.ml[262,8851+12]..src/name.ml[270,9158+23])
                                                                  Texp_function
                                                                  Nolabel
                                                                  [
                                                                    <case>
                                                                      pattern (src/name.ml[262,8851+17]..src/name.ml[262,8851+20])
                                                                        Tpat_var "ctx/2133"
                                                                      expression (src/name.ml[262,8851+21]..src/name.ml[270,9158+22]) ghost
                                                                        Texp_function
                                                                        Nolabel
                                                                        [
                                                                          <case>
                                                                            pattern (src/name.ml[262,8851+21]..src/name.ml[262,8851+37])
                                                                              Tpat_var "all_from_context/2134"
                                                                            expression (src/name.ml[262,8851+38]..src/name.ml[270,9158+22]) ghost
                                                                              Texp_function
                                                                              Nolabel
                                                                              [
                                                                                <case>
                                                                                  pattern (src/name.ml[262,8851+38]..src/name.ml[262,8851+41])
                                                                                    Tpat_var "acc/2135"
                                                                                  expression (src/name.ml[263,8896+14]..src/name.ml[270,9158+22])
                                                                                    Texp_ifthenelse
                                                                                    expression (src/name.ml[264,8913+16]..src/name.ml[265,8953+59])
                                                                                      Texp_apply
                                                                                      expression (src/name.ml[265,8953+16]..src/name.ml[265,8953+18])
                                                                                        Texp_ident "Stdlib!.&&"
                                                                                      [
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/name.ml[264,8913+16]..src/name.ml[264,8913+39])
                                                                                            Texp_apply
                                                                                            expression (src/name.ml[264,8913+16]..src/name.ml[264,8913+27])
                                                                                              Texp_ident "Ppxlib__!.Import.Poly.<>"
                                                                                            [
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/name.ml[264,8913+28]..src/name.ml[264,8913+35])
                                                                                                  Texp_ident "context/2117"
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/name.ml[264,8913+36]..src/name.ml[264,8913+39])
                                                                                                  Texp_ident "ctx/2133"
                                                                                            ]
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/name.ml[265,8953+19]..src/name.ml[265,8953+59])
                                                                                            Texp_apply
                                                                                            expression (src/name.ml[265,8953+19]..src/name.ml[265,8953+33])
                                                                                              Texp_ident "Ppxlib__!.Import.String.Map.mem"
                                                                                            [
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/name.ml[265,8953+34]..src/name.ml[265,8953+38])
                                                                                                  Texp_ident "name/2121"
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/name.ml[265,8953+39]..src/name.ml[265,8953+59])
                                                                                                  Texp_field
                                                                                                  expression (src/name.ml[265,8953+39]..src/name.ml[265,8953+55])
                                                                                                    Texp_ident "all_from_context/2134"
                                                                                                  "all"
                                                                                            ]
                                                                                      ]
                                                                                    expression (src/name.ml[267,9032+16]..src/name.ml[269,9113+44])
                                                                                      Texp_match
                                                                                      expression (src/name.ml[267,9032+22]..src/name.ml[267,9032+45])
                                                                                        Texp_apply
                                                                                        expression (src/name.ml[267,9032+22]..src/name.ml[267,9032+41])
                                                                                          Texp_field
                                                                                          expression (src/name.ml[267,9032+22]..src/name.ml[267,9032+23])
                                                                                            Texp_ident "t/2116"
                                                                                          "string_of_context"
                                                                                        [
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (src/name.ml[267,9032+42]..src/name.ml[267,9032+45])
                                                                                              Texp_ident "ctx/2133"
                                                                                        ]
                                                                                      [
                                                                                        <case>
                                                                                          pattern (src/name.ml[268,9083+18]..src/name.ml[268,9083+22])
                                                                                            Tpat_value
                                                                                            pattern (src/name.ml[268,9083+18]..src/name.ml[268,9083+22])
                                                                                              Tpat_construct "None"
                                                                                              []
                                                                                          expression (src/name.ml[268,9083+26]..src/name.ml[268,9083+29])
                                                                                            Texp_ident "acc/2135"
                                                                                        <case>
                                                                                          pattern (src/name.ml[269,9113+18]..src/name.ml[269,9113+24])
                                                                                            Tpat_value
                                                                                            pattern (src/name.ml[269,9113+18]..src/name.ml[269,9113+24])
                                                                                              Tpat_construct "Some"
                                                                                              [
                                                                                                pattern (src/name.ml[269,9113+23]..src/name.ml[269,9113+24])
                                                                                                  Tpat_var "s/2146"
                                                                                              ]
                                                                                          expression (src/name.ml[269,9113+28]..src/name.ml[269,9113+44])
                                                                                            Texp_construct "::"
                                                                                            [
                                                                                              expression (src/name.ml[269,9113+28]..src/name.ml[269,9113+37])
                                                                                                Texp_apply
                                                                                                expression (src/name.ml[269,9113+31]..src/name.ml[269,9113+32])
                                                                                                  Texp_ident "Stdlib!.^"
                                                                                                [
                                                                                                  <arg>
                                                                                                    Nolabel
                                                                                                    expression (src/name.ml[269,9113+29]..src/name.ml[269,9113+30])
                                                                                                      Texp_ident "s/2146"
                                                                                                  <arg>
                                                                                                    Nolabel
                                                                                                    expression (src/name.ml[269,9113+33]..src/name.ml[269,9113+36])
                                                                                                      Texp_constant Const_string("s",(src/name.ml[269,9113+34]..src/name.ml[269,9113+35]),None)
                                                                                                ]
                                                                                              expression (src/name.ml[269,9113+41]..src/name.ml[269,9113+44])
                                                                                                Texp_ident "acc/2135"
                                                                                            ]
                                                                                      ]
                                                                                      []
                                                                                    Some
                                                                                      expression (src/name.ml[270,9158+19]..src/name.ml[270,9158+22])
                                                                                        Texp_ident "acc/2135"
                                                                              ]
                                                                        ]
                                                                  ]
                                                              <arg>
                                                                Nolabel
                                                                expression (src/name.ml[271,9182+12]..src/name.ml[271,9182+28])
                                                                  Texp_field
                                                                  expression (src/name.ml[271,9182+12]..src/name.ml[271,9182+13])
                                                                    Texp_ident "t/2116"
                                                                  "all_by_context"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/name.ml[271,9182+29]..src/name.ml[271,9182+31])
                                                                  Texp_construct "[]"
                                                                  []
                                                            ]
                                                      ]
                                                      expression (src/name.ml[273,9225+8]..src/name.ml[305,10458+53])
                                                        Texp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (src/name.ml[273,9225+12]..src/name.ml[273,9225+19])
                                                              Tpat_var "pp_text/2147"
                                                            expression (src/name.ml[273,9225+22]..src/name.ml[273,9225+42])
                                                              Texp_ident "Format/550.pp_print_text"
                                                        ]
                                                        expression (src/name.ml[274,9271+8]..src/name.ml[305,10458+53])
                                                          Texp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (src/name.ml[274,9271+12]..src/name.ml[274,9271+27])
                                                                Tpat_var "current_context/2314"
                                                              expression (src/name.ml[274,9271+28]..src/name.ml[285,9685+25]) ghost
                                                                Texp_function
                                                                Nolabel
                                                                [
                                                                  <case>
                                                                    pattern (src/name.ml[274,9271+28]..src/name.ml[274,9271+31])
                                                                      Tpat_var "ppf/2316"
                                                                    expression (src/name.ml[275,9305+10]..src/name.ml[285,9685+25])
                                                                      Texp_match
                                                                      expression (src/name.ml[275,9305+16]..src/name.ml[275,9305+43])
                                                                        Texp_apply
                                                                        expression (src/name.ml[275,9305+16]..src/name.ml[275,9305+35])
                                                                          Texp_field
                                                                          expression (src/name.ml[275,9305+16]..src/name.ml[275,9305+17])
                                                                            Texp_ident "t/2116"
                                                                          "string_of_context"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/name.ml[275,9305+36]..src/name.ml[275,9305+43])
                                                                              Texp_ident "context/2117"
                                                                        ]
                                                                      [
                                                                        <case>
                                                                          pattern (src/name.ml[276,9354+12]..src/name.ml[276,9354+26])
                                                                            Tpat_or
                                                                            pattern (src/name.ml[276,9354+12]..src/name.ml[276,9354+16])
                                                                              Tpat_value
                                                                              pattern (src/name.ml[276,9354+12]..src/name.ml[276,9354+16])
                                                                                Tpat_construct "None"
                                                                                []
                                                                            pattern (src/name.ml[276,9354+19]..src/name.ml[276,9354+26])
                                                                              Tpat_value
                                                                              pattern (src/name.ml[276,9354+19]..src/name.ml[276,9354+26])
                                                                                Tpat_construct "Some"
                                                                                [
                                                                                  pattern (src/name.ml[276,9354+24]..src/name.ml[276,9354+26])
                                                                                    Tpat_constant Const_string("",(src/name.ml[276,9354+25]..src/name.ml[276,9354+25]),None)
                                                                                ]
                                                                          expression (src/name.ml[276,9354+30]..src/name.ml[276,9354+32])
                                                                            Texp_construct "()"
                                                                            []
                                                                        <case>
                                                                          pattern (src/name.ml[277,9387+12]..src/name.ml[277,9387+18])
                                                                            Tpat_value
                                                                            pattern (src/name.ml[277,9387+12]..src/name.ml[277,9387+18])
                                                                              Tpat_construct "Some"
                                                                              [
                                                                                pattern (src/name.ml[277,9387+17]..src/name.ml[277,9387+18])
                                                                                  Tpat_var "s/2317"
                                                                              ]
                                                                          expression (src/name.ml[278,9409+14]..src/name.ml[285,9685+25])
                                                                            Texp_let Nonrec
                                                                            [
                                                                              <def>
                                                                                pattern (src/name.ml[278,9409+18]..src/name.ml[278,9409+25])
                                                                                  Tpat_var "a_or_an/2318"
                                                                                expression (src/name.ml[279,9437+16]..src/name.ml[281,9530+26])
                                                                                  Texp_match
                                                                                  expression (src/name.ml[279,9437+22]..src/name.ml[279,9437+27])
                                                                                    Texp_apply
                                                                                    expression (src/name.ml[279,9437+22]..src/name.ml[279,9437+27]) ghost
                                                                                      Texp_ident "Ppxlib__!.Import.String.get"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/name.ml[279,9437+22]..src/name.ml[279,9437+23])
                                                                                          Texp_ident "s/2317"
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/name.ml[279,9437+25]..src/name.ml[279,9437+26])
                                                                                          Texp_constant Const_int 0
                                                                                    ]
                                                                                  [
                                                                                    <case>
                                                                                      pattern (src/name.ml[280,9470+18]..src/name.ml[280,9470+51])
                                                                                        Tpat_or
                                                                                        pattern (src/name.ml[280,9470+18]..src/name.ml[280,9470+45])
                                                                                          Tpat_or
                                                                                          pattern (src/name.ml[280,9470+18]..src/name.ml[280,9470+39])
                                                                                            Tpat_or
                                                                                            pattern (src/name.ml[280,9470+18]..src/name.ml[280,9470+33])
                                                                                              Tpat_or
                                                                                              pattern (src/name.ml[280,9470+18]..src/name.ml[280,9470+27])
                                                                                                Tpat_or
                                                                                                pattern (src/name.ml[280,9470+18]..src/name.ml[280,9470+21])
                                                                                                  Tpat_value
                                                                                                  pattern (src/name.ml[280,9470+18]..src/name.ml[280,9470+21])
                                                                                                    Tpat_constant Const_char 61
                                                                                                pattern (src/name.ml[280,9470+24]..src/name.ml[280,9470+27])
                                                                                                  Tpat_value
                                                                                                  pattern (src/name.ml[280,9470+24]..src/name.ml[280,9470+27])
                                                                                                    Tpat_constant Const_char 65
                                                                                              pattern (src/name.ml[280,9470+30]..src/name.ml[280,9470+33])
                                                                                                Tpat_value
                                                                                                pattern (src/name.ml[280,9470+30]..src/name.ml[280,9470+33])
                                                                                                  Tpat_constant Const_char 69
                                                                                            pattern (src/name.ml[280,9470+36]..src/name.ml[280,9470+39])
                                                                                              Tpat_value
                                                                                              pattern (src/name.ml[280,9470+36]..src/name.ml[280,9470+39])
                                                                                                Tpat_constant Const_char 6f
                                                                                          pattern (src/name.ml[280,9470+42]..src/name.ml[280,9470+45])
                                                                                            Tpat_value
                                                                                            pattern (src/name.ml[280,9470+42]..src/name.ml[280,9470+45])
                                                                                              Tpat_constant Const_char 75
                                                                                        pattern (src/name.ml[280,9470+48]..src/name.ml[280,9470+51])
                                                                                          Tpat_value
                                                                                          pattern (src/name.ml[280,9470+48]..src/name.ml[280,9470+51])
                                                                                            Tpat_constant Const_char 79
                                                                                      expression (src/name.ml[280,9470+55]..src/name.ml[280,9470+59])
                                                                                        Texp_constant Const_string("an",(src/name.ml[280,9470+56]..src/name.ml[280,9470+58]),None)
                                                                                    <case>
                                                                                      pattern (src/name.ml[281,9530+18]..src/name.ml[281,9530+19])
                                                                                        Tpat_value
                                                                                        pattern (src/name.ml[281,9530+18]..src/name.ml[281,9530+19])
                                                                                          Tpat_any
                                                                                      expression (src/name.ml[281,9530+23]..src/name.ml[281,9530+26])
                                                                                        Texp_constant Const_string("a",(src/name.ml[281,9530+24]..src/name.ml[281,9530+25]),None)
                                                                                  ]
                                                                                  []
                                                                            ]
                                                                            expression (src/name.ml[283,9574+14]..src/name.ml[285,9685+25])
                                                                              Texp_apply
                                                                              expression (src/name.ml[283,9574+14]..src/name.ml[283,9574+28])
                                                                                Texp_ident "Format/550.fprintf"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/name.ml[283,9574+29]..src/name.ml[283,9574+32])
                                                                                    Texp_ident "ppf/2316"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69])
                                                                                    Texp_construct "CamlinternalFormatBasics.Format"
                                                                                    [
                                                                                      expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                        [
                                                                                          expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.Break"
                                                                                            [
                                                                                              expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                Texp_constant Const_string("@ ",(src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost,None)
                                                                                              expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                Texp_constant Const_int 1
                                                                                              expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                Texp_constant Const_int 0
                                                                                            ]
                                                                                          expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                            [
                                                                                              expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                Texp_constant Const_string("but",(src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost,None)
                                                                                              expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                                [
                                                                                                  expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                    Texp_construct "CamlinternalFormatBasics.Break"
                                                                                                    [
                                                                                                      expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                        Texp_constant Const_string("@ ",(src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost,None)
                                                                                                      expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                        Texp_constant Const_int 1
                                                                                                      expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                        Texp_constant Const_int 0
                                                                                                    ]
                                                                                                  expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                    [
                                                                                                      expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                        Texp_constant Const_string("is",(src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost,None)
                                                                                                      expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                        Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                                        [
                                                                                                          expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                            Texp_construct "CamlinternalFormatBasics.Break"
                                                                                                            [
                                                                                                              expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                Texp_constant Const_string("@ ",(src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost,None)
                                                                                                              expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                Texp_constant Const_int 1
                                                                                                              expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                Texp_constant Const_int 0
                                                                                                            ]
                                                                                                          expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                            [
                                                                                                              expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                Texp_constant Const_string("used",(src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost,None)
                                                                                                              expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                                                [
                                                                                                                  expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                    Texp_construct "CamlinternalFormatBasics.Break"
                                                                                                                    [
                                                                                                                      expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                        Texp_constant Const_string("@ ",(src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost,None)
                                                                                                                      expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                        Texp_constant Const_int 1
                                                                                                                      expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                        Texp_constant Const_int 0
                                                                                                                    ]
                                                                                                                  expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                                    [
                                                                                                                      expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                        Texp_constant Const_string("here",(src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost,None)
                                                                                                                      expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                        Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                                                        [
                                                                                                                          expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                            Texp_construct "CamlinternalFormatBasics.Break"
                                                                                                                            [
                                                                                                                              expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                Texp_constant Const_string("@ ",(src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost,None)
                                                                                                                              expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                Texp_constant Const_int 1
                                                                                                                              expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                Texp_constant Const_int 0
                                                                                                                            ]
                                                                                                                          expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                                            [
                                                                                                                              expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                Texp_constant Const_string("in",(src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost,None)
                                                                                                                              expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                                                                [
                                                                                                                                  expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                    Texp_construct "CamlinternalFormatBasics.Break"
                                                                                                                                    [
                                                                                                                                      expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                        Texp_constant Const_string("@ ",(src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost,None)
                                                                                                                                      expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                        Texp_constant Const_int 1
                                                                                                                                      expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                        Texp_constant Const_int 0
                                                                                                                                    ]
                                                                                                                                  expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                                                    [
                                                                                                                                      expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                        Texp_constant Const_string("the",(src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost,None)
                                                                                                                                      expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                        Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                                                                        [
                                                                                                                                          expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                            Texp_construct "CamlinternalFormatBasics.Break"
                                                                                                                                            [
                                                                                                                                              expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                                Texp_constant Const_string("@ ",(src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost,None)
                                                                                                                                              expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                                Texp_constant Const_int 1
                                                                                                                                              expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                                Texp_constant Const_int 0
                                                                                                                                            ]
                                                                                                                                          expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                                                            [
                                                                                                                                              expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                                Texp_constant Const_string("context",(src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost,None)
                                                                                                                                              expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                                Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                                                                                [
                                                                                                                                                  expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                                    Texp_construct "CamlinternalFormatBasics.Break"
                                                                                                                                                    [
                                                                                                                                                      expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                                        Texp_constant Const_string("@ ",(src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost,None)
                                                                                                                                                      expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                                        Texp_constant Const_int 1
                                                                                                                                                      expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                                        Texp_constant Const_int 0
                                                                                                                                                    ]
                                                                                                                                                  expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                                                                    [
                                                                                                                                                      expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                                        Texp_constant Const_string("of",(src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost,None)
                                                                                                                                                      expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                                        Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                                                                                        [
                                                                                                                                                          expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                                            Texp_construct "CamlinternalFormatBasics.Break"
                                                                                                                                                            [
                                                                                                                                                              expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                                                Texp_constant Const_string("@ ",(src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost,None)
                                                                                                                                                              expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                                                Texp_constant Const_int 1
                                                                                                                                                              expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                                                Texp_constant Const_int 0
                                                                                                                                                            ]
                                                                                                                                                          expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                                            Texp_construct "CamlinternalFormatBasics.String"
                                                                                                                                                            [
                                                                                                                                                              expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                                                                                []
                                                                                                                                                              expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                                                Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                                                                                                [
                                                                                                                                                                  expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                                                    Texp_construct "CamlinternalFormatBasics.Break"
                                                                                                                                                                    [
                                                                                                                                                                      expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                                                        Texp_constant Const_string("@ ",(src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost,None)
                                                                                                                                                                      expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                                                        Texp_constant Const_int 1
                                                                                                                                                                      expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                                                        Texp_constant Const_int 0
                                                                                                                                                                    ]
                                                                                                                                                                  expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                                                    Texp_construct "CamlinternalFormatBasics.Alpha"
                                                                                                                                                                    [
                                                                                                                                                                      expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                                                                                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                                                                                        []
                                                                                                                                                                    ]
                                                                                                                                                                ]
                                                                                                                                                            ]
                                                                                                                                                        ]
                                                                                                                                                    ]
                                                                                                                                                ]
                                                                                                                                            ]
                                                                                                                                        ]
                                                                                                                                    ]
                                                                                                                                ]
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                ]
                                                                                                            ]
                                                                                                        ]
                                                                                                    ]
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                      expression (src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost
                                                                                        Texp_constant Const_string("@ but@ is@ used@ here@ in@ the@ context@ of@ %s@ %a",(src/name.ml[284,9607+16]..src/name.ml[284,9607+69]) ghost,None)
                                                                                    ]
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/name.ml[284,9607+70]..src/name.ml[284,9607+77])
                                                                                    Texp_ident "a_or_an/2318"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/name.ml[285,9685+16]..src/name.ml[285,9685+23])
                                                                                    Texp_ident "pp_text/2147"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/name.ml[285,9685+24]..src/name.ml[285,9685+25])
                                                                                    Texp_ident "s/2317"
                                                                              ]
                                                                      ]
                                                                      []
                                                                ]
                                                          ]
                                                          expression (src/name.ml[287,9722+8]..src/name.ml[305,10458+53])
                                                            Texp_match
                                                            expression (src/name.ml[288,9736+10]..src/name.ml[288,9736+72])
                                                              Texp_apply
                                                              expression (src/name.ml[288,9736+10]..src/name.ml[288,9736+19])
                                                                Texp_ident "Ppxlib__!.Import.List.sort"
                                                              [
                                                                <arg>
                                                                  Labelled "cmp"
                                                                  expression (src/name.ml[288,9736+25]..src/name.ml[288,9736+57])
                                                                    Texp_function
                                                                    Nolabel
                                                                    [
                                                                      <case>
                                                                        pattern (src/name.ml[288,9736+30]..src/name.ml[288,9736+31])
                                                                          Tpat_var "x/2329"
                                                                        expression (src/name.ml[288,9736+32]..src/name.ml[288,9736+56]) ghost
                                                                          Texp_function
                                                                          Nolabel
                                                                          [
                                                                            <case>
                                                                              pattern (src/name.ml[288,9736+32]..src/name.ml[288,9736+33])
                                                                                Tpat_var "y/2330"
                                                                              expression (src/name.ml[288,9736+37]..src/name.ml[288,9736+56])
                                                                                Texp_apply
                                                                                expression (src/name.ml[288,9736+37]..src/name.ml[288,9736+38])
                                                                                  Texp_ident "Stdlib!.~-"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/name.ml[288,9736+38]..src/name.ml[288,9736+56])
                                                                                      Texp_apply
                                                                                      expression (src/name.ml[288,9736+38]..src/name.ml[288,9736+52])
                                                                                        Texp_ident "Ppxlib__!.Import.String.compare"
                                                                                      [
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/name.ml[288,9736+53]..src/name.ml[288,9736+54])
                                                                                            Texp_ident "x/2329"
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/name.ml[288,9736+55]..src/name.ml[288,9736+56])
                                                                                            Texp_ident "y/2330"
                                                                                      ]
                                                                                ]
                                                                          ]
                                                                    ]
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/name.ml[288,9736+58]..src/name.ml[288,9736+72])
                                                                    Texp_ident "other_contexts/2132"
                                                              ]
                                                            [
                                                              <case>
                                                                pattern (src/name.ml[290,9822+10]..src/name.ml[290,9822+12])
                                                                  Tpat_value
                                                                  pattern (src/name.ml[290,9822+10]..src/name.ml[290,9822+12])
                                                                    Tpat_construct "[]"
                                                                    []
                                                                expression (src/name.ml[290,9822+16]..src/name.ml[290,9822+20])
                                                                  Texp_construct "None"
                                                                  []
                                                              <case>
                                                                pattern (src/name.ml[291,9843+10]..src/name.ml[291,9843+15])
                                                                  Tpat_value
                                                                  pattern (src/name.ml[291,9843+10]..src/name.ml[291,9843+15])
                                                                    Tpat_construct "::"
                                                                    [
                                                                      pattern (src/name.ml[291,9843+12]..src/name.ml[291,9843+13])
                                                                        Tpat_var "c/2331"
                                                                      pattern (src/name.ml[291,9843+14]..src/name.ml[291,9843+15]) ghost
                                                                        Tpat_construct "[]"
                                                                        []
                                                                    ]
                                                                expression (src/name.ml[292,9862+12]..src/name.ml[296,10044+33])
                                                                  Texp_construct "Some"
                                                                  [
                                                                    expression (src/name.ml[293,9879+14]..src/name.ml[296,10044+33])
                                                                      Texp_apply
                                                                      expression (src/name.ml[293,9879+15]..src/name.ml[293,9879+30])
                                                                        Texp_ident "Format/550.asprintf"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53])
                                                                            Texp_construct "CamlinternalFormatBasics.Format"
                                                                            [
                                                                              expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.Formatting_gen"
                                                                                [
                                                                                  expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.Open_box"
                                                                                    [
                                                                                      expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.Format"
                                                                                        [
                                                                                          expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                            []
                                                                                          expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                            Texp_constant Const_string("",(src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost,None)
                                                                                        ]
                                                                                    ]
                                                                                  expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                    [
                                                                                      expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                        Texp_constant Const_string("Hint:",(src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost,None)
                                                                                      expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                        [
                                                                                          expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.Break"
                                                                                            [
                                                                                              expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                Texp_constant Const_string("@ ",(src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost,None)
                                                                                              expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                Texp_constant Const_int 1
                                                                                              expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                Texp_constant Const_int 0
                                                                                            ]
                                                                                          expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                                            [
                                                                                              expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                Texp_constant Const_char 60
                                                                                              expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                Texp_construct "CamlinternalFormatBasics.String"
                                                                                                [
                                                                                                  expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                    []
                                                                                                  expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                    Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                                                    [
                                                                                                      expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                        Texp_constant Const_char 27
                                                                                                      expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                        Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                                        [
                                                                                                          expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                            Texp_construct "CamlinternalFormatBasics.Break"
                                                                                                            [
                                                                                                              expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                Texp_constant Const_string("@ ",(src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost,None)
                                                                                                              expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                Texp_constant Const_int 1
                                                                                                              expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                Texp_constant Const_int 0
                                                                                                            ]
                                                                                                          expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                            [
                                                                                                              expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                Texp_constant Const_string("is",(src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost,None)
                                                                                                              expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                                                [
                                                                                                                  expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                    Texp_construct "CamlinternalFormatBasics.Break"
                                                                                                                    [
                                                                                                                      expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                        Texp_constant Const_string("@ ",(src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost,None)
                                                                                                                      expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                        Texp_constant Const_int 1
                                                                                                                      expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                        Texp_constant Const_int 0
                                                                                                                    ]
                                                                                                                  expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                                    [
                                                                                                                      expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                        Texp_constant Const_string("available",(src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost,None)
                                                                                                                      expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                        Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                                                        [
                                                                                                                          expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                            Texp_construct "CamlinternalFormatBasics.Break"
                                                                                                                            [
                                                                                                                              expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                                Texp_constant Const_string("@ ",(src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost,None)
                                                                                                                              expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                                Texp_constant Const_int 1
                                                                                                                              expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                                Texp_constant Const_int 0
                                                                                                                            ]
                                                                                                                          expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                                            [
                                                                                                                              expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                                Texp_constant Const_string("for",(src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost,None)
                                                                                                                              expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                                Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                                                                [
                                                                                                                                  expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                                    Texp_construct "CamlinternalFormatBasics.Break"
                                                                                                                                    [
                                                                                                                                      expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                                        Texp_constant Const_string("@ ",(src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost,None)
                                                                                                                                      expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                                        Texp_constant Const_int 1
                                                                                                                                      expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                                        Texp_constant Const_int 0
                                                                                                                                    ]
                                                                                                                                  expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                                    Texp_construct "CamlinternalFormatBasics.Alpha"
                                                                                                                                    [
                                                                                                                                      expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                                        Texp_construct "CamlinternalFormatBasics.Theta"
                                                                                                                                        [
                                                                                                                                          expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                                            Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                                                                                            [
                                                                                                                                              expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                                                Texp_constant Const_char 2e
                                                                                                                                              expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                                                Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                                                                                [
                                                                                                                                                  expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                                                    Texp_construct "CamlinternalFormatBasics.Close_box"
                                                                                                                                                    []
                                                                                                                                                  expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                                                    Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                                                                                    [
                                                                                                                                                      expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                                                        Texp_construct "CamlinternalFormatBasics.Force_newline"
                                                                                                                                                        []
                                                                                                                                                      expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                                                                        [
                                                                                                                                                          expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                                                            Texp_constant Const_string("Did you put it at the wrong level?",(src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost,None)
                                                                                                                                                          expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                                                                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                                                                            []
                                                                                                                                                        ]
                                                                                                                                                    ]
                                                                                                                                                ]
                                                                                                                                            ]
                                                                                                                                        ]
                                                                                                                                    ]
                                                                                                                                ]
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                ]
                                                                                                            ]
                                                                                                        ]
                                                                                                    ]
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                ]
                                                                              expression (src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost
                                                                                Texp_constant Const_string("@[Hint:@ `%s'@ is@ available@ for@ %a%t.@]@\nDid you put it at the wrong level?",(src/name.ml[294,9910+17]..src/name.ml[295,9975+53]) ghost,None)
                                                                            ]
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/name.ml[295,9975+54]..src/name.ml[295,9975+58])
                                                                            Texp_ident "name/2121"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/name.ml[295,9975+59]..src/name.ml[295,9975+66])
                                                                            Texp_ident "pp_text/2147"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/name.ml[295,9975+67]..src/name.ml[295,9975+68])
                                                                            Texp_ident "c/2331"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/name.ml[296,10044+17]..src/name.ml[296,10044+32])
                                                                            Texp_ident "current_context/2314"
                                                                      ]
                                                                  ]
                                                              <case>
                                                                pattern (src/name.ml[297,10078+10]..src/name.ml[297,10078+28])
                                                                  Tpat_value
                                                                  pattern (src/name.ml[297,10078+10]..src/name.ml[297,10078+28])
                                                                    Tpat_construct "::"
                                                                    [
                                                                      pattern (src/name.ml[297,10078+10]..src/name.ml[297,10078+14])
                                                                        Tpat_var "last/2332"
                                                                      pattern (src/name.ml[297,10078+18]..src/name.ml[297,10078+28])
                                                                        Tpat_var "rev_others/2333"
                                                                    ]
                                                                expression (src/name.ml[298,10110+12]..src/name.ml[305,10458+53])
                                                                  Texp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (src/name.ml[298,10110+16]..src/name.ml[298,10110+22])
                                                                        Tpat_var "others/2334"
                                                                      expression (src/name.ml[298,10110+25]..src/name.ml[298,10110+44])
                                                                        Texp_apply
                                                                        expression (src/name.ml[298,10110+25]..src/name.ml[298,10110+33])
                                                                          Texp_ident "Ppxlib__!.Import.List.rev"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/name.ml[298,10110+34]..src/name.ml[298,10110+44])
                                                                              Texp_ident "rev_others/2333"
                                                                        ]
                                                                  ]
                                                                  expression (src/name.ml[299,10158+12]..src/name.ml[305,10458+53])
                                                                    Texp_construct "Some"
                                                                    [
                                                                      expression (src/name.ml[300,10175+14]..src/name.ml[305,10458+53])
                                                                        Texp_apply
                                                                        expression (src/name.ml[300,10175+15]..src/name.ml[300,10175+30])
                                                                          Texp_ident "Format/550.asprintf"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53])
                                                                              Texp_construct "CamlinternalFormatBasics.Format"
                                                                              [
                                                                                expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                  Texp_construct "CamlinternalFormatBasics.Formatting_gen"
                                                                                  [
                                                                                    expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                      Texp_construct "CamlinternalFormatBasics.Open_box"
                                                                                      [
                                                                                        expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                          Texp_construct "CamlinternalFormatBasics.Format"
                                                                                          [
                                                                                            expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                              []
                                                                                            expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                              Texp_constant Const_string("",(src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost,None)
                                                                                          ]
                                                                                      ]
                                                                                    expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                      [
                                                                                        expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                          Texp_constant Const_string("Hint:",(src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost,None)
                                                                                        expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                          Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                          [
                                                                                            expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                              Texp_construct "CamlinternalFormatBasics.Break"
                                                                                              [
                                                                                                expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                  Texp_constant Const_string("@ ",(src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost,None)
                                                                                                expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                  Texp_constant Const_int 1
                                                                                                expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                  Texp_constant Const_int 0
                                                                                              ]
                                                                                            expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                              Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                                              [
                                                                                                expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                  Texp_constant Const_char 60
                                                                                                expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                  Texp_construct "CamlinternalFormatBasics.String"
                                                                                                  [
                                                                                                    expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                      []
                                                                                                    expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                      Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                                                      [
                                                                                                        expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                          Texp_constant Const_char 27
                                                                                                        expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                          Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                                          [
                                                                                                            expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                              Texp_construct "CamlinternalFormatBasics.Break"
                                                                                                              [
                                                                                                                expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                  Texp_constant Const_string("@ ",(src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost,None)
                                                                                                                expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                  Texp_constant Const_int 1
                                                                                                                expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                  Texp_constant Const_int 0
                                                                                                              ]
                                                                                                            expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                              [
                                                                                                                expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                  Texp_constant Const_string("is",(src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost,None)
                                                                                                                expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                  Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                                                  [
                                                                                                                    expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                      Texp_construct "CamlinternalFormatBasics.Break"
                                                                                                                      [
                                                                                                                        expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                          Texp_constant Const_string("@ ",(src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost,None)
                                                                                                                        expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                          Texp_constant Const_int 1
                                                                                                                        expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                          Texp_constant Const_int 0
                                                                                                                      ]
                                                                                                                    expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                                      [
                                                                                                                        expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                          Texp_constant Const_string("available",(src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost,None)
                                                                                                                        expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                          Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                                                          [
                                                                                                                            expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                              Texp_construct "CamlinternalFormatBasics.Break"
                                                                                                                              [
                                                                                                                                expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                  Texp_constant Const_string("@ ",(src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost,None)
                                                                                                                                expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                  Texp_constant Const_int 1
                                                                                                                                expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                  Texp_constant Const_int 0
                                                                                                                              ]
                                                                                                                            expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                                              [
                                                                                                                                expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                  Texp_constant Const_string("for",(src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost,None)
                                                                                                                                expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                  Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                                                                  [
                                                                                                                                    expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                      Texp_construct "CamlinternalFormatBasics.Break"
                                                                                                                                      [
                                                                                                                                        expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                          Texp_constant Const_string("@ ",(src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost,None)
                                                                                                                                        expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                          Texp_constant Const_int 1
                                                                                                                                        expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                          Texp_constant Const_int 0
                                                                                                                                      ]
                                                                                                                                    expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                      Texp_construct "CamlinternalFormatBasics.Alpha"
                                                                                                                                      [
                                                                                                                                        expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                          Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                                                                          [
                                                                                                                                            expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                              Texp_construct "CamlinternalFormatBasics.Break"
                                                                                                                                              [
                                                                                                                                                expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                                  Texp_constant Const_string("@ ",(src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost,None)
                                                                                                                                                expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                                  Texp_constant Const_int 1
                                                                                                                                                expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                                  Texp_constant Const_int 0
                                                                                                                                              ]
                                                                                                                                            expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                                                              [
                                                                                                                                                expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                                  Texp_constant Const_string("and",(src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost,None)
                                                                                                                                                expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                                  Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                                                                                  [
                                                                                                                                                    expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                                      Texp_construct "CamlinternalFormatBasics.Break"
                                                                                                                                                      [
                                                                                                                                                        expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                                          Texp_constant Const_string("@ ",(src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost,None)
                                                                                                                                                        expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                                          Texp_constant Const_int 1
                                                                                                                                                        expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                                          Texp_constant Const_int 0
                                                                                                                                                      ]
                                                                                                                                                    expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                                      Texp_construct "CamlinternalFormatBasics.Alpha"
                                                                                                                                                      [
                                                                                                                                                        expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                                          Texp_construct "CamlinternalFormatBasics.Theta"
                                                                                                                                                          [
                                                                                                                                                            expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                                              Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                                                                                                              [
                                                                                                                                                                expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                                                  Texp_constant Const_char 2e
                                                                                                                                                                expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                                                  Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                                                                                                  [
                                                                                                                                                                    expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                                                      Texp_construct "CamlinternalFormatBasics.Close_box"
                                                                                                                                                                      []
                                                                                                                                                                    expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                                                      Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                                                                                                      [
                                                                                                                                                                        expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                                                          Texp_construct "CamlinternalFormatBasics.Force_newline"
                                                                                                                                                                          []
                                                                                                                                                                        expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                                                                                          [
                                                                                                                                                                            expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                                                              Texp_constant Const_string("Did you put it at the wrong level?",(src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost,None)
                                                                                                                                                                            expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                                                                                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                                                                                              []
                                                                                                                                                                          ]
                                                                                                                                                                      ]
                                                                                                                                                                  ]
                                                                                                                                                              ]
                                                                                                                                                          ]
                                                                                                                                                      ]
                                                                                                                                                  ]
                                                                                                                                              ]
                                                                                                                                          ]
                                                                                                                                      ]
                                                                                                                                  ]
                                                                                                                              ]
                                                                                                                          ]
                                                                                                                      ]
                                                                                                                  ]
                                                                                                              ]
                                                                                                          ]
                                                                                                      ]
                                                                                                  ]
                                                                                              ]
                                                                                          ]
                                                                                      ]
                                                                                  ]
                                                                                expression (src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost
                                                                                  Texp_constant Const_string("@[Hint:@ `%s'@ is@ available@ for@ %a@ and@ %a%t.@]@\nDid you put it at the wrong level?",(src/name.ml[301,10206+17]..src/name.ml[302,10280+53]) ghost,None)
                                                                              ]
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/name.ml[302,10280+54]..src/name.ml[302,10280+58])
                                                                              Texp_ident "name/2121"
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/name.ml[303,10339+17]..src/name.ml[304,10409+48])
                                                                              Texp_apply
                                                                              expression (src/name.ml[303,10339+18]..src/name.ml[303,10339+38])
                                                                                Texp_ident "Format/550.pp_print_list"
                                                                              [
                                                                                <arg>
                                                                                  Optional "pp_sep"
                                                                                  expression (src/name.ml[303,10339+55]..src/name.ml[304,10409+47])
                                                                                    Texp_construct "Some"
                                                                                    [
                                                                                      expression (src/name.ml[303,10339+55]..src/name.ml[304,10409+47])
                                                                                        Texp_function
                                                                                        Nolabel
                                                                                        [
                                                                                          <case>
                                                                                            pattern (src/name.ml[303,10339+60]..src/name.ml[303,10339+63])
                                                                                              Tpat_var "ppf/2335"
                                                                                            expression (src/name.ml[303,10339+64]..src/name.ml[304,10409+46]) ghost
                                                                                              Texp_function
                                                                                              Nolabel
                                                                                              [
                                                                                                <case>
                                                                                                  pattern (src/name.ml[303,10339+64]..src/name.ml[303,10339+66])
                                                                                                    Tpat_construct "()"
                                                                                                    []
                                                                                                  expression (src/name.ml[304,10409+22]..src/name.ml[304,10409+46])
                                                                                                    Texp_apply
                                                                                                    expression (src/name.ml[304,10409+22]..src/name.ml[304,10409+36])
                                                                                                      Texp_ident "Format/550.fprintf"
                                                                                                    [
                                                                                                      <arg>
                                                                                                        Nolabel
                                                                                                        expression (src/name.ml[304,10409+37]..src/name.ml[304,10409+40])
                                                                                                          Texp_ident "ppf/2335"
                                                                                                      <arg>
                                                                                                        Nolabel
                                                                                                        expression (src/name.ml[304,10409+41]..src/name.ml[304,10409+46])
                                                                                                          Texp_construct "CamlinternalFormatBasics.Format"
                                                                                                          [
                                                                                                            expression (src/name.ml[304,10409+41]..src/name.ml[304,10409+46]) ghost
                                                                                                              Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                                                              [
                                                                                                                expression (src/name.ml[304,10409+41]..src/name.ml[304,10409+46]) ghost
                                                                                                                  Texp_constant Const_char 2c
                                                                                                                expression (src/name.ml[304,10409+41]..src/name.ml[304,10409+46]) ghost
                                                                                                                  Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                                                  [
                                                                                                                    expression (src/name.ml[304,10409+41]..src/name.ml[304,10409+46]) ghost
                                                                                                                      Texp_construct "CamlinternalFormatBasics.Break"
                                                                                                                      [
                                                                                                                        expression (src/name.ml[304,10409+41]..src/name.ml[304,10409+46]) ghost
                                                                                                                          Texp_constant Const_string("@ ",(src/name.ml[304,10409+41]..src/name.ml[304,10409+46]) ghost,None)
                                                                                                                        expression (src/name.ml[304,10409+41]..src/name.ml[304,10409+46]) ghost
                                                                                                                          Texp_constant Const_int 1
                                                                                                                        expression (src/name.ml[304,10409+41]..src/name.ml[304,10409+46]) ghost
                                                                                                                          Texp_constant Const_int 0
                                                                                                                      ]
                                                                                                                    expression (src/name.ml[304,10409+41]..src/name.ml[304,10409+46]) ghost
                                                                                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                                      []
                                                                                                                  ]
                                                                                                              ]
                                                                                                            expression (src/name.ml[304,10409+41]..src/name.ml[304,10409+46]) ghost
                                                                                                              Texp_constant Const_string(",@ ",(src/name.ml[304,10409+41]..src/name.ml[304,10409+46]) ghost,None)
                                                                                                          ]
                                                                                                    ]
                                                                                              ]
                                                                                        ]
                                                                                    ]
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/name.ml[303,10339+39]..src/name.ml[303,10339+46])
                                                                                    Texp_ident "pp_text/2147"
                                                                              ]
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/name.ml[305,10458+17]..src/name.ml[305,10458+23])
                                                                              Texp_ident "others/2334"
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/name.ml[305,10458+24]..src/name.ml[305,10458+31])
                                                                              Texp_ident "pp_text/2147"
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/name.ml[305,10458+32]..src/name.ml[305,10458+36])
                                                                              Texp_ident "last/2332"
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/name.ml[305,10458+37]..src/name.ml[305,10458+52])
                                                                              Texp_ident "current_context/2314"
                                                                        ]
                                                                    ]
                                                            ]
                                                            []
                                                ]
                                                []
                                      ]
                              ]
                        ]
                  ]
            ]
          structure_item (src/name.ml[307,10514+2]..src/name.ml[323,11314+5])
            Tstr_module
            Error/2696
              module_expr (src/name.ml[307,10514+17]..src/name.ml[323,11314+5])
                Tmod_structure
                [
                  structure_item (src/name.ml[310,10693+4]..src/name.ml[316,11004+20])
                    Tstr_value Nonrec
                    [
                      <def>
                        pattern (src/name.ml[310,10693+8]..src/name.ml[310,10693+15])
                          Tpat_var "createf/2337"
                        expression (src/name.ml[310,10693+16]..src/name.ml[316,11004+20]) ghost
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/name.ml[310,10693+16]..src/name.ml[310,10693+17])
                                Tpat_var "t/2339"
                              expression (src/name.ml[310,10693+18]..src/name.ml[316,11004+20]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/name.ml[310,10693+18]..src/name.ml[310,10693+25])
                                      Tpat_var "context/2340"
                                    expression (src/name.ml[310,10693+26]..src/name.ml[316,11004+20]) ghost
                                      Texp_function
                                      Optional "allowlist"
                                      [
                                        <case>
                                          pattern (src/name.ml[310,10693+27]..src/name.ml[310,10693+36])
                                            Tpat_var "allowlist/2341"
                                          expression (src/name.ml[310,10693+37]..src/name.ml[316,11004+20]) ghost
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (src/name.ml[310,10693+37]..src/name.ml[310,10693+40])
                                                  Tpat_var "fmt/2342"
                                                expression (src/name.ml[310,10693+41]..src/name.ml[316,11004+20]) ghost
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (src/name.ml[310,10693+42]..src/name.ml[310,10693+46])
                                                        Tpat_extra_constraint
                                                        core_type (src/name.ml[310,10693+49]..src/name.ml[310,10693+61])
                                                          Ttyp_constr "Ppxlib__!.Loc.t"
                                                          [
                                                            core_type (src/name.ml[310,10693+49]..src/name.ml[310,10693+55])
                                                              Ttyp_constr "string/17!"
                                                              []
                                                          ]
                                                        pattern (src/name.ml[310,10693+42]..src/name.ml[310,10693+46])
                                                          Tpat_alias "name/2349"
                                                          pattern (src/name.ml[310,10693+42]..src/name.ml[310,10693+46])
                                                            Tpat_any
                                                      expression (src/name.ml[311,10758+6]..src/name.ml[316,11004+20])
                                                        Texp_apply
                                                        expression (src/name.ml[311,10758+6]..src/name.ml[311,10758+21])
                                                          Texp_ident "Stdlib!.Printf.ksprintf"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/name.ml[312,10780+8]..src/name.ml[315,10928+75])
                                                              Texp_function
                                                              Nolabel
                                                              [
                                                                <case>
                                                                  pattern (src/name.ml[312,10780+13]..src/name.ml[312,10780+16])
                                                                    Tpat_var "msg/2350"
                                                                  expression (src/name.ml[313,10800+10]..src/name.ml[315,10928+74])
                                                                    Texp_match
                                                                    expression (src/name.ml[313,10800+16]..src/name.ml[313,10800+56])
                                                                      Texp_apply
                                                                      expression (src/name.ml[313,10800+16]..src/name.ml[313,10800+26])
                                                                        Texp_ident "spellcheck/2114"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/name.ml[313,10800+27]..src/name.ml[313,10800+28])
                                                                            Texp_ident "t/2339"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/name.ml[313,10800+29]..src/name.ml[313,10800+36])
                                                                            Texp_ident "context/2340"
                                                                        <arg>
                                                                          Optional "allowlist"
                                                                          expression (src/name.ml[313,10800+47]..src/name.ml[313,10800+56])
                                                                            Texp_ident "allowlist/2341"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/name.ml[313,10800+37]..src/name.ml[313,10800+45])
                                                                            Texp_field
                                                                            expression (src/name.ml[313,10800+37]..src/name.ml[313,10800+41])
                                                                              Texp_ident "name/2349"
                                                                            "txt"
                                                                      ]
                                                                    [
                                                                      <case>
                                                                        pattern (src/name.ml[314,10862+12]..src/name.ml[314,10862+16])
                                                                          Tpat_value
                                                                          pattern (src/name.ml[314,10862+12]..src/name.ml[314,10862+16])
                                                                            Tpat_construct "None"
                                                                            []
                                                                        expression (src/name.ml[314,10862+20]..src/name.ml[314,10862+65])
                                                                          Texp_apply
                                                                          expression (src/name.ml[314,10862+20]..src/name.ml[314,10862+42])
                                                                            Texp_ident "Ppxlib__!.Location.Error.createf"
                                                                          [
                                                                            <arg>
                                                                              Labelled "loc"
                                                                              expression (src/name.ml[314,10862+48]..src/name.ml[314,10862+56])
                                                                                Texp_field
                                                                                expression (src/name.ml[314,10862+48]..src/name.ml[314,10862+52])
                                                                                  Texp_ident "name/2349"
                                                                                "loc"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/name.ml[314,10862+57]..src/name.ml[314,10862+61])
                                                                                Texp_construct "CamlinternalFormatBasics.Format"
                                                                                [
                                                                                  expression (src/name.ml[314,10862+57]..src/name.ml[314,10862+61]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.String"
                                                                                    [
                                                                                      expression (src/name.ml[314,10862+57]..src/name.ml[314,10862+61]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                        []
                                                                                      expression (src/name.ml[314,10862+57]..src/name.ml[314,10862+61]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                        []
                                                                                    ]
                                                                                  expression (src/name.ml[314,10862+57]..src/name.ml[314,10862+61]) ghost
                                                                                    Texp_constant Const_string("%s",(src/name.ml[314,10862+57]..src/name.ml[314,10862+61]) ghost,None)
                                                                                ]
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/name.ml[314,10862+62]..src/name.ml[314,10862+65])
                                                                                Texp_ident "msg/2350"
                                                                          ]
                                                                      <case>
                                                                        pattern (src/name.ml[315,10928+12]..src/name.ml[315,10928+18])
                                                                          Tpat_value
                                                                          pattern (src/name.ml[315,10928+12]..src/name.ml[315,10928+18])
                                                                            Tpat_construct "Some"
                                                                            [
                                                                              pattern (src/name.ml[315,10928+17]..src/name.ml[315,10928+18])
                                                                                Tpat_var "s/2632"
                                                                            ]
                                                                        expression (src/name.ml[315,10928+22]..src/name.ml[315,10928+74])
                                                                          Texp_apply
                                                                          expression (src/name.ml[315,10928+22]..src/name.ml[315,10928+44])
                                                                            Texp_ident "Ppxlib__!.Location.Error.createf"
                                                                          [
                                                                            <arg>
                                                                              Labelled "loc"
                                                                              expression (src/name.ml[315,10928+50]..src/name.ml[315,10928+58])
                                                                                Texp_field
                                                                                expression (src/name.ml[315,10928+50]..src/name.ml[315,10928+54])
                                                                                  Texp_ident "name/2349"
                                                                                "loc"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/name.ml[315,10928+59]..src/name.ml[315,10928+68])
                                                                                Texp_construct "CamlinternalFormatBasics.Format"
                                                                                [
                                                                                  expression (src/name.ml[315,10928+59]..src/name.ml[315,10928+68]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.String"
                                                                                    [
                                                                                      expression (src/name.ml[315,10928+59]..src/name.ml[315,10928+68]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                        []
                                                                                      expression (src/name.ml[315,10928+59]..src/name.ml[315,10928+68]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                        [
                                                                                          expression (src/name.ml[315,10928+59]..src/name.ml[315,10928+68]) ghost
                                                                                            Texp_constant Const_string(".\n",(src/name.ml[315,10928+59]..src/name.ml[315,10928+68]) ghost,None)
                                                                                          expression (src/name.ml[315,10928+59]..src/name.ml[315,10928+68]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.String"
                                                                                            [
                                                                                              expression (src/name.ml[315,10928+59]..src/name.ml[315,10928+68]) ghost
                                                                                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                []
                                                                                              expression (src/name.ml[315,10928+59]..src/name.ml[315,10928+68]) ghost
                                                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                []
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                  expression (src/name.ml[315,10928+59]..src/name.ml[315,10928+68]) ghost
                                                                                    Texp_constant Const_string("%s.\n%s",(src/name.ml[315,10928+59]..src/name.ml[315,10928+68]) ghost,None)
                                                                                ]
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/name.ml[315,10928+69]..src/name.ml[315,10928+72])
                                                                                Texp_ident "msg/2350"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/name.ml[315,10928+73]..src/name.ml[315,10928+74])
                                                                                Texp_ident "s/2632"
                                                                          ]
                                                                    ]
                                                                    []
                                                              ]
                                                          <arg>
                                                            Nolabel
                                                            expression (src/name.ml[316,11004+8]..src/name.ml[316,11004+11])
                                                              Texp_ident "fmt/2342"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/name.ml[316,11004+12]..src/name.ml[316,11004+20])
                                                              Texp_field
                                                              expression (src/name.ml[316,11004+12]..src/name.ml[316,11004+16])
                                                                Texp_ident "name/2349"
                                                              "txt"
                                                        ]
                                                  ]
                                            ]
                                      ]
                                ]
                          ]
                    ]
                  structure_item (src/name.ml[318,11026+4]..src/name.ml[319,11096+67])
                    Tstr_value Nonrec
                    [
                      <def>
                        pattern (src/name.ml[318,11026+8]..src/name.ml[318,11026+20])
                          Tpat_var "raise_errorf/2681"
                        expression (src/name.ml[318,11026+21]..src/name.ml[319,11096+67]) ghost
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/name.ml[318,11026+21]..src/name.ml[318,11026+22])
                                Tpat_var "t/2683"
                              expression (src/name.ml[318,11026+23]..src/name.ml[319,11096+67]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/name.ml[318,11026+23]..src/name.ml[318,11026+30])
                                      Tpat_var "context/2684"
                                    expression (src/name.ml[318,11026+31]..src/name.ml[319,11096+67]) ghost
                                      Texp_function
                                      Optional "allowlist"
                                      [
                                        <case>
                                          pattern (src/name.ml[318,11026+32]..src/name.ml[318,11026+41])
                                            Tpat_var "allowlist/2685"
                                          expression (src/name.ml[318,11026+42]..src/name.ml[319,11096+67]) ghost
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (src/name.ml[318,11026+42]..src/name.ml[318,11026+45])
                                                  Tpat_var "fmt/2686"
                                                expression (src/name.ml[318,11026+46]..src/name.ml[319,11096+67]) ghost
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (src/name.ml[318,11026+47]..src/name.ml[318,11026+51])
                                                        Tpat_extra_constraint
                                                        core_type (src/name.ml[318,11026+54]..src/name.ml[318,11026+66])
                                                          Ttyp_constr "Ppxlib__!.Loc.t"
                                                          [
                                                            core_type (src/name.ml[318,11026+54]..src/name.ml[318,11026+60])
                                                              Ttyp_constr "string/17!"
                                                              []
                                                          ]
                                                        pattern (src/name.ml[318,11026+47]..src/name.ml[318,11026+51])
                                                          Tpat_alias "name/2687"
                                                          pattern (src/name.ml[318,11026+47]..src/name.ml[318,11026+51])
                                                            Tpat_any
                                                      expression (src/name.ml[319,11096+6]..src/name.ml[319,11096+67])
                                                        Texp_apply
                                                        expression (src/name.ml[319,11096+27]..src/name.ml[319,11096+29])
                                                          Texp_ident "Stdlib!.@@"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/name.ml[319,11096+6]..src/name.ml[319,11096+26])
                                                              Texp_ident "Ppxlib__!.Location.Error.raise"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/name.ml[319,11096+30]..src/name.ml[319,11096+67])
                                                              Texp_apply
                                                              expression (src/name.ml[319,11096+30]..src/name.ml[319,11096+37])
                                                                Texp_ident "createf/2337"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/name.ml[319,11096+38]..src/name.ml[319,11096+39])
                                                                    Texp_ident "t/2683"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/name.ml[319,11096+40]..src/name.ml[319,11096+47])
                                                                    Texp_ident "context/2684"
                                                                <arg>
                                                                  Optional "allowlist"
                                                                  expression (src/name.ml[319,11096+49]..src/name.ml[319,11096+58])
                                                                    Texp_ident "allowlist/2685"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/name.ml[319,11096+59]..src/name.ml[319,11096+62])
                                                                    Texp_ident "fmt/2686"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/name.ml[319,11096+63]..src/name.ml[319,11096+67])
                                                                    Texp_ident "name/2687"
                                                              ]
                                                        ]
                                                  ]
                                            ]
                                      ]
                                ]
                          ]
                    ]
                  structure_item (src/name.ml[321,11165+4]..src/name.ml[322,11239+74])
                    Tstr_value Nonrec
                    [
                      <def>
                        pattern (src/name.ml[321,11165+8]..src/name.ml[321,11165+24])
                          Tpat_var "error_extensionf/2689"
                        expression (src/name.ml[321,11165+25]..src/name.ml[322,11239+74]) ghost
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/name.ml[321,11165+25]..src/name.ml[321,11165+26])
                                Tpat_var "t/2691"
                              expression (src/name.ml[321,11165+27]..src/name.ml[322,11239+74]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/name.ml[321,11165+27]..src/name.ml[321,11165+34])
                                      Tpat_var "context/2692"
                                    expression (src/name.ml[321,11165+35]..src/name.ml[322,11239+74]) ghost
                                      Texp_function
                                      Optional "allowlist"
                                      [
                                        <case>
                                          pattern (src/name.ml[321,11165+36]..src/name.ml[321,11165+45])
                                            Tpat_var "allowlist/2693"
                                          expression (src/name.ml[321,11165+46]..src/name.ml[322,11239+74]) ghost
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (src/name.ml[321,11165+46]..src/name.ml[321,11165+49])
                                                  Tpat_var "fmt/2694"
                                                expression (src/name.ml[321,11165+50]..src/name.ml[322,11239+74]) ghost
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (src/name.ml[321,11165+51]..src/name.ml[321,11165+55])
                                                        Tpat_extra_constraint
                                                        core_type (src/name.ml[321,11165+58]..src/name.ml[321,11165+70])
                                                          Ttyp_constr "Ppxlib__!.Loc.t"
                                                          [
                                                            core_type (src/name.ml[321,11165+58]..src/name.ml[321,11165+64])
                                                              Ttyp_constr "string/17!"
                                                              []
                                                          ]
                                                        pattern (src/name.ml[321,11165+51]..src/name.ml[321,11165+55])
                                                          Tpat_alias "name/2695"
                                                          pattern (src/name.ml[321,11165+51]..src/name.ml[321,11165+55])
                                                            Tpat_any
                                                      expression (src/name.ml[322,11239+6]..src/name.ml[322,11239+74])
                                                        Texp_apply
                                                        expression (src/name.ml[322,11239+34]..src/name.ml[322,11239+36])
                                                          Texp_ident "Stdlib!.@@"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/name.ml[322,11239+6]..src/name.ml[322,11239+33])
                                                              Texp_ident "Ppxlib__!.Location.Error.to_extension"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/name.ml[322,11239+37]..src/name.ml[322,11239+74])
                                                              Texp_apply
                                                              expression (src/name.ml[322,11239+37]..src/name.ml[322,11239+44])
                                                                Texp_ident "createf/2337"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/name.ml[322,11239+45]..src/name.ml[322,11239+46])
                                                                    Texp_ident "t/2691"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/name.ml[322,11239+47]..src/name.ml[322,11239+54])
                                                                    Texp_ident "context/2692"
                                                                <arg>
                                                                  Optional "allowlist"
                                                                  expression (src/name.ml[322,11239+56]..src/name.ml[322,11239+65])
                                                                    Texp_ident "allowlist/2693"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/name.ml[322,11239+66]..src/name.ml[322,11239+69])
                                                                    Texp_ident "fmt/2694"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/name.ml[322,11239+70]..src/name.ml[322,11239+74])
                                                                    Texp_ident "name/2695"
                                                              ]
                                                        ]
                                                  ]
                                            ]
                                      ]
                                ]
                          ]
                    ]
                ]
          structure_item (src/name.ml[325,11321+2]..src/name.ml[325,11321+39])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/name.ml[325,11321+6]..src/name.ml[325,11321+18])
                  Tpat_var "raise_errorf/2697"
                expression (src/name.ml[325,11321+21]..src/name.ml[325,11321+39])
                  Texp_ident "Error/2696.raise_errorf"
            ]
        ]
]

(seq
  (let
    (fold_dot_suffixes/551 =
       (function name/553 acc/554 f/555
         (letrec
           (collapse_after_at/556
              (function param/781
                (if param/781
                  (let
                    (parts/558 =a (field_imm 1 param/781)
                     part/557 =a (field_imm 0 param/781))
                    (if
                      (&&
                        (not
                          (apply
                            (field_imm 28
                              (field_imm 96 (global Ppxlib__Import!)))
                            part/557))
                        (apply
                          (field_imm 7
                            (field_imm 83 (global Ppxlib__Import!)))
                          (string.get part/557 0) '@'))
                      (makeblock 0
                        (apply
                          (field_imm 2
                            (field_imm 96 (global Ppxlib__Import!)))
                          "."
                          (makeblock 0
                            (apply
                              (field_imm 31
                                (field_imm 96 (global Ppxlib__Import!)))
                              part/557 1)
                            parts/558))
                        0)
                      (makeblock 0 part/557
                        (apply collapse_after_at/556 parts/558))))
                  0)))
           (letrec
             (loop/782
                (function acc/783 parts/784
                  (if parts/784
                    (let
                      (parts/786 =a (field_imm 1 parts/784)
                       part/785 =a (field_imm 0 parts/784))
                      (apply loop/782
                        (apply f/555
                          (apply
                            (field_imm 2
                              (field_imm 96 (global Ppxlib__Import!)))
                            "." (makeblock 0 part/785 parts/786))
                          acc/783)
                        parts/786))
                    acc/783)))
             (revapply
               (revapply
                 (apply
                   (field_imm 45 (field_imm 96 (global Ppxlib__Import!)))
                   name/553 '.')
                 collapse_after_at/556)
               (apply loop/782 acc/554))))))
    (setfield_ptr(root-init) 7 (global Ppxlib__Name!) fold_dot_suffixes/551))
  (let
    (dot_suffixes/787 =
       (function name/789
         (apply (field_imm 7 (global Ppxlib__Name!)) name/789 0
           (function x/790 acc/791 (makeblock 0 x/790 acc/791)))))
    (setfield_ptr(root-init) 2 (global Ppxlib__Name!) dot_suffixes/787))
  (let
    (split_path/792 =
       (letrec
         (loop/793
            (function s/795 i/796[int]
              (if
                (apply (field_imm 73 (global Ppxlib__Import!)) i/796
                  (string.length s/795))
                (makeblock 0 s/795 0)
                (let (*match*/10397 = (string.get s/795 i/796))
                  (catch
                    (if (!= *match*/10397 46) (exit 1)
                      (apply after_dot/794 s/795 (+ i/796 1)))
                   with (1) (apply loop/793 s/795 (+ i/796 1))))))
           after_dot/794
             (function s/797 i/798[int]
               (if
                 (apply (field_imm 73 (global Ppxlib__Import!)) i/798
                   (string.length s/797))
                 (makeblock 0 s/797 0)
                 (let (*match*/10398 = (string.get s/797 i/798))
                   (catch
                     (catch
                       (if (>= *match*/10398 65)
                         (if (>= *match*/10398 91) (exit 3) (exit 2))
                         (if (!= *match*/10398 46) (exit 3)
                           (apply after_dot/794 s/797 (+ i/798 1))))
                      with (3) (apply loop/793 s/797 (+ i/798 1)))
                    with (2)
                     (makeblock 0
                       (apply
                         (field_imm 29
                           (field_imm 96 (global Ppxlib__Import!)))
                         s/797 (- i/798 1))
                       (makeblock 0
                         (apply
                           (field_imm 31
                             (field_imm 96 (global Ppxlib__Import!)))
                           s/797 i/798))))))))
         (function s/799 (apply loop/793 s/799 0))))
    (setfield_ptr(root-init) 1 (global Ppxlib__Name!) split_path/792))
  (let
    (make/852 =
       (function name/854
         (makeblock 0 name/854
           (apply
             (field_imm 36
               (field_imm 57 (field_imm 96 (global Ppxlib__Import!))))
             (apply (field_imm 2 (global Ppxlib__Name!)) name/854)))))
    (setfield_ptr(root-init) 9 (global Ppxlib__Name!) make/852))
  (let (name/1187 = (function t/1189 (field_imm 0 t/1189)))
    (setfield_ptr(root-init) 10 (global Ppxlib__Name!) name/1187))
  (let
    (matches/1190 =
       (function t/1192 matched/1193
         (apply
           (field_imm 2
             (field_imm 57 (field_imm 96 (global Ppxlib__Import!))))
           matched/1193 (field_imm 1 t/1192))))
    (setfield_ptr(root-init) 11 (global Ppxlib__Name!) matches/1190))
  0
  (let
    (Pattern/1194 =
       (makeblock 0 (field_imm 9 (global Ppxlib__Name!))
         (field_imm 10 (global Ppxlib__Name!))
         (field_imm 11 (global Ppxlib__Name!))))
    (seq (setfield_ptr(root-init) 0 (global Ppxlib__Name!) Pattern/1194)
      (let
        (split_outer_namespace/1195 =
           (function name/1197
             (let
               (*match*/10400 =
                  (apply
                    (field_imm 37 (field_imm 96 (global Ppxlib__Import!)))
                    name/1197 '.'))
               (if *match*/10400
                 (let
                   (i/1198 =a (field_imm 0 *match*/10400)
                    n/1199 =[int] (string.length name/1197)
                    before_dot/1200 =
                      (apply
                        (field_imm 6 (field_imm 96 (global Ppxlib__Import!)))
                        name/1197 0 i/1198)
                    after_dot/1201 =
                      (apply
                        (field_imm 6 (field_imm 96 (global Ppxlib__Import!)))
                        name/1197 (+ i/1198 1) (- (- n/1199 i/1198) 1)))
                   (makeblock 0 (makeblock 0 before_dot/1200 after_dot/1201)))
                 0))))
        (setfield_ptr(root-init) 8 (global Ppxlib__Name!)
          split_outer_namespace/1195))
      (let
        (create_set/1202 =
           (function fully_qualified_names/1204
             (apply (field_imm 16 (field_imm 91 (global Ppxlib__Import!)))
               (function acc/1278 name/1279
                 (apply (field_imm 7 (global Ppxlib__Name!)) name/1279
                   acc/1278
                   (function x/1280 acc/1281
                     (apply
                       (field_imm 3
                         (field_imm 57
                           (field_imm 96 (global Ppxlib__Import!))))
                       x/1280 acc/1281))))
               (field_imm 0
                 (field_imm 57 (field_imm 96 (global Ppxlib__Import!))))
               fully_qualified_names/1204)))
        (setfield_ptr(root-init) 12 (global Ppxlib__Name!) create_set/1202))
      (let
        (attributes/1282 =
           (apply (field_imm 12 (global Ppxlib__Name!))
             [0:
              "ocaml.alert"
              [0:
               "ocaml.boxed"
               [0:
                "ocaml.deprecated"
                [0:
                 "ocaml.deprecated_mutable"
                 [0:
                  "ocaml.doc"
                  [0:
                   "ocaml.extension_constructor"
                   [0:
                    "ocaml.immediate"
                    [0:
                     "ocaml.immediate64"
                     [0:
                      "ocaml.inline"
                      [0:
                       "ocaml.inlined"
                       [0:
                        "ocaml.local"
                        [0:
                         "ocaml.noalloc"
                         [0:
                          "ocaml.ppwarning"
                          [0:
                           "ocaml.remove_aliases"
                           [0:
                            "ocaml.specialise"
                            [0:
                             "ocaml.specialised"
                             [0:
                              "ocaml.tailcall"
                              [0:
                               "ocaml.text"
                               [0:
                                "ocaml.unboxed"
                                [0:
                                 "ocaml.unroll"
                                 [0:
                                  "ocaml.unrolled"
                                  [0:
                                   "ocaml.untagged"
                                   [0:
                                    "ocaml.warn_on_literal_pattern"
                                    [0:
                                     "ocaml.warnerror"
                                     [0:
                                      "ocaml.warning"
                                      [0:
                                       "ocaml.toplevel_printer"
                                       [0: "toplevel_printer" 0]]]]]]]]]]]]]]]]]]]]]]]]]]]))
        (setfield_ptr(root-init) 13 (global Ppxlib__Name!) attributes/1282))
      (let
        (extensions/1283 =
           (apply (field_imm 12 (global Ppxlib__Name!))
             [0: "ocaml.error" [0: "ocaml.extension_constructor" 0]]))
        (setfield_ptr(root-init) 14 (global Ppxlib__Name!) extensions/1283))
      (let
        (is_allowlisted/1284 =
           (function kind/1286 name/1287
             (if (>= kind/1286 482562044)
               (apply
                 (field_imm 2
                   (field_imm 57 (field_imm 96 (global Ppxlib__Import!))))
                 name/1287 (field_imm 13 (global Ppxlib__Name!)))
               (apply
                 (field_imm 2
                   (field_imm 57 (field_imm 96 (global Ppxlib__Import!))))
                 name/1287 (field_imm 14 (global Ppxlib__Name!))))))
        (setfield_ptr(root-init) 15 (global Ppxlib__Name!)
          is_allowlisted/1284))
      (let
        (get_attribute_list/1288 =
           (function param/1290
             (apply
               (field_imm 22
                 (field_imm 57 (field_imm 96 (global Ppxlib__Import!))))
               (field_imm 13 (global Ppxlib__Name!)))))
        (setfield_ptr(root-init) 16 (global Ppxlib__Name!)
          get_attribute_list/1288))
      (let
        (get_extension_list/1291 =
           (function param/1293
             (apply
               (field_imm 22
                 (field_imm 57 (field_imm 96 (global Ppxlib__Import!))))
               (field_imm 14 (global Ppxlib__Name!)))))
        (setfield_ptr(root-init) 17 (global Ppxlib__Name!)
          get_extension_list/1291))
      0
      (let
        (Allowlisted/1294 =
           (makeblock 0 (field_imm 12 (global Ppxlib__Name!))
             (field_imm 13 (global Ppxlib__Name!))
             (field_imm 14 (global Ppxlib__Name!))
             (field_imm 15 (global Ppxlib__Name!))
             (field_imm 16 (global Ppxlib__Name!))
             (field_imm 17 (global Ppxlib__Name!))))
        (seq
          (setfield_ptr(root-init) 4 (global Ppxlib__Name!)
            (makeblock 0 (field_mut 4 Allowlisted/1294)
              (field_mut 5 Allowlisted/1294) (field_mut 3 Allowlisted/1294)))
          (let
            (create_reserved/1628 =
               (function param/1630
                 (apply (field_imm 0 (field_imm 87 (global Ppxlib__Import!)))
                   0 16)))
            (setfield_ptr(root-init) 18 (global Ppxlib__Name!)
              create_reserved/1628))
          (letrec
            (reserve/1631
               (function ns/1632 tbl/1633
                 (let
                   (*match*/10402 =
                      (apply (field_imm 8 (global Ppxlib__Name!)) ns/1632))
                   (if *match*/10402
                     (let
                       (*match*/10403 =a (field_imm 0 *match*/10402)
                        rest_ns/1635 =a (field_imm 1 *match*/10403)
                        outer_ns/1634 =a (field_imm 0 *match*/10403)
                        *match*/10401 =
                          (apply
                            (field_imm 33
                              (field_imm 87 (global Ppxlib__Import!)))
                            tbl/1633 outer_ns/1634
                            (function param/1636
                              (makeblock 0
                                (apply (field_imm 18 (global Ppxlib__Name!))
                                  0)))))
                       (if *match*/10401
                         (let (rest_tbl/1637 =a (field_imm 0 *match*/10401))
                           (apply reserve/1631 rest_ns/1635 rest_tbl/1637))
                         0))
                     (apply
                       (field_imm 31 (field_imm 87 (global Ppxlib__Import!)))
                       tbl/1633 ns/1632 0)))))
            (setfield_ptr(root-init) 19 (global Ppxlib__Name!) reserve/1631))
          (letrec
            (is_in_reserved_namespaces/1638
               (function name/1639 tbl/1640
                 (let
                   (*match*/10409 =
                      (apply (field_imm 8 (global Ppxlib__Name!)) name/1639))
                   (if *match*/10409
                     (let
                       (*match*/10410 =a (field_imm 0 *match*/10409)
                        rest/1642 =a (field_imm 1 *match*/10410)
                        ns/1641 =a (field_imm 0 *match*/10410)
                        *match*/10404 =
                          (apply
                            (field_imm 32
                              (field_imm 87 (global Ppxlib__Import!)))
                            tbl/1640 ns/1641))
                       (if *match*/10404
                         (let (*match*/10405 =a (field_imm 0 *match*/10404))
                           (if *match*/10405
                             (let
                               (rest_tbl/1643 =a (field_imm 0 *match*/10405))
                               (apply is_in_reserved_namespaces/1638
                                 rest/1642 rest_tbl/1643))
                             1))
                         0))
                     (let
                       (*match*/10406 =
                          (apply
                            (field_imm 32
                              (field_imm 87 (global Ppxlib__Import!)))
                            tbl/1640 name/1639))
                       (catch
                         (if *match*/10406
                           (let
                             (*match*/10407 =a (field_imm 0 *match*/10406))
                             (if *match*/10407
                               (let
                                 (*match*/10408 =a
                                    (field_imm 0 *match*/10407))
                                 (exit 4))
                               1))
                           (exit 4))
                        with (4) 0))))))
            (setfield_ptr(root-init) 20 (global Ppxlib__Name!)
              is_in_reserved_namespaces/1638))
          (let (tbl/1644 = (apply (field_imm 18 (global Ppxlib__Name!)) 0))
            (setfield_ptr(root-init) 21 (global Ppxlib__Name!) tbl/1644))
          (let
            (reserve/1645 =
               (function ns/1646
                 (apply (field_imm 19 (global Ppxlib__Name!)) ns/1646
                   (field_imm 21 (global Ppxlib__Name!)))))
            (setfield_ptr(root-init) 22 (global Ppxlib__Name!) reserve/1645))
          (let
            (is_in_reserved_namespaces/1647 =
               (function name/1648
                 (apply (field_imm 20 (global Ppxlib__Name!)) name/1648
                   (field_imm 21 (global Ppxlib__Name!)))))
            (setfield_ptr(root-init) 23 (global Ppxlib__Name!)
              is_in_reserved_namespaces/1647))
          (let
            (*match*/10412 =
               (apply (field_imm 22 (global Ppxlib__Name!)) "merlin"))
            0)
          (let
            (*match*/10414 =
               (apply (field_imm 22 (global Ppxlib__Name!)) "reason"))
            0)
          (let
            (*match*/10416 =
               (apply (field_imm 22 (global Ppxlib__Name!)) "refmt"))
            0)
          (let
            (*match*/10418 =
               (apply (field_imm 22 (global Ppxlib__Name!)) "ns"))
            0)
          (let
            (*match*/10420 =
               (apply (field_imm 22 (global Ppxlib__Name!)) "res"))
            0)
          (let
            (*match*/10422 =
               (apply (field_imm 22 (global Ppxlib__Name!)) "metaocaml"))
            0)
          (let
            (*match*/10424 =
               (apply (field_imm 22 (global Ppxlib__Name!)) "ocamlformat"))
            0)
          (let
            (*match*/10426 =
               (apply (field_imm 22 (global Ppxlib__Name!))
                 "ppxlib.migration"))
            0)
          (let
            (check_not_reserved/1649 =
               (function kind/1651 name/1652
                 (catch
                   (if (>= kind/1651 482562044)
                     (let
                       (list/10430 = (field_imm 1 Allowlisted/1294)
                        kind/10429 = "attribute")
                       (exit 29 kind/10429 list/10430))
                     (let
                       (list/10428 = (field_imm 2 Allowlisted/1294)
                        kind/10427 = "extension")
                       (exit 29 kind/10427 list/10428)))
                  with (29 kind/1653 list/1654)
                   (if
                     (apply
                       (field_imm 2
                         (field_imm 57
                           (field_imm 96 (global Ppxlib__Import!))))
                       name/1652 list/1654)
                     (apply (field_imm 9 (global Stdlib__printf!))
                       (field_imm 1 (global Stdlib!))
                       [0:
                        [11:
                         "Cannot register "
                         [2:
                          0
                          [11:
                           " with name '"
                           [2:
                            0
                            [11:
                             "' as it matches an "
                             [2: 0 [11: " reserved by the compiler" 0]]]]]]]
                        "Cannot register %s with name '%s' as it matches an %s reserved by the compiler"]
                       kind/1653 name/1652 kind/1653)
                     (if
                       (apply (field_imm 23 (global Ppxlib__Name!))
                         name/1652)
                       (apply (field_imm 9 (global Stdlib__printf!))
                         (field_imm 1 (global Stdlib!))
                         [0:
                          [11:
                           "Cannot register "
                           [2:
                            0
                            [11:
                             " with name '"
                             [2:
                              0
                              [11:
                               "' as its namespace is marked as reserved" 0]]]]]
                          "Cannot register %s with name '%s' as its namespace is marked as reserved"]
                         kind/1653 name/1652)
                       0)))))
            (setfield_ptr(root-init) 24 (global Ppxlib__Name!)
              check_not_reserved/1649))
          0
          (let
            (Reserved_namespaces/1688 =
               (makeblock 0 (field_imm 18 (global Ppxlib__Name!))
                 (field_imm 21 (global Ppxlib__Name!))
                 (field_imm 22 (global Ppxlib__Name!))
                 (field_imm 23 (global Ppxlib__Name!))
                 (field_imm 24 (global Ppxlib__Name!))))
            (seq
              (setfield_ptr(root-init) 5 (global Ppxlib__Name!)
                (makeblock 0 (field_mut 2 Reserved_namespaces/1688)
                  (field_mut 3 Reserved_namespaces/1688)))
              (let
                (ignore_checks/1689 =
                   (function name/1691
                     (||
                       (apply (field_imm 3 Reserved_namespaces/1688)
                         name/1691)
                       (apply
                         (field_imm 33
                           (field_imm 96 (global Ppxlib__Import!)))
                         name/1691 "_"))))
                (setfield_ptr(root-init) 6 (global Ppxlib__Name!)
                  ignore_checks/1689))
              (let
                (create/2011 =
                   (function kind/2013 current_file/2014
                     string_of_context/2015
                     (makeblock 0
                       (apply
                         (field_imm 0
                           (field_imm 87 (global Ppxlib__Import!)))
                         0 16)
                       (makeblock 0 current_file/2014 [0: #"src/name.ml" 0])
                       kind/2013 string_of_context/2015)))
                (setfield_ptr(root-init) 25 (global Ppxlib__Name!)
                  create/2011))
              (let
                (get_all_for_context/2016 =
                   (function t/2018 context/2019
                     (apply
                       (field_imm 33 (field_imm 87 (global Ppxlib__Import!)))
                       (field_imm 0 t/2018) context/2019
                       (function param/2020
                         (makemutable 0
                           (field_imm 0
                             (field_imm 56
                               (field_imm 96 (global Ppxlib__Import!)))))))))
                (setfield_ptr(root-init) 26 (global Ppxlib__Name!)
                  get_all_for_context/2016))
              (let
                (check_collisions_local/2021 =
                   (function caller/2023 all_for_context/2024 t/2025
                     context/2026 name/2027
                     (let
                       (*match*/10434 =
                          (apply
                            (field_imm 39
                              (field_imm 56
                                (field_imm 96 (global Ppxlib__Import!))))
                            name/2027 (field_mut 0 all_for_context/2024)))
                       (if *match*/10434
                         (let
                           (e/2028 =a (field_imm 0 *match*/10434)
                            declared_at/2029 =
                              (function param/2086
                                (if param/2086
                                  (let (loc/2078 =a (field_imm 0 param/2086))
                                    (apply
                                      (field_imm 3 (global Stdlib__printf!))
                                      [0:
                                       [11:
                                        " declared at "
                                        [2: 0 [12: ':' [4: 0 0 0 0]]]]
                                       " declared at %s:%d"]
                                      (field_imm 0 loc/2078)
                                      (field_int 1 loc/2078)))
                                  ""))
                            context/2087 =
                              (let
                                (*match*/10433 =
                                   (apply (field_imm 3 t/2025) context/2026))
                                (if *match*/10433
                                  (let
                                    (s/2088 =a (field_imm 0 *match*/10433))
                                    (apply (field_imm 30 (global Stdlib!))
                                      " on "
                                      (apply (field_imm 30 (global Stdlib!))
                                        s/2088 "s")))
                                  "")))
                           (apply (field_imm 9 (global Stdlib__printf!))
                             (field_imm 1 (global Stdlib!))
                             [0:
                              [11:
                               "Some ppx-es tried to register conflicting transformations: "
                               [2:
                                0
                                [11:
                                 " '"
                                 [2:
                                  0
                                  [12:
                                   '\''
                                   [2:
                                    0
                                    [2:
                                     0
                                     [11:
                                      " matches "
                                      [2:
                                       0
                                       [11: " '" [2: 0 [12: '\'' [2: 0 0]]]]]]]]]]]]]
                              "Some ppx-es tried to register conflicting transformations: %s '%s'%s%s matches %s '%s'%s"]
                             (apply
                               (field_imm 42
                                 (field_imm 96 (global Ppxlib__Import!)))
                               (field_imm 2 t/2025))
                             name/2027 context/2087
                             (apply declared_at/2029 caller/2023)
                             (field_imm 2 t/2025) (field_imm 0 e/2028)
                             (apply declared_at/2029 (field_imm 1 e/2028))))
                         0))))
                (setfield_ptr(root-init) 27 (global Ppxlib__Name!)
                  check_collisions_local/2021))
              (let
                (check_collisions/2096 =
                   (function t/2098 context/2099 name/2100
                     (let
                       (caller/2101 =
                          (apply (field_imm 0 (global Ppxlib__Caller_id!))
                            (field_imm 1 t/2098))
                        all_for_context/2102 =
                          (apply (field_imm 26 (global Ppxlib__Name!)) t/2098
                            context/2099))
                       (apply (field_imm 27 (global Ppxlib__Name!))
                         caller/2101 all_for_context/2102 t/2098 context/2099
                         name/2100))))
                (setfield_ptr(root-init) 28 (global Ppxlib__Name!)
                  check_collisions/2096))
              (let
                (register/2103 =
                   (function kind/2105 t/2106 context/2107 name/2108
                     (seq
                       (apply (field_imm 4 Reserved_namespaces/1688)
                         kind/2105 name/2108)
                       (let
                         (caller/2109 =
                            (apply (field_imm 0 (global Ppxlib__Caller_id!))
                              (field_imm 1 t/2106))
                          all/2110 =
                            (apply (field_imm 26 (global Ppxlib__Name!))
                              t/2106 context/2107))
                         (seq
                           (apply (field_imm 27 (global Ppxlib__Name!))
                             caller/2109 all/2110 t/2106 context/2107
                             name/2108)
                           (let
                             (t/2111 = (makeblock 0 name/2108 caller/2109))
                             (setfield_ptr 0 all/2110
                               (apply (field_imm 7 (global Ppxlib__Name!))
                                 name/2108 (field_mut 0 all/2110)
                                 (function name/2112 acc/2113
                                   (apply
                                     (field_imm 3
                                       (field_imm 56
                                         (field_imm 96
                                           (global Ppxlib__Import!))))
                                     name/2112 t/2111 acc/2113))))))))))
                (setfield_ptr(root-init) 29 (global Ppxlib__Name!)
                  register/2103))
              (let
                (spellcheck/2114 =
                   (function t/2116 context/2117 *opt*/2118 name/2121
                     (let
                       (allowlist/2119 =
                          (if *opt*/2118
                            (let (*sth*/2120 =a (field_imm 0 *opt*/2118))
                              *sth*/2120)
                            0)
                        all_for_context/2122 =
                          (apply (field_imm 26 (global Ppxlib__Name!)) t/2116
                            context/2117)
                        all/2123 =
                          (apply
                            (field_imm 12
                              (field_imm 56
                                (field_imm 96 (global Ppxlib__Import!))))
                            (function key/2124 param/2126 acc/2125
                              (makeblock 0 key/2124 acc/2125))
                            (field_mut 0 all_for_context/2122) 0)
                        x/2131 =
                          (apply (field_imm 2 (global Ppxlib__Spellcheck!))
                            (apply (field_imm 97 (global Ppxlib__Import!))
                              all/2123 allowlist/2119)
                            name/2121))
                       (if x/2131
                         (let (*match*/10442 =a (field_imm 0 x/2131)) x/2131)
                         (if
                           (apply
                             (field_imm 2
                               (field_imm 56
                                 (field_imm 96 (global Ppxlib__Import!))))
                             name/2121 (field_mut 0 all_for_context/2122))
                           0
                           (let
                             (other_contexts/2132 =
                                (apply
                                  (field_imm 11
                                    (field_imm 87 (global Ppxlib__Import!)))
                                  (function ctx/2133 all_from_context/2134
                                    acc/2135
                                    (if
                                      (&&
                                        (apply
                                          (field_imm 5
                                            (field_imm 70
                                              (global Ppxlib__Import!)))
                                          context/2117 ctx/2133)
                                        (apply
                                          (field_imm 2
                                            (field_imm 56
                                              (field_imm 96
                                                (global Ppxlib__Import!))))
                                          name/2121
                                          (field_mut 0 all_from_context/2134)))
                                      (let
                                        (*match*/10441 =
                                           (apply (field_imm 3 t/2116)
                                             ctx/2133))
                                        (if *match*/10441
                                          (let
                                            (s/2146 =a
                                               (field_imm 0 *match*/10441))
                                            (makeblock 0
                                              (apply
                                                (field_imm 30
                                                  (global Stdlib!))
                                                s/2146 "s")
                                              acc/2135))
                                          acc/2135))
                                      acc/2135))
                                  (field_imm 0 t/2116) 0)
                              pp_text/2147 =
                                (field_imm 128 (global Stdlib__format!))
                              current_context/2314 =
                                (function ppf/2316
                                  (let
                                    (*match*/10440 =
                                       (apply (field_imm 3 t/2116)
                                         context/2117))
                                    (catch
                                      (if *match*/10440
                                        (let
                                          (s/2317 =a
                                             (field_imm 0 *match*/10440))
                                          (catch
                                            (stringswitch s/2317
                                             case "": (exit 37)
                                             default: (exit 38))
                                           with (38)
                                            (let
                                              (a_or_an/2318 =
                                                 (let
                                                   (*match*/10438 =
                                                      (string.get s/2317 0))
                                                   (catch
                                                     (catch
                                                       (let
                                                         (switcher/10439 =a
                                                            (-97+
                                                              *match*/10438))
                                                         (if
                                                           (isout 24
                                                             switcher/10439)
                                                           (exit 36)
                                                           (switch* switcher/10439
                                                            case int 0:
                                                             (exit 35)
                                                            case int 1:
                                                             (exit 36)
                                                            case int 2:
                                                             (exit 36)
                                                            case int 3:
                                                             (exit 36)
                                                            case int 4:
                                                             (exit 35)
                                                            case int 5:
                                                             (exit 36)
                                                            case int 6:
                                                             (exit 36)
                                                            case int 7:
                                                             (exit 36)
                                                            case int 8:
                                                             (exit 35)
                                                            case int 9:
                                                             (exit 36)
                                                            case int 10:
                                                             (exit 36)
                                                            case int 11:
                                                             (exit 36)
                                                            case int 12:
                                                             (exit 36)
                                                            case int 13:
                                                             (exit 36)
                                                            case int 14:
                                                             (exit 35)
                                                            case int 15:
                                                             (exit 36)
                                                            case int 16:
                                                             (exit 36)
                                                            case int 17:
                                                             (exit 36)
                                                            case int 18:
                                                             (exit 36)
                                                            case int 19:
                                                             (exit 36)
                                                            case int 20:
                                                             (exit 35)
                                                            case int 21:
                                                             (exit 36)
                                                            case int 22:
                                                             (exit 36)
                                                            case int 23:
                                                             (exit 36)
                                                            case int 24:
                                                             (exit 35))))
                                                      with (36) "a")
                                                    with (35) "an")))
                                              (apply
                                                (field_imm 131
                                                  (global Stdlib__format!))
                                                ppf/2316
                                                [0:
                                                 [17:
                                                  [0: "@ " 1 0]
                                                  [11:
                                                   "but"
                                                   [17:
                                                    [0: "@ " 1 0]
                                                    [11:
                                                     "is"
                                                     [17:
                                                      [0: "@ " 1 0]
                                                      [11:
                                                       "used"
                                                       [17:
                                                        [0: "@ " 1 0]
                                                        [11:
                                                         "here"
                                                         [17:
                                                          [0: "@ " 1 0]
                                                          [11:
                                                           "in"
                                                           [17:
                                                            [0: "@ " 1 0]
                                                            [11:
                                                             "the"
                                                             [17:
                                                              [0: "@ " 1 0]
                                                              [11:
                                                               "context"
                                                               [17:
                                                                [0: "@ " 1 0]
                                                                [11:
                                                                 "of"
                                                                 [17:
                                                                  [0:
                                                                   "@ " 1 0]
                                                                  [2:
                                                                   0
                                                                   [17:
                                                                    [0:
                                                                    "@ " 1 0]
                                                                    [15: 0]]]]]]]]]]]]]]]]]]]]
                                                 "@ but@ is@ used@ here@ in@ the@ context@ of@ %s@ %a"]
                                                a_or_an/2318 pp_text/2147
                                                s/2317))))
                                        (exit 37))
                                     with (37) 0)))
                              *match*/10436 =
                                (apply
                                  (field_imm 37
                                    (field_imm 91 (global Ppxlib__Import!)))
                                  (function x/2329 y/2330 : int
                                    (~
                                      (apply
                                        (field_imm 46
                                          (field_imm 96
                                            (global Ppxlib__Import!)))
                                        x/2329 y/2330)))
                                  other_contexts/2132))
                             (if *match*/10436
                               (let (c/2331 =a (field_imm 0 *match*/10436))
                                 (catch
                                   (let
                                     (*match*/10437 =a
                                        (field_imm 1 *match*/10436))
                                     (if *match*/10437 (exit 34)
                                       (makeblock 0
                                         (apply
                                           (field_imm 135
                                             (global Stdlib__format!))
                                           [0:
                                            [18:
                                             [1: [0: 0 ""]]
                                             [11:
                                              "Hint:"
                                              [17:
                                               [0: "@ " 1 0]
                                               [12:
                                                '`'
                                                [2:
                                                 0
                                                 [12:
                                                  '\''
                                                  [17:
                                                   [0: "@ " 1 0]
                                                   [11:
                                                    "is"
                                                    [17:
                                                     [0: "@ " 1 0]
                                                     [11:
                                                      "available"
                                                      [17:
                                                       [0: "@ " 1 0]
                                                       [11:
                                                        "for"
                                                        [17:
                                                         [0: "@ " 1 0]
                                                         [15:
                                                          [16:
                                                           [12:
                                                            '.'
                                                            [17:
                                                             0
                                                             [17:
                                                              3
                                                              [11:
                                                               "Did you put it at the wrong level?"
                                                               0]]]]]]]]]]]]]]]]]]]
                                            "@[Hint:@ `%s'@ is@ available@ for@ %a%t.@]@\nDid you put it at the wrong level?"]
                                           name/2121 pp_text/2147 c/2331
                                           current_context/2314))))
                                  with (34)
                                   (let
                                     (last/2332 =a c/2331
                                      rev_others/2333 =a
                                        (field_imm 1 *match*/10436)
                                      others/2334 =
                                        (apply
                                          (field_imm 8
                                            (field_imm 91
                                              (global Ppxlib__Import!)))
                                          rev_others/2333))
                                     (makeblock 0
                                       (apply
                                         (field_imm 135
                                           (global Stdlib__format!))
                                         [0:
                                          [18:
                                           [1: [0: 0 ""]]
                                           [11:
                                            "Hint:"
                                            [17:
                                             [0: "@ " 1 0]
                                             [12:
                                              '`'
                                              [2:
                                               0
                                               [12:
                                                '\''
                                                [17:
                                                 [0: "@ " 1 0]
                                                 [11:
                                                  "is"
                                                  [17:
                                                   [0: "@ " 1 0]
                                                   [11:
                                                    "available"
                                                    [17:
                                                     [0: "@ " 1 0]
                                                     [11:
                                                      "for"
                                                      [17:
                                                       [0: "@ " 1 0]
                                                       [15:
                                                        [17:
                                                         [0: "@ " 1 0]
                                                         [11:
                                                          "and"
                                                          [17:
                                                           [0: "@ " 1 0]
                                                           [15:
                                                            [16:
                                                             [12:
                                                              '.'
                                                              [17:
                                                               0
                                                               [17:
                                                                3
                                                                [11:
                                                                 "Did you put it at the wrong level?"
                                                                 0]]]]]]]]]]]]]]]]]]]]]]]
                                          "@[Hint:@ `%s'@ is@ available@ for@ %a@ and@ %a%t.@]@\nDid you put it at the wrong level?"]
                                         name/2121
                                         (apply
                                           (field_imm 126
                                             (global Stdlib__format!))
                                           (makeblock 0
                                             (function ppf/2335 param/2336
                                               (apply
                                                 (field_imm 131
                                                   (global Stdlib__format!))
                                                 ppf/2335
                                                 [0:
                                                  [12:
                                                   ',' [17: [0: "@ " 1 0] 0]]
                                                  ",@ "])))
                                           pp_text/2147)
                                         others/2334 pp_text/2147 last/2332
                                         current_context/2314)))))
                               0)))))))
                (setfield_ptr(root-init) 30 (global Ppxlib__Name!)
                  spellcheck/2114))
              (let
                (createf/2337 =
                   (function t/2339 context/2340 allowlist/2341 fmt/2342
                     name/2349
                     (apply (field_imm 9 (global Stdlib__printf!))
                       (function msg/2350
                         (let
                           (*match*/10443 =
                              (apply (field_imm 30 (global Ppxlib__Name!))
                                t/2339 context/2340 allowlist/2341
                                (field_imm 0 name/2349)))
                           (if *match*/10443
                             (let (s/2632 =a (field_imm 0 *match*/10443))
                               (apply
                                 (field_imm 1
                                   (field_imm 12 (global Ppxlib__Location!)))
                                 (field_imm 1 name/2349)
                                 [0: [2: 0 [11: ".\n" [2: 0 0]]] "%s.\n%s"]
                                 msg/2350 s/2632))
                             (apply
                               (field_imm 1
                                 (field_imm 12 (global Ppxlib__Location!)))
                               (field_imm 1 name/2349) [0: [2: 0 0] "%s"]
                               msg/2350))))
                       fmt/2342 (field_imm 0 name/2349))))
                (setfield_ptr(root-init) 32 (global Ppxlib__Name!)
                  createf/2337))
              (let
                (raise_errorf/2681 =
                   (function t/2683 context/2684 allowlist/2685 fmt/2686
                     name/2687
                     (dirapply
                       (field_imm 7
                         (field_imm 12 (global Ppxlib__Location!)))
                       (apply (field_imm 32 (global Ppxlib__Name!)) t/2683
                         context/2684 allowlist/2685 fmt/2686 name/2687))))
                (setfield_ptr(root-init) 33 (global Ppxlib__Name!)
                  raise_errorf/2681))
              (let
                (error_extensionf/2689 =
                   (function t/2691 context/2692 allowlist/2693 fmt/2694
                     name/2695
                     (dirapply
                       (field_imm 6
                         (field_imm 12 (global Ppxlib__Location!)))
                       (apply (field_imm 32 (global Ppxlib__Name!)) t/2691
                         context/2692 allowlist/2693 fmt/2694 name/2695))))
                (setfield_ptr(root-init) 34 (global Ppxlib__Name!)
                  error_extensionf/2689))
              0
              (let
                (Error/2696 =
                   (makeblock 0 (field_imm 32 (global Ppxlib__Name!))
                     (field_imm 33 (global Ppxlib__Name!))
                     (field_imm 34 (global Ppxlib__Name!))))
                (seq
                  (setfield_ptr(root-init) 31 (global Ppxlib__Name!)
                    Error/2696)
                  (let
                    (raise_errorf/2697 =
                       (field_imm 1 (field_imm 31 (global Ppxlib__Name!))))
                    (setfield_ptr(root-init) 35 (global Ppxlib__Name!)
                      raise_errorf/2697))
                  0))
              (let
                (Registrar/2698 =
                   (makeblock 0 (field_imm 25 (global Ppxlib__Name!))
                     (field_imm 26 (global Ppxlib__Name!))
                     (field_imm 27 (global Ppxlib__Name!))
                     (field_imm 28 (global Ppxlib__Name!))
                     (field_imm 29 (global Ppxlib__Name!))
                     (field_imm 30 (global Ppxlib__Name!))
                     (field_imm 31 (global Ppxlib__Name!))
                     (field_imm 35 (global Ppxlib__Name!))))
                (seq
                  (setfield_ptr(root-init) 3 (global Ppxlib__Name!)
                    (makeblock 0 (field_mut 0 Registrar/2698)
                      (field_mut 4 Registrar/2698)
                      (field_mut 3 Registrar/2698)
                      (field_mut 5 Registrar/2698)
                      (field_mut 6 Registrar/2698)
                      (field_mut 7 Registrar/2698)))
                  0)))))))))
(seq
  (let
    (fold_dot_suffixes/551 =
       (function name/553 acc/554 f/555
         (letrec
           (collapse_after_at/556
              (function param/781
                (if param/781
                  (let
                    (parts/558 =a (field_imm 1 param/781)
                     part/557 =a (field_imm 0 param/781))
                    (if
                      (&&
                        (not
                          (apply
                            (field_imm 28
                              (field_imm 96 (global Ppxlib__Import!)))
                            part/557))
                        (apply
                          (field_imm 7
                            (field_imm 83 (global Ppxlib__Import!)))
                          (string.get part/557 0) '@'))
                      (makeblock 0
                        (apply
                          (field_imm 2
                            (field_imm 96 (global Ppxlib__Import!)))
                          "."
                          (makeblock 0
                            (apply
                              (field_imm 31
                                (field_imm 96 (global Ppxlib__Import!)))
                              part/557 1)
                            parts/558))
                        0)
                      (makeblock 0 part/557
                        (apply collapse_after_at/556 parts/558))))
                  0)))
           (letrec
             (loop/782
                (function acc/783 parts/784
                  (if parts/784
                    (let (parts/786 =a (field_imm 1 parts/784))
                      (apply loop/782
                        (apply f/555
                          (apply
                            (field_imm 2
                              (field_imm 96 (global Ppxlib__Import!)))
                            "."
                            (makeblock 0 (field_imm 0 parts/784) parts/786))
                          acc/783)
                        parts/786))
                    acc/783)))
             (apply loop/782 acc/554
               (apply collapse_after_at/556
                 (apply
                   (field_imm 45 (field_imm 96 (global Ppxlib__Import!)))
                   name/553 '.')))))))
    (setfield_ptr(root-init) 7 (global Ppxlib__Name!) fold_dot_suffixes/551))
  (let
    (dot_suffixes/787 =
       (function name/789
         (apply (field_imm 7 (global Ppxlib__Name!)) name/789 0
           (function x/790 acc/791 (makeblock 0 x/790 acc/791)))))
    (setfield_ptr(root-init) 2 (global Ppxlib__Name!) dot_suffixes/787))
  (let
    (split_path/792 =
       (letrec
         (loop/793
            (function s/795 i/796[int]
              (if
                (apply (field_imm 73 (global Ppxlib__Import!)) i/796
                  (string.length s/795))
                (makeblock 0 s/795 0)
                (let (*match*/10397 = (string.get s/795 i/796))
                  (if (!= *match*/10397 46)
                    (apply loop/793 s/795 (+ i/796 1))
                    (apply after_dot/794 s/795 (+ i/796 1))))))
           after_dot/794
             (function s/797 i/798[int]
               (if
                 (apply (field_imm 73 (global Ppxlib__Import!)) i/798
                   (string.length s/797))
                 (makeblock 0 s/797 0)
                 (let (*match*/10398 = (string.get s/797 i/798))
                   (catch
                     (if (>= *match*/10398 65)
                       (if (>= *match*/10398 91) (exit 3)
                         (makeblock 0
                           (apply
                             (field_imm 29
                               (field_imm 96 (global Ppxlib__Import!)))
                             s/797 (- i/798 1))
                           (makeblock 0
                             (apply
                               (field_imm 31
                                 (field_imm 96 (global Ppxlib__Import!)))
                               s/797 i/798))))
                       (if (!= *match*/10398 46) (exit 3)
                         (apply after_dot/794 s/797 (+ i/798 1))))
                    with (3) (apply loop/793 s/797 (+ i/798 1)))))))
         (function s/799 (apply loop/793 s/799 0))))
    (setfield_ptr(root-init) 1 (global Ppxlib__Name!) split_path/792))
  (let
    (make/852 =
       (function name/854
         (makeblock 0 name/854
           (apply
             (field_imm 36
               (field_imm 57 (field_imm 96 (global Ppxlib__Import!))))
             (apply (field_imm 2 (global Ppxlib__Name!)) name/854)))))
    (setfield_ptr(root-init) 9 (global Ppxlib__Name!) make/852))
  (let (name/1187 = (function t/1189 (field_imm 0 t/1189)))
    (setfield_ptr(root-init) 10 (global Ppxlib__Name!) name/1187))
  (let
    (matches/1190 =
       (function t/1192 matched/1193
         (apply
           (field_imm 2
             (field_imm 57 (field_imm 96 (global Ppxlib__Import!))))
           matched/1193 (field_imm 1 t/1192))))
    (setfield_ptr(root-init) 11 (global Ppxlib__Name!) matches/1190))
  0
  (let
    (Pattern/1194 =
       (makeblock 0 (field_imm 9 (global Ppxlib__Name!))
         (field_imm 10 (global Ppxlib__Name!))
         (field_imm 11 (global Ppxlib__Name!))))
    (seq (setfield_ptr(root-init) 0 (global Ppxlib__Name!) Pattern/1194)
      (let
        (split_outer_namespace/1195 =
           (function name/1197
             (let
               (*match*/10400 =
                  (apply
                    (field_imm 37 (field_imm 96 (global Ppxlib__Import!)))
                    name/1197 '.'))
               (if *match*/10400
                 (let
                   (i/1198 =a (field_imm 0 *match*/10400)
                    n/1199 =[int] (string.length name/1197)
                    before_dot/1200 =
                      (apply
                        (field_imm 6 (field_imm 96 (global Ppxlib__Import!)))
                        name/1197 0 i/1198)
                    after_dot/1201 =
                      (apply
                        (field_imm 6 (field_imm 96 (global Ppxlib__Import!)))
                        name/1197 (+ i/1198 1) (- (- n/1199 i/1198) 1)))
                   (makeblock 0 (makeblock 0 before_dot/1200 after_dot/1201)))
                 0))))
        (setfield_ptr(root-init) 8 (global Ppxlib__Name!)
          split_outer_namespace/1195))
      (let
        (create_set/1202 =
           (function fully_qualified_names/1204
             (apply (field_imm 16 (field_imm 91 (global Ppxlib__Import!)))
               (function acc/1278 name/1279
                 (apply (field_imm 7 (global Ppxlib__Name!)) name/1279
                   acc/1278
                   (function x/1280 acc/1281
                     (apply
                       (field_imm 3
                         (field_imm 57
                           (field_imm 96 (global Ppxlib__Import!))))
                       x/1280 acc/1281))))
               (field_imm 0
                 (field_imm 57 (field_imm 96 (global Ppxlib__Import!))))
               fully_qualified_names/1204)))
        (setfield_ptr(root-init) 12 (global Ppxlib__Name!) create_set/1202))
      (let
        (attributes/1282 =
           (apply (field_imm 12 (global Ppxlib__Name!))
             [0:
              "ocaml.alert"
              [0:
               "ocaml.boxed"
               [0:
                "ocaml.deprecated"
                [0:
                 "ocaml.deprecated_mutable"
                 [0:
                  "ocaml.doc"
                  [0:
                   "ocaml.extension_constructor"
                   [0:
                    "ocaml.immediate"
                    [0:
                     "ocaml.immediate64"
                     [0:
                      "ocaml.inline"
                      [0:
                       "ocaml.inlined"
                       [0:
                        "ocaml.local"
                        [0:
                         "ocaml.noalloc"
                         [0:
                          "ocaml.ppwarning"
                          [0:
                           "ocaml.remove_aliases"
                           [0:
                            "ocaml.specialise"
                            [0:
                             "ocaml.specialised"
                             [0:
                              "ocaml.tailcall"
                              [0:
                               "ocaml.text"
                               [0:
                                "ocaml.unboxed"
                                [0:
                                 "ocaml.unroll"
                                 [0:
                                  "ocaml.unrolled"
                                  [0:
                                   "ocaml.untagged"
                                   [0:
                                    "ocaml.warn_on_literal_pattern"
                                    [0:
                                     "ocaml.warnerror"
                                     [0:
                                      "ocaml.warning"
                                      [0:
                                       "ocaml.toplevel_printer"
                                       [0: "toplevel_printer" 0]]]]]]]]]]]]]]]]]]]]]]]]]]]))
        (setfield_ptr(root-init) 13 (global Ppxlib__Name!) attributes/1282))
      (let
        (extensions/1283 =
           (apply (field_imm 12 (global Ppxlib__Name!))
             [0: "ocaml.error" [0: "ocaml.extension_constructor" 0]]))
        (setfield_ptr(root-init) 14 (global Ppxlib__Name!) extensions/1283))
      (let
        (is_allowlisted/1284 =
           (function kind/1286 name/1287
             (if (>= kind/1286 482562044)
               (apply
                 (field_imm 2
                   (field_imm 57 (field_imm 96 (global Ppxlib__Import!))))
                 name/1287 (field_imm 13 (global Ppxlib__Name!)))
               (apply
                 (field_imm 2
                   (field_imm 57 (field_imm 96 (global Ppxlib__Import!))))
                 name/1287 (field_imm 14 (global Ppxlib__Name!))))))
        (setfield_ptr(root-init) 15 (global Ppxlib__Name!)
          is_allowlisted/1284))
      (let
        (get_attribute_list/1288 =
           (function param/1290
             (apply
               (field_imm 22
                 (field_imm 57 (field_imm 96 (global Ppxlib__Import!))))
               (field_imm 13 (global Ppxlib__Name!)))))
        (setfield_ptr(root-init) 16 (global Ppxlib__Name!)
          get_attribute_list/1288))
      (let
        (get_extension_list/1291 =
           (function param/1293
             (apply
               (field_imm 22
                 (field_imm 57 (field_imm 96 (global Ppxlib__Import!))))
               (field_imm 14 (global Ppxlib__Name!)))))
        (setfield_ptr(root-init) 17 (global Ppxlib__Name!)
          get_extension_list/1291))
      0
      (let
        (Allowlisted/1294 =
           (makeblock 0 (field_imm 12 (global Ppxlib__Name!))
             (field_imm 13 (global Ppxlib__Name!))
             (field_imm 14 (global Ppxlib__Name!))
             (field_imm 15 (global Ppxlib__Name!))
             (field_imm 16 (global Ppxlib__Name!))
             (field_imm 17 (global Ppxlib__Name!))))
        (seq
          (setfield_ptr(root-init) 4 (global Ppxlib__Name!)
            (makeblock 0 (field_mut 4 Allowlisted/1294)
              (field_mut 5 Allowlisted/1294) (field_mut 3 Allowlisted/1294)))
          (let
            (create_reserved/1628 =
               (function param/1630
                 (apply (field_imm 0 (field_imm 87 (global Ppxlib__Import!)))
                   0 16)))
            (setfield_ptr(root-init) 18 (global Ppxlib__Name!)
              create_reserved/1628))
          (letrec
            (reserve/1631
               (function ns/1632 tbl/1633
                 (let
                   (*match*/10402 =
                      (apply (field_imm 8 (global Ppxlib__Name!)) ns/1632))
                   (if *match*/10402
                     (let
                       (*match*/10403 =a (field_imm 0 *match*/10402)
                        *match*/10401 =
                          (apply
                            (field_imm 33
                              (field_imm 87 (global Ppxlib__Import!)))
                            tbl/1633 (field_imm 0 *match*/10403)
                            (function param/1636
                              (makeblock 0
                                (apply (field_imm 18 (global Ppxlib__Name!))
                                  0)))))
                       (if *match*/10401
                         (apply reserve/1631 (field_imm 1 *match*/10403)
                           (field_imm 0 *match*/10401))
                         0))
                     (apply
                       (field_imm 31 (field_imm 87 (global Ppxlib__Import!)))
                       tbl/1633 ns/1632 0)))))
            (setfield_ptr(root-init) 19 (global Ppxlib__Name!) reserve/1631))
          (letrec
            (is_in_reserved_namespaces/1638
               (function name/1639 tbl/1640
                 (let
                   (*match*/10409 =
                      (apply (field_imm 8 (global Ppxlib__Name!)) name/1639))
                   (if *match*/10409
                     (let
                       (*match*/10410 =a (field_imm 0 *match*/10409)
                        *match*/10404 =
                          (apply
                            (field_imm 32
                              (field_imm 87 (global Ppxlib__Import!)))
                            tbl/1640 (field_imm 0 *match*/10410)))
                       (if *match*/10404
                         (let (*match*/10405 =a (field_imm 0 *match*/10404))
                           (if *match*/10405
                             (apply is_in_reserved_namespaces/1638
                               (field_imm 1 *match*/10410)
                               (field_imm 0 *match*/10405))
                             1))
                         0))
                     (let
                       (*match*/10406 =
                          (apply
                            (field_imm 32
                              (field_imm 87 (global Ppxlib__Import!)))
                            tbl/1640 name/1639))
                       (catch
                         (if *match*/10406
                           (if (field_imm 0 *match*/10406) (exit 4) 1)
                           (exit 4))
                        with (4) 0))))))
            (setfield_ptr(root-init) 20 (global Ppxlib__Name!)
              is_in_reserved_namespaces/1638))
          (let (tbl/1644 = (apply (field_imm 18 (global Ppxlib__Name!)) 0))
            (setfield_ptr(root-init) 21 (global Ppxlib__Name!) tbl/1644))
          (let
            (reserve/1645 =
               (function ns/1646
                 (apply (field_imm 19 (global Ppxlib__Name!)) ns/1646
                   (field_imm 21 (global Ppxlib__Name!)))))
            (setfield_ptr(root-init) 22 (global Ppxlib__Name!) reserve/1645))
          (let
            (is_in_reserved_namespaces/1647 =
               (function name/1648
                 (apply (field_imm 20 (global Ppxlib__Name!)) name/1648
                   (field_imm 21 (global Ppxlib__Name!)))))
            (setfield_ptr(root-init) 23 (global Ppxlib__Name!)
              is_in_reserved_namespaces/1647))
          (let
            (*match*/10412 =
               (apply (field_imm 22 (global Ppxlib__Name!)) "merlin"))
            0)
          (let
            (*match*/10414 =
               (apply (field_imm 22 (global Ppxlib__Name!)) "reason"))
            0)
          (let
            (*match*/10416 =
               (apply (field_imm 22 (global Ppxlib__Name!)) "refmt"))
            0)
          (let
            (*match*/10418 =
               (apply (field_imm 22 (global Ppxlib__Name!)) "ns"))
            0)
          (let
            (*match*/10420 =
               (apply (field_imm 22 (global Ppxlib__Name!)) "res"))
            0)
          (let
            (*match*/10422 =
               (apply (field_imm 22 (global Ppxlib__Name!)) "metaocaml"))
            0)
          (let
            (*match*/10424 =
               (apply (field_imm 22 (global Ppxlib__Name!)) "ocamlformat"))
            0)
          (let
            (*match*/10426 =
               (apply (field_imm 22 (global Ppxlib__Name!))
                 "ppxlib.migration"))
            0)
          (let
            (check_not_reserved/1649 =
               (function kind/1651 name/1652
                 (catch
                   (if (>= kind/1651 482562044)
                     (let
                       (list/10430 = (field_imm 1 Allowlisted/1294)
                        kind/10429 = "attribute")
                       (exit 29 kind/10429 list/10430))
                     (let
                       (list/10428 = (field_imm 2 Allowlisted/1294)
                        kind/10427 = "extension")
                       (exit 29 kind/10427 list/10428)))
                  with (29 kind/1653 list/1654)
                   (if
                     (apply
                       (field_imm 2
                         (field_imm 57
                           (field_imm 96 (global Ppxlib__Import!))))
                       name/1652 list/1654)
                     (apply (field_imm 9 (global Stdlib__printf!))
                       (field_imm 1 (global Stdlib!))
                       [0:
                        [11:
                         "Cannot register "
                         [2:
                          0
                          [11:
                           " with name '"
                           [2:
                            0
                            [11:
                             "' as it matches an "
                             [2: 0 [11: " reserved by the compiler" 0]]]]]]]
                        "Cannot register %s with name '%s' as it matches an %s reserved by the compiler"]
                       kind/1653 name/1652 kind/1653)
                     (if
                       (apply (field_imm 23 (global Ppxlib__Name!))
                         name/1652)
                       (apply (field_imm 9 (global Stdlib__printf!))
                         (field_imm 1 (global Stdlib!))
                         [0:
                          [11:
                           "Cannot register "
                           [2:
                            0
                            [11:
                             " with name '"
                             [2:
                              0
                              [11:
                               "' as its namespace is marked as reserved" 0]]]]]
                          "Cannot register %s with name '%s' as its namespace is marked as reserved"]
                         kind/1653 name/1652)
                       0)))))
            (setfield_ptr(root-init) 24 (global Ppxlib__Name!)
              check_not_reserved/1649))
          0
          (let
            (Reserved_namespaces/1688 =
               (makeblock 0 (field_imm 18 (global Ppxlib__Name!))
                 (field_imm 21 (global Ppxlib__Name!))
                 (field_imm 22 (global Ppxlib__Name!))
                 (field_imm 23 (global Ppxlib__Name!))
                 (field_imm 24 (global Ppxlib__Name!))))
            (seq
              (setfield_ptr(root-init) 5 (global Ppxlib__Name!)
                (makeblock 0 (field_mut 2 Reserved_namespaces/1688)
                  (field_mut 3 Reserved_namespaces/1688)))
              (let
                (ignore_checks/1689 =
                   (function name/1691
                     (||
                       (apply (field_imm 3 Reserved_namespaces/1688)
                         name/1691)
                       (apply
                         (field_imm 33
                           (field_imm 96 (global Ppxlib__Import!)))
                         name/1691 "_"))))
                (setfield_ptr(root-init) 6 (global Ppxlib__Name!)
                  ignore_checks/1689))
              (let
                (create/2011 =
                   (function kind/2013 current_file/2014
                     string_of_context/2015
                     (makeblock 0
                       (apply
                         (field_imm 0
                           (field_imm 87 (global Ppxlib__Import!)))
                         0 16)
                       (makeblock 0 current_file/2014 [0: #"src/name.ml" 0])
                       kind/2013 string_of_context/2015)))
                (setfield_ptr(root-init) 25 (global Ppxlib__Name!)
                  create/2011))
              (let
                (get_all_for_context/2016 =
                   (function t/2018 context/2019
                     (apply
                       (field_imm 33 (field_imm 87 (global Ppxlib__Import!)))
                       (field_imm 0 t/2018) context/2019
                       (function param/2020
                         (makemutable 0
                           (field_imm 0
                             (field_imm 56
                               (field_imm 96 (global Ppxlib__Import!)))))))))
                (setfield_ptr(root-init) 26 (global Ppxlib__Name!)
                  get_all_for_context/2016))
              (let
                (check_collisions_local/2021 =
                   (function caller/2023 all_for_context/2024 t/2025
                     context/2026 name/2027
                     (let
                       (*match*/10434 =
                          (apply
                            (field_imm 39
                              (field_imm 56
                                (field_imm 96 (global Ppxlib__Import!))))
                            name/2027 (field_mut 0 all_for_context/2024)))
                       (if *match*/10434
                         (let
                           (e/2028 =a (field_imm 0 *match*/10434)
                            declared_at/2029 =
                              (function param/2086
                                (if param/2086
                                  (let (loc/2078 =a (field_imm 0 param/2086))
                                    (apply
                                      (field_imm 3 (global Stdlib__printf!))
                                      [0:
                                       [11:
                                        " declared at "
                                        [2: 0 [12: ':' [4: 0 0 0 0]]]]
                                       " declared at %s:%d"]
                                      (field_imm 0 loc/2078)
                                      (field_int 1 loc/2078)))
                                  ""))
                            context/2087 =
                              (let
                                (*match*/10433 =
                                   (apply (field_imm 3 t/2025) context/2026))
                                (if *match*/10433
                                  (apply (field_imm 30 (global Stdlib!))
                                    " on "
                                    (apply (field_imm 30 (global Stdlib!))
                                      (field_imm 0 *match*/10433) "s"))
                                  "")))
                           (apply (field_imm 9 (global Stdlib__printf!))
                             (field_imm 1 (global Stdlib!))
                             [0:
                              [11:
                               "Some ppx-es tried to register conflicting transformations: "
                               [2:
                                0
                                [11:
                                 " '"
                                 [2:
                                  0
                                  [12:
                                   '\''
                                   [2:
                                    0
                                    [2:
                                     0
                                     [11:
                                      " matches "
                                      [2:
                                       0
                                       [11: " '" [2: 0 [12: '\'' [2: 0 0]]]]]]]]]]]]]
                              "Some ppx-es tried to register conflicting transformations: %s '%s'%s%s matches %s '%s'%s"]
                             (apply
                               (field_imm 42
                                 (field_imm 96 (global Ppxlib__Import!)))
                               (field_imm 2 t/2025))
                             name/2027 context/2087
                             (apply declared_at/2029 caller/2023)
                             (field_imm 2 t/2025) (field_imm 0 e/2028)
                             (apply declared_at/2029 (field_imm 1 e/2028))))
                         0))))
                (setfield_ptr(root-init) 27 (global Ppxlib__Name!)
                  check_collisions_local/2021))
              (let
                (check_collisions/2096 =
                   (function t/2098 context/2099 name/2100
                     (let
                       (caller/2101 =
                          (apply (field_imm 0 (global Ppxlib__Caller_id!))
                            (field_imm 1 t/2098))
                        all_for_context/2102 =
                          (apply (field_imm 26 (global Ppxlib__Name!)) t/2098
                            context/2099))
                       (apply (field_imm 27 (global Ppxlib__Name!))
                         caller/2101 all_for_context/2102 t/2098 context/2099
                         name/2100))))
                (setfield_ptr(root-init) 28 (global Ppxlib__Name!)
                  check_collisions/2096))
              (let
                (register/2103 =
                   (function kind/2105 t/2106 context/2107 name/2108
                     (seq
                       (apply (field_imm 4 Reserved_namespaces/1688)
                         kind/2105 name/2108)
                       (let
                         (caller/2109 =
                            (apply (field_imm 0 (global Ppxlib__Caller_id!))
                              (field_imm 1 t/2106))
                          all/2110 =
                            (apply (field_imm 26 (global Ppxlib__Name!))
                              t/2106 context/2107))
                         (seq
                           (apply (field_imm 27 (global Ppxlib__Name!))
                             caller/2109 all/2110 t/2106 context/2107
                             name/2108)
                           (let
                             (t/2111 = (makeblock 0 name/2108 caller/2109))
                             (setfield_ptr 0 all/2110
                               (apply (field_imm 7 (global Ppxlib__Name!))
                                 name/2108 (field_mut 0 all/2110)
                                 (function name/2112 acc/2113
                                   (apply
                                     (field_imm 3
                                       (field_imm 56
                                         (field_imm 96
                                           (global Ppxlib__Import!))))
                                     name/2112 t/2111 acc/2113))))))))))
                (setfield_ptr(root-init) 29 (global Ppxlib__Name!)
                  register/2103))
              (let
                (spellcheck/2114 =
                   (function t/2116 context/2117 *opt*/2118 name/2121
                     (let
                       (allowlist/2119 =
                          (if *opt*/2118 (field_imm 0 *opt*/2118) 0)
                        all_for_context/2122 =
                          (apply (field_imm 26 (global Ppxlib__Name!)) t/2116
                            context/2117)
                        all/2123 =
                          (apply
                            (field_imm 12
                              (field_imm 56
                                (field_imm 96 (global Ppxlib__Import!))))
                            (function key/2124 param/2126 acc/2125
                              (makeblock 0 key/2124 acc/2125))
                            (field_mut 0 all_for_context/2122) 0)
                        x/2131 =
                          (apply (field_imm 2 (global Ppxlib__Spellcheck!))
                            (apply (field_imm 97 (global Ppxlib__Import!))
                              all/2123 allowlist/2119)
                            name/2121))
                       (if x/2131 x/2131
                         (if
                           (apply
                             (field_imm 2
                               (field_imm 56
                                 (field_imm 96 (global Ppxlib__Import!))))
                             name/2121 (field_mut 0 all_for_context/2122))
                           0
                           (let
                             (other_contexts/2132 =
                                (apply
                                  (field_imm 11
                                    (field_imm 87 (global Ppxlib__Import!)))
                                  (function ctx/2133 all_from_context/2134
                                    acc/2135
                                    (if
                                      (&&
                                        (apply
                                          (field_imm 5
                                            (field_imm 70
                                              (global Ppxlib__Import!)))
                                          context/2117 ctx/2133)
                                        (apply
                                          (field_imm 2
                                            (field_imm 56
                                              (field_imm 96
                                                (global Ppxlib__Import!))))
                                          name/2121
                                          (field_mut 0 all_from_context/2134)))
                                      (let
                                        (*match*/10441 =
                                           (apply (field_imm 3 t/2116)
                                             ctx/2133))
                                        (if *match*/10441
                                          (makeblock 0
                                            (apply
                                              (field_imm 30 (global Stdlib!))
                                              (field_imm 0 *match*/10441)
                                              "s")
                                            acc/2135)
                                          acc/2135))
                                      acc/2135))
                                  (field_imm 0 t/2116) 0)
                              pp_text/2147 =
                                (field_imm 128 (global Stdlib__format!))
                              current_context/2314 =
                                (function ppf/2316
                                  (let
                                    (*match*/10440 =
                                       (apply (field_imm 3 t/2116)
                                         context/2117))
                                    (catch
                                      (if *match*/10440
                                        (let
                                          (s/2317 =a
                                             (field_imm 0 *match*/10440))
                                          (stringswitch s/2317
                                           case "": (exit 37)
                                           default:
                                            (let
                                              (a_or_an/2318 =
                                                 (let
                                                   (*match*/10438 =
                                                      (string.get s/2317 0))
                                                   (catch
                                                     (catch
                                                       (let
                                                         (switcher/10439 =a
                                                            (-97+
                                                              *match*/10438))
                                                         (if
                                                           (isout 24
                                                             switcher/10439)
                                                           (exit 36)
                                                           (switch* switcher/10439
                                                            case int 0:
                                                             (exit 35)
                                                            case int 1:
                                                             (exit 36)
                                                            case int 2:
                                                             (exit 36)
                                                            case int 3:
                                                             (exit 36)
                                                            case int 4:
                                                             (exit 35)
                                                            case int 5:
                                                             (exit 36)
                                                            case int 6:
                                                             (exit 36)
                                                            case int 7:
                                                             (exit 36)
                                                            case int 8:
                                                             (exit 35)
                                                            case int 9:
                                                             (exit 36)
                                                            case int 10:
                                                             (exit 36)
                                                            case int 11:
                                                             (exit 36)
                                                            case int 12:
                                                             (exit 36)
                                                            case int 13:
                                                             (exit 36)
                                                            case int 14:
                                                             (exit 35)
                                                            case int 15:
                                                             (exit 36)
                                                            case int 16:
                                                             (exit 36)
                                                            case int 17:
                                                             (exit 36)
                                                            case int 18:
                                                             (exit 36)
                                                            case int 19:
                                                             (exit 36)
                                                            case int 20:
                                                             (exit 35)
                                                            case int 21:
                                                             (exit 36)
                                                            case int 22:
                                                             (exit 36)
                                                            case int 23:
                                                             (exit 36)
                                                            case int 24:
                                                             (exit 35))))
                                                      with (36) "a")
                                                    with (35) "an")))
                                              (apply
                                                (field_imm 131
                                                  (global Stdlib__format!))
                                                ppf/2316
                                                [0:
                                                 [17:
                                                  [0: "@ " 1 0]
                                                  [11:
                                                   "but"
                                                   [17:
                                                    [0: "@ " 1 0]
                                                    [11:
                                                     "is"
                                                     [17:
                                                      [0: "@ " 1 0]
                                                      [11:
                                                       "used"
                                                       [17:
                                                        [0: "@ " 1 0]
                                                        [11:
                                                         "here"
                                                         [17:
                                                          [0: "@ " 1 0]
                                                          [11:
                                                           "in"
                                                           [17:
                                                            [0: "@ " 1 0]
                                                            [11:
                                                             "the"
                                                             [17:
                                                              [0: "@ " 1 0]
                                                              [11:
                                                               "context"
                                                               [17:
                                                                [0: "@ " 1 0]
                                                                [11:
                                                                 "of"
                                                                 [17:
                                                                  [0:
                                                                   "@ " 1 0]
                                                                  [2:
                                                                   0
                                                                   [17:
                                                                    [0:
                                                                    "@ " 1 0]
                                                                    [15: 0]]]]]]]]]]]]]]]]]]]]
                                                 "@ but@ is@ used@ here@ in@ the@ context@ of@ %s@ %a"]
                                                a_or_an/2318 pp_text/2147
                                                s/2317))))
                                        (exit 37))
                                     with (37) 0)))
                              *match*/10436 =
                                (apply
                                  (field_imm 37
                                    (field_imm 91 (global Ppxlib__Import!)))
                                  (function x/2329 y/2330 : int
                                    (~
                                      (apply
                                        (field_imm 46
                                          (field_imm 96
                                            (global Ppxlib__Import!)))
                                        x/2329 y/2330)))
                                  other_contexts/2132))
                             (if *match*/10436
                               (let (c/2331 =a (field_imm 0 *match*/10436))
                                 (if (field_imm 1 *match*/10436)
                                   (let
                                     (others/2334 =
                                        (apply
                                          (field_imm 8
                                            (field_imm 91
                                              (global Ppxlib__Import!)))
                                          (field_imm 1 *match*/10436)))
                                     (makeblock 0
                                       (apply
                                         (field_imm 135
                                           (global Stdlib__format!))
                                         [0:
                                          [18:
                                           [1: [0: 0 ""]]
                                           [11:
                                            "Hint:"
                                            [17:
                                             [0: "@ " 1 0]
                                             [12:
                                              '`'
                                              [2:
                                               0
                                               [12:
                                                '\''
                                                [17:
                                                 [0: "@ " 1 0]
                                                 [11:
                                                  "is"
                                                  [17:
                                                   [0: "@ " 1 0]
                                                   [11:
                                                    "available"
                                                    [17:
                                                     [0: "@ " 1 0]
                                                     [11:
                                                      "for"
                                                      [17:
                                                       [0: "@ " 1 0]
                                                       [15:
                                                        [17:
                                                         [0: "@ " 1 0]
                                                         [11:
                                                          "and"
                                                          [17:
                                                           [0: "@ " 1 0]
                                                           [15:
                                                            [16:
                                                             [12:
                                                              '.'
                                                              [17:
                                                               0
                                                               [17:
                                                                3
                                                                [11:
                                                                 "Did you put it at the wrong level?"
                                                                 0]]]]]]]]]]]]]]]]]]]]]]]
                                          "@[Hint:@ `%s'@ is@ available@ for@ %a@ and@ %a%t.@]@\nDid you put it at the wrong level?"]
                                         name/2121
                                         (apply
                                           (field_imm 126
                                             (global Stdlib__format!))
                                           (makeblock 0
                                             (function ppf/2335 param/2336
                                               (apply
                                                 (field_imm 131
                                                   (global Stdlib__format!))
                                                 ppf/2335
                                                 [0:
                                                  [12:
                                                   ',' [17: [0: "@ " 1 0] 0]]
                                                  ",@ "])))
                                           pp_text/2147)
                                         others/2334 pp_text/2147 c/2331
                                         current_context/2314)))
                                   (makeblock 0
                                     (apply
                                       (field_imm 135
                                         (global Stdlib__format!))
                                       [0:
                                        [18:
                                         [1: [0: 0 ""]]
                                         [11:
                                          "Hint:"
                                          [17:
                                           [0: "@ " 1 0]
                                           [12:
                                            '`'
                                            [2:
                                             0
                                             [12:
                                              '\''
                                              [17:
                                               [0: "@ " 1 0]
                                               [11:
                                                "is"
                                                [17:
                                                 [0: "@ " 1 0]
                                                 [11:
                                                  "available"
                                                  [17:
                                                   [0: "@ " 1 0]
                                                   [11:
                                                    "for"
                                                    [17:
                                                     [0: "@ " 1 0]
                                                     [15:
                                                      [16:
                                                       [12:
                                                        '.'
                                                        [17:
                                                         0
                                                         [17:
                                                          3
                                                          [11:
                                                           "Did you put it at the wrong level?"
                                                           0]]]]]]]]]]]]]]]]]]]
                                        "@[Hint:@ `%s'@ is@ available@ for@ %a%t.@]@\nDid you put it at the wrong level?"]
                                       name/2121 pp_text/2147 c/2331
                                       current_context/2314))))
                               0)))))))
                (setfield_ptr(root-init) 30 (global Ppxlib__Name!)
                  spellcheck/2114))
              (let
                (createf/2337 =
                   (function t/2339 context/2340 allowlist/2341 fmt/2342
                     name/2349
                     (apply (field_imm 9 (global Stdlib__printf!))
                       (function msg/2350
                         (let
                           (*match*/10443 =
                              (apply (field_imm 30 (global Ppxlib__Name!))
                                t/2339 context/2340 allowlist/2341
                                (field_imm 0 name/2349)))
                           (if *match*/10443
                             (apply
                               (field_imm 1
                                 (field_imm 12 (global Ppxlib__Location!)))
                               (field_imm 1 name/2349)
                               [0: [2: 0 [11: ".\n" [2: 0 0]]] "%s.\n%s"]
                               msg/2350 (field_imm 0 *match*/10443))
                             (apply
                               (field_imm 1
                                 (field_imm 12 (global Ppxlib__Location!)))
                               (field_imm 1 name/2349) [0: [2: 0 0] "%s"]
                               msg/2350))))
                       fmt/2342 (field_imm 0 name/2349))))
                (setfield_ptr(root-init) 32 (global Ppxlib__Name!)
                  createf/2337))
              (let
                (raise_errorf/2681 =
                   (function t/2683 context/2684 allowlist/2685 fmt/2686
                     name/2687
                     (apply
                       (field_imm 7
                         (field_imm 12 (global Ppxlib__Location!)))
                       (apply (field_imm 32 (global Ppxlib__Name!)) t/2683
                         context/2684 allowlist/2685 fmt/2686 name/2687))))
                (setfield_ptr(root-init) 33 (global Ppxlib__Name!)
                  raise_errorf/2681))
              (let
                (error_extensionf/2689 =
                   (function t/2691 context/2692 allowlist/2693 fmt/2694
                     name/2695
                     (apply
                       (field_imm 6
                         (field_imm 12 (global Ppxlib__Location!)))
                       (apply (field_imm 32 (global Ppxlib__Name!)) t/2691
                         context/2692 allowlist/2693 fmt/2694 name/2695))))
                (setfield_ptr(root-init) 34 (global Ppxlib__Name!)
                  error_extensionf/2689))
              0
              (let
                (Error/2696 =
                   (makeblock 0 (field_imm 32 (global Ppxlib__Name!))
                     (field_imm 33 (global Ppxlib__Name!))
                     (field_imm 34 (global Ppxlib__Name!))))
                (seq
                  (setfield_ptr(root-init) 31 (global Ppxlib__Name!)
                    Error/2696)
                  (let
                    (raise_errorf/2697 =
                       (field_imm 1 (field_imm 31 (global Ppxlib__Name!))))
                    (setfield_ptr(root-init) 35 (global Ppxlib__Name!)
                      raise_errorf/2697))
                  0))
              (let
                (Registrar/2698 =
                   (makeblock 0 (field_imm 25 (global Ppxlib__Name!))
                     (field_imm 26 (global Ppxlib__Name!))
                     (field_imm 27 (global Ppxlib__Name!))
                     (field_imm 28 (global Ppxlib__Name!))
                     (field_imm 29 (global Ppxlib__Name!))
                     (field_imm 30 (global Ppxlib__Name!))
                     (field_imm 31 (global Ppxlib__Name!))
                     (field_imm 35 (global Ppxlib__Name!))))
                (seq
                  (setfield_ptr(root-init) 3 (global Ppxlib__Name!)
                    (makeblock 0 (field_mut 0 Registrar/2698)
                      (field_mut 4 Registrar/2698)
                      (field_mut 3 Registrar/2698)
                      (field_mut 5 Registrar/2698)
                      (field_mut 6 Registrar/2698)
                      (field_mut 7 Registrar/2698)))
                  0)))))))))
