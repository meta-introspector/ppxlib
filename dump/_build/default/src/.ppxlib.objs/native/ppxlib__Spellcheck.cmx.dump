[
  structure_item (src/spellcheck.ml[1,0+0]..[1,0+70])
    Pstr_attribute "ocaml.text"
    [
      structure_item (src/spellcheck.ml[1,0+0]..[1,0+70])
        Pstr_eval
        expression (src/spellcheck.ml[1,0+0]..[1,0+70])
          Pexp_constant PConst_string(" Helpers to provide hints to PPX users for typos or spellchecks. ",(src/spellcheck.ml[1,0+0]..[1,0+70]),None)
    ]
  structure_item (src/spellcheck.ml[3,72+0]..[3,72+12])
    Pstr_open Override
    module_expr (src/spellcheck.ml[3,72+6]..[3,72+12])
      Pmod_ident "Import" (src/spellcheck.ml[3,72+6]..[3,72+12])
  structure_item (src/spellcheck.ml[5,86+0]..[5,86+20])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (src/spellcheck.ml[5,86+0]..[5,86+20])
          pext_name = "Cutoff_met"
          pext_kind =
            Pext_decl
              []
              None
  structure_item (src/spellcheck.ml[8,183+0]..[49,1754+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/spellcheck.ml[8,183+4]..[8,183+24])
          Ppat_var "levenshtein_distance" (src/spellcheck.ml[8,183+4]..[8,183+24])
        expression (src/spellcheck.ml[8,183+25]..[49,1754+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/spellcheck.ml[8,183+25]..[8,183+26])
            Ppat_var "s" (src/spellcheck.ml[8,183+25]..[8,183+26])
          expression (src/spellcheck.ml[8,183+27]..[49,1754+12]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/spellcheck.ml[8,183+27]..[8,183+28])
              Ppat_var "t" (src/spellcheck.ml[8,183+27]..[8,183+28])
            expression (src/spellcheck.ml[8,183+29]..[49,1754+12]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/spellcheck.ml[8,183+29]..[8,183+35])
                Ppat_var "cutoff" (src/spellcheck.ml[8,183+29]..[8,183+35])
              expression (src/spellcheck.ml[9,221+2]..[49,1754+12])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/spellcheck.ml[9,221+6]..[9,221+7])
                      Ppat_var "m" (src/spellcheck.ml[9,221+6]..[9,221+7])
                    expression (src/spellcheck.ml[9,221+10]..[9,221+25])
                      Pexp_apply
                      expression (src/spellcheck.ml[9,221+10]..[9,221+23])
                        Pexp_ident "String.length" (src/spellcheck.ml[9,221+10]..[9,221+23])
                      [
                        <arg>
                        Nolabel
                          expression (src/spellcheck.ml[9,221+24]..[9,221+25])
                            Pexp_ident "s" (src/spellcheck.ml[9,221+24]..[9,221+25])
                      ]
                  <def>
                    pattern (src/spellcheck.ml[9,221+30]..[9,221+31])
                      Ppat_var "n" (src/spellcheck.ml[9,221+30]..[9,221+31])
                    expression (src/spellcheck.ml[9,221+34]..[9,221+49])
                      Pexp_apply
                      expression (src/spellcheck.ml[9,221+34]..[9,221+47])
                        Pexp_ident "String.length" (src/spellcheck.ml[9,221+34]..[9,221+47])
                      [
                        <arg>
                        Nolabel
                          expression (src/spellcheck.ml[9,221+48]..[9,221+49])
                            Pexp_ident "t" (src/spellcheck.ml[9,221+48]..[9,221+49])
                      ]
                ]
                expression (src/spellcheck.ml[10,274+2]..[49,1754+12])
                  Pexp_ifthenelse
                  expression (src/spellcheck.ml[10,274+5]..[10,274+40])
                    Pexp_apply
                    expression (src/spellcheck.ml[10,274+16]..[10,274+18])
                      Pexp_ident "||" (src/spellcheck.ml[10,274+16]..[10,274+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/spellcheck.ml[10,274+5]..[10,274+15])
                          Pexp_apply
                          expression (src/spellcheck.ml[10,274+12]..[10,274+13])
                            Pexp_ident "=" (src/spellcheck.ml[10,274+12]..[10,274+13])
                          [
                            <arg>
                            Nolabel
                              expression (src/spellcheck.ml[10,274+5]..[10,274+11])
                                Pexp_ident "cutoff" (src/spellcheck.ml[10,274+5]..[10,274+11])
                            <arg>
                            Nolabel
                              expression (src/spellcheck.ml[10,274+14]..[10,274+15])
                                Pexp_constant PConst_int (0,None)
                          ]
                      <arg>
                      Nolabel
                        expression (src/spellcheck.ml[10,274+19]..[10,274+40])
                          Pexp_apply
                          expression (src/spellcheck.ml[10,274+31]..[10,274+33])
                            Pexp_ident ">=" (src/spellcheck.ml[10,274+31]..[10,274+33])
                          [
                            <arg>
                            Nolabel
                              expression (src/spellcheck.ml[10,274+19]..[10,274+30])
                                Pexp_apply
                                expression (src/spellcheck.ml[10,274+19]..[10,274+22])
                                  Pexp_ident "abs" (src/spellcheck.ml[10,274+19]..[10,274+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/spellcheck.ml[10,274+23]..[10,274+30])
                                      Pexp_apply
                                      expression (src/spellcheck.ml[10,274+26]..[10,274+27])
                                        Pexp_ident "-" (src/spellcheck.ml[10,274+26]..[10,274+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/spellcheck.ml[10,274+24]..[10,274+25])
                                            Pexp_ident "m" (src/spellcheck.ml[10,274+24]..[10,274+25])
                                        <arg>
                                        Nolabel
                                          expression (src/spellcheck.ml[10,274+28]..[10,274+29])
                                            Pexp_ident "n" (src/spellcheck.ml[10,274+28]..[10,274+29])
                                      ]
                                ]
                            <arg>
                            Nolabel
                              expression (src/spellcheck.ml[10,274+34]..[10,274+40])
                                Pexp_ident "cutoff" (src/spellcheck.ml[10,274+34]..[10,274+40])
                          ]
                    ]
                  expression (src/spellcheck.ml[10,274+46]..[10,274+50])
                    Pexp_construct "None" (src/spellcheck.ml[10,274+46]..[10,274+50])
                    None
                  Some
                    expression (src/spellcheck.ml[14,479+4]..[49,1754+12])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/spellcheck.ml[14,479+8]..[14,479+9])
                            Ppat_var "d" (src/spellcheck.ml[14,479+8]..[14,479+9])
                          expression (src/spellcheck.ml[14,479+12]..[14,479+59])
                            Pexp_apply
                            expression (src/spellcheck.ml[14,479+12]..[14,479+29])
                              Pexp_ident "Array.make_matrix" (src/spellcheck.ml[14,479+12]..[14,479+29])
                            [
                              <arg>
                              Labelled "dimx"
                                expression (src/spellcheck.ml[14,479+36]..[14,479+43])
                                  Pexp_apply
                                  expression (src/spellcheck.ml[14,479+39]..[14,479+40])
                                    Pexp_ident "+" (src/spellcheck.ml[14,479+39]..[14,479+40])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/spellcheck.ml[14,479+37]..[14,479+38])
                                        Pexp_ident "m" (src/spellcheck.ml[14,479+37]..[14,479+38])
                                    <arg>
                                    Nolabel
                                      expression (src/spellcheck.ml[14,479+41]..[14,479+42])
                                        Pexp_constant PConst_int (1,None)
                                  ]
                              <arg>
                              Labelled "dimy"
                                expression (src/spellcheck.ml[14,479+50]..[14,479+57])
                                  Pexp_apply
                                  expression (src/spellcheck.ml[14,479+53]..[14,479+54])
                                    Pexp_ident "+" (src/spellcheck.ml[14,479+53]..[14,479+54])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/spellcheck.ml[14,479+51]..[14,479+52])
                                        Pexp_ident "n" (src/spellcheck.ml[14,479+51]..[14,479+52])
                                    <arg>
                                    Nolabel
                                      expression (src/spellcheck.ml[14,479+55]..[14,479+56])
                                        Pexp_constant PConst_int (1,None)
                                  ]
                              <arg>
                              Nolabel
                                expression (src/spellcheck.ml[14,479+58]..[14,479+59])
                                  Pexp_constant PConst_int (0,None)
                            ]
                      ]
                      expression (src/spellcheck.ml[15,542+4]..[49,1754+12])
                        Pexp_sequence
                        expression (src/spellcheck.ml[15,542+4]..[18,656+8])
                          Pexp_for Up
                          pattern (src/spellcheck.ml[15,542+8]..[15,542+9])
                            Ppat_var "i" (src/spellcheck.ml[15,542+8]..[15,542+9])
                          expression (src/spellcheck.ml[15,542+12]..[15,542+13])
                            Pexp_constant PConst_int (0,None)
                          expression (src/spellcheck.ml[15,542+17]..[15,542+18])
                            Pexp_ident "m" (src/spellcheck.ml[15,542+17]..[15,542+18])
                          expression (src/spellcheck.ml[17,635+6]..[17,635+20])
                            Pexp_apply
                            expression (src/spellcheck.ml[17,635+6]..[17,635+20]) ghost
                              Pexp_ident "Array.set" (src/spellcheck.ml[17,635+6]..[17,635+20]) ghost
                            [
                              <arg>
                              Nolabel
                                expression (src/spellcheck.ml[17,635+6]..[17,635+11])
                                  Pexp_apply
                                  expression (src/spellcheck.ml[17,635+6]..[17,635+11]) ghost
                                    Pexp_ident "Array.get" (src/spellcheck.ml[17,635+6]..[17,635+11]) ghost
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/spellcheck.ml[17,635+6]..[17,635+7])
                                        Pexp_ident "d" (src/spellcheck.ml[17,635+6]..[17,635+7])
                                    <arg>
                                    Nolabel
                                      expression (src/spellcheck.ml[17,635+9]..[17,635+10])
                                        Pexp_ident "i" (src/spellcheck.ml[17,635+9]..[17,635+10])
                                  ]
                              <arg>
                              Nolabel
                                expression (src/spellcheck.ml[17,635+13]..[17,635+14])
                                  Pexp_constant PConst_int (0,None)
                              <arg>
                              Nolabel
                                expression (src/spellcheck.ml[17,635+19]..[17,635+20])
                                  Pexp_ident "i" (src/spellcheck.ml[17,635+19]..[17,635+20])
                            ]
                        expression (src/spellcheck.ml[19,666+4]..[49,1754+12])
                          Pexp_sequence
                          expression (src/spellcheck.ml[19,666+4]..[22,780+8])
                            Pexp_for Up
                            pattern (src/spellcheck.ml[19,666+8]..[19,666+9])
                              Ppat_var "j" (src/spellcheck.ml[19,666+8]..[19,666+9])
                            expression (src/spellcheck.ml[19,666+12]..[19,666+13])
                              Pexp_constant PConst_int (0,None)
                            expression (src/spellcheck.ml[19,666+17]..[19,666+18])
                              Pexp_ident "n" (src/spellcheck.ml[19,666+17]..[19,666+18])
                            expression (src/spellcheck.ml[21,759+6]..[21,759+20])
                              Pexp_apply
                              expression (src/spellcheck.ml[21,759+6]..[21,759+20]) ghost
                                Pexp_ident "Array.set" (src/spellcheck.ml[21,759+6]..[21,759+20]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (src/spellcheck.ml[21,759+6]..[21,759+11])
                                    Pexp_apply
                                    expression (src/spellcheck.ml[21,759+6]..[21,759+11]) ghost
                                      Pexp_ident "Array.get" (src/spellcheck.ml[21,759+6]..[21,759+11]) ghost
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/spellcheck.ml[21,759+6]..[21,759+7])
                                          Pexp_ident "d" (src/spellcheck.ml[21,759+6]..[21,759+7])
                                      <arg>
                                      Nolabel
                                        expression (src/spellcheck.ml[21,759+9]..[21,759+10])
                                          Pexp_constant PConst_int (0,None)
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/spellcheck.ml[21,759+13]..[21,759+14])
                                    Pexp_ident "j" (src/spellcheck.ml[21,759+13]..[21,759+14])
                                <arg>
                                Nolabel
                                  expression (src/spellcheck.ml[21,759+19]..[21,759+20])
                                    Pexp_ident "j" (src/spellcheck.ml[21,759+19]..[21,759+20])
                              ]
                          expression (src/spellcheck.ml[25,933+4]..[49,1754+12])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/spellcheck.ml[25,933+8]..[25,933+16])
                                  Ppat_var "line_min" (src/spellcheck.ml[25,933+8]..[25,933+16])
                                expression (src/spellcheck.ml[25,933+19]..[25,933+24])
                                  Pexp_apply
                                  expression (src/spellcheck.ml[25,933+19]..[25,933+22])
                                    Pexp_ident "ref" (src/spellcheck.ml[25,933+19]..[25,933+22])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/spellcheck.ml[25,933+23]..[25,933+24])
                                        Pexp_constant PConst_int (0,None)
                                  ]
                            ]
                            expression (src/spellcheck.ml[26,961+4]..[49,1754+12])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (src/spellcheck.ml[26,961+8]..[26,961+16])
                                    Ppat_var "distance" (src/spellcheck.ml[26,961+8]..[26,961+16])
                                  expression (src/spellcheck.ml[27,980+6]..[47,1717+29])
                                    Pexp_try
                                    expression (src/spellcheck.ml[28,990+8]..[46,1657+59])
                                      Pexp_sequence
                                      expression (src/spellcheck.ml[28,990+8]..[45,1643+12])
                                        Pexp_for Up
                                        pattern (src/spellcheck.ml[28,990+12]..[28,990+13])
                                          Ppat_var "j" (src/spellcheck.ml[28,990+12]..[28,990+13])
                                        expression (src/spellcheck.ml[28,990+16]..[28,990+17])
                                          Pexp_constant PConst_int (1,None)
                                        expression (src/spellcheck.ml[28,990+21]..[28,990+22])
                                          Pexp_ident "n" (src/spellcheck.ml[28,990+21]..[28,990+22])
                                        expression (src/spellcheck.ml[29,1016+10]..[44,1628+14])
                                          Pexp_sequence
                                          expression (src/spellcheck.ml[29,1016+10]..[29,1016+77])
                                            Pexp_ifthenelse
                                            expression (src/spellcheck.ml[29,1016+13]..[29,1016+55])
                                              Pexp_apply
                                              expression (src/spellcheck.ml[29,1016+37]..[29,1016+39])
                                                Pexp_ident "&&" (src/spellcheck.ml[29,1016+37]..[29,1016+39])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/spellcheck.ml[29,1016+13]..[29,1016+36])
                                                    Pexp_apply
                                                    expression (src/spellcheck.ml[29,1016+23]..[29,1016+25])
                                                      Pexp_ident ">=" (src/spellcheck.ml[29,1016+23]..[29,1016+25])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/spellcheck.ml[29,1016+13]..[29,1016+22])
                                                          Pexp_apply
                                                          expression (src/spellcheck.ml[29,1016+13]..[29,1016+14])
                                                            Pexp_ident "!" (src/spellcheck.ml[29,1016+13]..[29,1016+14])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/spellcheck.ml[29,1016+14]..[29,1016+22])
                                                                Pexp_ident "line_min" (src/spellcheck.ml[29,1016+14]..[29,1016+22])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (src/spellcheck.ml[29,1016+26]..[29,1016+36])
                                                          Pexp_apply
                                                          expression (src/spellcheck.ml[29,1016+33]..[29,1016+34])
                                                            Pexp_ident "-" (src/spellcheck.ml[29,1016+33]..[29,1016+34])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/spellcheck.ml[29,1016+26]..[29,1016+32])
                                                                Pexp_ident "cutoff" (src/spellcheck.ml[29,1016+26]..[29,1016+32])
                                                            <arg>
                                                            Nolabel
                                                              expression (src/spellcheck.ml[29,1016+35]..[29,1016+36])
                                                                Pexp_constant PConst_int (1,None)
                                                          ]
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (src/spellcheck.ml[29,1016+40]..[29,1016+55])
                                                    Pexp_apply
                                                    expression (src/spellcheck.ml[29,1016+42]..[29,1016+44])
                                                      Pexp_ident ">=" (src/spellcheck.ml[29,1016+42]..[29,1016+44])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/spellcheck.ml[29,1016+40]..[29,1016+41])
                                                          Pexp_ident "j" (src/spellcheck.ml[29,1016+40]..[29,1016+41])
                                                      <arg>
                                                      Nolabel
                                                        expression (src/spellcheck.ml[29,1016+45]..[29,1016+55])
                                                          Pexp_apply
                                                          expression (src/spellcheck.ml[29,1016+52]..[29,1016+53])
                                                            Pexp_ident "-" (src/spellcheck.ml[29,1016+52]..[29,1016+53])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/spellcheck.ml[29,1016+45]..[29,1016+51])
                                                                Pexp_ident "cutoff" (src/spellcheck.ml[29,1016+45]..[29,1016+51])
                                                            <arg>
                                                            Nolabel
                                                              expression (src/spellcheck.ml[29,1016+54]..[29,1016+55])
                                                                Pexp_constant PConst_int (1,None)
                                                          ]
                                                    ]
                                              ]
                                            expression (src/spellcheck.ml[29,1016+61]..[29,1016+77])
                                              Pexp_apply
                                              expression (src/spellcheck.ml[29,1016+61]..[29,1016+66])
                                                Pexp_ident "raise" (src/spellcheck.ml[29,1016+61]..[29,1016+66])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/spellcheck.ml[29,1016+67]..[29,1016+77])
                                                    Pexp_construct "Cutoff_met" (src/spellcheck.ml[29,1016+67]..[29,1016+77])
                                                    None
                                              ]
                                            None
                                          expression (src/spellcheck.ml[30,1095+10]..[44,1628+14])
                                            Pexp_sequence
                                            expression (src/spellcheck.ml[30,1095+10]..[30,1095+29])
                                              Pexp_apply
                                              expression (src/spellcheck.ml[30,1095+19]..[30,1095+21])
                                                Pexp_ident ":=" (src/spellcheck.ml[30,1095+19]..[30,1095+21])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/spellcheck.ml[30,1095+10]..[30,1095+18])
                                                    Pexp_ident "line_min" (src/spellcheck.ml[30,1095+10]..[30,1095+18])
                                                <arg>
                                                Nolabel
                                                  expression (src/spellcheck.ml[30,1095+22]..[30,1095+29])
                                                    Pexp_apply
                                                    expression (src/spellcheck.ml[30,1095+22]..[30,1095+25])
                                                      Pexp_ident "max" (src/spellcheck.ml[30,1095+22]..[30,1095+25])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/spellcheck.ml[30,1095+26]..[30,1095+27])
                                                          Pexp_ident "m" (src/spellcheck.ml[30,1095+26]..[30,1095+27])
                                                      <arg>
                                                      Nolabel
                                                        expression (src/spellcheck.ml[30,1095+28]..[30,1095+29])
                                                          Pexp_ident "n" (src/spellcheck.ml[30,1095+28]..[30,1095+29])
                                                    ]
                                              ]
                                            expression (src/spellcheck.ml[31,1126+10]..[44,1628+14])
                                              Pexp_for Up
                                              pattern (src/spellcheck.ml[31,1126+14]..[31,1126+15])
                                                Ppat_var "i" (src/spellcheck.ml[31,1126+14]..[31,1126+15])
                                              expression (src/spellcheck.ml[31,1126+18]..[31,1126+19])
                                                Pexp_constant PConst_int (1,None)
                                              expression (src/spellcheck.ml[31,1126+23]..[31,1126+24])
                                                Pexp_ident "m" (src/spellcheck.ml[31,1126+23]..[31,1126+24])
                                              expression (src/spellcheck.ml[32,1154+12]..[43,1584+43])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (src/spellcheck.ml[32,1154+16]..[32,1154+21])
                                                      Ppat_var "value" (src/spellcheck.ml[32,1154+16]..[32,1154+21])
                                                    expression (src/spellcheck.ml[33,1178+14]..[40,1470+66])
                                                      Pexp_ifthenelse
                                                      expression (src/spellcheck.ml[33,1178+17]..[33,1178+47])
                                                        Pexp_apply
                                                        expression (src/spellcheck.ml[33,1178+17]..[33,1178+27])
                                                          Pexp_ident "Char.equal" (src/spellcheck.ml[33,1178+17]..[33,1178+27])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/spellcheck.ml[33,1178+28]..[33,1178+37])
                                                              Pexp_apply
                                                              expression (src/spellcheck.ml[33,1178+28]..[33,1178+37]) ghost
                                                                Pexp_ident "String.get" (src/spellcheck.ml[33,1178+28]..[33,1178+37]) ghost
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/spellcheck.ml[33,1178+28]..[33,1178+29])
                                                                    Pexp_ident "s" (src/spellcheck.ml[33,1178+28]..[33,1178+29])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/spellcheck.ml[33,1178+31]..[33,1178+36])
                                                                    Pexp_apply
                                                                    expression (src/spellcheck.ml[33,1178+33]..[33,1178+34])
                                                                      Pexp_ident "-" (src/spellcheck.ml[33,1178+33]..[33,1178+34])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/spellcheck.ml[33,1178+31]..[33,1178+32])
  Pexp_ident "i" (src/spellcheck.ml[33,1178+31]..[33,1178+32])
                                                                      <arg>
                                                                      Nolabel
expression (src/spellcheck.ml[33,1178+35]..[33,1178+36])
  Pexp_constant PConst_int (1,None)
                                                                    ]
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (src/spellcheck.ml[33,1178+38]..[33,1178+47])
                                                              Pexp_apply
                                                              expression (src/spellcheck.ml[33,1178+38]..[33,1178+47]) ghost
                                                                Pexp_ident "String.get" (src/spellcheck.ml[33,1178+38]..[33,1178+47]) ghost
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/spellcheck.ml[33,1178+38]..[33,1178+39])
                                                                    Pexp_ident "t" (src/spellcheck.ml[33,1178+38]..[33,1178+39])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/spellcheck.ml[33,1178+41]..[33,1178+46])
                                                                    Pexp_apply
                                                                    expression (src/spellcheck.ml[33,1178+43]..[33,1178+44])
                                                                      Pexp_ident "-" (src/spellcheck.ml[33,1178+43]..[33,1178+44])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/spellcheck.ml[33,1178+41]..[33,1178+42])
  Pexp_ident "j" (src/spellcheck.ml[33,1178+41]..[33,1178+42])
                                                                      <arg>
                                                                      Nolabel
expression (src/spellcheck.ml[33,1178+45]..[33,1178+46])
  Pexp_constant PConst_int (1,None)
                                                                    ]
                                                              ]
                                                        ]
                                                      expression (src/spellcheck.ml[33,1178+53]..[33,1178+70])
                                                        Pexp_apply
                                                        expression (src/spellcheck.ml[33,1178+53]..[33,1178+70]) ghost
                                                          Pexp_ident "Array.get" (src/spellcheck.ml[33,1178+53]..[33,1178+70]) ghost
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/spellcheck.ml[33,1178+53]..[33,1178+62])
                                                              Pexp_apply
                                                              expression (src/spellcheck.ml[33,1178+53]..[33,1178+62]) ghost
                                                                Pexp_ident "Array.get" (src/spellcheck.ml[33,1178+53]..[33,1178+62]) ghost
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/spellcheck.ml[33,1178+53]..[33,1178+54])
                                                                    Pexp_ident "d" (src/spellcheck.ml[33,1178+53]..[33,1178+54])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/spellcheck.ml[33,1178+56]..[33,1178+61])
                                                                    Pexp_apply
                                                                    expression (src/spellcheck.ml[33,1178+58]..[33,1178+59])
                                                                      Pexp_ident "-" (src/spellcheck.ml[33,1178+58]..[33,1178+59])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/spellcheck.ml[33,1178+56]..[33,1178+57])
  Pexp_ident "i" (src/spellcheck.ml[33,1178+56]..[33,1178+57])
                                                                      <arg>
                                                                      Nolabel
expression (src/spellcheck.ml[33,1178+60]..[33,1178+61])
  Pexp_constant PConst_int (1,None)
                                                                    ]
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (src/spellcheck.ml[33,1178+64]..[33,1178+69])
                                                              Pexp_apply
                                                              expression (src/spellcheck.ml[33,1178+66]..[33,1178+67])
                                                                Pexp_ident "-" (src/spellcheck.ml[33,1178+66]..[33,1178+67])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/spellcheck.ml[33,1178+64]..[33,1178+65])
                                                                    Pexp_ident "j" (src/spellcheck.ml[33,1178+64]..[33,1178+65])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/spellcheck.ml[33,1178+68]..[33,1178+69])
                                                                    Pexp_constant PConst_int (1,None)
                                                              ]
                                                        ]
                                                      Some
                                                        expression (src/spellcheck.ml[36,1312+16]..[40,1470+66])
                                                          Pexp_apply
                                                          expression (src/spellcheck.ml[36,1312+16]..[36,1312+19])
                                                            Pexp_ident "min" (src/spellcheck.ml[36,1312+16]..[36,1312+19])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/spellcheck.ml[37,1332+18]..[37,1332+37])
                                                                Pexp_apply
                                                                expression (src/spellcheck.ml[37,1332+33]..[37,1332+34])
                                                                  Pexp_ident "+" (src/spellcheck.ml[37,1332+33]..[37,1332+34])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/spellcheck.ml[37,1332+19]..[37,1332+32])
                                                                      Pexp_apply
                                                                      expression (src/spellcheck.ml[37,1332+19]..[37,1332+32]) ghost
Pexp_ident "Array.get" (src/spellcheck.ml[37,1332+19]..[37,1332+32]) ghost
                                                                      [
<arg>
Nolabel
  expression (src/spellcheck.ml[37,1332+19]..[37,1332+28])
    Pexp_apply
    expression (src/spellcheck.ml[37,1332+19]..[37,1332+28]) ghost
      Pexp_ident "Array.get" (src/spellcheck.ml[37,1332+19]..[37,1332+28]) ghost
    [
      <arg>
      Nolabel
        expression (src/spellcheck.ml[37,1332+19]..[37,1332+20])
          Pexp_ident "d" (src/spellcheck.ml[37,1332+19]..[37,1332+20])
      <arg>
      Nolabel
        expression (src/spellcheck.ml[37,1332+22]..[37,1332+27])
          Pexp_apply
          expression (src/spellcheck.ml[37,1332+24]..[37,1332+25])
            Pexp_ident "-" (src/spellcheck.ml[37,1332+24]..[37,1332+25])
          [
            <arg>
            Nolabel
              expression (src/spellcheck.ml[37,1332+22]..[37,1332+23])
                Pexp_ident "i" (src/spellcheck.ml[37,1332+22]..[37,1332+23])
            <arg>
            Nolabel
              expression (src/spellcheck.ml[37,1332+26]..[37,1332+27])
                Pexp_constant PConst_int (1,None)
          ]
    ]
<arg>
Nolabel
  expression (src/spellcheck.ml[37,1332+30]..[37,1332+31])
    Pexp_ident "j" (src/spellcheck.ml[37,1332+30]..[37,1332+31])
                                                                      ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/spellcheck.ml[37,1332+35]..[37,1332+36])
                                                                      Pexp_constant PConst_int (1,None)
                                                                ]
                                                            <arg>
                                                            Nolabel
                                                              expression (src/spellcheck.ml[38,1387+18]..[40,1470+66])
                                                                Pexp_apply
                                                                expression (src/spellcheck.ml[38,1387+19]..[38,1387+22])
                                                                  Pexp_ident "min" (src/spellcheck.ml[38,1387+19]..[38,1387+22])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/spellcheck.ml[39,1410+21]..[39,1410+40])
                                                                      Pexp_apply
                                                                      expression (src/spellcheck.ml[39,1410+36]..[39,1410+37])
Pexp_ident "+" (src/spellcheck.ml[39,1410+36]..[39,1410+37])
                                                                      [
<arg>
Nolabel
  expression (src/spellcheck.ml[39,1410+22]..[39,1410+35])
    Pexp_apply
    expression (src/spellcheck.ml[39,1410+22]..[39,1410+35]) ghost
      Pexp_ident "Array.get" (src/spellcheck.ml[39,1410+22]..[39,1410+35]) ghost
    [
      <arg>
      Nolabel
        expression (src/spellcheck.ml[39,1410+22]..[39,1410+27])
          Pexp_apply
          expression (src/spellcheck.ml[39,1410+22]..[39,1410+27]) ghost
            Pexp_ident "Array.get" (src/spellcheck.ml[39,1410+22]..[39,1410+27]) ghost
          [
            <arg>
            Nolabel
              expression (src/spellcheck.ml[39,1410+22]..[39,1410+23])
                Pexp_ident "d" (src/spellcheck.ml[39,1410+22]..[39,1410+23])
            <arg>
            Nolabel
              expression (src/spellcheck.ml[39,1410+25]..[39,1410+26])
                Pexp_ident "i" (src/spellcheck.ml[39,1410+25]..[39,1410+26])
          ]
      <arg>
      Nolabel
        expression (src/spellcheck.ml[39,1410+29]..[39,1410+34])
          Pexp_apply
          expression (src/spellcheck.ml[39,1410+31]..[39,1410+32])
            Pexp_ident "-" (src/spellcheck.ml[39,1410+31]..[39,1410+32])
          [
            <arg>
            Nolabel
              expression (src/spellcheck.ml[39,1410+29]..[39,1410+30])
                Pexp_ident "j" (src/spellcheck.ml[39,1410+29]..[39,1410+30])
            <arg>
            Nolabel
              expression (src/spellcheck.ml[39,1410+33]..[39,1410+34])
                Pexp_constant PConst_int (1,None)
          ]
    ]
<arg>
Nolabel
  expression (src/spellcheck.ml[39,1410+38]..[39,1410+39])
    Pexp_constant PConst_int (1,None)
                                                                      ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/spellcheck.ml[40,1470+21]..[40,1470+44])
                                                                      Pexp_apply
                                                                      expression (src/spellcheck.ml[40,1470+40]..[40,1470+41])
Pexp_ident "+" (src/spellcheck.ml[40,1470+40]..[40,1470+41])
                                                                      [
<arg>
Nolabel
  expression (src/spellcheck.ml[40,1470+22]..[40,1470+39])
    Pexp_apply
    expression (src/spellcheck.ml[40,1470+22]..[40,1470+39]) ghost
      Pexp_ident "Array.get" (src/spellcheck.ml[40,1470+22]..[40,1470+39]) ghost
    [
      <arg>
      Nolabel
        expression (src/spellcheck.ml[40,1470+22]..[40,1470+31])
          Pexp_apply
          expression (src/spellcheck.ml[40,1470+22]..[40,1470+31]) ghost
            Pexp_ident "Array.get" (src/spellcheck.ml[40,1470+22]..[40,1470+31]) ghost
          [
            <arg>
            Nolabel
              expression (src/spellcheck.ml[40,1470+22]..[40,1470+23])
                Pexp_ident "d" (src/spellcheck.ml[40,1470+22]..[40,1470+23])
            <arg>
            Nolabel
              expression (src/spellcheck.ml[40,1470+25]..[40,1470+30])
                Pexp_apply
                expression (src/spellcheck.ml[40,1470+27]..[40,1470+28])
                  Pexp_ident "-" (src/spellcheck.ml[40,1470+27]..[40,1470+28])
                [
                  <arg>
                  Nolabel
                    expression (src/spellcheck.ml[40,1470+25]..[40,1470+26])
                      Pexp_ident "i" (src/spellcheck.ml[40,1470+25]..[40,1470+26])
                  <arg>
                  Nolabel
                    expression (src/spellcheck.ml[40,1470+29]..[40,1470+30])
                      Pexp_constant PConst_int (1,None)
                ]
          ]
      <arg>
      Nolabel
        expression (src/spellcheck.ml[40,1470+33]..[40,1470+38])
          Pexp_apply
          expression (src/spellcheck.ml[40,1470+35]..[40,1470+36])
            Pexp_ident "-" (src/spellcheck.ml[40,1470+35]..[40,1470+36])
          [
            <arg>
            Nolabel
              expression (src/spellcheck.ml[40,1470+33]..[40,1470+34])
                Pexp_ident "j" (src/spellcheck.ml[40,1470+33]..[40,1470+34])
            <arg>
            Nolabel
              expression (src/spellcheck.ml[40,1470+37]..[40,1470+38])
                Pexp_constant PConst_int (1,None)
          ]
    ]
<arg>
Nolabel
  expression (src/spellcheck.ml[40,1470+42]..[40,1470+43])
    Pexp_constant PConst_int (1,None)
                                                                      ]
                                                                ]
                                                          ]
                                                ]
                                                expression (src/spellcheck.ml[42,1552+12]..[43,1584+43])
                                                  Pexp_sequence
                                                  expression (src/spellcheck.ml[42,1552+12]..[42,1552+30])
                                                    Pexp_apply
                                                    expression (src/spellcheck.ml[42,1552+12]..[42,1552+30]) ghost
                                                      Pexp_ident "Array.set" (src/spellcheck.ml[42,1552+12]..[42,1552+30]) ghost
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/spellcheck.ml[42,1552+12]..[42,1552+17])
                                                          Pexp_apply
                                                          expression (src/spellcheck.ml[42,1552+12]..[42,1552+17]) ghost
                                                            Pexp_ident "Array.get" (src/spellcheck.ml[42,1552+12]..[42,1552+17]) ghost
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/spellcheck.ml[42,1552+12]..[42,1552+13])
                                                                Pexp_ident "d" (src/spellcheck.ml[42,1552+12]..[42,1552+13])
                                                            <arg>
                                                            Nolabel
                                                              expression (src/spellcheck.ml[42,1552+15]..[42,1552+16])
                                                                Pexp_ident "i" (src/spellcheck.ml[42,1552+15]..[42,1552+16])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (src/spellcheck.ml[42,1552+19]..[42,1552+20])
                                                          Pexp_ident "j" (src/spellcheck.ml[42,1552+19]..[42,1552+20])
                                                      <arg>
                                                      Nolabel
                                                        expression (src/spellcheck.ml[42,1552+25]..[42,1552+30])
                                                          Pexp_ident "value" (src/spellcheck.ml[42,1552+25]..[42,1552+30])
                                                    ]
                                                  expression (src/spellcheck.ml[43,1584+12]..[43,1584+43])
                                                    Pexp_apply
                                                    expression (src/spellcheck.ml[43,1584+21]..[43,1584+23])
                                                      Pexp_ident ":=" (src/spellcheck.ml[43,1584+21]..[43,1584+23])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/spellcheck.ml[43,1584+12]..[43,1584+20])
                                                          Pexp_ident "line_min" (src/spellcheck.ml[43,1584+12]..[43,1584+20])
                                                      <arg>
                                                      Nolabel
                                                        expression (src/spellcheck.ml[43,1584+24]..[43,1584+43])
                                                          Pexp_apply
                                                          expression (src/spellcheck.ml[43,1584+24]..[43,1584+27])
                                                            Pexp_ident "min" (src/spellcheck.ml[43,1584+24]..[43,1584+27])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/spellcheck.ml[43,1584+28]..[43,1584+37])
                                                                Pexp_apply
                                                                expression (src/spellcheck.ml[43,1584+28]..[43,1584+29])
                                                                  Pexp_ident "!" (src/spellcheck.ml[43,1584+28]..[43,1584+29])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/spellcheck.ml[43,1584+29]..[43,1584+37])
                                                                      Pexp_ident "line_min" (src/spellcheck.ml[43,1584+29]..[43,1584+37])
                                                                ]
                                                            <arg>
                                                            Nolabel
                                                              expression (src/spellcheck.ml[43,1584+38]..[43,1584+43])
                                                                Pexp_ident "value" (src/spellcheck.ml[43,1584+38]..[43,1584+43])
                                                          ]
                                                    ]
                                      expression (src/spellcheck.ml[46,1657+8]..[46,1657+59])
                                        Pexp_ifthenelse
                                        expression (src/spellcheck.ml[46,1657+11]..[46,1657+29])
                                          Pexp_apply
                                          expression (src/spellcheck.ml[46,1657+21]..[46,1657+22])
                                            Pexp_ident "<" (src/spellcheck.ml[46,1657+21]..[46,1657+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/spellcheck.ml[46,1657+11]..[46,1657+20])
                                                Pexp_apply
                                                expression (src/spellcheck.ml[46,1657+11]..[46,1657+20]) ghost
                                                  Pexp_ident "Array.get" (src/spellcheck.ml[46,1657+11]..[46,1657+20]) ghost
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/spellcheck.ml[46,1657+11]..[46,1657+16])
                                                      Pexp_apply
                                                      expression (src/spellcheck.ml[46,1657+11]..[46,1657+16]) ghost
                                                        Pexp_ident "Array.get" (src/spellcheck.ml[46,1657+11]..[46,1657+16]) ghost
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/spellcheck.ml[46,1657+11]..[46,1657+12])
                                                            Pexp_ident "d" (src/spellcheck.ml[46,1657+11]..[46,1657+12])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/spellcheck.ml[46,1657+14]..[46,1657+15])
                                                            Pexp_ident "m" (src/spellcheck.ml[46,1657+14]..[46,1657+15])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (src/spellcheck.ml[46,1657+18]..[46,1657+19])
                                                      Pexp_ident "n" (src/spellcheck.ml[46,1657+18]..[46,1657+19])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (src/spellcheck.ml[46,1657+23]..[46,1657+29])
                                                Pexp_ident "cutoff" (src/spellcheck.ml[46,1657+23]..[46,1657+29])
                                          ]
                                        expression (src/spellcheck.ml[46,1657+35]..[46,1657+49])
                                          Pexp_construct "Some" (src/spellcheck.ml[46,1657+35]..[46,1657+39])
                                          Some
                                            expression (src/spellcheck.ml[46,1657+40]..[46,1657+49])
                                              Pexp_apply
                                              expression (src/spellcheck.ml[46,1657+40]..[46,1657+49]) ghost
                                                Pexp_ident "Array.get" (src/spellcheck.ml[46,1657+40]..[46,1657+49]) ghost
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/spellcheck.ml[46,1657+40]..[46,1657+45])
                                                    Pexp_apply
                                                    expression (src/spellcheck.ml[46,1657+40]..[46,1657+45]) ghost
                                                      Pexp_ident "Array.get" (src/spellcheck.ml[46,1657+40]..[46,1657+45]) ghost
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/spellcheck.ml[46,1657+40]..[46,1657+41])
                                                          Pexp_ident "d" (src/spellcheck.ml[46,1657+40]..[46,1657+41])
                                                      <arg>
                                                      Nolabel
                                                        expression (src/spellcheck.ml[46,1657+43]..[46,1657+44])
                                                          Pexp_ident "m" (src/spellcheck.ml[46,1657+43]..[46,1657+44])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (src/spellcheck.ml[46,1657+47]..[46,1657+48])
                                                    Pexp_ident "n" (src/spellcheck.ml[46,1657+47]..[46,1657+48])
                                              ]
                                        Some
                                          expression (src/spellcheck.ml[46,1657+55]..[46,1657+59])
                                            Pexp_construct "None" (src/spellcheck.ml[46,1657+55]..[46,1657+59])
                                            None
                                    [
                                      <case>
                                        pattern (src/spellcheck.ml[47,1717+11]..[47,1717+21])
                                          Ppat_construct "Cutoff_met" (src/spellcheck.ml[47,1717+11]..[47,1717+21])
                                          None
                                        expression (src/spellcheck.ml[47,1717+25]..[47,1717+29])
                                          Pexp_construct "None" (src/spellcheck.ml[47,1717+25]..[47,1717+29])
                                          None
                                    ]
                              ]
                              expression (src/spellcheck.ml[49,1754+4]..[49,1754+12])
                                Pexp_ident "distance" (src/spellcheck.ml[49,1754+4]..[49,1754+12])
    ]
  structure_item (src/spellcheck.ml[51,1768+0]..[77,2674+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/spellcheck.ml[51,1768+4]..[51,1768+14])
          Ppat_var "spellcheck" (src/spellcheck.ml[51,1768+4]..[51,1768+14])
        expression (src/spellcheck.ml[51,1768+15]..[77,2674+16]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/spellcheck.ml[51,1768+15]..[51,1768+20])
            Ppat_var "names" (src/spellcheck.ml[51,1768+15]..[51,1768+20])
          expression (src/spellcheck.ml[51,1768+21]..[77,2674+16]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/spellcheck.ml[51,1768+21]..[51,1768+25])
              Ppat_var "name" (src/spellcheck.ml[51,1768+21]..[51,1768+25])
            expression (src/spellcheck.ml[52,1796+2]..[77,2674+16])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/spellcheck.ml[52,1796+6]..[52,1796+12])
                    Ppat_var "cutoff" (src/spellcheck.ml[52,1796+6]..[52,1796+12])
                  expression (src/spellcheck.ml[53,1811+4]..[57,1896+12])
                    Pexp_match
                    expression (src/spellcheck.ml[53,1811+10]..[53,1811+28])
                      Pexp_apply
                      expression (src/spellcheck.ml[53,1811+10]..[53,1811+23])
                        Pexp_ident "String.length" (src/spellcheck.ml[53,1811+10]..[53,1811+23])
                      [
                        <arg>
                        Nolabel
                          expression (src/spellcheck.ml[53,1811+24]..[53,1811+28])
                            Pexp_ident "name" (src/spellcheck.ml[53,1811+24]..[53,1811+28])
                      ]
                    [
                      <case>
                        pattern (src/spellcheck.ml[54,1845+6]..[54,1845+11])
                          Ppat_or
                          pattern (src/spellcheck.ml[54,1845+6]..[54,1845+7])
                            Ppat_constant PConst_int (1,None)
                          pattern (src/spellcheck.ml[54,1845+10]..[54,1845+11])
                            Ppat_constant PConst_int (2,None)
                        expression (src/spellcheck.ml[54,1845+15]..[54,1845+16])
                          Pexp_constant PConst_int (0,None)
                      <case>
                        pattern (src/spellcheck.ml[55,1862+6]..[55,1862+11])
                          Ppat_or
                          pattern (src/spellcheck.ml[55,1862+6]..[55,1862+7])
                            Ppat_constant PConst_int (3,None)
                          pattern (src/spellcheck.ml[55,1862+10]..[55,1862+11])
                            Ppat_constant PConst_int (4,None)
                        expression (src/spellcheck.ml[55,1862+15]..[55,1862+16])
                          Pexp_constant PConst_int (1,None)
                      <case>
                        pattern (src/spellcheck.ml[56,1879+6]..[56,1879+11])
                          Ppat_or
                          pattern (src/spellcheck.ml[56,1879+6]..[56,1879+7])
                            Ppat_constant PConst_int (5,None)
                          pattern (src/spellcheck.ml[56,1879+10]..[56,1879+11])
                            Ppat_constant PConst_int (6,None)
                        expression (src/spellcheck.ml[56,1879+15]..[56,1879+16])
                          Pexp_constant PConst_int (2,None)
                      <case>
                        pattern (src/spellcheck.ml[57,1896+6]..[57,1896+7])
                          Ppat_any
                        expression (src/spellcheck.ml[57,1896+11]..[57,1896+12])
                          Pexp_constant PConst_int (3,None)
                    ]
              ]
              expression (src/spellcheck.ml[59,1914+2]..[77,2674+16])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/spellcheck.ml[59,1914+6]..[59,1914+20])
                      Ppat_tuple
                      [
                        pattern (src/spellcheck.ml[59,1914+6]..[59,1914+7])
                          Ppat_any
                        pattern (src/spellcheck.ml[59,1914+9]..[59,1914+20])
                          Ppat_var "suggestions" (src/spellcheck.ml[59,1914+9]..[59,1914+20])
                      ]
                    expression (src/spellcheck.ml[60,1937+4]..[68,2309+67])
                      Pexp_apply
                      expression (src/spellcheck.ml[60,1937+4]..[60,1937+18])
                        Pexp_ident "List.fold_left" (src/spellcheck.ml[60,1937+4]..[60,1937+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/spellcheck.ml[60,1937+19]..[60,1937+24])
                            Pexp_ident "names" (src/spellcheck.ml[60,1937+19]..[60,1937+24])
                        <arg>
                        Labelled "init"
                          expression (src/spellcheck.ml[60,1937+31]..[60,1937+48])
                            Pexp_tuple
                            [
                              expression (src/spellcheck.ml[60,1937+32]..[60,1937+43])
                                Pexp_ident "Int.max_int" (src/spellcheck.ml[60,1937+32]..[60,1937+43])
                              expression (src/spellcheck.ml[60,1937+45]..[60,1937+47])
                                Pexp_construct "[]" (src/spellcheck.ml[60,1937+45]..[60,1937+47])
                                None
                            ]
                        <arg>
                        Labelled "f"
                          expression (src/spellcheck.ml[61,1986+9]..[68,2309+67])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/spellcheck.ml[61,1986+14]..[61,1986+62])
                              Ppat_alias "acc" (src/spellcheck.ml[61,1986+58]..[61,1986+61])
                              pattern (src/spellcheck.ml[61,1986+15]..[61,1986+54])
                                Ppat_tuple
                                [
                                  pattern (src/spellcheck.ml[61,1986+16]..[61,1986+29])
                                    Ppat_var "best_distance" (src/spellcheck.ml[61,1986+16]..[61,1986+29])
                                  pattern (src/spellcheck.ml[61,1986+31]..[61,1986+53])
                                    Ppat_var "names_at_best_distance" (src/spellcheck.ml[61,1986+31]..[61,1986+53])
                                ]
                            expression (src/spellcheck.ml[61,1986+63]..[68,2309+66]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/spellcheck.ml[61,1986+63]..[61,1986+78])
                                Ppat_var "registered_name" (src/spellcheck.ml[61,1986+63]..[61,1986+78])
                              expression (src/spellcheck.ml[63,2077+8]..[68,2309+66])
                                Pexp_match
                                expression (src/spellcheck.ml[63,2077+14]..[63,2077+62])
                                  Pexp_apply
                                  expression (src/spellcheck.ml[63,2077+14]..[63,2077+34])
                                    Pexp_ident "levenshtein_distance" (src/spellcheck.ml[63,2077+14]..[63,2077+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/spellcheck.ml[63,2077+35]..[63,2077+39])
                                        Pexp_ident "name" (src/spellcheck.ml[63,2077+35]..[63,2077+39])
                                    <arg>
                                    Nolabel
                                      expression (src/spellcheck.ml[63,2077+40]..[63,2077+55])
                                        Pexp_ident "registered_name" (src/spellcheck.ml[63,2077+40]..[63,2077+55])
                                    <arg>
                                    Nolabel
                                      expression (src/spellcheck.ml[63,2077+56]..[63,2077+62])
                                        Pexp_ident "cutoff" (src/spellcheck.ml[63,2077+56]..[63,2077+62])
                                  ]
                                [
                                  <case>
                                    pattern (src/spellcheck.ml[64,2145+10]..[64,2145+14])
                                      Ppat_construct "None" (src/spellcheck.ml[64,2145+10]..[64,2145+14])
                                      None
                                    expression (src/spellcheck.ml[64,2145+18]..[64,2145+21])
                                      Pexp_ident "acc" (src/spellcheck.ml[64,2145+18]..[64,2145+21])
                                  <case>
                                    pattern (src/spellcheck.ml[65,2167+10]..[65,2167+19])
                                      Ppat_construct "Some" (src/spellcheck.ml[65,2167+10]..[65,2167+14])
                                      Some
                                        pattern (src/spellcheck.ml[65,2167+15]..[65,2167+19])
                                          Ppat_var "dist" (src/spellcheck.ml[65,2167+15]..[65,2167+19])
                                    expression (src/spellcheck.ml[66,2190+12]..[68,2309+66])
                                      Pexp_ifthenelse
                                      expression (src/spellcheck.ml[66,2190+15]..[66,2190+35])
                                        Pexp_apply
                                        expression (src/spellcheck.ml[66,2190+20]..[66,2190+21])
                                          Pexp_ident "<" (src/spellcheck.ml[66,2190+20]..[66,2190+21])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/spellcheck.ml[66,2190+15]..[66,2190+19])
                                              Pexp_ident "dist" (src/spellcheck.ml[66,2190+15]..[66,2190+19])
                                          <arg>
                                          Nolabel
                                            expression (src/spellcheck.ml[66,2190+22]..[66,2190+35])
                                              Pexp_ident "best_distance" (src/spellcheck.ml[66,2190+22]..[66,2190+35])
                                        ]
                                      expression (src/spellcheck.ml[66,2190+41]..[66,2190+68])
                                        Pexp_tuple
                                        [
                                          expression (src/spellcheck.ml[66,2190+42]..[66,2190+46])
                                            Pexp_ident "dist" (src/spellcheck.ml[66,2190+42]..[66,2190+46])
                                          expression (src/spellcheck.ml[66,2190+48]..[66,2190+67])
                                            Pexp_construct "::" (src/spellcheck.ml[66,2190+50]..[66,2190+67]) ghost
                                            Some
                                              expression (src/spellcheck.ml[66,2190+50]..[66,2190+67]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (src/spellcheck.ml[66,2190+50]..[66,2190+65])
                                                    Pexp_ident "registered_name" (src/spellcheck.ml[66,2190+50]..[66,2190+65])
                                                  expression (src/spellcheck.ml[66,2190+66]..[66,2190+67]) ghost
                                                    Pexp_construct "[]" (src/spellcheck.ml[66,2190+66]..[66,2190+67]) ghost
                                                    None
                                                ]
                                        ]
                                      Some
                                        expression (src/spellcheck.ml[67,2259+17]..[68,2309+66])
                                          Pexp_ifthenelse
                                          expression (src/spellcheck.ml[67,2259+20]..[67,2259+40])
                                            Pexp_apply
                                            expression (src/spellcheck.ml[67,2259+25]..[67,2259+26])
                                              Pexp_ident ">" (src/spellcheck.ml[67,2259+25]..[67,2259+26])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/spellcheck.ml[67,2259+20]..[67,2259+24])
                                                  Pexp_ident "dist" (src/spellcheck.ml[67,2259+20]..[67,2259+24])
                                              <arg>
                                              Nolabel
                                                expression (src/spellcheck.ml[67,2259+27]..[67,2259+40])
                                                  Pexp_ident "best_distance" (src/spellcheck.ml[67,2259+27]..[67,2259+40])
                                            ]
                                          expression (src/spellcheck.ml[67,2259+46]..[67,2259+49])
                                            Pexp_ident "acc" (src/spellcheck.ml[67,2259+46]..[67,2259+49])
                                          Some
                                            expression (src/spellcheck.ml[68,2309+17]..[68,2309+66])
                                              Pexp_tuple
                                              [
                                                expression (src/spellcheck.ml[68,2309+18]..[68,2309+22])
                                                  Pexp_ident "dist" (src/spellcheck.ml[68,2309+18]..[68,2309+22])
                                                expression (src/spellcheck.ml[68,2309+24]..[68,2309+65])
                                                  Pexp_construct "::" (src/spellcheck.ml[68,2309+40]..[68,2309+42])
                                                  Some
                                                    expression (src/spellcheck.ml[68,2309+24]..[68,2309+65]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (src/spellcheck.ml[68,2309+24]..[68,2309+39])
                                                          Pexp_ident "registered_name" (src/spellcheck.ml[68,2309+24]..[68,2309+39])
                                                        expression (src/spellcheck.ml[68,2309+43]..[68,2309+65])
                                                          Pexp_ident "names_at_best_distance" (src/spellcheck.ml[68,2309+43]..[68,2309+65])
                                                      ]
                                              ]
                                ]
                      ]
                ]
                expression (src/spellcheck.ml[70,2382+2]..[77,2674+16])
                  Pexp_match
                  expression (src/spellcheck.ml[70,2382+8]..[70,2382+67])
                    Pexp_apply
                    expression (src/spellcheck.ml[70,2382+29]..[70,2382+31])
                      Pexp_ident "|>" (src/spellcheck.ml[70,2382+29]..[70,2382+31])
                    [
                      <arg>
                      Nolabel
                        expression (src/spellcheck.ml[70,2382+8]..[70,2382+28])
                          Pexp_apply
                          expression (src/spellcheck.ml[70,2382+8]..[70,2382+16])
                            Pexp_ident "List.rev" (src/spellcheck.ml[70,2382+8]..[70,2382+16])
                          [
                            <arg>
                            Nolabel
                              expression (src/spellcheck.ml[70,2382+17]..[70,2382+28])
                                Pexp_ident "suggestions" (src/spellcheck.ml[70,2382+17]..[70,2382+28])
                          ]
                      <arg>
                      Nolabel
                        expression (src/spellcheck.ml[70,2382+32]..[70,2382+67])
                          Pexp_apply
                          expression (src/spellcheck.ml[70,2382+32]..[70,2382+43])
                            Pexp_ident "List.filter" (src/spellcheck.ml[70,2382+32]..[70,2382+43])
                          [
                            <arg>
                            Labelled "f"
                              expression (src/spellcheck.ml[70,2382+47]..[70,2382+67])
                                Pexp_apply
                                expression (src/spellcheck.ml[70,2382+48]..[70,2382+61])
                                  Pexp_ident "String.<>" (src/spellcheck.ml[70,2382+48]..[70,2382+61])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/spellcheck.ml[70,2382+62]..[70,2382+66])
                                      Pexp_ident "name" (src/spellcheck.ml[70,2382+62]..[70,2382+66])
                                ]
                          ]
                    ]
                  [
                    <case>
                      pattern (src/spellcheck.ml[71,2455+4]..[71,2455+6])
                        Ppat_construct "[]" (src/spellcheck.ml[71,2455+4]..[71,2455+6])
                        None
                      expression (src/spellcheck.ml[71,2455+10]..[71,2455+14])
                        Pexp_construct "None" (src/spellcheck.ml[71,2455+10]..[71,2455+14])
                        None
                    <case>
                      pattern (src/spellcheck.ml[72,2470+4]..[72,2470+20])
                        Ppat_construct "::" (src/spellcheck.ml[72,2470+9]..[72,2470+11])
                        Some
                          pattern (src/spellcheck.ml[72,2470+4]..[72,2470+20]) ghost
                            Ppat_tuple
                            [
                              pattern (src/spellcheck.ml[72,2470+4]..[72,2470+8])
                                Ppat_var "last" (src/spellcheck.ml[72,2470+4]..[72,2470+8])
                              pattern (src/spellcheck.ml[72,2470+12]..[72,2470+20])
                                Ppat_var "rev_rest" (src/spellcheck.ml[72,2470+12]..[72,2470+20])
                            ]
                      expression (src/spellcheck.ml[73,2494+6]..[77,2674+16])
                        Pexp_construct "Some" (src/spellcheck.ml[73,2494+6]..[73,2494+10])
                        Some
                          expression (src/spellcheck.ml[74,2505+8]..[77,2674+16])
                            Pexp_apply
                            expression (src/spellcheck.ml[74,2505+9]..[74,2505+23])
                              Pexp_ident "Printf.sprintf" (src/spellcheck.ml[74,2505+9]..[74,2505+23])
                            [
                              <arg>
                              Nolabel
                                expression (src/spellcheck.ml[74,2505+24]..[74,2505+52])
                                  Pexp_constant PConst_string("Hint: Did you mean %s%s%s?",(src/spellcheck.ml[74,2505+25]..[74,2505+51]),None)
                              <arg>
                              Nolabel
                                expression (src/spellcheck.ml[75,2558+11]..[75,2558+56])
                                  Pexp_apply
                                  expression (src/spellcheck.ml[75,2558+12]..[75,2558+25])
                                    Pexp_ident "String.concat" (src/spellcheck.ml[75,2558+12]..[75,2558+25])
                                  [
                                    <arg>
                                    Labelled "sep"
                                      expression (src/spellcheck.ml[75,2558+31]..[75,2558+35])
                                        Pexp_constant PConst_string(", ",(src/spellcheck.ml[75,2558+32]..[75,2558+34]),None)
                                    <arg>
                                    Nolabel
                                      expression (src/spellcheck.ml[75,2558+36]..[75,2558+55])
                                        Pexp_apply
                                        expression (src/spellcheck.ml[75,2558+37]..[75,2558+45])
                                          Pexp_ident "List.rev" (src/spellcheck.ml[75,2558+37]..[75,2558+45])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/spellcheck.ml[75,2558+46]..[75,2558+54])
                                              Pexp_ident "rev_rest" (src/spellcheck.ml[75,2558+46]..[75,2558+54])
                                        ]
                                  ]
                              <arg>
                              Nolabel
                                expression (src/spellcheck.ml[76,2615+11]..[76,2615+58])
                                  Pexp_ifthenelse
                                  expression (src/spellcheck.ml[76,2615+15]..[76,2615+37])
                                    Pexp_apply
                                    expression (src/spellcheck.ml[76,2615+15]..[76,2615+28])
                                      Pexp_ident "List.is_empty" (src/spellcheck.ml[76,2615+15]..[76,2615+28])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/spellcheck.ml[76,2615+29]..[76,2615+37])
                                          Pexp_ident "rev_rest" (src/spellcheck.ml[76,2615+29]..[76,2615+37])
                                    ]
                                  expression (src/spellcheck.ml[76,2615+43]..[76,2615+45])
                                    Pexp_constant PConst_string("",(src/spellcheck.ml[76,2615+44]..[76,2615+44]),None)
                                  Some
                                    expression (src/spellcheck.ml[76,2615+51]..[76,2615+57])
                                      Pexp_constant PConst_string(" or ",(src/spellcheck.ml[76,2615+52]..[76,2615+56]),None)
                              <arg>
                              Nolabel
                                expression (src/spellcheck.ml[77,2674+11]..[77,2674+15])
                                  Pexp_ident "last" (src/spellcheck.ml[77,2674+11]..[77,2674+15])
                            ]
                  ]
    ]
]

[@@@ocaml.text
  " Helpers to provide hints to PPX users for typos or spellchecks. "]
open! Import
exception Cutoff_met 
let levenshtein_distance s t cutoff =
  let m = String.length s
  and n = String.length t in
  if (cutoff = 0) || ((abs (m - n)) >= cutoff)
  then None
  else
    (let d = Array.make_matrix ~dimx:(m + 1) ~dimy:(n + 1) 0 in
     for i = 0 to m do (d.(i)).(0) <- i done;
     for j = 0 to n do (d.(0)).(j) <- j done;
     (let line_min = ref 0 in
      let distance =
        try
          for j = 1 to n do
            (if ((!line_min) >= (cutoff - 1)) && (j >= (cutoff - 1))
             then raise Cutoff_met;
             line_min := (max m n);
             for i = 1 to m do
               (let value =
                  if Char.equal (s.[i - 1]) (t.[j - 1])
                  then (d.(i - 1)).(j - 1)
                  else
                    min (((d.(i - 1)).(j)) + 1)
                      (min (((d.(i)).(j - 1)) + 1)
                         (((d.(i - 1)).(j - 1)) + 1)) in
                (d.(i)).(j) <- value; line_min := (min (!line_min) value))
             done)
          done;
          if ((d.(m)).(n)) < cutoff then Some ((d.(m)).(n)) else None
        with | Cutoff_met -> None in
      distance))
let spellcheck names name =
  let cutoff =
    match String.length name with
    | 1 | 2 -> 0
    | 3 | 4 -> 1
    | 5 | 6 -> 2
    | _ -> 3 in
  let (_, suggestions) =
    List.fold_left names ~init:(Int.max_int, [])
      ~f:(fun ((best_distance, names_at_best_distance) as acc) ->
            fun registered_name ->
              match levenshtein_distance name registered_name cutoff with
              | None -> acc
              | Some dist ->
                  if dist < best_distance
                  then (dist, [registered_name])
                  else
                    if dist > best_distance
                    then acc
                    else (dist, (registered_name :: names_at_best_distance))) in
  match (List.rev suggestions) |> (List.filter ~f:(String.(<>) name)) with
  | [] -> None
  | last::rev_rest ->
      Some
        (Printf.sprintf "Hint: Did you mean %s%s%s?"
           (String.concat ~sep:", " (List.rev rev_rest))
           (if List.is_empty rev_rest then "" else " or ") last)
[
  structure_item (src/spellcheck.ml[1,0+0]..src/spellcheck.ml[1,0+70])
    Tstr_attribute "ocaml.text"
    [
      structure_item (src/spellcheck.ml[1,0+0]..[1,0+70])
        Pstr_eval
        expression (src/spellcheck.ml[1,0+0]..[1,0+70])
          Pexp_constant PConst_string(" Helpers to provide hints to PPX users for typos or spellchecks. ",(src/spellcheck.ml[1,0+0]..[1,0+70]),None)
    ]
  structure_item (src/spellcheck.ml[3,72+0]..src/spellcheck.ml[3,72+12])
    Tstr_open Override
    module_expr (src/spellcheck.ml[3,72+6]..src/spellcheck.ml[3,72+12])
      Tmod_ident "Ppxlib__!.Import"
  structure_item (src/spellcheck.ml[5,86+0]..src/spellcheck.ml[5,86+20])
    Tstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (src/spellcheck.ml[5,86+0]..src/spellcheck.ml[5,86+20])
          pext_name = "Cutoff_met/550"
          pext_kind =
            Text_decl
              []
              None
  structure_item (src/spellcheck.ml[8,183+0]..src/spellcheck.ml[49,1754+12])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/spellcheck.ml[8,183+4]..src/spellcheck.ml[8,183+24])
          Tpat_var "levenshtein_distance/551"
        expression (src/spellcheck.ml[8,183+25]..src/spellcheck.ml[49,1754+12]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/spellcheck.ml[8,183+25]..src/spellcheck.ml[8,183+26])
                Tpat_var "s/553"
              expression (src/spellcheck.ml[8,183+27]..src/spellcheck.ml[49,1754+12]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/spellcheck.ml[8,183+27]..src/spellcheck.ml[8,183+28])
                      Tpat_var "t/554"
                    expression (src/spellcheck.ml[8,183+29]..src/spellcheck.ml[49,1754+12]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/spellcheck.ml[8,183+29]..src/spellcheck.ml[8,183+35])
                            Tpat_var "cutoff/555"
                          expression (src/spellcheck.ml[9,221+2]..src/spellcheck.ml[49,1754+12])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/spellcheck.ml[9,221+6]..src/spellcheck.ml[9,221+7])
                                  Tpat_var "m/556"
                                expression (src/spellcheck.ml[9,221+10]..src/spellcheck.ml[9,221+25])
                                  Texp_apply
                                  expression (src/spellcheck.ml[9,221+10]..src/spellcheck.ml[9,221+23])
                                    Texp_ident "Ppxlib__!.Import.String.length"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/spellcheck.ml[9,221+24]..src/spellcheck.ml[9,221+25])
                                        Texp_ident "s/553"
                                  ]
                              <def>
                                pattern (src/spellcheck.ml[9,221+30]..src/spellcheck.ml[9,221+31])
                                  Tpat_var "n/557"
                                expression (src/spellcheck.ml[9,221+34]..src/spellcheck.ml[9,221+49])
                                  Texp_apply
                                  expression (src/spellcheck.ml[9,221+34]..src/spellcheck.ml[9,221+47])
                                    Texp_ident "Ppxlib__!.Import.String.length"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/spellcheck.ml[9,221+48]..src/spellcheck.ml[9,221+49])
                                        Texp_ident "t/554"
                                  ]
                            ]
                            expression (src/spellcheck.ml[10,274+2]..src/spellcheck.ml[49,1754+12])
                              Texp_ifthenelse
                              expression (src/spellcheck.ml[10,274+5]..src/spellcheck.ml[10,274+40])
                                Texp_apply
                                expression (src/spellcheck.ml[10,274+16]..src/spellcheck.ml[10,274+18])
                                  Texp_ident "Stdlib!.||"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/spellcheck.ml[10,274+5]..src/spellcheck.ml[10,274+15])
                                      Texp_apply
                                      expression (src/spellcheck.ml[10,274+12]..src/spellcheck.ml[10,274+13])
                                        Texp_ident "Ppxlib__!.Import.="
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/spellcheck.ml[10,274+5]..src/spellcheck.ml[10,274+11])
                                            Texp_ident "cutoff/555"
                                        <arg>
                                          Nolabel
                                          expression (src/spellcheck.ml[10,274+14]..src/spellcheck.ml[10,274+15])
                                            Texp_constant Const_int 0
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (src/spellcheck.ml[10,274+19]..src/spellcheck.ml[10,274+40])
                                      Texp_apply
                                      expression (src/spellcheck.ml[10,274+31]..src/spellcheck.ml[10,274+33])
                                        Texp_ident "Ppxlib__!.Import.>="
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/spellcheck.ml[10,274+19]..src/spellcheck.ml[10,274+30])
                                            Texp_apply
                                            expression (src/spellcheck.ml[10,274+19]..src/spellcheck.ml[10,274+22])
                                              Texp_ident "Stdlib!.abs"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/spellcheck.ml[10,274+23]..src/spellcheck.ml[10,274+30])
                                                  Texp_apply
                                                  expression (src/spellcheck.ml[10,274+26]..src/spellcheck.ml[10,274+27])
                                                    Texp_ident "Stdlib!.-"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/spellcheck.ml[10,274+24]..src/spellcheck.ml[10,274+25])
                                                        Texp_ident "m/556"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/spellcheck.ml[10,274+28]..src/spellcheck.ml[10,274+29])
                                                        Texp_ident "n/557"
                                                  ]
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/spellcheck.ml[10,274+34]..src/spellcheck.ml[10,274+40])
                                            Texp_ident "cutoff/555"
                                      ]
                                ]
                              expression (src/spellcheck.ml[10,274+46]..src/spellcheck.ml[10,274+50])
                                Texp_construct "None"
                                []
                              Some
                                expression (src/spellcheck.ml[14,479+4]..src/spellcheck.ml[49,1754+12])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/spellcheck.ml[14,479+8]..src/spellcheck.ml[14,479+9])
                                        Tpat_var "d/760"
                                      expression (src/spellcheck.ml[14,479+12]..src/spellcheck.ml[14,479+59])
                                        Texp_apply
                                        expression (src/spellcheck.ml[14,479+12]..src/spellcheck.ml[14,479+29])
                                          Texp_ident "Ppxlib__!.Import.Array.make_matrix"
                                        [
                                          <arg>
                                            Labelled "dimx"
                                            expression (src/spellcheck.ml[14,479+36]..src/spellcheck.ml[14,479+43])
                                              Texp_apply
                                              expression (src/spellcheck.ml[14,479+39]..src/spellcheck.ml[14,479+40])
                                                Texp_ident "Stdlib!.+"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/spellcheck.ml[14,479+37]..src/spellcheck.ml[14,479+38])
                                                    Texp_ident "m/556"
                                                <arg>
                                                  Nolabel
                                                  expression (src/spellcheck.ml[14,479+41]..src/spellcheck.ml[14,479+42])
                                                    Texp_constant Const_int 1
                                              ]
                                          <arg>
                                            Labelled "dimy"
                                            expression (src/spellcheck.ml[14,479+50]..src/spellcheck.ml[14,479+57])
                                              Texp_apply
                                              expression (src/spellcheck.ml[14,479+53]..src/spellcheck.ml[14,479+54])
                                                Texp_ident "Stdlib!.+"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/spellcheck.ml[14,479+51]..src/spellcheck.ml[14,479+52])
                                                    Texp_ident "n/557"
                                                <arg>
                                                  Nolabel
                                                  expression (src/spellcheck.ml[14,479+55]..src/spellcheck.ml[14,479+56])
                                                    Texp_constant Const_int 1
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/spellcheck.ml[14,479+58]..src/spellcheck.ml[14,479+59])
                                              Texp_constant Const_int 0
                                        ]
                                  ]
                                  expression (src/spellcheck.ml[15,542+4]..src/spellcheck.ml[49,1754+12])
                                    Texp_sequence
                                    expression (src/spellcheck.ml[15,542+4]..src/spellcheck.ml[18,656+8])
                                      Texp_for "i/819" Up
                                      expression (src/spellcheck.ml[15,542+12]..src/spellcheck.ml[15,542+13])
                                        Texp_constant Const_int 0
                                      expression (src/spellcheck.ml[15,542+17]..src/spellcheck.ml[15,542+18])
                                        Texp_ident "m/556"
                                      expression (src/spellcheck.ml[17,635+6]..src/spellcheck.ml[17,635+20])
                                        Texp_apply
                                        expression (src/spellcheck.ml[17,635+6]..src/spellcheck.ml[17,635+20]) ghost
                                          Texp_ident "Ppxlib__!.Import.Array.set"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/spellcheck.ml[17,635+6]..src/spellcheck.ml[17,635+11])
                                              Texp_apply
                                              expression (src/spellcheck.ml[17,635+6]..src/spellcheck.ml[17,635+11]) ghost
                                                Texp_ident "Ppxlib__!.Import.Array.get"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/spellcheck.ml[17,635+6]..src/spellcheck.ml[17,635+7])
                                                    Texp_ident "d/760"
                                                <arg>
                                                  Nolabel
                                                  expression (src/spellcheck.ml[17,635+9]..src/spellcheck.ml[17,635+10])
                                                    Texp_ident "i/819"
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/spellcheck.ml[17,635+13]..src/spellcheck.ml[17,635+14])
                                              Texp_constant Const_int 0
                                          <arg>
                                            Nolabel
                                            expression (src/spellcheck.ml[17,635+19]..src/spellcheck.ml[17,635+20])
                                              Texp_ident "i/819"
                                        ]
                                    expression (src/spellcheck.ml[19,666+4]..src/spellcheck.ml[49,1754+12])
                                      Texp_sequence
                                      expression (src/spellcheck.ml[19,666+4]..src/spellcheck.ml[22,780+8])
                                        Texp_for "j/820" Up
                                        expression (src/spellcheck.ml[19,666+12]..src/spellcheck.ml[19,666+13])
                                          Texp_constant Const_int 0
                                        expression (src/spellcheck.ml[19,666+17]..src/spellcheck.ml[19,666+18])
                                          Texp_ident "n/557"
                                        expression (src/spellcheck.ml[21,759+6]..src/spellcheck.ml[21,759+20])
                                          Texp_apply
                                          expression (src/spellcheck.ml[21,759+6]..src/spellcheck.ml[21,759+20]) ghost
                                            Texp_ident "Ppxlib__!.Import.Array.set"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/spellcheck.ml[21,759+6]..src/spellcheck.ml[21,759+11])
                                                Texp_apply
                                                expression (src/spellcheck.ml[21,759+6]..src/spellcheck.ml[21,759+11]) ghost
                                                  Texp_ident "Ppxlib__!.Import.Array.get"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/spellcheck.ml[21,759+6]..src/spellcheck.ml[21,759+7])
                                                      Texp_ident "d/760"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/spellcheck.ml[21,759+9]..src/spellcheck.ml[21,759+10])
                                                      Texp_constant Const_int 0
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (src/spellcheck.ml[21,759+13]..src/spellcheck.ml[21,759+14])
                                                Texp_ident "j/820"
                                            <arg>
                                              Nolabel
                                              expression (src/spellcheck.ml[21,759+19]..src/spellcheck.ml[21,759+20])
                                                Texp_ident "j/820"
                                          ]
                                      expression (src/spellcheck.ml[25,933+4]..src/spellcheck.ml[49,1754+12])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/spellcheck.ml[25,933+8]..src/spellcheck.ml[25,933+16])
                                              Tpat_var "line_min/821"
                                            expression (src/spellcheck.ml[25,933+19]..src/spellcheck.ml[25,933+24])
                                              Texp_apply
                                              expression (src/spellcheck.ml[25,933+19]..src/spellcheck.ml[25,933+22])
                                                Texp_ident "Stdlib!.ref"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/spellcheck.ml[25,933+23]..src/spellcheck.ml[25,933+24])
                                                    Texp_constant Const_int 0
                                              ]
                                        ]
                                        expression (src/spellcheck.ml[26,961+4]..src/spellcheck.ml[49,1754+12])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/spellcheck.ml[26,961+8]..src/spellcheck.ml[26,961+16])
                                                Tpat_var "distance/822"
                                              expression (src/spellcheck.ml[27,980+6]..src/spellcheck.ml[47,1717+29])
                                                Texp_try
                                                expression (src/spellcheck.ml[28,990+8]..src/spellcheck.ml[46,1657+59])
                                                  Texp_sequence
                                                  expression (src/spellcheck.ml[28,990+8]..src/spellcheck.ml[45,1643+12])
                                                    Texp_for "j/823" Up
                                                    expression (src/spellcheck.ml[28,990+16]..src/spellcheck.ml[28,990+17])
                                                      Texp_constant Const_int 1
                                                    expression (src/spellcheck.ml[28,990+21]..src/spellcheck.ml[28,990+22])
                                                      Texp_ident "n/557"
                                                    expression (src/spellcheck.ml[29,1016+10]..src/spellcheck.ml[44,1628+14])
                                                      Texp_sequence
                                                      expression (src/spellcheck.ml[29,1016+10]..src/spellcheck.ml[29,1016+77])
                                                        Texp_ifthenelse
                                                        expression (src/spellcheck.ml[29,1016+13]..src/spellcheck.ml[29,1016+55])
                                                          Texp_apply
                                                          expression (src/spellcheck.ml[29,1016+37]..src/spellcheck.ml[29,1016+39])
                                                            Texp_ident "Stdlib!.&&"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/spellcheck.ml[29,1016+13]..src/spellcheck.ml[29,1016+36])
                                                                Texp_apply
                                                                expression (src/spellcheck.ml[29,1016+23]..src/spellcheck.ml[29,1016+25])
                                                                  Texp_ident "Ppxlib__!.Import.>="
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/spellcheck.ml[29,1016+13]..src/spellcheck.ml[29,1016+22])
                                                                      Texp_apply
                                                                      expression (src/spellcheck.ml[29,1016+13]..src/spellcheck.ml[29,1016+14])
                                                                        Texp_ident "Stdlib!.!"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/spellcheck.ml[29,1016+14]..src/spellcheck.ml[29,1016+22])
                                                                            Texp_ident "line_min/821"
                                                                      ]
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/spellcheck.ml[29,1016+26]..src/spellcheck.ml[29,1016+36])
                                                                      Texp_apply
                                                                      expression (src/spellcheck.ml[29,1016+33]..src/spellcheck.ml[29,1016+34])
                                                                        Texp_ident "Stdlib!.-"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/spellcheck.ml[29,1016+26]..src/spellcheck.ml[29,1016+32])
                                                                            Texp_ident "cutoff/555"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/spellcheck.ml[29,1016+35]..src/spellcheck.ml[29,1016+36])
                                                                            Texp_constant Const_int 1
                                                                      ]
                                                                ]
                                                            <arg>
                                                              Nolabel
                                                              expression (src/spellcheck.ml[29,1016+40]..src/spellcheck.ml[29,1016+55])
                                                                Texp_apply
                                                                expression (src/spellcheck.ml[29,1016+42]..src/spellcheck.ml[29,1016+44])
                                                                  Texp_ident "Ppxlib__!.Import.>="
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/spellcheck.ml[29,1016+40]..src/spellcheck.ml[29,1016+41])
                                                                      Texp_ident "j/823"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/spellcheck.ml[29,1016+45]..src/spellcheck.ml[29,1016+55])
                                                                      Texp_apply
                                                                      expression (src/spellcheck.ml[29,1016+52]..src/spellcheck.ml[29,1016+53])
                                                                        Texp_ident "Stdlib!.-"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/spellcheck.ml[29,1016+45]..src/spellcheck.ml[29,1016+51])
                                                                            Texp_ident "cutoff/555"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/spellcheck.ml[29,1016+54]..src/spellcheck.ml[29,1016+55])
                                                                            Texp_constant Const_int 1
                                                                      ]
                                                                ]
                                                          ]
                                                        expression (src/spellcheck.ml[29,1016+61]..src/spellcheck.ml[29,1016+77])
                                                          Texp_apply
                                                          expression (src/spellcheck.ml[29,1016+61]..src/spellcheck.ml[29,1016+66])
                                                            Texp_ident "Stdlib!.raise"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/spellcheck.ml[29,1016+67]..src/spellcheck.ml[29,1016+77])
                                                                Texp_construct "Cutoff_met"
                                                                []
                                                          ]
                                                        None
                                                      expression (src/spellcheck.ml[30,1095+10]..src/spellcheck.ml[44,1628+14])
                                                        Texp_sequence
                                                        expression (src/spellcheck.ml[30,1095+10]..src/spellcheck.ml[30,1095+29])
                                                          Texp_apply
                                                          expression (src/spellcheck.ml[30,1095+19]..src/spellcheck.ml[30,1095+21])
                                                            Texp_ident "Stdlib!.:="
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/spellcheck.ml[30,1095+10]..src/spellcheck.ml[30,1095+18])
                                                                Texp_ident "line_min/821"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/spellcheck.ml[30,1095+22]..src/spellcheck.ml[30,1095+29])
                                                                Texp_apply
                                                                expression (src/spellcheck.ml[30,1095+22]..src/spellcheck.ml[30,1095+25])
                                                                  Texp_ident "Ppxlib__!.Import.max"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/spellcheck.ml[30,1095+26]..src/spellcheck.ml[30,1095+27])
                                                                      Texp_ident "m/556"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/spellcheck.ml[30,1095+28]..src/spellcheck.ml[30,1095+29])
                                                                      Texp_ident "n/557"
                                                                ]
                                                          ]
                                                        expression (src/spellcheck.ml[31,1126+10]..src/spellcheck.ml[44,1628+14])
                                                          Texp_for "i/824" Up
                                                          expression (src/spellcheck.ml[31,1126+18]..src/spellcheck.ml[31,1126+19])
                                                            Texp_constant Const_int 1
                                                          expression (src/spellcheck.ml[31,1126+23]..src/spellcheck.ml[31,1126+24])
                                                            Texp_ident "m/556"
                                                          expression (src/spellcheck.ml[32,1154+12]..src/spellcheck.ml[43,1584+43])
                                                            Texp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (src/spellcheck.ml[32,1154+16]..src/spellcheck.ml[32,1154+21])
                                                                  Tpat_var "value/825"
                                                                expression (src/spellcheck.ml[33,1178+14]..src/spellcheck.ml[40,1470+66])
                                                                  Texp_ifthenelse
                                                                  expression (src/spellcheck.ml[33,1178+17]..src/spellcheck.ml[33,1178+47])
                                                                    Texp_apply
                                                                    expression (src/spellcheck.ml[33,1178+17]..src/spellcheck.ml[33,1178+27])
                                                                      Texp_ident "Ppxlib__!.Import.Char.equal"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/spellcheck.ml[33,1178+28]..src/spellcheck.ml[33,1178+37])
                                                                          Texp_apply
                                                                          expression (src/spellcheck.ml[33,1178+28]..src/spellcheck.ml[33,1178+37]) ghost
                                                                            Texp_ident "Ppxlib__!.Import.String.get"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/spellcheck.ml[33,1178+28]..src/spellcheck.ml[33,1178+29])
                                                                                Texp_ident "s/553"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/spellcheck.ml[33,1178+31]..src/spellcheck.ml[33,1178+36])
                                                                                Texp_apply
                                                                                expression (src/spellcheck.ml[33,1178+33]..src/spellcheck.ml[33,1178+34])
                                                                                  Texp_ident "Stdlib!.-"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/spellcheck.ml[33,1178+31]..src/spellcheck.ml[33,1178+32])
                                                                                      Texp_ident "i/824"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/spellcheck.ml[33,1178+35]..src/spellcheck.ml[33,1178+36])
                                                                                      Texp_constant Const_int 1
                                                                                ]
                                                                          ]
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/spellcheck.ml[33,1178+38]..src/spellcheck.ml[33,1178+47])
                                                                          Texp_apply
                                                                          expression (src/spellcheck.ml[33,1178+38]..src/spellcheck.ml[33,1178+47]) ghost
                                                                            Texp_ident "Ppxlib__!.Import.String.get"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/spellcheck.ml[33,1178+38]..src/spellcheck.ml[33,1178+39])
                                                                                Texp_ident "t/554"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/spellcheck.ml[33,1178+41]..src/spellcheck.ml[33,1178+46])
                                                                                Texp_apply
                                                                                expression (src/spellcheck.ml[33,1178+43]..src/spellcheck.ml[33,1178+44])
                                                                                  Texp_ident "Stdlib!.-"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/spellcheck.ml[33,1178+41]..src/spellcheck.ml[33,1178+42])
                                                                                      Texp_ident "j/823"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/spellcheck.ml[33,1178+45]..src/spellcheck.ml[33,1178+46])
                                                                                      Texp_constant Const_int 1
                                                                                ]
                                                                          ]
                                                                    ]
                                                                  expression (src/spellcheck.ml[33,1178+53]..src/spellcheck.ml[33,1178+70])
                                                                    Texp_apply
                                                                    expression (src/spellcheck.ml[33,1178+53]..src/spellcheck.ml[33,1178+70]) ghost
                                                                      Texp_ident "Ppxlib__!.Import.Array.get"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/spellcheck.ml[33,1178+53]..src/spellcheck.ml[33,1178+62])
                                                                          Texp_apply
                                                                          expression (src/spellcheck.ml[33,1178+53]..src/spellcheck.ml[33,1178+62]) ghost
                                                                            Texp_ident "Ppxlib__!.Import.Array.get"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/spellcheck.ml[33,1178+53]..src/spellcheck.ml[33,1178+54])
                                                                                Texp_ident "d/760"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/spellcheck.ml[33,1178+56]..src/spellcheck.ml[33,1178+61])
                                                                                Texp_apply
                                                                                expression (src/spellcheck.ml[33,1178+58]..src/spellcheck.ml[33,1178+59])
                                                                                  Texp_ident "Stdlib!.-"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/spellcheck.ml[33,1178+56]..src/spellcheck.ml[33,1178+57])
                                                                                      Texp_ident "i/824"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/spellcheck.ml[33,1178+60]..src/spellcheck.ml[33,1178+61])
                                                                                      Texp_constant Const_int 1
                                                                                ]
                                                                          ]
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/spellcheck.ml[33,1178+64]..src/spellcheck.ml[33,1178+69])
                                                                          Texp_apply
                                                                          expression (src/spellcheck.ml[33,1178+66]..src/spellcheck.ml[33,1178+67])
                                                                            Texp_ident "Stdlib!.-"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/spellcheck.ml[33,1178+64]..src/spellcheck.ml[33,1178+65])
                                                                                Texp_ident "j/823"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/spellcheck.ml[33,1178+68]..src/spellcheck.ml[33,1178+69])
                                                                                Texp_constant Const_int 1
                                                                          ]
                                                                    ]
                                                                  Some
                                                                    expression (src/spellcheck.ml[36,1312+16]..src/spellcheck.ml[40,1470+66])
                                                                      Texp_apply
                                                                      expression (src/spellcheck.ml[36,1312+16]..src/spellcheck.ml[36,1312+19])
                                                                        Texp_ident "Ppxlib__!.Import.min"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/spellcheck.ml[37,1332+18]..src/spellcheck.ml[37,1332+37])
                                                                            Texp_apply
                                                                            expression (src/spellcheck.ml[37,1332+33]..src/spellcheck.ml[37,1332+34])
                                                                              Texp_ident "Stdlib!.+"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/spellcheck.ml[37,1332+19]..src/spellcheck.ml[37,1332+32])
                                                                                  Texp_apply
                                                                                  expression (src/spellcheck.ml[37,1332+19]..src/spellcheck.ml[37,1332+32]) ghost
                                                                                    Texp_ident "Ppxlib__!.Import.Array.get"
                                                                                  [
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/spellcheck.ml[37,1332+19]..src/spellcheck.ml[37,1332+28])
                                                                                        Texp_apply
                                                                                        expression (src/spellcheck.ml[37,1332+19]..src/spellcheck.ml[37,1332+28]) ghost
                                                                                          Texp_ident "Ppxlib__!.Import.Array.get"
                                                                                        [
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (src/spellcheck.ml[37,1332+19]..src/spellcheck.ml[37,1332+20])
                                                                                              Texp_ident "d/760"
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (src/spellcheck.ml[37,1332+22]..src/spellcheck.ml[37,1332+27])
                                                                                              Texp_apply
                                                                                              expression (src/spellcheck.ml[37,1332+24]..src/spellcheck.ml[37,1332+25])
                                                                                                Texp_ident "Stdlib!.-"
                                                                                              [
                                                                                                <arg>
                                                                                                  Nolabel
                                                                                                  expression (src/spellcheck.ml[37,1332+22]..src/spellcheck.ml[37,1332+23])
                                                                                                    Texp_ident "i/824"
                                                                                                <arg>
                                                                                                  Nolabel
                                                                                                  expression (src/spellcheck.ml[37,1332+26]..src/spellcheck.ml[37,1332+27])
                                                                                                    Texp_constant Const_int 1
                                                                                              ]
                                                                                        ]
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/spellcheck.ml[37,1332+30]..src/spellcheck.ml[37,1332+31])
                                                                                        Texp_ident "j/823"
                                                                                  ]
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/spellcheck.ml[37,1332+35]..src/spellcheck.ml[37,1332+36])
                                                                                  Texp_constant Const_int 1
                                                                            ]
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/spellcheck.ml[38,1387+18]..src/spellcheck.ml[40,1470+66])
                                                                            Texp_apply
                                                                            expression (src/spellcheck.ml[38,1387+19]..src/spellcheck.ml[38,1387+22])
                                                                              Texp_ident "Ppxlib__!.Import.min"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/spellcheck.ml[39,1410+21]..src/spellcheck.ml[39,1410+40])
                                                                                  Texp_apply
                                                                                  expression (src/spellcheck.ml[39,1410+36]..src/spellcheck.ml[39,1410+37])
                                                                                    Texp_ident "Stdlib!.+"
                                                                                  [
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/spellcheck.ml[39,1410+22]..src/spellcheck.ml[39,1410+35])
                                                                                        Texp_apply
                                                                                        expression (src/spellcheck.ml[39,1410+22]..src/spellcheck.ml[39,1410+35]) ghost
                                                                                          Texp_ident "Ppxlib__!.Import.Array.get"
                                                                                        [
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (src/spellcheck.ml[39,1410+22]..src/spellcheck.ml[39,1410+27])
                                                                                              Texp_apply
                                                                                              expression (src/spellcheck.ml[39,1410+22]..src/spellcheck.ml[39,1410+27]) ghost
                                                                                                Texp_ident "Ppxlib__!.Import.Array.get"
                                                                                              [
                                                                                                <arg>
                                                                                                  Nolabel
                                                                                                  expression (src/spellcheck.ml[39,1410+22]..src/spellcheck.ml[39,1410+23])
                                                                                                    Texp_ident "d/760"
                                                                                                <arg>
                                                                                                  Nolabel
                                                                                                  expression (src/spellcheck.ml[39,1410+25]..src/spellcheck.ml[39,1410+26])
                                                                                                    Texp_ident "i/824"
                                                                                              ]
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (src/spellcheck.ml[39,1410+29]..src/spellcheck.ml[39,1410+34])
                                                                                              Texp_apply
                                                                                              expression (src/spellcheck.ml[39,1410+31]..src/spellcheck.ml[39,1410+32])
                                                                                                Texp_ident "Stdlib!.-"
                                                                                              [
                                                                                                <arg>
                                                                                                  Nolabel
                                                                                                  expression (src/spellcheck.ml[39,1410+29]..src/spellcheck.ml[39,1410+30])
                                                                                                    Texp_ident "j/823"
                                                                                                <arg>
                                                                                                  Nolabel
                                                                                                  expression (src/spellcheck.ml[39,1410+33]..src/spellcheck.ml[39,1410+34])
                                                                                                    Texp_constant Const_int 1
                                                                                              ]
                                                                                        ]
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/spellcheck.ml[39,1410+38]..src/spellcheck.ml[39,1410+39])
                                                                                        Texp_constant Const_int 1
                                                                                  ]
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/spellcheck.ml[40,1470+21]..src/spellcheck.ml[40,1470+44])
                                                                                  Texp_apply
                                                                                  expression (src/spellcheck.ml[40,1470+40]..src/spellcheck.ml[40,1470+41])
                                                                                    Texp_ident "Stdlib!.+"
                                                                                  [
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/spellcheck.ml[40,1470+22]..src/spellcheck.ml[40,1470+39])
                                                                                        Texp_apply
                                                                                        expression (src/spellcheck.ml[40,1470+22]..src/spellcheck.ml[40,1470+39]) ghost
                                                                                          Texp_ident "Ppxlib__!.Import.Array.get"
                                                                                        [
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (src/spellcheck.ml[40,1470+22]..src/spellcheck.ml[40,1470+31])
                                                                                              Texp_apply
                                                                                              expression (src/spellcheck.ml[40,1470+22]..src/spellcheck.ml[40,1470+31]) ghost
                                                                                                Texp_ident "Ppxlib__!.Import.Array.get"
                                                                                              [
                                                                                                <arg>
                                                                                                  Nolabel
                                                                                                  expression (src/spellcheck.ml[40,1470+22]..src/spellcheck.ml[40,1470+23])
                                                                                                    Texp_ident "d/760"
                                                                                                <arg>
                                                                                                  Nolabel
                                                                                                  expression (src/spellcheck.ml[40,1470+25]..src/spellcheck.ml[40,1470+30])
                                                                                                    Texp_apply
                                                                                                    expression (src/spellcheck.ml[40,1470+27]..src/spellcheck.ml[40,1470+28])
                                                                                                      Texp_ident "Stdlib!.-"
                                                                                                    [
                                                                                                      <arg>
                                                                                                        Nolabel
                                                                                                        expression (src/spellcheck.ml[40,1470+25]..src/spellcheck.ml[40,1470+26])
                                                                                                          Texp_ident "i/824"
                                                                                                      <arg>
                                                                                                        Nolabel
                                                                                                        expression (src/spellcheck.ml[40,1470+29]..src/spellcheck.ml[40,1470+30])
                                                                                                          Texp_constant Const_int 1
                                                                                                    ]
                                                                                              ]
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (src/spellcheck.ml[40,1470+33]..src/spellcheck.ml[40,1470+38])
                                                                                              Texp_apply
                                                                                              expression (src/spellcheck.ml[40,1470+35]..src/spellcheck.ml[40,1470+36])
                                                                                                Texp_ident "Stdlib!.-"
                                                                                              [
                                                                                                <arg>
                                                                                                  Nolabel
                                                                                                  expression (src/spellcheck.ml[40,1470+33]..src/spellcheck.ml[40,1470+34])
                                                                                                    Texp_ident "j/823"
                                                                                                <arg>
                                                                                                  Nolabel
                                                                                                  expression (src/spellcheck.ml[40,1470+37]..src/spellcheck.ml[40,1470+38])
                                                                                                    Texp_constant Const_int 1
                                                                                              ]
                                                                                        ]
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/spellcheck.ml[40,1470+42]..src/spellcheck.ml[40,1470+43])
                                                                                        Texp_constant Const_int 1
                                                                                  ]
                                                                            ]
                                                                      ]
                                                            ]
                                                            expression (src/spellcheck.ml[42,1552+12]..src/spellcheck.ml[43,1584+43])
                                                              Texp_sequence
                                                              expression (src/spellcheck.ml[42,1552+12]..src/spellcheck.ml[42,1552+30])
                                                                Texp_apply
                                                                expression (src/spellcheck.ml[42,1552+12]..src/spellcheck.ml[42,1552+30]) ghost
                                                                  Texp_ident "Ppxlib__!.Import.Array.set"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/spellcheck.ml[42,1552+12]..src/spellcheck.ml[42,1552+17])
                                                                      Texp_apply
                                                                      expression (src/spellcheck.ml[42,1552+12]..src/spellcheck.ml[42,1552+17]) ghost
                                                                        Texp_ident "Ppxlib__!.Import.Array.get"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/spellcheck.ml[42,1552+12]..src/spellcheck.ml[42,1552+13])
                                                                            Texp_ident "d/760"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/spellcheck.ml[42,1552+15]..src/spellcheck.ml[42,1552+16])
                                                                            Texp_ident "i/824"
                                                                      ]
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/spellcheck.ml[42,1552+19]..src/spellcheck.ml[42,1552+20])
                                                                      Texp_ident "j/823"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/spellcheck.ml[42,1552+25]..src/spellcheck.ml[42,1552+30])
                                                                      Texp_ident "value/825"
                                                                ]
                                                              expression (src/spellcheck.ml[43,1584+12]..src/spellcheck.ml[43,1584+43])
                                                                Texp_apply
                                                                expression (src/spellcheck.ml[43,1584+21]..src/spellcheck.ml[43,1584+23])
                                                                  Texp_ident "Stdlib!.:="
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/spellcheck.ml[43,1584+12]..src/spellcheck.ml[43,1584+20])
                                                                      Texp_ident "line_min/821"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/spellcheck.ml[43,1584+24]..src/spellcheck.ml[43,1584+43])
                                                                      Texp_apply
                                                                      expression (src/spellcheck.ml[43,1584+24]..src/spellcheck.ml[43,1584+27])
                                                                        Texp_ident "Ppxlib__!.Import.min"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/spellcheck.ml[43,1584+28]..src/spellcheck.ml[43,1584+37])
                                                                            Texp_apply
                                                                            expression (src/spellcheck.ml[43,1584+28]..src/spellcheck.ml[43,1584+29])
                                                                              Texp_ident "Stdlib!.!"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/spellcheck.ml[43,1584+29]..src/spellcheck.ml[43,1584+37])
                                                                                  Texp_ident "line_min/821"
                                                                            ]
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/spellcheck.ml[43,1584+38]..src/spellcheck.ml[43,1584+43])
                                                                            Texp_ident "value/825"
                                                                      ]
                                                                ]
                                                  expression (src/spellcheck.ml[46,1657+8]..src/spellcheck.ml[46,1657+59])
                                                    Texp_ifthenelse
                                                    expression (src/spellcheck.ml[46,1657+11]..src/spellcheck.ml[46,1657+29])
                                                      Texp_apply
                                                      expression (src/spellcheck.ml[46,1657+21]..src/spellcheck.ml[46,1657+22])
                                                        Texp_ident "Ppxlib__!.Import.<"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/spellcheck.ml[46,1657+11]..src/spellcheck.ml[46,1657+20])
                                                            Texp_apply
                                                            expression (src/spellcheck.ml[46,1657+11]..src/spellcheck.ml[46,1657+20]) ghost
                                                              Texp_ident "Ppxlib__!.Import.Array.get"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/spellcheck.ml[46,1657+11]..src/spellcheck.ml[46,1657+16])
                                                                  Texp_apply
                                                                  expression (src/spellcheck.ml[46,1657+11]..src/spellcheck.ml[46,1657+16]) ghost
                                                                    Texp_ident "Ppxlib__!.Import.Array.get"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/spellcheck.ml[46,1657+11]..src/spellcheck.ml[46,1657+12])
                                                                        Texp_ident "d/760"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/spellcheck.ml[46,1657+14]..src/spellcheck.ml[46,1657+15])
                                                                        Texp_ident "m/556"
                                                                  ]
                                                              <arg>
                                                                Nolabel
                                                                expression (src/spellcheck.ml[46,1657+18]..src/spellcheck.ml[46,1657+19])
                                                                  Texp_ident "n/557"
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (src/spellcheck.ml[46,1657+23]..src/spellcheck.ml[46,1657+29])
                                                            Texp_ident "cutoff/555"
                                                      ]
                                                    expression (src/spellcheck.ml[46,1657+35]..src/spellcheck.ml[46,1657+49])
                                                      Texp_construct "Some"
                                                      [
                                                        expression (src/spellcheck.ml[46,1657+40]..src/spellcheck.ml[46,1657+49])
                                                          Texp_apply
                                                          expression (src/spellcheck.ml[46,1657+40]..src/spellcheck.ml[46,1657+49]) ghost
                                                            Texp_ident "Ppxlib__!.Import.Array.get"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/spellcheck.ml[46,1657+40]..src/spellcheck.ml[46,1657+45])
                                                                Texp_apply
                                                                expression (src/spellcheck.ml[46,1657+40]..src/spellcheck.ml[46,1657+45]) ghost
                                                                  Texp_ident "Ppxlib__!.Import.Array.get"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/spellcheck.ml[46,1657+40]..src/spellcheck.ml[46,1657+41])
                                                                      Texp_ident "d/760"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/spellcheck.ml[46,1657+43]..src/spellcheck.ml[46,1657+44])
                                                                      Texp_ident "m/556"
                                                                ]
                                                            <arg>
                                                              Nolabel
                                                              expression (src/spellcheck.ml[46,1657+47]..src/spellcheck.ml[46,1657+48])
                                                                Texp_ident "n/557"
                                                          ]
                                                      ]
                                                    Some
                                                      expression (src/spellcheck.ml[46,1657+55]..src/spellcheck.ml[46,1657+59])
                                                        Texp_construct "None"
                                                        []
                                                [
                                                  <case>
                                                    pattern (src/spellcheck.ml[47,1717+11]..src/spellcheck.ml[47,1717+21])
                                                      Tpat_construct "Cutoff_met"
                                                      []
                                                    expression (src/spellcheck.ml[47,1717+25]..src/spellcheck.ml[47,1717+29])
                                                      Texp_construct "None"
                                                      []
                                                ]
                                                []
                                          ]
                                          expression (src/spellcheck.ml[49,1754+4]..src/spellcheck.ml[49,1754+12])
                                            Texp_ident "distance/822"
                      ]
                ]
          ]
    ]
  structure_item (src/spellcheck.ml[51,1768+0]..src/spellcheck.ml[77,2674+16])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/spellcheck.ml[51,1768+4]..src/spellcheck.ml[51,1768+14])
          Tpat_var "spellcheck/846"
        expression (src/spellcheck.ml[51,1768+15]..src/spellcheck.ml[77,2674+16]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/spellcheck.ml[51,1768+15]..src/spellcheck.ml[51,1768+20])
                Tpat_var "names/848"
              expression (src/spellcheck.ml[51,1768+21]..src/spellcheck.ml[77,2674+16]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/spellcheck.ml[51,1768+21]..src/spellcheck.ml[51,1768+25])
                      Tpat_var "name/849"
                    expression (src/spellcheck.ml[52,1796+2]..src/spellcheck.ml[77,2674+16])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/spellcheck.ml[52,1796+6]..src/spellcheck.ml[52,1796+12])
                            Tpat_var "cutoff/850"
                          expression (src/spellcheck.ml[53,1811+4]..src/spellcheck.ml[57,1896+12])
                            Texp_match
                            expression (src/spellcheck.ml[53,1811+10]..src/spellcheck.ml[53,1811+28])
                              Texp_apply
                              expression (src/spellcheck.ml[53,1811+10]..src/spellcheck.ml[53,1811+23])
                                Texp_ident "Ppxlib__!.Import.String.length"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/spellcheck.ml[53,1811+24]..src/spellcheck.ml[53,1811+28])
                                    Texp_ident "name/849"
                              ]
                            [
                              <case>
                                pattern (src/spellcheck.ml[54,1845+6]..src/spellcheck.ml[54,1845+11])
                                  Tpat_or
                                  pattern (src/spellcheck.ml[54,1845+6]..src/spellcheck.ml[54,1845+7])
                                    Tpat_value
                                    pattern (src/spellcheck.ml[54,1845+6]..src/spellcheck.ml[54,1845+7])
                                      Tpat_constant Const_int 1
                                  pattern (src/spellcheck.ml[54,1845+10]..src/spellcheck.ml[54,1845+11])
                                    Tpat_value
                                    pattern (src/spellcheck.ml[54,1845+10]..src/spellcheck.ml[54,1845+11])
                                      Tpat_constant Const_int 2
                                expression (src/spellcheck.ml[54,1845+15]..src/spellcheck.ml[54,1845+16])
                                  Texp_constant Const_int 0
                              <case>
                                pattern (src/spellcheck.ml[55,1862+6]..src/spellcheck.ml[55,1862+11])
                                  Tpat_or
                                  pattern (src/spellcheck.ml[55,1862+6]..src/spellcheck.ml[55,1862+7])
                                    Tpat_value
                                    pattern (src/spellcheck.ml[55,1862+6]..src/spellcheck.ml[55,1862+7])
                                      Tpat_constant Const_int 3
                                  pattern (src/spellcheck.ml[55,1862+10]..src/spellcheck.ml[55,1862+11])
                                    Tpat_value
                                    pattern (src/spellcheck.ml[55,1862+10]..src/spellcheck.ml[55,1862+11])
                                      Tpat_constant Const_int 4
                                expression (src/spellcheck.ml[55,1862+15]..src/spellcheck.ml[55,1862+16])
                                  Texp_constant Const_int 1
                              <case>
                                pattern (src/spellcheck.ml[56,1879+6]..src/spellcheck.ml[56,1879+11])
                                  Tpat_or
                                  pattern (src/spellcheck.ml[56,1879+6]..src/spellcheck.ml[56,1879+7])
                                    Tpat_value
                                    pattern (src/spellcheck.ml[56,1879+6]..src/spellcheck.ml[56,1879+7])
                                      Tpat_constant Const_int 5
                                  pattern (src/spellcheck.ml[56,1879+10]..src/spellcheck.ml[56,1879+11])
                                    Tpat_value
                                    pattern (src/spellcheck.ml[56,1879+10]..src/spellcheck.ml[56,1879+11])
                                      Tpat_constant Const_int 6
                                expression (src/spellcheck.ml[56,1879+15]..src/spellcheck.ml[56,1879+16])
                                  Texp_constant Const_int 2
                              <case>
                                pattern (src/spellcheck.ml[57,1896+6]..src/spellcheck.ml[57,1896+7])
                                  Tpat_value
                                  pattern (src/spellcheck.ml[57,1896+6]..src/spellcheck.ml[57,1896+7])
                                    Tpat_any
                                expression (src/spellcheck.ml[57,1896+11]..src/spellcheck.ml[57,1896+12])
                                  Texp_constant Const_int 3
                            ]
                            []
                      ]
                      expression (src/spellcheck.ml[59,1914+2]..src/spellcheck.ml[77,2674+16])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/spellcheck.ml[59,1914+6]..src/spellcheck.ml[59,1914+20])
                              Tpat_tuple
                              [
                                pattern (src/spellcheck.ml[59,1914+6]..src/spellcheck.ml[59,1914+7])
                                  Tpat_any
                                pattern (src/spellcheck.ml[59,1914+9]..src/spellcheck.ml[59,1914+20])
                                  Tpat_var "suggestions/851"
                              ]
                            expression (src/spellcheck.ml[60,1937+4]..src/spellcheck.ml[68,2309+67])
                              Texp_apply
                              expression (src/spellcheck.ml[60,1937+4]..src/spellcheck.ml[60,1937+18])
                                Texp_ident "Ppxlib__!.Import.List.fold_left"
                              [
                                <arg>
                                  Labelled "f"
                                  expression (src/spellcheck.ml[61,1986+9]..src/spellcheck.ml[68,2309+67])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/spellcheck.ml[61,1986+14]..src/spellcheck.ml[61,1986+62])
                                          Tpat_alias "acc/927"
                                          pattern (src/spellcheck.ml[61,1986+15]..src/spellcheck.ml[61,1986+54])
                                            Tpat_tuple
                                            [
                                              pattern (src/spellcheck.ml[61,1986+16]..src/spellcheck.ml[61,1986+29])
                                                Tpat_var "best_distance/925"
                                              pattern (src/spellcheck.ml[61,1986+31]..src/spellcheck.ml[61,1986+53])
                                                Tpat_var "names_at_best_distance/926"
                                            ]
                                        expression (src/spellcheck.ml[61,1986+63]..src/spellcheck.ml[68,2309+66]) ghost
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/spellcheck.ml[61,1986+63]..src/spellcheck.ml[61,1986+78])
                                                Tpat_var "registered_name/928"
                                              expression (src/spellcheck.ml[63,2077+8]..src/spellcheck.ml[68,2309+66])
                                                Texp_match
                                                expression (src/spellcheck.ml[63,2077+14]..src/spellcheck.ml[63,2077+62])
                                                  Texp_apply
                                                  expression (src/spellcheck.ml[63,2077+14]..src/spellcheck.ml[63,2077+34])
                                                    Texp_ident "levenshtein_distance/551"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/spellcheck.ml[63,2077+35]..src/spellcheck.ml[63,2077+39])
                                                        Texp_ident "name/849"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/spellcheck.ml[63,2077+40]..src/spellcheck.ml[63,2077+55])
                                                        Texp_ident "registered_name/928"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/spellcheck.ml[63,2077+56]..src/spellcheck.ml[63,2077+62])
                                                        Texp_ident "cutoff/850"
                                                  ]
                                                [
                                                  <case>
                                                    pattern (src/spellcheck.ml[64,2145+10]..src/spellcheck.ml[64,2145+14])
                                                      Tpat_value
                                                      pattern (src/spellcheck.ml[64,2145+10]..src/spellcheck.ml[64,2145+14])
                                                        Tpat_construct "None"
                                                        []
                                                    expression (src/spellcheck.ml[64,2145+18]..src/spellcheck.ml[64,2145+21])
                                                      Texp_ident "acc/927"
                                                  <case>
                                                    pattern (src/spellcheck.ml[65,2167+10]..src/spellcheck.ml[65,2167+19])
                                                      Tpat_value
                                                      pattern (src/spellcheck.ml[65,2167+10]..src/spellcheck.ml[65,2167+19])
                                                        Tpat_construct "Some"
                                                        [
                                                          pattern (src/spellcheck.ml[65,2167+15]..src/spellcheck.ml[65,2167+19])
                                                            Tpat_var "dist/929"
                                                        ]
                                                    expression (src/spellcheck.ml[66,2190+12]..src/spellcheck.ml[68,2309+66])
                                                      Texp_ifthenelse
                                                      expression (src/spellcheck.ml[66,2190+15]..src/spellcheck.ml[66,2190+35])
                                                        Texp_apply
                                                        expression (src/spellcheck.ml[66,2190+20]..src/spellcheck.ml[66,2190+21])
                                                          Texp_ident "Ppxlib__!.Import.<"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/spellcheck.ml[66,2190+15]..src/spellcheck.ml[66,2190+19])
                                                              Texp_ident "dist/929"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/spellcheck.ml[66,2190+22]..src/spellcheck.ml[66,2190+35])
                                                              Texp_ident "best_distance/925"
                                                        ]
                                                      expression (src/spellcheck.ml[66,2190+41]..src/spellcheck.ml[66,2190+68])
                                                        Texp_tuple
                                                        [
                                                          expression (src/spellcheck.ml[66,2190+42]..src/spellcheck.ml[66,2190+46])
                                                            Texp_ident "dist/929"
                                                          expression (src/spellcheck.ml[66,2190+48]..src/spellcheck.ml[66,2190+67])
                                                            Texp_construct "::"
                                                            [
                                                              expression (src/spellcheck.ml[66,2190+50]..src/spellcheck.ml[66,2190+65])
                                                                Texp_ident "registered_name/928"
                                                              expression (src/spellcheck.ml[66,2190+66]..src/spellcheck.ml[66,2190+67]) ghost
                                                                Texp_construct "[]"
                                                                []
                                                            ]
                                                        ]
                                                      Some
                                                        expression (src/spellcheck.ml[67,2259+17]..src/spellcheck.ml[68,2309+66])
                                                          Texp_ifthenelse
                                                          expression (src/spellcheck.ml[67,2259+20]..src/spellcheck.ml[67,2259+40])
                                                            Texp_apply
                                                            expression (src/spellcheck.ml[67,2259+25]..src/spellcheck.ml[67,2259+26])
                                                              Texp_ident "Ppxlib__!.Import.>"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/spellcheck.ml[67,2259+20]..src/spellcheck.ml[67,2259+24])
                                                                  Texp_ident "dist/929"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/spellcheck.ml[67,2259+27]..src/spellcheck.ml[67,2259+40])
                                                                  Texp_ident "best_distance/925"
                                                            ]
                                                          expression (src/spellcheck.ml[67,2259+46]..src/spellcheck.ml[67,2259+49])
                                                            Texp_ident "acc/927"
                                                          Some
                                                            expression (src/spellcheck.ml[68,2309+17]..src/spellcheck.ml[68,2309+66])
                                                              Texp_tuple
                                                              [
                                                                expression (src/spellcheck.ml[68,2309+18]..src/spellcheck.ml[68,2309+22])
                                                                  Texp_ident "dist/929"
                                                                expression (src/spellcheck.ml[68,2309+24]..src/spellcheck.ml[68,2309+65])
                                                                  Texp_construct "::"
                                                                  [
                                                                    expression (src/spellcheck.ml[68,2309+24]..src/spellcheck.ml[68,2309+39])
                                                                      Texp_ident "registered_name/928"
                                                                    expression (src/spellcheck.ml[68,2309+43]..src/spellcheck.ml[68,2309+65])
                                                                      Texp_ident "names_at_best_distance/926"
                                                                  ]
                                                              ]
                                                ]
                                                []
                                          ]
                                    ]
                                <arg>
                                  Labelled "init"
                                  expression (src/spellcheck.ml[60,1937+31]..src/spellcheck.ml[60,1937+48])
                                    Texp_tuple
                                    [
                                      expression (src/spellcheck.ml[60,1937+32]..src/spellcheck.ml[60,1937+43])
                                        Texp_ident "Ppxlib__!.Import.Int.max_int"
                                      expression (src/spellcheck.ml[60,1937+45]..src/spellcheck.ml[60,1937+47])
                                        Texp_construct "[]"
                                        []
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/spellcheck.ml[60,1937+19]..src/spellcheck.ml[60,1937+24])
                                    Texp_ident "names/848"
                              ]
                        ]
                        expression (src/spellcheck.ml[70,2382+2]..src/spellcheck.ml[77,2674+16])
                          Texp_match
                          expression (src/spellcheck.ml[70,2382+8]..src/spellcheck.ml[70,2382+67])
                            Texp_apply
                            expression (src/spellcheck.ml[70,2382+29]..src/spellcheck.ml[70,2382+31])
                              Texp_ident "Stdlib!.|>"
                            [
                              <arg>
                                Nolabel
                                expression (src/spellcheck.ml[70,2382+8]..src/spellcheck.ml[70,2382+28])
                                  Texp_apply
                                  expression (src/spellcheck.ml[70,2382+8]..src/spellcheck.ml[70,2382+16])
                                    Texp_ident "Ppxlib__!.Import.List.rev"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/spellcheck.ml[70,2382+17]..src/spellcheck.ml[70,2382+28])
                                        Texp_ident "suggestions/851"
                                  ]
                              <arg>
                                Nolabel
                                expression (src/spellcheck.ml[70,2382+32]..src/spellcheck.ml[70,2382+67])
                                  Texp_apply
                                  expression (src/spellcheck.ml[70,2382+32]..src/spellcheck.ml[70,2382+43])
                                    Texp_ident "Ppxlib__!.Import.List.filter"
                                  [
                                    <arg>
                                      Labelled "f"
                                      expression (src/spellcheck.ml[70,2382+47]..src/spellcheck.ml[70,2382+67])
                                        Texp_apply
                                        expression (src/spellcheck.ml[70,2382+48]..src/spellcheck.ml[70,2382+61])
                                          Texp_ident "Ppxlib__!.Import.String.<>"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/spellcheck.ml[70,2382+62]..src/spellcheck.ml[70,2382+66])
                                              Texp_ident "name/849"
                                        ]
                                  ]
                            ]
                          [
                            <case>
                              pattern (src/spellcheck.ml[71,2455+4]..src/spellcheck.ml[71,2455+6])
                                Tpat_value
                                pattern (src/spellcheck.ml[71,2455+4]..src/spellcheck.ml[71,2455+6])
                                  Tpat_construct "[]"
                                  []
                              expression (src/spellcheck.ml[71,2455+10]..src/spellcheck.ml[71,2455+14])
                                Texp_construct "None"
                                []
                            <case>
                              pattern (src/spellcheck.ml[72,2470+4]..src/spellcheck.ml[72,2470+20])
                                Tpat_value
                                pattern (src/spellcheck.ml[72,2470+4]..src/spellcheck.ml[72,2470+20])
                                  Tpat_construct "::"
                                  [
                                    pattern (src/spellcheck.ml[72,2470+4]..src/spellcheck.ml[72,2470+8])
                                      Tpat_var "last/942"
                                    pattern (src/spellcheck.ml[72,2470+12]..src/spellcheck.ml[72,2470+20])
                                      Tpat_var "rev_rest/943"
                                  ]
                              expression (src/spellcheck.ml[73,2494+6]..src/spellcheck.ml[77,2674+16])
                                Texp_construct "Some"
                                [
                                  expression (src/spellcheck.ml[74,2505+8]..src/spellcheck.ml[77,2674+16])
                                    Texp_apply
                                    expression (src/spellcheck.ml[74,2505+9]..src/spellcheck.ml[74,2505+23])
                                      Texp_ident "Stdlib!.Printf.sprintf"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/spellcheck.ml[74,2505+24]..src/spellcheck.ml[74,2505+52])
                                          Texp_construct "CamlinternalFormatBasics.Format"
                                          [
                                            expression (src/spellcheck.ml[74,2505+24]..src/spellcheck.ml[74,2505+52]) ghost
                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                              [
                                                expression (src/spellcheck.ml[74,2505+24]..src/spellcheck.ml[74,2505+52]) ghost
                                                  Texp_constant Const_string("Hint: Did you mean ",(src/spellcheck.ml[74,2505+24]..src/spellcheck.ml[74,2505+52]) ghost,None)
                                                expression (src/spellcheck.ml[74,2505+24]..src/spellcheck.ml[74,2505+52]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.String"
                                                  [
                                                    expression (src/spellcheck.ml[74,2505+24]..src/spellcheck.ml[74,2505+52]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                                      []
                                                    expression (src/spellcheck.ml[74,2505+24]..src/spellcheck.ml[74,2505+52]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.String"
                                                      [
                                                        expression (src/spellcheck.ml[74,2505+24]..src/spellcheck.ml[74,2505+52]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                                          []
                                                        expression (src/spellcheck.ml[74,2505+24]..src/spellcheck.ml[74,2505+52]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.String"
                                                          [
                                                            expression (src/spellcheck.ml[74,2505+24]..src/spellcheck.ml[74,2505+52]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.No_padding"
                                                              []
                                                            expression (src/spellcheck.ml[74,2505+24]..src/spellcheck.ml[74,2505+52]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                              [
                                                                expression (src/spellcheck.ml[74,2505+24]..src/spellcheck.ml[74,2505+52]) ghost
                                                                  Texp_constant Const_char 3f
                                                                expression (src/spellcheck.ml[74,2505+24]..src/spellcheck.ml[74,2505+52]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                  []
                                                              ]
                                                          ]
                                                      ]
                                                  ]
                                              ]
                                            expression (src/spellcheck.ml[74,2505+24]..src/spellcheck.ml[74,2505+52]) ghost
                                              Texp_constant Const_string("Hint: Did you mean %s%s%s?",(src/spellcheck.ml[74,2505+24]..src/spellcheck.ml[74,2505+52]) ghost,None)
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/spellcheck.ml[75,2558+11]..src/spellcheck.ml[75,2558+56])
                                          Texp_apply
                                          expression (src/spellcheck.ml[75,2558+12]..src/spellcheck.ml[75,2558+25])
                                            Texp_ident "Ppxlib__!.Import.String.concat"
                                          [
                                            <arg>
                                              Labelled "sep"
                                              expression (src/spellcheck.ml[75,2558+31]..src/spellcheck.ml[75,2558+35])
                                                Texp_constant Const_string(", ",(src/spellcheck.ml[75,2558+32]..src/spellcheck.ml[75,2558+34]),None)
                                            <arg>
                                              Nolabel
                                              expression (src/spellcheck.ml[75,2558+36]..src/spellcheck.ml[75,2558+55])
                                                Texp_apply
                                                expression (src/spellcheck.ml[75,2558+37]..src/spellcheck.ml[75,2558+45])
                                                  Texp_ident "Ppxlib__!.Import.List.rev"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/spellcheck.ml[75,2558+46]..src/spellcheck.ml[75,2558+54])
                                                      Texp_ident "rev_rest/943"
                                                ]
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/spellcheck.ml[76,2615+11]..src/spellcheck.ml[76,2615+58])
                                          Texp_ifthenelse
                                          expression (src/spellcheck.ml[76,2615+15]..src/spellcheck.ml[76,2615+37])
                                            Texp_apply
                                            expression (src/spellcheck.ml[76,2615+15]..src/spellcheck.ml[76,2615+28])
                                              Texp_ident "Ppxlib__!.Import.List.is_empty"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/spellcheck.ml[76,2615+29]..src/spellcheck.ml[76,2615+37])
                                                  Texp_ident "rev_rest/943"
                                            ]
                                          expression (src/spellcheck.ml[76,2615+43]..src/spellcheck.ml[76,2615+45])
                                            Texp_constant Const_string("",(src/spellcheck.ml[76,2615+44]..src/spellcheck.ml[76,2615+44]),None)
                                          Some
                                            expression (src/spellcheck.ml[76,2615+51]..src/spellcheck.ml[76,2615+57])
                                              Texp_constant Const_string(" or ",(src/spellcheck.ml[76,2615+52]..src/spellcheck.ml[76,2615+56]),None)
                                      <arg>
                                        Nolabel
                                        expression (src/spellcheck.ml[77,2674+11]..src/spellcheck.ml[77,2674+15])
                                          Texp_ident "last/942"
                                    ]
                                ]
                          ]
                          []
                ]
          ]
    ]
]

(seq
  (let
    (Cutoff_met/550 =
       (makeblock 248 "Ppxlib__Spellcheck.Cutoff_met" (caml_fresh_oo_id 0)))
    (setfield_ptr(root-init) 0 (global Ppxlib__Spellcheck!) Cutoff_met/550))
  (let
    (levenshtein_distance/551 =
       (function s/553 t/554 cutoff/555[int]
         (let
           (m/556 =[int] (string.length s/553)
            n/557 =[int] (string.length t/554))
           (if
             (|| (apply (field_imm 73 (global Ppxlib__Import!)) cutoff/555 0)
               (apply (field_imm 78 (global Ppxlib__Import!))
                 (apply (field_imm 20 (global Stdlib!)) (- m/556 n/557))
                 cutoff/555))
             0
             (let
               (d/760 =
                  (apply (field_imm 2 (global Stdlib__arrayLabels!))
                    (+ m/556 1) (+ n/557 1) 0))
               (seq
                 (for i/819 0 to m/556
                   (array.set[int] (array.get[addr] d/760 i/819) 0 i/819))
                 (for j/820 0 to n/557
                   (array.set[int] (array.get[addr] d/760 0) j/820 j/820))
                 (let
                   (line_min/821 = (makemutable 0 (int) 0)
                    distance/822 =
                      (try
                        (seq
                          (for j/823 1 to n/557
                            (seq
                              (if
                                (&&
                                  (apply
                                    (field_imm 78 (global Ppxlib__Import!))
                                    (field_int 0 line_min/821)
                                    (- cutoff/555 1))
                                  (apply
                                    (field_imm 78 (global Ppxlib__Import!))
                                    j/823 (- cutoff/555 1)))
                                (raise
                                  (field_imm 0 (global Ppxlib__Spellcheck!)))
                                0)
                              (setfield_imm 0 line_min/821
                                (apply
                                  (field_imm 80 (global Ppxlib__Import!))
                                  m/556 n/557))
                              (for i/824 1 to m/556
                                (let
                                  (value/825 =[int]
                                     (if
                                       (apply
                                         (field_imm 7
                                           (field_imm 83
                                             (global Ppxlib__Import!)))
                                         (string.get s/553 (- i/824 1))
                                         (string.get t/554 (- j/823 1)))
                                       (array.get[int]
                                         (array.get[addr] d/760 (- i/824 1))
                                         (- j/823 1))
                                       (apply
                                         (field_imm 79
                                           (global Ppxlib__Import!))
                                         (+
                                           (array.get[int]
                                             (array.get[addr] d/760
                                               (- i/824 1))
                                             j/823)
                                           1)
                                         (apply
                                           (field_imm 79
                                             (global Ppxlib__Import!))
                                           (+
                                             (array.get[int]
                                               (array.get[addr] d/760 i/824)
                                               (- j/823 1))
                                             1)
                                           (+
                                             (array.get[int]
                                               (array.get[addr] d/760
                                                 (- i/824 1))
                                               (- j/823 1))
                                             1)))))
                                  (seq
                                    (array.set[int]
                                      (array.get[addr] d/760 i/824) j/823
                                      value/825)
                                    (setfield_imm 0 line_min/821
                                      (apply
                                        (field_imm 79
                                          (global Ppxlib__Import!))
                                        (field_int 0 line_min/821) value/825)))))))
                          (if
                            (apply (field_imm 74 (global Ppxlib__Import!))
                              (array.get[int] (array.get[addr] d/760 m/556)
                                n/557)
                              cutoff/555)
                            (makeblock 0 (int)
                              (array.get[int] (array.get[addr] d/760 m/556)
                                n/557))
                            0))
                       with exn/2374
                        (catch
                          (if
                            (== exn/2374
                              (field_imm 0 (global Ppxlib__Spellcheck!)))
                            0 (exit 1))
                         with (1) (reraise exn/2374))))
                   distance/822)))))))
    (setfield_ptr(root-init) 1 (global Ppxlib__Spellcheck!)
      levenshtein_distance/551))
  (let
    (spellcheck/846 =
       (function names/848 name/849
         (let
           (cutoff/850 =[int]
              (let (*match*/2382 = (string.length name/849))
                (catch
                  (catch
                    (catch
                      (catch
                        (let (switcher/2383 =a (-1+ *match*/2382))
                          (if (isout 3 switcher/2383)
                            (let (switcher/2384 =a (-4+ switcher/2383))
                              (if (isout 1 switcher/2384) (exit 8) (exit 7)))
                            (if (>= switcher/2383 2) (exit 6) (exit 5))))
                       with (8) 3)
                     with (5) 0)
                   with (6) 1)
                 with (7) 2))
            *match*/2380 =
              (apply (field_imm 16 (field_imm 91 (global Ppxlib__Import!)))
                (function acc/927 registered_name/928
                  (let
                    (names_at_best_distance/926 =a (field_imm 1 acc/927)
                     best_distance/925 =a (field_imm 0 acc/927)
                     *match*/2376 =
                       (apply (field_imm 1 (global Ppxlib__Spellcheck!))
                         name/849 registered_name/928 cutoff/850))
                    (if *match*/2376
                      (let (dist/929 =a (field_imm 0 *match*/2376))
                        (if
                          (apply (field_imm 74 (global Ppxlib__Import!))
                            dist/929 best_distance/925)
                          (makeblock 0 (int,*) dist/929
                            (makeblock 0 registered_name/928 0))
                          (if
                            (apply (field_imm 75 (global Ppxlib__Import!))
                              dist/929 best_distance/925)
                            acc/927
                            (makeblock 0 (int,*) dist/929
                              (makeblock 0 registered_name/928
                                names_at_best_distance/926)))))
                      acc/927)))
                (makeblock 0 (int,*)
                  (field_imm 0 (field_imm 89 (global Ppxlib__Import!))) 0)
                names/848)
            suggestions/851 =a (field_imm 1 *match*/2380)
            *match*/2381 =a (field_imm 0 *match*/2380)
            *match*/2375 =
              (revapply
                (apply (field_imm 8 (field_imm 91 (global Ppxlib__Import!)))
                  suggestions/851)
                (apply (field_imm 28 (field_imm 91 (global Ppxlib__Import!)))
                  (apply
                    (field_imm 51 (field_imm 96 (global Ppxlib__Import!)))
                    name/849))))
           (if *match*/2375
             (let
               (rev_rest/943 =a (field_imm 1 *match*/2375)
                last/942 =a (field_imm 0 *match*/2375))
               (makeblock 0
                 (apply (field_imm 3 (global Stdlib__printf!))
                   [0:
                    [11:
                     "Hint: Did you mean " [2: 0 [2: 0 [2: 0 [12: '?' 0]]]]]
                    "Hint: Did you mean %s%s%s?"]
                   (apply
                     (field_imm 2 (field_imm 96 (global Ppxlib__Import!)))
                     ", "
                     (apply
                       (field_imm 8 (field_imm 91 (global Ppxlib__Import!)))
                       rev_rest/943))
                   (if
                     (apply
                       (field_imm 59 (field_imm 91 (global Ppxlib__Import!)))
                       rev_rest/943)
                     "" " or ")
                   last/942)))
             0))))
    (setfield_ptr(root-init) 2 (global Ppxlib__Spellcheck!) spellcheck/846))
  0)
(seq
  (let
    (Cutoff_met/550 =
       (makeblock 248 "Ppxlib__Spellcheck.Cutoff_met" (caml_fresh_oo_id 0)))
    (setfield_ptr(root-init) 0 (global Ppxlib__Spellcheck!) Cutoff_met/550))
  (let
    (levenshtein_distance/551 =
       (function s/553 t/554 cutoff/555[int]
         (let
           (m/556 =[int] (string.length s/553)
            n/557 =[int] (string.length t/554))
           (if
             (|| (apply (field_imm 73 (global Ppxlib__Import!)) cutoff/555 0)
               (apply (field_imm 78 (global Ppxlib__Import!))
                 (apply (field_imm 20 (global Stdlib!)) (- m/556 n/557))
                 cutoff/555))
             0
             (let
               (d/760 =
                  (apply (field_imm 2 (global Stdlib__arrayLabels!))
                    (+ m/556 1) (+ n/557 1) 0))
               (seq
                 (for i/819 0 to m/556
                   (array.set[int] (array.get[addr] d/760 i/819) 0 i/819))
                 (for j/820 0 to n/557
                   (array.set[int] (array.get[addr] d/760 0) j/820 j/820))
                 (let (line_min/821 =v[int] 0)
                   (try
                     (seq
                       (for j/823 1 to n/557
                         (seq
                           (if
                             (&&
                               (apply (field_imm 78 (global Ppxlib__Import!))
                                 line_min/821 (- cutoff/555 1))
                               (apply (field_imm 78 (global Ppxlib__Import!))
                                 j/823 (- cutoff/555 1)))
                             (raise
                               (field_imm 0 (global Ppxlib__Spellcheck!)))
                             0)
                           (assign line_min/821
                             (apply (field_imm 80 (global Ppxlib__Import!))
                               m/556 n/557))
                           (for i/824 1 to m/556
                             (let
                               (value/825 =[int]
                                  (if
                                    (apply
                                      (field_imm 7
                                        (field_imm 83
                                          (global Ppxlib__Import!)))
                                      (string.get s/553 (- i/824 1))
                                      (string.get t/554 (- j/823 1)))
                                    (array.get[int]
                                      (array.get[addr] d/760 (- i/824 1))
                                      (- j/823 1))
                                    (apply
                                      (field_imm 79 (global Ppxlib__Import!))
                                      (+
                                        (array.get[int]
                                          (array.get[addr] d/760 (- i/824 1))
                                          j/823)
                                        1)
                                      (apply
                                        (field_imm 79
                                          (global Ppxlib__Import!))
                                        (+
                                          (array.get[int]
                                            (array.get[addr] d/760 i/824)
                                            (- j/823 1))
                                          1)
                                        (+
                                          (array.get[int]
                                            (array.get[addr] d/760
                                              (- i/824 1))
                                            (- j/823 1))
                                          1)))))
                               (seq
                                 (array.set[int]
                                   (array.get[addr] d/760 i/824) j/823
                                   value/825)
                                 (assign line_min/821
                                   (apply
                                     (field_imm 79 (global Ppxlib__Import!))
                                     line_min/821 value/825)))))))
                       (if
                         (apply (field_imm 74 (global Ppxlib__Import!))
                           (array.get[int] (array.get[addr] d/760 m/556)
                             n/557)
                           cutoff/555)
                         (makeblock 0 (int)
                           (array.get[int] (array.get[addr] d/760 m/556)
                             n/557))
                         0))
                    with exn/2374
                     (if
                       (== exn/2374
                         (field_imm 0 (global Ppxlib__Spellcheck!)))
                       0 (reraise exn/2374))))))))))
    (setfield_ptr(root-init) 1 (global Ppxlib__Spellcheck!)
      levenshtein_distance/551))
  (let
    (spellcheck/846 =
       (function names/848 name/849
         (let
           (cutoff/850 =[int]
              (let
                (*match*/2382 = (string.length name/849)
                 switcher/2383 =a (-1+ *match*/2382))
                (if (isout 3 switcher/2383)
                  (if (isout 1 (-4+ switcher/2383)) 3 2)
                  (if (>= switcher/2383 2) 1 0)))
            *match*/2380 =
              (apply (field_imm 16 (field_imm 91 (global Ppxlib__Import!)))
                (function acc/927 registered_name/928
                  (let
                    (best_distance/925 =a (field_imm 0 acc/927)
                     *match*/2376 =
                       (apply (field_imm 1 (global Ppxlib__Spellcheck!))
                         name/849 registered_name/928 cutoff/850))
                    (if *match*/2376
                      (let (dist/929 =a (field_imm 0 *match*/2376))
                        (if
                          (apply (field_imm 74 (global Ppxlib__Import!))
                            dist/929 best_distance/925)
                          (makeblock 0 (int,*) dist/929
                            (makeblock 0 registered_name/928 0))
                          (if
                            (apply (field_imm 75 (global Ppxlib__Import!))
                              dist/929 best_distance/925)
                            acc/927
                            (makeblock 0 (int,*) dist/929
                              (makeblock 0 registered_name/928
                                (field_imm 1 acc/927))))))
                      acc/927)))
                (makeblock 0 (int,*)
                  (field_imm 0 (field_imm 89 (global Ppxlib__Import!))) 0)
                names/848)
            *match*/2375 =
              (apply (field_imm 28 (field_imm 91 (global Ppxlib__Import!)))
                (apply (field_imm 51 (field_imm 96 (global Ppxlib__Import!)))
                  name/849)
                (apply (field_imm 8 (field_imm 91 (global Ppxlib__Import!)))
                  (field_imm 1 *match*/2380))))
           (if *match*/2375
             (let (rev_rest/943 =a (field_imm 1 *match*/2375))
               (makeblock 0
                 (apply (field_imm 3 (global Stdlib__printf!))
                   [0:
                    [11:
                     "Hint: Did you mean " [2: 0 [2: 0 [2: 0 [12: '?' 0]]]]]
                    "Hint: Did you mean %s%s%s?"]
                   (apply
                     (field_imm 2 (field_imm 96 (global Ppxlib__Import!)))
                     ", "
                     (apply
                       (field_imm 8 (field_imm 91 (global Ppxlib__Import!)))
                       rev_rest/943))
                   (if
                     (apply
                       (field_imm 59 (field_imm 91 (global Ppxlib__Import!)))
                       rev_rest/943)
                     "" " or ")
                   (field_imm 0 *match*/2375))))
             0))))
    (setfield_ptr(root-init) 2 (global Ppxlib__Spellcheck!) spellcheck/846))
  0)
