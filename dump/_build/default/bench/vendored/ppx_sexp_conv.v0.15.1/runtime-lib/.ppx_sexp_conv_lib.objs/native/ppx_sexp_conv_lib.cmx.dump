[
  structure_item (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[1,0+0]..[1,0+32])
    Pstr_module
    "Conv" (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[1,0+7]..[1,0+11])
      module_expr (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[1,0+14]..[1,0+32])
        Pmod_ident "Sexplib0.Sexp_conv" (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[1,0+14]..[1,0+32])
  structure_item (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[2,33+0]..[2,33+44])
    Pstr_module
    "Conv_error" (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[2,33+7]..[2,33+17])
      module_expr (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[2,33+20]..[2,33+44])
        Pmod_ident "Sexplib0.Sexp_conv_error" (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[2,33+20]..[2,33+44])
  structure_item (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[3,78+0]..[3,78+43])
    Pstr_module
    "Sexp_grammar" (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[3,78+7]..[3,78+19])
      module_expr (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[3,78+22]..[3,78+43])
        Pmod_ident "Sexplib0.Sexp_grammar" (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[3,78+22]..[3,78+43])
  structure_item (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[5,123+0]..[9,217+3])
    Pstr_module
    "Sexp" (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[5,123+7]..[5,123+11])
      module_expr (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[5,123+14]..[9,217+3])
        Pmod_structure
        [
          structure_item (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[6,144+2]..[6,144+23])
            Pstr_include            module_expr (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[6,144+10]..[6,144+23])
              Pmod_ident "Sexplib0.Sexp" (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[6,144+10]..[6,144+23])
          structure_item (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[8,169+2]..[8,169+47])
            Pstr_value Nonrec
            [
              <def>
                pattern (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[8,169+6]..[8,169+20])
                  Ppat_var "t_sexp_grammar" (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[8,169+6]..[8,169+20])
                expression (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[8,169+23]..[8,169+47])
                  Pexp_ident "Conv.sexp_t_sexp_grammar" (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[8,169+23]..[8,169+47])
            ]
        ]
  structure_item (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[11,222+0]..[11,222+35])
    Pstr_module
    "Sexpable" (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[11,222+7]..[11,222+15])
      module_expr (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[11,222+18]..[11,222+35])
        Pmod_ident "Sexplib0.Sexpable" (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[11,222+18]..[11,222+35])
]

module Conv = Sexplib0.Sexp_conv
module Conv_error = Sexplib0.Sexp_conv_error
module Sexp_grammar = Sexplib0.Sexp_grammar
module Sexp =
  struct
    include Sexplib0.Sexp
    let t_sexp_grammar = Conv.sexp_t_sexp_grammar
  end
module Sexpable = Sexplib0.Sexpable
[
  structure_item (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[1,0+0]..bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[1,0+32])
    Tstr_module
    Conv/91
      module_expr (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[1,0+14]..bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[1,0+32])
        Tmod_ident "Sexplib0!.Sexp_conv"
  structure_item (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[2,33+0]..bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[2,33+44])
    Tstr_module
    Conv_error/92
      module_expr (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[2,33+20]..bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[2,33+44])
        Tmod_ident "Sexplib0!.Sexp_conv_error"
  structure_item (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[3,78+0]..bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[3,78+43])
    Tstr_module
    Sexp_grammar/93
      module_expr (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[3,78+22]..bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[3,78+43])
        Tmod_ident "Sexplib0!.Sexp_grammar"
  structure_item (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[5,123+0]..bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[9,217+3])
    Tstr_module
    Sexp/255
      module_expr (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[5,123+14]..bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[9,217+3])
        Tmod_structure
        [
          structure_item (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[6,144+2]..bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[6,144+23])
            Tstr_include            module_expr (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[6,144+10]..bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[6,144+23])
              module_expr (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[6,144+10]..bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[6,144+23])
                Tmod_ident "Sexplib0!.Sexp"
          structure_item (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[8,169+2]..bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[8,169+47])
            Tstr_value Nonrec
            [
              <def>
                pattern (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[8,169+6]..bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[8,169+20])
                  Tpat_var "t_sexp_grammar/153"
                expression (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[8,169+23]..bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[8,169+47])
                  Texp_ident "Conv/91.sexp_t_sexp_grammar"
            ]
        ]
  structure_item (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[11,222+0]..bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[11,222+35])
    Tstr_module
    Sexpable/256
      module_expr (bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[11,222+18]..bench/vendored/ppx_sexp_conv.v0.15.1/runtime-lib/ppx_sexp_conv_lib.ml[11,222+35])
        Tmod_ident "Sexplib0!.Sexpable"
]

(seq
  (let
    (include/471 =
       (let (let/472 = (global Sexplib0__Sexp!)) (global Sexplib0__Sexp!))
     t_of_sexp/135 =a (field_mut 0 include/471))
    (seq
      (setfield_ptr(root-init) 1 (global Ppx_sexp_conv_lib!) t_of_sexp/135)
      (let (sexp_of_t/136 =a (field_mut 1 include/471))
        (seq
          (setfield_ptr(root-init) 2 (global Ppx_sexp_conv_lib!)
            sexp_of_t/136)
          (let (equal/137 =a (field_mut 2 include/471))
            (seq
              (setfield_ptr(root-init) 3 (global Ppx_sexp_conv_lib!)
                equal/137)
              (let (compare/138 =a (field_mut 3 include/471))
                (seq
                  (setfield_ptr(root-init) 4 (global Ppx_sexp_conv_lib!)
                    compare/138)
                  (let (Not_found_s/139 =a (field_mut 4 include/471))
                    (seq
                      (setfield_ptr(root-init) 5 (global Ppx_sexp_conv_lib!)
                        Not_found_s/139)
                      (let (Of_sexp_error/140 =a (field_mut 5 include/471))
                        (seq
                          (setfield_ptr(root-init) 6
                            (global Ppx_sexp_conv_lib!) Of_sexp_error/140)
                          (let (message/141 =a (field_mut 6 include/471))
                            (seq
                              (setfield_ptr(root-init) 7
                                (global Ppx_sexp_conv_lib!) message/141)
                              (let
                                (default_indent/142 =a
                                   (field_mut 7 include/471))
                                (seq
                                  (setfield_ptr(root-init) 8
                                    (global Ppx_sexp_conv_lib!)
                                    default_indent/142)
                                  (let
                                    (pp_hum/143 =a (field_mut 8 include/471))
                                    (seq
                                      (setfield_ptr(root-init) 9
                                        (global Ppx_sexp_conv_lib!)
                                        pp_hum/143)
                                      (let
                                        (pp_hum_indent/144 =a
                                           (field_mut 9 include/471))
                                        (seq
                                          (setfield_ptr(root-init) 10
                                            (global Ppx_sexp_conv_lib!)
                                            pp_hum_indent/144)
                                          (let
                                            (pp_mach/145 =a
                                               (field_mut 10 include/471))
                                            (seq
                                              (setfield_ptr(root-init) 11
                                                (global Ppx_sexp_conv_lib!)
                                                pp_mach/145)
                                              (let
                                                (pp/146 =a
                                                   (field_mut 11 include/471))
                                                (seq
                                                  (setfield_ptr(root-init) 12
                                                    (global Ppx_sexp_conv_lib!)
                                                    pp/146)
                                                  (let
                                                    (to_string_hum/147 =a
                                                       (field_mut 12
                                                         include/471))
                                                    (seq
                                                      (setfield_ptr(root-init) 13
                                                        (global Ppx_sexp_conv_lib!)
                                                        to_string_hum/147)
                                                      (let
                                                        (to_string_mach/148 =a
                                                           (field_mut 13
                                                             include/471))
                                                        (seq
                                                          (setfield_ptr(root-init) 14
                                                            (global Ppx_sexp_conv_lib!)
                                                            to_string_mach/148)
                                                          (let
                                                            (to_string/149 =a
                                                               (field_mut 14
                                                                 include/471))
                                                            (seq
                                                              (setfield_ptr(root-init) 15
                                                                (global Ppx_sexp_conv_lib!)
                                                                to_string/149)
                                                              (let
                                                                (of_float_style/150 =a
                                                                   (field_mut 15
                                                                    include/471))
                                                                (seq
                                                                  (setfield_ptr(root-init) 16
                                                                    (global Ppx_sexp_conv_lib!)
                                                                    of_float_style/150)
                                                                  (let
                                                                    (of_int_style/151 =a
                                                                    (field_mut 16
                                                                    include/471))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 17
                                                                    (global Ppx_sexp_conv_lib!)
                                                                    of_int_style/151)
                                                                    (let
                                                                    (Private/152 =a
                                                                    (field_mut 17
                                                                    include/471))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 18
                                                                    (global Ppx_sexp_conv_lib!)
                                                                    Private/152)
                                                                    (let
                                                                    (t_sexp_grammar/153 =
                                                                    (field_imm 58
                                                                    (global Sexplib0__Sexp_conv!)))
                                                                    (setfield_ptr(root-init) 19
                                                                    (global Ppx_sexp_conv_lib!)
                                                                    t_sexp_grammar/153))
                                                                    0))))))))))))))))))))))))))))))))))))
  (let
    (Sexp/255 =
       (makeblock 0 (field_imm 1 (global Ppx_sexp_conv_lib!))
         (field_imm 2 (global Ppx_sexp_conv_lib!))
         (field_imm 3 (global Ppx_sexp_conv_lib!))
         (field_imm 4 (global Ppx_sexp_conv_lib!))
         (field_imm 5 (global Ppx_sexp_conv_lib!))
         (field_imm 6 (global Ppx_sexp_conv_lib!))
         (field_imm 7 (global Ppx_sexp_conv_lib!))
         (field_imm 8 (global Ppx_sexp_conv_lib!))
         (field_imm 9 (global Ppx_sexp_conv_lib!))
         (field_imm 10 (global Ppx_sexp_conv_lib!))
         (field_imm 11 (global Ppx_sexp_conv_lib!))
         (field_imm 12 (global Ppx_sexp_conv_lib!))
         (field_imm 13 (global Ppx_sexp_conv_lib!))
         (field_imm 14 (global Ppx_sexp_conv_lib!))
         (field_imm 15 (global Ppx_sexp_conv_lib!))
         (field_imm 16 (global Ppx_sexp_conv_lib!))
         (field_imm 17 (global Ppx_sexp_conv_lib!))
         (field_imm 18 (global Ppx_sexp_conv_lib!))
         (field_imm 19 (global Ppx_sexp_conv_lib!))))
    (seq (setfield_ptr(root-init) 0 (global Ppx_sexp_conv_lib!) Sexp/255) 0)))
(seq
  (let
    (include/471 =
       (let (let/472 = (global Sexplib0__Sexp!)) (global Sexplib0__Sexp!)))
    (seq
      (setfield_ptr(root-init) 1 (global Ppx_sexp_conv_lib!)
        (field_mut 0 include/471))
      (setfield_ptr(root-init) 2 (global Ppx_sexp_conv_lib!)
        (field_mut 1 include/471))
      (setfield_ptr(root-init) 3 (global Ppx_sexp_conv_lib!)
        (field_mut 2 include/471))
      (setfield_ptr(root-init) 4 (global Ppx_sexp_conv_lib!)
        (field_mut 3 include/471))
      (setfield_ptr(root-init) 5 (global Ppx_sexp_conv_lib!)
        (field_mut 4 include/471))
      (setfield_ptr(root-init) 6 (global Ppx_sexp_conv_lib!)
        (field_mut 5 include/471))
      (setfield_ptr(root-init) 7 (global Ppx_sexp_conv_lib!)
        (field_mut 6 include/471))
      (setfield_ptr(root-init) 8 (global Ppx_sexp_conv_lib!)
        (field_mut 7 include/471))
      (setfield_ptr(root-init) 9 (global Ppx_sexp_conv_lib!)
        (field_mut 8 include/471))
      (setfield_ptr(root-init) 10 (global Ppx_sexp_conv_lib!)
        (field_mut 9 include/471))
      (setfield_ptr(root-init) 11 (global Ppx_sexp_conv_lib!)
        (field_mut 10 include/471))
      (setfield_ptr(root-init) 12 (global Ppx_sexp_conv_lib!)
        (field_mut 11 include/471))
      (setfield_ptr(root-init) 13 (global Ppx_sexp_conv_lib!)
        (field_mut 12 include/471))
      (setfield_ptr(root-init) 14 (global Ppx_sexp_conv_lib!)
        (field_mut 13 include/471))
      (setfield_ptr(root-init) 15 (global Ppx_sexp_conv_lib!)
        (field_mut 14 include/471))
      (setfield_ptr(root-init) 16 (global Ppx_sexp_conv_lib!)
        (field_mut 15 include/471))
      (setfield_ptr(root-init) 17 (global Ppx_sexp_conv_lib!)
        (field_mut 16 include/471))
      (setfield_ptr(root-init) 18 (global Ppx_sexp_conv_lib!)
        (field_mut 17 include/471))
      (let
        (t_sexp_grammar/153 = (field_imm 58 (global Sexplib0__Sexp_conv!)))
        (setfield_ptr(root-init) 19 (global Ppx_sexp_conv_lib!)
          t_sexp_grammar/153))
      0))
  (let
    (Sexp/255 =
       (makeblock 0 (field_imm 1 (global Ppx_sexp_conv_lib!))
         (field_imm 2 (global Ppx_sexp_conv_lib!))
         (field_imm 3 (global Ppx_sexp_conv_lib!))
         (field_imm 4 (global Ppx_sexp_conv_lib!))
         (field_imm 5 (global Ppx_sexp_conv_lib!))
         (field_imm 6 (global Ppx_sexp_conv_lib!))
         (field_imm 7 (global Ppx_sexp_conv_lib!))
         (field_imm 8 (global Ppx_sexp_conv_lib!))
         (field_imm 9 (global Ppx_sexp_conv_lib!))
         (field_imm 10 (global Ppx_sexp_conv_lib!))
         (field_imm 11 (global Ppx_sexp_conv_lib!))
         (field_imm 12 (global Ppx_sexp_conv_lib!))
         (field_imm 13 (global Ppx_sexp_conv_lib!))
         (field_imm 14 (global Ppx_sexp_conv_lib!))
         (field_imm 15 (global Ppx_sexp_conv_lib!))
         (field_imm 16 (global Ppx_sexp_conv_lib!))
         (field_imm 17 (global Ppx_sexp_conv_lib!))
         (field_imm 18 (global Ppx_sexp_conv_lib!))
         (field_imm 19 (global Ppx_sexp_conv_lib!))))
    (seq (setfield_ptr(root-init) 0 (global Ppx_sexp_conv_lib!) Sexp/255) 0)))
